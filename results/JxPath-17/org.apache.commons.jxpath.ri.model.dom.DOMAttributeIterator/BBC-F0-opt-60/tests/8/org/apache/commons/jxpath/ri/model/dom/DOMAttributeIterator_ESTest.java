/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 14 03:58:07 GMT 2021
 */

package org.apache.commons.jxpath.ri.model.dom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.Variables;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator;
import org.apache.html.dom.HTMLAppletElementImpl;
import org.apache.html.dom.HTMLDocumentImpl;
import org.apache.html.dom.HTMLHRElementImpl;
import org.apache.html.dom.HTMLHeadingElementImpl;
import org.apache.html.dom.HTMLLinkElementImpl;
import org.apache.wml.dom.WMLDocumentImpl;
import org.apache.wml.dom.WMLPostfieldElementImpl;
import org.apache.wml.dom.WMLUElementImpl;
import org.apache.xerces.dom.DocumentTypeImpl;
import org.apache.xerces.dom.PSVIAttrNSImpl;
import org.apache.xerces.dom.PSVIElementNSImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.w3c.dom.DocumentType;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DOMAttributeIterator_ESTest extends DOMAttributeIterator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      QName qName0 = new QName("*", "*");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.ROOT;
      HTMLLinkElementImpl hTMLLinkElementImpl0 = new HTMLLinkElementImpl(hTMLDocumentImpl0, "vFs3/Q&S643");
      hTMLLinkElementImpl0.setType("vFs3/Q&S643");
      hTMLLinkElementImpl0.setMedia("3X]i46");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, hTMLLinkElementImpl0, locale0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      NodePointer nodePointer1 = dOMAttributeIterator0.getNodePointer();
      assertNotNull(nodePointer1);
      assertEquals(0, dOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      QName qName0 = new QName("xmlns", "xmlns");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = new Locale("xmlns", "xmlns");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "//www.w3.org/2000/xmlns/");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLUElementImpl wMLUElementImpl0 = new WMLUElementImpl(wMLDocumentImpl0, "+>");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, wMLUElementImpl0, locale0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) locale0);
      nodePointer0.createAttribute(jXPathContext0, qName0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      boolean boolean0 = dOMAttributeIterator0.setPosition(1);
      assertEquals(1, dOMAttributeIterator0.getPosition());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      QName qName0 = new QName("org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLHRElementImpl hTMLHRElementImpl0 = new HTMLHRElementImpl(hTMLDocumentImpl0, "_u^8pi)fCg");
      NodePointer nodePointer0 = NodePointer.newChildNodePointer(variablePointer0, qName0, hTMLHRElementImpl0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      assertEquals(0, dOMAttributeIterator0.getPosition());
      
      dOMAttributeIterator0.getNodePointer();
      int int0 = dOMAttributeIterator0.getPosition();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      QName qName0 = new QName("org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLHRElementImpl hTMLHRElementImpl0 = new HTMLHRElementImpl(hTMLDocumentImpl0, "_u^8pi)fCg");
      NodePointer nodePointer0 = NodePointer.newChildNodePointer(variablePointer0, qName0, hTMLHRElementImpl0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      dOMAttributeIterator0.setPosition(Integer.MIN_VALUE);
      int int0 = dOMAttributeIterator0.getPosition();
      assertEquals(Integer.MIN_VALUE, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      QName qName0 = new QName("W\"3<,63ttXMD>P");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      WMLPostfieldElementImpl wMLPostfieldElementImpl0 = new WMLPostfieldElementImpl(wMLDocumentImpl0, "W\"3<,63ttXMD>P");
      NodePointer nodePointer0 = NodePointer.newChildNodePointer((NodePointer) null, qName0, wMLPostfieldElementImpl0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      dOMAttributeIterator0.setPosition(Integer.MIN_VALUE);
      // Undeclared exception!
      try { 
        dOMAttributeIterator0.getNodePointer();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2147483647, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      QName qName0 = new QName("sb5~O6");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      DOMAttributeIterator dOMAttributeIterator0 = null;
      try {
        dOMAttributeIterator0 = new DOMAttributeIterator(variablePointer0, qName0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: sb5~O6
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      QName qName0 = new QName("W\"3<,63ttXMD>P");
      HTMLAppletElementImpl hTMLAppletElementImpl0 = new HTMLAppletElementImpl((HTMLDocumentImpl) null, "+");
      NodePointer nodePointer0 = NodePointer.newChildNodePointer((NodePointer) null, qName0, hTMLAppletElementImpl0);
      DOMAttributeIterator dOMAttributeIterator0 = null;
      try {
        dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
      Variables variables0 = jXPathContext0.getVariables();
      QName qName0 = new QName("v", "v");
      VariablePointer variablePointer0 = new VariablePointer(variables0, qName0);
      DOMAttributeIterator dOMAttributeIterator0 = null;
      try {
        dOMAttributeIterator0 = new DOMAttributeIterator(variablePointer0, qName0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: 'v:v'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      QName qName0 = new QName("xmlns");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, "xmlns", (Locale) null);
      DOMAttributeIterator dOMAttributeIterator0 = null;
      try {
        dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to org.w3c.dom.Node
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      QName qName0 = new QName("org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLHRElementImpl hTMLHRElementImpl0 = new HTMLHRElementImpl(hTMLDocumentImpl0, "_u^8pi)fCg");
      NodePointer nodePointer0 = NodePointer.newChildNodePointer(variablePointer0, qName0, hTMLHRElementImpl0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      boolean boolean0 = dOMAttributeIterator0.setPosition(965);
      assertEquals(965, dOMAttributeIterator0.getPosition());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      QName qName0 = new QName("*");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = new Locale("*", "*");
      HTMLLinkElementImpl hTMLLinkElementImpl0 = new HTMLLinkElementImpl(hTMLDocumentImpl0, "39r,3 ");
      hTMLLinkElementImpl0.setMedia("*");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, hTMLLinkElementImpl0, locale0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      assertEquals(0, dOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      QName qName0 = new QName("xmln");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(hTMLDocumentImpl0, ")", ")", ")");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, pSVIElementNSImpl0, locale0);
      QName qName1 = new QName("xmlns", ")");
      PSVIAttrNSImpl pSVIAttrNSImpl0 = new PSVIAttrNSImpl(hTMLDocumentImpl0, "xmlns", "http://www.w3.org/XML/1998/namespace", "Cannot determine the length of the indexed property ");
      pSVIElementNSImpl0.setAttributeNode(pSVIAttrNSImpl0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName1);
      assertEquals(0, dOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      QName qName0 = new QName("Cxmln");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(hTMLDocumentImpl0, "i#s", "i#s", "i#s");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, pSVIElementNSImpl0, locale0);
      QName qName1 = new QName("xmlns", "i#s");
      PSVIAttrNSImpl pSVIAttrNSImpl0 = new PSVIAttrNSImpl(hTMLDocumentImpl0, "xmlns", "http://www.w3.org/XML/1998/namespace", "i#s");
      pSVIElementNSImpl0.setAttributeNode(pSVIAttrNSImpl0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName1);
      assertEquals(0, dOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      QName qName0 = new QName("xmln");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(hTMLDocumentImpl0, ")", ")", ")");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, pSVIElementNSImpl0, locale0);
      QName qName1 = new QName("xmlns", ")");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) qName1);
      QName qName2 = new QName("xmlns");
      nodePointer0.createAttribute(jXPathContext0, qName2);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName1);
      assertEquals(0, dOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      QName qName0 = new QName("xmlns", "xmlns");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLHeadingElementImpl hTMLHeadingElementImpl0 = new HTMLHeadingElementImpl(hTMLDocumentImpl0, "//www.w3.org/XML/1998/namespace");
      Locale locale0 = Locale.FRANCE;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, hTMLHeadingElementImpl0, locale0);
      QName qName1 = new QName("=", "*");
      nodePointer0.createAttribute((JXPathContext) null, qName0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName1);
      assertEquals(0, dOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      QName qName0 = new QName("*");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.KOREAN;
      PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(hTMLDocumentImpl0, "*", "*", "*");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, pSVIElementNSImpl0, locale0);
      PSVIAttrNSImpl pSVIAttrNSImpl0 = new PSVIAttrNSImpl(hTMLDocumentImpl0, "xmlns", "http://www.w3.org/2000/xmlns/", "<<unknown namespace>>");
      pSVIElementNSImpl0.setAttributeNode(pSVIAttrNSImpl0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      NodePointer nodePointer1 = dOMAttributeIterator0.getNodePointer();
      assertEquals(0, dOMAttributeIterator0.getPosition());
      assertNotNull(nodePointer1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      QName qName0 = new QName("org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLHRElementImpl hTMLHRElementImpl0 = new HTMLHRElementImpl(hTMLDocumentImpl0, "_u^8pi)fCg");
      NodePointer nodePointer0 = NodePointer.newChildNodePointer(variablePointer0, qName0, hTMLHRElementImpl0);
      NodePointer nodePointer1 = nodePointer0.createAttribute(jXPathContext0, qName0);
      assertNotNull(nodePointer1);
      
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer1, qName0);
      assertEquals(0, dOMAttributeIterator0.getPosition());
      
      boolean boolean0 = dOMAttributeIterator0.setPosition(Integer.MIN_VALUE);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      QName qName0 = new QName("xmlns", "xmlns");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLHeadingElementImpl hTMLHeadingElementImpl0 = new HTMLHeadingElementImpl(hTMLDocumentImpl0, "//www.w3.org/XML/1998/namespace");
      Locale locale0 = Locale.FRANCE;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, hTMLHeadingElementImpl0, locale0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      int int0 = dOMAttributeIterator0.getPosition();
      assertEquals(0, int0);
  }
}
