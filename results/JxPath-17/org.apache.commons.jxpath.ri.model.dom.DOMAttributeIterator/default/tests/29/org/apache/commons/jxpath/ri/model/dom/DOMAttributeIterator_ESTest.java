/*
 * This file was automatically generated by EvoSuite
 * Thu Feb 25 23:01:30 GMT 2021
 */

package org.apache.commons.jxpath.ri.model.dom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.apache.commons.jxpath.BasicVariables;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator;
import org.apache.html.dom.HTMLDocumentImpl;
import org.apache.html.dom.HTMLTitleElementImpl;
import org.apache.wml.dom.WMLAnchorElementImpl;
import org.apache.wml.dom.WMLDocumentImpl;
import org.apache.wml.dom.WMLRefreshElementImpl;
import org.apache.xerces.dom.DeferredDocumentImpl;
import org.apache.xerces.dom.DocumentImpl;
import org.apache.xerces.dom.DocumentTypeImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DOMAttributeIterator_ESTest extends DOMAttributeIterator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator", "org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator", "*");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      Locale locale0 = Locale.TAIWAN;
      QName qName0 = new QName("*");
      WMLAnchorElementImpl wMLAnchorElementImpl0 = new WMLAnchorElementImpl(wMLDocumentImpl0, "*");
      wMLAnchorElementImpl0.setAttributeNS("0OL<-`A!<&.oh", "refresh", "org.apache.commons.jxpath.util.KeyManagerUtils$SingleNodeExtendedKeyManager");
      wMLAnchorElementImpl0.setClassName("*");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, wMLAnchorElementImpl0, locale0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      NodePointer nodePointer1 = dOMAttributeIterator0.getNodePointer();
      assertEquals(0, dOMAttributeIterator0.getPosition());
      assertNotNull(nodePointer1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "&`", "&`", "*");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      QName qName0 = new QName("&`", "*");
      WMLAnchorElementImpl wMLAnchorElementImpl0 = new WMLAnchorElementImpl(wMLDocumentImpl0, "*");
      wMLAnchorElementImpl0.setClassName("*");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, wMLAnchorElementImpl0, locale0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      boolean boolean0 = dOMAttributeIterator0.setPosition(1);
      assertEquals(1, dOMAttributeIterator0.getPosition());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      QName qName0 = new QName("bdVY2erah)Zpnu/,qRw", "#F");
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(false, false);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "org.apache.html.dom.HTMLPreElementImpl", "bdVY2erah)Zpnu/,qRw", "*");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      Locale locale0 = Locale.TAIWAN;
      WMLAnchorElementImpl wMLAnchorElementImpl0 = new WMLAnchorElementImpl(wMLDocumentImpl0, "org.apache.html.dom.HTMLPreElementImpl");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, wMLAnchorElementImpl0, locale0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      dOMAttributeIterator0.setPosition(Integer.MIN_VALUE);
      int int0 = dOMAttributeIterator0.getPosition();
      assertEquals(Integer.MIN_VALUE, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      Locale locale0 = Locale.US;
      NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, deferredDocumentImpl0, locale0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, (QName) null);
      dOMAttributeIterator0.getNodePointer();
      // Undeclared exception!
      try { 
        dOMAttributeIterator0.getNodePointer();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VariablePointer variablePointer0 = new VariablePointer((QName) null);
      DOMAttributeIterator dOMAttributeIterator0 = null;
      try {
        dOMAttributeIterator0 = new DOMAttributeIterator(variablePointer0, (QName) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: null
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DOMAttributeIterator dOMAttributeIterator0 = null;
      try {
        dOMAttributeIterator0 = new DOMAttributeIterator((NodePointer) null, (QName) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("@Z6&.Sg");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      DOMAttributeIterator dOMAttributeIterator0 = null;
      try {
        dOMAttributeIterator0 = new DOMAttributeIterator(variablePointer0, qName0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: '@Z6&.Sg'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VariablePointer variablePointer0 = new VariablePointer((QName) null);
      NodePointer nodePointer0 = NodePointer.newChildNodePointer(variablePointer0, (QName) null, variablePointer0);
      DOMAttributeIterator dOMAttributeIterator0 = null;
      try {
        dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, (QName) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.commons.jxpath.ri.model.VariablePointer cannot be cast to org.w3c.dom.Node
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      QName qName0 = new QName("bdVY2erah)Zpnu/,qRw", "org.apache.html.dom.HTMLLabelElementImpl");
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(false);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "{,IkQ f?53b", "`1XdO|", "org.apache.html.dom.HTMLPreElementImpl");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLRefreshElementImpl wMLRefreshElementImpl0 = new WMLRefreshElementImpl(wMLDocumentImpl0, "*");
      Locale locale0 = Locale.TAIWAN;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, wMLRefreshElementImpl0, locale0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      dOMAttributeIterator0.setPosition(3157);
      int int0 = dOMAttributeIterator0.getPosition();
      assertEquals(3157, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      QName qName0 = new QName("bdVY2erah)Zpnu/,qRw", "org.apache.html.dom.HTMLLabelElementImpl");
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(false, false);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "{,IkQ f?53b", "`1XdO|", "org.apache.html.dom.HTMLPreElementImpl");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLRefreshElementImpl wMLRefreshElementImpl0 = new WMLRefreshElementImpl(wMLDocumentImpl0, "*");
      Locale locale0 = Locale.TAIWAN;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, wMLRefreshElementImpl0, locale0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      dOMAttributeIterator0.setPosition(Integer.MIN_VALUE);
      // Undeclared exception!
      try { 
        dOMAttributeIterator0.getNodePointer();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2147483647, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      QName qName0 = new QName("xml", "xml");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTitleElementImpl hTMLTitleElementImpl0 = new HTMLTitleElementImpl(hTMLDocumentImpl0, "xml");
      Locale locale0 = Locale.CANADA;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, hTMLTitleElementImpl0, locale0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      assertEquals(0, dOMAttributeIterator0.getPosition());
      
      dOMAttributeIterator0.getNodePointer();
      assertEquals(1, dOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      QName qName0 = new QName("bdVY2erah)Zpnu/,qRw", "org.apache.html.dom.HTMLLabelElementImpl");
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(false);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "{,IkQ f?53b", "`1XdO|", "org.apache.html.dom.HTMLPreElementImpl");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLRefreshElementImpl wMLRefreshElementImpl0 = new WMLRefreshElementImpl(wMLDocumentImpl0, "*");
      Locale locale0 = Locale.TAIWAN;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, wMLRefreshElementImpl0, locale0);
      QName qName1 = new QName("`1XdO|");
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName1);
      assertEquals(0, dOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      QName qName0 = new QName("*");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "*");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLAnchorElementImpl wMLAnchorElementImpl0 = new WMLAnchorElementImpl(wMLDocumentImpl0, "*");
      wMLAnchorElementImpl0.setXmlLang("*");
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, wMLAnchorElementImpl0, locale0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      assertEquals(0, dOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      QName qName0 = new QName("X^s}b_", "X^s}b_");
      DocumentImpl documentImpl0 = new DocumentImpl(false);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, "X^s}b_", "X^s}b_", "X^s}b_");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      Locale locale0 = new Locale("X^s}b_", "X^s}b_");
      WMLAnchorElementImpl wMLAnchorElementImpl0 = new WMLAnchorElementImpl(wMLDocumentImpl0, "X^s}b_");
      wMLAnchorElementImpl0.setXmlLang("+");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, wMLAnchorElementImpl0, locale0);
      QName qName1 = new QName("xmlns", "+");
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName1);
      assertEquals(0, dOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      QName qName0 = new QName("*");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "*", "*", "*");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      Locale locale0 = Locale.JAPAN;
      WMLAnchorElementImpl wMLAnchorElementImpl0 = new WMLAnchorElementImpl(wMLDocumentImpl0, "*");
      wMLAnchorElementImpl0.setXmlLang("lang");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, wMLAnchorElementImpl0, locale0);
      QName qName1 = new QName("xmlns", "lang");
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName1);
      assertEquals(0, dOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      QName qName0 = new QName("X^s}b_", "X^s}b_");
      DocumentImpl documentImpl0 = new DocumentImpl(false);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, "X^s}b_", "X^s}b_", "X^s}b_");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      Locale locale0 = new Locale("X^s}b_", "X^s}b_");
      WMLAnchorElementImpl wMLAnchorElementImpl0 = new WMLAnchorElementImpl(wMLDocumentImpl0, "X^s}b_");
      wMLAnchorElementImpl0.setAttribute("xmlns", "");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, wMLAnchorElementImpl0, locale0);
      QName qName1 = new QName("xmlns", "+");
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName1);
      assertEquals(0, dOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      QName qName0 = new QName("xmlns", "xmlns");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTitleElementImpl hTMLTitleElementImpl0 = new HTMLTitleElementImpl(hTMLDocumentImpl0, "xmlns");
      Locale locale0 = Locale.ITALIAN;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, hTMLTitleElementImpl0, locale0);
      NodePointer nodePointer1 = nodePointer0.createAttribute((JXPathContext) null, qName0);
      assertFalse(nodePointer1.isCollection());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      QName qName0 = new QName("bdVY2erah)Zpnu/,qRw", "org.apache.html.dom.HTMLLabelElementImpl");
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(false, false);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "{,IkQ f?53b", "`1XdO|", "org.apache.html.dom.HTMLPreElementImpl");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLRefreshElementImpl wMLRefreshElementImpl0 = new WMLRefreshElementImpl(wMLDocumentImpl0, "*");
      Locale locale0 = Locale.TAIWAN;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, wMLRefreshElementImpl0, locale0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      int int0 = dOMAttributeIterator0.getPosition();
      assertEquals(0, int0);
  }
}
