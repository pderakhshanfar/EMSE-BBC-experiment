/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 20 21:32:47 GMT 2021
 */

package org.apache.commons.jxpath.ri.model.dom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.apache.commons.jxpath.BasicVariables;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.Variables;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator;
import org.apache.html.dom.HTMLDocumentImpl;
import org.apache.html.dom.HTMLMapElementImpl;
import org.apache.html.dom.HTMLTableSectionElementImpl;
import org.apache.wml.dom.WMLDocumentImpl;
import org.apache.xerces.dom.AttrNSImpl;
import org.apache.xerces.dom.DocumentTypeImpl;
import org.apache.xerces.parsers.StandardParserConfiguration;
import org.apache.xerces.parsers.XML11Configuration;
import org.apache.xerces.util.SymbolTable;
import org.apache.xerces.util.XMLGrammarPoolImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.w3c.dom.Attr;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DOMAttributeIterator_ESTest extends DOMAttributeIterator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLMapElementImpl hTMLMapElementImpl0 = new HTMLMapElementImpl(hTMLDocumentImpl0, "^ln%s");
      QName qName0 = new QName("^ln%s");
      hTMLMapElementImpl0.setClassName("z&");
      XML11Configuration xML11Configuration0 = new XML11Configuration();
      Locale locale0 = xML11Configuration0.getLocale();
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, hTMLMapElementImpl0, locale0);
      hTMLMapElementImpl0.setName("<<unknown namespace>>");
      QName qName1 = new QName("*", "*");
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName1);
      NodePointer nodePointer1 = dOMAttributeIterator0.getNodePointer();
      assertEquals(0, dOMAttributeIterator0.getPosition());
      assertNotNull(nodePointer1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      QName qName0 = new QName("[rNy?ICIe&i9?8aF7");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLMapElementImpl hTMLMapElementImpl0 = new HTMLMapElementImpl(hTMLDocumentImpl0, "[rNy?ICIe&i9?8aF7");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, hTMLMapElementImpl0, (Locale) null);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      dOMAttributeIterator0.setPosition(Integer.MIN_VALUE);
      // Undeclared exception!
      try { 
        dOMAttributeIterator0.getNodePointer();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2147483647, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLMapElementImpl hTMLMapElementImpl0 = new HTMLMapElementImpl(hTMLDocumentImpl0, "xmlns");
      QName qName0 = new QName("xmlns");
      SymbolTable symbolTable0 = new SymbolTable(429);
      XMLGrammarPoolImpl xMLGrammarPoolImpl0 = new XMLGrammarPoolImpl(429);
      StandardParserConfiguration standardParserConfiguration0 = new StandardParserConfiguration(symbolTable0, xMLGrammarPoolImpl0);
      Locale locale0 = standardParserConfiguration0.getLocale();
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, hTMLMapElementImpl0, locale0);
      hTMLMapElementImpl0.setName("<<unknown namespace>>");
      QName qName1 = new QName("*", "*");
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName1);
      assertEquals(0, dOMAttributeIterator0.getPosition());
      
      boolean boolean0 = dOMAttributeIterator0.setPosition(1);
      assertEquals(1, dOMAttributeIterator0.getPosition());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      QName qName0 = new QName("[rNy?ICIe&i9?8aF7");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLMapElementImpl hTMLMapElementImpl0 = new HTMLMapElementImpl(hTMLDocumentImpl0, "[rNy?ICIe&i9?8aF7");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, hTMLMapElementImpl0, (Locale) null);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      dOMAttributeIterator0.setPosition((-2396));
      int int0 = dOMAttributeIterator0.getPosition();
      assertEquals((-2396), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      QName qName0 = new QName("[rNy?ICIe&i9?8aF7");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLMapElementImpl hTMLMapElementImpl0 = new HTMLMapElementImpl(hTMLDocumentImpl0, "[rNy?ICIe&i9?8aF7");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, hTMLMapElementImpl0, (Locale) null);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      dOMAttributeIterator0.getNodePointer();
      // Undeclared exception!
      try { 
        dOMAttributeIterator0.getNodePointer();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VariablePointer variablePointer0 = new VariablePointer((QName) null);
      DOMAttributeIterator dOMAttributeIterator0 = null;
      try {
        dOMAttributeIterator0 = new DOMAttributeIterator(variablePointer0, (QName) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: null
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      QName qName0 = new QName("H", "]3qZ:oahpv!>S1");
      DOMAttributeIterator dOMAttributeIterator0 = null;
      try {
        dOMAttributeIterator0 = new DOMAttributeIterator((NodePointer) null, qName0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      DOMAttributeIterator dOMAttributeIterator0 = null;
      try {
        dOMAttributeIterator0 = new DOMAttributeIterator(variablePointer0, qName0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: ''
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      QName qName0 = new QName("iU");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, qName0, (Locale) null);
      DOMAttributeIterator dOMAttributeIterator0 = null;
      try {
        dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.commons.jxpath.ri.QName cannot be cast to org.w3c.dom.Node
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLMapElementImpl hTMLMapElementImpl0 = new HTMLMapElementImpl(hTMLDocumentImpl0, "xmlns");
      QName qName0 = new QName("xmlns");
      SymbolTable symbolTable0 = new SymbolTable(429);
      XMLGrammarPoolImpl xMLGrammarPoolImpl0 = new XMLGrammarPoolImpl(429);
      StandardParserConfiguration standardParserConfiguration0 = new StandardParserConfiguration(symbolTable0, xMLGrammarPoolImpl0);
      Locale locale0 = standardParserConfiguration0.getLocale();
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, hTMLMapElementImpl0, locale0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      assertEquals(0, dOMAttributeIterator0.getPosition());
      
      dOMAttributeIterator0.setPosition(1);
      int int0 = dOMAttributeIterator0.getPosition();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLMapElementImpl hTMLMapElementImpl0 = new HTMLMapElementImpl(hTMLDocumentImpl0, "*");
      QName qName0 = new QName("*");
      Locale locale0 = Locale.ITALIAN;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, hTMLMapElementImpl0, locale0);
      AttrNSImpl attrNSImpl0 = new AttrNSImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace", "http://www.w3.org/XML/1998/namespace", "http://www.w3.org/2000/xmlns/");
      hTMLMapElementImpl0.setAttributeNodeNS(attrNSImpl0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      assertEquals(0, dOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLMapElementImpl hTMLMapElementImpl0 = new HTMLMapElementImpl(hTMLDocumentImpl0, "xmlns");
      QName qName0 = new QName("xmlns");
      Locale locale0 = Locale.CANADA;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, hTMLMapElementImpl0, locale0);
      hTMLMapElementImpl0.setName("http://www.w3.org/2000/xmlns/");
      QName qName1 = new QName("xmlns", "lang");
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName1);
      assertEquals(0, dOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLMapElementImpl hTMLMapElementImpl0 = new HTMLMapElementImpl(hTMLDocumentImpl0, "xmlns");
      QName qName0 = new QName("xmlns");
      Locale locale0 = Locale.CANADA;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, hTMLMapElementImpl0, locale0);
      hTMLMapElementImpl0.setLang("7JwO(!bxnX");
      QName qName1 = new QName("xmlns", "lang");
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName1);
      assertEquals(0, dOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLMapElementImpl hTMLMapElementImpl0 = new HTMLMapElementImpl(hTMLDocumentImpl0, "xmlns");
      QName qName0 = new QName("xmlns", "xmlns");
      Attr attr0 = hTMLDocumentImpl0.createAttributeNS("xmlns", "xmlns", "xmlns");
      hTMLMapElementImpl0.setAttributeNode(attr0);
      Locale locale0 = Locale.US;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, hTMLMapElementImpl0, locale0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      assertEquals(0, dOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLMapElementImpl hTMLMapElementImpl0 = new HTMLMapElementImpl(hTMLDocumentImpl0, "xmlns");
      QName qName0 = new QName("xmlns", "xmlns");
      Locale locale0 = Locale.CHINA;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, hTMLMapElementImpl0, locale0);
      AttrNSImpl attrNSImpl0 = new AttrNSImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/", "http://www.w3.org/XML/1998/namespace", "http://www.w3.org/XML/1998/namespace");
      attrNSImpl0.setPrefix("xmlns");
      hTMLMapElementImpl0.setAttributeNodeNS(attrNSImpl0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      assertEquals(0, dOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLMapElementImpl hTMLMapElementImpl0 = new HTMLMapElementImpl(hTMLDocumentImpl0, "*");
      QName qName0 = new QName("*", "*");
      Locale locale0 = Locale.CANADA;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, hTMLMapElementImpl0, locale0);
      AttrNSImpl attrNSImpl0 = new AttrNSImpl(hTMLDocumentImpl0, "*", "*:", "*:");
      hTMLMapElementImpl0.setAttributeNodeNS(attrNSImpl0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      NodePointer nodePointer1 = dOMAttributeIterator0.getNodePointer();
      assertNotNull(nodePointer1);
      assertEquals(0, dOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLMapElementImpl hTMLMapElementImpl0 = new HTMLMapElementImpl(hTMLDocumentImpl0, "xmlns");
      QName qName0 = new QName("xmlns");
      SymbolTable symbolTable0 = new SymbolTable(429);
      XMLGrammarPoolImpl xMLGrammarPoolImpl0 = new XMLGrammarPoolImpl(429);
      StandardParserConfiguration standardParserConfiguration0 = new StandardParserConfiguration(symbolTable0, xMLGrammarPoolImpl0);
      Locale locale0 = standardParserConfiguration0.getLocale();
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, hTMLMapElementImpl0, locale0);
      hTMLMapElementImpl0.setName("http://www.w3.org/2000/xmlns/");
      QName qName1 = new QName("xmlns", "*");
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName1);
      assertEquals(0, dOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLMapElementImpl hTMLMapElementImpl0 = new HTMLMapElementImpl(hTMLDocumentImpl0, "xmlns");
      QName qName0 = new QName("xmlns", "xmlns");
      SymbolTable symbolTable0 = new SymbolTable(429);
      XMLGrammarPoolImpl xMLGrammarPoolImpl0 = new XMLGrammarPoolImpl(429);
      StandardParserConfiguration standardParserConfiguration0 = new StandardParserConfiguration(symbolTable0, xMLGrammarPoolImpl0);
      Locale locale0 = standardParserConfiguration0.getLocale();
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, hTMLMapElementImpl0, locale0);
      NodePointer nodePointer1 = nodePointer0.createAttribute((JXPathContext) null, qName0);
      assertTrue(nodePointer1.isLeaf());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      QName qName0 = new QName("[Ky?IBCse&i9?8aF7");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTableSectionElementImpl hTMLTableSectionElementImpl0 = new HTMLTableSectionElementImpl(hTMLDocumentImpl0, "WAkD'>E=q<)#");
      JXPathContext jXPathContext0 = JXPathContext.newContext((JXPathContext) null, (Object) hTMLTableSectionElementImpl0);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "N=/R");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      Variables variables0 = jXPathContext0.getVariables();
      VariablePointer variablePointer0 = new VariablePointer(variables0, qName0);
      NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) wMLDocumentImpl0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      assertEquals(0, dOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLMapElementImpl hTMLMapElementImpl0 = new HTMLMapElementImpl(hTMLDocumentImpl0, "xmlns");
      QName qName0 = new QName("xmlns");
      SymbolTable symbolTable0 = new SymbolTable(429);
      XMLGrammarPoolImpl xMLGrammarPoolImpl0 = new XMLGrammarPoolImpl(429);
      StandardParserConfiguration standardParserConfiguration0 = new StandardParserConfiguration(symbolTable0, xMLGrammarPoolImpl0);
      Locale locale0 = standardParserConfiguration0.getLocale();
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, hTMLMapElementImpl0, locale0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      int int0 = dOMAttributeIterator0.getPosition();
      assertEquals(0, int0);
  }
}
