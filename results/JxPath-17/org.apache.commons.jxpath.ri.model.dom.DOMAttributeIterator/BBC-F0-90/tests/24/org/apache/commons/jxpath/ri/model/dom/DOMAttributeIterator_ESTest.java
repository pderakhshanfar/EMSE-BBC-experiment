/*
 * This file was automatically generated by EvoSuite
 * Mon Mar 08 01:24:55 GMT 2021
 */

package org.apache.commons.jxpath.ri.model.dom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.apache.commons.jxpath.BasicVariables;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.Variables;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator;
import org.apache.html.dom.HTMLBaseFontElementImpl;
import org.apache.html.dom.HTMLButtonElementImpl;
import org.apache.html.dom.HTMLDocumentImpl;
import org.apache.html.dom.HTMLFrameElementImpl;
import org.apache.html.dom.HTMLImageElementImpl;
import org.apache.html.dom.HTMLIsIndexElementImpl;
import org.apache.html.dom.HTMLParagraphElementImpl;
import org.apache.html.dom.HTMLTableSectionElementImpl;
import org.apache.wml.dom.WMLDocumentImpl;
import org.apache.wml.dom.WMLIElementImpl;
import org.apache.wml.dom.WMLInputElementImpl;
import org.apache.xerces.dom.DocumentTypeImpl;
import org.apache.xerces.dom.PSVIAttrNSImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.w3c.dom.Attr;
import org.w3c.dom.DocumentType;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DOMAttributeIterator_ESTest extends DOMAttributeIterator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLButtonElementImpl hTMLButtonElementImpl0 = new HTMLButtonElementImpl(hTMLDocumentImpl0, "d1lF|qDjM\"9s8f*/SgI");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLButtonElementImpl0);
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("d1lF|qDjM\"9s8f*/SgI", "d1lF|qDjM\"9s8f*/SgI");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      HTMLParagraphElementImpl hTMLParagraphElementImpl0 = new HTMLParagraphElementImpl(hTMLDocumentImpl0, "d1lF|qDjM\"9s8f*/SgI");
      PSVIAttrNSImpl pSVIAttrNSImpl0 = new PSVIAttrNSImpl(hTMLDocumentImpl0, "d1lF|qDjM\"9s8f*/SgI", "r*-N@RQu~8b#?t4I}C(", "r*-N@RQu~8b#?t4I}C(");
      hTMLParagraphElementImpl0.setAttributeNode(pSVIAttrNSImpl0);
      NodePointer nodePointer0 = variablePointer0.createPath(jXPathContext0, (Object) hTMLParagraphElementImpl0);
      hTMLParagraphElementImpl0.setDir("rRc$Zur} 05:EY");
      QName qName1 = new QName("*");
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName1);
      NodePointer nodePointer1 = dOMAttributeIterator0.getNodePointer();
      assertNotNull(nodePointer1);
      assertEquals(0, dOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLButtonElementImpl hTMLButtonElementImpl0 = new HTMLButtonElementImpl(hTMLDocumentImpl0, "d1lF|qDjM\"9s8f*/SgI");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLButtonElementImpl0);
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("d1lF|qDjM\"9s8f*/SgI", "d1lF|qDjM\"9s8f*/SgI");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      HTMLParagraphElementImpl hTMLParagraphElementImpl0 = new HTMLParagraphElementImpl(hTMLDocumentImpl0, "d1lF|qDjM\"9s8f*/SgI");
      PSVIAttrNSImpl pSVIAttrNSImpl0 = new PSVIAttrNSImpl(hTMLDocumentImpl0, "d1lF|qDjM\"9s8f*/SgI", "r*-N@RQu~b#?t4I}C(", "r*-N@RQu~b#?t4I}C(");
      hTMLParagraphElementImpl0.setAttributeNode(pSVIAttrNSImpl0);
      NodePointer nodePointer0 = variablePointer0.createPath(jXPathContext0, (Object) hTMLParagraphElementImpl0);
      QName qName1 = new QName("*");
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName1);
      boolean boolean0 = dOMAttributeIterator0.setPosition(1);
      assertEquals(1, dOMAttributeIterator0.getPosition());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLButtonElementImpl hTMLButtonElementImpl0 = new HTMLButtonElementImpl(hTMLDocumentImpl0, "'1lF|qDjM\"9s8f*/SgI");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLButtonElementImpl0);
      Variables variables0 = jXPathContext0.getVariables();
      QName qName0 = new QName("o?!P");
      VariablePointer variablePointer0 = new VariablePointer(variables0, qName0);
      HTMLTableSectionElementImpl hTMLTableSectionElementImpl0 = new HTMLTableSectionElementImpl(hTMLDocumentImpl0, "92");
      NodePointer nodePointer0 = variablePointer0.createPath(jXPathContext0, (Object) hTMLTableSectionElementImpl0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      assertEquals(0, dOMAttributeIterator0.getPosition());
      
      dOMAttributeIterator0.getNodePointer();
      int int0 = dOMAttributeIterator0.getPosition();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLButtonElementImpl hTMLButtonElementImpl0 = new HTMLButtonElementImpl(hTMLDocumentImpl0, "'1lF|qDjM\"9s8f*/SgI");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLButtonElementImpl0);
      Variables variables0 = jXPathContext0.getVariables();
      QName qName0 = new QName("o?!P");
      VariablePointer variablePointer0 = new VariablePointer(variables0, qName0);
      NodePointer nodePointer0 = variablePointer0.createPath(jXPathContext0, (Object) hTMLButtonElementImpl0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      dOMAttributeIterator0.setPosition(Integer.MIN_VALUE);
      int int0 = dOMAttributeIterator0.getPosition();
      assertEquals(Integer.MIN_VALUE, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      QName qName0 = new QName("");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      BasicVariables basicVariables0 = new BasicVariables();
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      HTMLImageElementImpl hTMLImageElementImpl0 = new HTMLImageElementImpl(hTMLDocumentImpl0, "92");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLImageElementImpl0);
      HTMLFrameElementImpl hTMLFrameElementImpl0 = new HTMLFrameElementImpl(hTMLDocumentImpl0, "fT0h");
      NodePointer nodePointer0 = variablePointer0.createPath(jXPathContext0, (Object) hTMLFrameElementImpl0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      dOMAttributeIterator0.setPosition(1651);
      // Undeclared exception!
      try { 
        dOMAttributeIterator0.getNodePointer();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1650, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      QName qName0 = new QName("", "");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      DOMAttributeIterator dOMAttributeIterator0 = null;
      try {
        dOMAttributeIterator0 = new DOMAttributeIterator(variablePointer0, qName0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: :
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLButtonElementImpl hTMLButtonElementImpl0 = new HTMLButtonElementImpl(hTMLDocumentImpl0, "'1lF|qDjM\"9s8f*/SgI");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLButtonElementImpl0);
      Variables variables0 = jXPathContext0.getVariables();
      QName qName0 = new QName("'1lF|qDjM\"9s8f*/SgI", "'1lF|qDjM\"9s8f*/SgI");
      VariablePointer variablePointer0 = new VariablePointer(variables0, qName0);
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      WMLInputElementImpl wMLInputElementImpl0 = new WMLInputElementImpl(wMLDocumentImpl0, "o?!P");
      variablePointer0.createPath(jXPathContext0, (Object) wMLInputElementImpl0);
      DOMAttributeIterator dOMAttributeIterator0 = null;
      try {
        dOMAttributeIterator0 = new DOMAttributeIterator(variablePointer0, qName0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("", "");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      DOMAttributeIterator dOMAttributeIterator0 = null;
      try {
        dOMAttributeIterator0 = new DOMAttributeIterator(variablePointer0, qName0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: ':'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      QName qName0 = new QName("");
      Locale locale0 = Locale.TAIWAN;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, "", locale0);
      DOMAttributeIterator dOMAttributeIterator0 = null;
      try {
        dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to org.w3c.dom.Node
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLButtonElementImpl hTMLButtonElementImpl0 = new HTMLButtonElementImpl(hTMLDocumentImpl0, "'1lF|qDjM\"9s8f*/SgI");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLButtonElementImpl0);
      Variables variables0 = jXPathContext0.getVariables();
      QName qName0 = new QName("o?!P");
      VariablePointer variablePointer0 = new VariablePointer(variables0, qName0);
      HTMLTableSectionElementImpl hTMLTableSectionElementImpl0 = new HTMLTableSectionElementImpl(hTMLDocumentImpl0, "92");
      NodePointer nodePointer0 = variablePointer0.createPath(jXPathContext0, (Object) hTMLTableSectionElementImpl0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      dOMAttributeIterator0.setPosition((-813));
      // Undeclared exception!
      try { 
        dOMAttributeIterator0.getNodePointer();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLButtonElementImpl hTMLButtonElementImpl0 = new HTMLButtonElementImpl(hTMLDocumentImpl0, "d1lF|qDjM\"9s8f*/SgI");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLButtonElementImpl0);
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("d1lF|qDjM\"9s8f*/SgI", "d1lF|qDjM\"9s8f*/SgI");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      HTMLParagraphElementImpl hTMLParagraphElementImpl0 = new HTMLParagraphElementImpl(hTMLDocumentImpl0, "d1lF|qDjM\"9s8f*/SgI");
      PSVIAttrNSImpl pSVIAttrNSImpl0 = new PSVIAttrNSImpl(hTMLDocumentImpl0, "d1lF|qDjM\"9s8f*/SgI", "t;!fiK<!p:8g?", "t;!fiK<!p:8g?");
      hTMLParagraphElementImpl0.setAttributeNode(pSVIAttrNSImpl0);
      NodePointer nodePointer0 = variablePointer0.createPath(jXPathContext0, (Object) hTMLParagraphElementImpl0);
      QName qName1 = new QName("*");
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName1);
      assertEquals(0, dOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLButtonElementImpl hTMLButtonElementImpl0 = new HTMLButtonElementImpl(hTMLDocumentImpl0, "D`7z`_v-}}fk");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLButtonElementImpl0);
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("D`7z`_v-}}fk", "D`7z`_v-}}fk");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      HTMLParagraphElementImpl hTMLParagraphElementImpl0 = new HTMLParagraphElementImpl(hTMLDocumentImpl0, "D`7z`_v-}}fk");
      PSVIAttrNSImpl pSVIAttrNSImpl0 = new PSVIAttrNSImpl(hTMLDocumentImpl0, "D`7z`_v-}}fk", "qJ<:6m?", "qJ<:6m?");
      hTMLParagraphElementImpl0.setAttributeNode(pSVIAttrNSImpl0);
      variablePointer0.createPath(jXPathContext0, (Object) hTMLParagraphElementImpl0);
      QName qName1 = new QName("qJ<", "*");
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(variablePointer0, qName1);
      assertEquals(0, dOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      QName qName0 = new QName("xmlns", "xmlns");
      HTMLIsIndexElementImpl hTMLIsIndexElementImpl0 = new HTMLIsIndexElementImpl(hTMLDocumentImpl0, "xmlns");
      hTMLIsIndexElementImpl0.setTitle("xmlns");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, hTMLIsIndexElementImpl0, (Locale) null);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      assertEquals(0, dOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      QName qName0 = new QName("xmlns");
      HTMLIsIndexElementImpl hTMLIsIndexElementImpl0 = new HTMLIsIndexElementImpl(hTMLDocumentImpl0, "xmlns");
      hTMLIsIndexElementImpl0.setTitle("xmlns");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, hTMLIsIndexElementImpl0, (Locale) null);
      QName qName1 = new QName("xmlns", "title");
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName1);
      assertEquals(0, dOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      QName qName0 = new QName("xmlns", "xmlns");
      HTMLIsIndexElementImpl hTMLIsIndexElementImpl0 = new HTMLIsIndexElementImpl(hTMLDocumentImpl0, "xmlns");
      Attr attr0 = hTMLDocumentImpl0.createAttribute("xmlns");
      hTMLIsIndexElementImpl0.setAttributeNodeNS(attr0);
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, hTMLIsIndexElementImpl0, (Locale) null);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      assertEquals(0, dOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      QName qName0 = new QName("xmlns", "xmlns");
      HTMLBaseFontElementImpl hTMLBaseFontElementImpl0 = new HTMLBaseFontElementImpl(hTMLDocumentImpl0, "xmlns");
      Locale locale0 = Locale.PRC;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, hTMLBaseFontElementImpl0, locale0);
      hTMLBaseFontElementImpl0.setAttribute("xmlns:", "<<unknown namespace>>");
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      assertEquals(0, dOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      QName qName0 = new QName("xmlns", "*");
      HTMLIsIndexElementImpl hTMLIsIndexElementImpl0 = new HTMLIsIndexElementImpl(hTMLDocumentImpl0, "1xrj4{|fGeiIn@vR");
      hTMLIsIndexElementImpl0.setTitle("*");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, hTMLIsIndexElementImpl0, (Locale) null);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      assertEquals(0, dOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      QName qName0 = new QName("xmlns", "xmlns");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "", "", "4y");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLIElementImpl wMLIElementImpl0 = new WMLIElementImpl(wMLDocumentImpl0, "");
      Locale locale0 = Locale.JAPANESE;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, wMLIElementImpl0, locale0);
      NodePointer nodePointer1 = nodePointer0.createAttribute((JXPathContext) null, qName0);
      assertNotNull(nodePointer1);
      
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer1, qName0);
      assertEquals(0, dOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLButtonElementImpl hTMLButtonElementImpl0 = new HTMLButtonElementImpl(hTMLDocumentImpl0, "'1lF|qDjM\"9s8f*/SgI");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLButtonElementImpl0);
      Variables variables0 = jXPathContext0.getVariables();
      QName qName0 = new QName("o?!P");
      VariablePointer variablePointer0 = new VariablePointer(variables0, qName0);
      HTMLTableSectionElementImpl hTMLTableSectionElementImpl0 = new HTMLTableSectionElementImpl(hTMLDocumentImpl0, "92");
      NodePointer nodePointer0 = variablePointer0.createPath(jXPathContext0, (Object) hTMLTableSectionElementImpl0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      int int0 = dOMAttributeIterator0.getPosition();
      assertEquals(0, int0);
  }
}
