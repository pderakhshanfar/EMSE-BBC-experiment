/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 02 01:25:33 GMT 2021
 */

package org.apache.commons.jxpath.ri.model.dom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.Variables;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator;
import org.apache.html.dom.HTMLAreaElementImpl;
import org.apache.html.dom.HTMLDocumentImpl;
import org.apache.xerces.dom.AttrNSImpl;
import org.apache.xerces.parsers.IntegratedParserConfiguration;
import org.apache.xerces.parsers.NonValidatingConfiguration;
import org.apache.xerces.util.SymbolTable;
import org.apache.xerces.xni.grammars.XMLGrammarPool;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DOMAttributeIterator_ESTest extends DOMAttributeIterator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLAreaElementImpl hTMLAreaElementImpl0 = new HTMLAreaElementImpl(hTMLDocumentImpl0, "^BsOwz3hQ");
      Locale locale0 = Locale.ROOT;
      NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, hTMLAreaElementImpl0, locale0);
      QName qName0 = new QName("-5^czUWFj", "*");
      hTMLAreaElementImpl0.setTabIndex(Integer.MIN_VALUE);
      AttrNSImpl attrNSImpl0 = new AttrNSImpl(hTMLDocumentImpl0, "JH{Sb|t0pqL^l}L\"4", " p.o", ".r+=V");
      hTMLAreaElementImpl0.setAttributeNodeNS(attrNSImpl0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      NodePointer nodePointer1 = dOMAttributeIterator0.getNodePointer();
      assertNotNull(nodePointer1);
      assertEquals(0, dOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLAreaElementImpl hTMLAreaElementImpl0 = new HTMLAreaElementImpl(hTMLDocumentImpl0, "^BsOwz3hQ");
      SymbolTable symbolTable0 = new SymbolTable();
      NonValidatingConfiguration nonValidatingConfiguration0 = new NonValidatingConfiguration(symbolTable0, (XMLGrammarPool) null);
      IntegratedParserConfiguration integratedParserConfiguration0 = new IntegratedParserConfiguration(symbolTable0, (XMLGrammarPool) null, nonValidatingConfiguration0);
      Locale locale0 = integratedParserConfiguration0.getLocale();
      NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, hTMLAreaElementImpl0, locale0);
      QName qName0 = new QName("fBP*{Z", "c2IseGY68*w");
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      dOMAttributeIterator0.setPosition(1060);
      // Undeclared exception!
      try { 
        dOMAttributeIterator0.getNodePointer();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1059, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLAreaElementImpl hTMLAreaElementImpl0 = new HTMLAreaElementImpl(hTMLDocumentImpl0, "^BsOwz3hQ");
      Locale locale0 = Locale.ROOT;
      NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, hTMLAreaElementImpl0, locale0);
      QName qName0 = new QName("*");
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      dOMAttributeIterator0.setPosition((-1969165509));
      // Undeclared exception!
      try { 
        dOMAttributeIterator0.getNodePointer();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLAreaElementImpl hTMLAreaElementImpl0 = new HTMLAreaElementImpl(hTMLDocumentImpl0, "^BsOwz3hQ");
      Locale locale0 = Locale.ROOT;
      NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, hTMLAreaElementImpl0, locale0);
      QName qName0 = new QName("-5^czUWFj", "*");
      AttrNSImpl attrNSImpl0 = new AttrNSImpl(hTMLDocumentImpl0, "JH{Sb|t0pqL^l}L\"4", " p.o", "r+=V");
      hTMLAreaElementImpl0.setAttributeNodeNS(attrNSImpl0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      boolean boolean0 = dOMAttributeIterator0.setPosition(1);
      assertEquals(1, dOMAttributeIterator0.getPosition());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLAreaElementImpl hTMLAreaElementImpl0 = new HTMLAreaElementImpl(hTMLDocumentImpl0, "^BsOwz3hQ");
      SymbolTable symbolTable0 = new SymbolTable();
      NonValidatingConfiguration nonValidatingConfiguration0 = new NonValidatingConfiguration(symbolTable0, (XMLGrammarPool) null);
      IntegratedParserConfiguration integratedParserConfiguration0 = new IntegratedParserConfiguration(symbolTable0, (XMLGrammarPool) null, nonValidatingConfiguration0);
      Locale locale0 = integratedParserConfiguration0.getLocale();
      NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, hTMLAreaElementImpl0, locale0);
      QName qName0 = new QName("http://www.w3.org/XML/1998/namespace", "http://www.w3.org/XML/1998/namespace");
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      assertEquals(0, dOMAttributeIterator0.getPosition());
      
      dOMAttributeIterator0.getNodePointer();
      int int0 = dOMAttributeIterator0.getPosition();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLAreaElementImpl hTMLAreaElementImpl0 = new HTMLAreaElementImpl(hTMLDocumentImpl0, "^BsOwz3hQ");
      SymbolTable symbolTable0 = new SymbolTable();
      NonValidatingConfiguration nonValidatingConfiguration0 = new NonValidatingConfiguration(symbolTable0, (XMLGrammarPool) null);
      IntegratedParserConfiguration integratedParserConfiguration0 = new IntegratedParserConfiguration(symbolTable0, (XMLGrammarPool) null, nonValidatingConfiguration0);
      Locale locale0 = integratedParserConfiguration0.getLocale();
      NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, hTMLAreaElementImpl0, locale0);
      QName qName0 = new QName("http://www.w3.org/XML/1998/namespace", "http://www.w3.org/XML/1998/namespace");
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      dOMAttributeIterator0.setPosition(Integer.MIN_VALUE);
      int int0 = dOMAttributeIterator0.getPosition();
      assertEquals(Integer.MIN_VALUE, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      QName qName0 = new QName("-b#3D[S.");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      DOMAttributeIterator dOMAttributeIterator0 = null;
      try {
        dOMAttributeIterator0 = new DOMAttributeIterator(variablePointer0, qName0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: -b#3D[S.
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      QName qName0 = new QName("");
      VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
      NodePointer nodePointer0 = NodePointer.newChildNodePointer(variablePointer0, qName0, (Object) null);
      DOMAttributeIterator dOMAttributeIterator0 = null;
      try {
        dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JXPathContext jXPathContext0 = JXPathContext.newContext((JXPathContext) null, (Object) null);
      Variables variables0 = jXPathContext0.getVariables();
      QName qName0 = new QName("KEiW$d", "KEiW$d");
      VariablePointer variablePointer0 = new VariablePointer(variables0, qName0);
      DOMAttributeIterator dOMAttributeIterator0 = null;
      try {
        dOMAttributeIterator0 = new DOMAttributeIterator(variablePointer0, qName0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: 'KEiW$d:KEiW$d'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      QName qName0 = new QName("XN3?/rQdG]oV");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, "XN3?/rQdG]oV", (Locale) null);
      DOMAttributeIterator dOMAttributeIterator0 = null;
      try {
        dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to org.w3c.dom.Node
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLAreaElementImpl hTMLAreaElementImpl0 = new HTMLAreaElementImpl(hTMLDocumentImpl0, "^BsOwz3hQ");
      SymbolTable symbolTable0 = new SymbolTable();
      NonValidatingConfiguration nonValidatingConfiguration0 = new NonValidatingConfiguration(symbolTable0, (XMLGrammarPool) null);
      IntegratedParserConfiguration integratedParserConfiguration0 = new IntegratedParserConfiguration(symbolTable0, (XMLGrammarPool) null, nonValidatingConfiguration0);
      Locale locale0 = integratedParserConfiguration0.getLocale();
      NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, hTMLAreaElementImpl0, locale0);
      QName qName0 = new QName("A9{aq]e[bO;Y");
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      assertEquals(0, dOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLAreaElementImpl hTMLAreaElementImpl0 = new HTMLAreaElementImpl(hTMLDocumentImpl0, "^BsOwz3hQ");
      Locale locale0 = Locale.ROOT;
      NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, hTMLAreaElementImpl0, locale0);
      QName qName0 = new QName("*");
      AttrNSImpl attrNSImpl0 = new AttrNSImpl(hTMLDocumentImpl0, "^BsOwz3hQ", "http://www.w3.org/2000/xmlns/", "9-zO");
      hTMLAreaElementImpl0.setAttributeNodeNS(attrNSImpl0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      assertEquals(0, dOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLAreaElementImpl hTMLAreaElementImpl0 = new HTMLAreaElementImpl(hTMLDocumentImpl0, "^BsOwz3hQ");
      Locale locale0 = Locale.ROOT;
      NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, hTMLAreaElementImpl0, locale0);
      AttrNSImpl attrNSImpl0 = new AttrNSImpl(hTMLDocumentImpl0, "^BsOwz3hQ", "http://www.w3.org/2000/xmlns/", "9-zO");
      hTMLAreaElementImpl0.setAttributeNodeNS(attrNSImpl0);
      QName qName0 = new QName("xmlns", "");
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      assertEquals(0, dOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLAreaElementImpl hTMLAreaElementImpl0 = new HTMLAreaElementImpl(hTMLDocumentImpl0, "^BsOwz3hQ");
      Locale locale0 = Locale.ROOT;
      NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, hTMLAreaElementImpl0, locale0);
      AttrNSImpl attrNSImpl0 = new AttrNSImpl(hTMLDocumentImpl0, "R*~=CUq$FHn02-^J?2\"", "", "http://www.w3.org/2000/xmlns/");
      hTMLAreaElementImpl0.setAttributeNodeNS(attrNSImpl0);
      QName qName0 = new QName("xmlns", "http://www.w3.org/2000/xmlns/");
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      assertEquals(0, dOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLAreaElementImpl hTMLAreaElementImpl0 = new HTMLAreaElementImpl(hTMLDocumentImpl0, "^BsOw3h");
      Locale locale0 = Locale.JAPANESE;
      NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, hTMLAreaElementImpl0, locale0);
      QName qName0 = new QName("xmlns", "*");
      AttrNSImpl attrNSImpl0 = new AttrNSImpl(hTMLDocumentImpl0, "xmlns", "xmlns", "xmlns");
      hTMLAreaElementImpl0.setAttributeNodeNS(attrNSImpl0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      assertEquals(0, dOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLAreaElementImpl hTMLAreaElementImpl0 = new HTMLAreaElementImpl(hTMLDocumentImpl0, "*");
      Locale locale0 = Locale.JAPAN;
      NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, hTMLAreaElementImpl0, locale0);
      AttrNSImpl attrNSImpl0 = new AttrNSImpl(hTMLDocumentImpl0, "*", "http://www.w3.org/2000/xmlns/", "k");
      hTMLAreaElementImpl0.setAttributeNodeNS(attrNSImpl0);
      QName qName0 = new QName("http", "*");
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      NodePointer nodePointer1 = dOMAttributeIterator0.getNodePointer();
      assertEquals(0, dOMAttributeIterator0.getPosition());
      assertNotNull(nodePointer1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLAreaElementImpl hTMLAreaElementImpl0 = new HTMLAreaElementImpl(hTMLDocumentImpl0, "^BsOwz)3hQ");
      Locale locale0 = new Locale("^BsOwz)3hQ", "^BsOwz)3hQ", "^BsOwz)3hQ");
      NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, hTMLAreaElementImpl0, locale0);
      QName qName0 = new QName("xmlns", "xmlns");
      Locale.LanguageRange locale_LanguageRange0 = new Locale.LanguageRange("xmlns");
      JXPathContext jXPathContext0 = JXPathContext.newContext((JXPathContext) null, (Object) locale_LanguageRange0);
      NodePointer nodePointer1 = nodePointer0.createAttribute(jXPathContext0, qName0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer1, (QName) null);
      dOMAttributeIterator0.getNodePointer();
      // Undeclared exception!
      try { 
        dOMAttributeIterator0.getNodePointer();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLAreaElementImpl hTMLAreaElementImpl0 = new HTMLAreaElementImpl(hTMLDocumentImpl0, "^BsOwz3hQ");
      SymbolTable symbolTable0 = new SymbolTable();
      NonValidatingConfiguration nonValidatingConfiguration0 = new NonValidatingConfiguration(symbolTable0, (XMLGrammarPool) null);
      IntegratedParserConfiguration integratedParserConfiguration0 = new IntegratedParserConfiguration(symbolTable0, (XMLGrammarPool) null, nonValidatingConfiguration0);
      Locale locale0 = integratedParserConfiguration0.getLocale();
      NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, hTMLAreaElementImpl0, locale0);
      QName qName0 = new QName("fBP*{Z", "c2IseGY68*w");
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      int int0 = dOMAttributeIterator0.getPosition();
      assertEquals(0, int0);
  }
}
