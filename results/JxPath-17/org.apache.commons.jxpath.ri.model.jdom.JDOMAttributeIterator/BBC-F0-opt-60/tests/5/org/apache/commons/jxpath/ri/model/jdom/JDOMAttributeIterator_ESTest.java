/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 08 06:56:35 GMT 2021
 */

package org.apache.commons.jxpath.ri.model.jdom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.apache.commons.jxpath.BasicVariables;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jdom.Element;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JDOMAttributeIterator_ESTest extends JDOMAttributeIterator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("l", "l");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      Element element0 = new Element("l");
      NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) element0);
      element0.setAttribute("l", "<<unknown namespace>>");
      element0.setAttribute("jxpath.debug", "|!hDB,4e");
      QName qName1 = new QName("*");
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName1);
      boolean boolean0 = jDOMAttributeIterator0.setPosition(1);
      assertEquals(1, jDOMAttributeIterator0.getPosition());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName((String) null, (String) null);
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      Element element0 = new Element("value", (String) null);
      JXPathContext jXPathContext0 = JXPathContext.newContext((JXPathContext) null, (Object) element0);
      NodePointer nodePointer0 = variablePointer0.createPath(jXPathContext0, (Object) element0);
      QName qName1 = new QName("<<unknown namespace>>");
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName1);
      jDOMAttributeIterator0.setPosition(Integer.MIN_VALUE);
      // Undeclared exception!
      try { 
        jDOMAttributeIterator0.getNodePointer();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2147483647, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName((String) null, (String) null);
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      Element element0 = new Element("value", (String) null);
      JXPathContext jXPathContext0 = JXPathContext.newContext((JXPathContext) null, (Object) element0);
      NodePointer nodePointer0 = variablePointer0.createPath(jXPathContext0, (Object) element0);
      QName qName1 = new QName(") to be removed");
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName1);
      assertEquals(0, jDOMAttributeIterator0.getPosition());
      
      jDOMAttributeIterator0.getNodePointer();
      int int0 = jDOMAttributeIterator0.getPosition();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName((String) null, (String) null);
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      Element element0 = new Element("value", (String) null);
      JXPathContext jXPathContext0 = JXPathContext.newContext((JXPathContext) null, (Object) element0);
      NodePointer nodePointer0 = variablePointer0.createPath(jXPathContext0, (Object) element0);
      QName qName1 = new QName("<<unknown namespace>>");
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName1);
      jDOMAttributeIterator0.setPosition(Integer.MIN_VALUE);
      int int0 = jDOMAttributeIterator0.getPosition();
      assertEquals(Integer.MIN_VALUE, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName((String) null, (String) null);
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      Element element0 = new Element("value", (String) null);
      JXPathContext jXPathContext0 = JXPathContext.newContext((JXPathContext) null, (Object) element0);
      NodePointer nodePointer0 = variablePointer0.createPath(jXPathContext0, (Object) element0);
      QName qName1 = new QName("<<unknown namespace>>");
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName1);
      jDOMAttributeIterator0.getNodePointer();
      // Undeclared exception!
      try { 
        jDOMAttributeIterator0.getNodePointer();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      QName qName0 = new QName(">T&T%w)s#4I[n|}&-");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      JDOMAttributeIterator jDOMAttributeIterator0 = null;
      try {
        jDOMAttributeIterator0 = new JDOMAttributeIterator(variablePointer0, qName0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: >T&T%w)s#4I[n|}&-
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName(" to type ", ") to be removed");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      Element element0 = new Element("value", "APkj5=mXqp5M]#:p-");
      variablePointer0.createPath((JXPathContext) null, (Object) element0);
      JDOMAttributeIterator jDOMAttributeIterator0 = null;
      try {
        jDOMAttributeIterator0 = new JDOMAttributeIterator(variablePointer0, qName0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("0N},");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      JDOMAttributeIterator jDOMAttributeIterator0 = null;
      try {
        jDOMAttributeIterator0 = new JDOMAttributeIterator(variablePointer0, (QName) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: '0N},'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      QName qName0 = new QName("/Qh{ LN>} ED{H<W';", "/Qh{ LN>} ED{H<W';");
      Locale locale0 = new Locale("/Qh{ LN>} ED{H<W';", "/Qh{ LN>} ED{H<W';", "/Qh{ LN>} ED{H<W';");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, "/Qh{ LN>} ED{H<W';", locale0);
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName0);
      boolean boolean0 = jDOMAttributeIterator0.setPosition((-870));
      assertEquals(0, jDOMAttributeIterator0.getPosition());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("v");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      Element element0 = new Element("v", "v", "v");
      NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) element0);
      NodePointer nodePointer1 = nodePointer0.getValuePointer();
      nodePointer1.createAttribute((JXPathContext) null, qName0);
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(variablePointer0, qName0);
      NodePointer nodePointer2 = jDOMAttributeIterator0.getNodePointer();
      assertNotNull(nodePointer2);
      assertEquals(0, jDOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("APkj5=mXqp5M]#:p-");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      Element element0 = new Element("valu", "APkj5=mXqp5M]#:p-");
      JXPathContext jXPathContext0 = JXPathContext.newContext((JXPathContext) null, (Object) null);
      variablePointer0.createPath(jXPathContext0, (Object) element0);
      NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName0);
      assertEquals(0, jDOMAttributeIterator0.getPosition());
      
      boolean boolean0 = jDOMAttributeIterator0.setPosition(1);
      assertEquals(1, jDOMAttributeIterator0.getPosition());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("n");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      Element element0 = new Element("v");
      JXPathContext jXPathContext0 = JXPathContext.newContext((JXPathContext) null, (Object) null);
      variablePointer0.createPath(jXPathContext0, (Object) element0);
      QName qName1 = new QName("xml", "v");
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(variablePointer0, qName1);
      assertEquals(0, jDOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      QName qName0 = new QName("v", "v");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      Element element0 = new Element("v", "v", "<<unknown namespace>>");
      NodePointer nodePointer0 = NodePointer.newChildNodePointer(variablePointer0, qName0, element0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "v");
      NodePointer nodePointer1 = nodePointer0.createAttribute(jXPathContext0, qName0);
      assertNotNull(nodePointer1);
      
      QName qName1 = new QName("*");
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName1);
      assertEquals(0, jDOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName((String) null, (String) null);
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      Element element0 = new Element("value", (String) null);
      JXPathContext jXPathContext0 = JXPathContext.newContext((JXPathContext) null, (Object) element0);
      NodePointer nodePointer0 = variablePointer0.createPath(jXPathContext0, (Object) element0);
      QName qName1 = new QName("<<unknown namespace>>");
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName1);
      int int0 = jDOMAttributeIterator0.getPosition();
      assertEquals(0, int0);
  }
}
