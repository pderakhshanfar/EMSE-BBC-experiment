/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 17 04:41:44 GMT 2020
 */

package org.apache.commons.jxpath.ri.model.jdom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.apache.commons.jxpath.BasicVariables;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.ri.JXPathContextReferenceImpl;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.beans.BeanPointer;
import org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator;
import org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jdom.Element;
import org.jdom.Namespace;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JDOMAttributeIterator_ESTest extends JDOMAttributeIterator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      QName qName0 = new QName("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", "org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator");
      assertNotNull(qName0);
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator:org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.toString());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.getPrefix());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.getName());
      
      Locale locale0 = new Locale("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", "org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", "org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator");
      assertNotNull(locale0);
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.getVariant());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator_ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR_org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.toString());
      assertEquals("ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR", locale0.getCountry());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator", locale0.getLanguage());
      
      Namespace namespace0 = Namespace.getNamespace("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator");
      assertNotNull(namespace0);
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", namespace0.getURI());
      assertEquals("", namespace0.getPrefix());
      
      Element element0 = new Element("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", namespace0);
      assertNotNull(element0);
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", namespace0.getURI());
      assertEquals("", namespace0.getPrefix());
      assertEquals("", element0.getNamespacePrefix());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getNamespaceURI());
      assertFalse(element0.isRootElement());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getName());
      assertEquals(0, element0.getContentSize());
      
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, element0, locale0);
      assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
      assertNotNull(nodePointer0);
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator:org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.toString());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.getPrefix());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.getName());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.getVariant());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator_ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR_org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.toString());
      assertEquals("ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR", locale0.getCountry());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator", locale0.getLanguage());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", namespace0.getURI());
      assertEquals("", namespace0.getPrefix());
      assertEquals("", element0.getNamespacePrefix());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getNamespaceURI());
      assertFalse(element0.isRootElement());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getName());
      assertEquals(0, element0.getContentSize());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", nodePointer0.getNamespaceURI());
      assertTrue(nodePointer0.isNode());
      assertFalse(nodePointer0.isCollection());
      assertFalse(nodePointer0.isAttribute());
      assertTrue(nodePointer0.isRoot());
      assertEquals(Integer.MIN_VALUE, nodePointer0.getIndex());
      assertEquals(1, nodePointer0.getLength());
      assertFalse(nodePointer0.isContainer());
      
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName0);
      assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
      assertNotNull(jDOMAttributeIterator0);
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator:org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.toString());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.getPrefix());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.getName());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.getVariant());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator_ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR_org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.toString());
      assertEquals("ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR", locale0.getCountry());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator", locale0.getLanguage());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", namespace0.getURI());
      assertEquals("", namespace0.getPrefix());
      assertEquals("", element0.getNamespacePrefix());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getNamespaceURI());
      assertFalse(element0.isRootElement());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getName());
      assertEquals(0, element0.getContentSize());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", nodePointer0.getNamespaceURI());
      assertTrue(nodePointer0.isNode());
      assertFalse(nodePointer0.isCollection());
      assertFalse(nodePointer0.isAttribute());
      assertTrue(nodePointer0.isRoot());
      assertEquals(Integer.MIN_VALUE, nodePointer0.getIndex());
      assertEquals(1, nodePointer0.getLength());
      assertFalse(nodePointer0.isContainer());
      assertEquals(0, jDOMAttributeIterator0.getPosition());
      
      boolean boolean0 = jDOMAttributeIterator0.setPosition(Integer.MIN_VALUE);
      assertFalse(boolean0);
      assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator:org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.toString());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.getPrefix());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.getName());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.getVariant());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator_ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR_org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.toString());
      assertEquals("ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR", locale0.getCountry());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator", locale0.getLanguage());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", namespace0.getURI());
      assertEquals("", namespace0.getPrefix());
      assertEquals("", element0.getNamespacePrefix());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getNamespaceURI());
      assertFalse(element0.isRootElement());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getName());
      assertEquals(0, element0.getContentSize());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", nodePointer0.getNamespaceURI());
      assertTrue(nodePointer0.isNode());
      assertFalse(nodePointer0.isCollection());
      assertFalse(nodePointer0.isAttribute());
      assertTrue(nodePointer0.isRoot());
      assertEquals(Integer.MIN_VALUE, nodePointer0.getIndex());
      assertEquals(1, nodePointer0.getLength());
      assertFalse(nodePointer0.isContainer());
      assertEquals(Integer.MIN_VALUE, jDOMAttributeIterator0.getPosition());
      
      // Undeclared exception!
      try { 
        jDOMAttributeIterator0.getNodePointer();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2147483647
         //
         verifyException("java.util.Collections$EmptyList", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      QName qName0 = new QName("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator");
      assertNotNull(qName0);
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.toString());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.getName());
      assertNull(qName0.getPrefix());
      
      Locale locale0 = Locale.ITALY;
      assertNotNull(locale0);
      assertEquals("IT", locale0.getCountry());
      assertEquals("it", locale0.getLanguage());
      assertEquals("it_IT", locale0.toString());
      assertEquals("ita", locale0.getISO3Language());
      assertEquals("", locale0.getVariant());
      assertEquals("ITA", locale0.getISO3Country());
      
      Element element0 = new Element("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", "org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator");
      assertNotNull(element0);
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getName());
      assertFalse(element0.isRootElement());
      assertEquals(0, element0.getContentSize());
      assertEquals("", element0.getNamespacePrefix());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getNamespaceURI());
      
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, element0, locale0);
      assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
      assertNotNull(nodePointer0);
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.toString());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.getName());
      assertNull(qName0.getPrefix());
      assertEquals("IT", locale0.getCountry());
      assertEquals("it", locale0.getLanguage());
      assertEquals("it_IT", locale0.toString());
      assertEquals("ita", locale0.getISO3Language());
      assertEquals("", locale0.getVariant());
      assertEquals("ITA", locale0.getISO3Country());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getName());
      assertFalse(element0.isRootElement());
      assertEquals(0, element0.getContentSize());
      assertEquals("", element0.getNamespacePrefix());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getNamespaceURI());
      assertEquals(Integer.MIN_VALUE, nodePointer0.getIndex());
      assertEquals(1, nodePointer0.getLength());
      assertTrue(nodePointer0.isRoot());
      assertFalse(nodePointer0.isContainer());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", nodePointer0.getNamespaceURI());
      assertTrue(nodePointer0.isNode());
      assertFalse(nodePointer0.isCollection());
      assertFalse(nodePointer0.isAttribute());
      
      JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl)JXPathContext.newContext((Object) locale0);
      assertTrue(JXPathContextReferenceImpl.USE_SOFT_CACHE);
      assertNotNull(jXPathContextReferenceImpl0);
      assertEquals("IT", locale0.getCountry());
      assertEquals("it", locale0.getLanguage());
      assertEquals("it_IT", locale0.toString());
      assertEquals("ita", locale0.getISO3Language());
      assertEquals("", locale0.getVariant());
      assertEquals("ITA", locale0.getISO3Country());
      assertFalse(jXPathContextReferenceImpl0.isLenient());
      
      JDOMAttributePointer jDOMAttributePointer0 = (JDOMAttributePointer)nodePointer0.createAttribute(jXPathContextReferenceImpl0, qName0);
      assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
      assertTrue(JXPathContextReferenceImpl.USE_SOFT_CACHE);
      assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
      assertNotNull(jDOMAttributePointer0);
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.toString());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.getName());
      assertNull(qName0.getPrefix());
      assertEquals("IT", locale0.getCountry());
      assertEquals("it", locale0.getLanguage());
      assertEquals("it_IT", locale0.toString());
      assertEquals("ita", locale0.getISO3Language());
      assertEquals("", locale0.getVariant());
      assertEquals("ITA", locale0.getISO3Country());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getName());
      assertFalse(element0.isRootElement());
      assertEquals(0, element0.getContentSize());
      assertEquals("", element0.getNamespacePrefix());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getNamespaceURI());
      assertEquals(Integer.MIN_VALUE, nodePointer0.getIndex());
      assertEquals(1, nodePointer0.getLength());
      assertTrue(nodePointer0.isRoot());
      assertFalse(nodePointer0.isContainer());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", nodePointer0.getNamespaceURI());
      assertTrue(nodePointer0.isNode());
      assertFalse(nodePointer0.isCollection());
      assertFalse(nodePointer0.isAttribute());
      assertFalse(jXPathContextReferenceImpl0.isLenient());
      assertFalse(jDOMAttributePointer0.isCollection());
      assertFalse(jDOMAttributePointer0.isAttribute());
      assertTrue(jDOMAttributePointer0.isLeaf());
      assertEquals(Integer.MIN_VALUE, jDOMAttributePointer0.getIndex());
      assertNull(jDOMAttributePointer0.getNamespaceURI());
      assertFalse(jDOMAttributePointer0.isContainer());
      assertEquals(1, jDOMAttributePointer0.getLength());
      assertTrue(jDOMAttributePointer0.isActual());
      assertTrue(jDOMAttributePointer0.isNode());
      assertFalse(jDOMAttributePointer0.isRoot());
      
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName0);
      assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
      assertNotNull(jDOMAttributeIterator0);
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.toString());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.getName());
      assertNull(qName0.getPrefix());
      assertEquals("IT", locale0.getCountry());
      assertEquals("it", locale0.getLanguage());
      assertEquals("it_IT", locale0.toString());
      assertEquals("ita", locale0.getISO3Language());
      assertEquals("", locale0.getVariant());
      assertEquals("ITA", locale0.getISO3Country());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getName());
      assertFalse(element0.isRootElement());
      assertEquals(0, element0.getContentSize());
      assertEquals("", element0.getNamespacePrefix());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getNamespaceURI());
      assertEquals(Integer.MIN_VALUE, nodePointer0.getIndex());
      assertEquals(1, nodePointer0.getLength());
      assertTrue(nodePointer0.isRoot());
      assertFalse(nodePointer0.isContainer());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", nodePointer0.getNamespaceURI());
      assertTrue(nodePointer0.isNode());
      assertFalse(nodePointer0.isCollection());
      assertFalse(nodePointer0.isAttribute());
      assertEquals(0, jDOMAttributeIterator0.getPosition());
      
      boolean boolean0 = jDOMAttributeIterator0.setPosition(1);
      assertTrue(boolean0);
      assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.toString());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.getName());
      assertNull(qName0.getPrefix());
      assertEquals("IT", locale0.getCountry());
      assertEquals("it", locale0.getLanguage());
      assertEquals("it_IT", locale0.toString());
      assertEquals("ita", locale0.getISO3Language());
      assertEquals("", locale0.getVariant());
      assertEquals("ITA", locale0.getISO3Country());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getName());
      assertFalse(element0.isRootElement());
      assertEquals(0, element0.getContentSize());
      assertEquals("", element0.getNamespacePrefix());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getNamespaceURI());
      assertEquals(Integer.MIN_VALUE, nodePointer0.getIndex());
      assertEquals(1, nodePointer0.getLength());
      assertTrue(nodePointer0.isRoot());
      assertFalse(nodePointer0.isContainer());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", nodePointer0.getNamespaceURI());
      assertTrue(nodePointer0.isNode());
      assertFalse(nodePointer0.isCollection());
      assertFalse(nodePointer0.isAttribute());
      assertEquals(1, jDOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      QName qName0 = new QName("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", "org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator");
      assertNotNull(qName0);
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator:org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.toString());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.getName());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.getPrefix());
      
      Locale locale0 = new Locale("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", "org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", "org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator");
      assertNotNull(locale0);
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator", locale0.getLanguage());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.getVariant());
      assertEquals("ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR", locale0.getCountry());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator_ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR_org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.toString());
      
      Namespace namespace0 = Namespace.getNamespace("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator");
      assertNotNull(namespace0);
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", namespace0.getURI());
      assertEquals("", namespace0.getPrefix());
      
      Element element0 = new Element("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", namespace0);
      assertNotNull(element0);
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", namespace0.getURI());
      assertEquals("", namespace0.getPrefix());
      assertEquals(0, element0.getContentSize());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getName());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getNamespaceURI());
      assertFalse(element0.isRootElement());
      assertEquals("", element0.getNamespacePrefix());
      
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, element0, locale0);
      assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
      assertNotNull(nodePointer0);
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator:org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.toString());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.getName());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.getPrefix());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator", locale0.getLanguage());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.getVariant());
      assertEquals("ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR", locale0.getCountry());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator_ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR_org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.toString());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", namespace0.getURI());
      assertEquals("", namespace0.getPrefix());
      assertEquals(0, element0.getContentSize());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getName());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getNamespaceURI());
      assertFalse(element0.isRootElement());
      assertEquals("", element0.getNamespacePrefix());
      assertFalse(nodePointer0.isContainer());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", nodePointer0.getNamespaceURI());
      assertEquals(Integer.MIN_VALUE, nodePointer0.getIndex());
      assertTrue(nodePointer0.isRoot());
      assertEquals(1, nodePointer0.getLength());
      assertFalse(nodePointer0.isCollection());
      assertTrue(nodePointer0.isNode());
      assertFalse(nodePointer0.isAttribute());
      
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName0);
      assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
      assertNotNull(jDOMAttributeIterator0);
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator:org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.toString());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.getName());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.getPrefix());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator", locale0.getLanguage());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.getVariant());
      assertEquals("ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR", locale0.getCountry());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator_ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR_org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.toString());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", namespace0.getURI());
      assertEquals("", namespace0.getPrefix());
      assertEquals(0, element0.getContentSize());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getName());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getNamespaceURI());
      assertFalse(element0.isRootElement());
      assertEquals("", element0.getNamespacePrefix());
      assertFalse(nodePointer0.isContainer());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", nodePointer0.getNamespaceURI());
      assertEquals(Integer.MIN_VALUE, nodePointer0.getIndex());
      assertTrue(nodePointer0.isRoot());
      assertEquals(1, nodePointer0.getLength());
      assertFalse(nodePointer0.isCollection());
      assertTrue(nodePointer0.isNode());
      assertFalse(nodePointer0.isAttribute());
      assertEquals(0, jDOMAttributeIterator0.getPosition());
      
      NodePointer nodePointer1 = jDOMAttributeIterator0.getNodePointer();
      assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
      assertNull(nodePointer1);
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator:org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.toString());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.getName());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.getPrefix());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator", locale0.getLanguage());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.getVariant());
      assertEquals("ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR", locale0.getCountry());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator_ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR_org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.toString());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", namespace0.getURI());
      assertEquals("", namespace0.getPrefix());
      assertEquals(0, element0.getContentSize());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getName());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getNamespaceURI());
      assertFalse(element0.isRootElement());
      assertEquals("", element0.getNamespacePrefix());
      assertFalse(nodePointer0.isContainer());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", nodePointer0.getNamespaceURI());
      assertEquals(Integer.MIN_VALUE, nodePointer0.getIndex());
      assertTrue(nodePointer0.isRoot());
      assertEquals(1, nodePointer0.getLength());
      assertFalse(nodePointer0.isCollection());
      assertTrue(nodePointer0.isNode());
      assertFalse(nodePointer0.isAttribute());
      assertEquals(1, jDOMAttributeIterator0.getPosition());
      
      int int0 = jDOMAttributeIterator0.getPosition();
      assertEquals(1, int0);
      assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator:org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.toString());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.getName());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.getPrefix());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator", locale0.getLanguage());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.getVariant());
      assertEquals("ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR", locale0.getCountry());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator_ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR_org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.toString());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", namespace0.getURI());
      assertEquals("", namespace0.getPrefix());
      assertEquals(0, element0.getContentSize());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getName());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getNamespaceURI());
      assertFalse(element0.isRootElement());
      assertEquals("", element0.getNamespacePrefix());
      assertFalse(nodePointer0.isContainer());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", nodePointer0.getNamespaceURI());
      assertEquals(Integer.MIN_VALUE, nodePointer0.getIndex());
      assertTrue(nodePointer0.isRoot());
      assertEquals(1, nodePointer0.getLength());
      assertFalse(nodePointer0.isCollection());
      assertTrue(nodePointer0.isNode());
      assertFalse(nodePointer0.isAttribute());
      assertEquals(1, jDOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      QName qName0 = new QName("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", "org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator");
      assertNotNull(qName0);
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator:org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.toString());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.getPrefix());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.getName());
      
      Locale locale0 = new Locale("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", "org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", "org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator");
      assertNotNull(locale0);
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator_ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR_org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.toString());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.getVariant());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator", locale0.getLanguage());
      assertEquals("ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR", locale0.getCountry());
      
      Namespace namespace0 = Namespace.getNamespace("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator");
      assertNotNull(namespace0);
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", namespace0.getURI());
      assertEquals("", namespace0.getPrefix());
      
      Element element0 = new Element("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", namespace0);
      assertNotNull(element0);
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", namespace0.getURI());
      assertEquals("", namespace0.getPrefix());
      assertEquals("", element0.getNamespacePrefix());
      assertEquals(0, element0.getContentSize());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getName());
      assertFalse(element0.isRootElement());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getNamespaceURI());
      
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, element0, locale0);
      assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
      assertNotNull(nodePointer0);
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator:org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.toString());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.getPrefix());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.getName());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator_ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR_org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.toString());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.getVariant());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator", locale0.getLanguage());
      assertEquals("ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR", locale0.getCountry());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", namespace0.getURI());
      assertEquals("", namespace0.getPrefix());
      assertEquals("", element0.getNamespacePrefix());
      assertEquals(0, element0.getContentSize());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getName());
      assertFalse(element0.isRootElement());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getNamespaceURI());
      assertEquals(Integer.MIN_VALUE, nodePointer0.getIndex());
      assertEquals(1, nodePointer0.getLength());
      assertFalse(nodePointer0.isContainer());
      assertTrue(nodePointer0.isRoot());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", nodePointer0.getNamespaceURI());
      assertTrue(nodePointer0.isNode());
      assertFalse(nodePointer0.isCollection());
      assertFalse(nodePointer0.isAttribute());
      
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName0);
      assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
      assertNotNull(jDOMAttributeIterator0);
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator:org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.toString());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.getPrefix());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.getName());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator_ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR_org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.toString());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.getVariant());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator", locale0.getLanguage());
      assertEquals("ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR", locale0.getCountry());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", namespace0.getURI());
      assertEquals("", namespace0.getPrefix());
      assertEquals("", element0.getNamespacePrefix());
      assertEquals(0, element0.getContentSize());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getName());
      assertFalse(element0.isRootElement());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getNamespaceURI());
      assertEquals(Integer.MIN_VALUE, nodePointer0.getIndex());
      assertEquals(1, nodePointer0.getLength());
      assertFalse(nodePointer0.isContainer());
      assertTrue(nodePointer0.isRoot());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", nodePointer0.getNamespaceURI());
      assertTrue(nodePointer0.isNode());
      assertFalse(nodePointer0.isCollection());
      assertFalse(nodePointer0.isAttribute());
      assertEquals(0, jDOMAttributeIterator0.getPosition());
      
      boolean boolean0 = jDOMAttributeIterator0.setPosition(Integer.MIN_VALUE);
      assertFalse(boolean0);
      assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator:org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.toString());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.getPrefix());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.getName());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator_ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR_org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.toString());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.getVariant());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator", locale0.getLanguage());
      assertEquals("ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR", locale0.getCountry());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", namespace0.getURI());
      assertEquals("", namespace0.getPrefix());
      assertEquals("", element0.getNamespacePrefix());
      assertEquals(0, element0.getContentSize());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getName());
      assertFalse(element0.isRootElement());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getNamespaceURI());
      assertEquals(Integer.MIN_VALUE, nodePointer0.getIndex());
      assertEquals(1, nodePointer0.getLength());
      assertFalse(nodePointer0.isContainer());
      assertTrue(nodePointer0.isRoot());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", nodePointer0.getNamespaceURI());
      assertTrue(nodePointer0.isNode());
      assertFalse(nodePointer0.isCollection());
      assertFalse(nodePointer0.isAttribute());
      assertEquals(Integer.MIN_VALUE, jDOMAttributeIterator0.getPosition());
      
      int int0 = jDOMAttributeIterator0.getPosition();
      assertEquals(Integer.MIN_VALUE, int0);
      assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator:org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.toString());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.getPrefix());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.getName());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator_ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR_org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.toString());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.getVariant());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator", locale0.getLanguage());
      assertEquals("ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR", locale0.getCountry());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", namespace0.getURI());
      assertEquals("", namespace0.getPrefix());
      assertEquals("", element0.getNamespacePrefix());
      assertEquals(0, element0.getContentSize());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getName());
      assertFalse(element0.isRootElement());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getNamespaceURI());
      assertEquals(Integer.MIN_VALUE, nodePointer0.getIndex());
      assertEquals(1, nodePointer0.getLength());
      assertFalse(nodePointer0.isContainer());
      assertTrue(nodePointer0.isRoot());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", nodePointer0.getNamespaceURI());
      assertTrue(nodePointer0.isNode());
      assertFalse(nodePointer0.isCollection());
      assertFalse(nodePointer0.isAttribute());
      assertEquals(Integer.MIN_VALUE, jDOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      QName qName0 = new QName("B2| u&24rl", "B2| u&24rl");
      assertNotNull(qName0);
      assertEquals("B2| u&24rl", qName0.getPrefix());
      assertEquals("B2| u&24rl", qName0.getName());
      assertEquals("B2| u&24rl:B2| u&24rl", qName0.toString());
      
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
      assertNotNull(variablePointer0);
      assertEquals("B2| u&24rl", qName0.getPrefix());
      assertEquals("B2| u&24rl", qName0.getName());
      assertEquals("B2| u&24rl:B2| u&24rl", qName0.toString());
      assertFalse(variablePointer0.isAttribute());
      assertFalse(variablePointer0.isActual());
      assertTrue(variablePointer0.isContainer());
      assertEquals(Integer.MIN_VALUE, variablePointer0.getIndex());
      assertFalse(variablePointer0.isNode());
      assertNull(variablePointer0.getNamespaceURI());
      assertTrue(variablePointer0.isRoot());
      
      JDOMAttributeIterator jDOMAttributeIterator0 = null;
      try {
        jDOMAttributeIterator0 = new JDOMAttributeIterator(variablePointer0, qName0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: B2| u&24rl:B2| u&24rl
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      QName qName0 = new QName("", (String) null);
      assertNotNull(qName0);
      assertEquals("", qName0.getPrefix());
      assertNull(qName0.getName());
      assertEquals(":null", qName0.toString());
      
      Locale locale0 = Locale.US;
      assertNotNull(locale0);
      assertEquals("en", locale0.getLanguage());
      assertEquals("eng", locale0.getISO3Language());
      assertEquals("US", locale0.getCountry());
      assertEquals("", locale0.getVariant());
      assertEquals("USA", locale0.getISO3Country());
      assertEquals("en_US", locale0.toString());
      
      Element element0 = new Element("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", "*");
      assertNotNull(element0);
      assertEquals("*", element0.getNamespaceURI());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getName());
      assertEquals("", element0.getNamespacePrefix());
      assertFalse(element0.isRootElement());
      assertEquals(0, element0.getContentSize());
      
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, element0, locale0);
      assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
      assertNotNull(nodePointer0);
      assertEquals("", qName0.getPrefix());
      assertNull(qName0.getName());
      assertEquals(":null", qName0.toString());
      assertEquals("en", locale0.getLanguage());
      assertEquals("eng", locale0.getISO3Language());
      assertEquals("US", locale0.getCountry());
      assertEquals("", locale0.getVariant());
      assertEquals("USA", locale0.getISO3Country());
      assertEquals("en_US", locale0.toString());
      assertEquals("*", element0.getNamespaceURI());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getName());
      assertEquals("", element0.getNamespacePrefix());
      assertFalse(element0.isRootElement());
      assertEquals(0, element0.getContentSize());
      assertTrue(nodePointer0.isNode());
      assertEquals("*", nodePointer0.getNamespaceURI());
      assertFalse(nodePointer0.isCollection());
      assertFalse(nodePointer0.isAttribute());
      assertEquals(1, nodePointer0.getLength());
      assertEquals(Integer.MIN_VALUE, nodePointer0.getIndex());
      assertFalse(nodePointer0.isContainer());
      assertTrue(nodePointer0.isRoot());
      
      JDOMAttributeIterator jDOMAttributeIterator0 = null;
      try {
        jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl)JXPathContext.newContext((Object) "");
      assertTrue(JXPathContextReferenceImpl.USE_SOFT_CACHE);
      assertNotNull(jXPathContextReferenceImpl0);
      assertFalse(jXPathContextReferenceImpl0.isLenient());
      
      BasicVariables basicVariables0 = (BasicVariables)jXPathContextReferenceImpl0.getVariables();
      assertTrue(JXPathContextReferenceImpl.USE_SOFT_CACHE);
      assertNotNull(basicVariables0);
      assertFalse(jXPathContextReferenceImpl0.isLenient());
      
      QName qName0 = new QName("1");
      assertNotNull(qName0);
      assertNull(qName0.getPrefix());
      assertEquals("1", qName0.getName());
      assertEquals("1", qName0.toString());
      
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      assertTrue(JXPathContextReferenceImpl.USE_SOFT_CACHE);
      assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
      assertNotNull(variablePointer0);
      assertFalse(jXPathContextReferenceImpl0.isLenient());
      assertNull(qName0.getPrefix());
      assertEquals("1", qName0.getName());
      assertEquals("1", qName0.toString());
      assertFalse(variablePointer0.isNode());
      assertTrue(variablePointer0.isContainer());
      assertEquals(Integer.MIN_VALUE, variablePointer0.getIndex());
      assertTrue(variablePointer0.isRoot());
      assertNull(variablePointer0.getNamespaceURI());
      assertFalse(variablePointer0.isAttribute());
      assertTrue(variablePointer0.isActual());
      
      JDOMAttributeIterator jDOMAttributeIterator0 = null;
      try {
        jDOMAttributeIterator0 = new JDOMAttributeIterator(variablePointer0, qName0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: '1'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      QName qName0 = new QName("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", "org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator");
      assertNotNull(qName0);
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator:org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.toString());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.getPrefix());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.getName());
      
      Locale locale0 = new Locale("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", "org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", "org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator");
      assertNotNull(locale0);
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator", locale0.getLanguage());
      assertEquals("ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR", locale0.getCountry());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.getVariant());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator_ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR_org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.toString());
      
      Namespace namespace0 = Namespace.getNamespace("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator");
      assertNotNull(namespace0);
      assertEquals("", namespace0.getPrefix());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", namespace0.getURI());
      
      Element element0 = new Element("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", namespace0);
      assertNotNull(element0);
      assertEquals("", namespace0.getPrefix());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", namespace0.getURI());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getNamespaceURI());
      assertEquals("", element0.getNamespacePrefix());
      assertFalse(element0.isRootElement());
      assertEquals(0, element0.getContentSize());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getName());
      
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, element0, locale0);
      assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
      assertNotNull(nodePointer0);
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator:org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.toString());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.getPrefix());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.getName());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator", locale0.getLanguage());
      assertEquals("ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR", locale0.getCountry());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.getVariant());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator_ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR_org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.toString());
      assertEquals("", namespace0.getPrefix());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", namespace0.getURI());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getNamespaceURI());
      assertEquals("", element0.getNamespacePrefix());
      assertFalse(element0.isRootElement());
      assertEquals(0, element0.getContentSize());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getName());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", nodePointer0.getNamespaceURI());
      assertFalse(nodePointer0.isContainer());
      assertFalse(nodePointer0.isAttribute());
      assertFalse(nodePointer0.isCollection());
      assertEquals(Integer.MIN_VALUE, nodePointer0.getIndex());
      assertTrue(nodePointer0.isNode());
      assertTrue(nodePointer0.isRoot());
      assertEquals(1, nodePointer0.getLength());
      
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName0);
      assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
      assertNotNull(jDOMAttributeIterator0);
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator:org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.toString());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.getPrefix());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.getName());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator", locale0.getLanguage());
      assertEquals("ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR", locale0.getCountry());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.getVariant());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator_ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR_org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.toString());
      assertEquals("", namespace0.getPrefix());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", namespace0.getURI());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getNamespaceURI());
      assertEquals("", element0.getNamespacePrefix());
      assertFalse(element0.isRootElement());
      assertEquals(0, element0.getContentSize());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getName());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", nodePointer0.getNamespaceURI());
      assertFalse(nodePointer0.isContainer());
      assertFalse(nodePointer0.isAttribute());
      assertFalse(nodePointer0.isCollection());
      assertEquals(Integer.MIN_VALUE, nodePointer0.getIndex());
      assertTrue(nodePointer0.isNode());
      assertTrue(nodePointer0.isRoot());
      assertEquals(1, nodePointer0.getLength());
      assertEquals(0, jDOMAttributeIterator0.getPosition());
      
      boolean boolean0 = jDOMAttributeIterator0.setPosition(1);
      assertFalse(boolean0);
      assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator:org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.toString());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.getPrefix());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.getName());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator", locale0.getLanguage());
      assertEquals("ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR", locale0.getCountry());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.getVariant());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator_ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR_org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.toString());
      assertEquals("", namespace0.getPrefix());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", namespace0.getURI());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getNamespaceURI());
      assertEquals("", element0.getNamespacePrefix());
      assertFalse(element0.isRootElement());
      assertEquals(0, element0.getContentSize());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getName());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", nodePointer0.getNamespaceURI());
      assertFalse(nodePointer0.isContainer());
      assertFalse(nodePointer0.isAttribute());
      assertFalse(nodePointer0.isCollection());
      assertEquals(Integer.MIN_VALUE, nodePointer0.getIndex());
      assertTrue(nodePointer0.isNode());
      assertTrue(nodePointer0.isRoot());
      assertEquals(1, nodePointer0.getLength());
      assertEquals(1, jDOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      QName qName0 = new QName("org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator", "");
      assertNotNull(qName0);
      assertEquals("org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator:", qName0.toString());
      assertEquals("org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator", qName0.getPrefix());
      assertEquals("", qName0.getName());
      
      Locale locale0 = Locale.forLanguageTag("org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator");
      assertNotNull(locale0);
      assertEquals("", locale0.getCountry());
      assertEquals("", locale0.getISO3Language());
      assertEquals("", locale0.getLanguage());
      assertEquals("", locale0.getISO3Country());
      assertEquals("", locale0.toString());
      assertEquals("", locale0.getVariant());
      
      BeanPointer beanPointer0 = (BeanPointer)NodePointer.newNodePointer(qName0, "", locale0);
      assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
      assertNotNull(beanPointer0);
      assertEquals("org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator:", qName0.toString());
      assertEquals("org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator", qName0.getPrefix());
      assertEquals("", qName0.getName());
      assertEquals("", locale0.getCountry());
      assertEquals("", locale0.getISO3Language());
      assertEquals("", locale0.getLanguage());
      assertEquals("", locale0.getISO3Country());
      assertEquals("", locale0.toString());
      assertEquals("", locale0.getVariant());
      assertTrue(beanPointer0.isNode());
      assertEquals(1, beanPointer0.getLength());
      assertFalse(beanPointer0.isDynamicPropertyDeclarationSupported());
      assertNull(beanPointer0.getNamespaceURI());
      assertFalse(beanPointer0.isCollection());
      assertFalse(beanPointer0.isAttribute());
      assertTrue(beanPointer0.isRoot());
      assertFalse(beanPointer0.isContainer());
      assertEquals(Integer.MIN_VALUE, beanPointer0.getIndex());
      
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(beanPointer0, qName0);
      assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
      assertNotNull(jDOMAttributeIterator0);
      assertEquals("org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator:", qName0.toString());
      assertEquals("org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator", qName0.getPrefix());
      assertEquals("", qName0.getName());
      assertEquals("", locale0.getCountry());
      assertEquals("", locale0.getISO3Language());
      assertEquals("", locale0.getLanguage());
      assertEquals("", locale0.getISO3Country());
      assertEquals("", locale0.toString());
      assertEquals("", locale0.getVariant());
      assertTrue(beanPointer0.isNode());
      assertEquals(1, beanPointer0.getLength());
      assertFalse(beanPointer0.isDynamicPropertyDeclarationSupported());
      assertNull(beanPointer0.getNamespaceURI());
      assertFalse(beanPointer0.isCollection());
      assertFalse(beanPointer0.isAttribute());
      assertTrue(beanPointer0.isRoot());
      assertFalse(beanPointer0.isContainer());
      assertEquals(Integer.MIN_VALUE, beanPointer0.getIndex());
      assertEquals(0, jDOMAttributeIterator0.getPosition());
      
      boolean boolean0 = jDOMAttributeIterator0.setPosition(Integer.MIN_VALUE);
      assertFalse(boolean0);
      assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
      assertEquals("org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator:", qName0.toString());
      assertEquals("org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator", qName0.getPrefix());
      assertEquals("", qName0.getName());
      assertEquals("", locale0.getCountry());
      assertEquals("", locale0.getISO3Language());
      assertEquals("", locale0.getLanguage());
      assertEquals("", locale0.getISO3Country());
      assertEquals("", locale0.toString());
      assertEquals("", locale0.getVariant());
      assertTrue(beanPointer0.isNode());
      assertEquals(1, beanPointer0.getLength());
      assertFalse(beanPointer0.isDynamicPropertyDeclarationSupported());
      assertNull(beanPointer0.getNamespaceURI());
      assertFalse(beanPointer0.isCollection());
      assertFalse(beanPointer0.isAttribute());
      assertTrue(beanPointer0.isRoot());
      assertFalse(beanPointer0.isContainer());
      assertEquals(Integer.MIN_VALUE, beanPointer0.getIndex());
      assertEquals(0, jDOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      QName qName0 = new QName("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator");
      assertNotNull(qName0);
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.getName());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.toString());
      assertNull(qName0.getPrefix());
      
      Locale locale0 = new Locale("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", "org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", "org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator");
      assertNotNull(locale0);
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator", locale0.getLanguage());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator_ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR_org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.toString());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.getVariant());
      assertEquals("ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR", locale0.getCountry());
      
      Namespace namespace0 = Namespace.getNamespace("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator");
      assertNotNull(namespace0);
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", namespace0.getURI());
      assertEquals("", namespace0.getPrefix());
      
      Element element0 = new Element("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", namespace0);
      assertNotNull(element0);
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", namespace0.getURI());
      assertEquals("", namespace0.getPrefix());
      assertEquals("", element0.getNamespacePrefix());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getName());
      assertEquals(0, element0.getContentSize());
      assertFalse(element0.isRootElement());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getNamespaceURI());
      
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, element0, locale0);
      assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
      assertNotNull(nodePointer0);
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.getName());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.toString());
      assertNull(qName0.getPrefix());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator", locale0.getLanguage());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator_ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR_org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.toString());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.getVariant());
      assertEquals("ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR", locale0.getCountry());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", namespace0.getURI());
      assertEquals("", namespace0.getPrefix());
      assertEquals("", element0.getNamespacePrefix());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getName());
      assertEquals(0, element0.getContentSize());
      assertFalse(element0.isRootElement());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getNamespaceURI());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", nodePointer0.getNamespaceURI());
      assertFalse(nodePointer0.isContainer());
      assertFalse(nodePointer0.isAttribute());
      assertFalse(nodePointer0.isCollection());
      assertEquals(Integer.MIN_VALUE, nodePointer0.getIndex());
      assertTrue(nodePointer0.isNode());
      assertTrue(nodePointer0.isRoot());
      assertEquals(1, nodePointer0.getLength());
      
      JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl)JXPathContext.newContext((Object) locale0);
      assertTrue(JXPathContextReferenceImpl.USE_SOFT_CACHE);
      assertNotNull(jXPathContextReferenceImpl0);
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator", locale0.getLanguage());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator_ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR_org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.toString());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.getVariant());
      assertEquals("ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR", locale0.getCountry());
      assertFalse(jXPathContextReferenceImpl0.isLenient());
      
      JDOMAttributePointer jDOMAttributePointer0 = (JDOMAttributePointer)nodePointer0.createAttribute(jXPathContextReferenceImpl0, qName0);
      assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
      assertTrue(JXPathContextReferenceImpl.USE_SOFT_CACHE);
      assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
      assertNotNull(jDOMAttributePointer0);
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.getName());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.toString());
      assertNull(qName0.getPrefix());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator", locale0.getLanguage());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator_ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR_org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.toString());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.getVariant());
      assertEquals("ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR", locale0.getCountry());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", namespace0.getURI());
      assertEquals("", namespace0.getPrefix());
      assertEquals("", element0.getNamespacePrefix());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getName());
      assertEquals(0, element0.getContentSize());
      assertFalse(element0.isRootElement());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getNamespaceURI());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", nodePointer0.getNamespaceURI());
      assertFalse(nodePointer0.isContainer());
      assertFalse(nodePointer0.isAttribute());
      assertFalse(nodePointer0.isCollection());
      assertEquals(Integer.MIN_VALUE, nodePointer0.getIndex());
      assertTrue(nodePointer0.isNode());
      assertTrue(nodePointer0.isRoot());
      assertEquals(1, nodePointer0.getLength());
      assertFalse(jXPathContextReferenceImpl0.isLenient());
      assertFalse(jDOMAttributePointer0.isRoot());
      assertFalse(jDOMAttributePointer0.isCollection());
      assertFalse(jDOMAttributePointer0.isAttribute());
      assertTrue(jDOMAttributePointer0.isActual());
      assertTrue(jDOMAttributePointer0.isNode());
      assertEquals(1, jDOMAttributePointer0.getLength());
      assertFalse(jDOMAttributePointer0.isContainer());
      assertNull(jDOMAttributePointer0.getNamespaceURI());
      assertEquals(Integer.MIN_VALUE, jDOMAttributePointer0.getIndex());
      assertTrue(jDOMAttributePointer0.isLeaf());
      
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName0);
      assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
      assertNotNull(jDOMAttributeIterator0);
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.getName());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.toString());
      assertNull(qName0.getPrefix());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator", locale0.getLanguage());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator_ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR_org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.toString());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.getVariant());
      assertEquals("ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR", locale0.getCountry());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", namespace0.getURI());
      assertEquals("", namespace0.getPrefix());
      assertEquals("", element0.getNamespacePrefix());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getName());
      assertEquals(0, element0.getContentSize());
      assertFalse(element0.isRootElement());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getNamespaceURI());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", nodePointer0.getNamespaceURI());
      assertFalse(nodePointer0.isContainer());
      assertFalse(nodePointer0.isAttribute());
      assertFalse(nodePointer0.isCollection());
      assertEquals(Integer.MIN_VALUE, nodePointer0.getIndex());
      assertTrue(nodePointer0.isNode());
      assertTrue(nodePointer0.isRoot());
      assertEquals(1, nodePointer0.getLength());
      assertEquals(0, jDOMAttributeIterator0.getPosition());
      
      JDOMAttributePointer jDOMAttributePointer1 = (JDOMAttributePointer)jDOMAttributeIterator0.getNodePointer();
      assertTrue(jDOMAttributePointer1.equals((Object)jDOMAttributePointer0));
      assertNotSame(jDOMAttributePointer1, jDOMAttributePointer0);
      assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
      assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
      assertNotNull(jDOMAttributePointer1);
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.getName());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.toString());
      assertNull(qName0.getPrefix());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator", locale0.getLanguage());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator_ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR_org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.toString());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.getVariant());
      assertEquals("ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR", locale0.getCountry());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", namespace0.getURI());
      assertEquals("", namespace0.getPrefix());
      assertEquals("", element0.getNamespacePrefix());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getName());
      assertEquals(0, element0.getContentSize());
      assertFalse(element0.isRootElement());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getNamespaceURI());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", nodePointer0.getNamespaceURI());
      assertFalse(nodePointer0.isContainer());
      assertFalse(nodePointer0.isAttribute());
      assertFalse(nodePointer0.isCollection());
      assertEquals(Integer.MIN_VALUE, nodePointer0.getIndex());
      assertTrue(nodePointer0.isNode());
      assertTrue(nodePointer0.isRoot());
      assertEquals(1, nodePointer0.getLength());
      assertEquals(0, jDOMAttributeIterator0.getPosition());
      assertFalse(jDOMAttributePointer1.isCollection());
      assertTrue(jDOMAttributePointer1.isNode());
      assertFalse(jDOMAttributePointer1.isRoot());
      assertFalse(jDOMAttributePointer1.isAttribute());
      assertTrue(jDOMAttributePointer1.isActual());
      assertNull(jDOMAttributePointer1.getNamespaceURI());
      assertEquals(1, jDOMAttributePointer1.getLength());
      assertTrue(jDOMAttributePointer1.isLeaf());
      assertEquals(Integer.MIN_VALUE, jDOMAttributePointer1.getIndex());
      assertFalse(jDOMAttributePointer1.isContainer());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      QName qName0 = new QName("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", "org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator");
      assertNotNull(qName0);
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.getPrefix());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.getName());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator:org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.toString());
      
      Locale locale0 = new Locale("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", "org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", "org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator");
      assertNotNull(locale0);
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.getVariant());
      assertEquals("ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR", locale0.getCountry());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator", locale0.getLanguage());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator_ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR_org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.toString());
      
      Namespace namespace0 = Namespace.getNamespace("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", "org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator");
      assertNotNull(namespace0);
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", namespace0.getPrefix());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", namespace0.getURI());
      
      Element element0 = new Element("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", namespace0);
      assertNotNull(element0);
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", namespace0.getPrefix());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", namespace0.getURI());
      assertEquals(0, element0.getContentSize());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getName());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getNamespaceURI());
      assertFalse(element0.isRootElement());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getNamespacePrefix());
      
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, element0, locale0);
      assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
      assertNotNull(nodePointer0);
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.getPrefix());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.getName());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator:org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.toString());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.getVariant());
      assertEquals("ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR", locale0.getCountry());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator", locale0.getLanguage());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator_ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR_org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.toString());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", namespace0.getPrefix());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", namespace0.getURI());
      assertEquals(0, element0.getContentSize());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getName());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getNamespaceURI());
      assertFalse(element0.isRootElement());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getNamespacePrefix());
      assertTrue(nodePointer0.isRoot());
      assertFalse(nodePointer0.isAttribute());
      assertFalse(nodePointer0.isContainer());
      assertEquals(Integer.MIN_VALUE, nodePointer0.getIndex());
      assertFalse(nodePointer0.isCollection());
      assertTrue(nodePointer0.isNode());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", nodePointer0.getNamespaceURI());
      assertEquals(1, nodePointer0.getLength());
      
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName0);
      assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
      assertNotNull(jDOMAttributeIterator0);
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.getPrefix());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.getName());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator:org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.toString());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.getVariant());
      assertEquals("ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR", locale0.getCountry());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator", locale0.getLanguage());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator_ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR_org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.toString());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", namespace0.getPrefix());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", namespace0.getURI());
      assertEquals(0, element0.getContentSize());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getName());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getNamespaceURI());
      assertFalse(element0.isRootElement());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getNamespacePrefix());
      assertTrue(nodePointer0.isRoot());
      assertFalse(nodePointer0.isAttribute());
      assertFalse(nodePointer0.isContainer());
      assertEquals(Integer.MIN_VALUE, nodePointer0.getIndex());
      assertFalse(nodePointer0.isCollection());
      assertTrue(nodePointer0.isNode());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", nodePointer0.getNamespaceURI());
      assertEquals(1, nodePointer0.getLength());
      assertEquals(0, jDOMAttributeIterator0.getPosition());
      
      NodePointer nodePointer1 = jDOMAttributeIterator0.getNodePointer();
      assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
      assertNull(nodePointer1);
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.getPrefix());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.getName());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator:org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", qName0.toString());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.getVariant());
      assertEquals("ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR", locale0.getCountry());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator", locale0.getLanguage());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.jdomattribiteiterator_ORG.APCHE.COMMONS.JXPATH.RI.MODEL.JDOM.JDOMATTRIBITEITERATOR_org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", locale0.toString());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", namespace0.getPrefix());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", namespace0.getURI());
      assertEquals(0, element0.getContentSize());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getName());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getNamespaceURI());
      assertFalse(element0.isRootElement());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", element0.getNamespacePrefix());
      assertTrue(nodePointer0.isRoot());
      assertFalse(nodePointer0.isAttribute());
      assertFalse(nodePointer0.isContainer());
      assertEquals(Integer.MIN_VALUE, nodePointer0.getIndex());
      assertFalse(nodePointer0.isCollection());
      assertTrue(nodePointer0.isNode());
      assertEquals("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", nodePointer0.getNamespaceURI());
      assertEquals(1, nodePointer0.getLength());
      assertEquals(1, jDOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      QName qName0 = new QName("org.apche.cmmons.jxpath.ri.model.jdom.JDOMAttribIteIterat");
      Locale locale0 = new Locale("org.apche.cmmons.jxpath.ri.model.jdom.JDOMAttribIteIterat", "org.apche.cmmons.jxpath.ri.model.jdom.JDOMAttribIteIterat", "org.apche.cmmons.jxpath.ri.model.jdom.JDOMAttribIteIterat");
      Namespace namespace0 = Namespace.getNamespace("org.apche.cmmons.jxpath.ri.model.jdom.JDOMAttribIteIterat", "org.apche.cmmons.jxpath.ri.model.jdom.JDOMAttribIteIterat");
      Element element0 = new Element("org.apche.cmmons.jxpath.ri.model.jdom.JDOMAttribIteIterat", namespace0);
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, element0, locale0);
      QName qName1 = new QName("*");
      NodePointer nodePointer1 = nodePointer0.createAttribute((JXPathContext) null, qName0);
      assertNotNull(nodePointer1);
      
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName1);
      assertEquals(0, jDOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      QName qName0 = new QName("org.apche.cmmons.jxpath.ri.model.jdom.JDOMAttribIteIterat", "org.apche.cmmons.jxpath.ri.model.jdom.JDOMAttribIteIterat");
      Locale locale0 = new Locale("org.apche.cmmons.jxpath.ri.model.jdom.JDOMAttribIteIterat", "org.apche.cmmons.jxpath.ri.model.jdom.JDOMAttribIteIterat", "org.apche.cmmons.jxpath.ri.model.jdom.JDOMAttribIteIterat");
      Namespace namespace0 = Namespace.getNamespace("org.apche.cmmons.jxpath.ri.model.jdom.JDOMAttribIteIterat", "org.apche.cmmons.jxpath.ri.model.jdom.JDOMAttribIteIterat");
      Element element0 = new Element("org.apche.cmmons.jxpath.ri.model.jdom.JDOMAttribIteIterat", namespace0);
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, element0, locale0);
      QName qName1 = new QName("*");
      NodePointer nodePointer1 = nodePointer0.createAttribute((JXPathContext) null, qName0);
      assertNotNull(nodePointer1);
      
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName1);
      assertEquals(0, jDOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      QName qName0 = new QName("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteXterator", "org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteXterator");
      Locale locale0 = Locale.TAIWAN;
      Element element0 = new Element("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteXterator");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, element0, locale0);
      QName qName1 = new QName("xml", "");
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName1);
      assertEquals(0, jDOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      QName qName0 = new QName("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", "org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator");
      Locale locale0 = new Locale("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", "org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", "org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator");
      Namespace namespace0 = Namespace.getNamespace("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator");
      Element element0 = new Element("org.apche.commons.jxpath.ri.model.jdom.JDOMAttribIteIterator", namespace0);
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, element0, locale0);
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName0);
      int int0 = jDOMAttributeIterator0.getPosition();
      assertEquals(0, int0);
  }
}
