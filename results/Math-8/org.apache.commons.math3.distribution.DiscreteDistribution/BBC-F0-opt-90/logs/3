* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-90
* Going to generate test cases for class: org.apache.commons.math3.distribution.DiscreteDistribution
* Starting Client-0
* Connecting to master process on port 12303
* Analyzing classpath: 
  - subjects/buggy-versions/Math-8/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math3.distribution.DiscreteDistribution
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 245
* Using seed 2483374281
* Starting evolution
bbc usage percentage is: 90%
* Initial Number of Goals in DynaMOSA = 62 / 245
[MASTER] 23:07:03.088 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 23:07:20.440 [logback-2] ERROR TestCluster - Failed to check cache for org.apache.commons.math3.util.Pair<K, V> : Type points to itself
* Search finished after 602s and 354 generations, 211498 statements, best individual has fitness: 35.0
* Minimizing test suite
[MASTER] 23:18:11.497 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 38
* Number of covered goals: 36
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 26
* Number of covered goals: 25
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 91%
* Total number of goals: 127
* Number of covered goals: 115
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 14
* Number of covered goals: 7
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 7
* Number of covered goals: 7
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 7
* Number of covered goals: 7
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 96%
* Total number of goals: 26
* Number of covered goals: 25
* Generated 23 tests with total length 497
* Resulting test suite's coverage: 85% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 46%
[MASTER] 23:19:13.592 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Compiling and checking tests
[MASTER] 23:19:26.714 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:19:27.520 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:19:28.271 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:19:29.052 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:19:29.603 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:19:30.305 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:19:31.169 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:19:31.893 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:19:32.754 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:19:33.124 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:19:33.732 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:19:34.493 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:19:34.872 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:19:35.193 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:19:35.621 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:19:38.476 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:19:38.480 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 23:19:38.489 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Well19937a well19937a0 = new Well19937a();
LinkedList<Pair<Byte, Double>> linkedList0 = new LinkedList<Pair<Byte, Double>>();
Byte byte0 = new Byte((byte)111);
Double double0 = new Double(1.099358320236206);
Pair<Byte, Double> pair0 = new Pair<Byte, Double>(byte0, double0);
linkedList0.add(pair0);
DiscreteDistribution<Byte> discreteDistribution0 = new DiscreteDistribution<Byte>(well19937a0, linkedList0);
linkedList0.pollFirst();
discreteDistribution0.sample(2096353084);

[MASTER] 23:19:39.012 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:19:39.424 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:19:39.955 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:19:40.718 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:19:44.655 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:19:44.970 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:19:45.635 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:19:50.881 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:19:56.811 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing tests to file
* Writing JUnit test case 'DiscreteDistribution_ESTest' to results/Math-8/org.apache.commons.math3.distribution.DiscreteDistribution/BBC-F0-opt-90/tests/3
* Done!

* Computation finished
