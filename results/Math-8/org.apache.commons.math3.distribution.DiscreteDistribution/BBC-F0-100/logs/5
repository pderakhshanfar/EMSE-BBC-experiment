* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-100
* Going to generate test cases for class: org.apache.commons.math3.distribution.DiscreteDistribution
* Starting Client-0
* Connecting to master process on port 4469
* Analyzing classpath: 
  - subjects/buggy-versions/Math-8/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math3.distribution.DiscreteDistribution
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 245
* Using seed 216328348
* Starting evolution
bbc usage percentage is: 100%
* Initial Number of Goals in DynaMOSA = 62 / 245
[MASTER] 01:52:19.316 [logback-2] ERROR TestCluster - Failed to check cache for org.apache.commons.math3.util.Pair<K, V> : Type points to itself
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.probability(Ljava/lang/Object;)D: I22 Branch 5 IFNULL L126 - false: 125,0,0| Number of FF evals: 436
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.sample(I)[Ljava/lang/Object;: Line 193: 64,0,0| Number of FF evals: 113
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.probability(Ljava/lang/Object;)D: I13 Branch 3 IF_ICMPGE L125 - true: 2968,1174,0| Number of FF evals: 2553
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.sample(I)[Ljava/lang/Object;: Line 189: 64,0,0| Number of FF evals: 113
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.probability(Ljava/lang/Object;)D: I13 Branch 3 IF_ICMPGE L125 - false: 2968,1174,0| Number of FF evals: 2553
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.probability(Ljava/lang/Object;)D: I25 Branch 6 IFNULL L126 - true: 125,0,0| Number of FF evals: 436
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.<init>(Ljava/util/List;)V: Line 69: 17896,16374,0| Number of FF evals: 9573
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.probability(Ljava/lang/Object;)D: Line 132: 2968,1174,0| Number of FF evals: 1533
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.sample()Ljava/lang/Object;: I34 Branch 10 IFGE L162 - true: 72,0,0| Number of FF evals: 393
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.sample()Ljava/lang/Object;: I19 Branch 9 IF_ICMPGE L160 - true: 10645,9706,0| Number of FF evals: 9573
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.sample()Ljava/lang/Object;: Line 160: 43,0,0| Number of FF evals: 68
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.probability(Ljava/lang/Object;)D: I17 Branch 4 IFNONNULL L126 - false: 125,0,0| Number of FF evals: 438
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.sample()Ljava/lang/Object;: Line 158: 43,0,0| Number of FF evals: 68
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.sample()Ljava/lang/Object;: Line 157: 43,0,0| Number of FF evals: 68
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.probability(Ljava/lang/Object;)D: Line 125: 2968,1174,0| Number of FF evals: 1533
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.probability(Ljava/lang/Object;)D: I32 Branch 7 IFEQ L126 - false: 89,0,0| Number of FF evals: 477
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.sample()Ljava/lang/Object;: I19 Branch 9 IF_ICMPGE L160 - false: 43,0,0| Number of FF evals: 2530
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.sample(I)[Ljava/lang/Object;: I32 Branch 12 IF_ICMPGE L189 - false: 64,0,0| Number of FF evals: 1957
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.probability(Ljava/lang/Object;)D: I22 Branch 5 IFNULL L126 - true: 612,354,0| Number of FF evals: 1409
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.probability(Ljava/lang/Object;)D: Line 123: 2968,1174,0| Number of FF evals: 1533
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.sample(I)[Ljava/lang/Object;: I32 Branch 12 IF_ICMPGE L189 - true: 64,0,0| Number of FF evals: 1949
* Search finished after 601s and 197 generations, 95674 statements, best individual has fitness: 34.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 38
* Number of covered goals: 36
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 26
* Number of covered goals: 25
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 14
* Number of covered goals: 14
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 91%
* Total number of goals: 127
* Number of covered goals: 115
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 14
* Number of covered goals: 7
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 7
* Number of covered goals: 7
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 7
* Number of covered goals: 7
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 96%
* Total number of goals: 26
* Number of covered goals: 25
* Generated 24 tests with total length 163
* Resulting test suite's coverage: 85% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 50%
* Compiling and checking tests
[MASTER] 02:02:43.530 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:02:44.219 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:02:45.104 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:02:45.590 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:02:46.048 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:02:46.345 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:02:46.704 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:02:46.969 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:02:47.332 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:02:47.631 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:02:47.920 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:02:48.144 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:02:48.489 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:02:48.860 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:02:49.304 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:02:49.598 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:02:49.945 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:02:50.503 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:02:50.772 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:02:54.126 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:02:54.129 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 02:02:54.132 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Integer integer0 = new Integer(1466);
Double double0 = new Double(1466);
Pair<Integer, Double> pair0 = new Pair<Integer, Double>(integer0, double0);
LinkedList<Pair<Integer, Double>> linkedList0 = new LinkedList<Pair<Integer, Double>>();
linkedList0.add(pair0);
DiscreteDistribution<Integer> discreteDistribution0 = new DiscreteDistribution<Integer>(linkedList0);
discreteDistribution0.sample(2146019787);

[MASTER] 02:02:54.557 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:02:54.704 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:02:54.900 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:02:55.109 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:02:55.990 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:02:57.467 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing tests to file
* Writing JUnit test case 'DiscreteDistribution_ESTest' to results/Math-8/org.apache.commons.math3.distribution.DiscreteDistribution/BBC-F0-100/tests/5
* Done!

* Computation finished
