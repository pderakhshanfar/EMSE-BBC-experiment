* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-100
* Going to generate test cases for class: org.apache.commons.math3.distribution.DiscreteDistribution
* Starting Client-0
* Connecting to master process on port 18938
* Analyzing classpath: 
  - subjects/buggy-versions/Math-8/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math3.distribution.DiscreteDistribution
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 245
* Using seed 3971403190
* Starting evolution
bbc usage percentage is: 100%
* Initial Number of Goals in DynaMOSA = 62 / 245
[MASTER] 01:56:08.735 [logback-2] ERROR TestCluster - Failed to check cache for org.apache.commons.math3.util.Pair<K, V> : Type points to itself
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.probability(Ljava/lang/Object;)D: I22 Branch 5 IFNULL L126 - false: 106,0,0| Number of FF evals: 434
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.probability(Ljava/lang/Object;)D: I13 Branch 3 IF_ICMPGE L125 - true: 1002,0,0| Number of FF evals: 2891
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.probability(Ljava/lang/Object;)D: I13 Branch 3 IF_ICMPGE L125 - false: 1002,0,0| Number of FF evals: 2891
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.probability(Ljava/lang/Object;)D: I25 Branch 6 IFNULL L126 - true: 106,0,0| Number of FF evals: 434
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.reseedRandomGenerator(J)V: Line 110: 131,0,0| Number of FF evals: 128
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.<init>(Ljava/util/List;)V: Line 69: 25615,22451,0| Number of FF evals: 14685
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.reseedRandomGenerator(J)V: root-Branch: 131,0,0| Number of FF evals: 2768
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.reseedRandomGenerator(J)V: Line 111: 131,0,0| Number of FF evals: 128
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.probability(Ljava/lang/Object;)D: Line 132: 1002,0,0| Number of FF evals: 532
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.sample()Ljava/lang/Object;: I34 Branch 10 IFGE L162 - true: 33,0,0| Number of FF evals: 534
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.probability(Ljava/lang/Object;)D: I32 Branch 7 IFEQ L126 - true: 63,0,0| Number of FF evals: 590
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.sample()Ljava/lang/Object;: I19 Branch 9 IF_ICMPGE L160 - true: 17045,14947,0| Number of FF evals: 14685
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.probability(Ljava/lang/Object;)D: I17 Branch 4 IFNONNULL L126 - false: 106,0,0| Number of FF evals: 456
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.probability(Ljava/lang/Object;)D: Line 125: 1002,0,0| Number of FF evals: 532
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.probability(Ljava/lang/Object;)D: I22 Branch 5 IFNULL L126 - true: 505,0,0| Number of FF evals: 1133
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.probability(Ljava/lang/Object;)D: Line 123: 1002,0,0| Number of FF evals: 532
* Search finished after 601s and 302 generations, 154945 statements, best individual has fitness: 35.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 38
* Number of covered goals: 36
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 26
* Number of covered goals: 25
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 91%
* Total number of goals: 127
* Number of covered goals: 115
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 14
* Number of covered goals: 7
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 7
* Number of covered goals: 7
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 7
* Number of covered goals: 7
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 96%
* Total number of goals: 26
* Number of covered goals: 25
* Generated 22 tests with total length 142
* Resulting test suite's coverage: 85% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 48%
* Compiling and checking tests
[MASTER] 02:06:05.680 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:06:06.261 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:06:06.622 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:06:07.264 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:06:07.513 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:06:07.997 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:06:08.422 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:06:08.726 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:06:08.917 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:06:09.311 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:06:09.618 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:06:09.849 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:06:10.188 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:06:10.381 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:06:10.673 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:06:11.022 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:06:11.318 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:06:15.571 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:06:15.590 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 02:06:15.592 [logback-1] WARN  JUnitAnalyzer - Failing test:
 LinkedList<Pair<Integer, Double>> linkedList0 = new LinkedList<Pair<Integer, Double>>();
Integer integer0 = Integer.valueOf(141);
Double double0 = new Double(141);
Pair<Integer, Double> pair0 = new Pair<Integer, Double>(integer0, double0);
linkedList0.add(pair0);
DiscreteDistribution<Integer> discreteDistribution0 = new DiscreteDistribution<Integer>(linkedList0);
discreteDistribution0.sample(2146557757);

[MASTER] 02:06:16.210 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:06:16.444 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:06:16.868 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:06:17.087 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:06:18.535 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:06:19.909 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing tests to file
* Writing JUnit test case 'DiscreteDistribution_ESTest' to results/Math-8/org.apache.commons.math3.distribution.DiscreteDistribution/BBC-F0-100/tests/19
* Done!

* Computation finished
