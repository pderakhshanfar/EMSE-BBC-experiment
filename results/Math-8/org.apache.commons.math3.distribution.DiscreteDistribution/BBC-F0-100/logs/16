* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-100
* Going to generate test cases for class: org.apache.commons.math3.distribution.DiscreteDistribution
* Starting Client-0
* Connecting to master process on port 15954
* Analyzing classpath: 
  - subjects/buggy-versions/Math-8/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math3.distribution.DiscreteDistribution
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 245
* Using seed 1117428115
* Starting evolution
bbc usage percentage is: 100%
* Initial Number of Goals in DynaMOSA = 62 / 245
[MASTER] 01:54:48.346 [logback-2] ERROR TestCluster - Failed to check cache for org.apache.commons.math3.util.Pair<K, V> : Type points to itself
[MASTER] 02:03:47.878 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.getSamples()Ljava/util/List;: Line 148: 240,0,0| Number of FF evals: 189
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.getSamples()Ljava/util/List;: Line 144: 240,0,0| Number of FF evals: 189
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.reseedRandomGenerator(J)V: Line 110: 240,0,0| Number of FF evals: 155
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.reseedRandomGenerator(J)V: root-Branch: 240,0,0| Number of FF evals: 4504
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.reseedRandomGenerator(J)V: Line 111: 302,0,0| Number of FF evals: 295
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.probability(Ljava/lang/Object;)D: Line 132: 341,0,0| Number of FF evals: 239
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.sample(I)[Ljava/lang/Object;: I3 Branch 11 IFGT L182 - false: 341,0,0| Number of FF evals: 1234
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.sample()Ljava/lang/Object;: I19 Branch 9 IF_ICMPGE L160 - true: 4489,3212,0| Number of FF evals: 10010
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.sample()Ljava/lang/Object;: Line 160: 219,0,0| Number of FF evals: 206
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.sample()Ljava/lang/Object;: Line 158: 219,0,0| Number of FF evals: 206
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.sample()Ljava/lang/Object;: Line 157: 139,0,0| Number of FF evals: 112
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.probability(Ljava/lang/Object;)D: Line 125: 341,0,0| Number of FF evals: 239
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.sample()Ljava/lang/Object;: I19 Branch 9 IF_ICMPGE L160 - false: 341,0,0| Number of FF evals: 12119
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.probability(Ljava/lang/Object;)D: I22 Branch 5 IFNULL L126 - true: 2438,1781,154| Number of FF evals: 3158
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.probability(Ljava/lang/Object;)D: Line 123: 341,0,0| Number of FF evals: 239
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.sample(I)[Ljava/lang/Object;: I3 Branch 11 IFGT L182 - true: 410,0,0| Number of FF evals: 6711
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.probability(Ljava/lang/Object;)D: I22 Branch 5 IFNULL L126 - false: 221,0,0| Number of FF evals: 929
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.probability(Ljava/lang/Object;)D: I13 Branch 3 IF_ICMPGE L125 - true: 341,0,0| Number of FF evals: 8182
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.getSamples()Ljava/util/List;: I18 Branch 8 IF_ICMPGE L144 - true: 240,0,0| Number of FF evals: 9720
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.probability(Ljava/lang/Object;)D: I13 Branch 3 IF_ICMPGE L125 - false: 341,0,0| Number of FF evals: 8182
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.probability(Ljava/lang/Object;)D: I25 Branch 6 IFNULL L126 - true: 221,0,0| Number of FF evals: 929
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.getSamples()Ljava/util/List;: I18 Branch 8 IF_ICMPGE L144 - false: 240,0,0| Number of FF evals: 9720
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.<init>(Ljava/util/List;)V: Line 69: 79650,78138,0| Number of FF evals: 43131
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.<init>(Ljava/util/List;)V: Line 70: 70,0,0| Number of FF evals: 135
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.getSamples()Ljava/util/List;: Line 142: 240,0,0| Number of FF evals: 189
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.sample()Ljava/lang/Object;: I34 Branch 10 IFGE L162 - true: 121,0,0| Number of FF evals: 7578
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.probability(Ljava/lang/Object;)D: I17 Branch 4 IFNONNULL L126 - false: 221,0,0| Number of FF evals: 1081
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.probability(Ljava/lang/Object;)D: I32 Branch 7 IFEQ L126 - false: 92,0,0| Number of FF evals: 2293
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.sample(I)[Ljava/lang/Object;: I32 Branch 12 IF_ICMPGE L189 - false: 69,0,0| Number of FF evals: 6403
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.sample(I)[Ljava/lang/Object;: Line 182: 341,0,0| Number of FF evals: 208
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.sample(I)[Ljava/lang/Object;: I32 Branch 12 IF_ICMPGE L189 - true: 69,0,0| Number of FF evals: 6328
Number of times BBC is called, activated, and useful for org.apache.commons.math3.distribution.DiscreteDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;Ljava/util/List;)V: Line 102: 117,0,0| Number of FF evals: 112
* Search finished after 602s and 902 generations, 529310 statements, best individual has fitness: 28.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 97%
* Total number of goals: 38
* Number of covered goals: 37
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 26
* Number of covered goals: 26
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 14
* Number of covered goals: 14
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 95%
* Total number of goals: 127
* Number of covered goals: 121
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 14
* Number of covered goals: 7
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 7
* Number of covered goals: 7
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 7
* Number of covered goals: 7
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 26
* Number of covered goals: 26
* Generated 24 tests with total length 154
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 52%
* Compiling and checking tests
[MASTER] 02:05:40.766 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:05:41.089 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:05:41.435 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:05:41.797 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:05:42.206 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:05:42.574 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:05:42.834 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:05:43.200 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:05:43.506 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:05:43.798 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:05:44.488 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:05:44.907 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:05:45.224 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:05:45.559 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:05:45.913 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:05:46.175 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:05:46.501 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:05:46.866 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:05:50.466 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:05:50.473 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 02:05:50.475 [logback-1] WARN  JUnitAnalyzer - Failing test:
 LinkedList<Pair<String, Double>> linkedList0 = new LinkedList<Pair<String, Double>>();
Double double0 = new Double(911.561779851);
Pair<String, Double> pair0 = new Pair<String, Double>("bJ`", double0);
linkedList0.add(pair0);
DiscreteDistribution<String> discreteDistribution0 = new DiscreteDistribution<String>((RandomGenerator) null, linkedList0);
discreteDistribution0.sample(2145099701);

[MASTER] 02:05:51.034 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:05:51.318 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:05:51.642 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:05:52.163 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:05:52.332 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:05:53.592 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing tests to file
[MASTER] 02:05:54.864 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing JUnit test case 'DiscreteDistribution_ESTest' to results/Math-8/org.apache.commons.math3.distribution.DiscreteDistribution/BBC-F0-100/tests/16
* Done!

* Computation finished
