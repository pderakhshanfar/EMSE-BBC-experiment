* EvoSuite 1.1.1-SNAPSHOT
* Configuration: default
* Going to generate test cases for class: org.apache.commons.math3.distribution.DiscreteDistribution
* Starting Client-0
* Connecting to master process on port 12631
* Analyzing classpath: 
  - subjects/buggy-versions/Math-8/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math3.distribution.DiscreteDistribution
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 245
* Using seed 3687853113
* Starting evolution
* Initial Number of Goals in DynaMOSA = 62 / 245
[MASTER] 13:37:12.854 [logback-2] ERROR TestCluster - Failed to check cache for org.apache.commons.math3.util.Pair<K, V> : Type points to itself
Number of times BBC is called in total: 0
* Search finished after 602s and 101 generations, 46321 statements, best individual has fitness: 32.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 38
* Number of covered goals: 36
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 26
* Number of covered goals: 25
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 91%
* Total number of goals: 127
* Number of covered goals: 115
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 14
* Number of covered goals: 7
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 7
* Number of covered goals: 7
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 7
* Number of covered goals: 7
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 96%
* Total number of goals: 26
* Number of covered goals: 25
* Generated 24 tests with total length 146
* Resulting test suite's coverage: 86% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 13:44:30.021 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.8640666666666666% of time used, but only 8/24 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 39%
* Compiling and checking tests
[MASTER] 13:45:26.529 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 13:45:26.531 [logback-1] WARN  JUnitAnalyzer - Failing test:
 LinkedList<Pair<Object, Double>> linkedList0 = new LinkedList<Pair<Object, Double>>();
assertEquals(0, linkedList0.size());
assertNotNull(linkedList0);

Double double0 = new Double(4251.014165233);
assertEquals(4251.014165233, (double)double0, 0.01);
assertNotNull(double0);

Object object0 = new Object();
assertNotNull(object0);

Pair<Object, Double> pair0 = new Pair<Object, Double>(object0, double0);
assertNotNull(pair0);

boolean boolean0 = linkedList0.add(pair0);
assertTrue(boolean0);
assertEquals(1, linkedList0.size());
assertTrue(linkedList0.contains(pair0));

DiscreteDistribution<Object> discreteDistribution0 = new DiscreteDistribution<Object>(linkedList0);
assertEquals(1, linkedList0.size());
assertNotNull(discreteDistribution0);
assertTrue(linkedList0.contains(pair0));

discreteDistribution0.sample(2145467478);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing tests to file
* Writing JUnit test case 'DiscreteDistribution_ESTest' to results/Math-8/org.apache.commons.math3.distribution.DiscreteDistribution/default/tests/12
* Done!

* Computation finished
