* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-20
* Going to generate test cases for class: org.apache.commons.collections4.map.MultiValueMap
* Starting Client-0
* Connecting to master process on port 18072
* Analyzing classpath: 
  - subjects/buggy-versions/Collections-27/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.collections4.map.MultiValueMap
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 498
* Using seed 1721366339
* Starting evolution
bbc usage percentage is: 20%
* Initial Number of Goals in DynaMOSA = 206 / 498
[MASTER] 11:18:26.954 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedList<E> : Type points to itself
[MASTER] 11:18:26.954 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 11:18:26.954 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 11:18:26.954 [logback-2] ERROR TestCluster - Failed to check cache for java.util.HashMap<K, V> : Type points to itself
[MASTER] 11:18:27.069 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Collection<E> : Type points to itself
[MASTER] 11:18:32.318 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 11:19:16.532 [logback-2] ERROR TestCluster - Failed to check cache for java.util.ArrayList<E> : Type points to itself
*C2*
*C2*
*C2*
*C2*
*C2*
[MASTER] 11:20:35.691 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
[MASTER] 11:22:43.156 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.apache.commons.collections4.map.MultiValueMap due to org.evosuite.ga.ConstructionFailedException: Error: VariableReference: Statement 3, type java.util.HashMap<java.util.ArrayList<java.lang.Object>, java.util.Collection<org.apache.commons.collections4.functors.ConstantFactory<java.lang.Object>>> is not assignable to java.util.Map<java.util.ArrayList<java.lang.Object>, ? super java.util.Collection<java.lang.Object>>
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
[MASTER] 11:26:05.322 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
*C2*
*C2*
*C2*
[MASTER] 11:26:39.903 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Max recursion depth reached
* Search finished after 604s and 569 generations, 113441 statements, best individual has fitness: 137.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 80%
* Total number of goals: 123
* Number of covered goals: 99
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 77%
* Total number of goals: 83
* Number of covered goals: 64
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 35
* Number of covered goals: 35
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 85%
* Total number of goals: 105
* Number of covered goals: 89
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 66%
* Total number of goals: 50
* Number of covered goals: 33
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 74%
* Total number of goals: 27
* Number of covered goals: 20
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 74%
* Total number of goals: 27
* Number of covered goals: 20
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 76%
* Total number of goals: 83
* Number of covered goals: 63
* Generated 67 tests with total length 350
* Resulting test suite's coverage: 74% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 64%
* Compiling and checking tests
[MASTER] 11:28:52.222 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_4_1634038132102/org/apache/commons/collections4/map/MultiValueMap_4_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_4_1634038132102/org/apache/commons/collections4/map/MultiValueMap_4_tmp__ESTest_scaffolding.java]]
[MASTER] 11:28:52.222 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Collections-27/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 11:28:52.222 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 11:28:52.225 [logback-2] ERROR JUnitAnalyzer - Diagnostic: constructor MultiValueMap in class org.apache.commons.collections4.map.MultiValueMap<K,V> cannot be applied to given types;
  required: java.util.Map<java.lang.String,? super C>,org.apache.commons.collections4.Factory<C>
  found: java.util.Map<java.lang.String,capture#1 of ? super java.util.LinkedList<java.lang.Object>>,org.apache.commons.collections4.Factory<java.util.LinkedList<java.lang.Object>>
  reason: inference variable C has incompatible bounds
    equality constraints: java.util.LinkedList<java.lang.Object>
    upper bounds: java.util.LinkedList<java.lang.Object>,java.util.Collection<java.util.Collection<java.lang.Object>>: 28
[MASTER] 11:28:52.226 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_4_1634038132102/org/apache/commons/collections4/map/MultiValueMap_4_tmp__ESTest.java uses or overrides a deprecated API.: -1
[MASTER] 11:28:52.226 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:deprecation for details.: -1
[MASTER] 11:28:52.226 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Some messages have been simplified; recompile with -Xdiags:verbose to get full output: -1
[MASTER] 11:28:52.227 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_4_1634038132102/org/apache/commons/collections4/map/MultiValueMap_4_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Oct 12 11:28:52 GMT 2021
4:  */
5: 
6: package org.apache.commons.collections4.map;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.Collection;
11: import java.util.LinkedList;
12: import java.util.Map;
13: import org.apache.commons.collections4.Factory;
14: import org.apache.commons.collections4.functors.ConstantFactory;
15: import org.apache.commons.collections4.map.MultiValueMap;
16: import org.evosuite.runtime.EvoRunner;
17: import org.evosuite.runtime.EvoRunnerParameters;
18: import org.junit.runner.RunWith;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
21: public class MultiValueMap_4_tmp__ESTest extends MultiValueMap_4_tmp__ESTest_scaffolding {
22: 
23:   @Test(timeout = 4000)
24:   public void test0()  throws Throwable  {
25:       MultiValueMap<String, Object> multiValueMap0 = new MultiValueMap<String, Object>();
26:       LinkedList<Object> linkedList0 = new LinkedList<Object>();
27:       ConstantFactory<LinkedList<Object>> constantFactory0 = new ConstantFactory<LinkedList<Object>>(linkedList0);
28:       MultiValueMap<String, Collection<Object>> multiValueMap1 = new MultiValueMap<String, Collection<Object>>((Map<String, ? super LinkedList<Object>>) multiValueMap0, (Factory<LinkedList<Object>>) constantFactory0);
29:       Collection<Object> collection0 = multiValueMap1.values();
30:       LinkedList<Object> linkedList1 = new LinkedList<Object>(collection0);
31:       assertTrue(linkedList1.equals((Object)linkedList0));
32:   }
33: }
RegularFileObject[/tmp/EvoSuite_4_1634038132102/org/apache/commons/collections4/map/MultiValueMap_4_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Oct 12 11:28:52 GMT 2021
5:  */
6: 
7: package org.apache.commons.collections4.map;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: @EvoSuiteClassExclude
17: public class MultiValueMap_4_tmp__ESTest_scaffolding {
18: 
19:   @org.junit.Rule 
20:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
21: 
22:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
23: 
24: 
25:   @BeforeClass 
26:   public static void initEvoSuiteFramework() { 
27:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.map.MultiValueMap"; 
28:     org.evosuite.runtime.GuiSupport.initialize(); 
29:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
31:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
32:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
33:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
34:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
35:     setSystemProperties();
36:     initializeClasses();
37:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
38:   } 
39: 
40:   @Before 
41:   public void initTestCase(){ 
42:     threadStopper.storeCurrentThreads();
43:     threadStopper.startRecordingTime();
44:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
45:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
46:     org.evosuite.runtime.GuiSupport.setHeadless(); 
47:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
48:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
49:   } 
50: 
51:   @After 
52:   public void doneWithTestCase(){ 
53:     threadStopper.killAndJoinClientThreads();
54:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
55:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
56:     resetClasses(); 
57:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
59:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
60:   } 
61: 
62:   public static void setSystemProperties() {
63:  
64:     /*No java.lang.System property to set*/
65:   }
66: 
67:   private static void initializeClasses() {
68:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MultiValueMap_4_tmp__ESTest_scaffolding.class.getClassLoader() ,
69:       "org.apache.commons.collections4.MapIterator",
70:       "org.apache.commons.collections4.iterators.IteratorChain",
71:       "org.apache.commons.collections4.functors.ExceptionFactory",
72:       "org.apache.commons.collections4.map.MultiValueMap$Values",
73:       "org.apache.commons.collections4.map.AbstractMapDecorator",
74:       "org.apache.commons.collections4.Get",
75:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
76:       "org.apache.commons.collections4.CollectionUtils",
77:       "org.apache.commons.collections4.map.MultiValueMap",
78:       "org.apache.commons.collections4.FunctorException",
79:       "org.apache.commons.collections4.map.AbstractIterableMap",
80:       "org.apache.commons.collections4.Factory",
81:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
82:       "org.apache.commons.collections4.Unmodifiable",
83:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
84:       "org.apache.commons.collections4.Transformer",
85:       "org.apache.commons.collections4.map.MultiValueMap$1",
86:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
87:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
88:       "org.apache.commons.collections4.ResettableIterator",
89:       "org.apache.commons.collections4.iterators.EmptyIterator",
90:       "org.apache.commons.collections4.functors.ConstantFactory",
91:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
92:       "org.apache.commons.collections4.Put",
93:       "org.apache.commons.collections4.MultiMap",
94:       "org.apache.commons.collections4.IterableMap",
95:       "org.apache.commons.collections4.IterableGet"
96:     );
97:   } 
98: 
99:   private static void resetClasses() {
100:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MultiValueMap_4_tmp__ESTest_scaffolding.class.getClassLoader()); 
101: 
102:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
103:       "org.apache.commons.collections4.map.AbstractIterableMap",
104:       "org.apache.commons.collections4.map.AbstractMapDecorator",
105:       "org.apache.commons.collections4.map.MultiValueMap",
106:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
107:       "org.apache.commons.collections4.map.MultiValueMap$Values",
108:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
109:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
110:       "org.apache.commons.collections4.map.MultiValueMap$1",
111:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
112:       "org.apache.commons.collections4.iterators.EmptyIterator",
113:       "org.apache.commons.collections4.iterators.EmptyListIterator",
114:       "org.apache.commons.collections4.iterators.EmptyOrderedIterator",
115:       "org.apache.commons.collections4.iterators.AbstractEmptyMapIterator",
116:       "org.apache.commons.collections4.iterators.EmptyMapIterator",
117:       "org.apache.commons.collections4.iterators.EmptyOrderedMapIterator",
118:       "org.apache.commons.collections4.functors.ExceptionFactory",
119:       "org.apache.commons.collections4.functors.ConstantFactory",
120:       "org.apache.commons.collections4.iterators.IteratorChain",
121:       "org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter",
122:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
123:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
124:       "org.apache.commons.collections4.CollectionUtils",
125:       "org.apache.commons.collections4.FunctorException",
126:       "org.apache.commons.collections4.functors.InstantiateFactory"
127:     );
128:   }
129: }

[MASTER] 11:28:52.227 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
MultiValueMap<String, Object> multiValueMap0 = new MultiValueMap<String, Object>();
LinkedList<Object> linkedList0 = new LinkedList<Object>();
ConstantFactory<LinkedList<Object>> constantFactory0 = new ConstantFactory<LinkedList<Object>>(linkedList0);
MultiValueMap<String, Collection<Object>> multiValueMap1 = new MultiValueMap<String, Collection<Object>>((Map<String, ? super LinkedList<Object>>) multiValueMap0, (Factory<LinkedList<Object>>) constantFactory0);
Collection<Object> collection0 = multiValueMap1.values();
LinkedList<Object> linkedList1 = new LinkedList<Object>(collection0);
assertTrue(linkedList1.equals((Object)linkedList0));


[MASTER] 11:28:52.510 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_6_1634038132375/org/apache/commons/collections4/map/MultiValueMap_6_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_6_1634038132375/org/apache/commons/collections4/map/MultiValueMap_6_tmp__ESTest_scaffolding.java]]
[MASTER] 11:28:52.510 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Collections-27/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 11:28:52.510 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 11:28:52.511 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: inferred type does not conform to equality constraint(s)
    inferred: java.lang.String
    equality constraints(s): java.lang.String,org.apache.commons.collections4.functors.ConstantFactory<java.lang.Object>: 30
[MASTER] 11:28:52.511 [logback-2] ERROR JUnitAnalyzer - Diagnostic: constructor MultiValueMap in class org.apache.commons.collections4.map.MultiValueMap<K,V> cannot be applied to given types;
  required: java.util.Map<java.util.LinkedList<java.util.Collection<org.apache.commons.collections4.functors.ConstantFactory<java.lang.Object>>>,? super C>,org.apache.commons.collections4.Factory<C>
  found: java.util.Map<java.util.LinkedList<java.util.Collection<org.apache.commons.collections4.functors.ConstantFactory<java.lang.Object>>>,capture#1 of ? super java.util.LinkedList<java.lang.Integer>>,org.apache.commons.collections4.Factory<java.util.LinkedList<java.lang.Integer>>
  reason: inference variable C has incompatible bounds
    equality constraints: java.util.LinkedList<java.lang.Integer>
    upper bounds: java.util.LinkedList<java.lang.Integer>,java.util.Collection<java.util.HashMap<java.lang.String,java.lang.Integer>>: 33
[MASTER] 11:28:52.511 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_6_1634038132375/org/apache/commons/collections4/map/MultiValueMap_6_tmp__ESTest.java uses or overrides a deprecated API.: -1
[MASTER] 11:28:52.511 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:deprecation for details.: -1
[MASTER] 11:28:52.511 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Some messages have been simplified; recompile with -Xdiags:verbose to get full output: -1
[MASTER] 11:28:52.512 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_6_1634038132375/org/apache/commons/collections4/map/MultiValueMap_6_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Oct 12 11:28:52 GMT 2021
4:  */
5: 
6: package org.apache.commons.collections4.map;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.Collection;
12: import java.util.HashMap;
13: import java.util.LinkedList;
14: import java.util.Map;
15: import org.apache.commons.collections4.Factory;
16: import org.apache.commons.collections4.functors.ConstantFactory;
17: import org.apache.commons.collections4.functors.ExceptionFactory;
18: import org.apache.commons.collections4.map.MultiValueMap;
19: import org.evosuite.runtime.EvoRunner;
20: import org.evosuite.runtime.EvoRunnerParameters;
21: import org.junit.runner.RunWith;
22: 
23: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
24: public class MultiValueMap_6_tmp__ESTest extends MultiValueMap_6_tmp__ESTest_scaffolding {
25: 
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       HashMap<LinkedList<Collection<ConstantFactory<Object>>>, Object> hashMap0 = new HashMap<LinkedList<Collection<ConstantFactory<Object>>>, Object>();
29:       Factory<Collection<ConstantFactory<Object>>> factory0 = ExceptionFactory.exceptionFactory();
30:       MultiValueMap<LinkedList<Collection<ConstantFactory<Object>>>, String> multiValueMap0 = MultiValueMap.multiValueMap((Map<LinkedList<Collection<ConstantFactory<Object>>>, ? super Collection<ConstantFactory<Object>>>) hashMap0, factory0);
31:       MultiValueMap<LinkedList<Collection<ConstantFactory<Object>>>, HashMap<String, Integer>> multiValueMap1 = null;
32:       try {
33:         multiValueMap1 = new MultiValueMap<LinkedList<Collection<ConstantFactory<Object>>>, HashMap<String, Integer>>((Map<LinkedList<Collection<ConstantFactory<Object>>>, ? super LinkedList<Integer>>) multiValueMap0, (Factory<LinkedList<Integer>>) null);
34:         fail("Expecting exception: IllegalArgumentException");
35:       
36:       } catch(IllegalArgumentException e) {
37:          //
38:          // The factory must not be null
39:          //
40:          verifyException("org.apache.commons.collections4.map.MultiValueMap", e);
41:       }
42:   }
43: }
RegularFileObject[/tmp/EvoSuite_6_1634038132375/org/apache/commons/collections4/map/MultiValueMap_6_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Oct 12 11:28:52 GMT 2021
5:  */
6: 
7: package org.apache.commons.collections4.map;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: @EvoSuiteClassExclude
17: public class MultiValueMap_6_tmp__ESTest_scaffolding {
18: 
19:   @org.junit.Rule 
20:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
21: 
22:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
23: 
24: 
25:   @BeforeClass 
26:   public static void initEvoSuiteFramework() { 
27:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.map.MultiValueMap"; 
28:     org.evosuite.runtime.GuiSupport.initialize(); 
29:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
31:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
32:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
33:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
34:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
35:     setSystemProperties();
36:     initializeClasses();
37:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
38:   } 
39: 
40:   @Before 
41:   public void initTestCase(){ 
42:     threadStopper.storeCurrentThreads();
43:     threadStopper.startRecordingTime();
44:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
45:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
46:     org.evosuite.runtime.GuiSupport.setHeadless(); 
47:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
48:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
49:   } 
50: 
51:   @After 
52:   public void doneWithTestCase(){ 
53:     threadStopper.killAndJoinClientThreads();
54:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
55:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
56:     resetClasses(); 
57:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
59:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
60:   } 
61: 
62:   public static void setSystemProperties() {
63:  
64:     /*No java.lang.System property to set*/
65:   }
66: 
67:   private static void initializeClasses() {
68:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MultiValueMap_6_tmp__ESTest_scaffolding.class.getClassLoader() ,
69:       "org.apache.commons.collections4.MapIterator",
70:       "org.apache.commons.collections4.iterators.IteratorChain",
71:       "org.apache.commons.collections4.functors.ExceptionFactory",
72:       "org.apache.commons.collections4.map.MultiValueMap$Values",
73:       "org.apache.commons.collections4.map.AbstractMapDecorator",
74:       "org.apache.commons.collections4.Get",
75:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
76:       "org.apache.commons.collections4.CollectionUtils",
77:       "org.apache.commons.collections4.map.MultiValueMap",
78:       "org.apache.commons.collections4.FunctorException",
79:       "org.apache.commons.collections4.map.AbstractIterableMap",
80:       "org.apache.commons.collections4.Factory",
81:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
82:       "org.apache.commons.collections4.Unmodifiable",
83:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
84:       "org.apache.commons.collections4.Transformer",
85:       "org.apache.commons.collections4.map.MultiValueMap$1",
86:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
87:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
88:       "org.apache.commons.collections4.ResettableIterator",
89:       "org.apache.commons.collections4.iterators.EmptyIterator",
90:       "org.apache.commons.collections4.functors.ConstantFactory",
91:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
92:       "org.apache.commons.collections4.Put",
93:       "org.apache.commons.collections4.MultiMap",
94:       "org.apache.commons.collections4.IterableMap",
95:       "org.apache.commons.collections4.IterableGet"
96:     );
97:   } 
98: 
99:   private static void resetClasses() {
100:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MultiValueMap_6_tmp__ESTest_scaffolding.class.getClassLoader()); 
101: 
102:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
103:       "org.apache.commons.collections4.map.AbstractIterableMap",
104:       "org.apache.commons.collections4.map.AbstractMapDecorator",
105:       "org.apache.commons.collections4.map.MultiValueMap",
106:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
107:       "org.apache.commons.collections4.map.MultiValueMap$Values",
108:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
109:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
110:       "org.apache.commons.collections4.map.MultiValueMap$1",
111:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
112:       "org.apache.commons.collections4.iterators.EmptyIterator",
113:       "org.apache.commons.collections4.iterators.EmptyListIterator",
114:       "org.apache.commons.collections4.iterators.EmptyOrderedIterator",
115:       "org.apache.commons.collections4.iterators.AbstractEmptyMapIterator",
116:       "org.apache.commons.collections4.iterators.EmptyMapIterator",
117:       "org.apache.commons.collections4.iterators.EmptyOrderedMapIterator",
118:       "org.apache.commons.collections4.functors.ExceptionFactory",
119:       "org.apache.commons.collections4.functors.ConstantFactory",
120:       "org.apache.commons.collections4.iterators.IteratorChain",
121:       "org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter",
122:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
123:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
124:       "org.apache.commons.collections4.CollectionUtils",
125:       "org.apache.commons.collections4.FunctorException",
126:       "org.apache.commons.collections4.functors.InstantiateFactory"
127:     );
128:   }
129: }

[MASTER] 11:28:52.512 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
HashMap<LinkedList<Collection<ConstantFactory<Object>>>, Object> hashMap0 = new HashMap<LinkedList<Collection<ConstantFactory<Object>>>, Object>();
Factory<Collection<ConstantFactory<Object>>> factory0 = ExceptionFactory.exceptionFactory();
MultiValueMap<LinkedList<Collection<ConstantFactory<Object>>>, String> multiValueMap0 = MultiValueMap.multiValueMap((Map<LinkedList<Collection<ConstantFactory<Object>>>, ? super Collection<ConstantFactory<Object>>>) hashMap0, factory0);
MultiValueMap<LinkedList<Collection<ConstantFactory<Object>>>, HashMap<String, Integer>> multiValueMap1 = new MultiValueMap<LinkedList<Collection<ConstantFactory<Object>>>, HashMap<String, Integer>>((Map<LinkedList<Collection<ConstantFactory<Object>>>, ? super LinkedList<Integer>>) multiValueMap0, (Factory<LinkedList<Integer>>) null);

[MASTER] 11:28:53.325 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_13_1634038133164/org/apache/commons/collections4/map/MultiValueMap_13_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_13_1634038133164/org/apache/commons/collections4/map/MultiValueMap_13_tmp__ESTest_scaffolding.java]]
[MASTER] 11:28:53.378 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Collections-27/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 11:28:53.378 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 11:28:53.380 [logback-2] ERROR JUnitAnalyzer - Diagnostic: constructor MultiValueMap in class org.apache.commons.collections4.map.MultiValueMap<K,V> cannot be applied to given types;
  required: java.util.Map<java.lang.String,? super C>,org.apache.commons.collections4.Factory<C>
  found: java.util.Map<java.lang.String,capture#1 of ? super java.util.Collection<java.lang.String>>,org.apache.commons.collections4.Factory<java.util.Collection<java.lang.String>>
  reason: inference variable C has incompatible bounds
    equality constraints: java.util.Collection<java.lang.String>
    upper bounds: java.util.Collection<java.lang.String>,java.util.Collection<java.lang.Object>: 31
[MASTER] 11:28:53.391 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_13_1634038133164/org/apache/commons/collections4/map/MultiValueMap_13_tmp__ESTest.java uses or overrides a deprecated API.: -1
[MASTER] 11:28:53.391 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:deprecation for details.: -1
[MASTER] 11:28:53.391 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Some messages have been simplified; recompile with -Xdiags:verbose to get full output: -1
[MASTER] 11:28:53.392 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_13_1634038133164/org/apache/commons/collections4/map/MultiValueMap_13_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Oct 12 11:28:53 GMT 2021
4:  */
5: 
6: package org.apache.commons.collections4.map;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.AbstractMap;
11: import java.util.ArrayList;
12: import java.util.Collection;
13: import java.util.HashMap;
14: import java.util.LinkedList;
15: import java.util.Map;
16: import org.apache.commons.collections4.Factory;
17: import org.apache.commons.collections4.functors.ConstantFactory;
18: import org.apache.commons.collections4.map.MultiValueMap;
19: import org.evosuite.runtime.EvoRunner;
20: import org.evosuite.runtime.EvoRunnerParameters;
21: import org.junit.runner.RunWith;
22: 
23: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
24: public class MultiValueMap_13_tmp__ESTest extends MultiValueMap_13_tmp__ESTest_scaffolding {
25: 
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       MultiValueMap<String, ArrayList<String>> multiValueMap0 = new MultiValueMap<String, ArrayList<String>>();
29:       ArrayList<String> arrayList0 = new ArrayList<String>();
30:       ConstantFactory<Collection<String>> constantFactory0 = new ConstantFactory<Collection<String>>(arrayList0);
31:       MultiValueMap<String, Object> multiValueMap1 = new MultiValueMap<String, Object>((Map<String, ? super Collection<String>>) multiValueMap0, (Factory<Collection<String>>) constantFactory0);
32:       LinkedList<String> linkedList0 = new LinkedList<String>();
33:       Factory<LinkedList<String>> factory0 = ConstantFactory.constantFactory(linkedList0);
34:       MultiValueMap<String, String> multiValueMap2 = MultiValueMap.multiValueMap((Map<String, ? super LinkedList<String>>) multiValueMap1, factory0);
35:       multiValueMap2.put((String) null, (Object) null);
36:       HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
37:       ArrayList<AbstractMap.SimpleEntry<Object, Object>> arrayList1 = new ArrayList<AbstractMap.SimpleEntry<Object, Object>>();
38:       ConstantFactory<Collection<AbstractMap.SimpleEntry<Object, Object>>> constantFactory1 = new ConstantFactory<Collection<AbstractMap.SimpleEntry<Object, Object>>>(arrayList1);
39:       MultiValueMap<Object, AbstractMap.SimpleEntry<Object, Object>> multiValueMap3 = MultiValueMap.multiValueMap((Map<Object, ? super Collection<AbstractMap.SimpleEntry<Object, Object>>>) hashMap0, (Factory<Collection<AbstractMap.SimpleEntry<Object, Object>>>) constantFactory1);
40:       multiValueMap3.putAll((Map<?, ?>) multiValueMap1);
41:       assertFalse(multiValueMap1.isEmpty());
42:       assertEquals(1, hashMap0.size());
43:   }
44: }
RegularFileObject[/tmp/EvoSuite_13_1634038133164/org/apache/commons/collections4/map/MultiValueMap_13_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Oct 12 11:28:53 GMT 2021
5:  */
6: 
7: package org.apache.commons.collections4.map;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: @EvoSuiteClassExclude
17: public class MultiValueMap_13_tmp__ESTest_scaffolding {
18: 
19:   @org.junit.Rule 
20:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
21: 
22:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
23: 
24: 
25:   @BeforeClass 
26:   public static void initEvoSuiteFramework() { 
27:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.map.MultiValueMap"; 
28:     org.evosuite.runtime.GuiSupport.initialize(); 
29:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
31:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
32:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
33:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
34:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
35:     setSystemProperties();
36:     initializeClasses();
37:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
38:   } 
39: 
40:   @Before 
41:   public void initTestCase(){ 
42:     threadStopper.storeCurrentThreads();
43:     threadStopper.startRecordingTime();
44:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
45:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
46:     org.evosuite.runtime.GuiSupport.setHeadless(); 
47:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
48:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
49:   } 
50: 
51:   @After 
52:   public void doneWithTestCase(){ 
53:     threadStopper.killAndJoinClientThreads();
54:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
55:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
56:     resetClasses(); 
57:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
59:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
60:   } 
61: 
62:   public static void setSystemProperties() {
63:  
64:     /*No java.lang.System property to set*/
65:   }
66: 
67:   private static void initializeClasses() {
68:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MultiValueMap_13_tmp__ESTest_scaffolding.class.getClassLoader() ,
69:       "org.apache.commons.collections4.MapIterator",
70:       "org.apache.commons.collections4.iterators.IteratorChain",
71:       "org.apache.commons.collections4.functors.ExceptionFactory",
72:       "org.apache.commons.collections4.map.MultiValueMap$Values",
73:       "org.apache.commons.collections4.map.AbstractMapDecorator",
74:       "org.apache.commons.collections4.Get",
75:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
76:       "org.apache.commons.collections4.CollectionUtils",
77:       "org.apache.commons.collections4.map.MultiValueMap",
78:       "org.apache.commons.collections4.FunctorException",
79:       "org.apache.commons.collections4.map.AbstractIterableMap",
80:       "org.apache.commons.collections4.Factory",
81:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
82:       "org.apache.commons.collections4.Unmodifiable",
83:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
84:       "org.apache.commons.collections4.Transformer",
85:       "org.apache.commons.collections4.map.MultiValueMap$1",
86:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
87:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
88:       "org.apache.commons.collections4.ResettableIterator",
89:       "org.apache.commons.collections4.iterators.EmptyIterator",
90:       "org.apache.commons.collections4.functors.ConstantFactory",
91:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
92:       "org.apache.commons.collections4.Put",
93:       "org.apache.commons.collections4.MultiMap",
94:       "org.apache.commons.collections4.IterableMap",
95:       "org.apache.commons.collections4.IterableGet"
96:     );
97:   } 
98: 
99:   private static void resetClasses() {
100:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MultiValueMap_13_tmp__ESTest_scaffolding.class.getClassLoader()); 
101: 
102:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
103:       "org.apache.commons.collections4.map.AbstractIterableMap",
104:       "org.apache.commons.collections4.map.AbstractMapDecorator",
105:       "org.apache.commons.collections4.map.MultiValueMap",
106:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
107:       "org.apache.commons.collections4.map.MultiValueMap$Values",
108:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
109:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
110:       "org.apache.commons.collections4.map.MultiValueMap$1",
111:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
112:       "org.apache.commons.collections4.iterators.EmptyIterator",
113:       "org.apache.commons.collections4.iterators.EmptyListIterator",
114:       "org.apache.commons.collections4.iterators.EmptyOrderedIterator",
115:       "org.apache.commons.collections4.iterators.AbstractEmptyMapIterator",
116:       "org.apache.commons.collections4.iterators.EmptyMapIterator",
117:       "org.apache.commons.collections4.iterators.EmptyOrderedMapIterator",
118:       "org.apache.commons.collections4.functors.ExceptionFactory",
119:       "org.apache.commons.collections4.functors.ConstantFactory",
120:       "org.apache.commons.collections4.iterators.IteratorChain",
121:       "org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter",
122:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
123:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
124:       "org.apache.commons.collections4.CollectionUtils",
125:       "org.apache.commons.collections4.FunctorException",
126:       "org.apache.commons.collections4.functors.InstantiateFactory"
127:     );
128:   }
129: }

[MASTER] 11:28:53.394 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
MultiValueMap<String, ArrayList<String>> multiValueMap0 = new MultiValueMap<String, ArrayList<String>>();
ArrayList<String> arrayList0 = new ArrayList<String>();
ConstantFactory<Collection<String>> constantFactory0 = new ConstantFactory<Collection<String>>(arrayList0);
MultiValueMap<String, Object> multiValueMap1 = new MultiValueMap<String, Object>((Map<String, ? super Collection<String>>) multiValueMap0, (Factory<Collection<String>>) constantFactory0);
LinkedList<String> linkedList0 = new LinkedList<String>();
Factory<LinkedList<String>> factory0 = ConstantFactory.constantFactory(linkedList0);
MultiValueMap<String, String> multiValueMap2 = MultiValueMap.multiValueMap((Map<String, ? super LinkedList<String>>) multiValueMap1, factory0);
multiValueMap2.put((String) null, (Object) null);
HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
ArrayList<AbstractMap.SimpleEntry<Object, Object>> arrayList1 = new ArrayList<AbstractMap.SimpleEntry<Object, Object>>();
ConstantFactory<Collection<AbstractMap.SimpleEntry<Object, Object>>> constantFactory1 = new ConstantFactory<Collection<AbstractMap.SimpleEntry<Object, Object>>>(arrayList1);
MultiValueMap<Object, AbstractMap.SimpleEntry<Object, Object>> multiValueMap3 = MultiValueMap.multiValueMap((Map<Object, ? super Collection<AbstractMap.SimpleEntry<Object, Object>>>) hashMap0, (Factory<Collection<AbstractMap.SimpleEntry<Object, Object>>>) constantFactory1);
multiValueMap3.putAll((Map<?, ?>) multiValueMap1);
assertFalse(multiValueMap1.isEmpty());
assertEquals(1, hashMap0.size());


[MASTER] 11:28:53.843 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_16_1634038133671/org/apache/commons/collections4/map/MultiValueMap_16_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_16_1634038133671/org/apache/commons/collections4/map/MultiValueMap_16_tmp__ESTest_scaffolding.java]]
[MASTER] 11:28:53.844 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Collections-27/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 11:28:53.844 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 11:28:53.845 [logback-2] ERROR JUnitAnalyzer - Diagnostic: constructor MultiValueMap in class org.apache.commons.collections4.map.MultiValueMap<K,V> cannot be applied to given types;
  required: java.util.Map<java.lang.String,? super C>,org.apache.commons.collections4.Factory<C>
  found: java.util.Map<java.lang.String,capture#1 of ? super java.util.LinkedList<java.lang.Object>>,org.apache.commons.collections4.Factory<java.util.LinkedList<java.lang.Object>>
  reason: inference variable C has incompatible bounds
    equality constraints: java.util.LinkedList<java.lang.Object>
    upper bounds: java.util.LinkedList<java.lang.Object>,java.util.Collection<java.lang.String>: 28
[MASTER] 11:28:53.846 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_16_1634038133671/org/apache/commons/collections4/map/MultiValueMap_16_tmp__ESTest.java uses or overrides a deprecated API.: -1
[MASTER] 11:28:53.846 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:deprecation for details.: -1
[MASTER] 11:28:53.846 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Some messages have been simplified; recompile with -Xdiags:verbose to get full output: -1
[MASTER] 11:28:53.847 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_16_1634038133671/org/apache/commons/collections4/map/MultiValueMap_16_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Oct 12 11:28:53 GMT 2021
4:  */
5: 
6: package org.apache.commons.collections4.map;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedList;
11: import java.util.Map;
12: import org.apache.commons.collections4.Factory;
13: import org.apache.commons.collections4.functors.ConstantFactory;
14: import org.apache.commons.collections4.map.MultiValueMap;
15: import org.evosuite.runtime.EvoRunner;
16: import org.evosuite.runtime.EvoRunnerParameters;
17: import org.junit.runner.RunWith;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
20: public class MultiValueMap_16_tmp__ESTest extends MultiValueMap_16_tmp__ESTest_scaffolding {
21: 
22:   @Test(timeout = 4000)
23:   public void test0()  throws Throwable  {
24:       MultiValueMap<String, Object> multiValueMap0 = new MultiValueMap<String, Object>();
25:       multiValueMap0.put((String) null, (Object) null);
26:       LinkedList<Object> linkedList0 = new LinkedList<Object>();
27:       ConstantFactory<LinkedList<Object>> constantFactory0 = new ConstantFactory<LinkedList<Object>>(linkedList0);
28:       MultiValueMap<String, String> multiValueMap1 = new MultiValueMap<String, String>((Map<String, ? super LinkedList<Object>>) multiValueMap0, (Factory<LinkedList<Object>>) constantFactory0);
29:       boolean boolean0 = multiValueMap1.containsValue((Object) null, (Object) null);
30:       assertEquals(1, multiValueMap0.size());
31:       assertTrue(boolean0);
32:   }
33: }
RegularFileObject[/tmp/EvoSuite_16_1634038133671/org/apache/commons/collections4/map/MultiValueMap_16_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Oct 12 11:28:53 GMT 2021
5:  */
6: 
7: package org.apache.commons.collections4.map;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: @EvoSuiteClassExclude
17: public class MultiValueMap_16_tmp__ESTest_scaffolding {
18: 
19:   @org.junit.Rule 
20:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
21: 
22:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
23: 
24: 
25:   @BeforeClass 
26:   public static void initEvoSuiteFramework() { 
27:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.map.MultiValueMap"; 
28:     org.evosuite.runtime.GuiSupport.initialize(); 
29:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
31:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
32:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
33:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
34:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
35:     setSystemProperties();
36:     initializeClasses();
37:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
38:   } 
39: 
40:   @Before 
41:   public void initTestCase(){ 
42:     threadStopper.storeCurrentThreads();
43:     threadStopper.startRecordingTime();
44:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
45:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
46:     org.evosuite.runtime.GuiSupport.setHeadless(); 
47:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
48:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
49:   } 
50: 
51:   @After 
52:   public void doneWithTestCase(){ 
53:     threadStopper.killAndJoinClientThreads();
54:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
55:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
56:     resetClasses(); 
57:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
59:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
60:   } 
61: 
62:   public static void setSystemProperties() {
63:  
64:     /*No java.lang.System property to set*/
65:   }
66: 
67:   private static void initializeClasses() {
68:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MultiValueMap_16_tmp__ESTest_scaffolding.class.getClassLoader() ,
69:       "org.apache.commons.collections4.MapIterator",
70:       "org.apache.commons.collections4.iterators.IteratorChain",
71:       "org.apache.commons.collections4.functors.ExceptionFactory",
72:       "org.apache.commons.collections4.map.MultiValueMap$Values",
73:       "org.apache.commons.collections4.map.AbstractMapDecorator",
74:       "org.apache.commons.collections4.Get",
75:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
76:       "org.apache.commons.collections4.CollectionUtils",
77:       "org.apache.commons.collections4.map.MultiValueMap",
78:       "org.apache.commons.collections4.FunctorException",
79:       "org.apache.commons.collections4.map.AbstractIterableMap",
80:       "org.apache.commons.collections4.Factory",
81:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
82:       "org.apache.commons.collections4.Unmodifiable",
83:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
84:       "org.apache.commons.collections4.Transformer",
85:       "org.apache.commons.collections4.map.MultiValueMap$1",
86:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
87:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
88:       "org.apache.commons.collections4.ResettableIterator",
89:       "org.apache.commons.collections4.iterators.EmptyIterator",
90:       "org.apache.commons.collections4.functors.ConstantFactory",
91:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
92:       "org.apache.commons.collections4.Put",
93:       "org.apache.commons.collections4.MultiMap",
94:       "org.apache.commons.collections4.IterableMap",
95:       "org.apache.commons.collections4.IterableGet"
96:     );
97:   } 
98: 
99:   private static void resetClasses() {
100:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MultiValueMap_16_tmp__ESTest_scaffolding.class.getClassLoader()); 
101: 
102:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
103:       "org.apache.commons.collections4.map.AbstractIterableMap",
104:       "org.apache.commons.collections4.map.AbstractMapDecorator",
105:       "org.apache.commons.collections4.map.MultiValueMap",
106:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
107:       "org.apache.commons.collections4.map.MultiValueMap$Values",
108:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
109:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
110:       "org.apache.commons.collections4.map.MultiValueMap$1",
111:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
112:       "org.apache.commons.collections4.iterators.EmptyIterator",
113:       "org.apache.commons.collections4.iterators.EmptyListIterator",
114:       "org.apache.commons.collections4.iterators.EmptyOrderedIterator",
115:       "org.apache.commons.collections4.iterators.AbstractEmptyMapIterator",
116:       "org.apache.commons.collections4.iterators.EmptyMapIterator",
117:       "org.apache.commons.collections4.iterators.EmptyOrderedMapIterator",
118:       "org.apache.commons.collections4.functors.ExceptionFactory",
119:       "org.apache.commons.collections4.functors.ConstantFactory",
120:       "org.apache.commons.collections4.iterators.IteratorChain",
121:       "org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter",
122:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
123:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
124:       "org.apache.commons.collections4.CollectionUtils",
125:       "org.apache.commons.collections4.FunctorException",
126:       "org.apache.commons.collections4.functors.InstantiateFactory"
127:     );
128:   }
129: }

[MASTER] 11:28:53.856 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
MultiValueMap<String, Object> multiValueMap0 = new MultiValueMap<String, Object>();
multiValueMap0.put((String) null, (Object) null);
LinkedList<Object> linkedList0 = new LinkedList<Object>();
ConstantFactory<LinkedList<Object>> constantFactory0 = new ConstantFactory<LinkedList<Object>>(linkedList0);
MultiValueMap<String, String> multiValueMap1 = new MultiValueMap<String, String>((Map<String, ? super LinkedList<Object>>) multiValueMap0, (Factory<LinkedList<Object>>) constantFactory0);
boolean boolean0 = multiValueMap1.containsValue((Object) null, (Object) null);
assertEquals(1, multiValueMap0.size());
assertTrue(boolean0);


[MASTER] 11:28:54.169 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_18_1634038133936/org/apache/commons/collections4/map/MultiValueMap_18_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_18_1634038133936/org/apache/commons/collections4/map/MultiValueMap_18_tmp__ESTest_scaffolding.java]]
[MASTER] 11:28:54.169 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Collections-27/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 11:28:54.169 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 11:28:54.169 [logback-2] ERROR JUnitAnalyzer - Diagnostic: constructor MultiValueMap in class org.apache.commons.collections4.map.MultiValueMap<K,V> cannot be applied to given types;
  required: java.util.Map<java.lang.String,? super C>,org.apache.commons.collections4.Factory<C>
  found: java.util.Map<java.lang.String,capture#1 of ? super java.util.LinkedList<java.lang.Object>>,org.apache.commons.collections4.Factory<java.util.LinkedList<java.lang.Object>>
  reason: inference variable C has incompatible bounds
    equality constraints: java.util.LinkedList<java.lang.Object>
    upper bounds: java.util.LinkedList<java.lang.Object>,java.util.Collection<java.lang.String>: 28
[MASTER] 11:28:54.169 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_18_1634038133936/org/apache/commons/collections4/map/MultiValueMap_18_tmp__ESTest.java uses or overrides a deprecated API.: -1
[MASTER] 11:28:54.169 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:deprecation for details.: -1
[MASTER] 11:28:54.169 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Some messages have been simplified; recompile with -Xdiags:verbose to get full output: -1
[MASTER] 11:28:54.170 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_18_1634038133936/org/apache/commons/collections4/map/MultiValueMap_18_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Oct 12 11:28:53 GMT 2021
4:  */
5: 
6: package org.apache.commons.collections4.map;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedList;
11: import java.util.Map;
12: import org.apache.commons.collections4.Factory;
13: import org.apache.commons.collections4.functors.ConstantFactory;
14: import org.apache.commons.collections4.map.MultiValueMap;
15: import org.evosuite.runtime.EvoRunner;
16: import org.evosuite.runtime.EvoRunnerParameters;
17: import org.junit.runner.RunWith;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
20: public class MultiValueMap_18_tmp__ESTest extends MultiValueMap_18_tmp__ESTest_scaffolding {
21: 
22:   @Test(timeout = 4000)
23:   public void test0()  throws Throwable  {
24:       MultiValueMap<String, Object> multiValueMap0 = new MultiValueMap<String, Object>();
25:       multiValueMap0.put((String) null, (Object) null);
26:       LinkedList<Object> linkedList0 = new LinkedList<Object>();
27:       ConstantFactory<LinkedList<Object>> constantFactory0 = new ConstantFactory<LinkedList<Object>>(linkedList0);
28:       MultiValueMap<String, String> multiValueMap1 = new MultiValueMap<String, String>((Map<String, ? super LinkedList<Object>>) multiValueMap0, (Factory<LinkedList<Object>>) constantFactory0);
29:       Object object0 = new Object();
30:       boolean boolean0 = multiValueMap1.containsValue((Object) null, object0);
31:       assertEquals(1, multiValueMap0.size());
32:       assertFalse(boolean0);
33:   }
34: }
RegularFileObject[/tmp/EvoSuite_18_1634038133936/org/apache/commons/collections4/map/MultiValueMap_18_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Oct 12 11:28:53 GMT 2021
5:  */
6: 
7: package org.apache.commons.collections4.map;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: @EvoSuiteClassExclude
17: public class MultiValueMap_18_tmp__ESTest_scaffolding {
18: 
19:   @org.junit.Rule 
20:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
21: 
22:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
23: 
24: 
25:   @BeforeClass 
26:   public static void initEvoSuiteFramework() { 
27:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.map.MultiValueMap"; 
28:     org.evosuite.runtime.GuiSupport.initialize(); 
29:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
31:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
32:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
33:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
34:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
35:     setSystemProperties();
36:     initializeClasses();
37:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
38:   } 
39: 
40:   @Before 
41:   public void initTestCase(){ 
42:     threadStopper.storeCurrentThreads();
43:     threadStopper.startRecordingTime();
44:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
45:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
46:     org.evosuite.runtime.GuiSupport.setHeadless(); 
47:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
48:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
49:   } 
50: 
51:   @After 
52:   public void doneWithTestCase(){ 
53:     threadStopper.killAndJoinClientThreads();
54:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
55:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
56:     resetClasses(); 
57:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
59:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
60:   } 
61: 
62:   public static void setSystemProperties() {
63:  
64:     /*No java.lang.System property to set*/
65:   }
66: 
67:   private static void initializeClasses() {
68:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MultiValueMap_18_tmp__ESTest_scaffolding.class.getClassLoader() ,
69:       "org.apache.commons.collections4.MapIterator",
70:       "org.apache.commons.collections4.iterators.IteratorChain",
71:       "org.apache.commons.collections4.functors.ExceptionFactory",
72:       "org.apache.commons.collections4.map.MultiValueMap$Values",
73:       "org.apache.commons.collections4.map.AbstractMapDecorator",
74:       "org.apache.commons.collections4.Get",
75:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
76:       "org.apache.commons.collections4.CollectionUtils",
77:       "org.apache.commons.collections4.map.MultiValueMap",
78:       "org.apache.commons.collections4.FunctorException",
79:       "org.apache.commons.collections4.map.AbstractIterableMap",
80:       "org.apache.commons.collections4.Factory",
81:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
82:       "org.apache.commons.collections4.Unmodifiable",
83:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
84:       "org.apache.commons.collections4.Transformer",
85:       "org.apache.commons.collections4.map.MultiValueMap$1",
86:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
87:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
88:       "org.apache.commons.collections4.ResettableIterator",
89:       "org.apache.commons.collections4.iterators.EmptyIterator",
90:       "org.apache.commons.collections4.functors.ConstantFactory",
91:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
92:       "org.apache.commons.collections4.Put",
93:       "org.apache.commons.collections4.MultiMap",
94:       "org.apache.commons.collections4.IterableMap",
95:       "org.apache.commons.collections4.IterableGet"
96:     );
97:   } 
98: 
99:   private static void resetClasses() {
100:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MultiValueMap_18_tmp__ESTest_scaffolding.class.getClassLoader()); 
101: 
102:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
103:       "org.apache.commons.collections4.map.AbstractIterableMap",
104:       "org.apache.commons.collections4.map.AbstractMapDecorator",
105:       "org.apache.commons.collections4.map.MultiValueMap",
106:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
107:       "org.apache.commons.collections4.map.MultiValueMap$Values",
108:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
109:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
110:       "org.apache.commons.collections4.map.MultiValueMap$1",
111:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
112:       "org.apache.commons.collections4.iterators.EmptyIterator",
113:       "org.apache.commons.collections4.iterators.EmptyListIterator",
114:       "org.apache.commons.collections4.iterators.EmptyOrderedIterator",
115:       "org.apache.commons.collections4.iterators.AbstractEmptyMapIterator",
116:       "org.apache.commons.collections4.iterators.EmptyMapIterator",
117:       "org.apache.commons.collections4.iterators.EmptyOrderedMapIterator",
118:       "org.apache.commons.collections4.functors.ExceptionFactory",
119:       "org.apache.commons.collections4.functors.ConstantFactory",
120:       "org.apache.commons.collections4.iterators.IteratorChain",
121:       "org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter",
122:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
123:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
124:       "org.apache.commons.collections4.CollectionUtils",
125:       "org.apache.commons.collections4.FunctorException",
126:       "org.apache.commons.collections4.functors.InstantiateFactory"
127:     );
128:   }
129: }

[MASTER] 11:28:54.170 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
MultiValueMap<String, Object> multiValueMap0 = new MultiValueMap<String, Object>();
multiValueMap0.put((String) null, (Object) null);
LinkedList<Object> linkedList0 = new LinkedList<Object>();
ConstantFactory<LinkedList<Object>> constantFactory0 = new ConstantFactory<LinkedList<Object>>(linkedList0);
MultiValueMap<String, String> multiValueMap1 = new MultiValueMap<String, String>((Map<String, ? super LinkedList<Object>>) multiValueMap0, (Factory<LinkedList<Object>>) constantFactory0);
Object object0 = new Object();
boolean boolean0 = multiValueMap1.containsValue((Object) null, object0);
assertEquals(1, multiValueMap0.size());
assertFalse(boolean0);


[MASTER] 11:28:54.237 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_19_1634038134171/org/apache/commons/collections4/map/MultiValueMap_19_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_19_1634038134171/org/apache/commons/collections4/map/MultiValueMap_19_tmp__ESTest_scaffolding.java]]
[MASTER] 11:28:54.238 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Collections-27/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 11:28:54.238 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 11:28:54.239 [logback-2] ERROR JUnitAnalyzer - Diagnostic: constructor MultiValueMap in class org.apache.commons.collections4.map.MultiValueMap<K,V> cannot be applied to given types;
  required: java.util.Map<java.lang.String,? super C>,org.apache.commons.collections4.Factory<C>
  found: java.util.Map<java.lang.String,capture#1 of ? super java.util.LinkedList<java.lang.Object>>,org.apache.commons.collections4.Factory<java.util.LinkedList<java.lang.Object>>
  reason: inference variable C has incompatible bounds
    equality constraints: java.util.LinkedList<java.lang.Object>
    upper bounds: java.util.LinkedList<java.lang.Object>,java.util.Collection<java.lang.String>: 28
[MASTER] 11:28:54.239 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_19_1634038134171/org/apache/commons/collections4/map/MultiValueMap_19_tmp__ESTest.java uses or overrides a deprecated API.: -1
[MASTER] 11:28:54.239 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:deprecation for details.: -1
[MASTER] 11:28:54.240 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Some messages have been simplified; recompile with -Xdiags:verbose to get full output: -1
[MASTER] 11:28:54.241 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_19_1634038134171/org/apache/commons/collections4/map/MultiValueMap_19_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Oct 12 11:28:54 GMT 2021
4:  */
5: 
6: package org.apache.commons.collections4.map;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedList;
11: import java.util.Map;
12: import org.apache.commons.collections4.Factory;
13: import org.apache.commons.collections4.functors.ConstantFactory;
14: import org.apache.commons.collections4.map.MultiValueMap;
15: import org.evosuite.runtime.EvoRunner;
16: import org.evosuite.runtime.EvoRunnerParameters;
17: import org.junit.runner.RunWith;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
20: public class MultiValueMap_19_tmp__ESTest extends MultiValueMap_19_tmp__ESTest_scaffolding {
21: 
22:   @Test(timeout = 4000)
23:   public void test0()  throws Throwable  {
24:       MultiValueMap<String, Object> multiValueMap0 = new MultiValueMap<String, Object>();
25:       multiValueMap0.put((String) null, (Object) null);
26:       LinkedList<Object> linkedList0 = new LinkedList<Object>();
27:       ConstantFactory<LinkedList<Object>> constantFactory0 = new ConstantFactory<LinkedList<Object>>(linkedList0);
28:       MultiValueMap<String, String> multiValueMap1 = new MultiValueMap<String, String>((Map<String, ? super LinkedList<Object>>) multiValueMap0, (Factory<LinkedList<Object>>) constantFactory0);
29:       int int0 = multiValueMap1.size((Object) null);
30:       assertFalse(multiValueMap0.isEmpty());
31:       assertEquals(1, int0);
32:   }
33: }
RegularFileObject[/tmp/EvoSuite_19_1634038134171/org/apache/commons/collections4/map/MultiValueMap_19_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Oct 12 11:28:54 GMT 2021
5:  */
6: 
7: package org.apache.commons.collections4.map;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: @EvoSuiteClassExclude
17: public class MultiValueMap_19_tmp__ESTest_scaffolding {
18: 
19:   @org.junit.Rule 
20:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
21: 
22:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
23: 
24: 
25:   @BeforeClass 
26:   public static void initEvoSuiteFramework() { 
27:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.map.MultiValueMap"; 
28:     org.evosuite.runtime.GuiSupport.initialize(); 
29:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
31:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
32:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
33:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
34:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
35:     setSystemProperties();
36:     initializeClasses();
37:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
38:   } 
39: 
40:   @Before 
41:   public void initTestCase(){ 
42:     threadStopper.storeCurrentThreads();
43:     threadStopper.startRecordingTime();
44:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
45:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
46:     org.evosuite.runtime.GuiSupport.setHeadless(); 
47:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
48:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
49:   } 
50: 
51:   @After 
52:   public void doneWithTestCase(){ 
53:     threadStopper.killAndJoinClientThreads();
54:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
55:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
56:     resetClasses(); 
57:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
59:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
60:   } 
61: 
62:   public static void setSystemProperties() {
63:  
64:     /*No java.lang.System property to set*/
65:   }
66: 
67:   private static void initializeClasses() {
68:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MultiValueMap_19_tmp__ESTest_scaffolding.class.getClassLoader() ,
69:       "org.apache.commons.collections4.MapIterator",
70:       "org.apache.commons.collections4.iterators.IteratorChain",
71:       "org.apache.commons.collections4.functors.ExceptionFactory",
72:       "org.apache.commons.collections4.map.MultiValueMap$Values",
73:       "org.apache.commons.collections4.map.AbstractMapDecorator",
74:       "org.apache.commons.collections4.Get",
75:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
76:       "org.apache.commons.collections4.CollectionUtils",
77:       "org.apache.commons.collections4.map.MultiValueMap",
78:       "org.apache.commons.collections4.FunctorException",
79:       "org.apache.commons.collections4.map.AbstractIterableMap",
80:       "org.apache.commons.collections4.Factory",
81:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
82:       "org.apache.commons.collections4.Unmodifiable",
83:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
84:       "org.apache.commons.collections4.Transformer",
85:       "org.apache.commons.collections4.map.MultiValueMap$1",
86:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
87:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
88:       "org.apache.commons.collections4.ResettableIterator",
89:       "org.apache.commons.collections4.iterators.EmptyIterator",
90:       "org.apache.commons.collections4.functors.ConstantFactory",
91:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
92:       "org.apache.commons.collections4.Put",
93:       "org.apache.commons.collections4.MultiMap",
94:       "org.apache.commons.collections4.IterableMap",
95:       "org.apache.commons.collections4.IterableGet"
96:     );
97:   } 
98: 
99:   private static void resetClasses() {
100:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MultiValueMap_19_tmp__ESTest_scaffolding.class.getClassLoader()); 
101: 
102:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
103:       "org.apache.commons.collections4.map.AbstractIterableMap",
104:       "org.apache.commons.collections4.map.AbstractMapDecorator",
105:       "org.apache.commons.collections4.map.MultiValueMap",
106:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
107:       "org.apache.commons.collections4.map.MultiValueMap$Values",
108:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
109:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
110:       "org.apache.commons.collections4.map.MultiValueMap$1",
111:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
112:       "org.apache.commons.collections4.iterators.EmptyIterator",
113:       "org.apache.commons.collections4.iterators.EmptyListIterator",
114:       "org.apache.commons.collections4.iterators.EmptyOrderedIterator",
115:       "org.apache.commons.collections4.iterators.AbstractEmptyMapIterator",
116:       "org.apache.commons.collections4.iterators.EmptyMapIterator",
117:       "org.apache.commons.collections4.iterators.EmptyOrderedMapIterator",
118:       "org.apache.commons.collections4.functors.ExceptionFactory",
119:       "org.apache.commons.collections4.functors.ConstantFactory",
120:       "org.apache.commons.collections4.iterators.IteratorChain",
121:       "org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter",
122:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
123:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
124:       "org.apache.commons.collections4.CollectionUtils",
125:       "org.apache.commons.collections4.FunctorException",
126:       "org.apache.commons.collections4.functors.InstantiateFactory"
127:     );
128:   }
129: }

[MASTER] 11:28:54.247 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
MultiValueMap<String, Object> multiValueMap0 = new MultiValueMap<String, Object>();
multiValueMap0.put((String) null, (Object) null);
LinkedList<Object> linkedList0 = new LinkedList<Object>();
ConstantFactory<LinkedList<Object>> constantFactory0 = new ConstantFactory<LinkedList<Object>>(linkedList0);
MultiValueMap<String, String> multiValueMap1 = new MultiValueMap<String, String>((Map<String, ? super LinkedList<Object>>) multiValueMap0, (Factory<LinkedList<Object>>) constantFactory0);
int int0 = multiValueMap1.size((Object) null);
assertFalse(multiValueMap0.isEmpty());
assertEquals(1, int0);


[MASTER] 11:28:54.526 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_20_1634038134249/org/apache/commons/collections4/map/MultiValueMap_20_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_20_1634038134249/org/apache/commons/collections4/map/MultiValueMap_20_tmp__ESTest_scaffolding.java]]
[MASTER] 11:28:54.526 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Collections-27/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 11:28:54.526 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 11:28:54.529 [logback-2] ERROR JUnitAnalyzer - Diagnostic: constructor MultiValueMap in class org.apache.commons.collections4.map.MultiValueMap<K,V> cannot be applied to given types;
  required: java.util.Map<java.lang.Integer,? super C>,org.apache.commons.collections4.Factory<C>
  found: java.util.Map<java.lang.Integer,capture#1 of ? super java.util.ArrayList<java.lang.Integer>>,org.apache.commons.collections4.Factory<java.util.ArrayList<java.lang.Integer>>
  reason: inference variable C has incompatible bounds
    equality constraints: java.util.ArrayList<java.lang.Integer>
    upper bounds: java.util.ArrayList<java.lang.Integer>,java.util.Collection<java.util.Collection<java.lang.String>>: 28
[MASTER] 11:28:54.531 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_20_1634038134249/org/apache/commons/collections4/map/MultiValueMap_20_tmp__ESTest.java uses or overrides a deprecated API.: -1
[MASTER] 11:28:54.531 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:deprecation for details.: -1
[MASTER] 11:28:54.531 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Some messages have been simplified; recompile with -Xdiags:verbose to get full output: -1
[MASTER] 11:28:54.532 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_20_1634038134249/org/apache/commons/collections4/map/MultiValueMap_20_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Oct 12 11:28:54 GMT 2021
4:  */
5: 
6: package org.apache.commons.collections4.map;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.ArrayList;
11: import java.util.Collection;
12: import java.util.HashMap;
13: import java.util.Map;
14: import org.apache.commons.collections4.Factory;
15: import org.apache.commons.collections4.functors.ExceptionFactory;
16: import org.apache.commons.collections4.map.MultiValueMap;
17: import org.evosuite.runtime.EvoRunner;
18: import org.evosuite.runtime.EvoRunnerParameters;
19: import org.junit.runner.RunWith;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
22: public class MultiValueMap_20_tmp__ESTest extends MultiValueMap_20_tmp__ESTest_scaffolding {
23: 
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       HashMap<Integer, Object> hashMap0 = new HashMap<Integer, Object>();
27:       Factory<ArrayList<Integer>> factory0 = ExceptionFactory.exceptionFactory();
28:       MultiValueMap<Integer, Collection<String>> multiValueMap0 = new MultiValueMap<Integer, Collection<String>>((Map<Integer, ? super ArrayList<Integer>>) hashMap0, factory0);
29:       int int0 = multiValueMap0.size((Object) null);
30:       assertEquals(0, int0);
31:   }
32: }
RegularFileObject[/tmp/EvoSuite_20_1634038134249/org/apache/commons/collections4/map/MultiValueMap_20_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Oct 12 11:28:54 GMT 2021
5:  */
6: 
7: package org.apache.commons.collections4.map;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: @EvoSuiteClassExclude
17: public class MultiValueMap_20_tmp__ESTest_scaffolding {
18: 
19:   @org.junit.Rule 
20:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
21: 
22:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
23: 
24: 
25:   @BeforeClass 
26:   public static void initEvoSuiteFramework() { 
27:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.map.MultiValueMap"; 
28:     org.evosuite.runtime.GuiSupport.initialize(); 
29:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
31:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
32:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
33:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
34:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
35:     setSystemProperties();
36:     initializeClasses();
37:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
38:   } 
39: 
40:   @Before 
41:   public void initTestCase(){ 
42:     threadStopper.storeCurrentThreads();
43:     threadStopper.startRecordingTime();
44:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
45:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
46:     org.evosuite.runtime.GuiSupport.setHeadless(); 
47:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
48:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
49:   } 
50: 
51:   @After 
52:   public void doneWithTestCase(){ 
53:     threadStopper.killAndJoinClientThreads();
54:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
55:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
56:     resetClasses(); 
57:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
59:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
60:   } 
61: 
62:   public static void setSystemProperties() {
63:  
64:     /*No java.lang.System property to set*/
65:   }
66: 
67:   private static void initializeClasses() {
68:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MultiValueMap_20_tmp__ESTest_scaffolding.class.getClassLoader() ,
69:       "org.apache.commons.collections4.MapIterator",
70:       "org.apache.commons.collections4.iterators.IteratorChain",
71:       "org.apache.commons.collections4.functors.ExceptionFactory",
72:       "org.apache.commons.collections4.map.MultiValueMap$Values",
73:       "org.apache.commons.collections4.map.AbstractMapDecorator",
74:       "org.apache.commons.collections4.Get",
75:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
76:       "org.apache.commons.collections4.CollectionUtils",
77:       "org.apache.commons.collections4.map.MultiValueMap",
78:       "org.apache.commons.collections4.FunctorException",
79:       "org.apache.commons.collections4.map.AbstractIterableMap",
80:       "org.apache.commons.collections4.Factory",
81:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
82:       "org.apache.commons.collections4.Unmodifiable",
83:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
84:       "org.apache.commons.collections4.Transformer",
85:       "org.apache.commons.collections4.map.MultiValueMap$1",
86:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
87:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
88:       "org.apache.commons.collections4.ResettableIterator",
89:       "org.apache.commons.collections4.iterators.EmptyIterator",
90:       "org.apache.commons.collections4.functors.ConstantFactory",
91:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
92:       "org.apache.commons.collections4.Put",
93:       "org.apache.commons.collections4.MultiMap",
94:       "org.apache.commons.collections4.IterableMap",
95:       "org.apache.commons.collections4.IterableGet"
96:     );
97:   } 
98: 
99:   private static void resetClasses() {
100:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MultiValueMap_20_tmp__ESTest_scaffolding.class.getClassLoader()); 
101: 
102:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
103:       "org.apache.commons.collections4.map.AbstractIterableMap",
104:       "org.apache.commons.collections4.map.AbstractMapDecorator",
105:       "org.apache.commons.collections4.map.MultiValueMap",
106:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
107:       "org.apache.commons.collections4.map.MultiValueMap$Values",
108:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
109:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
110:       "org.apache.commons.collections4.map.MultiValueMap$1",
111:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
112:       "org.apache.commons.collections4.iterators.EmptyIterator",
113:       "org.apache.commons.collections4.iterators.EmptyListIterator",
114:       "org.apache.commons.collections4.iterators.EmptyOrderedIterator",
115:       "org.apache.commons.collections4.iterators.AbstractEmptyMapIterator",
116:       "org.apache.commons.collections4.iterators.EmptyMapIterator",
117:       "org.apache.commons.collections4.iterators.EmptyOrderedMapIterator",
118:       "org.apache.commons.collections4.functors.ExceptionFactory",
119:       "org.apache.commons.collections4.functors.ConstantFactory",
120:       "org.apache.commons.collections4.iterators.IteratorChain",
121:       "org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter",
122:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
123:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
124:       "org.apache.commons.collections4.CollectionUtils",
125:       "org.apache.commons.collections4.FunctorException",
126:       "org.apache.commons.collections4.functors.InstantiateFactory"
127:     );
128:   }
129: }

[MASTER] 11:28:54.534 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
HashMap<Integer, Object> hashMap0 = new HashMap<Integer, Object>();
Factory<ArrayList<Integer>> factory0 = ExceptionFactory.exceptionFactory();
MultiValueMap<Integer, Collection<String>> multiValueMap0 = new MultiValueMap<Integer, Collection<String>>((Map<Integer, ? super ArrayList<Integer>>) hashMap0, factory0);
int int0 = multiValueMap0.size((Object) null);
assertEquals(0, int0);


[MASTER] 11:28:55.050 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_26_1634038135001/org/apache/commons/collections4/map/MultiValueMap_26_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_26_1634038135001/org/apache/commons/collections4/map/MultiValueMap_26_tmp__ESTest_scaffolding.java]]
[MASTER] 11:28:55.054 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Collections-27/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 11:28:55.055 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 11:28:55.056 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.lang.Class<java.lang.Object> cannot be converted to java.lang.Class<java.util.Collection<java.util.HashMap<java.util.HashMap,java.util.LinkedList>>>: 27
[MASTER] 11:28:55.057 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_26_1634038135001/org/apache/commons/collections4/map/MultiValueMap_26_tmp__ESTest.java uses or overrides a deprecated API.: -1
[MASTER] 11:28:55.057 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:deprecation for details.: -1
[MASTER] 11:28:55.059 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_26_1634038135001/org/apache/commons/collections4/map/MultiValueMap_26_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Oct 12 11:28:55 GMT 2021
4:  */
5: 
6: package org.apache.commons.collections4.map;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.ArrayList;
11: import java.util.Collection;
12: import java.util.HashMap;
13: import java.util.LinkedList;
14: import java.util.Map;
15: import org.apache.commons.collections4.map.MultiValueMap;
16: import org.evosuite.runtime.EvoRunner;
17: import org.evosuite.runtime.EvoRunnerParameters;
18: import org.junit.runner.RunWith;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
21: public class MultiValueMap_26_tmp__ESTest extends MultiValueMap_26_tmp__ESTest_scaffolding {
22: 
23:   @Test(timeout = 4000)
24:   public void test0()  throws Throwable  {
25:       HashMap<ArrayList<Object>, Object> hashMap0 = new HashMap<ArrayList<Object>, Object>();
26:       Class<Object> class0 = Object.class;
27:       MultiValueMap<ArrayList<Object>, HashMap<HashMap, LinkedList>> multiValueMap0 = MultiValueMap.multiValueMap((Map<ArrayList<Object>, ? super Collection<HashMap<HashMap, LinkedList>>>) hashMap0, (Class<Collection<HashMap<HashMap, LinkedList>>>) class0);
28:       assertTrue(multiValueMap0.isEmpty());
29:   }
30: }
RegularFileObject[/tmp/EvoSuite_26_1634038135001/org/apache/commons/collections4/map/MultiValueMap_26_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Oct 12 11:28:55 GMT 2021
5:  */
6: 
7: package org.apache.commons.collections4.map;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: @EvoSuiteClassExclude
17: public class MultiValueMap_26_tmp__ESTest_scaffolding {
18: 
19:   @org.junit.Rule 
20:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
21: 
22:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
23: 
24: 
25:   @BeforeClass 
26:   public static void initEvoSuiteFramework() { 
27:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.map.MultiValueMap"; 
28:     org.evosuite.runtime.GuiSupport.initialize(); 
29:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
31:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
32:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
33:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
34:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
35:     setSystemProperties();
36:     initializeClasses();
37:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
38:   } 
39: 
40:   @Before 
41:   public void initTestCase(){ 
42:     threadStopper.storeCurrentThreads();
43:     threadStopper.startRecordingTime();
44:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
45:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
46:     org.evosuite.runtime.GuiSupport.setHeadless(); 
47:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
48:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
49:   } 
50: 
51:   @After 
52:   public void doneWithTestCase(){ 
53:     threadStopper.killAndJoinClientThreads();
54:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
55:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
56:     resetClasses(); 
57:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
59:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
60:   } 
61: 
62:   public static void setSystemProperties() {
63:  
64:     /*No java.lang.System property to set*/
65:   }
66: 
67:   private static void initializeClasses() {
68:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MultiValueMap_26_tmp__ESTest_scaffolding.class.getClassLoader() ,
69:       "org.apache.commons.collections4.MapIterator",
70:       "org.apache.commons.collections4.iterators.IteratorChain",
71:       "org.apache.commons.collections4.functors.ExceptionFactory",
72:       "org.apache.commons.collections4.map.MultiValueMap$Values",
73:       "org.apache.commons.collections4.map.AbstractMapDecorator",
74:       "org.apache.commons.collections4.Get",
75:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
76:       "org.apache.commons.collections4.CollectionUtils",
77:       "org.apache.commons.collections4.map.MultiValueMap",
78:       "org.apache.commons.collections4.FunctorException",
79:       "org.apache.commons.collections4.map.AbstractIterableMap",
80:       "org.apache.commons.collections4.Factory",
81:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
82:       "org.apache.commons.collections4.Unmodifiable",
83:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
84:       "org.apache.commons.collections4.Transformer",
85:       "org.apache.commons.collections4.map.MultiValueMap$1",
86:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
87:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
88:       "org.apache.commons.collections4.ResettableIterator",
89:       "org.apache.commons.collections4.iterators.EmptyIterator",
90:       "org.apache.commons.collections4.functors.ConstantFactory",
91:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
92:       "org.apache.commons.collections4.Put",
93:       "org.apache.commons.collections4.MultiMap",
94:       "org.apache.commons.collections4.IterableMap",
95:       "org.apache.commons.collections4.IterableGet"
96:     );
97:   } 
98: 
99:   private static void resetClasses() {
100:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MultiValueMap_26_tmp__ESTest_scaffolding.class.getClassLoader()); 
101: 
102:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
103:       "org.apache.commons.collections4.map.AbstractIterableMap",
104:       "org.apache.commons.collections4.map.AbstractMapDecorator",
105:       "org.apache.commons.collections4.map.MultiValueMap",
106:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
107:       "org.apache.commons.collections4.map.MultiValueMap$Values",
108:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
109:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
110:       "org.apache.commons.collections4.map.MultiValueMap$1",
111:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
112:       "org.apache.commons.collections4.iterators.EmptyIterator",
113:       "org.apache.commons.collections4.iterators.EmptyListIterator",
114:       "org.apache.commons.collections4.iterators.EmptyOrderedIterator",
115:       "org.apache.commons.collections4.iterators.AbstractEmptyMapIterator",
116:       "org.apache.commons.collections4.iterators.EmptyMapIterator",
117:       "org.apache.commons.collections4.iterators.EmptyOrderedMapIterator",
118:       "org.apache.commons.collections4.functors.ExceptionFactory",
119:       "org.apache.commons.collections4.functors.ConstantFactory",
120:       "org.apache.commons.collections4.iterators.IteratorChain",
121:       "org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter",
122:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
123:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
124:       "org.apache.commons.collections4.CollectionUtils",
125:       "org.apache.commons.collections4.FunctorException",
126:       "org.apache.commons.collections4.functors.InstantiateFactory"
127:     );
128:   }
129: }

[MASTER] 11:28:55.066 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
HashMap<ArrayList<Object>, Object> hashMap0 = new HashMap<ArrayList<Object>, Object>();
Class<Object> class0 = Object.class;
MultiValueMap<ArrayList<Object>, HashMap<HashMap, LinkedList>> multiValueMap0 = MultiValueMap.multiValueMap((Map<ArrayList<Object>, ? super Collection<HashMap<HashMap, LinkedList>>>) hashMap0, (Class<Collection<HashMap<HashMap, LinkedList>>>) class0);
assertTrue(multiValueMap0.isEmpty());


[MASTER] 11:28:56.121 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_36_1634038136048/org/apache/commons/collections4/map/MultiValueMap_36_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_36_1634038136048/org/apache/commons/collections4/map/MultiValueMap_36_tmp__ESTest_scaffolding.java]]
[MASTER] 11:28:56.127 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Collections-27/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 11:28:56.127 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 11:28:56.128 [logback-2] ERROR JUnitAnalyzer - Diagnostic: constructor MultiValueMap in class org.apache.commons.collections4.map.MultiValueMap<K,V> cannot be applied to given types;
  required: java.util.Map<java.util.Collection<java.lang.Object>,? super C>,org.apache.commons.collections4.Factory<C>
  found: java.util.Map<java.util.Collection<java.lang.Object>,capture#1 of ? super java.util.LinkedList<java.lang.Object>>,org.apache.commons.collections4.Factory<java.util.LinkedList<java.lang.Object>>
  reason: inference variable C has incompatible bounds
    equality constraints: java.util.LinkedList<java.lang.Object>
    upper bounds: java.util.LinkedList<java.lang.Object>,java.util.Collection<java.util.ArrayList<java.lang.Object>>: 30
[MASTER] 11:28:56.129 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_36_1634038136048/org/apache/commons/collections4/map/MultiValueMap_36_tmp__ESTest.java uses or overrides a deprecated API.: -1
[MASTER] 11:28:56.130 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:deprecation for details.: -1
[MASTER] 11:28:56.130 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Some messages have been simplified; recompile with -Xdiags:verbose to get full output: -1
[MASTER] 11:28:56.130 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_36_1634038136048/org/apache/commons/collections4/map/MultiValueMap_36_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Oct 12 11:28:56 GMT 2021
4:  */
5: 
6: package org.apache.commons.collections4.map;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.ArrayList;
12: import java.util.Collection;
13: import java.util.LinkedList;
14: import java.util.Map;
15: import org.apache.commons.collections4.Factory;
16: import org.apache.commons.collections4.functors.ConstantFactory;
17: import org.apache.commons.collections4.functors.ExceptionFactory;
18: import org.apache.commons.collections4.map.MultiValueMap;
19: import org.evosuite.runtime.EvoRunner;
20: import org.evosuite.runtime.EvoRunnerParameters;
21: import org.junit.runner.RunWith;
22: 
23: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
24: public class MultiValueMap_36_tmp__ESTest extends MultiValueMap_36_tmp__ESTest_scaffolding {
25: 
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       MultiValueMap<Collection<Object>, ConstantFactory<Object>> multiValueMap0 = new MultiValueMap<Collection<Object>, ConstantFactory<Object>>();
29:       Factory<LinkedList<Object>> factory0 = ExceptionFactory.exceptionFactory();
30:       MultiValueMap<Collection<Object>, ArrayList<Object>> multiValueMap1 = new MultiValueMap<Collection<Object>, ArrayList<Object>>((Map<Collection<Object>, ? super LinkedList<Object>>) multiValueMap0, factory0);
31:       // Undeclared exception!
32:       try { 
33:         multiValueMap1.createCollection(5196);
34:         fail("Expecting exception: RuntimeException");
35:       
36:       } catch(RuntimeException e) {
37:          //
38:          // ExceptionFactory invoked
39:          //
40:          verifyException("org.apache.commons.collections4.functors.ExceptionFactory", e);
41:       }
42:   }
43: }
RegularFileObject[/tmp/EvoSuite_36_1634038136048/org/apache/commons/collections4/map/MultiValueMap_36_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Oct 12 11:28:56 GMT 2021
5:  */
6: 
7: package org.apache.commons.collections4.map;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: @EvoSuiteClassExclude
17: public class MultiValueMap_36_tmp__ESTest_scaffolding {
18: 
19:   @org.junit.Rule 
20:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
21: 
22:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
23: 
24: 
25:   @BeforeClass 
26:   public static void initEvoSuiteFramework() { 
27:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.map.MultiValueMap"; 
28:     org.evosuite.runtime.GuiSupport.initialize(); 
29:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
31:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
32:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
33:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
34:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
35:     setSystemProperties();
36:     initializeClasses();
37:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
38:   } 
39: 
40:   @Before 
41:   public void initTestCase(){ 
42:     threadStopper.storeCurrentThreads();
43:     threadStopper.startRecordingTime();
44:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
45:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
46:     org.evosuite.runtime.GuiSupport.setHeadless(); 
47:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
48:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
49:   } 
50: 
51:   @After 
52:   public void doneWithTestCase(){ 
53:     threadStopper.killAndJoinClientThreads();
54:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
55:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
56:     resetClasses(); 
57:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
59:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
60:   } 
61: 
62:   public static void setSystemProperties() {
63:  
64:     /*No java.lang.System property to set*/
65:   }
66: 
67:   private static void initializeClasses() {
68:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MultiValueMap_36_tmp__ESTest_scaffolding.class.getClassLoader() ,
69:       "org.apache.commons.collections4.MapIterator",
70:       "org.apache.commons.collections4.iterators.IteratorChain",
71:       "org.apache.commons.collections4.functors.ExceptionFactory",
72:       "org.apache.commons.collections4.map.MultiValueMap$Values",
73:       "org.apache.commons.collections4.map.AbstractMapDecorator",
74:       "org.apache.commons.collections4.Get",
75:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
76:       "org.apache.commons.collections4.CollectionUtils",
77:       "org.apache.commons.collections4.map.MultiValueMap",
78:       "org.apache.commons.collections4.FunctorException",
79:       "org.apache.commons.collections4.map.AbstractIterableMap",
80:       "org.apache.commons.collections4.Factory",
81:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
82:       "org.apache.commons.collections4.Unmodifiable",
83:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
84:       "org.apache.commons.collections4.Transformer",
85:       "org.apache.commons.collections4.map.MultiValueMap$1",
86:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
87:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
88:       "org.apache.commons.collections4.ResettableIterator",
89:       "org.apache.commons.collections4.iterators.EmptyIterator",
90:       "org.apache.commons.collections4.functors.ConstantFactory",
91:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
92:       "org.apache.commons.collections4.Put",
93:       "org.apache.commons.collections4.MultiMap",
94:       "org.apache.commons.collections4.IterableMap",
95:       "org.apache.commons.collections4.IterableGet"
96:     );
97:   } 
98: 
99:   private static void resetClasses() {
100:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MultiValueMap_36_tmp__ESTest_scaffolding.class.getClassLoader()); 
101: 
102:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
103:       "org.apache.commons.collections4.map.AbstractIterableMap",
104:       "org.apache.commons.collections4.map.AbstractMapDecorator",
105:       "org.apache.commons.collections4.map.MultiValueMap",
106:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
107:       "org.apache.commons.collections4.map.MultiValueMap$Values",
108:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
109:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
110:       "org.apache.commons.collections4.map.MultiValueMap$1",
111:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
112:       "org.apache.commons.collections4.iterators.EmptyIterator",
113:       "org.apache.commons.collections4.iterators.EmptyListIterator",
114:       "org.apache.commons.collections4.iterators.EmptyOrderedIterator",
115:       "org.apache.commons.collections4.iterators.AbstractEmptyMapIterator",
116:       "org.apache.commons.collections4.iterators.EmptyMapIterator",
117:       "org.apache.commons.collections4.iterators.EmptyOrderedMapIterator",
118:       "org.apache.commons.collections4.functors.ExceptionFactory",
119:       "org.apache.commons.collections4.functors.ConstantFactory",
120:       "org.apache.commons.collections4.iterators.IteratorChain",
121:       "org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter",
122:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
123:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
124:       "org.apache.commons.collections4.CollectionUtils",
125:       "org.apache.commons.collections4.FunctorException",
126:       "org.apache.commons.collections4.functors.InstantiateFactory"
127:     );
128:   }
129: }

[MASTER] 11:28:56.132 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
MultiValueMap<Collection<Object>, ConstantFactory<Object>> multiValueMap0 = new MultiValueMap<Collection<Object>, ConstantFactory<Object>>();
Factory<LinkedList<Object>> factory0 = ExceptionFactory.exceptionFactory();
MultiValueMap<Collection<Object>, ArrayList<Object>> multiValueMap1 = new MultiValueMap<Collection<Object>, ArrayList<Object>>((Map<Collection<Object>, ? super LinkedList<Object>>) multiValueMap0, factory0);
multiValueMap1.createCollection(5196);

[MASTER] 11:28:56.720 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_40_1634038136423/org/apache/commons/collections4/map/MultiValueMap_40_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_40_1634038136423/org/apache/commons/collections4/map/MultiValueMap_40_tmp__ESTest_scaffolding.java]]
[MASTER] 11:28:56.729 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Collections-27/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 11:28:56.730 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 11:28:56.731 [logback-2] ERROR JUnitAnalyzer - Diagnostic: constructor MultiValueMap in class org.apache.commons.collections4.map.MultiValueMap<K,V> cannot be applied to given types;
  required: java.util.Map<java.util.LinkedList<java.util.Collection<org.apache.commons.collections4.functors.ConstantFactory<java.lang.Object>>>,? super C>,org.apache.commons.collections4.Factory<C>
  found: java.util.Map<java.util.LinkedList<java.util.Collection<org.apache.commons.collections4.functors.ConstantFactory<java.lang.Object>>>,capture#1 of ? super java.util.Collection<org.apache.commons.collections4.functors.ConstantFactory<java.lang.Object>>>,org.apache.commons.collections4.Factory<java.util.Collection<org.apache.commons.collections4.functors.ConstantFactory<java.lang.Object>>>
  reason: inference variable C has incompatible bounds
    equality constraints: java.util.Collection<org.apache.commons.collections4.functors.ConstantFactory<java.lang.Object>>
    upper bounds: java.util.Collection<org.apache.commons.collections4.functors.ConstantFactory<java.lang.Object>>,java.util.Collection<java.util.ArrayList<java.util.Collection<org.apache.commons.collections4.functors.ConstantFactory<java.lang.Object>>>>: 36
[MASTER] 11:28:56.732 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_40_1634038136423/org/apache/commons/collections4/map/MultiValueMap_40_tmp__ESTest.java uses or overrides a deprecated API.: -1
[MASTER] 11:28:56.732 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:deprecation for details.: -1
[MASTER] 11:28:56.733 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Some messages have been simplified; recompile with -Xdiags:verbose to get full output: -1
[MASTER] 11:28:56.733 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_40_1634038136423/org/apache/commons/collections4/map/MultiValueMap_40_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Oct 12 11:28:56 GMT 2021
4:  */
5: 
6: package org.apache.commons.collections4.map;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.ArrayList;
12: import java.util.Collection;
13: import java.util.HashMap;
14: import java.util.LinkedList;
15: import java.util.Map;
16: import org.apache.commons.collections4.Factory;
17: import org.apache.commons.collections4.functors.ConstantFactory;
18: import org.apache.commons.collections4.map.MultiValueMap;
19: import org.evosuite.runtime.EvoRunner;
20: import org.evosuite.runtime.EvoRunnerParameters;
21: import org.junit.runner.RunWith;
22: 
23: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
24: public class MultiValueMap_40_tmp__ESTest extends MultiValueMap_40_tmp__ESTest_scaffolding {
25: 
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       MultiValueMap<LinkedList<String>, LinkedList<Object>> multiValueMap0 = new MultiValueMap<LinkedList<String>, LinkedList<Object>>();
29:       MultiValueMap<ArrayList<String>, Collection<ConstantFactory<Object>>> multiValueMap1 = new MultiValueMap<ArrayList<String>, Collection<ConstantFactory<Object>>>();
30:       ArrayList<String> arrayList0 = new ArrayList<String>();
31:       Object object0 = multiValueMap1.put(arrayList0, multiValueMap0);
32:       HashMap<LinkedList<Collection<ConstantFactory<Object>>>, Collection<ConstantFactory<Object>>> hashMap0 = new HashMap<LinkedList<Collection<ConstantFactory<Object>>>, Collection<ConstantFactory<Object>>>();
33:       LinkedList<Collection<ConstantFactory<Object>>> linkedList0 = new LinkedList<Collection<ConstantFactory<Object>>>();
34:       LinkedList<ConstantFactory<Object>> linkedList1 = new LinkedList<ConstantFactory<Object>>();
35:       Factory<Collection<ConstantFactory<Object>>> factory0 = ConstantFactory.constantFactory((Collection<ConstantFactory<Object>>) linkedList1);
36:       MultiValueMap<LinkedList<Collection<ConstantFactory<Object>>>, ArrayList<Collection<ConstantFactory<Object>>>> multiValueMap2 = new MultiValueMap<LinkedList<Collection<ConstantFactory<Object>>>, ArrayList<Collection<ConstantFactory<Object>>>>((Map<LinkedList<Collection<ConstantFactory<Object>>>, ? super Collection<ConstantFactory<Object>>>) hashMap0, factory0);
37:       multiValueMap2.put(linkedList0, object0);
38:       MultiValueMap<LinkedList<String>, ConstantFactory<Collection<ConstantFactory<Object>>>> multiValueMap3 = MultiValueMap.multiValueMap((Map<LinkedList<String>, ? super Collection<ConstantFactory<Collection<ConstantFactory<Object>>>>>) multiValueMap0);
39:       LinkedList<String> linkedList2 = new LinkedList<String>();
40:       multiValueMap3.put(linkedList2, multiValueMap2);
41:       // Undeclared exception!
42:       try { 
43:         multiValueMap3.iterator((Object) multiValueMap2);
44:         fail("Expecting exception: StackOverflowError");
45:       
46:       } catch(StackOverflowError e) {
47:          //
48:          // no message in exception (getMessage() returned null)
49:          //
50:       }
51:   }
52: }
RegularFileObject[/tmp/EvoSuite_40_1634038136423/org/apache/commons/collections4/map/MultiValueMap_40_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Oct 12 11:28:56 GMT 2021
5:  */
6: 
7: package org.apache.commons.collections4.map;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: @EvoSuiteClassExclude
17: public class MultiValueMap_40_tmp__ESTest_scaffolding {
18: 
19:   @org.junit.Rule 
20:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
21: 
22:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
23: 
24: 
25:   @BeforeClass 
26:   public static void initEvoSuiteFramework() { 
27:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.map.MultiValueMap"; 
28:     org.evosuite.runtime.GuiSupport.initialize(); 
29:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
31:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
32:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
33:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
34:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
35:     setSystemProperties();
36:     initializeClasses();
37:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
38:   } 
39: 
40:   @Before 
41:   public void initTestCase(){ 
42:     threadStopper.storeCurrentThreads();
43:     threadStopper.startRecordingTime();
44:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
45:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
46:     org.evosuite.runtime.GuiSupport.setHeadless(); 
47:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
48:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
49:   } 
50: 
51:   @After 
52:   public void doneWithTestCase(){ 
53:     threadStopper.killAndJoinClientThreads();
54:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
55:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
56:     resetClasses(); 
57:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
59:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
60:   } 
61: 
62:   public static void setSystemProperties() {
63:  
64:     /*No java.lang.System property to set*/
65:   }
66: 
67:   private static void initializeClasses() {
68:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MultiValueMap_40_tmp__ESTest_scaffolding.class.getClassLoader() ,
69:       "org.apache.commons.collections4.MapIterator",
70:       "org.apache.commons.collections4.iterators.IteratorChain",
71:       "org.apache.commons.collections4.functors.ExceptionFactory",
72:       "org.apache.commons.collections4.map.MultiValueMap$Values",
73:       "org.apache.commons.collections4.map.AbstractMapDecorator",
74:       "org.apache.commons.collections4.Get",
75:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
76:       "org.apache.commons.collections4.CollectionUtils",
77:       "org.apache.commons.collections4.map.MultiValueMap",
78:       "org.apache.commons.collections4.FunctorException",
79:       "org.apache.commons.collections4.map.AbstractIterableMap",
80:       "org.apache.commons.collections4.Factory",
81:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
82:       "org.apache.commons.collections4.Unmodifiable",
83:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
84:       "org.apache.commons.collections4.Transformer",
85:       "org.apache.commons.collections4.map.MultiValueMap$1",
86:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
87:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
88:       "org.apache.commons.collections4.ResettableIterator",
89:       "org.apache.commons.collections4.iterators.EmptyIterator",
90:       "org.apache.commons.collections4.functors.ConstantFactory",
91:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
92:       "org.apache.commons.collections4.Put",
93:       "org.apache.commons.collections4.MultiMap",
94:       "org.apache.commons.collections4.IterableMap",
95:       "org.apache.commons.collections4.IterableGet"
96:     );
97:   } 
98: 
99:   private static void resetClasses() {
100:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MultiValueMap_40_tmp__ESTest_scaffolding.class.getClassLoader()); 
101: 
102:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
103:       "org.apache.commons.collections4.map.AbstractIterableMap",
104:       "org.apache.commons.collections4.map.AbstractMapDecorator",
105:       "org.apache.commons.collections4.map.MultiValueMap",
106:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
107:       "org.apache.commons.collections4.map.MultiValueMap$Values",
108:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
109:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
110:       "org.apache.commons.collections4.map.MultiValueMap$1",
111:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
112:       "org.apache.commons.collections4.iterators.EmptyIterator",
113:       "org.apache.commons.collections4.iterators.EmptyListIterator",
114:       "org.apache.commons.collections4.iterators.EmptyOrderedIterator",
115:       "org.apache.commons.collections4.iterators.AbstractEmptyMapIterator",
116:       "org.apache.commons.collections4.iterators.EmptyMapIterator",
117:       "org.apache.commons.collections4.iterators.EmptyOrderedMapIterator",
118:       "org.apache.commons.collections4.functors.ExceptionFactory",
119:       "org.apache.commons.collections4.functors.ConstantFactory",
120:       "org.apache.commons.collections4.iterators.IteratorChain",
121:       "org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter",
122:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
123:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
124:       "org.apache.commons.collections4.CollectionUtils",
125:       "org.apache.commons.collections4.FunctorException",
126:       "org.apache.commons.collections4.functors.InstantiateFactory"
127:     );
128:   }
129: }

[MASTER] 11:28:56.734 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
MultiValueMap<LinkedList<String>, LinkedList<Object>> multiValueMap0 = new MultiValueMap<LinkedList<String>, LinkedList<Object>>();
MultiValueMap<ArrayList<String>, Collection<ConstantFactory<Object>>> multiValueMap1 = new MultiValueMap<ArrayList<String>, Collection<ConstantFactory<Object>>>();
ArrayList<String> arrayList0 = new ArrayList<String>();
Object object0 = multiValueMap1.put(arrayList0, multiValueMap0);
HashMap<LinkedList<Collection<ConstantFactory<Object>>>, Collection<ConstantFactory<Object>>> hashMap0 = new HashMap<LinkedList<Collection<ConstantFactory<Object>>>, Collection<ConstantFactory<Object>>>();
LinkedList<Collection<ConstantFactory<Object>>> linkedList0 = new LinkedList<Collection<ConstantFactory<Object>>>();
LinkedList<ConstantFactory<Object>> linkedList1 = new LinkedList<ConstantFactory<Object>>();
Factory<Collection<ConstantFactory<Object>>> factory0 = ConstantFactory.constantFactory((Collection<ConstantFactory<Object>>) linkedList1);
MultiValueMap<LinkedList<Collection<ConstantFactory<Object>>>, ArrayList<Collection<ConstantFactory<Object>>>> multiValueMap2 = new MultiValueMap<LinkedList<Collection<ConstantFactory<Object>>>, ArrayList<Collection<ConstantFactory<Object>>>>((Map<LinkedList<Collection<ConstantFactory<Object>>>, ? super Collection<ConstantFactory<Object>>>) hashMap0, factory0);
multiValueMap2.put(linkedList0, object0);
MultiValueMap<LinkedList<String>, ConstantFactory<Collection<ConstantFactory<Object>>>> multiValueMap3 = MultiValueMap.multiValueMap((Map<LinkedList<String>, ? super Collection<ConstantFactory<Collection<ConstantFactory<Object>>>>>) multiValueMap0);
LinkedList<String> linkedList2 = new LinkedList<String>();
multiValueMap3.put(linkedList2, multiValueMap2);
multiValueMap3.iterator((Object) multiValueMap2);

[MASTER] 11:28:56.808 [logback-1] WARN  JUnitAnalyzer - Failed to create tmp dir
[MASTER] 11:28:56.808 [logback-2] ERROR JUnitAnalyzer - Cannot create tmp dir: /tmp/EvoSuite_42_1634038136808
[MASTER] 11:28:57.894 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:28:58.498 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:28:58.781 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:28:59.049 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:28:59.322 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:28:59.681 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:28:59.835 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:28:59.984 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:29:00.193 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:29:00.399 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:29:00.583 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:29:00.787 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:29:00.975 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:29:01.191 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:29:01.311 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:29:01.456 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:29:01.705 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:29:01.839 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:29:01.986 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:29:02.071 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:29:02.309 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:29:02.576 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:29:02.855 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:29:03.030 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:29:03.278 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:29:03.285 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: StackOverflowError
[MASTER] 11:29:03.285 [logback-1] WARN  JUnitAnalyzer - Failing test:
 HashMap<LinkedList<Object>, Object> hashMap0 = new HashMap<LinkedList<Object>, Object>();
LinkedList<Object> linkedList0 = new LinkedList<Object>();
linkedList0.add((Object) hashMap0);
hashMap0.put(linkedList0, linkedList0);
MultiValueMap<LinkedList<Object>, String> multiValueMap0 = MultiValueMap.multiValueMap((Map<LinkedList<Object>, ? super Collection<String>>) hashMap0);
multiValueMap0.containsValue((Object) multiValueMap0);

[MASTER] 11:29:03.541 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:29:03.743 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:29:03.996 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:29:04.326 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:29:04.670 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:29:04.865 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:29:04.988 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:29:05.083 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_75_1634038144989/org/apache/commons/collections4/map/MultiValueMap_74_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_75_1634038144989/org/apache/commons/collections4/map/MultiValueMap_74_tmp__ESTest_scaffolding.java]]
[MASTER] 11:29:05.084 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Collections-27/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 11:29:05.084 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 11:29:05.084 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.lang.Class<java.lang.Integer> cannot be converted to java.lang.Class<java.util.LinkedList<java.util.AbstractMap.SimpleEntry<java.util.ArrayList,java.lang.Integer>>>: 28
[MASTER] 11:29:05.084 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_75_1634038144989/org/apache/commons/collections4/map/MultiValueMap_74_tmp__ESTest.java uses or overrides a deprecated API.: -1
[MASTER] 11:29:05.085 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:deprecation for details.: -1
[MASTER] 11:29:05.085 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_75_1634038144989/org/apache/commons/collections4/map/MultiValueMap_74_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Oct 12 11:29:05 GMT 2021
4:  */
5: 
6: package org.apache.commons.collections4.map;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.AbstractMap;
12: import java.util.ArrayList;
13: import java.util.LinkedList;
14: import java.util.Map;
15: import org.apache.commons.collections4.map.MultiValueMap;
16: import org.evosuite.runtime.EvoRunner;
17: import org.evosuite.runtime.EvoRunnerParameters;
18: import org.junit.runner.RunWith;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
21: public class MultiValueMap_74_tmp__ESTest extends MultiValueMap_74_tmp__ESTest_scaffolding {
22: 
23:   @Test(timeout = 4000)
24:   public void test0()  throws Throwable  {
25:       Class<Integer> class0 = Integer.class;
26:       // Undeclared exception!
27:       try { 
28:         MultiValueMap.multiValueMap((Map<Integer, ? super LinkedList<AbstractMap.SimpleEntry<ArrayList, Integer>>>) null, (Class<LinkedList<AbstractMap.SimpleEntry<ArrayList, Integer>>>) class0);
29:         fail("Expecting exception: NullPointerException");
30:       
31:       } catch(NullPointerException e) {
32:          //
33:          // Map must not be null.
34:          //
35:          verifyException("org.apache.commons.collections4.map.AbstractMapDecorator", e);
36:       }
37:   }
38: }
RegularFileObject[/tmp/EvoSuite_75_1634038144989/org/apache/commons/collections4/map/MultiValueMap_74_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Oct 12 11:29:05 GMT 2021
5:  */
6: 
7: package org.apache.commons.collections4.map;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: @EvoSuiteClassExclude
17: public class MultiValueMap_74_tmp__ESTest_scaffolding {
18: 
19:   @org.junit.Rule 
20:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
21: 
22:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
23: 
24: 
25:   @BeforeClass 
26:   public static void initEvoSuiteFramework() { 
27:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.map.MultiValueMap"; 
28:     org.evosuite.runtime.GuiSupport.initialize(); 
29:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
31:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
32:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
33:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
34:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
35:     setSystemProperties();
36:     initializeClasses();
37:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
38:   } 
39: 
40:   @Before 
41:   public void initTestCase(){ 
42:     threadStopper.storeCurrentThreads();
43:     threadStopper.startRecordingTime();
44:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
45:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
46:     org.evosuite.runtime.GuiSupport.setHeadless(); 
47:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
48:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
49:   } 
50: 
51:   @After 
52:   public void doneWithTestCase(){ 
53:     threadStopper.killAndJoinClientThreads();
54:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
55:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
56:     resetClasses(); 
57:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
59:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
60:   } 
61: 
62:   public static void setSystemProperties() {
63:  
64:     /*No java.lang.System property to set*/
65:   }
66: 
67:   private static void initializeClasses() {
68:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MultiValueMap_74_tmp__ESTest_scaffolding.class.getClassLoader() ,
69:       "org.apache.commons.collections4.MapIterator",
70:       "org.apache.commons.collections4.iterators.IteratorChain",
71:       "org.apache.commons.collections4.functors.ExceptionFactory",
72:       "org.apache.commons.collections4.map.MultiValueMap$Values",
73:       "org.apache.commons.collections4.map.AbstractMapDecorator",
74:       "org.apache.commons.collections4.Get",
75:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
76:       "org.apache.commons.collections4.CollectionUtils",
77:       "org.apache.commons.collections4.map.MultiValueMap",
78:       "org.apache.commons.collections4.FunctorException",
79:       "org.apache.commons.collections4.map.AbstractIterableMap",
80:       "org.apache.commons.collections4.Factory",
81:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
82:       "org.apache.commons.collections4.Unmodifiable",
83:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
84:       "org.apache.commons.collections4.Transformer",
85:       "org.apache.commons.collections4.map.MultiValueMap$1",
86:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
87:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
88:       "org.apache.commons.collections4.ResettableIterator",
89:       "org.apache.commons.collections4.iterators.EmptyIterator",
90:       "org.apache.commons.collections4.functors.ConstantFactory",
91:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
92:       "org.apache.commons.collections4.Put",
93:       "org.apache.commons.collections4.MultiMap",
94:       "org.apache.commons.collections4.IterableMap",
95:       "org.apache.commons.collections4.IterableGet"
96:     );
97:   } 
98: 
99:   private static void resetClasses() {
100:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MultiValueMap_74_tmp__ESTest_scaffolding.class.getClassLoader()); 
101: 
102:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
103:       "org.apache.commons.collections4.map.AbstractIterableMap",
104:       "org.apache.commons.collections4.map.AbstractMapDecorator",
105:       "org.apache.commons.collections4.map.MultiValueMap",
106:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
107:       "org.apache.commons.collections4.map.MultiValueMap$Values",
108:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
109:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
110:       "org.apache.commons.collections4.map.MultiValueMap$1",
111:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
112:       "org.apache.commons.collections4.iterators.EmptyIterator",
113:       "org.apache.commons.collections4.iterators.EmptyListIterator",
114:       "org.apache.commons.collections4.iterators.EmptyOrderedIterator",
115:       "org.apache.commons.collections4.iterators.AbstractEmptyMapIterator",
116:       "org.apache.commons.collections4.iterators.EmptyMapIterator",
117:       "org.apache.commons.collections4.iterators.EmptyOrderedMapIterator",
118:       "org.apache.commons.collections4.functors.ExceptionFactory",
119:       "org.apache.commons.collections4.functors.ConstantFactory",
120:       "org.apache.commons.collections4.iterators.IteratorChain",
121:       "org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter",
122:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
123:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
124:       "org.apache.commons.collections4.CollectionUtils",
125:       "org.apache.commons.collections4.FunctorException",
126:       "org.apache.commons.collections4.functors.InstantiateFactory"
127:     );
128:   }
129: }

[MASTER] 11:29:05.086 [logback-1] WARN  JUnitAnalyzer - Failed to compile the test cases 
[MASTER] 11:29:05.325 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:29:05.464 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:29:05.655 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_78_1634038145467/org/apache/commons/collections4/map/MultiValueMap_77_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_78_1634038145467/org/apache/commons/collections4/map/MultiValueMap_77_tmp__ESTest_scaffolding.java]]
[MASTER] 11:29:05.663 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Collections-27/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 11:29:05.664 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 11:29:05.673 [logback-2] ERROR JUnitAnalyzer - Diagnostic: constructor MultiValueMap in class org.apache.commons.collections4.map.MultiValueMap<K,V> cannot be applied to given types;
  required: java.util.Map<java.util.Collection<java.lang.String>,? super C>,org.apache.commons.collections4.Factory<C>
  found: java.util.Map<java.util.Collection<java.lang.String>,capture#1 of ? super java.util.LinkedList<java.lang.String>>,org.apache.commons.collections4.Factory<java.util.LinkedList<java.lang.String>>
  reason: inference variable C has incompatible bounds
    equality constraints: java.util.LinkedList<java.lang.String>
    upper bounds: java.util.LinkedList<java.lang.String>,java.util.Collection<java.util.AbstractMap.SimpleImmutableEntry<java.lang.String,java.lang.Integer>>: 34
[MASTER] 11:29:05.675 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_78_1634038145467/org/apache/commons/collections4/map/MultiValueMap_77_tmp__ESTest.java uses or overrides a deprecated API.: -1
[MASTER] 11:29:05.675 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:deprecation for details.: -1
[MASTER] 11:29:05.675 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Some messages have been simplified; recompile with -Xdiags:verbose to get full output: -1
[MASTER] 11:29:05.679 [logback-1] WARN  JUnitAnalyzer - Failed to compile the test cases 
[MASTER] 11:29:05.678 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_78_1634038145467/org/apache/commons/collections4/map/MultiValueMap_77_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Oct 12 11:29:05 GMT 2021
4:  */
5: 
6: package org.apache.commons.collections4.map;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.AbstractMap;
12: import java.util.ArrayList;
13: import java.util.Collection;
14: import java.util.HashMap;
15: import java.util.LinkedList;
16: import java.util.Map;
17: import org.apache.commons.collections4.Factory;
18: import org.apache.commons.collections4.functors.ExceptionFactory;
19: import org.apache.commons.collections4.map.MultiValueMap;
20: import org.evosuite.runtime.EvoRunner;
21: import org.evosuite.runtime.EvoRunnerParameters;
22: import org.junit.runner.RunWith;
23: 
24: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
25: public class MultiValueMap_77_tmp__ESTest extends MultiValueMap_77_tmp__ESTest_scaffolding {
26: 
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       ArrayList<Object> arrayList0 = new ArrayList<Object>();
30:       LinkedList<String> linkedList0 = new LinkedList<String>();
31:       HashMap<Collection<String>, Object> hashMap0 = new HashMap<Collection<String>, Object>();
32:       Factory<LinkedList<String>> factory0 = ExceptionFactory.exceptionFactory();
33:       hashMap0.put(linkedList0, "");
34:       MultiValueMap<Collection<String>, AbstractMap.SimpleImmutableEntry<String, Integer>> multiValueMap0 = new MultiValueMap<Collection<String>, AbstractMap.SimpleImmutableEntry<String, Integer>>((Map<Collection<String>, ? super LinkedList<String>>) hashMap0, factory0);
35:       // Undeclared exception!
36:       try { 
37:         multiValueMap0.put(linkedList0, arrayList0);
38:         fail("Expecting exception: ClassCastException");
39:       
40:       } catch(ClassCastException e) {
41:          //
42:          // java.lang.String cannot be cast to java.util.Collection
43:          //
44:          verifyException("org.apache.commons.collections4.map.MultiValueMap", e);
45:       }
46:   }
47: }
RegularFileObject[/tmp/EvoSuite_78_1634038145467/org/apache/commons/collections4/map/MultiValueMap_77_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Oct 12 11:29:05 GMT 2021
5:  */
6: 
7: package org.apache.commons.collections4.map;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: @EvoSuiteClassExclude
17: public class MultiValueMap_77_tmp__ESTest_scaffolding {
18: 
19:   @org.junit.Rule 
20:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
21: 
22:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
23: 
24: 
25:   @BeforeClass 
26:   public static void initEvoSuiteFramework() { 
27:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.map.MultiValueMap"; 
28:     org.evosuite.runtime.GuiSupport.initialize(); 
29:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
31:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
32:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
33:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
34:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
35:     setSystemProperties();
36:     initializeClasses();
37:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
38:   } 
39: 
40:   @Before 
41:   public void initTestCase(){ 
42:     threadStopper.storeCurrentThreads();
43:     threadStopper.startRecordingTime();
44:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
45:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
46:     org.evosuite.runtime.GuiSupport.setHeadless(); 
47:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
48:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
49:   } 
50: 
51:   @After 
52:   public void doneWithTestCase(){ 
53:     threadStopper.killAndJoinClientThreads();
54:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
55:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
56:     resetClasses(); 
57:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
59:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
60:   } 
61: 
62:   public static void setSystemProperties() {
63:  
64:     /*No java.lang.System property to set*/
65:   }
66: 
67:   private static void initializeClasses() {
68:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MultiValueMap_77_tmp__ESTest_scaffolding.class.getClassLoader() ,
69:       "org.apache.commons.collections4.MapIterator",
70:       "org.apache.commons.collections4.iterators.IteratorChain",
71:       "org.apache.commons.collections4.functors.ExceptionFactory",
72:       "org.apache.commons.collections4.map.MultiValueMap$Values",
73:       "org.apache.commons.collections4.map.AbstractMapDecorator",
74:       "org.apache.commons.collections4.Get",
75:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
76:       "org.apache.commons.collections4.CollectionUtils",
77:       "org.apache.commons.collections4.map.MultiValueMap",
78:       "org.apache.commons.collections4.FunctorException",
79:       "org.apache.commons.collections4.map.AbstractIterableMap",
80:       "org.apache.commons.collections4.Factory",
81:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
82:       "org.apache.commons.collections4.Unmodifiable",
83:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
84:       "org.apache.commons.collections4.Transformer",
85:       "org.apache.commons.collections4.map.MultiValueMap$1",
86:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
87:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
88:       "org.apache.commons.collections4.ResettableIterator",
89:       "org.apache.commons.collections4.iterators.EmptyIterator",
90:       "org.apache.commons.collections4.functors.ConstantFactory",
91:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
92:       "org.apache.commons.collections4.Put",
93:       "org.apache.commons.collections4.MultiMap",
94:       "org.apache.commons.collections4.IterableMap",
95:       "org.apache.commons.collections4.IterableGet"
96:     );
97:   } 
98: 
99:   private static void resetClasses() {
100:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MultiValueMap_77_tmp__ESTest_scaffolding.class.getClassLoader()); 
101: 
102:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
103:       "org.apache.commons.collections4.map.AbstractIterableMap",
104:       "org.apache.commons.collections4.map.AbstractMapDecorator",
105:       "org.apache.commons.collections4.map.MultiValueMap",
106:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
107:       "org.apache.commons.collections4.map.MultiValueMap$Values",
108:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
109:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
110:       "org.apache.commons.collections4.map.MultiValueMap$1",
111:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
112:       "org.apache.commons.collections4.iterators.EmptyIterator",
113:       "org.apache.commons.collections4.iterators.EmptyListIterator",
114:       "org.apache.commons.collections4.iterators.EmptyOrderedIterator",
115:       "org.apache.commons.collections4.iterators.AbstractEmptyMapIterator",
116:       "org.apache.commons.collections4.iterators.EmptyMapIterator",
117:       "org.apache.commons.collections4.iterators.EmptyOrderedMapIterator",
118:       "org.apache.commons.collections4.functors.ExceptionFactory",
119:       "org.apache.commons.collections4.functors.ConstantFactory",
120:       "org.apache.commons.collections4.iterators.IteratorChain",
121:       "org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter",
122:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
123:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
124:       "org.apache.commons.collections4.CollectionUtils",
125:       "org.apache.commons.collections4.FunctorException",
126:       "org.apache.commons.collections4.functors.InstantiateFactory"
127:     );
128:   }
129: }

[MASTER] 11:29:06.024 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:29:06.248 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_80_1634038146025/org/apache/commons/collections4/map/MultiValueMap_79_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_80_1634038146025/org/apache/commons/collections4/map/MultiValueMap_79_tmp__ESTest_scaffolding.java]]
[MASTER] 11:29:06.248 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Collections-27/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 11:29:06.248 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 11:29:06.250 [logback-2] ERROR JUnitAnalyzer - Diagnostic: constructor MultiValueMap in class org.apache.commons.collections4.map.MultiValueMap<K,V> cannot be applied to given types;
  required: java.util.Map<java.util.Collection<java.lang.String>,? super C>,org.apache.commons.collections4.Factory<C>
  found: java.util.Map<java.util.Collection<java.lang.String>,capture#1 of ? super java.util.LinkedList<java.lang.String>>,org.apache.commons.collections4.Factory<java.util.LinkedList<java.lang.String>>
  reason: inference variable C has incompatible bounds
    equality constraints: java.util.LinkedList<java.lang.String>
    upper bounds: java.util.LinkedList<java.lang.String>,java.util.Collection<java.lang.Object>: 30
[MASTER] 11:29:06.251 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_80_1634038146025/org/apache/commons/collections4/map/MultiValueMap_79_tmp__ESTest.java uses or overrides a deprecated API.: -1
[MASTER] 11:29:06.253 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:deprecation for details.: -1
[MASTER] 11:29:06.254 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Some messages have been simplified; recompile with -Xdiags:verbose to get full output: -1
[MASTER] 11:29:06.256 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_80_1634038146025/org/apache/commons/collections4/map/MultiValueMap_79_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Oct 12 11:29:06 GMT 2021
4:  */
5: 
6: package org.apache.commons.collections4.map;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.AbstractMap;
12: import java.util.Collection;
13: import java.util.LinkedList;
14: import java.util.Map;
15: import org.apache.commons.collections4.Factory;
16: import org.apache.commons.collections4.functors.ConstantFactory;
17: import org.apache.commons.collections4.map.MultiValueMap;
18: import org.evosuite.runtime.EvoRunner;
19: import org.evosuite.runtime.EvoRunnerParameters;
20: import org.junit.runner.RunWith;
21: 
22: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
23: public class MultiValueMap_79_tmp__ESTest extends MultiValueMap_79_tmp__ESTest_scaffolding {
24: 
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       MultiValueMap<Collection<String>, AbstractMap.SimpleImmutableEntry<String, Integer>> multiValueMap0 = new MultiValueMap<Collection<String>, AbstractMap.SimpleImmutableEntry<String, Integer>>();
28:       LinkedList<String> linkedList0 = new LinkedList<String>();
29:       Factory<LinkedList<String>> factory0 = ConstantFactory.constantFactory(linkedList0);
30:       MultiValueMap<Collection<String>, Object> multiValueMap1 = new MultiValueMap<Collection<String>, Object>((Map<Collection<String>, ? super LinkedList<String>>) multiValueMap0, factory0);
31:       multiValueMap0.map = (Map<Collection<String>, Object>) multiValueMap1;
32:       // Undeclared exception!
33:       try { 
34:         multiValueMap0.put(linkedList0, linkedList0);
35:         fail("Expecting exception: StackOverflowError");
36:       
37:       } catch(StackOverflowError e) {
38:          //
39:          // no message in exception (getMessage() returned null)
40:          //
41:       }
42:   }
43: }
RegularFileObject[/tmp/EvoSuite_80_1634038146025/org/apache/commons/collections4/map/MultiValueMap_79_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Oct 12 11:29:06 GMT 2021
5:  */
6: 
7: package org.apache.commons.collections4.map;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: @EvoSuiteClassExclude
17: public class MultiValueMap_79_tmp__ESTest_scaffolding {
18: 
19:   @org.junit.Rule 
20:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
21: 
22:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
23: 
24: 
25:   @BeforeClass 
26:   public static void initEvoSuiteFramework() { 
27:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.map.MultiValueMap"; 
28:     org.evosuite.runtime.GuiSupport.initialize(); 
29:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
31:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
32:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
33:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
34:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
35:     setSystemProperties();
36:     initializeClasses();
37:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
38:   } 
39: 
40:   @Before 
41:   public void initTestCase(){ 
42:     threadStopper.storeCurrentThreads();
43:     threadStopper.startRecordingTime();
44:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
45:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
46:     org.evosuite.runtime.GuiSupport.setHeadless(); 
47:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
48:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
49:   } 
50: 
51:   @After 
52:   public void doneWithTestCase(){ 
53:     threadStopper.killAndJoinClientThreads();
54:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
55:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
56:     resetClasses(); 
57:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
59:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
60:   } 
61: 
62:   public static void setSystemProperties() {
63:  
64:     /*No java.lang.System property to set*/
65:   }
66: 
67:   private static void initializeClasses() {
68:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MultiValueMap_79_tmp__ESTest_scaffolding.class.getClassLoader() ,
69:       "org.apache.commons.collections4.MapIterator",
70:       "org.apache.commons.collections4.iterators.IteratorChain",
71:       "org.apache.commons.collections4.functors.ExceptionFactory",
72:       "org.apache.commons.collections4.map.MultiValueMap$Values",
73:       "org.apache.commons.collections4.map.AbstractMapDecorator",
74:       "org.apache.commons.collections4.Get",
75:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
76:       "org.apache.commons.collections4.CollectionUtils",
77:       "org.apache.commons.collections4.map.MultiValueMap",
78:       "org.apache.commons.collections4.FunctorException",
79:       "org.apache.commons.collections4.map.AbstractIterableMap",
80:       "org.apache.commons.collections4.Factory",
81:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
82:       "org.apache.commons.collections4.Unmodifiable",
83:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
84:       "org.apache.commons.collections4.Transformer",
85:       "org.apache.commons.collections4.map.MultiValueMap$1",
86:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
87:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
88:       "org.apache.commons.collections4.ResettableIterator",
89:       "org.apache.commons.collections4.iterators.EmptyIterator",
90:       "org.apache.commons.collections4.functors.ConstantFactory",
91:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
92:       "org.apache.commons.collections4.Put",
93:       "org.apache.commons.collections4.MultiMap",
94:       "org.apache.commons.collections4.IterableMap",
95:       "org.apache.commons.collections4.IterableGet"
96:     );
97:   } 
98: 
99:   private static void resetClasses() {
100:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MultiValueMap_79_tmp__ESTest_scaffolding.class.getClassLoader()); 
101: 
102:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
103:       "org.apache.commons.collections4.map.AbstractIterableMap",
104:       "org.apache.commons.collections4.map.AbstractMapDecorator",
105:       "org.apache.commons.collections4.map.MultiValueMap",
106:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
107:       "org.apache.commons.collections4.map.MultiValueMap$Values",
108:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
109:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
110:       "org.apache.commons.collections4.map.MultiValueMap$1",
111:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
112:       "org.apache.commons.collections4.iterators.EmptyIterator",
113:       "org.apache.commons.collections4.iterators.EmptyListIterator",
114:       "org.apache.commons.collections4.iterators.EmptyOrderedIterator",
115:       "org.apache.commons.collections4.iterators.AbstractEmptyMapIterator",
116:       "org.apache.commons.collections4.iterators.EmptyMapIterator",
117:       "org.apache.commons.collections4.iterators.EmptyOrderedMapIterator",
118:       "org.apache.commons.collections4.functors.ExceptionFactory",
119:       "org.apache.commons.collections4.functors.ConstantFactory",
120:       "org.apache.commons.collections4.iterators.IteratorChain",
121:       "org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter",
122:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
123:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
124:       "org.apache.commons.collections4.CollectionUtils",
125:       "org.apache.commons.collections4.FunctorException",
126:       "org.apache.commons.collections4.functors.InstantiateFactory"
127:     );
128:   }
129: }

[MASTER] 11:29:06.256 [logback-1] WARN  JUnitAnalyzer - Failed to compile the test cases 
[MASTER] 11:29:06.444 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:29:06.536 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_82_1634038146445/org/apache/commons/collections4/map/MultiValueMap_81_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_82_1634038146445/org/apache/commons/collections4/map/MultiValueMap_81_tmp__ESTest_scaffolding.java]]
[MASTER] 11:29:06.542 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Collections-27/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 11:29:06.544 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 11:29:06.555 [logback-2] ERROR JUnitAnalyzer - Diagnostic: constructor MultiValueMap in class org.apache.commons.collections4.map.MultiValueMap<K,V> cannot be applied to given types;
  required: java.util.Map<java.lang.String,? super C>,org.apache.commons.collections4.Factory<C>
  found: java.util.Map<java.lang.String,capture#1 of ? super java.util.Collection<java.lang.String>>,org.apache.commons.collections4.Factory<java.util.Collection<java.lang.String>>
  reason: inference variable C has incompatible bounds
    equality constraints: java.util.Collection<java.lang.String>
    upper bounds: java.util.Collection<java.lang.String>,java.util.Collection<java.lang.Integer>: 34
[MASTER] 11:29:06.561 [logback-2] ERROR JUnitAnalyzer - Diagnostic: constructor MultiValueMap in class org.apache.commons.collections4.map.MultiValueMap<K,V> cannot be applied to given types;
  required: java.util.Map<java.lang.Integer,? super C>,org.apache.commons.collections4.Factory<C>
  found: java.util.Map<java.lang.Integer,capture#2 of ? super java.util.LinkedList<java.lang.Object>>,org.apache.commons.collections4.Factory<java.util.LinkedList<java.lang.Object>>
  reason: inference variable C has incompatible bounds
    equality constraints: java.util.LinkedList<java.lang.Object>
    upper bounds: java.util.LinkedList<java.lang.Object>,java.util.Collection<java.util.ArrayList<java.lang.Object>>: 36
[MASTER] 11:29:06.562 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_82_1634038146445/org/apache/commons/collections4/map/MultiValueMap_81_tmp__ESTest.java uses or overrides a deprecated API.: -1
[MASTER] 11:29:06.563 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:deprecation for details.: -1
[MASTER] 11:29:06.563 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Some messages have been simplified; recompile with -Xdiags:verbose to get full output: -1
[MASTER] 11:29:06.564 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_82_1634038146445/org/apache/commons/collections4/map/MultiValueMap_81_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Oct 12 11:29:06 GMT 2021
4:  */
5: 
6: package org.apache.commons.collections4.map;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.ArrayList;
12: import java.util.Collection;
13: import java.util.LinkedList;
14: import java.util.Map;
15: import org.apache.commons.collections4.Factory;
16: import org.apache.commons.collections4.functors.ConstantFactory;
17: import org.apache.commons.collections4.functors.ExceptionFactory;
18: import org.apache.commons.collections4.map.MultiValueMap;
19: import org.evosuite.runtime.EvoRunner;
20: import org.evosuite.runtime.EvoRunnerParameters;
21: import org.junit.runner.RunWith;
22: 
23: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
24: public class MultiValueMap_81_tmp__ESTest extends MultiValueMap_81_tmp__ESTest_scaffolding {
25: 
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       MultiValueMap<Integer, Integer> multiValueMap0 = new MultiValueMap<Integer, Integer>();
29:       Factory<LinkedList<Object>> factory0 = ExceptionFactory.exceptionFactory();
30:       MultiValueMap<Integer, Object> multiValueMap1 = MultiValueMap.multiValueMap((Map<Integer, ? super LinkedList<Object>>) multiValueMap0, factory0);
31:       LinkedList<String> linkedList0 = new LinkedList<String>();
32:       MultiValueMap<String, Object> multiValueMap2 = new MultiValueMap<String, Object>();
33:       ConstantFactory<Collection<String>> constantFactory0 = new ConstantFactory<Collection<String>>(linkedList0);
34:       MultiValueMap<String, Integer> multiValueMap3 = new MultiValueMap<String, Integer>((Map<String, ? super Collection<String>>) multiValueMap2, (Factory<Collection<String>>) constantFactory0);
35:       Object object0 = multiValueMap3.putIfAbsent("org.apache.commons.collections4.map.MultiValueMap$ValuesIterator", multiValueMap1);
36:       MultiValueMap<Integer, ArrayList<Object>> multiValueMap4 = new MultiValueMap<Integer, ArrayList<Object>>((Map<Integer, ? super LinkedList<Object>>) multiValueMap0, factory0);
37:       Integer integer0 = new Integer(2882);
38:       // Undeclared exception!
39:       try { 
40:         multiValueMap4.put(integer0, object0);
41:         fail("Expecting exception: RuntimeException");
42:       
43:       } catch(RuntimeException e) {
44:          //
45:          // ExceptionFactory invoked
46:          //
47:          verifyException("org.apache.commons.collections4.functors.ExceptionFactory", e);
48:       }
49:   }
50: }
RegularFileObject[/tmp/EvoSuite_82_1634038146445/org/apache/commons/collections4/map/MultiValueMap_81_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Oct 12 11:29:06 GMT 2021
5:  */
6: 
7: package org.apache.commons.collections4.map;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: @EvoSuiteClassExclude
17: public class MultiValueMap_81_tmp__ESTest_scaffolding {
18: 
19:   @org.junit.Rule 
20:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
21: 
22:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
23: 
24: 
25:   @BeforeClass 
26:   public static void initEvoSuiteFramework() { 
27:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.map.MultiValueMap"; 
28:     org.evosuite.runtime.GuiSupport.initialize(); 
29:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
31:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
32:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
33:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
34:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
35:     setSystemProperties();
36:     initializeClasses();
37:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
38:   } 
39: 
40:   @Before 
41:   public void initTestCase(){ 
42:     threadStopper.storeCurrentThreads();
43:     threadStopper.startRecordingTime();
44:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
45:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
46:     org.evosuite.runtime.GuiSupport.setHeadless(); 
47:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
48:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
49:   } 
50: 
51:   @After 
52:   public void doneWithTestCase(){ 
53:     threadStopper.killAndJoinClientThreads();
54:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
55:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
56:     resetClasses(); 
57:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
59:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
60:   } 
61: 
62:   public static void setSystemProperties() {
63:  
64:     /*No java.lang.System property to set*/
65:   }
66: 
67:   private static void initializeClasses() {
68:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MultiValueMap_81_tmp__ESTest_scaffolding.class.getClassLoader() ,
69:       "org.apache.commons.collections4.MapIterator",
70:       "org.apache.commons.collections4.iterators.IteratorChain",
71:       "org.apache.commons.collections4.functors.ExceptionFactory",
72:       "org.apache.commons.collections4.map.MultiValueMap$Values",
73:       "org.apache.commons.collections4.map.AbstractMapDecorator",
74:       "org.apache.commons.collections4.Get",
75:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
76:       "org.apache.commons.collections4.CollectionUtils",
77:       "org.apache.commons.collections4.map.MultiValueMap",
78:       "org.apache.commons.collections4.FunctorException",
79:       "org.apache.commons.collections4.map.AbstractIterableMap",
80:       "org.apache.commons.collections4.Factory",
81:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
82:       "org.apache.commons.collections4.Unmodifiable",
83:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
84:       "org.apache.commons.collections4.Transformer",
85:       "org.apache.commons.collections4.map.MultiValueMap$1",
86:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
87:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
88:       "org.apache.commons.collections4.ResettableIterator",
89:       "org.apache.commons.collections4.iterators.EmptyIterator",
90:       "org.apache.commons.collections4.functors.ConstantFactory",
91:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
92:       "org.apache.commons.collections4.Put",
93:       "org.apache.commons.collections4.MultiMap",
94:       "org.apache.commons.collections4.IterableMap",
95:       "org.apache.commons.collections4.IterableGet"
96:     );
97:   } 
98: 
99:   private static void resetClasses() {
100:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MultiValueMap_81_tmp__ESTest_scaffolding.class.getClassLoader()); 
101: 
102:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
103:       "org.apache.commons.collections4.map.AbstractIterableMap",
104:       "org.apache.commons.collections4.map.AbstractMapDecorator",
105:       "org.apache.commons.collections4.map.MultiValueMap",
106:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
107:       "org.apache.commons.collections4.map.MultiValueMap$Values",
108:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
109:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
110:       "org.apache.commons.collections4.map.MultiValueMap$1",
111:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
112:       "org.apache.commons.collections4.iterators.EmptyIterator",
113:       "org.apache.commons.collections4.iterators.EmptyListIterator",
114:       "org.apache.commons.collections4.iterators.EmptyOrderedIterator",
115:       "org.apache.commons.collections4.iterators.AbstractEmptyMapIterator",
116:       "org.apache.commons.collections4.iterators.EmptyMapIterator",
117:       "org.apache.commons.collections4.iterators.EmptyOrderedMapIterator",
118:       "org.apache.commons.collections4.functors.ExceptionFactory",
119:       "org.apache.commons.collections4.functors.ConstantFactory",
120:       "org.apache.commons.collections4.iterators.IteratorChain",
121:       "org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter",
122:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
123:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
124:       "org.apache.commons.collections4.CollectionUtils",
125:       "org.apache.commons.collections4.FunctorException",
126:       "org.apache.commons.collections4.functors.InstantiateFactory"
127:     );
128:   }
129: }

[MASTER] 11:29:06.565 [logback-1] WARN  JUnitAnalyzer - Failed to compile the test cases 
[MASTER] 11:29:06.682 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:29:06.736 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_84_1634038146686/org/apache/commons/collections4/map/MultiValueMap_83_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_84_1634038146686/org/apache/commons/collections4/map/MultiValueMap_83_tmp__ESTest_scaffolding.java]]
[MASTER] 11:29:06.736 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Collections-27/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 11:29:06.736 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 11:29:06.737 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: inferred type does not conform to equality constraint(s)
    inferred: java.lang.String
    equality constraints(s): java.lang.String,org.apache.commons.collections4.functors.ConstantFactory<java.lang.Object>: 33
[MASTER] 11:29:06.737 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_84_1634038146686/org/apache/commons/collections4/map/MultiValueMap_83_tmp__ESTest.java uses or overrides a deprecated API.: -1
[MASTER] 11:29:06.737 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:deprecation for details.: -1
[MASTER] 11:29:06.741 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_84_1634038146686/org/apache/commons/collections4/map/MultiValueMap_83_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Oct 12 11:29:06 GMT 2021
4:  */
5: 
6: package org.apache.commons.collections4.map;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.ArrayList;
12: import java.util.Collection;
13: import java.util.HashMap;
14: import java.util.LinkedList;
15: import java.util.Map;
16: import org.apache.commons.collections4.Factory;
17: import org.apache.commons.collections4.functors.ConstantFactory;
18: import org.apache.commons.collections4.map.MultiValueMap;
19: import org.evosuite.runtime.EvoRunner;
20: import org.evosuite.runtime.EvoRunnerParameters;
21: import org.junit.runner.RunWith;
22: 
23: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
24: public class MultiValueMap_83_tmp__ESTest extends MultiValueMap_83_tmp__ESTest_scaffolding {
25: 
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       ArrayList<String> arrayList0 = new ArrayList<String>();
29:       arrayList0.add("C)G/?&");
30:       LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
31:       HashMap<LinkedList<Integer>, Collection<ConstantFactory<Object>>> hashMap0 = new HashMap<LinkedList<Integer>, Collection<ConstantFactory<Object>>>();
32:       Factory<Collection<ConstantFactory<Object>>> factory0 = ConstantFactory.constantFactory((Collection<ConstantFactory<Object>>) null);
33:       MultiValueMap<LinkedList<Integer>, String> multiValueMap0 = MultiValueMap.multiValueMap((Map<LinkedList<Integer>, ? super Collection<ConstantFactory<Object>>>) hashMap0, factory0);
34:       // Undeclared exception!
35:       try { 
36:         multiValueMap0.putAll(linkedList0, (Collection<String>) arrayList0);
37:         fail("Expecting exception: NullPointerException");
38:       
39:       } catch(NullPointerException e) {
40:          //
41:          // no message in exception (getMessage() returned null)
42:          //
43:          verifyException("org.apache.commons.collections4.map.MultiValueMap", e);
44:       }
45:   }
46: }
RegularFileObject[/tmp/EvoSuite_84_1634038146686/org/apache/commons/collections4/map/MultiValueMap_83_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Oct 12 11:29:06 GMT 2021
5:  */
6: 
7: package org.apache.commons.collections4.map;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: @EvoSuiteClassExclude
17: public class MultiValueMap_83_tmp__ESTest_scaffolding {
18: 
19:   @org.junit.Rule 
20:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
21: 
22:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
23: 
24: 
25:   @BeforeClass 
26:   public static void initEvoSuiteFramework() { 
27:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.map.MultiValueMap"; 
28:     org.evosuite.runtime.GuiSupport.initialize(); 
29:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
31:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
32:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
33:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
34:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
35:     setSystemProperties();
36:     initializeClasses();
37:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
38:   } 
39: 
40:   @Before 
41:   public void initTestCase(){ 
42:     threadStopper.storeCurrentThreads();
43:     threadStopper.startRecordingTime();
44:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
45:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
46:     org.evosuite.runtime.GuiSupport.setHeadless(); 
47:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
48:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
49:   } 
50: 
51:   @After 
52:   public void doneWithTestCase(){ 
53:     threadStopper.killAndJoinClientThreads();
54:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
55:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
56:     resetClasses(); 
57:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
59:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
60:   } 
61: 
62:   public static void setSystemProperties() {
63:  
64:     /*No java.lang.System property to set*/
65:   }
66: 
67:   private static void initializeClasses() {
68:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MultiValueMap_83_tmp__ESTest_scaffolding.class.getClassLoader() ,
69:       "org.apache.commons.collections4.MapIterator",
70:       "org.apache.commons.collections4.iterators.IteratorChain",
71:       "org.apache.commons.collections4.functors.ExceptionFactory",
72:       "org.apache.commons.collections4.map.MultiValueMap$Values",
73:       "org.apache.commons.collections4.map.AbstractMapDecorator",
74:       "org.apache.commons.collections4.Get",
75:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
76:       "org.apache.commons.collections4.CollectionUtils",
77:       "org.apache.commons.collections4.map.MultiValueMap",
78:       "org.apache.commons.collections4.FunctorException",
79:       "org.apache.commons.collections4.map.AbstractIterableMap",
80:       "org.apache.commons.collections4.Factory",
81:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
82:       "org.apache.commons.collections4.Unmodifiable",
83:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
84:       "org.apache.commons.collections4.Transformer",
85:       "org.apache.commons.collections4.map.MultiValueMap$1",
86:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
87:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
88:       "org.apache.commons.collections4.ResettableIterator",
89:       "org.apache.commons.collections4.iterators.EmptyIterator",
90:       "org.apache.commons.collections4.functors.ConstantFactory",
91:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
92:       "org.apache.commons.collections4.Put",
93:       "org.apache.commons.collections4.MultiMap",
94:       "org.apache.commons.collections4.IterableMap",
95:       "org.apache.commons.collections4.IterableGet"
96:     );
97:   } 
98: 
99:   private static void resetClasses() {
100:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MultiValueMap_83_tmp__ESTest_scaffolding.class.getClassLoader()); 
101: 
102:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
103:       "org.apache.commons.collections4.map.AbstractIterableMap",
104:       "org.apache.commons.collections4.map.AbstractMapDecorator",
105:       "org.apache.commons.collections4.map.MultiValueMap",
106:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
107:       "org.apache.commons.collections4.map.MultiValueMap$Values",
108:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
109:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
110:       "org.apache.commons.collections4.map.MultiValueMap$1",
111:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
112:       "org.apache.commons.collections4.iterators.EmptyIterator",
113:       "org.apache.commons.collections4.iterators.EmptyListIterator",
114:       "org.apache.commons.collections4.iterators.EmptyOrderedIterator",
115:       "org.apache.commons.collections4.iterators.AbstractEmptyMapIterator",
116:       "org.apache.commons.collections4.iterators.EmptyMapIterator",
117:       "org.apache.commons.collections4.iterators.EmptyOrderedMapIterator",
118:       "org.apache.commons.collections4.functors.ExceptionFactory",
119:       "org.apache.commons.collections4.functors.ConstantFactory",
120:       "org.apache.commons.collections4.iterators.IteratorChain",
121:       "org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter",
122:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
123:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
124:       "org.apache.commons.collections4.CollectionUtils",
125:       "org.apache.commons.collections4.FunctorException",
126:       "org.apache.commons.collections4.functors.InstantiateFactory"
127:     );
128:   }
129: }

[MASTER] 11:29:06.742 [logback-1] WARN  JUnitAnalyzer - Failed to compile the test cases 
[MASTER] 11:29:06.913 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_85_1634038146745/org/apache/commons/collections4/map/MultiValueMap_84_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_85_1634038146745/org/apache/commons/collections4/map/MultiValueMap_84_tmp__ESTest_scaffolding.java]]
[MASTER] 11:29:06.914 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Collections-27/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 11:29:06.914 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 11:29:06.914 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: inferred type does not conform to equality constraint(s)
    inferred: java.lang.Object
    equality constraints(s): java.lang.Object,org.apache.commons.collections4.functors.ConstantFactory<java.lang.Object>: 35
[MASTER] 11:29:06.916 [logback-2] ERROR JUnitAnalyzer - Diagnostic: constructor MultiValueMap in class org.apache.commons.collections4.map.MultiValueMap<K,V> cannot be applied to given types;
  required: java.util.Map<java.lang.String,? super C>,org.apache.commons.collections4.Factory<C>
  found: java.util.Map<java.lang.String,capture#1 of ? super java.util.Collection<java.lang.Object>>,org.apache.commons.collections4.Factory<java.util.Collection<java.lang.Object>>
  reason: inference variable C has incompatible bounds
    equality constraints: java.util.Collection<java.lang.Object>
    upper bounds: java.util.Collection<java.lang.Object>,java.util.Collection<java.util.LinkedList<java.lang.String>>: 38
[MASTER] 11:29:06.922 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_85_1634038146745/org/apache/commons/collections4/map/MultiValueMap_84_tmp__ESTest.java uses or overrides a deprecated API.: -1
[MASTER] 11:29:06.923 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:deprecation for details.: -1
[MASTER] 11:29:06.924 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Some messages have been simplified; recompile with -Xdiags:verbose to get full output: -1
[MASTER] 11:29:06.925 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_85_1634038146745/org/apache/commons/collections4/map/MultiValueMap_84_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Oct 12 11:29:06 GMT 2021
4:  */
5: 
6: package org.apache.commons.collections4.map;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.ArrayList;
12: import java.util.Collection;
13: import java.util.HashMap;
14: import java.util.LinkedList;
15: import java.util.Map;
16: import org.apache.commons.collections4.Factory;
17: import org.apache.commons.collections4.functors.ConstantFactory;
18: import org.apache.commons.collections4.functors.ExceptionFactory;
19: import org.apache.commons.collections4.map.MultiValueMap;
20: import org.evosuite.runtime.EvoRunner;
21: import org.evosuite.runtime.EvoRunnerParameters;
22: import org.junit.runner.RunWith;
23: 
24: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
25: public class MultiValueMap_84_tmp__ESTest extends MultiValueMap_84_tmp__ESTest_scaffolding {
26: 
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       MultiValueMap<String, LinkedList<String>> multiValueMap0 = new MultiValueMap<String, LinkedList<String>>();
30:       ArrayList<LinkedList<String>> arrayList0 = new ArrayList<LinkedList<String>>();
31:       LinkedList<String> linkedList0 = new LinkedList<String>();
32:       arrayList0.add(linkedList0);
33:       HashMap<Collection<Object>, Collection<ConstantFactory<Object>>> hashMap0 = new HashMap<Collection<Object>, Collection<ConstantFactory<Object>>>(4373, 1917.0945F);
34:       Factory<Collection<ConstantFactory<Object>>> factory0 = ExceptionFactory.exceptionFactory();
35:       MultiValueMap<Collection<Object>, Object> multiValueMap1 = MultiValueMap.multiValueMap((Map<Collection<Object>, ? super Collection<ConstantFactory<Object>>>) hashMap0, factory0);
36:       Collection<Object> collection0 = multiValueMap1.values();
37:       Factory<Collection<Object>> factory1 = ConstantFactory.constantFactory(collection0);
38:       MultiValueMap<String, LinkedList<String>> multiValueMap2 = new MultiValueMap<String, LinkedList<String>>((Map<String, ? super Collection<Object>>) multiValueMap0, factory1);
39:       // Undeclared exception!
40:       try { 
41:         multiValueMap2.putAll("QIRJ_", (Collection<LinkedList<String>>) arrayList0);
42:         fail("Expecting exception: UnsupportedOperationException");
43:       
44:       } catch(UnsupportedOperationException e) {
45:          //
46:          // no message in exception (getMessage() returned null)
47:          //
48:          verifyException("java.util.AbstractCollection", e);
49:       }
50:   }
51: }
RegularFileObject[/tmp/EvoSuite_85_1634038146745/org/apache/commons/collections4/map/MultiValueMap_84_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Oct 12 11:29:06 GMT 2021
5:  */
6: 
7: package org.apache.commons.collections4.map;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: @EvoSuiteClassExclude
17: public class MultiValueMap_84_tmp__ESTest_scaffolding {
18: 
19:   @org.junit.Rule 
20:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
21: 
22:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
23: 
24: 
25:   @BeforeClass 
26:   public static void initEvoSuiteFramework() { 
27:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.map.MultiValueMap"; 
28:     org.evosuite.runtime.GuiSupport.initialize(); 
29:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
31:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
32:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
33:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
34:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
35:     setSystemProperties();
36:     initializeClasses();
37:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
38:   } 
39: 
40:   @Before 
41:   public void initTestCase(){ 
42:     threadStopper.storeCurrentThreads();
43:     threadStopper.startRecordingTime();
44:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
45:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
46:     org.evosuite.runtime.GuiSupport.setHeadless(); 
47:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
48:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
49:   } 
50: 
51:   @After 
52:   public void doneWithTestCase(){ 
53:     threadStopper.killAndJoinClientThreads();
54:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
55:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
56:     resetClasses(); 
57:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
59:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
60:   } 
61: 
62:   public static void setSystemProperties() {
63:  
64:     /*No java.lang.System property to set*/
65:   }
66: 
67:   private static void initializeClasses() {
68:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MultiValueMap_84_tmp__ESTest_scaffolding.class.getClassLoader() ,
69:       "org.apache.commons.collections4.MapIterator",
70:       "org.apache.commons.collections4.iterators.IteratorChain",
71:       "org.apache.commons.collections4.functors.ExceptionFactory",
72:       "org.apache.commons.collections4.map.MultiValueMap$Values",
73:       "org.apache.commons.collections4.map.AbstractMapDecorator",
74:       "org.apache.commons.collections4.Get",
75:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
76:       "org.apache.commons.collections4.CollectionUtils",
77:       "org.apache.commons.collections4.map.MultiValueMap",
78:       "org.apache.commons.collections4.FunctorException",
79:       "org.apache.commons.collections4.map.AbstractIterableMap",
80:       "org.apache.commons.collections4.Factory",
81:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
82:       "org.apache.commons.collections4.Unmodifiable",
83:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
84:       "org.apache.commons.collections4.Transformer",
85:       "org.apache.commons.collections4.map.MultiValueMap$1",
86:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
87:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
88:       "org.apache.commons.collections4.ResettableIterator",
89:       "org.apache.commons.collections4.iterators.EmptyIterator",
90:       "org.apache.commons.collections4.functors.ConstantFactory",
91:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
92:       "org.apache.commons.collections4.Put",
93:       "org.apache.commons.collections4.MultiMap",
94:       "org.apache.commons.collections4.IterableMap",
95:       "org.apache.commons.collections4.IterableGet"
96:     );
97:   } 
98: 
99:   private static void resetClasses() {
100:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MultiValueMap_84_tmp__ESTest_scaffolding.class.getClassLoader()); 
101: 
102:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
103:       "org.apache.commons.collections4.map.AbstractIterableMap",
104:       "org.apache.commons.collections4.map.AbstractMapDecorator",
105:       "org.apache.commons.collections4.map.MultiValueMap",
106:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
107:       "org.apache.commons.collections4.map.MultiValueMap$Values",
108:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
109:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
110:       "org.apache.commons.collections4.map.MultiValueMap$1",
111:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
112:       "org.apache.commons.collections4.iterators.EmptyIterator",
113:       "org.apache.commons.collections4.iterators.EmptyListIterator",
114:       "org.apache.commons.collections4.iterators.EmptyOrderedIterator",
115:       "org.apache.commons.collections4.iterators.AbstractEmptyMapIterator",
116:       "org.apache.commons.collections4.iterators.EmptyMapIterator",
117:       "org.apache.commons.collections4.iterators.EmptyOrderedMapIterator",
118:       "org.apache.commons.collections4.functors.ExceptionFactory",
119:       "org.apache.commons.collections4.functors.ConstantFactory",
120:       "org.apache.commons.collections4.iterators.IteratorChain",
121:       "org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter",
122:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
123:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
124:       "org.apache.commons.collections4.CollectionUtils",
125:       "org.apache.commons.collections4.FunctorException",
126:       "org.apache.commons.collections4.functors.InstantiateFactory"
127:     );
128:   }
129: }

[MASTER] 11:29:06.925 [logback-1] WARN  JUnitAnalyzer - Failed to compile the test cases 
[MASTER] 11:29:07.114 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:29:07.323 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:29:08.291 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:29:08.576 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:29:09.043 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:29:09.411 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:29:09.517 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:29:09.554 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_93_1634038149518/org/apache/commons/collections4/map/MultiValueMap_92_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_93_1634038149518/org/apache/commons/collections4/map/MultiValueMap_92_tmp__ESTest_scaffolding.java]]
[MASTER] 11:29:09.555 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Collections-27/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 11:29:09.555 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 11:29:09.569 [logback-2] ERROR JUnitAnalyzer - Diagnostic: constructor MultiValueMap in class org.apache.commons.collections4.map.MultiValueMap<K,V> cannot be applied to given types;
  required: java.util.Map<java.util.HashMap<java.lang.Object,java.lang.String>,? super C>,org.apache.commons.collections4.Factory<C>
  found: java.util.Map<java.util.HashMap<java.lang.Object,java.lang.String>,capture#1 of ? super java.util.ArrayList<java.lang.Object>>,org.apache.commons.collections4.Factory<java.util.ArrayList<java.lang.Object>>
  reason: inference variable C has incompatible bounds
    equality constraints: java.util.ArrayList<java.lang.Object>
    upper bounds: java.util.ArrayList<java.lang.Object>,java.util.Collection<org.apache.commons.collections4.map.MultiValueMap<java.lang.Object,java.lang.Object>>: 29
[MASTER] 11:29:09.570 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_93_1634038149518/org/apache/commons/collections4/map/MultiValueMap_92_tmp__ESTest.java uses or overrides a deprecated API.: -1
[MASTER] 11:29:09.572 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:deprecation for details.: -1
[MASTER] 11:29:09.573 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Some messages have been simplified; recompile with -Xdiags:verbose to get full output: -1
[MASTER] 11:29:09.573 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_93_1634038149518/org/apache/commons/collections4/map/MultiValueMap_92_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Oct 12 11:29:09 GMT 2021
4:  */
5: 
6: package org.apache.commons.collections4.map;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.ArrayList;
11: import java.util.Collection;
12: import java.util.HashMap;
13: import java.util.LinkedList;
14: import java.util.Map;
15: import org.apache.commons.collections4.Factory;
16: import org.apache.commons.collections4.functors.ConstantFactory;
17: import org.apache.commons.collections4.map.MultiValueMap;
18: import org.evosuite.runtime.EvoRunner;
19: import org.evosuite.runtime.EvoRunnerParameters;
20: import org.junit.runner.RunWith;
21: 
22: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
23: public class MultiValueMap_92_tmp__ESTest extends MultiValueMap_92_tmp__ESTest_scaffolding {
24: 
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       MultiValueMap<HashMap<Object, String>, LinkedList<Integer>> multiValueMap0 = new MultiValueMap<HashMap<Object, String>, LinkedList<Integer>>();
28:       Factory<ArrayList<Object>> factory0 = ConstantFactory.constantFactory((ArrayList<Object>) null);
29:       MultiValueMap<HashMap<Object, String>, MultiValueMap<Object, Object>> multiValueMap1 = new MultiValueMap<HashMap<Object, String>, MultiValueMap<Object, Object>>((Map<HashMap<Object, String>, ? super ArrayList<Object>>) multiValueMap0, factory0);
30:       Collection<MultiValueMap<Object, Object>> collection0 = multiValueMap1.createCollection((-4045));
31:       assertNull(collection0);
32:   }
33: }
RegularFileObject[/tmp/EvoSuite_93_1634038149518/org/apache/commons/collections4/map/MultiValueMap_92_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Oct 12 11:29:09 GMT 2021
5:  */
6: 
7: package org.apache.commons.collections4.map;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: @EvoSuiteClassExclude
17: public class MultiValueMap_92_tmp__ESTest_scaffolding {
18: 
19:   @org.junit.Rule 
20:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
21: 
22:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
23: 
24: 
25:   @BeforeClass 
26:   public static void initEvoSuiteFramework() { 
27:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.map.MultiValueMap"; 
28:     org.evosuite.runtime.GuiSupport.initialize(); 
29:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
31:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
32:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
33:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
34:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
35:     setSystemProperties();
36:     initializeClasses();
37:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
38:   } 
39: 
40:   @Before 
41:   public void initTestCase(){ 
42:     threadStopper.storeCurrentThreads();
43:     threadStopper.startRecordingTime();
44:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
45:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
46:     org.evosuite.runtime.GuiSupport.setHeadless(); 
47:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
48:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
49:   } 
50: 
51:   @After 
52:   public void doneWithTestCase(){ 
53:     threadStopper.killAndJoinClientThreads();
54:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
55:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
56:     resetClasses(); 
57:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
59:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
60:   } 
61: 
62:   public static void setSystemProperties() {
63:  
64:     /*No java.lang.System property to set*/
65:   }
66: 
67:   private static void initializeClasses() {
68:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MultiValueMap_92_tmp__ESTest_scaffolding.class.getClassLoader() ,
69:       "org.apache.commons.collections4.MapIterator",
70:       "org.apache.commons.collections4.iterators.IteratorChain",
71:       "org.apache.commons.collections4.functors.ExceptionFactory",
72:       "org.apache.commons.collections4.map.MultiValueMap$Values",
73:       "org.apache.commons.collections4.map.AbstractMapDecorator",
74:       "org.apache.commons.collections4.Get",
75:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
76:       "org.apache.commons.collections4.CollectionUtils",
77:       "org.apache.commons.collections4.map.MultiValueMap",
78:       "org.apache.commons.collections4.FunctorException",
79:       "org.apache.commons.collections4.map.AbstractIterableMap",
80:       "org.apache.commons.collections4.Factory",
81:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
82:       "org.apache.commons.collections4.Unmodifiable",
83:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
84:       "org.apache.commons.collections4.Transformer",
85:       "org.apache.commons.collections4.map.MultiValueMap$1",
86:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
87:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
88:       "org.apache.commons.collections4.ResettableIterator",
89:       "org.apache.commons.collections4.iterators.EmptyIterator",
90:       "org.apache.commons.collections4.functors.ConstantFactory",
91:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
92:       "org.apache.commons.collections4.Put",
93:       "org.apache.commons.collections4.MultiMap",
94:       "org.apache.commons.collections4.IterableMap",
95:       "org.apache.commons.collections4.IterableGet"
96:     );
97:   } 
98: 
99:   private static void resetClasses() {
100:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MultiValueMap_92_tmp__ESTest_scaffolding.class.getClassLoader()); 
101: 
102:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
103:       "org.apache.commons.collections4.map.AbstractIterableMap",
104:       "org.apache.commons.collections4.map.AbstractMapDecorator",
105:       "org.apache.commons.collections4.map.MultiValueMap",
106:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
107:       "org.apache.commons.collections4.map.MultiValueMap$Values",
108:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
109:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
110:       "org.apache.commons.collections4.map.MultiValueMap$1",
111:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
112:       "org.apache.commons.collections4.iterators.EmptyIterator",
113:       "org.apache.commons.collections4.iterators.EmptyListIterator",
114:       "org.apache.commons.collections4.iterators.EmptyOrderedIterator",
115:       "org.apache.commons.collections4.iterators.AbstractEmptyMapIterator",
116:       "org.apache.commons.collections4.iterators.EmptyMapIterator",
117:       "org.apache.commons.collections4.iterators.EmptyOrderedMapIterator",
118:       "org.apache.commons.collections4.functors.ExceptionFactory",
119:       "org.apache.commons.collections4.functors.ConstantFactory",
120:       "org.apache.commons.collections4.iterators.IteratorChain",
121:       "org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter",
122:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
123:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
124:       "org.apache.commons.collections4.CollectionUtils",
125:       "org.apache.commons.collections4.FunctorException",
126:       "org.apache.commons.collections4.functors.InstantiateFactory"
127:     );
128:   }
129: }

[MASTER] 11:29:09.574 [logback-1] WARN  JUnitAnalyzer - Failed to compile the test cases 
[MASTER] 11:29:10.004 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:29:10.109 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_95_1634038150009/org/apache/commons/collections4/map/MultiValueMap_94_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_95_1634038150009/org/apache/commons/collections4/map/MultiValueMap_94_tmp__ESTest_scaffolding.java]]
[MASTER] 11:29:10.109 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Collections-27/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 11:29:10.109 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 11:29:10.110 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.lang.Class<java.lang.Integer> cannot be converted to java.lang.Class<java.util.LinkedList<java.util.LinkedList<java.util.ArrayList>>>: 30
[MASTER] 11:29:10.110 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_95_1634038150009/org/apache/commons/collections4/map/MultiValueMap_94_tmp__ESTest.java uses or overrides a deprecated API.: -1
[MASTER] 11:29:10.111 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:deprecation for details.: -1
[MASTER] 11:29:10.111 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_95_1634038150009/org/apache/commons/collections4/map/MultiValueMap_94_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Oct 12 11:29:10 GMT 2021
4:  */
5: 
6: package org.apache.commons.collections4.map;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.ArrayList;
11: import java.util.HashMap;
12: import java.util.LinkedList;
13: import java.util.Map;
14: import org.apache.commons.collections4.functors.ConstantFactory;
15: import org.apache.commons.collections4.map.MultiValueMap;
16: import org.evosuite.runtime.EvoRunner;
17: import org.evosuite.runtime.EvoRunnerParameters;
18: import org.junit.runner.RunWith;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
21: public class MultiValueMap_94_tmp__ESTest extends MultiValueMap_94_tmp__ESTest_scaffolding {
22: 
23:   @Test(timeout = 4000)
24:   public void test0()  throws Throwable  {
25:       HashMap<Integer, Object> hashMap0 = new HashMap<Integer, Object>();
26:       Integer integer0 = new Integer(1);
27:       LinkedList<ConstantFactory<Object>> linkedList0 = new LinkedList<ConstantFactory<Object>>();
28:       hashMap0.put(integer0, linkedList0);
29:       Class<Integer> class0 = Integer.class;
30:       MultiValueMap<Integer, LinkedList<ArrayList>> multiValueMap0 = MultiValueMap.multiValueMap((Map<Integer, ? super LinkedList<LinkedList<ArrayList>>>) hashMap0, (Class<LinkedList<LinkedList<ArrayList>>>) class0);
31:       assertFalse(multiValueMap0.isEmpty());
32:   }
33: }
RegularFileObject[/tmp/EvoSuite_95_1634038150009/org/apache/commons/collections4/map/MultiValueMap_94_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Oct 12 11:29:10 GMT 2021
5:  */
6: 
7: package org.apache.commons.collections4.map;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: @EvoSuiteClassExclude
17: public class MultiValueMap_94_tmp__ESTest_scaffolding {
18: 
19:   @org.junit.Rule 
20:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
21: 
22:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
23: 
24: 
25:   @BeforeClass 
26:   public static void initEvoSuiteFramework() { 
27:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.map.MultiValueMap"; 
28:     org.evosuite.runtime.GuiSupport.initialize(); 
29:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
31:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
32:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
33:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
34:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
35:     setSystemProperties();
36:     initializeClasses();
37:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
38:   } 
39: 
40:   @Before 
41:   public void initTestCase(){ 
42:     threadStopper.storeCurrentThreads();
43:     threadStopper.startRecordingTime();
44:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
45:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
46:     org.evosuite.runtime.GuiSupport.setHeadless(); 
47:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
48:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
49:   } 
50: 
51:   @After 
52:   public void doneWithTestCase(){ 
53:     threadStopper.killAndJoinClientThreads();
54:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
55:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
56:     resetClasses(); 
57:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
59:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
60:   } 
61: 
62:   public static void setSystemProperties() {
63:  
64:     /*No java.lang.System property to set*/
65:   }
66: 
67:   private static void initializeClasses() {
68:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MultiValueMap_94_tmp__ESTest_scaffolding.class.getClassLoader() ,
69:       "org.apache.commons.collections4.MapIterator",
70:       "org.apache.commons.collections4.iterators.IteratorChain",
71:       "org.apache.commons.collections4.functors.ExceptionFactory",
72:       "org.apache.commons.collections4.map.MultiValueMap$Values",
73:       "org.apache.commons.collections4.map.AbstractMapDecorator",
74:       "org.apache.commons.collections4.Get",
75:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
76:       "org.apache.commons.collections4.CollectionUtils",
77:       "org.apache.commons.collections4.map.MultiValueMap",
78:       "org.apache.commons.collections4.FunctorException",
79:       "org.apache.commons.collections4.map.AbstractIterableMap",
80:       "org.apache.commons.collections4.Factory",
81:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
82:       "org.apache.commons.collections4.Unmodifiable",
83:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
84:       "org.apache.commons.collections4.Transformer",
85:       "org.apache.commons.collections4.map.MultiValueMap$1",
86:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
87:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
88:       "org.apache.commons.collections4.ResettableIterator",
89:       "org.apache.commons.collections4.iterators.EmptyIterator",
90:       "org.apache.commons.collections4.functors.ConstantFactory",
91:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
92:       "org.apache.commons.collections4.Put",
93:       "org.apache.commons.collections4.MultiMap",
94:       "org.apache.commons.collections4.IterableMap",
95:       "org.apache.commons.collections4.IterableGet"
96:     );
97:   } 
98: 
99:   private static void resetClasses() {
100:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MultiValueMap_94_tmp__ESTest_scaffolding.class.getClassLoader()); 
101: 
102:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
103:       "org.apache.commons.collections4.map.AbstractIterableMap",
104:       "org.apache.commons.collections4.map.AbstractMapDecorator",
105:       "org.apache.commons.collections4.map.MultiValueMap",
106:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
107:       "org.apache.commons.collections4.map.MultiValueMap$Values",
108:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
109:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
110:       "org.apache.commons.collections4.map.MultiValueMap$1",
111:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
112:       "org.apache.commons.collections4.iterators.EmptyIterator",
113:       "org.apache.commons.collections4.iterators.EmptyListIterator",
114:       "org.apache.commons.collections4.iterators.EmptyOrderedIterator",
115:       "org.apache.commons.collections4.iterators.AbstractEmptyMapIterator",
116:       "org.apache.commons.collections4.iterators.EmptyMapIterator",
117:       "org.apache.commons.collections4.iterators.EmptyOrderedMapIterator",
118:       "org.apache.commons.collections4.functors.ExceptionFactory",
119:       "org.apache.commons.collections4.functors.ConstantFactory",
120:       "org.apache.commons.collections4.iterators.IteratorChain",
121:       "org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter",
122:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
123:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
124:       "org.apache.commons.collections4.CollectionUtils",
125:       "org.apache.commons.collections4.FunctorException",
126:       "org.apache.commons.collections4.functors.InstantiateFactory"
127:     );
128:   }
129: }

[MASTER] 11:29:10.111 [logback-1] WARN  JUnitAnalyzer - Failed to compile the test cases 
[MASTER] 11:29:10.670 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:29:10.840 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:29:10.961 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:29:11.125 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:29:12.356 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_100_1634038151126/org/apache/commons/collections4/map/MultiValueMap_99_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_100_1634038151126/org/apache/commons/collections4/map/MultiValueMap_99_tmp__ESTest_scaffolding.java]]
[MASTER] 11:29:12.382 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Collections-27/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 11:29:12.382 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 11:29:12.383 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.lang.Class<java.lang.Integer> cannot be converted to java.lang.Class<java.util.LinkedList<java.util.AbstractMap.SimpleEntry<java.util.ArrayList,java.lang.Integer>>>: 473
[MASTER] 11:29:12.386 [logback-2] ERROR JUnitAnalyzer - Diagnostic: constructor MultiValueMap in class org.apache.commons.collections4.map.MultiValueMap<K,V> cannot be applied to given types;
  required: java.util.Map<java.util.Collection<java.lang.String>,? super C>,org.apache.commons.collections4.Factory<C>
  found: java.util.Map<java.util.Collection<java.lang.String>,capture#1 of ? super java.util.LinkedList<java.lang.String>>,org.apache.commons.collections4.Factory<java.util.LinkedList<java.lang.String>>
  reason: inference variable C has incompatible bounds
    equality constraints: java.util.LinkedList<java.lang.String>
    upper bounds: java.util.LinkedList<java.lang.String>,java.util.Collection<java.util.AbstractMap.SimpleImmutableEntry<java.lang.String,java.lang.Integer>>: 524
[MASTER] 11:29:12.387 [logback-2] ERROR JUnitAnalyzer - Diagnostic: constructor MultiValueMap in class org.apache.commons.collections4.map.MultiValueMap<K,V> cannot be applied to given types;
  required: java.util.Map<java.util.Collection<java.lang.String>,? super C>,org.apache.commons.collections4.Factory<C>
  found: java.util.Map<java.util.Collection<java.lang.String>,capture#2 of ? super java.util.LinkedList<java.lang.String>>,org.apache.commons.collections4.Factory<java.util.LinkedList<java.lang.String>>
  reason: inference variable C has incompatible bounds
    equality constraints: java.util.LinkedList<java.lang.String>
    upper bounds: java.util.LinkedList<java.lang.String>,java.util.Collection<java.lang.Object>: 562
[MASTER] 11:29:12.387 [logback-2] ERROR JUnitAnalyzer - Diagnostic: constructor MultiValueMap in class org.apache.commons.collections4.map.MultiValueMap<K,V> cannot be applied to given types;
  required: java.util.Map<java.lang.String,? super C>,org.apache.commons.collections4.Factory<C>
  found: java.util.Map<java.lang.String,capture#3 of ? super java.util.Collection<java.lang.String>>,org.apache.commons.collections4.Factory<java.util.Collection<java.lang.String>>
  reason: inference variable C has incompatible bounds
    equality constraints: java.util.Collection<java.lang.String>
    upper bounds: java.util.Collection<java.lang.String>,java.util.Collection<java.lang.Integer>: 605
[MASTER] 11:29:12.388 [logback-2] ERROR JUnitAnalyzer - Diagnostic: constructor MultiValueMap in class org.apache.commons.collections4.map.MultiValueMap<K,V> cannot be applied to given types;
  required: java.util.Map<java.lang.Integer,? super C>,org.apache.commons.collections4.Factory<C>
  found: java.util.Map<java.lang.Integer,capture#4 of ? super java.util.LinkedList<java.lang.Object>>,org.apache.commons.collections4.Factory<java.util.LinkedList<java.lang.Object>>
  reason: inference variable C has incompatible bounds
    equality constraints: java.util.LinkedList<java.lang.Object>
    upper bounds: java.util.LinkedList<java.lang.Object>,java.util.Collection<java.util.ArrayList<java.lang.Object>>: 607
[MASTER] 11:29:12.388 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: inferred type does not conform to equality constraint(s)
    inferred: java.lang.String
    equality constraints(s): java.lang.String,org.apache.commons.collections4.functors.ConstantFactory<java.lang.Object>: 650
[MASTER] 11:29:12.394 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: inferred type does not conform to equality constraint(s)
    inferred: java.lang.Object
    equality constraints(s): java.lang.Object,org.apache.commons.collections4.functors.ConstantFactory<java.lang.Object>: 672
[MASTER] 11:29:12.394 [logback-2] ERROR JUnitAnalyzer - Diagnostic: constructor MultiValueMap in class org.apache.commons.collections4.map.MultiValueMap<K,V> cannot be applied to given types;
  required: java.util.Map<java.lang.String,? super C>,org.apache.commons.collections4.Factory<C>
  found: java.util.Map<java.lang.String,capture#5 of ? super java.util.Collection<java.lang.Object>>,org.apache.commons.collections4.Factory<java.util.Collection<java.lang.Object>>
  reason: inference variable C has incompatible bounds
    equality constraints: java.util.Collection<java.lang.Object>
    upper bounds: java.util.Collection<java.lang.Object>,java.util.Collection<java.util.LinkedList<java.lang.String>>: 675
[MASTER] 11:29:12.395 [logback-2] ERROR JUnitAnalyzer - Diagnostic: constructor MultiValueMap in class org.apache.commons.collections4.map.MultiValueMap<K,V> cannot be applied to given types;
  required: java.util.Map<java.util.HashMap<java.lang.Object,java.lang.String>,? super C>,org.apache.commons.collections4.Factory<C>
  found: java.util.Map<java.util.HashMap<java.lang.Object,java.lang.String>,capture#6 of ? super java.util.ArrayList<java.lang.Object>>,org.apache.commons.collections4.Factory<java.util.ArrayList<java.lang.Object>>
  reason: inference variable C has incompatible bounds
    equality constraints: java.util.ArrayList<java.lang.Object>
    upper bounds: java.util.ArrayList<java.lang.Object>,java.util.Collection<org.apache.commons.collections4.map.MultiValueMap<java.lang.Object,java.lang.Object>>: 818
[MASTER] 11:29:12.396 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.lang.Class<java.lang.Integer> cannot be converted to java.lang.Class<java.util.LinkedList<java.util.LinkedList<java.util.ArrayList>>>: 843
[MASTER] 11:29:12.396 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_100_1634038151126/org/apache/commons/collections4/map/MultiValueMap_99_tmp__ESTest.java uses or overrides a deprecated API.: -1
[MASTER] 11:29:12.396 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:deprecation for details.: -1
[MASTER] 11:29:12.396 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_100_1634038151126/org/apache/commons/collections4/map/MultiValueMap_99_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 11:29:12.396 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 11:29:12.396 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Some messages have been simplified; recompile with -Xdiags:verbose to get full output: -1
[MASTER] 11:29:12.401 [logback-1] WARN  JUnitAnalyzer - Failed to compile the test cases 
[MASTER] 11:29:12.399 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_100_1634038151126/org/apache/commons/collections4/map/MultiValueMap_99_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Oct 12 11:29:11 GMT 2021
4:  */
5: 
6: package org.apache.commons.collections4.map;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import static org.evosuite.runtime.EvoAssertions.*;
12: import java.util.AbstractMap;
13: import java.util.ArrayList;
14: import java.util.Collection;
15: import java.util.HashMap;
16: import java.util.Iterator;
17: import java.util.LinkedList;
18: import java.util.Map;
19: import java.util.Set;
20: import java.util.function.BiFunction;
21: import java.util.function.UnaryOperator;
22: import org.apache.commons.collections4.Factory;
23: import org.apache.commons.collections4.functors.ConstantFactory;
24: import org.apache.commons.collections4.functors.ExceptionFactory;
25: import org.apache.commons.collections4.map.MultiValueMap;
26: import org.evosuite.runtime.EvoRunner;
27: import org.evosuite.runtime.EvoRunnerParameters;
28: import org.evosuite.runtime.ViolatedAssumptionAnswer;
29: import org.junit.runner.RunWith;
30: 
31: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
32: public class MultiValueMap_99_tmp__ESTest extends MultiValueMap_99_tmp__ESTest_scaffolding {
33: 
34:   @Test(timeout = 4000)
35:   public void test00()  throws Throwable  {
36:       MultiValueMap<Collection<Object>, String> multiValueMap0 = new MultiValueMap<Collection<Object>, String>();
37:       MultiValueMap<Collection<Object>, Integer> multiValueMap1 = MultiValueMap.multiValueMap((Map<Collection<Object>, ? super Collection<Integer>>) multiValueMap0);
38:       multiValueMap0.map = (Map<Collection<Object>, Object>) multiValueMap1;
39:       // Undeclared exception!
40:       try { 
41:         multiValueMap0.iterator();
42:         fail("Expecting exception: StackOverflowError");
43:       
44:       } catch(StackOverflowError e) {
45:          //
46:          // no message in exception (getMessage() returned null)
47:          //
48:       }
49:   }
50: 
51:   @Test(timeout = 4000)
52:   public void test01()  throws Throwable  {
53:       MultiValueMap<Collection<Object>, String> multiValueMap0 = new MultiValueMap<Collection<Object>, String>();
54:       Iterator<Map.Entry<Collection<Object>, String>> iterator0 = (Iterator<Map.Entry<Collection<Object>, String>>)multiValueMap0.iterator();
55:       assertNotNull(iterator0);
56:   }
57: 
58:   @Test(timeout = 4000)
59:   public void test02()  throws Throwable  {
60:       HashMap<ArrayList<Collection<ConstantFactory<Object>>>, Object> hashMap0 = new HashMap<ArrayList<Collection<ConstantFactory<Object>>>, Object>();
61:       MultiValueMap<ArrayList<Collection<ConstantFactory<Object>>>, Object> multiValueMap0 = MultiValueMap.multiValueMap((Map<ArrayList<Collection<ConstantFactory<Object>>>, ? super Collection<Object>>) hashMap0);
62:       MultiValueMap<ArrayList<Collection<ConstantFactory<Object>>>, MultiValueMap<Object, String>> multiValueMap1 = MultiValueMap.multiValueMap((Map<ArrayList<Collection<ConstantFactory<Object>>>, ? super Collection<MultiValueMap<Object, String>>>) multiValueMap0);
63:       multiValueMap1.clear();
64:       assertTrue(multiValueMap1.isEmpty());
65:   }
66: 
67:   @Test(timeout = 4000)
68:   public void test03()  throws Throwable  {
69:       ArrayList<Object> arrayList0 = new ArrayList<Object>();
70:       MultiValueMap<Collection<Object>, String> multiValueMap0 = new MultiValueMap<Collection<Object>, String>();
71:       multiValueMap0.putIfAbsent(arrayList0, arrayList0);
72:       multiValueMap0.iterator((Object) arrayList0);
73:       assertFalse(multiValueMap0.isEmpty());
74:   }
75: 
76:   @Test(timeout = 4000)
77:   public void test04()  throws Throwable  {
78:       MultiValueMap<LinkedList<Integer>, String> multiValueMap0 = new MultiValueMap<LinkedList<Integer>, String>();
79:       ArrayList<String> arrayList0 = new ArrayList<String>();
80:       arrayList0.add("iv0{G");
81:       LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
82:       multiValueMap0.putAll(linkedList0, (Collection<String>) arrayList0);
83:       MultiValueMap<LinkedList<Integer>, Collection<Integer>> multiValueMap1 = MultiValueMap.multiValueMap((Map<LinkedList<Integer>, ? super Collection<Collection<Integer>>>) multiValueMap0);
84:       // Undeclared exception!
85:       try { 
86:         multiValueMap1.totalSize();
87:         fail("Expecting exception: IllegalArgumentException");
88:       
89:       } catch(IllegalArgumentException e) {
90:          //
91:          // Unsupported object type: java.lang.String
92:          //
93:          verifyException("org.apache.commons.collections4.CollectionUtils", e);
94:       }
95:   }
96: 
97:   @Test(timeout = 4000)
98:   public void test05()  throws Throwable  {
99:       ArrayList<Object> arrayList0 = new ArrayList<Object>();
100:       HashMap<LinkedList<String>, Object> hashMap0 = new HashMap<LinkedList<String>, Object>();
101:       LinkedList<String> linkedList0 = new LinkedList<String>();
102:       hashMap0.put(linkedList0, linkedList0);
103:       MultiValueMap<LinkedList<String>, AbstractMap.SimpleImmutableEntry<ArrayList<Object>, LinkedList<Object>>> multiValueMap0 = MultiValueMap.multiValueMap((Map<LinkedList<String>, ? super Collection<AbstractMap.SimpleImmutableEntry<ArrayList<Object>, LinkedList<Object>>>>) hashMap0);
104:       boolean boolean0 = multiValueMap0.removeMapping(arrayList0, (Object) null);
105:       assertEquals(1, hashMap0.size());
106:       assertFalse(boolean0);
107:   }
108: 
109:   @Test(timeout = 4000)
110:   public void test06()  throws Throwable  {
111:       MultiValueMap<ArrayList<Object>, ArrayList<Collection<ConstantFactory<Object>>>> multiValueMap0 = new MultiValueMap<ArrayList<Object>, ArrayList<Collection<ConstantFactory<Object>>>>();
112:       Integer integer0 = new Integer((-2));
113:       boolean boolean0 = multiValueMap0.removeMapping(integer0, integer0);
114:       assertFalse(boolean0);
115:   }
116: 
117:   @Test(timeout = 4000)
118:   public void test07()  throws Throwable  {
119:       ArrayList<String> arrayList0 = new ArrayList<String>();
120:       UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
121:       MultiValueMap<LinkedList<Object>, ArrayList<String>> multiValueMap0 = new MultiValueMap<LinkedList<Object>, ArrayList<String>>();
122:       LinkedList<Object> linkedList0 = new LinkedList<Object>();
123:       multiValueMap0.computeIfAbsent(linkedList0, unaryOperator0);
124:       assertEquals(1, multiValueMap0.size());
125:       
126:       boolean boolean0 = multiValueMap0.removeMapping(linkedList0, arrayList0);
127:       assertTrue(boolean0);
128:   }
129: 
130:   @Test(timeout = 4000)
131:   public void test08()  throws Throwable  {
132:       MultiValueMap<String, Object> multiValueMap0 = new MultiValueMap<String, Object>();
133:       MultiValueMap<Integer, String> multiValueMap1 = new MultiValueMap<Integer, String>();
134:       multiValueMap0.putIfAbsent("[$j9wN19EnwXrft!", multiValueMap1);
135:       multiValueMap0.put("[$j9wN19EnwXrft!", "[$j9wN19EnwXrft!");
136:       boolean boolean0 = multiValueMap0.removeMapping("[$j9wN19EnwXrft!", "[$j9wN19EnwXrft!");
137:       assertFalse(multiValueMap0.isEmpty());
138:       assertTrue(boolean0);
139:   }
140: 
141:   @Test(timeout = 4000)
142:   public void test09()  throws Throwable  {
143:       HashMap<LinkedList<Object>, Object> hashMap0 = new HashMap<LinkedList<Object>, Object>();
144:       LinkedList<Object> linkedList0 = new LinkedList<Object>();
145:       hashMap0.put(linkedList0, linkedList0);
146:       MultiValueMap<LinkedList<Object>, String> multiValueMap0 = MultiValueMap.multiValueMap((Map<LinkedList<Object>, ? super Collection<String>>) hashMap0);
147:       boolean boolean0 = multiValueMap0.containsValue((Object) multiValueMap0);
148:       assertFalse(boolean0);
149:   }
150: 
151:   @Test(timeout = 4000)
152:   public void test10()  throws Throwable  {
153:       HashMap<LinkedList<Object>, Object> hashMap0 = new HashMap<LinkedList<Object>, Object>();
154:       LinkedList<Object> linkedList0 = new LinkedList<Object>();
155:       MultiValueMap<LinkedList<Object>, String> multiValueMap0 = MultiValueMap.multiValueMap((Map<LinkedList<Object>, ? super Collection<String>>) hashMap0);
156:       UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
157:       multiValueMap0.computeIfAbsent(linkedList0, unaryOperator0);
158:       boolean boolean0 = multiValueMap0.containsValue((Object) linkedList0);
159:       assertFalse(multiValueMap0.isEmpty());
160:       assertTrue(boolean0);
161:   }
162: 
163:   @Test(timeout = 4000)
164:   public void test11()  throws Throwable  {
165:       HashMap<ConstantFactory<String>, Object> hashMap0 = new HashMap<ConstantFactory<String>, Object>();
166:       ConstantFactory<String> constantFactory0 = new ConstantFactory<String>("|>rDbEN+");
167:       Integer integer0 = new Integer(9);
168:       hashMap0.put(constantFactory0, integer0);
169:       MultiValueMap<ConstantFactory<String>, ArrayList<Object>> multiValueMap0 = MultiValueMap.multiValueMap((Map<ConstantFactory<String>, ? super Collection<ArrayList<Object>>>) hashMap0);
170:       // Undeclared exception!
171:       try { 
172:         multiValueMap0.putAll((Map<? extends ConstantFactory<String>, ?>) hashMap0);
173:         fail("Expecting exception: ClassCastException");
174:       
175:       } catch(ClassCastException e) {
176:          //
177:          // java.lang.Integer cannot be cast to java.util.Collection
178:          //
179:          verifyException("org.apache.commons.collections4.map.MultiValueMap", e);
180:       }
181:   }
182: 
183:   @Test(timeout = 4000)
184:   public void test12()  throws Throwable  {
185:       MultiValueMap<String, String> multiValueMap0 = new MultiValueMap<String, String>();
186:       Collection<Object> collection0 = multiValueMap0.values();
187:       Collection<Object> collection1 = multiValueMap0.values();
188:       assertSame(collection1, collection0);
189:   }
190: 
191:   @Test(timeout = 4000)
192:   public void test13()  throws Throwable  {
193:       HashMap<LinkedList<String>, Object> hashMap0 = new HashMap<LinkedList<String>, Object>();
194:       MultiValueMap<LinkedList<String>, AbstractMap.SimpleImmutableEntry<ArrayList<Object>, LinkedList<Object>>> multiValueMap0 = MultiValueMap.multiValueMap((Map<LinkedList<String>, ? super Collection<AbstractMap.SimpleImmutableEntry<ArrayList<Object>, LinkedList<Object>>>>) hashMap0);
195:       MultiValueMap<LinkedList<String>, ArrayList<Integer>> multiValueMap1 = MultiValueMap.multiValueMap((Map<LinkedList<String>, ? super Collection<ArrayList<Integer>>>) multiValueMap0);
196:       boolean boolean0 = multiValueMap1.containsValue((Object) multiValueMap0, (Object) null);
197:       assertFalse(boolean0);
198:   }
199: 
200:   @Test(timeout = 4000)
201:   public void test14()  throws Throwable  {
202:       MultiValueMap<String, String> multiValueMap0 = new MultiValueMap<String, String>();
203:       boolean boolean0 = multiValueMap0.putAll("", (Collection<String>) null);
204:       assertFalse(boolean0);
205:   }
206: 
207:   @Test(timeout = 4000)
208:   public void test15()  throws Throwable  {
209:       MultiValueMap<LinkedList<Integer>, String> multiValueMap0 = new MultiValueMap<LinkedList<Integer>, String>();
210:       ArrayList<String> arrayList0 = new ArrayList<String>();
211:       LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
212:       boolean boolean0 = multiValueMap0.putAll(linkedList0, (Collection<String>) arrayList0);
213:       assertFalse(boolean0);
214:   }
215: 
216:   @Test(timeout = 4000)
217:   public void test16()  throws Throwable  {
218:       MultiValueMap<LinkedList<Integer>, String> multiValueMap0 = new MultiValueMap<LinkedList<Integer>, String>();
219:       ArrayList<String> arrayList0 = new ArrayList<String>();
220:       arrayList0.add("InstantiateFactory: Constructor threw an exception");
221:       LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
222:       HashMap<ArrayList<String>, Object> hashMap0 = new HashMap<ArrayList<String>, Object>();
223:       MultiValueMap<ArrayList<String>, String> multiValueMap1 = MultiValueMap.multiValueMap((Map<ArrayList<String>, ? super Collection<String>>) hashMap0);
224:       Factory<LinkedList<ArrayList<String>>> factory0 = ExceptionFactory.exceptionFactory();
225:       MultiValueMap<ArrayList<String>, ArrayList<String>> multiValueMap2 = MultiValueMap.multiValueMap((Map<ArrayList<String>, ? super LinkedList<ArrayList<String>>>) multiValueMap1, factory0);
226:       Object object0 = multiValueMap2.getOrDefault(multiValueMap0, arrayList0);
227:       multiValueMap0.put(linkedList0, object0);
228:       boolean boolean0 = multiValueMap0.putAll(linkedList0, (Collection<String>) arrayList0);
229:       assertEquals(1, arrayList0.size());
230:       assertTrue(boolean0);
231:   }
232: 
233:   @Test(timeout = 4000)
234:   public void test17()  throws Throwable  {
235:       ArrayList<Object> arrayList0 = new ArrayList<Object>();
236:       MultiValueMap<Collection<Object>, String> multiValueMap0 = new MultiValueMap<Collection<Object>, String>();
237:       Iterator<String> iterator0 = multiValueMap0.iterator((Object) arrayList0);
238:       assertNotNull(iterator0);
239:   }
240: 
241:   @Test(timeout = 4000)
242:   public void test18()  throws Throwable  {
243:       Object object0 = new Object();
244:       MultiValueMap<ArrayList<String>, ArrayList<String>> multiValueMap0 = new MultiValueMap<ArrayList<String>, ArrayList<String>>();
245:       Collection<ArrayList<String>> collection0 = multiValueMap0.getCollection(object0);
246:       assertNull(collection0);
247:   }
248: 
249:   @Test(timeout = 4000)
250:   public void test19()  throws Throwable  {
251:       MultiValueMap<Collection<Object>, String> multiValueMap0 = new MultiValueMap<Collection<Object>, String>();
252:       int int0 = multiValueMap0.totalSize();
253:       assertEquals(0, int0);
254:   }
255: 
256:   @Test(timeout = 4000)
257:   public void test20()  throws Throwable  {
258:       Factory<Collection<String>> factory0 = ConstantFactory.constantFactory((Collection<String>) null);
259:       MultiValueMap<Object, String> multiValueMap0 = null;
260:       try {
261:         multiValueMap0 = new MultiValueMap<Object, String>((Map<Object, ? super Collection<String>>) null, factory0);
262:         fail("Expecting exception: NullPointerException");
263:       
264:       } catch(NullPointerException e) {
265:          //
266:          // Map must not be null.
267:          //
268:          verifyException("org.apache.commons.collections4.map.AbstractMapDecorator", e);
269:       }
270:   }
271: 
272:   @Test(timeout = 4000)
273:   public void test21()  throws Throwable  {
274:       MultiValueMap<String, ConstantFactory<Object>> multiValueMap0 = new MultiValueMap<String, ConstantFactory<Object>>();
275:       multiValueMap0.map = null;
276:       // Undeclared exception!
277:       try { 
278:         multiValueMap0.clear();
279:         fail("Expecting exception: NullPointerException");
280:       
281:       } catch(NullPointerException e) {
282:          //
283:          // no message in exception (getMessage() returned null)
284:          //
285:          verifyException("org.apache.commons.collections4.map.MultiValueMap", e);
286:       }
287:   }
288: 
289:   @Test(timeout = 4000)
290:   public void test22()  throws Throwable  {
291:       HashMap<LinkedList<Object>, Object> hashMap0 = new HashMap<LinkedList<Object>, Object>();
292:       LinkedList<Object> linkedList0 = new LinkedList<Object>();
293:       hashMap0.put(linkedList0, hashMap0);
294:       MultiValueMap<LinkedList<Object>, String> multiValueMap0 = MultiValueMap.multiValueMap((Map<LinkedList<Object>, ? super Collection<String>>) hashMap0);
295:       // Undeclared exception!
296:       try { 
297:         multiValueMap0.containsValue((Object) hashMap0);
298:         fail("Expecting exception: ClassCastException");
299:       
300:       } catch(ClassCastException e) {
301:          //
302:          // java.util.HashMap cannot be cast to java.util.Collection
303:          //
304:          verifyException("org.apache.commons.collections4.map.MultiValueMap", e);
305:       }
306:   }
307: 
308:   @Test(timeout = 4000)
309:   public void test23()  throws Throwable  {
310:       HashMap<ArrayList<String>, Object> hashMap0 = new HashMap<ArrayList<String>, Object>();
311:       ArrayList<String> arrayList0 = new ArrayList<String>();
312:       hashMap0.put(arrayList0, (Object) null);
313:       MultiValueMap<ArrayList<String>, String> multiValueMap0 = MultiValueMap.multiValueMap((Map<ArrayList<String>, ? super Collection<String>>) hashMap0);
314:       // Undeclared exception!
315:       try { 
316:         multiValueMap0.containsValue((Object) hashMap0);
317:         fail("Expecting exception: NullPointerException");
318:       
319:       } catch(NullPointerException e) {
320:       }
321:   }
322: 
323:   @Test(timeout = 4000)
324:   public void test24()  throws Throwable  {
325:       HashMap<LinkedList<Object>, Object> hashMap0 = new HashMap<LinkedList<Object>, Object>();
326:       LinkedList<Object> linkedList0 = new LinkedList<Object>();
327:       linkedList0.add((Object) hashMap0);
328:       hashMap0.put(linkedList0, linkedList0);
329:       MultiValueMap<LinkedList<Object>, String> multiValueMap0 = MultiValueMap.multiValueMap((Map<LinkedList<Object>, ? super Collection<String>>) hashMap0);
330:       // Undeclared exception!
331:       try { 
332:         multiValueMap0.containsValue((Object) multiValueMap0);
333:        //  fail("Expecting exception: StackOverflowError");
334:        // Unstable assertion
335:       } catch(StackOverflowError e) {
336:          //
337:          // no message in exception (getMessage() returned null)
338:          //
339:       }
340:   }
341: 
342:   @Test(timeout = 4000)
343:   public void test25()  throws Throwable  {
344:       MultiValueMap<Integer, Collection<String>> multiValueMap0 = new MultiValueMap<Integer, Collection<String>>();
345:       LinkedList<String> linkedList0 = new LinkedList<String>();
346:       HashMap<LinkedList<String>, Object> hashMap0 = new HashMap<LinkedList<String>, Object>();
347:       hashMap0.put(linkedList0, multiValueMap0);
348:       MultiValueMap<LinkedList<String>, ArrayList<Integer>> multiValueMap1 = MultiValueMap.multiValueMap((Map<LinkedList<String>, ? super Collection<ArrayList<Integer>>>) hashMap0);
349:       // Undeclared exception!
350:       try { 
351:         multiValueMap1.containsValue((Object) linkedList0, (Object) null);
352:         fail("Expecting exception: ClassCastException");
353:       
354:       } catch(ClassCastException e) {
355:          //
356:          // org.apache.commons.collections4.map.MultiValueMap cannot be cast to java.util.Collection
357:          //
358:          verifyException("org.apache.commons.collections4.map.MultiValueMap", e);
359:       }
360:   }
361: 
362:   @Test(timeout = 4000)
363:   public void test26()  throws Throwable  {
364:       MultiValueMap<LinkedList<Object>, String> multiValueMap0 = new MultiValueMap<LinkedList<Object>, String>();
365:       multiValueMap0.map = null;
366:       MultiValueMap<Collection<String>, ArrayList<String>> multiValueMap1 = new MultiValueMap<Collection<String>, ArrayList<String>>();
367:       ConstantFactory<Object> constantFactory0 = new ConstantFactory<Object>(multiValueMap0);
368:       // Undeclared exception!
369:       try { 
370:         multiValueMap1.containsValue((Object) multiValueMap0, (Object) constantFactory0);
371:         fail("Expecting exception: NullPointerException");
372:       
373:       } catch(NullPointerException e) {
374:          //
375:          // no message in exception (getMessage() returned null)
376:          //
377:          verifyException("org.apache.commons.collections4.map.AbstractMapDecorator", e);
378:       }
379:   }
380: 
381:   @Test(timeout = 4000)
382:   public void test27()  throws Throwable  {
383:       MultiValueMap<String, Object> multiValueMap0 = new MultiValueMap<String, Object>();
384:       MultiValueMap<String, String> multiValueMap1 = MultiValueMap.multiValueMap((Map<String, ? super Collection<String>>) multiValueMap0);
385:       multiValueMap0.put("dD&BU", multiValueMap1);
386:       // Undeclared exception!
387:       try { 
388:         multiValueMap1.containsValue((Object) multiValueMap1, (Object) "dD&BU");
389:         fail("Expecting exception: StackOverflowError");
390:       
391:       } catch(StackOverflowError e) {
392:          //
393:          // no message in exception (getMessage() returned null)
394:          //
395:       }
396:   }
397: 
398:   @Test(timeout = 4000)
399:   public void test28()  throws Throwable  {
400:       HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
401:       MultiValueMap<String, LinkedList<String>> multiValueMap0 = MultiValueMap.multiValueMap((Map<String, ? super Collection<LinkedList<String>>>) hashMap0);
402:       Factory<ArrayList<ArrayList<Integer>>> factory0 = ExceptionFactory.exceptionFactory();
403:       MultiValueMap<String, ArrayList<Integer>> multiValueMap1 = MultiValueMap.multiValueMap((Map<String, ? super ArrayList<ArrayList<Integer>>>) multiValueMap0, factory0);
404:       MultiValueMap<Integer, LinkedList<String>> multiValueMap2 = new MultiValueMap<Integer, LinkedList<String>>();
405:       hashMap0.put((String) null, multiValueMap2);
406:       // Undeclared exception!
407:       try { 
408:         multiValueMap1.getCollection((Object) null);
409:         fail("Expecting exception: ClassCastException");
410:       
411:       } catch(ClassCastException e) {
412:          //
413:          // org.apache.commons.collections4.map.MultiValueMap cannot be cast to java.util.Collection
414:          //
415:          verifyException("org.apache.commons.collections4.map.MultiValueMap", e);
416:       }
417:   }
418: 
419:   @Test(timeout = 4000)
420:   public void test29()  throws Throwable  {
421:       Integer integer0 = new Integer((-2));
422:       MultiValueMap<Collection<ConstantFactory<Object>>, String> multiValueMap0 = new MultiValueMap<Collection<ConstantFactory<Object>>, String>();
423:       multiValueMap0.map = (Map<Collection<ConstantFactory<Object>>, Object>) multiValueMap0;
424:       // Undeclared exception!
425:       try { 
426:         multiValueMap0.getCollection(integer0);
427:         fail("Expecting exception: StackOverflowError");
428:       
429:       } catch(StackOverflowError e) {
430:          //
431:          // no message in exception (getMessage() returned null)
432:          //
433:       }
434:   }
435: 
436:   @Test(timeout = 4000)
437:   public void test30()  throws Throwable  {
438:       MultiValueMap<LinkedList<Object>, Collection<ConstantFactory<Object>>> multiValueMap0 = new MultiValueMap<LinkedList<Object>, Collection<ConstantFactory<Object>>>();
439:       multiValueMap0.map = null;
440:       // Undeclared exception!
441:       try { 
442:         multiValueMap0.iterator((Object) null);
443:         fail("Expecting exception: NullPointerException");
444:       
445:       } catch(NullPointerException e) {
446:          //
447:          // no message in exception (getMessage() returned null)
448:          //
449:          verifyException("org.apache.commons.collections4.map.AbstractMapDecorator", e);
450:       }
451:   }
452: 
453:   @Test(timeout = 4000)
454:   public void test31()  throws Throwable  {
455:       // Undeclared exception!
456:       try { 
457:         MultiValueMap.multiValueMap((Map<LinkedList<Object>, ? super Collection<String>>) null);
458:         fail("Expecting exception: NullPointerException");
459:       
460:       } catch(NullPointerException e) {
461:          //
462:          // Map must not be null.
463:          //
464:          verifyException("org.apache.commons.collections4.map.AbstractMapDecorator", e);
465:       }
466:   }
467: 
468:   @Test(timeout = 4000)
469:   public void test32()  throws Throwable  {
470:       Class<Integer> class0 = Integer.class;
471:       // Undeclared exception!
472:       try { 
473:         MultiValueMap.multiValueMap((Map<Integer, ? super LinkedList<AbstractMap.SimpleEntry<ArrayList, Integer>>>) null, (Class<LinkedList<AbstractMap.SimpleEntry<ArrayList, Integer>>>) class0);
474:         fail("Expecting exception: NullPointerException");
475:       
476:       } catch(NullPointerException e) {
477:          //
478:          // Map must not be null.
479:          //
480:          verifyException("org.apache.commons.collections4.map.AbstractMapDecorator", e);
481:       }
482:   }
483: 
484:   @Test(timeout = 4000)
485:   public void test33()  throws Throwable  {
486:       MultiValueMap<ArrayList<String>, Object> multiValueMap0 = new MultiValueMap<ArrayList<String>, Object>();
487:       // Undeclared exception!
488:       try { 
489:         MultiValueMap.multiValueMap((Map<ArrayList<String>, ? super LinkedList<String>>) multiValueMap0, (Factory<LinkedList<String>>) null);
490:         fail("Expecting exception: IllegalArgumentException");
491:       
492:       } catch(IllegalArgumentException e) {
493:          //
494:          // The factory must not be null
495:          //
496:          verifyException("org.apache.commons.collections4.map.MultiValueMap", e);
497:       }
498:   }
499: 
500:   @Test(timeout = 4000)
501:   public void test34()  throws Throwable  {
502:       LinkedList<String> linkedList0 = new LinkedList<String>();
503:       Factory<Collection<String>> factory0 = ConstantFactory.constantFactory((Collection<String>) linkedList0);
504:       // Undeclared exception!
505:       try { 
506:         MultiValueMap.multiValueMap((Map<Object, ? super Collection<String>>) null, factory0);
507:         fail("Expecting exception: NullPointerException");
508:       
509:       } catch(NullPointerException e) {
510:          //
511:          // Map must not be null.
512:          //
513:          verifyException("org.apache.commons.collections4.map.AbstractMapDecorator", e);
514:       }
515:   }
516: 
517:   @Test(timeout = 4000)
518:   public void test35()  throws Throwable  {
519:       ArrayList<Object> arrayList0 = new ArrayList<Object>();
520:       LinkedList<String> linkedList0 = new LinkedList<String>();
521:       HashMap<Collection<String>, Object> hashMap0 = new HashMap<Collection<String>, Object>();
522:       Factory<LinkedList<String>> factory0 = ExceptionFactory.exceptionFactory();
523:       hashMap0.put(linkedList0, "");
524:       MultiValueMap<Collection<String>, AbstractMap.SimpleImmutableEntry<String, Integer>> multiValueMap0 = new MultiValueMap<Collection<String>, AbstractMap.SimpleImmutableEntry<String, Integer>>((Map<Collection<String>, ? super LinkedList<String>>) hashMap0, factory0);
525:       // Undeclared exception!
526:       try { 
527:         multiValueMap0.put(linkedList0, arrayList0);
528:         fail("Expecting exception: ClassCastException");
529:       
530:       } catch(ClassCastException e) {
531:          //
532:          // java.lang.String cannot be cast to java.util.Collection
533:          //
534:          verifyException("org.apache.commons.collections4.map.MultiValueMap", e);
535:       }
536:   }
537: 
538:   @Test(timeout = 4000)
539:   public void test36()  throws Throwable  {
540:       HashMap<HashMap<Object, String>, Object> hashMap0 = new HashMap<HashMap<Object, String>, Object>(2, 2);
541:       Factory<Collection<ArrayList<String>>> factory0 = ConstantFactory.constantFactory((Collection<ArrayList<String>>) null);
542:       MultiValueMap<HashMap<Object, String>, ArrayList<String>> multiValueMap0 = MultiValueMap.multiValueMap((Map<HashMap<Object, String>, ? super Collection<ArrayList<String>>>) hashMap0, factory0);
543:       HashMap<Object, String> hashMap1 = new HashMap<Object, String>();
544:       // Undeclared exception!
545:       try { 
546:         multiValueMap0.put(hashMap1, (Object) null);
547:         fail("Expecting exception: NullPointerException");
548:       
549:       } catch(NullPointerException e) {
550:          //
551:          // no message in exception (getMessage() returned null)
552:          //
553:          verifyException("org.apache.commons.collections4.map.MultiValueMap", e);
554:       }
555:   }
556: 
557:   @Test(timeout = 4000)
558:   public void test37()  throws Throwable  {
559:       MultiValueMap<Collection<String>, AbstractMap.SimpleImmutableEntry<String, Integer>> multiValueMap0 = new MultiValueMap<Collection<String>, AbstractMap.SimpleImmutableEntry<String, Integer>>();
560:       LinkedList<String> linkedList0 = new LinkedList<String>();
561:       Factory<LinkedList<String>> factory0 = ConstantFactory.constantFactory(linkedList0);
562:       MultiValueMap<Collection<String>, Object> multiValueMap1 = new MultiValueMap<Collection<String>, Object>((Map<Collection<String>, ? super LinkedList<String>>) multiValueMap0, factory0);
563:       multiValueMap0.map = (Map<Collection<String>, Object>) multiValueMap1;
564:       // Undeclared exception!
565:       try { 
566:         multiValueMap0.put(linkedList0, linkedList0);
567:         fail("Expecting exception: StackOverflowError");
568:       
569:       } catch(StackOverflowError e) {
570:          //
571:          // no message in exception (getMessage() returned null)
572:          //
573:       }
574:   }
575: 
576:   @Test(timeout = 4000)
577:   public void test38()  throws Throwable  {
578:       MultiValueMap<String, LinkedList<String>> multiValueMap0 = new MultiValueMap<String, LinkedList<String>>();
579:       MultiValueMap<LinkedList<Object>, Object> multiValueMap1 = new MultiValueMap<LinkedList<Object>, Object>();
580:       Collection<Object> collection0 = multiValueMap1.values();
581:       Factory<Collection<Object>> factory0 = ConstantFactory.constantFactory(collection0);
582:       MultiValueMap<String, Object> multiValueMap2 = new MultiValueMap<String, Object>((Map<String, ? super Collection<Object>>) multiValueMap0, factory0);
583:       LinkedList<ConstantFactory<Object>> linkedList0 = new LinkedList<ConstantFactory<Object>>();
584:       // Undeclared exception!
585:       try { 
586:         multiValueMap2.put(")eo", linkedList0);
587:         fail("Expecting exception: UnsupportedOperationException");
588:       
589:       } catch(UnsupportedOperationException e) {
590:          //
591:          // no message in exception (getMessage() returned null)
592:          //
593:          verifyException("java.util.AbstractCollection", e);
594:       }
595:   }
596: 
597:   @Test(timeout = 4000)
598:   public void test39()  throws Throwable  {
599:       MultiValueMap<Integer, Integer> multiValueMap0 = new MultiValueMap<Integer, Integer>();
600:       Factory<LinkedList<Object>> factory0 = ExceptionFactory.exceptionFactory();
601:       MultiValueMap<Integer, Object> multiValueMap1 = MultiValueMap.multiValueMap((Map<Integer, ? super LinkedList<Object>>) multiValueMap0, factory0);
602:       LinkedList<String> linkedList0 = new LinkedList<String>();
603:       MultiValueMap<String, Object> multiValueMap2 = new MultiValueMap<String, Object>();
604:       ConstantFactory<Collection<String>> constantFactory0 = new ConstantFactory<Collection<String>>(linkedList0);
605:       MultiValueMap<String, Integer> multiValueMap3 = new MultiValueMap<String, Integer>((Map<String, ? super Collection<String>>) multiValueMap2, (Factory<Collection<String>>) constantFactory0);
606:       Object object0 = multiValueMap3.putIfAbsent("org.apache.commons.collections4.map.MultiValueMap$ValuesIterator", multiValueMap1);
607:       MultiValueMap<Integer, ArrayList<Object>> multiValueMap4 = new MultiValueMap<Integer, ArrayList<Object>>((Map<Integer, ? super LinkedList<Object>>) multiValueMap0, factory0);
608:       Integer integer0 = new Integer(2882);
609:       // Undeclared exception!
610:       try { 
611:         multiValueMap4.put(integer0, object0);
612:         fail("Expecting exception: RuntimeException");
613:       
614:       } catch(RuntimeException e) {
615:          //
616:          // ExceptionFactory invoked
617:          //
618:          verifyException("org.apache.commons.collections4.functors.ExceptionFactory", e);
619:       }
620:   }
621: 
622:   @Test(timeout = 4000)
623:   public void test40()  throws Throwable  {
624:       ArrayList<String> arrayList0 = new ArrayList<String>();
625:       arrayList0.add("Map must not be null.");
626:       LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
627:       HashMap<LinkedList<Integer>, Object> hashMap0 = new HashMap<LinkedList<Integer>, Object>();
628:       hashMap0.put(linkedList0, "Map must not be null.");
629:       MultiValueMap<LinkedList<Integer>, String> multiValueMap0 = MultiValueMap.multiValueMap((Map<LinkedList<Integer>, ? super Collection<String>>) hashMap0);
630:       // Undeclared exception!
631:       try { 
632:         multiValueMap0.putAll(linkedList0, (Collection<String>) arrayList0);
633:         fail("Expecting exception: ClassCastException");
634:       
635:       } catch(ClassCastException e) {
636:          //
637:          // java.lang.String cannot be cast to java.util.Collection
638:          //
639:          verifyException("org.apache.commons.collections4.map.MultiValueMap", e);
640:       }
641:   }
642: 
643:   @Test(timeout = 4000)
644:   public void test41()  throws Throwable  {
645:       ArrayList<String> arrayList0 = new ArrayList<String>();
646:       arrayList0.add("C)G/?&");
647:       LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
648:       HashMap<LinkedList<Integer>, Collection<ConstantFactory<Object>>> hashMap0 = new HashMap<LinkedList<Integer>, Collection<ConstantFactory<Object>>>();
649:       Factory<Collection<ConstantFactory<Object>>> factory0 = ConstantFactory.constantFactory((Collection<ConstantFactory<Object>>) null);
650:       MultiValueMap<LinkedList<Integer>, String> multiValueMap0 = MultiValueMap.multiValueMap((Map<LinkedList<Integer>, ? super Collection<ConstantFactory<Object>>>) hashMap0, factory0);
651:       // Undeclared exception!
652:       try { 
653:         multiValueMap0.putAll(linkedList0, (Collection<String>) arrayList0);
654:         fail("Expecting exception: NullPointerException");
655:       
656:       } catch(NullPointerException e) {
657:          //
658:          // no message in exception (getMessage() returned null)
659:          //
660:          verifyException("org.apache.commons.collections4.map.MultiValueMap", e);
661:       }
662:   }
663: 
664:   @Test(timeout = 4000)
665:   public void test42()  throws Throwable  {
666:       MultiValueMap<String, LinkedList<String>> multiValueMap0 = new MultiValueMap<String, LinkedList<String>>();
667:       ArrayList<LinkedList<String>> arrayList0 = new ArrayList<LinkedList<String>>();
668:       LinkedList<String> linkedList0 = new LinkedList<String>();
669:       arrayList0.add(linkedList0);
670:       HashMap<Collection<Object>, Collection<ConstantFactory<Object>>> hashMap0 = new HashMap<Collection<Object>, Collection<ConstantFactory<Object>>>(4373, 1917.0945F);
671:       Factory<Collection<ConstantFactory<Object>>> factory0 = ExceptionFactory.exceptionFactory();
672:       MultiValueMap<Collection<Object>, Object> multiValueMap1 = MultiValueMap.multiValueMap((Map<Collection<Object>, ? super Collection<ConstantFactory<Object>>>) hashMap0, factory0);
673:       Collection<Object> collection0 = multiValueMap1.values();
674:       Factory<Collection<Object>> factory1 = ConstantFactory.constantFactory(collection0);
675:       MultiValueMap<String, LinkedList<String>> multiValueMap2 = new MultiValueMap<String, LinkedList<String>>((Map<String, ? super Collection<Object>>) multiValueMap0, factory1);
676:       // Undeclared exception!
677:       try { 
678:         multiValueMap2.putAll("QIRJ_", (Collection<LinkedList<String>>) arrayList0);
679:         fail("Expecting exception: UnsupportedOperationException");
680:       
681:       } catch(UnsupportedOperationException e) {
682:          //
683:          // no message in exception (getMessage() returned null)
684:          //
685:          verifyException("java.util.AbstractCollection", e);
686:       }
687:   }
688: 
689:   @Test(timeout = 4000)
690:   public void test43()  throws Throwable  {
691:       ArrayList<String> arrayList0 = new ArrayList<String>();
692:       arrayList0.add("");
693:       MultiValueMap<LinkedList<Integer>, Collection<Object>> multiValueMap0 = new MultiValueMap<LinkedList<Integer>, Collection<Object>>();
694:       Factory<LinkedList<Integer>> factory0 = ExceptionFactory.exceptionFactory();
695:       MultiValueMap<LinkedList<Integer>, Integer> multiValueMap1 = MultiValueMap.multiValueMap((Map<LinkedList<Integer>, ? super LinkedList<Integer>>) multiValueMap0, factory0);
696:       Factory<ArrayList<String>> factory1 = ConstantFactory.constantFactory(arrayList0);
697:       MultiValueMap<LinkedList<Integer>, String> multiValueMap2 = new MultiValueMap<LinkedList<Integer>, String>((Map<LinkedList<Integer>, ? super ArrayList<String>>) multiValueMap1, factory1);
698:       LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
699:       // Undeclared exception!
700:       try { 
701:         multiValueMap2.putAll(linkedList0, (Collection<String>) arrayList0);
702:         fail("Expecting exception: RuntimeException");
703:       
704:       } catch(RuntimeException e) {
705:          //
706:          // ExceptionFactory invoked
707:          //
708:          verifyException("org.apache.commons.collections4.functors.ExceptionFactory", e);
709:       }
710:   }
711: 
712:   @Test(timeout = 4000)
713:   public void test44()  throws Throwable  {
714:       MultiValueMap<String, String> multiValueMap0 = new MultiValueMap<String, String>();
715:       // Undeclared exception!
716:       try { 
717:         multiValueMap0.putAll((Map<? extends String, ?>) null);
718:         fail("Expecting exception: NullPointerException");
719:       
720:       } catch(NullPointerException e) {
721:          //
722:          // no message in exception (getMessage() returned null)
723:          //
724:          verifyException("org.apache.commons.collections4.map.MultiValueMap", e);
725:       }
726:   }
727: 
728:   @Test(timeout = 4000)
729:   public void test45()  throws Throwable  {
730:       LinkedList<String> linkedList0 = new LinkedList<String>();
731:       HashMap<LinkedList<String>, Object> hashMap0 = new HashMap<LinkedList<String>, Object>();
732:       ConstantFactory<String> constantFactory0 = new ConstantFactory<String>("org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory");
733:       hashMap0.put(linkedList0, constantFactory0);
734:       MultiValueMap<LinkedList<String>, AbstractMap.SimpleImmutableEntry<ArrayList<Object>, LinkedList<Object>>> multiValueMap0 = MultiValueMap.multiValueMap((Map<LinkedList<String>, ? super Collection<AbstractMap.SimpleImmutableEntry<ArrayList<Object>, LinkedList<Object>>>>) hashMap0);
735:       ArrayList<ConstantFactory<Object>> arrayList0 = new ArrayList<ConstantFactory<Object>>();
736:       Integer integer0 = new Integer(570);
737:       // Undeclared exception!
738:       try { 
739:         multiValueMap0.removeMapping(arrayList0, integer0);
740:         fail("Expecting exception: ClassCastException");
741:       
742:       } catch(ClassCastException e) {
743:          //
744:          // org.apache.commons.collections4.functors.ConstantFactory cannot be cast to java.util.Collection
745:          //
746:          verifyException("org.apache.commons.collections4.map.MultiValueMap", e);
747:       }
748:   }
749: 
750:   @Test(timeout = 4000)
751:   public void test46()  throws Throwable  {
752:       MultiValueMap<String, String> multiValueMap0 = new MultiValueMap<String, String>();
753:       ArrayList<Object> arrayList0 = new ArrayList<Object>();
754:       HashMap<Object, String> hashMap0 = new HashMap<Object, String>();
755:       hashMap0.put(arrayList0, "");
756:       arrayList0.add((Object) hashMap0);
757:       // Undeclared exception!
758:       try { 
759:         multiValueMap0.removeMapping(arrayList0, arrayList0);
760:         fail("Expecting exception: StackOverflowError");
761:       
762:       } catch(StackOverflowError e) {
763:          //
764:          // no message in exception (getMessage() returned null)
765:          //
766:       }
767:   }
768: 
769:   @Test(timeout = 4000)
770:   public void test47()  throws Throwable  {
771:       MultiValueMap<String, String> multiValueMap0 = new MultiValueMap<String, String>();
772:       LinkedList<AbstractMap.SimpleImmutableEntry<Object, Integer>> linkedList0 = new LinkedList<AbstractMap.SimpleImmutableEntry<Object, Integer>>();
773:       Integer integer0 = new Integer(0);
774:       AbstractMap.SimpleImmutableEntry<Object, Integer> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<Object, Integer>(linkedList0, integer0);
775:       linkedList0.add(abstractMap_SimpleImmutableEntry0);
776:       ConstantFactory<LinkedList<AbstractMap.SimpleImmutableEntry<Object, Integer>>> constantFactory0 = new ConstantFactory<LinkedList<AbstractMap.SimpleImmutableEntry<Object, Integer>>>(linkedList0);
777:       MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Object, Integer>> multiValueMap1 = MultiValueMap.multiValueMap((Map<String, ? super LinkedList<AbstractMap.SimpleImmutableEntry<Object, Integer>>>) multiValueMap0, (Factory<LinkedList<AbstractMap.SimpleImmutableEntry<Object, Integer>>>) constantFactory0);
778:       // Undeclared exception!
779:       try { 
780:         multiValueMap1.size((Object) linkedList0);
781:         fail("Expecting exception: StackOverflowError");
782:       
783:       } catch(StackOverflowError e) {
784:          //
785:          // no message in exception (getMessage() returned null)
786:          //
787:       }
788:   }
789: 
790:   @Test(timeout = 4000)
791:   public void test48()  throws Throwable  {
792:       MultiValueMap<AbstractMap.SimpleEntry<String, Object>, String> multiValueMap0 = new MultiValueMap<AbstractMap.SimpleEntry<String, Object>, String>();
793:       MultiValueMap<AbstractMap.SimpleEntry<String, Object>, AbstractMap.SimpleEntry<HashMap, Object>> multiValueMap1 = MultiValueMap.multiValueMap((Map<AbstractMap.SimpleEntry<String, Object>, ? super Collection<AbstractMap.SimpleEntry<HashMap, Object>>>) multiValueMap0);
794:       multiValueMap0.map = (Map<AbstractMap.SimpleEntry<String, Object>, Object>) multiValueMap1;
795:       // Undeclared exception!
796:       try { 
797:         multiValueMap0.totalSize();
798:         fail("Expecting exception: StackOverflowError");
799:       
800:       } catch(StackOverflowError e) {
801:          //
802:          // no message in exception (getMessage() returned null)
803:          //
804:       }
805:   }
806: 
807:   @Test(timeout = 4000)
808:   public void test49()  throws Throwable  {
809:       MultiValueMap<ConstantFactory<Object>, AbstractMap.SimpleImmutableEntry<Object, String>> multiValueMap0 = new MultiValueMap<ConstantFactory<Object>, AbstractMap.SimpleImmutableEntry<Object, String>>();
810:       Collection<AbstractMap.SimpleImmutableEntry<Object, String>> collection0 = multiValueMap0.createCollection(126);
811:       assertNotNull(collection0);
812:   }
813: 
814:   @Test(timeout = 4000)
815:   public void test50()  throws Throwable  {
816:       MultiValueMap<HashMap<Object, String>, LinkedList<Integer>> multiValueMap0 = new MultiValueMap<HashMap<Object, String>, LinkedList<Integer>>();
817:       Factory<ArrayList<Object>> factory0 = ConstantFactory.constantFactory((ArrayList<Object>) null);
818:       MultiValueMap<HashMap<Object, String>, MultiValueMap<Object, Object>> multiValueMap1 = new MultiValueMap<HashMap<Object, String>, MultiValueMap<Object, Object>>((Map<HashMap<Object, String>, ? super ArrayList<Object>>) multiValueMap0, factory0);
819:       Collection<MultiValueMap<Object, Object>> collection0 = multiValueMap1.createCollection((-4045));
820:       assertNull(collection0);
821:   }
822: 
823:   @Test(timeout = 4000)
824:   public void test51()  throws Throwable  {
825:       HashMap<ArrayList<Collection<ConstantFactory<Object>>>, Object> hashMap0 = new HashMap<ArrayList<Collection<ConstantFactory<Object>>>, Object>();
826:       MultiValueMap<ArrayList<Collection<ConstantFactory<Object>>>, Object> multiValueMap0 = MultiValueMap.multiValueMap((Map<ArrayList<Collection<ConstantFactory<Object>>>, ? super Collection<Object>>) hashMap0);
827:       ArrayList<Collection<ConstantFactory<Object>>> arrayList0 = new ArrayList<Collection<ConstantFactory<Object>>>();
828:       MultiValueMap<ArrayList<Collection<ConstantFactory<Object>>>, MultiValueMap<Object, String>> multiValueMap1 = MultiValueMap.multiValueMap((Map<ArrayList<Collection<ConstantFactory<Object>>>, ? super Collection<MultiValueMap<Object, String>>>) multiValueMap0);
829:       BiFunction<Object, Object, String> biFunction0 = (BiFunction<Object, Object, String>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
830:       multiValueMap0.merge(arrayList0, hashMap0, biFunction0);
831:       LinkedList<String> linkedList0 = new LinkedList<String>();
832:       multiValueMap1.getCollection(linkedList0);
833:       assertEquals(1, multiValueMap1.size());
834:   }
835: 
836:   @Test(timeout = 4000)
837:   public void test52()  throws Throwable  {
838:       HashMap<Integer, Object> hashMap0 = new HashMap<Integer, Object>();
839:       Integer integer0 = new Integer(1);
840:       LinkedList<ConstantFactory<Object>> linkedList0 = new LinkedList<ConstantFactory<Object>>();
841:       hashMap0.put(integer0, linkedList0);
842:       Class<Integer> class0 = Integer.class;
843:       MultiValueMap<Integer, LinkedList<ArrayList>> multiValueMap0 = MultiValueMap.multiValueMap((Map<Integer, ? super LinkedList<LinkedList<ArrayList>>>) hashMap0, (Class<LinkedList<LinkedList<ArrayList>>>) class0);
844:       assertFalse(multiValueMap0.isEmpty());
845:   }
846: 
847:   @Test(timeout = 4000)
848:   public void test53()  throws Throwable  {
849:       HashMap<Integer, String> hashMap0 = new HashMap<Integer, String>();
850:       hashMap0.put((Integer) null, (String) null);
851:       HashMap<Integer, Object> hashMap1 = new HashMap<Integer, Object>(hashMap0);
852:       LinkedList<String> linkedList0 = new LinkedList<String>();
853:       ConstantFactory<LinkedList<String>> constantFactory0 = new ConstantFactory<LinkedList<String>>(linkedList0);
854:       MultiValueMap<Integer, String> multiValueMap0 = MultiValueMap.multiValueMap((Map<Integer, ? super LinkedList<String>>) hashMap1, (Factory<LinkedList<String>>) constantFactory0);
855:       assertFalse(multiValueMap0.isEmpty());
856:   }
857: 
858:   @Test(timeout = 4000)
859:   public void test54()  throws Throwable  {
860:       ArrayList<Object> arrayList0 = new ArrayList<Object>();
861:       MultiValueMap<Collection<Object>, String> multiValueMap0 = new MultiValueMap<Collection<Object>, String>();
862:       multiValueMap0.putIfAbsent(arrayList0, arrayList0);
863:       int int0 = multiValueMap0.totalSize();
864:       assertFalse(multiValueMap0.isEmpty());
865:       assertEquals(1, int0);
866:   }
867: 
868:   @Test(timeout = 4000)
869:   public void test55()  throws Throwable  {
870:       HashMap<AbstractMap.SimpleImmutableEntry<Object, Integer>, Object> hashMap0 = new HashMap<AbstractMap.SimpleImmutableEntry<Object, Integer>, Object>(1);
871:       LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
872:       hashMap0.put((AbstractMap.SimpleImmutableEntry<Object, Integer>) null, linkedList0);
873:       MultiValueMap<AbstractMap.SimpleImmutableEntry<Object, Integer>, Integer> multiValueMap0 = MultiValueMap.multiValueMap((Map<AbstractMap.SimpleImmutableEntry<Object, Integer>, ? super Collection<Integer>>) hashMap0);
874:       multiValueMap0.putAll((Map<? extends AbstractMap.SimpleImmutableEntry<Object, Integer>, ?>) hashMap0);
875:       assertEquals(1, hashMap0.size());
876:   }
877: 
878:   @Test(timeout = 4000)
879:   public void test56()  throws Throwable  {
880:       MultiValueMap<String, String> multiValueMap0 = new MultiValueMap<String, String>();
881:       Set<Map.Entry<String, Object>> set0 = (Set<Map.Entry<String, Object>>)multiValueMap0.entrySet();
882:       assertTrue(set0.isEmpty());
883:   }
884: }
RegularFileObject[/tmp/EvoSuite_100_1634038151126/org/apache/commons/collections4/map/MultiValueMap_99_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Oct 12 11:29:12 GMT 2021
5:  */
6: 
7: package org.apache.commons.collections4.map;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: import static org.evosuite.shaded.org.mockito.Mockito.*;
17: @EvoSuiteClassExclude
18: public class MultiValueMap_99_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
24: 
25: 
26:   @BeforeClass 
27:   public static void initEvoSuiteFramework() { 
28:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.map.MultiValueMap"; 
29:     org.evosuite.runtime.GuiSupport.initialize(); 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
31:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
32:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
33:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
34:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
35:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
36:     setSystemProperties();
37:     initializeClasses();
38:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
39:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
40:   } 
41: 
42:   @Before 
43:   public void initTestCase(){ 
44:     threadStopper.storeCurrentThreads();
45:     threadStopper.startRecordingTime();
46:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
47:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
48:     org.evosuite.runtime.GuiSupport.setHeadless(); 
49:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
50:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
51:   } 
52: 
53:   @After 
54:   public void doneWithTestCase(){ 
55:     threadStopper.killAndJoinClientThreads();
56:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
57:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
58:     resetClasses(); 
59:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
61:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
62:   } 
63: 
64:   public static void setSystemProperties() {
65:  
66:     /*No java.lang.System property to set*/
67:   }
68: 
69:   private static void initializeClasses() {
70:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MultiValueMap_99_tmp__ESTest_scaffolding.class.getClassLoader() ,
71:       "org.apache.commons.collections4.MapIterator",
72:       "org.apache.commons.collections4.iterators.IteratorChain",
73:       "org.apache.commons.collections4.functors.ExceptionFactory",
74:       "org.apache.commons.collections4.map.MultiValueMap$Values",
75:       "org.apache.commons.collections4.map.AbstractMapDecorator",
76:       "org.apache.commons.collections4.Get",
77:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
78:       "org.apache.commons.collections4.CollectionUtils",
79:       "org.apache.commons.collections4.map.MultiValueMap",
80:       "org.apache.commons.collections4.FunctorException",
81:       "org.apache.commons.collections4.map.AbstractIterableMap",
82:       "org.apache.commons.collections4.Factory",
83:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
84:       "org.apache.commons.collections4.Unmodifiable",
85:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
86:       "org.apache.commons.collections4.Transformer",
87:       "org.apache.commons.collections4.map.MultiValueMap$1",
88:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
89:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
90:       "org.apache.commons.collections4.ResettableIterator",
91:       "org.apache.commons.collections4.iterators.EmptyIterator",
92:       "org.apache.commons.collections4.functors.ConstantFactory",
93:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
94:       "org.apache.commons.collections4.Put",
95:       "org.apache.commons.collections4.MultiMap",
96:       "org.apache.commons.collections4.IterableMap",
97:       "org.apache.commons.collections4.IterableGet"
98:     );
99:   } 
100:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
101:     mock(Class.forName("java.util.function.BiFunction", false, MultiValueMap_99_tmp__ESTest_scaffolding.class.getClassLoader()));
102:   }
103: 
104:   private static void resetClasses() {
105:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MultiValueMap_99_tmp__ESTest_scaffolding.class.getClassLoader()); 
106: 
107:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
108:       "org.apache.commons.collections4.map.AbstractIterableMap",
109:       "org.apache.commons.collections4.map.AbstractMapDecorator",
110:       "org.apache.commons.collections4.map.MultiValueMap",
111:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
112:       "org.apache.commons.collections4.map.MultiValueMap$Values",
113:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
114:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
115:       "org.apache.commons.collections4.map.MultiValueMap$1",
116:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
117:       "org.apache.commons.collections4.iterators.EmptyIterator",
118:       "org.apache.commons.collections4.iterators.EmptyListIterator",
119:       "org.apache.commons.collections4.iterators.EmptyOrderedIterator",
120:       "org.apache.commons.collections4.iterators.AbstractEmptyMapIterator",
121:       "org.apache.commons.collections4.iterators.EmptyMapIterator",
122:       "org.apache.commons.collections4.iterators.EmptyOrderedMapIterator",
123:       "org.apache.commons.collections4.functors.ExceptionFactory",
124:       "org.apache.commons.collections4.functors.ConstantFactory",
125:       "org.apache.commons.collections4.iterators.IteratorChain",
126:       "org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter",
127:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
128:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
129:       "org.apache.commons.collections4.CollectionUtils",
130:       "org.apache.commons.collections4.FunctorException",
131:       "org.apache.commons.collections4.functors.InstantiateFactory"
132:     );
133:   }
134: }

[MASTER] 11:29:15.056 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_101_1634038152401/org/apache/commons/collections4/map/MultiValueMap_100_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_101_1634038152401/org/apache/commons/collections4/map/MultiValueMap_100_tmp__ESTest_scaffolding.java]]
[MASTER] 11:29:15.056 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Collections-27/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 11:29:15.056 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 11:29:15.057 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.lang.Class<java.lang.Integer> cannot be converted to java.lang.Class<java.util.LinkedList<java.util.LinkedList<java.util.ArrayList>>>: 79
[MASTER] 11:29:15.066 [logback-2] ERROR JUnitAnalyzer - Diagnostic: constructor MultiValueMap in class org.apache.commons.collections4.map.MultiValueMap<K,V> cannot be applied to given types;
  required: java.util.Map<java.util.HashMap<java.lang.Object,java.lang.String>,? super C>,org.apache.commons.collections4.Factory<C>
  found: java.util.Map<java.util.HashMap<java.lang.Object,java.lang.String>,capture#1 of ? super java.util.ArrayList<java.lang.Object>>,org.apache.commons.collections4.Factory<java.util.ArrayList<java.lang.Object>>
  reason: inference variable C has incompatible bounds
    equality constraints: java.util.ArrayList<java.lang.Object>
    upper bounds: java.util.ArrayList<java.lang.Object>,java.util.Collection<org.apache.commons.collections4.map.MultiValueMap<java.lang.Object,java.lang.Object>>: 100
[MASTER] 11:29:15.067 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: inferred type does not conform to equality constraint(s)
    inferred: java.lang.Object
    equality constraints(s): java.lang.Object,org.apache.commons.collections4.functors.ConstantFactory<java.lang.Object>: 238
[MASTER] 11:29:15.073 [logback-2] ERROR JUnitAnalyzer - Diagnostic: constructor MultiValueMap in class org.apache.commons.collections4.map.MultiValueMap<K,V> cannot be applied to given types;
  required: java.util.Map<java.lang.String,? super C>,org.apache.commons.collections4.Factory<C>
  found: java.util.Map<java.lang.String,capture#2 of ? super java.util.Collection<java.lang.Object>>,org.apache.commons.collections4.Factory<java.util.Collection<java.lang.Object>>
  reason: inference variable C has incompatible bounds
    equality constraints: java.util.Collection<java.lang.Object>
    upper bounds: java.util.Collection<java.lang.Object>,java.util.Collection<java.util.LinkedList<java.lang.String>>: 241
[MASTER] 11:29:15.073 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: inferred type does not conform to equality constraint(s)
    inferred: java.lang.String
    equality constraints(s): java.lang.String,org.apache.commons.collections4.functors.ConstantFactory<java.lang.Object>: 262
[MASTER] 11:29:15.075 [logback-2] ERROR JUnitAnalyzer - Diagnostic: constructor MultiValueMap in class org.apache.commons.collections4.map.MultiValueMap<K,V> cannot be applied to given types;
  required: java.util.Map<java.lang.String,? super C>,org.apache.commons.collections4.Factory<C>
  found: java.util.Map<java.lang.String,capture#3 of ? super java.util.Collection<java.lang.String>>,org.apache.commons.collections4.Factory<java.util.Collection<java.lang.String>>
  reason: inference variable C has incompatible bounds
    equality constraints: java.util.Collection<java.lang.String>
    upper bounds: java.util.Collection<java.lang.String>,java.util.Collection<java.lang.Integer>: 305
[MASTER] 11:29:15.075 [logback-2] ERROR JUnitAnalyzer - Diagnostic: constructor MultiValueMap in class org.apache.commons.collections4.map.MultiValueMap<K,V> cannot be applied to given types;
  required: java.util.Map<java.lang.Integer,? super C>,org.apache.commons.collections4.Factory<C>
  found: java.util.Map<java.lang.Integer,capture#4 of ? super java.util.LinkedList<java.lang.Object>>,org.apache.commons.collections4.Factory<java.util.LinkedList<java.lang.Object>>
  reason: inference variable C has incompatible bounds
    equality constraints: java.util.LinkedList<java.lang.Object>
    upper bounds: java.util.LinkedList<java.lang.Object>,java.util.Collection<java.util.ArrayList<java.lang.Object>>: 307
[MASTER] 11:29:15.077 [logback-2] ERROR JUnitAnalyzer - Diagnostic: constructor MultiValueMap in class org.apache.commons.collections4.map.MultiValueMap<K,V> cannot be applied to given types;
  required: java.util.Map<java.util.Collection<java.lang.String>,? super C>,org.apache.commons.collections4.Factory<C>
  found: java.util.Map<java.util.Collection<java.lang.String>,capture#5 of ? super java.util.LinkedList<java.lang.String>>,org.apache.commons.collections4.Factory<java.util.LinkedList<java.lang.String>>
  reason: inference variable C has incompatible bounds
    equality constraints: java.util.LinkedList<java.lang.String>
    upper bounds: java.util.LinkedList<java.lang.String>,java.util.Collection<java.lang.Object>: 348
[MASTER] 11:29:15.077 [logback-2] ERROR JUnitAnalyzer - Diagnostic: constructor MultiValueMap in class org.apache.commons.collections4.map.MultiValueMap<K,V> cannot be applied to given types;
  required: java.util.Map<java.util.Collection<java.lang.String>,? super C>,org.apache.commons.collections4.Factory<C>
  found: java.util.Map<java.util.Collection<java.lang.String>,capture#6 of ? super java.util.LinkedList<java.lang.String>>,org.apache.commons.collections4.Factory<java.util.LinkedList<java.lang.String>>
  reason: inference variable C has incompatible bounds
    equality constraints: java.util.LinkedList<java.lang.String>
    upper bounds: java.util.LinkedList<java.lang.String>,java.util.Collection<java.util.AbstractMap.SimpleImmutableEntry<java.lang.String,java.lang.Integer>>: 388
[MASTER] 11:29:15.077 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.lang.Class<java.lang.Integer> cannot be converted to java.lang.Class<java.util.LinkedList<java.util.AbstractMap.SimpleEntry<java.util.ArrayList,java.lang.Integer>>>: 440
[MASTER] 11:29:15.077 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_101_1634038152401/org/apache/commons/collections4/map/MultiValueMap_100_tmp__ESTest.java uses or overrides a deprecated API.: -1
[MASTER] 11:29:15.077 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:deprecation for details.: -1
[MASTER] 11:29:15.077 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_101_1634038152401/org/apache/commons/collections4/map/MultiValueMap_100_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 11:29:15.077 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 11:29:15.077 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Some messages have been simplified; recompile with -Xdiags:verbose to get full output: -1
[MASTER] 11:29:15.092 [logback-1] WARN  JUnitAnalyzer - Failed to compile the test cases 
* Writing tests to file
* Writing JUnit test case 'MultiValueMap_ESTest' to results/Collections-27/org.apache.commons.collections4.map.MultiValueMap/BBC-F0-opt-20/tests/9
[MASTER] 11:29:15.091 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_101_1634038152401/org/apache/commons/collections4/map/MultiValueMap_100_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Oct 12 11:29:12 GMT 2021
4:  */
5: 
6: package org.apache.commons.collections4.map;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import static org.evosuite.runtime.EvoAssertions.*;
12: import java.util.AbstractMap;
13: import java.util.ArrayList;
14: import java.util.Collection;
15: import java.util.HashMap;
16: import java.util.Iterator;
17: import java.util.LinkedList;
18: import java.util.Map;
19: import java.util.Set;
20: import java.util.function.BiFunction;
21: import java.util.function.UnaryOperator;
22: import org.apache.commons.collections4.Factory;
23: import org.apache.commons.collections4.functors.ConstantFactory;
24: import org.apache.commons.collections4.functors.ExceptionFactory;
25: import org.apache.commons.collections4.map.MultiValueMap;
26: import org.evosuite.runtime.EvoRunner;
27: import org.evosuite.runtime.EvoRunnerParameters;
28: import org.evosuite.runtime.ViolatedAssumptionAnswer;
29: import org.junit.runner.RunWith;
30: 
31: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
32: public class MultiValueMap_100_tmp__ESTest extends MultiValueMap_100_tmp__ESTest_scaffolding {
33: 
34:   @Test(timeout = 4000)
35:   public void test00()  throws Throwable  {
36:       MultiValueMap<String, String> multiValueMap0 = new MultiValueMap<String, String>();
37:       Set<Map.Entry<String, Object>> set0 = (Set<Map.Entry<String, Object>>)multiValueMap0.entrySet();
38:       assertTrue(set0.isEmpty());
39:   }
40: 
41:   @Test(timeout = 4000)
42:   public void test01()  throws Throwable  {
43:       HashMap<AbstractMap.SimpleImmutableEntry<Object, Integer>, Object> hashMap0 = new HashMap<AbstractMap.SimpleImmutableEntry<Object, Integer>, Object>(1);
44:       LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
45:       hashMap0.put((AbstractMap.SimpleImmutableEntry<Object, Integer>) null, linkedList0);
46:       MultiValueMap<AbstractMap.SimpleImmutableEntry<Object, Integer>, Integer> multiValueMap0 = MultiValueMap.multiValueMap((Map<AbstractMap.SimpleImmutableEntry<Object, Integer>, ? super Collection<Integer>>) hashMap0);
47:       multiValueMap0.putAll((Map<? extends AbstractMap.SimpleImmutableEntry<Object, Integer>, ?>) hashMap0);
48:       assertEquals(1, hashMap0.size());
49:   }
50: 
51:   @Test(timeout = 4000)
52:   public void test02()  throws Throwable  {
53:       ArrayList<Object> arrayList0 = new ArrayList<Object>();
54:       MultiValueMap<Collection<Object>, String> multiValueMap0 = new MultiValueMap<Collection<Object>, String>();
55:       multiValueMap0.putIfAbsent(arrayList0, arrayList0);
56:       int int0 = multiValueMap0.totalSize();
57:       assertFalse(multiValueMap0.isEmpty());
58:       assertEquals(1, int0);
59:   }
60: 
61:   @Test(timeout = 4000)
62:   public void test03()  throws Throwable  {
63:       HashMap<Integer, String> hashMap0 = new HashMap<Integer, String>();
64:       hashMap0.put((Integer) null, (String) null);
65:       HashMap<Integer, Object> hashMap1 = new HashMap<Integer, Object>(hashMap0);
66:       LinkedList<String> linkedList0 = new LinkedList<String>();
67:       ConstantFactory<LinkedList<String>> constantFactory0 = new ConstantFactory<LinkedList<String>>(linkedList0);
68:       MultiValueMap<Integer, String> multiValueMap0 = MultiValueMap.multiValueMap((Map<Integer, ? super LinkedList<String>>) hashMap1, (Factory<LinkedList<String>>) constantFactory0);
69:       assertFalse(multiValueMap0.isEmpty());
70:   }
71: 
72:   @Test(timeout = 4000)
73:   public void test04()  throws Throwable  {
74:       HashMap<Integer, Object> hashMap0 = new HashMap<Integer, Object>();
75:       Integer integer0 = new Integer(1);
76:       LinkedList<ConstantFactory<Object>> linkedList0 = new LinkedList<ConstantFactory<Object>>();
77:       hashMap0.put(integer0, linkedList0);
78:       Class<Integer> class0 = Integer.class;
79:       MultiValueMap<Integer, LinkedList<ArrayList>> multiValueMap0 = MultiValueMap.multiValueMap((Map<Integer, ? super LinkedList<LinkedList<ArrayList>>>) hashMap0, (Class<LinkedList<LinkedList<ArrayList>>>) class0);
80:       assertFalse(multiValueMap0.isEmpty());
81:   }
82: 
83:   @Test(timeout = 4000)
84:   public void test05()  throws Throwable  {
85:       HashMap<ArrayList<Collection<ConstantFactory<Object>>>, Object> hashMap0 = new HashMap<ArrayList<Collection<ConstantFactory<Object>>>, Object>();
86:       MultiValueMap<ArrayList<Collection<ConstantFactory<Object>>>, Object> multiValueMap0 = MultiValueMap.multiValueMap((Map<ArrayList<Collection<ConstantFactory<Object>>>, ? super Collection<Object>>) hashMap0);
87:       ArrayList<Collection<ConstantFactory<Object>>> arrayList0 = new ArrayList<Collection<ConstantFactory<Object>>>();
88:       MultiValueMap<ArrayList<Collection<ConstantFactory<Object>>>, MultiValueMap<Object, String>> multiValueMap1 = MultiValueMap.multiValueMap((Map<ArrayList<Collection<ConstantFactory<Object>>>, ? super Collection<MultiValueMap<Object, String>>>) multiValueMap0);
89:       BiFunction<Object, Object, String> biFunction0 = (BiFunction<Object, Object, String>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
90:       multiValueMap0.merge(arrayList0, hashMap0, biFunction0);
91:       LinkedList<String> linkedList0 = new LinkedList<String>();
92:       multiValueMap1.getCollection(linkedList0);
93:       assertEquals(1, multiValueMap1.size());
94:   }
95: 
96:   @Test(timeout = 4000)
97:   public void test06()  throws Throwable  {
98:       MultiValueMap<HashMap<Object, String>, LinkedList<Integer>> multiValueMap0 = new MultiValueMap<HashMap<Object, String>, LinkedList<Integer>>();
99:       Factory<ArrayList<Object>> factory0 = ConstantFactory.constantFactory((ArrayList<Object>) null);
100:       MultiValueMap<HashMap<Object, String>, MultiValueMap<Object, Object>> multiValueMap1 = new MultiValueMap<HashMap<Object, String>, MultiValueMap<Object, Object>>((Map<HashMap<Object, String>, ? super ArrayList<Object>>) multiValueMap0, factory0);
101:       Collection<MultiValueMap<Object, Object>> collection0 = multiValueMap1.createCollection((-4045));
102:       assertNull(collection0);
103:   }
104: 
105:   @Test(timeout = 4000)
106:   public void test07()  throws Throwable  {
107:       MultiValueMap<ConstantFactory<Object>, AbstractMap.SimpleImmutableEntry<Object, String>> multiValueMap0 = new MultiValueMap<ConstantFactory<Object>, AbstractMap.SimpleImmutableEntry<Object, String>>();
108:       Collection<AbstractMap.SimpleImmutableEntry<Object, String>> collection0 = multiValueMap0.createCollection(126);
109:       assertNotNull(collection0);
110:   }
111: 
112:   @Test(timeout = 4000)
113:   public void test08()  throws Throwable  {
114:       MultiValueMap<AbstractMap.SimpleEntry<String, Object>, String> multiValueMap0 = new MultiValueMap<AbstractMap.SimpleEntry<String, Object>, String>();
115:       MultiValueMap<AbstractMap.SimpleEntry<String, Object>, AbstractMap.SimpleEntry<HashMap, Object>> multiValueMap1 = MultiValueMap.multiValueMap((Map<AbstractMap.SimpleEntry<String, Object>, ? super Collection<AbstractMap.SimpleEntry<HashMap, Object>>>) multiValueMap0);
116:       multiValueMap0.map = (Map<AbstractMap.SimpleEntry<String, Object>, Object>) multiValueMap1;
117:       // Undeclared exception!
118:       try { 
119:         multiValueMap0.totalSize();
120:         fail("Expecting exception: StackOverflowError");
121:       
122:       } catch(StackOverflowError e) {
123:          //
124:          // no message in exception (getMessage() returned null)
125:          //
126:       }
127:   }
128: 
129:   @Test(timeout = 4000)
130:   public void test09()  throws Throwable  {
131:       MultiValueMap<String, String> multiValueMap0 = new MultiValueMap<String, String>();
132:       LinkedList<AbstractMap.SimpleImmutableEntry<Object, Integer>> linkedList0 = new LinkedList<AbstractMap.SimpleImmutableEntry<Object, Integer>>();
133:       Integer integer0 = new Integer(0);
134:       AbstractMap.SimpleImmutableEntry<Object, Integer> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<Object, Integer>(linkedList0, integer0);
135:       linkedList0.add(abstractMap_SimpleImmutableEntry0);
136:       ConstantFactory<LinkedList<AbstractMap.SimpleImmutableEntry<Object, Integer>>> constantFactory0 = new ConstantFactory<LinkedList<AbstractMap.SimpleImmutableEntry<Object, Integer>>>(linkedList0);
137:       MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Object, Integer>> multiValueMap1 = MultiValueMap.multiValueMap((Map<String, ? super LinkedList<AbstractMap.SimpleImmutableEntry<Object, Integer>>>) multiValueMap0, (Factory<LinkedList<AbstractMap.SimpleImmutableEntry<Object, Integer>>>) constantFactory0);
138:       // Undeclared exception!
139:       try { 
140:         multiValueMap1.size((Object) linkedList0);
141:         fail("Expecting exception: StackOverflowError");
142:       
143:       } catch(StackOverflowError e) {
144:          //
145:          // no message in exception (getMessage() returned null)
146:          //
147:       }
148:   }
149: 
150:   @Test(timeout = 4000)
151:   public void test10()  throws Throwable  {
152:       MultiValueMap<String, String> multiValueMap0 = new MultiValueMap<String, String>();
153:       ArrayList<Object> arrayList0 = new ArrayList<Object>();
154:       HashMap<Object, String> hashMap0 = new HashMap<Object, String>();
155:       hashMap0.put(arrayList0, "");
156:       arrayList0.add((Object) hashMap0);
157:       // Undeclared exception!
158:       try { 
159:         multiValueMap0.removeMapping(arrayList0, arrayList0);
160:         fail("Expecting exception: StackOverflowError");
161:       
162:       } catch(StackOverflowError e) {
163:          //
164:          // no message in exception (getMessage() returned null)
165:          //
166:       }
167:   }
168: 
169:   @Test(timeout = 4000)
170:   public void test11()  throws Throwable  {
171:       LinkedList<String> linkedList0 = new LinkedList<String>();
172:       HashMap<LinkedList<String>, Object> hashMap0 = new HashMap<LinkedList<String>, Object>();
173:       ConstantFactory<String> constantFactory0 = new ConstantFactory<String>("org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory");
174:       hashMap0.put(linkedList0, constantFactory0);
175:       MultiValueMap<LinkedList<String>, AbstractMap.SimpleImmutableEntry<ArrayList<Object>, LinkedList<Object>>> multiValueMap0 = MultiValueMap.multiValueMap((Map<LinkedList<String>, ? super Collection<AbstractMap.SimpleImmutableEntry<ArrayList<Object>, LinkedList<Object>>>>) hashMap0);
176:       ArrayList<ConstantFactory<Object>> arrayList0 = new ArrayList<ConstantFactory<Object>>();
177:       Integer integer0 = new Integer(570);
178:       // Undeclared exception!
179:       try { 
180:         multiValueMap0.removeMapping(arrayList0, integer0);
181:         fail("Expecting exception: ClassCastException");
182:       
183:       } catch(ClassCastException e) {
184:          //
185:          // org.apache.commons.collections4.functors.ConstantFactory cannot be cast to java.util.Collection
186:          //
187:          verifyException("org.apache.commons.collections4.map.MultiValueMap", e);
188:       }
189:   }
190: 
191:   @Test(timeout = 4000)
192:   public void test12()  throws Throwable  {
193:       MultiValueMap<String, String> multiValueMap0 = new MultiValueMap<String, String>();
194:       // Undeclared exception!
195:       try { 
196:         multiValueMap0.putAll((Map<? extends String, ?>) null);
197:         fail("Expecting exception: NullPointerException");
198:       
199:       } catch(NullPointerException e) {
200:          //
201:          // no message in exception (getMessage() returned null)
202:          //
203:          verifyException("org.apache.commons.collections4.map.MultiValueMap", e);
204:       }
205:   }
206: 
207:   @Test(timeout = 4000)
208:   public void test13()  throws Throwable  {
209:       ArrayList<String> arrayList0 = new ArrayList<String>();
210:       arrayList0.add("");
211:       MultiValueMap<LinkedList<Integer>, Collection<Object>> multiValueMap0 = new MultiValueMap<LinkedList<Integer>, Collection<Object>>();
212:       Factory<LinkedList<Integer>> factory0 = ExceptionFactory.exceptionFactory();
213:       MultiValueMap<LinkedList<Integer>, Integer> multiValueMap1 = MultiValueMap.multiValueMap((Map<LinkedList<Integer>, ? super LinkedList<Integer>>) multiValueMap0, factory0);
214:       Factory<ArrayList<String>> factory1 = ConstantFactory.constantFactory(arrayList0);
215:       MultiValueMap<LinkedList<Integer>, String> multiValueMap2 = new MultiValueMap<LinkedList<Integer>, String>((Map<LinkedList<Integer>, ? super ArrayList<String>>) multiValueMap1, factory1);
216:       LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
217:       // Undeclared exception!
218:       try { 
219:         multiValueMap2.putAll(linkedList0, (Collection<String>) arrayList0);
220:         fail("Expecting exception: RuntimeException");
221:       
222:       } catch(RuntimeException e) {
223:          //
224:          // ExceptionFactory invoked
225:          //
226:          verifyException("org.apache.commons.collections4.functors.ExceptionFactory", e);
227:       }
228:   }
229: 
230:   @Test(timeout = 4000)
231:   public void test14()  throws Throwable  {
232:       MultiValueMap<String, LinkedList<String>> multiValueMap0 = new MultiValueMap<String, LinkedList<String>>();
233:       ArrayList<LinkedList<String>> arrayList0 = new ArrayList<LinkedList<String>>();
234:       LinkedList<String> linkedList0 = new LinkedList<String>();
235:       arrayList0.add(linkedList0);
236:       HashMap<Collection<Object>, Collection<ConstantFactory<Object>>> hashMap0 = new HashMap<Collection<Object>, Collection<ConstantFactory<Object>>>(4373, 1917.0945F);
237:       Factory<Collection<ConstantFactory<Object>>> factory0 = ExceptionFactory.exceptionFactory();
238:       MultiValueMap<Collection<Object>, Object> multiValueMap1 = MultiValueMap.multiValueMap((Map<Collection<Object>, ? super Collection<ConstantFactory<Object>>>) hashMap0, factory0);
239:       Collection<Object> collection0 = multiValueMap1.values();
240:       Factory<Collection<Object>> factory1 = ConstantFactory.constantFactory(collection0);
241:       MultiValueMap<String, LinkedList<String>> multiValueMap2 = new MultiValueMap<String, LinkedList<String>>((Map<String, ? super Collection<Object>>) multiValueMap0, factory1);
242:       // Undeclared exception!
243:       try { 
244:         multiValueMap2.putAll("QIRJ_", (Collection<LinkedList<String>>) arrayList0);
245:         fail("Expecting exception: UnsupportedOperationException");
246:       
247:       } catch(UnsupportedOperationException e) {
248:          //
249:          // no message in exception (getMessage() returned null)
250:          //
251:          verifyException("java.util.AbstractCollection", e);
252:       }
253:   }
254: 
255:   @Test(timeout = 4000)
256:   public void test15()  throws Throwable  {
257:       ArrayList<String> arrayList0 = new ArrayList<String>();
258:       arrayList0.add("C)G/?&");
259:       LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
260:       HashMap<LinkedList<Integer>, Collection<ConstantFactory<Object>>> hashMap0 = new HashMap<LinkedList<Integer>, Collection<ConstantFactory<Object>>>();
261:       Factory<Collection<ConstantFactory<Object>>> factory0 = ConstantFactory.constantFactory((Collection<ConstantFactory<Object>>) null);
262:       MultiValueMap<LinkedList<Integer>, String> multiValueMap0 = MultiValueMap.multiValueMap((Map<LinkedList<Integer>, ? super Collection<ConstantFactory<Object>>>) hashMap0, factory0);
263:       // Undeclared exception!
264:       try { 
265:         multiValueMap0.putAll(linkedList0, (Collection<String>) arrayList0);
266:         fail("Expecting exception: NullPointerException");
267:       
268:       } catch(NullPointerException e) {
269:          //
270:          // no message in exception (getMessage() returned null)
271:          //
272:          verifyException("org.apache.commons.collections4.map.MultiValueMap", e);
273:       }
274:   }
275: 
276:   @Test(timeout = 4000)
277:   public void test16()  throws Throwable  {
278:       ArrayList<String> arrayList0 = new ArrayList<String>();
279:       arrayList0.add("Map must not be null.");
280:       LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
281:       HashMap<LinkedList<Integer>, Object> hashMap0 = new HashMap<LinkedList<Integer>, Object>();
282:       hashMap0.put(linkedList0, "Map must not be null.");
283:       MultiValueMap<LinkedList<Integer>, String> multiValueMap0 = MultiValueMap.multiValueMap((Map<LinkedList<Integer>, ? super Collection<String>>) hashMap0);
284:       // Undeclared exception!
285:       try { 
286:         multiValueMap0.putAll(linkedList0, (Collection<String>) arrayList0);
287:         fail("Expecting exception: ClassCastException");
288:       
289:       } catch(ClassCastException e) {
290:          //
291:          // java.lang.String cannot be cast to java.util.Collection
292:          //
293:          verifyException("org.apache.commons.collections4.map.MultiValueMap", e);
294:       }
295:   }
296: 
297:   @Test(timeout = 4000)
298:   public void test17()  throws Throwable  {
299:       MultiValueMap<Integer, Integer> multiValueMap0 = new MultiValueMap<Integer, Integer>();
300:       Factory<LinkedList<Object>> factory0 = ExceptionFactory.exceptionFactory();
301:       MultiValueMap<Integer, Object> multiValueMap1 = MultiValueMap.multiValueMap((Map<Integer, ? super LinkedList<Object>>) multiValueMap0, factory0);
302:       LinkedList<String> linkedList0 = new LinkedList<String>();
303:       MultiValueMap<String, Object> multiValueMap2 = new MultiValueMap<String, Object>();
304:       ConstantFactory<Collection<String>> constantFactory0 = new ConstantFactory<Collection<String>>(linkedList0);
305:       MultiValueMap<String, Integer> multiValueMap3 = new MultiValueMap<String, Integer>((Map<String, ? super Collection<String>>) multiValueMap2, (Factory<Collection<String>>) constantFactory0);
306:       Object object0 = multiValueMap3.putIfAbsent("org.apache.commons.collections4.map.MultiValueMap$ValuesIterator", multiValueMap1);
307:       MultiValueMap<Integer, ArrayList<Object>> multiValueMap4 = new MultiValueMap<Integer, ArrayList<Object>>((Map<Integer, ? super LinkedList<Object>>) multiValueMap0, factory0);
308:       Integer integer0 = new Integer(2882);
309:       // Undeclared exception!
310:       try { 
311:         multiValueMap4.put(integer0, object0);
312:         fail("Expecting exception: RuntimeException");
313:       
314:       } catch(RuntimeException e) {
315:          //
316:          // ExceptionFactory invoked
317:          //
318:          verifyException("org.apache.commons.collections4.functors.ExceptionFactory", e);
319:       }
320:   }
321: 
322:   @Test(timeout = 4000)
323:   public void test18()  throws Throwable  {
324:       MultiValueMap<String, LinkedList<String>> multiValueMap0 = new MultiValueMap<String, LinkedList<String>>();
325:       MultiValueMap<LinkedList<Object>, Object> multiValueMap1 = new MultiValueMap<LinkedList<Object>, Object>();
326:       Collection<Object> collection0 = multiValueMap1.values();
327:       Factory<Collection<Object>> factory0 = ConstantFactory.constantFactory(collection0);
328:       MultiValueMap<String, Object> multiValueMap2 = new MultiValueMap<String, Object>((Map<String, ? super Collection<Object>>) multiValueMap0, factory0);
329:       LinkedList<ConstantFactory<Object>> linkedList0 = new LinkedList<ConstantFactory<Object>>();
330:       // Undeclared exception!
331:       try { 
332:         multiValueMap2.put(")eo", linkedList0);
333:         fail("Expecting exception: UnsupportedOperationException");
334:       
335:       } catch(UnsupportedOperationException e) {
336:          //
337:          // no message in exception (getMessage() returned null)
338:          //
339:          verifyException("java.util.AbstractCollection", e);
340:       }
341:   }
342: 
343:   @Test(timeout = 4000)
344:   public void test19()  throws Throwable  {
345:       MultiValueMap<Collection<String>, AbstractMap.SimpleImmutableEntry<String, Integer>> multiValueMap0 = new MultiValueMap<Collection<String>, AbstractMap.SimpleImmutableEntry<String, Integer>>();
346:       LinkedList<String> linkedList0 = new LinkedList<String>();
347:       Factory<LinkedList<String>> factory0 = ConstantFactory.constantFactory(linkedList0);
348:       MultiValueMap<Collection<String>, Object> multiValueMap1 = new MultiValueMap<Collection<String>, Object>((Map<Collection<String>, ? super LinkedList<String>>) multiValueMap0, factory0);
349:       multiValueMap0.map = (Map<Collection<String>, Object>) multiValueMap1;
350:       // Undeclared exception!
351:       try { 
352:         multiValueMap0.put(linkedList0, linkedList0);
353:         fail("Expecting exception: StackOverflowError");
354:       
355:       } catch(StackOverflowError e) {
356:          //
357:          // no message in exception (getMessage() returned null)
358:          //
359:       }
360:   }
361: 
362:   @Test(timeout = 4000)
363:   public void test20()  throws Throwable  {
364:       HashMap<HashMap<Object, String>, Object> hashMap0 = new HashMap<HashMap<Object, String>, Object>(2, 2);
365:       Factory<Collection<ArrayList<String>>> factory0 = ConstantFactory.constantFactory((Collection<ArrayList<String>>) null);
366:       MultiValueMap<HashMap<Object, String>, ArrayList<String>> multiValueMap0 = MultiValueMap.multiValueMap((Map<HashMap<Object, String>, ? super Collection<ArrayList<String>>>) hashMap0, factory0);
367:       HashMap<Object, String> hashMap1 = new HashMap<Object, String>();
368:       // Undeclared exception!
369:       try { 
370:         multiValueMap0.put(hashMap1, (Object) null);
371:         fail("Expecting exception: NullPointerException");
372:       
373:       } catch(NullPointerException e) {
374:          //
375:          // no message in exception (getMessage() returned null)
376:          //
377:          verifyException("org.apache.commons.collections4.map.MultiValueMap", e);
378:       }
379:   }
380: 
381:   @Test(timeout = 4000)
382:   public void test21()  throws Throwable  {
383:       ArrayList<Object> arrayList0 = new ArrayList<Object>();
384:       LinkedList<String> linkedList0 = new LinkedList<String>();
385:       HashMap<Collection<String>, Object> hashMap0 = new HashMap<Collection<String>, Object>();
386:       Factory<LinkedList<String>> factory0 = ExceptionFactory.exceptionFactory();
387:       hashMap0.put(linkedList0, "");
388:       MultiValueMap<Collection<String>, AbstractMap.SimpleImmutableEntry<String, Integer>> multiValueMap0 = new MultiValueMap<Collection<String>, AbstractMap.SimpleImmutableEntry<String, Integer>>((Map<Collection<String>, ? super LinkedList<String>>) hashMap0, factory0);
389:       // Undeclared exception!
390:       try { 
391:         multiValueMap0.put(linkedList0, arrayList0);
392:         fail("Expecting exception: ClassCastException");
393:       
394:       } catch(ClassCastException e) {
395:          //
396:          // java.lang.String cannot be cast to java.util.Collection
397:          //
398:          verifyException("org.apache.commons.collections4.map.MultiValueMap", e);
399:       }
400:   }
401: 
402:   @Test(timeout = 4000)
403:   public void test22()  throws Throwable  {
404:       LinkedList<String> linkedList0 = new LinkedList<String>();
405:       Factory<Collection<String>> factory0 = ConstantFactory.constantFactory((Collection<String>) linkedList0);
406:       // Undeclared exception!
407:       try { 
408:         MultiValueMap.multiValueMap((Map<Object, ? super Collection<String>>) null, factory0);
409:         fail("Expecting exception: NullPointerException");
410:       
411:       } catch(NullPointerException e) {
412:          //
413:          // Map must not be null.
414:          //
415:          verifyException("org.apache.commons.collections4.map.AbstractMapDecorator", e);
416:       }
417:   }
418: 
419:   @Test(timeout = 4000)
420:   public void test23()  throws Throwable  {
421:       MultiValueMap<ArrayList<String>, Object> multiValueMap0 = new MultiValueMap<ArrayList<String>, Object>();
422:       // Undeclared exception!
423:       try { 
424:         MultiValueMap.multiValueMap((Map<ArrayList<String>, ? super LinkedList<String>>) multiValueMap0, (Factory<LinkedList<String>>) null);
425:         fail("Expecting exception: IllegalArgumentException");
426:       
427:       } catch(IllegalArgumentException e) {
428:          //
429:          // The factory must not be null
430:          //
431:          verifyException("org.apache.commons.collections4.map.MultiValueMap", e);
432:       }
433:   }
434: 
435:   @Test(timeout = 4000)
436:   public void test24()  throws Throwable  {
437:       Class<Integer> class0 = Integer.class;
438:       // Undeclared exception!
439:       try { 
440:         MultiValueMap.multiValueMap((Map<Integer, ? super LinkedList<AbstractMap.SimpleEntry<ArrayList, Integer>>>) null, (Class<LinkedList<AbstractMap.SimpleEntry<ArrayList, Integer>>>) class0);
441:         fail("Expecting exception: NullPointerException");
442:       
443:       } catch(NullPointerException e) {
444:          //
445:          // Map must not be null.
446:          //
447:          verifyException("org.apache.commons.collections4.map.AbstractMapDecorator", e);
448:       }
449:   }
450: 
451:   @Test(timeout = 4000)
452:   public void test25()  throws Throwable  {
453:       // Undeclared exception!
454:       try { 
455:         MultiValueMap.multiValueMap((Map<LinkedList<Object>, ? super Collection<String>>) null);
456:         fail("Expecting exception: NullPointerException");
457:       
458:       } catch(NullPointerException e) {
459:          //
460:          // Map must not be null.
461:          //
462:          verifyException("org.apache.commons.collections4.map.AbstractMapDecorator", e);
463:       }
464:   }
465: 
466:   @Test(timeout = 4000)
467:   public void test26()  throws Throwable  {
468:       MultiValueMap<LinkedList<Object>, Collection<ConstantFactory<Object>>> multiValueMap0 = new MultiValueMap<LinkedList<Object>, Collection<ConstantFactory<Object>>>();
469:       multiValueMap0.map = null;
470:       // Undeclared exception!
471:       try { 
472:         multiValueMap0.iterator((Object) null);
473:         fail("Expecting exception: NullPointerException");
474:       
475:       } catch(NullPointerException e) {
476:          //
477:          // no message in exception (getMessage() returned null)
478:          //
479:          verifyException("org.apache.commons.collections4.map.AbstractMapDecorator", e);
480:       }
481:   }
482: 
483:   @Test(timeout = 4000)
484:   public void test27()  throws Throwable  {
485:       Integer integer0 = new Integer((-2));
486:       MultiValueMap<Collection<ConstantFactory<Object>>, String> multiValueMap0 = new MultiValueMap<Collection<ConstantFactory<Object>>, String>();
487:       multiValueMap0.map = (Map<Collection<ConstantFactory<Object>>, Object>) multiValueMap0;
488:       // Undeclared exception!
489:       try { 
490:         multiValueMap0.getCollection(integer0);
491:         fail("Expecting exception: StackOverflowError");
492:       
493:       } catch(StackOverflowError e) {
494:          //
495:          // no message in exception (getMessage() returned null)
496:          //
497:       }
498:   }
499: 
500:   @Test(timeout = 4000)
501:   public void test28()  throws Throwable  {
502:       HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
503:       MultiValueMap<String, LinkedList<String>> multiValueMap0 = MultiValueMap.multiValueMap((Map<String, ? super Collection<LinkedList<String>>>) hashMap0);
504:       Factory<ArrayList<ArrayList<Integer>>> factory0 = ExceptionFactory.exceptionFactory();
505:       MultiValueMap<String, ArrayList<Integer>> multiValueMap1 = MultiValueMap.multiValueMap((Map<String, ? super ArrayList<ArrayList<Integer>>>) multiValueMap0, factory0);
506:       MultiValueMap<Integer, LinkedList<String>> multiValueMap2 = new MultiValueMap<Integer, LinkedList<String>>();
507:       hashMap0.put((String) null, multiValueMap2);
508:       // Undeclared exception!
509:       try { 
510:         multiValueMap1.getCollection((Object) null);
511:         fail("Expecting exception: ClassCastException");
512:       
513:       } catch(ClassCastException e) {
514:          //
515:          // org.apache.commons.collections4.map.MultiValueMap cannot be cast to java.util.Collection
516:          //
517:          verifyException("org.apache.commons.collections4.map.MultiValueMap", e);
518:       }
519:   }
520: 
521:   @Test(timeout = 4000)
522:   public void test29()  throws Throwable  {
523:       MultiValueMap<String, Object> multiValueMap0 = new MultiValueMap<String, Object>();
524:       MultiValueMap<String, String> multiValueMap1 = MultiValueMap.multiValueMap((Map<String, ? super Collection<String>>) multiValueMap0);
525:       multiValueMap0.put("dD&BU", multiValueMap1);
526:       // Undeclared exception!
527:       try { 
528:         multiValueMap1.containsValue((Object) multiValueMap1, (Object) "dD&BU");
529:         fail("Expecting exception: StackOverflowError");
530:       
531:       } catch(StackOverflowError e) {
532:          //
533:          // no message in exception (getMessage() returned null)
534:          //
535:       }
536:   }
537: 
538:   @Test(timeout = 4000)
539:   public void test30()  throws Throwable  {
540:       MultiValueMap<LinkedList<Object>, String> multiValueMap0 = new MultiValueMap<LinkedList<Object>, String>();
541:       multiValueMap0.map = null;
542:       MultiValueMap<Collection<String>, ArrayList<String>> multiValueMap1 = new MultiValueMap<Collection<String>, ArrayList<String>>();
543:       ConstantFactory<Object> constantFactory0 = new ConstantFactory<Object>(multiValueMap0);
544:       // Undeclared exception!
545:       try { 
546:         multiValueMap1.containsValue((Object) multiValueMap0, (Object) constantFactory0);
547:         fail("Expecting exception: NullPointerException");
548:       
549:       } catch(NullPointerException e) {
550:          //
551:          // no message in exception (getMessage() returned null)
552:          //
553:          verifyException("org.apache.commons.collections4.map.AbstractMapDecorator", e);
554:       }
555:   }
556: 
557:   @Test(timeout = 4000)
558:   public void test31()  throws Throwable  {
559:       MultiValueMap<Integer, Collection<String>> multiValueMap0 = new MultiValueMap<Integer, Collection<String>>();
560:       LinkedList<String> linkedList0 = new LinkedList<String>();
561:       HashMap<LinkedList<String>, Object> hashMap0 = new HashMap<LinkedList<String>, Object>();
562:       hashMap0.put(linkedList0, multiValueMap0);
563:       MultiValueMap<LinkedList<String>, ArrayList<Integer>> multiValueMap1 = MultiValueMap.multiValueMap((Map<LinkedList<String>, ? super Collection<ArrayList<Integer>>>) hashMap0);
564:       // Undeclared exception!
565:       try { 
566:         multiValueMap1.containsValue((Object) linkedList0, (Object) null);
567:         fail("Expecting exception: ClassCastException");
568:       
569:       } catch(ClassCastException e) {
570:          //
571:          // org.apache.commons.collections4.map.MultiValueMap cannot be cast to java.util.Collection
572:          //
573:          verifyException("org.apache.commons.collections4.map.MultiValueMap", e);
574:       }
575:   }
576: 
577:   @Test(timeout = 4000)
578:   public void test32()  throws Throwable  {
579:       HashMap<LinkedList<Object>, Object> hashMap0 = new HashMap<LinkedList<Object>, Object>();
580:       LinkedList<Object> linkedList0 = new LinkedList<Object>();
581:       linkedList0.add((Object) hashMap0);
582:       hashMap0.put(linkedList0, linkedList0);
583:       MultiValueMap<LinkedList<Object>, String> multiValueMap0 = MultiValueMap.multiValueMap((Map<LinkedList<Object>, ? super Collection<String>>) hashMap0);
584:       // Undeclared exception!
585:       try { 
586:         multiValueMap0.containsValue((Object) multiValueMap0);
587:        //  fail("Expecting exception: StackOverflowError");
588:        // Unstable assertion
589:       } catch(StackOverflowError e) {
590:          //
591:          // no message in exception (getMessage() returned null)
592:          //
593:       }
594:   }
595: 
596:   @Test(timeout = 4000)
597:   public void test33()  throws Throwable  {
598:       HashMap<ArrayList<String>, Object> hashMap0 = new HashMap<ArrayList<String>, Object>();
599:       ArrayList<String> arrayList0 = new ArrayList<String>();
600:       hashMap0.put(arrayList0, (Object) null);
601:       MultiValueMap<ArrayList<String>, String> multiValueMap0 = MultiValueMap.multiValueMap((Map<ArrayList<String>, ? super Collection<String>>) hashMap0);
602:       // Undeclared exception!
603:       try { 
604:         multiValueMap0.containsValue((Object) hashMap0);
605:         fail("Expecting exception: NullPointerException");
606:       
607:       } catch(NullPointerException e) {
608:       }
609:   }
610: 
611:   @Test(timeout = 4000)
612:   public void test34()  throws Throwable  {
613:       HashMap<LinkedList<Object>, Object> hashMap0 = new HashMap<LinkedList<Object>, Object>();
614:       LinkedList<Object> linkedList0 = new LinkedList<Object>();
615:       hashMap0.put(linkedList0, hashMap0);
616:       MultiValueMap<LinkedList<Object>, String> multiValueMap0 = MultiValueMap.multiValueMap((Map<LinkedList<Object>, ? super Collection<String>>) hashMap0);
617:       // Undeclared exception!
618:       try { 
619:         multiValueMap0.containsValue((Object) hashMap0);
620:         fail("Expecting exception: ClassCastException");
621:       
622:       } catch(ClassCastException e) {
623:          //
624:          // java.util.HashMap cannot be cast to java.util.Collection
625:          //
626:          verifyException("org.apache.commons.collections4.map.MultiValueMap", e);
627:       }
628:   }
629: 
630:   @Test(timeout = 4000)
631:   public void test35()  throws Throwable  {
632:       MultiValueMap<String, ConstantFactory<Object>> multiValueMap0 = new MultiValueMap<String, ConstantFactory<Object>>();
633:       multiValueMap0.map = null;
634:       // Undeclared exception!
635:       try { 
636:         multiValueMap0.clear();
637:         fail("Expecting exception: NullPointerException");
638:       
639:       } catch(NullPointerException e) {
640:          //
641:          // no message in exception (getMessage() returned null)
642:          //
643:          verifyException("org.apache.commons.collections4.map.MultiValueMap", e);
644:       }
645:   }
646: 
647:   @Test(timeout = 4000)
648:   public void test36()  throws Throwable  {
649:       Factory<Collection<String>> factory0 = ConstantFactory.constantFactory((Collection<String>) null);
650:       MultiValueMap<Object, String> multiValueMap0 = null;
651:       try {
652:         multiValueMap0 = new MultiValueMap<Object, String>((Map<Object, ? super Collection<String>>) null, factory0);
653:         fail("Expecting exception: NullPointerException");
654:       
655:       } catch(NullPointerException e) {
656:          //
657:          // Map must not be null.
658:          //
659:          verifyException("org.apache.commons.collections4.map.AbstractMapDecorator", e);
660:       }
661:   }
662: 
663:   @Test(timeout = 4000)
664:   public void test37()  throws Throwable  {
665:       MultiValueMap<Collection<Object>, String> multiValueMap0 = new MultiValueMap<Collection<Object>, String>();
666:       int int0 = multiValueMap0.totalSize();
667:       assertEquals(0, int0);
668:   }
669: 
670:   @Test(timeout = 4000)
671:   public void test38()  throws Throwable  {
672:       Object object0 = new Object();
673:       MultiValueMap<ArrayList<String>, ArrayList<String>> multiValueMap0 = new MultiValueMap<ArrayList<String>, ArrayList<String>>();
674:       Collection<ArrayList<String>> collection0 = multiValueMap0.getCollection(object0);
675:       assertNull(collection0);
676:   }
677: 
678:   @Test(timeout = 4000)
679:   public void test39()  throws Throwable  {
680:       ArrayList<Object> arrayList0 = new ArrayList<Object>();
681:       MultiValueMap<Collection<Object>, String> multiValueMap0 = new MultiValueMap<Collection<Object>, String>();
682:       Iterator<String> iterator0 = multiValueMap0.iterator((Object) arrayList0);
683:       assertNotNull(iterator0);
684:   }
685: 
686:   @Test(timeout = 4000)
687:   public void test40()  throws Throwable  {
688:       MultiValueMap<LinkedList<Integer>, String> multiValueMap0 = new MultiValueMap<LinkedList<Integer>, String>();
689:       ArrayList<String> arrayList0 = new ArrayList<String>();
690:       arrayList0.add("InstantiateFactory: Constructor threw an exception");
691:       LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
692:       HashMap<ArrayList<String>, Object> hashMap0 = new HashMap<ArrayList<String>, Object>();
693:       MultiValueMap<ArrayList<String>, String> multiValueMap1 = MultiValueMap.multiValueMap((Map<ArrayList<String>, ? super Collection<String>>) hashMap0);
694:       Factory<LinkedList<ArrayList<String>>> factory0 = ExceptionFactory.exceptionFactory();
695:       MultiValueMap<ArrayList<String>, ArrayList<String>> multiValueMap2 = MultiValueMap.multiValueMap((Map<ArrayList<String>, ? super LinkedList<ArrayList<String>>>) multiValueMap1, factory0);
696:       Object object0 = multiValueMap2.getOrDefault(multiValueMap0, arrayList0);
697:       multiValueMap0.put(linkedList0, object0);
698:       boolean boolean0 = multiValueMap0.putAll(linkedList0, (Collection<String>) arrayList0);
699:       assertEquals(1, arrayList0.size());
700:       assertTrue(boolean0);
701:   }
702: 
703:   @Test(timeout = 4000)
704:   public void test41()  throws Throwable  {
705:       MultiValueMap<LinkedList<Integer>, String> multiValueMap0 = new MultiValueMap<LinkedList<Integer>, String>();
706:       ArrayList<String> arrayList0 = new ArrayList<String>();
707:       LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
708:       boolean boolean0 = multiValueMap0.putAll(linkedList0, (Collection<String>) arrayList0);
709:       assertFalse(boolean0);
710:   }
711: 
712:   @Test(timeout = 4000)
713:   public void test42()  throws Throwable  {
714:       MultiValueMap<String, String> multiValueMap0 = new MultiValueMap<String, String>();
715:       boolean boolean0 = multiValueMap0.putAll("", (Collection<String>) null);
716:       assertFalse(boolean0);
717:   }
718: 
719:   @Test(timeout = 4000)
720:   public void test43()  throws Throwable  {
721:       HashMap<LinkedList<String>, Object> hashMap0 = new HashMap<LinkedList<String>, Object>();
722:       MultiValueMap<LinkedList<String>, AbstractMap.SimpleImmutableEntry<ArrayList<Object>, LinkedList<Object>>> multiValueMap0 = MultiValueMap.multiValueMap((Map<LinkedList<String>, ? super Collection<AbstractMap.SimpleImmutableEntry<ArrayList<Object>, LinkedList<Object>>>>) hashMap0);
723:       MultiValueMap<LinkedList<String>, ArrayList<Integer>> multiValueMap1 = MultiValueMap.multiValueMap((Map<LinkedList<String>, ? super Collection<ArrayList<Integer>>>) multiValueMap0);
724:       boolean boolean0 = multiValueMap1.containsValue((Object) multiValueMap0, (Object) null);
725:       assertFalse(boolean0);
726:   }
727: 
728:   @Test(timeout = 4000)
729:   public void test44()  throws Throwable  {
730:       MultiValueMap<String, String> multiValueMap0 = new MultiValueMap<String, String>();
731:       Collection<Object> collection0 = multiValueMap0.values();
732:       Collection<Object> collection1 = multiValueMap0.values();
733:       assertSame(collection1, collection0);
734:   }
735: 
736:   @Test(timeout = 4000)
737:   public void test45()  throws Throwable  {
738:       HashMap<ConstantFactory<String>, Object> hashMap0 = new HashMap<ConstantFactory<String>, Object>();
739:       ConstantFactory<String> constantFactory0 = new ConstantFactory<String>("|>rDbEN+");
740:       Integer integer0 = new Integer(9);
741:       hashMap0.put(constantFactory0, integer0);
742:       MultiValueMap<ConstantFactory<String>, ArrayList<Object>> multiValueMap0 = MultiValueMap.multiValueMap((Map<ConstantFactory<String>, ? super Collection<ArrayList<Object>>>) hashMap0);
743:       // Undeclared exception!
744:       try { 
745:         multiValueMap0.putAll((Map<? extends ConstantFactory<String>, ?>) hashMap0);
746:         fail("Expecting exception: ClassCastException");
747:       
748:       } catch(ClassCastException e) {
749:          //
750:          // java.lang.Integer cannot be cast to java.util.Collection
751:          //
752:          verifyException("org.apache.commons.collections4.map.MultiValueMap", e);
753:       }
754:   }
755: 
756:   @Test(timeout = 4000)
757:   public void test46()  throws Throwable  {
758:       HashMap<LinkedList<Object>, Object> hashMap0 = new HashMap<LinkedList<Object>, Object>();
759:       LinkedList<Object> linkedList0 = new LinkedList<Object>();
760:       MultiValueMap<LinkedList<Object>, String> multiValueMap0 = MultiValueMap.multiValueMap((Map<LinkedList<Object>, ? super Collection<String>>) hashMap0);
761:       UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
762:       multiValueMap0.computeIfAbsent(linkedList0, unaryOperator0);
763:       boolean boolean0 = multiValueMap0.containsValue((Object) linkedList0);
764:       assertFalse(multiValueMap0.isEmpty());
765:       assertTrue(boolean0);
766:   }
767: 
768:   @Test(timeout = 4000)
769:   public void test47()  throws Throwable  {
770:       HashMap<LinkedList<Object>, Object> hashMap0 = new HashMap<LinkedList<Object>, Object>();
771:       LinkedList<Object> linkedList0 = new LinkedList<Object>();
772:       hashMap0.put(linkedList0, linkedList0);
773:       MultiValueMap<LinkedList<Object>, String> multiValueMap0 = MultiValueMap.multiValueMap((Map<LinkedList<Object>, ? super Collection<String>>) hashMap0);
774:       boolean boolean0 = multiValueMap0.containsValue((Object) multiValueMap0);
775:       assertFalse(boolean0);
776:   }
777: 
778:   @Test(timeout = 4000)
779:   public void test48()  throws Throwable  {
780:       MultiValueMap<String, Object> multiValueMap0 = new MultiValueMap<String, Object>();
781:       MultiValueMap<Integer, String> multiValueMap1 = new MultiValueMap<Integer, String>();
782:       multiValueMap0.putIfAbsent("[$j9wN19EnwXrft!", multiValueMap1);
783:       multiValueMap0.put("[$j9wN19EnwXrft!", "[$j9wN19EnwXrft!");
784:       boolean boolean0 = multiValueMap0.removeMapping("[$j9wN19EnwXrft!", "[$j9wN19EnwXrft!");
785:       assertFalse(multiValueMap0.isEmpty());
786:       assertTrue(boolean0);
787:   }
788: 
789:   @Test(timeout = 4000)
790:   public void test49()  throws Throwable  {
791:       ArrayList<String> arrayList0 = new ArrayList<String>();
792:       UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
793:       MultiValueMap<LinkedList<Object>, ArrayList<String>> multiValueMap0 = new MultiValueMap<LinkedList<Object>, ArrayList<String>>();
794:       LinkedList<Object> linkedList0 = new LinkedList<Object>();
795:       multiValueMap0.computeIfAbsent(linkedList0, unaryOperator0);
796:       assertEquals(1, multiValueMap0.size());
797:       
798:       boolean boolean0 = multiValueMap0.removeMapping(linkedList0, arrayList0);
799:       assertTrue(boolean0);
800:   }
801: 
802:   @Test(timeout = 4000)
803:   public void test50()  throws Throwable  {
804:       MultiValueMap<ArrayList<Object>, ArrayList<Collection<ConstantFactory<Object>>>> multiValueMap0 = new MultiValueMap<ArrayList<Object>, ArrayList<Collection<ConstantFactory<Object>>>>();
805:       Integer integer0 = new Integer((-2));
806:       boolean boolean0 = multiValueMap0.removeMapping(integer0, integer0);
807:       assertFalse(boolean0);
808:   }
809: 
810:   @Test(timeout = 4000)
811:   public void test51()  throws Throwable  {
812:       ArrayList<Object> arrayList0 = new ArrayList<Object>();
813:       HashMap<LinkedList<String>, Object> hashMap0 = new HashMap<LinkedList<String>, Object>();
814:       LinkedList<String> linkedList0 = new LinkedList<String>();
815:       hashMap0.put(linkedList0, linkedList0);
816:       MultiValueMap<LinkedList<String>, AbstractMap.SimpleImmutableEntry<ArrayList<Object>, LinkedList<Object>>> multiValueMap0 = MultiValueMap.multiValueMap((Map<LinkedList<String>, ? super Collection<AbstractMap.SimpleImmutableEntry<ArrayList<Object>, LinkedList<Object>>>>) hashMap0);
817:       boolean boolean0 = multiValueMap0.removeMapping(arrayList0, (Object) null);
818:       assertEquals(1, hashMap0.size());
819:       assertFalse(boolean0);
820:   }
821: 
822:   @Test(timeout = 4000)
823:   public void test52()  throws Throwable  {
824:       MultiValueMap<LinkedList<Integer>, String> multiValueMap0 = new MultiValueMap<LinkedList<Integer>, String>();
825:       ArrayList<String> arrayList0 = new ArrayList<String>();
826:       arrayList0.add("iv0{G");
827:       LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
828:       multiValueMap0.putAll(linkedList0, (Collection<String>) arrayList0);
829:       MultiValueMap<LinkedList<Integer>, Collection<Integer>> multiValueMap1 = MultiValueMap.multiValueMap((Map<LinkedList<Integer>, ? super Collection<Collection<Integer>>>) multiValueMap0);
830:       // Undeclared exception!
831:       try { 
832:         multiValueMap1.totalSize();
833:         fail("Expecting exception: IllegalArgumentException");
834:       
835:       } catch(IllegalArgumentException e) {
836:          //
837:          // Unsupported object type: java.lang.String
838:          //
839:          verifyException("org.apache.commons.collections4.CollectionUtils", e);
840:       }
841:   }
842: 
843:   @Test(timeout = 4000)
844:   public void test53()  throws Throwable  {
845:       ArrayList<Object> arrayList0 = new ArrayList<Object>();
846:       MultiValueMap<Collection<Object>, String> multiValueMap0 = new MultiValueMap<Collection<Object>, String>();
847:       multiValueMap0.putIfAbsent(arrayList0, arrayList0);
848:       multiValueMap0.iterator((Object) arrayList0);
849:       assertFalse(multiValueMap0.isEmpty());
850:   }
851: 
852:   @Test(timeout = 4000)
853:   public void test54()  throws Throwable  {
854:       HashMap<ArrayList<Collection<ConstantFactory<Object>>>, Object> hashMap0 = new HashMap<ArrayList<Collection<ConstantFactory<Object>>>, Object>();
855:       MultiValueMap<ArrayList<Collection<ConstantFactory<Object>>>, Object> multiValueMap0 = MultiValueMap.multiValueMap((Map<ArrayList<Collection<ConstantFactory<Object>>>, ? super Collection<Object>>) hashMap0);
856:       MultiValueMap<ArrayList<Collection<ConstantFactory<Object>>>, MultiValueMap<Object, String>> multiValueMap1 = MultiValueMap.multiValueMap((Map<ArrayList<Collection<ConstantFactory<Object>>>, ? super Collection<MultiValueMap<Object, String>>>) multiValueMap0);
857:       multiValueMap1.clear();
858:       assertTrue(multiValueMap1.isEmpty());
859:   }
860: 
861:   @Test(timeout = 4000)
862:   public void test55()  throws Throwable  {
863:       MultiValueMap<Collection<Object>, String> multiValueMap0 = new MultiValueMap<Collection<Object>, String>();
864:       Iterator<Map.Entry<Collection<Object>, String>> iterator0 = (Iterator<Map.Entry<Collection<Object>, String>>)multiValueMap0.iterator();
865:       assertNotNull(iterator0);
866:   }
867: 
868:   @Test(timeout = 4000)
869:   public void test56()  throws Throwable  {
870:       MultiValueMap<Collection<Object>, String> multiValueMap0 = new MultiValueMap<Collection<Object>, String>();
871:       MultiValueMap<Collection<Object>, Integer> multiValueMap1 = MultiValueMap.multiValueMap((Map<Collection<Object>, ? super Collection<Integer>>) multiValueMap0);
872:       multiValueMap0.map = (Map<Collection<Object>, Object>) multiValueMap1;
873:       // Undeclared exception!
874:       try { 
875:         multiValueMap0.iterator();
876:         fail("Expecting exception: StackOverflowError");
877:       
878:       } catch(StackOverflowError e) {
879:          //
880:          // no message in exception (getMessage() returned null)
881:          //
882:       }
883:   }
884: }
RegularFileObject[/tmp/EvoSuite_101_1634038152401/org/apache/commons/collections4/map/MultiValueMap_100_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Oct 12 11:29:14 GMT 2021
5:  */
6: 
7: package org.apache.commons.collections4.map;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: import static org.evosuite.shaded.org.mockito.Mockito.*;
17: @EvoSuiteClassExclude
18: public class MultiValueMap_100_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
24: 
25: 
26:   @BeforeClass 
27:   public static void initEvoSuiteFramework() { 
28:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.map.MultiValueMap"; 
29:     org.evosuite.runtime.GuiSupport.initialize(); 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
31:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
32:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
33:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
34:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
35:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
36:     setSystemProperties();
37:     initializeClasses();
38:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
39:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
40:   } 
41: 
42:   @Before 
43:   public void initTestCase(){ 
44:     threadStopper.storeCurrentThreads();
45:     threadStopper.startRecordingTime();
46:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
47:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
48:     org.evosuite.runtime.GuiSupport.setHeadless(); 
49:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
50:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
51:   } 
52: 
53:   @After 
54:   public void doneWithTestCase(){ 
55:     threadStopper.killAndJoinClientThreads();
56:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
57:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
58:     resetClasses(); 
59:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
61:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
62:   } 
63: 
64:   public static void setSystemProperties() {
65:  
66:     /*No java.lang.System property to set*/
67:   }
68: 
69:   private static void initializeClasses() {
70:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MultiValueMap_100_tmp__ESTest_scaffolding.class.getClassLoader() ,
71:       "org.apache.commons.collections4.MapIterator",
72:       "org.apache.commons.collections4.iterators.IteratorChain",
73:       "org.apache.commons.collections4.functors.ExceptionFactory",
74:       "org.apache.commons.collections4.map.MultiValueMap$Values",
75:       "org.apache.commons.collections4.map.AbstractMapDecorator",
76:       "org.apache.commons.collections4.Get",
77:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
78:       "org.apache.commons.collections4.CollectionUtils",
79:       "org.apache.commons.collections4.map.MultiValueMap",
80:       "org.apache.commons.collections4.FunctorException",
81:       "org.apache.commons.collections4.map.AbstractIterableMap",
82:       "org.apache.commons.collections4.Factory",
83:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
84:       "org.apache.commons.collections4.Unmodifiable",
85:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
86:       "org.apache.commons.collections4.Transformer",
87:       "org.apache.commons.collections4.map.MultiValueMap$1",
88:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
89:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
90:       "org.apache.commons.collections4.ResettableIterator",
91:       "org.apache.commons.collections4.iterators.EmptyIterator",
92:       "org.apache.commons.collections4.functors.ConstantFactory",
93:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
94:       "org.apache.commons.collections4.Put",
95:       "org.apache.commons.collections4.MultiMap",
96:       "org.apache.commons.collections4.IterableMap",
97:       "org.apache.commons.collections4.IterableGet"
98:     );
99:   } 
100:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
101:     mock(Class.forName("java.util.function.BiFunction", false, MultiValueMap_100_tmp__ESTest_scaffolding.class.getClassLoader()));
102:   }
103: 
104:   private static void resetClasses() {
105:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MultiValueMap_100_tmp__ESTest_scaffolding.class.getClassLoader()); 
106: 
107:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
108:       "org.apache.commons.collections4.map.AbstractIterableMap",
109:       "org.apache.commons.collections4.map.AbstractMapDecorator",
110:       "org.apache.commons.collections4.map.MultiValueMap",
111:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
112:       "org.apache.commons.collections4.map.MultiValueMap$Values",
113:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
114:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
115:       "org.apache.commons.collections4.map.MultiValueMap$1",
116:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
117:       "org.apache.commons.collections4.iterators.EmptyIterator",
118:       "org.apache.commons.collections4.iterators.EmptyListIterator",
119:       "org.apache.commons.collections4.iterators.EmptyOrderedIterator",
120:       "org.apache.commons.collections4.iterators.AbstractEmptyMapIterator",
121:       "org.apache.commons.collections4.iterators.EmptyMapIterator",
122:       "org.apache.commons.collections4.iterators.EmptyOrderedMapIterator",
123:       "org.apache.commons.collections4.functors.ExceptionFactory",
124:       "org.apache.commons.collections4.functors.ConstantFactory",
125:       "org.apache.commons.collections4.iterators.IteratorChain",
126:       "org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter",
127:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
128:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
129:       "org.apache.commons.collections4.CollectionUtils",
130:       "org.apache.commons.collections4.FunctorException",
131:       "org.apache.commons.collections4.functors.InstantiateFactory"
132:     );
133:   }
134: }

* Done!

* Computation finished
