* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-100
* Going to generate test cases for class: org.apache.commons.collections4.map.MultiValueMap
* Starting Client-0
* Connecting to master process on port 2903
* Analyzing classpath: 
  - subjects/buggy-versions/Collections-27/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.collections4.map.MultiValueMap
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 498
* Using seed 1348234971
* Starting evolution
bbc usage percentage is: 100%
* Initial Number of Goals in DynaMOSA = 206 / 498
[MASTER] 14:21:55.285 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedList<E> : Type points to itself
[MASTER] 14:21:55.285 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 14:21:55.285 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 14:21:55.285 [logback-2] ERROR TestCluster - Failed to check cache for java.util.HashMap<K, V> : Type points to itself
[MASTER] 14:21:55.437 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Collection<E> : Type points to itself
[MASTER] 14:22:01.062 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 14:22:01.648 [logback-2] ERROR TestCluster - Failed to check cache for java.util.ArrayList<E> : Type points to itself
[MASTER] 14:22:56.304 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap$Values.size()I: Line 503: 7668,2229,0| Number of FF evals: 2753
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap$ValuesIterator.next()Ljava/lang/Object;: Line 541: 2275,0,0| Number of FF evals: 832
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap.readObject(Ljava/io/ObjectInputStream;)V: root-Branch: 45411,39972,0| Number of FF evals: 16212
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap$ValuesIterator.next()Ljava/lang/Object;: root-Branch: 2275,0,0| Number of FF evals: 863
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap.removeMapping(Ljava/lang/Object;Ljava/lang/Object;)Z: I9 Branch 2 IFNONNULL L214 - true: 98,0,0| Number of FF evals: 1045
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap.removeMapping(Ljava/lang/Object;Ljava/lang/Object;)Z: I32 Branch 4 IFLE L221 - true: 333,0,0| Number of FF evals: 1270
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap.containsValue(Ljava/lang/Object;)Z: I9 Branch 6 IFNULL L239 - true: 21312,19098,40| Number of FF evals: 16212
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap$1$1$1.getKey()Ljava/lang/Object;: root-Branch: 45411,39972,0| Number of FF evals: 16208
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap.removeMapping(Ljava/lang/Object;Ljava/lang/Object;)Z: I32 Branch 4 IFLE L221 - false: 183,0,0| Number of FF evals: 678
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap$1$1$1.getValue()Ljava/lang/Object;: Line 446: 45411,39972,0| Number of FF evals: 16212
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap$1.nextIterator(I)Ljava/util/Iterator;: I5 Branch 29 IFNE L432 - true: 45411,39972,0| Number of FF evals: 16212
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap$Values.clear()V: root-Branch: 45411,39972,11793| Number of FF evals: 16212
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap$1.nextIterator(I)Ljava/util/Iterator;: I5 Branch 29 IFNE L432 - false: 45411,39972,0| Number of FF evals: 16212
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap.putAll(Ljava/util/Map;)V: I15 Branch 14 IFEQ L293 - false: 77,0,0| Number of FF evals: 297
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap$1.nextIterator(I)Ljava/util/Iterator;: Line 432: 45411,39972,0| Number of FF evals: 16212
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap.putAll(Ljava/lang/Object;Ljava/util/Collection;)Z: I6 Branch 21 IFNE L381 - true: 63,0,0| Number of FF evals: 1734
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: I13 Branch 10 IFNONNULL L264 - true: 65,0,0| Number of FF evals: 1011
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap.totalSize()I: I14 Branch 25 IFEQ L467 - false: 244,0,0| Number of FF evals: 415
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap$1$1$1.getKey()Ljava/lang/Object;: Line 442: 45411,39972,0| Number of FF evals: 16212
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap$Values.iterator()Ljava/util/Iterator;: I16 Branch 26 IFEQ L495 - false: 663,0,0| Number of FF evals: 866
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap$ValuesIterator.hasNext()Z: root-Branch: 2275,0,0| Number of FF evals: 865
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap$1$1$1.getValue()Ljava/lang/Object;: root-Branch: 45411,39972,0| Number of FF evals: 16212
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap.readObject(Ljava/io/ObjectInputStream;)V: Line 179: 45411,39972,0| Number of FF evals: 16212
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap.readObject(Ljava/io/ObjectInputStream;)V: Line 177: 45411,39972,0| Number of FF evals: 16212
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap.readObject(Ljava/io/ObjectInputStream;)V: Line 178: 45411,39972,0| Number of FF evals: 16212
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: I30 Branch 11 IFLE L267 - true: 28553,25743,923| Number of FF evals: 16212
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap.removeMapping(Ljava/lang/Object;Ljava/lang/Object;)Z: I23 Branch 3 IFNE L218 - false: 98,0,0| Number of FF evals: 368
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap.writeObject(Ljava/io/ObjectOutputStream;)V: Line 165: 45411,39972,0| Number of FF evals: 16212
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory.create()Ljava/util/Collection;: Line 564: 31854,28854,0| Number of FF evals: 16212
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap.removeMapping(Ljava/lang/Object;Ljava/lang/Object;)Z: I23 Branch 3 IFNE L218 - true: 281,0,0| Number of FF evals: 1355
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap.writeObject(Ljava/io/ObjectOutputStream;)V: Line 163: 45411,39972,0| Number of FF evals: 16212
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap$ValuesIterator.remove()V: I10 Branch 27 IFLE L529 - true: 45411,39972,0| Number of FF evals: 16212
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap$1$1$1.setValue(Ljava/lang/Object;)Ljava/lang/Object;: root-Branch: 45411,39972,0| Number of FF evals: 16212
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap.putAll(Ljava/lang/Object;Ljava/util/Collection;)Z: I42 Branch 23 IFLE L389 - true: 10059,8941,216| Number of FF evals: 16149
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap.writeObject(Ljava/io/ObjectOutputStream;)V: Line 164: 45411,39972,0| Number of FF evals: 16212
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap.writeObject(Ljava/io/ObjectOutputStream;)V: root-Branch: 45411,39972,0| Number of FF evals: 16208
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap.putAll(Ljava/util/Map;)V: I44 Branch 15 IFEQ L297 - false: 54,0,0| Number of FF evals: 157
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory.create()Ljava/util/Collection;: Line 563: 31854,28854,0| Number of FF evals: 16212
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap$ValuesIterator.remove()V: I10 Branch 27 IFLE L529 - false: 45411,39972,0| Number of FF evals: 16212
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap.containsValue(Ljava/lang/Object;Ljava/lang/Object;)Z: I9 Branch 17 IFNONNULL L340 - true: 1930,504,0| Number of FF evals: 3212
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap$1$1.transform(Ljava/lang/Object;)Ljava/util/Map$Entry;: root-Branch: 45411,39972,0| Number of FF evals: 16208
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap.putAll(Ljava/lang/Object;Ljava/util/Collection;)Z: I24 Branch 22 IFNONNULL L386 - false: 63,0,0| Number of FF evals: 1659
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap.putAll(Ljava/util/Map;)V: Line 299: 32,0,0| Number of FF evals: 179
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap$ValuesIterator.remove()V: I16 Branch 28 IFEQ L529 - false: 45411,39972,0| Number of FF evals: 16212
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap.iterator(Ljava/lang/Object;)Ljava/util/Iterator;: I5 Branch 24 IFNE L407 - true: 1742,420,0| Number of FF evals: 2610
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap.putAll(Ljava/lang/Object;Ljava/util/Collection;)Z: I24 Branch 22 IFNONNULL L386 - true: 63,0,0| Number of FF evals: 214
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: I53 Branch 12 IFEQ L275 - true: 28553,26065,850| Number of FF evals: 16212
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap$ValuesIterator.<init>(Lorg/apache/commons/collections4/map/MultiValueMap;Ljava/lang/Object;)V: root-Branch: 2275,0,0| Number of FF evals: 874
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap.size(Ljava/lang/Object;)I: I9 Branch 19 IFNONNULL L366 - true: 266,0,0| Number of FF evals: 390
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap$Values.clear()V: Line 508: 45411,39972,11741| Number of FF evals: 16212
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap$Values.clear()V: Line 509: 45411,39972,11749| Number of FF evals: 16212
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap.containsValue(Ljava/lang/Object;)Z: I36 Branch 9 IFEQ L241 - false: 209,0,0| Number of FF evals: 1166
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap.containsValue(Ljava/lang/Object;)Z: I30 Branch 8 IFLE L241 - false: 219,0,0| Number of FF evals: 1181
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap.<init>()V: Line 133: 44634,39342,0| Number of FF evals: 16212
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap$1$1$1.<init>(Lorg/apache/commons/collections4/map/MultiValueMap$1$1;Ljava/lang/Object;)V: root-Branch: 45411,39972,0| Number of FF evals: 16212
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap.containsValue(Ljava/lang/Object;Ljava/lang/Object;)Z: I19 Branch 18 IFLE L343 - false: 1932,347,0| Number of FF evals: 3151
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap$1$1.<init>(Lorg/apache/commons/collections4/map/MultiValueMap$1;Ljava/lang/Object;)V: root-Branch: 45411,39972,0| Number of FF evals: 16212
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap.containsValue(Ljava/lang/Object;)Z: I30 Branch 8 IFLE L241 - true: 10,0,0| Number of FF evals: 380
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap.removeMapping(Ljava/lang/Object;Ljava/lang/Object;)Z: I38 Branch 5 IFEQ L221 - true: 150,0,0| Number of FF evals: 880
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap$ValuesIterator.hasNext()Z: Line 536: 2275,0,0| Number of FF evals: 832
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap$1$1$1.setValue(Ljava/lang/Object;)Ljava/lang/Object;: Line 450: 45411,39972,0| Number of FF evals: 16212
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap$ValuesIterator.<init>(Lorg/apache/commons/collections4/map/MultiValueMap;Ljava/lang/Object;)V: Line 523: 2275,0,0| Number of FF evals: 832
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap$ValuesIterator.remove()V: Line 529: 45411,39972,0| Number of FF evals: 16212
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap$ValuesIterator.<init>(Lorg/apache/commons/collections4/map/MultiValueMap;Ljava/lang/Object;)V: Line 524: 2275,0,0| Number of FF evals: 832
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap$ValuesIterator.remove()V: Line 528: 45411,39972,0| Number of FF evals: 16212
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap$ValuesIterator.<init>(Lorg/apache/commons/collections4/map/MultiValueMap;Ljava/lang/Object;)V: Line 520: 2275,0,0| Number of FF evals: 832
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap.containsValue(Ljava/lang/Object;Ljava/lang/Object;)Z: I19 Branch 18 IFLE L343 - true: 1972,387,0| Number of FF evals: 2804
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap$ValuesIterator.<init>(Lorg/apache/commons/collections4/map/MultiValueMap;Ljava/lang/Object;)V: Line 521: 2275,0,0| Number of FF evals: 832
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap$ValuesIterator.<init>(Lorg/apache/commons/collections4/map/MultiValueMap;Ljava/lang/Object;)V: Line 522: 2275,0,0| Number of FF evals: 832
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap$ValuesIterator.remove()V: I16 Branch 28 IFEQ L529 - true: 45411,39972,0| Number of FF evals: 16212
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap$ValuesIterator.remove()V: Line 532: 45411,39972,0| Number of FF evals: 16212
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap$1$1.transform(Ljava/lang/Object;)Ljava/util/Map$Entry;: Line 439: 45411,39972,0| Number of FF evals: 16212
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.map.MultiValueMap$Values.size()I: root-Branch: 7668,2229,0| Number of FF evals: 2763
* Search finished after 601s and 596 generations, 130857 statements, best individual has fitness: 138.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 80%
* Total number of goals: 123
* Number of covered goals: 99
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 77%
* Total number of goals: 83
* Number of covered goals: 64
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 35
* Number of covered goals: 35
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 85%
* Total number of goals: 105
* Number of covered goals: 89
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 66%
* Total number of goals: 50
* Number of covered goals: 33
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 74%
* Total number of goals: 27
* Number of covered goals: 20
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 74%
* Total number of goals: 27
* Number of covered goals: 20
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 76%
* Total number of goals: 83
* Number of covered goals: 63
* Generated 62 tests with total length 323
* Resulting test suite's coverage: 73% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 69%
* Compiling and checking tests
[MASTER] 14:32:19.479 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_19_1628260339434/org/apache/commons/collections4/map/MultiValueMap_19_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_19_1628260339434/org/apache/commons/collections4/map/MultiValueMap_19_tmp__ESTest_scaffolding.java]]
[MASTER] 14:32:19.479 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Collections-27/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 14:32:19.479 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 14:32:19.484 [logback-2] ERROR JUnitAnalyzer - Diagnostic: constructor MultiValueMap in class org.apache.commons.collections4.map.MultiValueMap<K,V> cannot be applied to given types;
  required: java.util.Map<java.lang.String,? super C>,org.apache.commons.collections4.Factory<C>
  found: java.util.Map<java.lang.String,capture#1 of ? super java.util.Collection<java.lang.Object>>,org.apache.commons.collections4.Factory<java.util.Collection<java.lang.Object>>
  reason: inference variable C has incompatible bounds
    equality constraints: java.util.Collection<java.lang.Object>
    upper bounds: java.util.Collection<java.lang.Object>,java.util.Collection<java.util.LinkedList<java.lang.Integer>>: 31
[MASTER] 14:32:19.484 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_19_1628260339434/org/apache/commons/collections4/map/MultiValueMap_19_tmp__ESTest.java uses or overrides a deprecated API.: -1
[MASTER] 14:32:19.484 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:deprecation for details.: -1
[MASTER] 14:32:19.484 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Some messages have been simplified; recompile with -Xdiags:verbose to get full output: -1
[MASTER] 14:32:19.485 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_19_1628260339434/org/apache/commons/collections4/map/MultiValueMap_19_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Aug 06 14:32:19 GMT 2021
4:  */
5: 
6: package org.apache.commons.collections4.map;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.AbstractMap;
11: import java.util.ArrayList;
12: import java.util.Collection;
13: import java.util.LinkedList;
14: import java.util.Map;
15: import org.apache.commons.collections4.Factory;
16: import org.apache.commons.collections4.functors.ExceptionFactory;
17: import org.apache.commons.collections4.map.MultiValueMap;
18: import org.evosuite.runtime.EvoRunner;
19: import org.evosuite.runtime.EvoRunnerParameters;
20: import org.junit.runner.RunWith;
21: 
22: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
23: public class MultiValueMap_19_tmp__ESTest extends MultiValueMap_19_tmp__ESTest_scaffolding {
24: 
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>> multiValueMap0 = new MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>>();
28:       MultiValueMap<String, Object> multiValueMap1 = MultiValueMap.multiValueMap((Map<String, ? super Collection<Object>>) multiValueMap0);
29:       MultiValueMap<String, ArrayList<Object>> multiValueMap2 = MultiValueMap.multiValueMap((Map<String, ? super Collection<ArrayList<Object>>>) multiValueMap1);
30:       Factory<Collection<Object>> factory0 = ExceptionFactory.exceptionFactory();
31:       MultiValueMap<String, LinkedList<Integer>> multiValueMap3 = new MultiValueMap<String, LinkedList<Integer>>((Map<String, ? super Collection<Object>>) multiValueMap2, factory0);
32:       Collection<LinkedList<Integer>> collection0 = multiValueMap3.getCollection("7");
33:       assertNull(collection0);
34:   }
35: }
RegularFileObject[/tmp/EvoSuite_19_1628260339434/org/apache/commons/collections4/map/MultiValueMap_19_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Aug 06 14:32:19 GMT 2021
5:  */
6: 
7: package org.apache.commons.collections4.map;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: @EvoSuiteClassExclude
17: public class MultiValueMap_19_tmp__ESTest_scaffolding {
18: 
19:   @org.junit.Rule 
20:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
21: 
22:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
23: 
24: 
25:   @BeforeClass 
26:   public static void initEvoSuiteFramework() { 
27:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.map.MultiValueMap"; 
28:     org.evosuite.runtime.GuiSupport.initialize(); 
29:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
31:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
32:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
33:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
34:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
35:     setSystemProperties();
36:     initializeClasses();
37:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
38:   } 
39: 
40:   @Before 
41:   public void initTestCase(){ 
42:     threadStopper.storeCurrentThreads();
43:     threadStopper.startRecordingTime();
44:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
45:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
46:     org.evosuite.runtime.GuiSupport.setHeadless(); 
47:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
48:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
49:   } 
50: 
51:   @After 
52:   public void doneWithTestCase(){ 
53:     threadStopper.killAndJoinClientThreads();
54:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
55:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
56:     resetClasses(); 
57:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
59:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
60:   } 
61: 
62:   public static void setSystemProperties() {
63:  
64:     /*No java.lang.System property to set*/
65:   }
66: 
67:   private static void initializeClasses() {
68:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MultiValueMap_19_tmp__ESTest_scaffolding.class.getClassLoader() ,
69:       "org.apache.commons.collections4.MapIterator",
70:       "org.apache.commons.collections4.iterators.IteratorChain",
71:       "org.apache.commons.collections4.functors.ExceptionFactory",
72:       "org.apache.commons.collections4.map.MultiValueMap$Values",
73:       "org.apache.commons.collections4.map.AbstractMapDecorator",
74:       "org.apache.commons.collections4.Get",
75:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
76:       "org.apache.commons.collections4.CollectionUtils",
77:       "org.apache.commons.collections4.map.MultiValueMap",
78:       "org.apache.commons.collections4.FunctorException",
79:       "org.apache.commons.collections4.map.AbstractIterableMap",
80:       "org.apache.commons.collections4.Factory",
81:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
82:       "org.apache.commons.collections4.Unmodifiable",
83:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
84:       "org.apache.commons.collections4.Transformer",
85:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
86:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
87:       "org.apache.commons.collections4.map.MultiValueMap$1",
88:       "org.apache.commons.collections4.ResettableIterator",
89:       "org.apache.commons.collections4.iterators.EmptyIterator",
90:       "org.apache.commons.collections4.functors.ConstantFactory",
91:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
92:       "org.apache.commons.collections4.Put",
93:       "org.apache.commons.collections4.MultiMap",
94:       "org.apache.commons.collections4.IterableMap",
95:       "org.apache.commons.collections4.IterableGet"
96:     );
97:   } 
98: 
99:   private static void resetClasses() {
100:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MultiValueMap_19_tmp__ESTest_scaffolding.class.getClassLoader()); 
101: 
102:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
103:       "org.apache.commons.collections4.map.AbstractIterableMap",
104:       "org.apache.commons.collections4.map.AbstractMapDecorator",
105:       "org.apache.commons.collections4.map.MultiValueMap",
106:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
107:       "org.apache.commons.collections4.map.MultiValueMap$Values",
108:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
109:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
110:       "org.apache.commons.collections4.map.MultiValueMap$1",
111:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
112:       "org.apache.commons.collections4.iterators.EmptyIterator",
113:       "org.apache.commons.collections4.iterators.EmptyListIterator",
114:       "org.apache.commons.collections4.iterators.EmptyOrderedIterator",
115:       "org.apache.commons.collections4.iterators.AbstractEmptyMapIterator",
116:       "org.apache.commons.collections4.iterators.EmptyMapIterator",
117:       "org.apache.commons.collections4.iterators.EmptyOrderedMapIterator",
118:       "org.apache.commons.collections4.functors.ExceptionFactory",
119:       "org.apache.commons.collections4.iterators.IteratorChain",
120:       "org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter",
121:       "org.apache.commons.collections4.functors.ConstantFactory",
122:       "org.apache.commons.collections4.FunctorException",
123:       "org.apache.commons.collections4.functors.InstantiateFactory",
124:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
125:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
126:       "org.apache.commons.collections4.CollectionUtils"
127:     );
128:   }
129: }

[MASTER] 14:32:19.486 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>> multiValueMap0 = new MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>>();
MultiValueMap<String, Object> multiValueMap1 = MultiValueMap.multiValueMap((Map<String, ? super Collection<Object>>) multiValueMap0);
MultiValueMap<String, ArrayList<Object>> multiValueMap2 = MultiValueMap.multiValueMap((Map<String, ? super Collection<ArrayList<Object>>>) multiValueMap1);
Factory<Collection<Object>> factory0 = ExceptionFactory.exceptionFactory();
MultiValueMap<String, LinkedList<Integer>> multiValueMap3 = new MultiValueMap<String, LinkedList<Integer>>((Map<String, ? super Collection<Object>>) multiValueMap2, factory0);
Collection<LinkedList<Integer>> collection0 = multiValueMap3.getCollection("7");
assertNull(collection0);


[MASTER] 14:32:19.525 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_20_1628260339487/org/apache/commons/collections4/map/MultiValueMap_20_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_20_1628260339487/org/apache/commons/collections4/map/MultiValueMap_20_tmp__ESTest_scaffolding.java]]
[MASTER] 14:32:19.526 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Collections-27/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 14:32:19.526 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 14:32:19.526 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.lang.Class<java.lang.Object> cannot be converted to java.lang.Class<java.util.LinkedList<java.util.LinkedList<java.util.HashMap>>>: 29
[MASTER] 14:32:19.526 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_20_1628260339487/org/apache/commons/collections4/map/MultiValueMap_20_tmp__ESTest.java uses or overrides a deprecated API.: -1
[MASTER] 14:32:19.526 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:deprecation for details.: -1
[MASTER] 14:32:19.527 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_20_1628260339487/org/apache/commons/collections4/map/MultiValueMap_20_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Aug 06 14:32:19 GMT 2021
4:  */
5: 
6: package org.apache.commons.collections4.map;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.AbstractMap;
11: import java.util.ArrayList;
12: import java.util.Collection;
13: import java.util.HashMap;
14: import java.util.LinkedList;
15: import java.util.Map;
16: import org.apache.commons.collections4.map.MultiValueMap;
17: import org.evosuite.runtime.EvoRunner;
18: import org.evosuite.runtime.EvoRunnerParameters;
19: import org.junit.runner.RunWith;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
22: public class MultiValueMap_20_tmp__ESTest extends MultiValueMap_20_tmp__ESTest_scaffolding {
23: 
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       HashMap<LinkedList<ArrayList<String>>, Object> hashMap0 = new HashMap<LinkedList<ArrayList<String>>, Object>();
27:       MultiValueMap<LinkedList<ArrayList<String>>, AbstractMap.SimpleEntry<HashMap<Integer, String>, Integer>> multiValueMap0 = MultiValueMap.multiValueMap((Map<LinkedList<ArrayList<String>>, ? super Collection<AbstractMap.SimpleEntry<HashMap<Integer, String>, Integer>>>) hashMap0);
28:       Class<Object> class0 = Object.class;
29:       MultiValueMap<LinkedList<ArrayList<String>>, LinkedList<HashMap>> multiValueMap1 = MultiValueMap.multiValueMap((Map<LinkedList<ArrayList<String>>, ? super LinkedList<LinkedList<HashMap>>>) multiValueMap0, (Class<LinkedList<LinkedList<HashMap>>>) class0);
30:       assertTrue(multiValueMap1.isEmpty());
31:   }
32: }
RegularFileObject[/tmp/EvoSuite_20_1628260339487/org/apache/commons/collections4/map/MultiValueMap_20_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Aug 06 14:32:19 GMT 2021
5:  */
6: 
7: package org.apache.commons.collections4.map;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: @EvoSuiteClassExclude
17: public class MultiValueMap_20_tmp__ESTest_scaffolding {
18: 
19:   @org.junit.Rule 
20:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
21: 
22:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
23: 
24: 
25:   @BeforeClass 
26:   public static void initEvoSuiteFramework() { 
27:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.map.MultiValueMap"; 
28:     org.evosuite.runtime.GuiSupport.initialize(); 
29:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
31:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
32:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
33:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
34:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
35:     setSystemProperties();
36:     initializeClasses();
37:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
38:   } 
39: 
40:   @Before 
41:   public void initTestCase(){ 
42:     threadStopper.storeCurrentThreads();
43:     threadStopper.startRecordingTime();
44:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
45:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
46:     org.evosuite.runtime.GuiSupport.setHeadless(); 
47:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
48:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
49:   } 
50: 
51:   @After 
52:   public void doneWithTestCase(){ 
53:     threadStopper.killAndJoinClientThreads();
54:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
55:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
56:     resetClasses(); 
57:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
59:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
60:   } 
61: 
62:   public static void setSystemProperties() {
63:  
64:     /*No java.lang.System property to set*/
65:   }
66: 
67:   private static void initializeClasses() {
68:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MultiValueMap_20_tmp__ESTest_scaffolding.class.getClassLoader() ,
69:       "org.apache.commons.collections4.MapIterator",
70:       "org.apache.commons.collections4.iterators.IteratorChain",
71:       "org.apache.commons.collections4.functors.ExceptionFactory",
72:       "org.apache.commons.collections4.map.MultiValueMap$Values",
73:       "org.apache.commons.collections4.map.AbstractMapDecorator",
74:       "org.apache.commons.collections4.Get",
75:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
76:       "org.apache.commons.collections4.CollectionUtils",
77:       "org.apache.commons.collections4.map.MultiValueMap",
78:       "org.apache.commons.collections4.FunctorException",
79:       "org.apache.commons.collections4.map.AbstractIterableMap",
80:       "org.apache.commons.collections4.Factory",
81:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
82:       "org.apache.commons.collections4.Unmodifiable",
83:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
84:       "org.apache.commons.collections4.Transformer",
85:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
86:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
87:       "org.apache.commons.collections4.map.MultiValueMap$1",
88:       "org.apache.commons.collections4.ResettableIterator",
89:       "org.apache.commons.collections4.iterators.EmptyIterator",
90:       "org.apache.commons.collections4.functors.ConstantFactory",
91:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
92:       "org.apache.commons.collections4.Put",
93:       "org.apache.commons.collections4.MultiMap",
94:       "org.apache.commons.collections4.IterableMap",
95:       "org.apache.commons.collections4.IterableGet"
96:     );
97:   } 
98: 
99:   private static void resetClasses() {
100:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MultiValueMap_20_tmp__ESTest_scaffolding.class.getClassLoader()); 
101: 
102:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
103:       "org.apache.commons.collections4.map.AbstractIterableMap",
104:       "org.apache.commons.collections4.map.AbstractMapDecorator",
105:       "org.apache.commons.collections4.map.MultiValueMap",
106:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
107:       "org.apache.commons.collections4.map.MultiValueMap$Values",
108:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
109:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
110:       "org.apache.commons.collections4.map.MultiValueMap$1",
111:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
112:       "org.apache.commons.collections4.iterators.EmptyIterator",
113:       "org.apache.commons.collections4.iterators.EmptyListIterator",
114:       "org.apache.commons.collections4.iterators.EmptyOrderedIterator",
115:       "org.apache.commons.collections4.iterators.AbstractEmptyMapIterator",
116:       "org.apache.commons.collections4.iterators.EmptyMapIterator",
117:       "org.apache.commons.collections4.iterators.EmptyOrderedMapIterator",
118:       "org.apache.commons.collections4.functors.ExceptionFactory",
119:       "org.apache.commons.collections4.iterators.IteratorChain",
120:       "org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter",
121:       "org.apache.commons.collections4.functors.ConstantFactory",
122:       "org.apache.commons.collections4.FunctorException",
123:       "org.apache.commons.collections4.functors.InstantiateFactory",
124:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
125:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
126:       "org.apache.commons.collections4.CollectionUtils"
127:     );
128:   }
129: }

[MASTER] 14:32:19.527 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
HashMap<LinkedList<ArrayList<String>>, Object> hashMap0 = new HashMap<LinkedList<ArrayList<String>>, Object>();
MultiValueMap<LinkedList<ArrayList<String>>, AbstractMap.SimpleEntry<HashMap<Integer, String>, Integer>> multiValueMap0 = MultiValueMap.multiValueMap((Map<LinkedList<ArrayList<String>>, ? super Collection<AbstractMap.SimpleEntry<HashMap<Integer, String>, Integer>>>) hashMap0);
Class<Object> class0 = Object.class;
MultiValueMap<LinkedList<ArrayList<String>>, LinkedList<HashMap>> multiValueMap1 = MultiValueMap.multiValueMap((Map<LinkedList<ArrayList<String>>, ? super LinkedList<LinkedList<HashMap>>>) multiValueMap0, (Class<LinkedList<LinkedList<HashMap>>>) class0);
assertTrue(multiValueMap1.isEmpty());


[MASTER] 14:32:19.560 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_21_1628260339528/org/apache/commons/collections4/map/MultiValueMap_21_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_21_1628260339528/org/apache/commons/collections4/map/MultiValueMap_21_tmp__ESTest_scaffolding.java]]
[MASTER] 14:32:19.560 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Collections-27/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 14:32:19.560 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 14:32:19.561 [logback-2] ERROR JUnitAnalyzer - Diagnostic: constructor MultiValueMap in class org.apache.commons.collections4.map.MultiValueMap<K,V> cannot be applied to given types;
  required: java.util.Map<java.util.AbstractMap.SimpleImmutableEntry<java.lang.String,java.lang.Object>,? super C>,org.apache.commons.collections4.Factory<C>
  found: java.util.Map<java.util.AbstractMap.SimpleImmutableEntry<java.lang.String,java.lang.Object>,capture#1 of ? super java.util.ArrayList<java.lang.String>>,org.apache.commons.collections4.Factory<java.util.ArrayList<java.lang.String>>
  reason: inference variable C has incompatible bounds
    equality constraints: java.util.ArrayList<java.lang.String>
    upper bounds: java.util.ArrayList<java.lang.String>,java.util.Collection<java.util.LinkedList<java.lang.Object>>: 29
[MASTER] 14:32:19.561 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_21_1628260339528/org/apache/commons/collections4/map/MultiValueMap_21_tmp__ESTest.java uses or overrides a deprecated API.: -1
[MASTER] 14:32:19.561 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:deprecation for details.: -1
[MASTER] 14:32:19.561 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Some messages have been simplified; recompile with -Xdiags:verbose to get full output: -1
[MASTER] 14:32:19.562 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_21_1628260339528/org/apache/commons/collections4/map/MultiValueMap_21_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Aug 06 14:32:19 GMT 2021
4:  */
5: 
6: package org.apache.commons.collections4.map;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.AbstractMap;
12: import java.util.ArrayList;
13: import java.util.LinkedList;
14: import java.util.Map;
15: import org.apache.commons.collections4.Factory;
16: import org.apache.commons.collections4.map.MultiValueMap;
17: import org.evosuite.runtime.EvoRunner;
18: import org.evosuite.runtime.EvoRunnerParameters;
19: import org.junit.runner.RunWith;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
22: public class MultiValueMap_21_tmp__ESTest extends MultiValueMap_21_tmp__ESTest_scaffolding {
23: 
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       MultiValueMap<AbstractMap.SimpleImmutableEntry<String, Object>, LinkedList<Object>> multiValueMap0 = new MultiValueMap<AbstractMap.SimpleImmutableEntry<String, Object>, LinkedList<Object>>();
27:       MultiValueMap<AbstractMap.SimpleImmutableEntry<String, Object>, LinkedList<Object>> multiValueMap1 = null;
28:       try {
29:         multiValueMap1 = new MultiValueMap<AbstractMap.SimpleImmutableEntry<String, Object>, LinkedList<Object>>((Map<AbstractMap.SimpleImmutableEntry<String, Object>, ? super ArrayList<String>>) multiValueMap0, (Factory<ArrayList<String>>) null);
30:         fail("Expecting exception: IllegalArgumentException");
31:       
32:       } catch(IllegalArgumentException e) {
33:          //
34:          // The factory must not be null
35:          //
36:          verifyException("org.apache.commons.collections4.map.MultiValueMap", e);
37:       }
38:   }
39: }
RegularFileObject[/tmp/EvoSuite_21_1628260339528/org/apache/commons/collections4/map/MultiValueMap_21_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Aug 06 14:32:19 GMT 2021
5:  */
6: 
7: package org.apache.commons.collections4.map;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: @EvoSuiteClassExclude
17: public class MultiValueMap_21_tmp__ESTest_scaffolding {
18: 
19:   @org.junit.Rule 
20:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
21: 
22:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
23: 
24: 
25:   @BeforeClass 
26:   public static void initEvoSuiteFramework() { 
27:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.map.MultiValueMap"; 
28:     org.evosuite.runtime.GuiSupport.initialize(); 
29:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
31:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
32:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
33:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
34:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
35:     setSystemProperties();
36:     initializeClasses();
37:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
38:   } 
39: 
40:   @Before 
41:   public void initTestCase(){ 
42:     threadStopper.storeCurrentThreads();
43:     threadStopper.startRecordingTime();
44:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
45:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
46:     org.evosuite.runtime.GuiSupport.setHeadless(); 
47:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
48:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
49:   } 
50: 
51:   @After 
52:   public void doneWithTestCase(){ 
53:     threadStopper.killAndJoinClientThreads();
54:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
55:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
56:     resetClasses(); 
57:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
59:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
60:   } 
61: 
62:   public static void setSystemProperties() {
63:  
64:     /*No java.lang.System property to set*/
65:   }
66: 
67:   private static void initializeClasses() {
68:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MultiValueMap_21_tmp__ESTest_scaffolding.class.getClassLoader() ,
69:       "org.apache.commons.collections4.MapIterator",
70:       "org.apache.commons.collections4.iterators.IteratorChain",
71:       "org.apache.commons.collections4.functors.ExceptionFactory",
72:       "org.apache.commons.collections4.map.MultiValueMap$Values",
73:       "org.apache.commons.collections4.map.AbstractMapDecorator",
74:       "org.apache.commons.collections4.Get",
75:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
76:       "org.apache.commons.collections4.CollectionUtils",
77:       "org.apache.commons.collections4.map.MultiValueMap",
78:       "org.apache.commons.collections4.FunctorException",
79:       "org.apache.commons.collections4.map.AbstractIterableMap",
80:       "org.apache.commons.collections4.Factory",
81:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
82:       "org.apache.commons.collections4.Unmodifiable",
83:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
84:       "org.apache.commons.collections4.Transformer",
85:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
86:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
87:       "org.apache.commons.collections4.map.MultiValueMap$1",
88:       "org.apache.commons.collections4.ResettableIterator",
89:       "org.apache.commons.collections4.iterators.EmptyIterator",
90:       "org.apache.commons.collections4.functors.ConstantFactory",
91:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
92:       "org.apache.commons.collections4.Put",
93:       "org.apache.commons.collections4.MultiMap",
94:       "org.apache.commons.collections4.IterableMap",
95:       "org.apache.commons.collections4.IterableGet"
96:     );
97:   } 
98: 
99:   private static void resetClasses() {
100:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MultiValueMap_21_tmp__ESTest_scaffolding.class.getClassLoader()); 
101: 
102:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
103:       "org.apache.commons.collections4.map.AbstractIterableMap",
104:       "org.apache.commons.collections4.map.AbstractMapDecorator",
105:       "org.apache.commons.collections4.map.MultiValueMap",
106:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
107:       "org.apache.commons.collections4.map.MultiValueMap$Values",
108:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
109:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
110:       "org.apache.commons.collections4.map.MultiValueMap$1",
111:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
112:       "org.apache.commons.collections4.iterators.EmptyIterator",
113:       "org.apache.commons.collections4.iterators.EmptyListIterator",
114:       "org.apache.commons.collections4.iterators.EmptyOrderedIterator",
115:       "org.apache.commons.collections4.iterators.AbstractEmptyMapIterator",
116:       "org.apache.commons.collections4.iterators.EmptyMapIterator",
117:       "org.apache.commons.collections4.iterators.EmptyOrderedMapIterator",
118:       "org.apache.commons.collections4.functors.ExceptionFactory",
119:       "org.apache.commons.collections4.iterators.IteratorChain",
120:       "org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter",
121:       "org.apache.commons.collections4.functors.ConstantFactory",
122:       "org.apache.commons.collections4.FunctorException",
123:       "org.apache.commons.collections4.functors.InstantiateFactory",
124:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
125:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
126:       "org.apache.commons.collections4.CollectionUtils"
127:     );
128:   }
129: }

[MASTER] 14:32:19.562 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
MultiValueMap<AbstractMap.SimpleImmutableEntry<String, Object>, LinkedList<Object>> multiValueMap0 = new MultiValueMap<AbstractMap.SimpleImmutableEntry<String, Object>, LinkedList<Object>>();
MultiValueMap<AbstractMap.SimpleImmutableEntry<String, Object>, LinkedList<Object>> multiValueMap1 = new MultiValueMap<AbstractMap.SimpleImmutableEntry<String, Object>, LinkedList<Object>>((Map<AbstractMap.SimpleImmutableEntry<String, Object>, ? super ArrayList<String>>) multiValueMap0, (Factory<ArrayList<String>>) null);

[MASTER] 14:32:19.637 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_23_1628260339593/org/apache/commons/collections4/map/MultiValueMap_23_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_23_1628260339593/org/apache/commons/collections4/map/MultiValueMap_23_tmp__ESTest_scaffolding.java]]
[MASTER] 14:32:19.637 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Collections-27/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 14:32:19.637 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 14:32:19.638 [logback-2] ERROR JUnitAnalyzer - Diagnostic: constructor MultiValueMap in class org.apache.commons.collections4.map.MultiValueMap<K,V> cannot be applied to given types;
  required: java.util.Map<java.util.ArrayList<java.lang.String>,? super C>,org.apache.commons.collections4.Factory<C>
  found: java.util.Map<java.util.ArrayList<java.lang.String>,capture#1 of ? super java.util.LinkedList<java.lang.Object>>,org.apache.commons.collections4.Factory<java.util.LinkedList<java.lang.Object>>
  reason: inference variable C has incompatible bounds
    equality constraints: java.util.LinkedList<java.lang.Object>
    upper bounds: java.util.LinkedList<java.lang.Object>,java.util.Collection<java.util.ArrayList<java.lang.String>>: 30
[MASTER] 14:32:19.638 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_23_1628260339593/org/apache/commons/collections4/map/MultiValueMap_23_tmp__ESTest.java uses or overrides a deprecated API.: -1
[MASTER] 14:32:19.638 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:deprecation for details.: -1
[MASTER] 14:32:19.638 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Some messages have been simplified; recompile with -Xdiags:verbose to get full output: -1
[MASTER] 14:32:19.639 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_23_1628260339593/org/apache/commons/collections4/map/MultiValueMap_23_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Aug 06 14:32:19 GMT 2021
4:  */
5: 
6: package org.apache.commons.collections4.map;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.ArrayList;
12: import java.util.LinkedList;
13: import java.util.Map;
14: import org.apache.commons.collections4.Factory;
15: import org.apache.commons.collections4.functors.ConstantFactory;
16: import org.apache.commons.collections4.map.MultiValueMap;
17: import org.evosuite.runtime.EvoRunner;
18: import org.evosuite.runtime.EvoRunnerParameters;
19: import org.junit.runner.RunWith;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
22: public class MultiValueMap_23_tmp__ESTest extends MultiValueMap_23_tmp__ESTest_scaffolding {
23: 
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       LinkedList<Object> linkedList0 = new LinkedList<Object>();
27:       Factory<LinkedList<Object>> factory0 = ConstantFactory.constantFactory(linkedList0);
28:       MultiValueMap<ArrayList<String>, ArrayList<String>> multiValueMap0 = null;
29:       try {
30:         multiValueMap0 = new MultiValueMap<ArrayList<String>, ArrayList<String>>((Map<ArrayList<String>, ? super LinkedList<Object>>) null, factory0);
31:         fail("Expecting exception: NullPointerException");
32:       
33:       } catch(NullPointerException e) {
34:          //
35:          // Map must not be null.
36:          //
37:          verifyException("org.apache.commons.collections4.map.AbstractMapDecorator", e);
38:       }
39:   }
40: }
RegularFileObject[/tmp/EvoSuite_23_1628260339593/org/apache/commons/collections4/map/MultiValueMap_23_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Aug 06 14:32:19 GMT 2021
5:  */
6: 
7: package org.apache.commons.collections4.map;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: @EvoSuiteClassExclude
17: public class MultiValueMap_23_tmp__ESTest_scaffolding {
18: 
19:   @org.junit.Rule 
20:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
21: 
22:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
23: 
24: 
25:   @BeforeClass 
26:   public static void initEvoSuiteFramework() { 
27:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.map.MultiValueMap"; 
28:     org.evosuite.runtime.GuiSupport.initialize(); 
29:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
31:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
32:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
33:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
34:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
35:     setSystemProperties();
36:     initializeClasses();
37:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
38:   } 
39: 
40:   @Before 
41:   public void initTestCase(){ 
42:     threadStopper.storeCurrentThreads();
43:     threadStopper.startRecordingTime();
44:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
45:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
46:     org.evosuite.runtime.GuiSupport.setHeadless(); 
47:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
48:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
49:   } 
50: 
51:   @After 
52:   public void doneWithTestCase(){ 
53:     threadStopper.killAndJoinClientThreads();
54:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
55:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
56:     resetClasses(); 
57:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
59:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
60:   } 
61: 
62:   public static void setSystemProperties() {
63:  
64:     /*No java.lang.System property to set*/
65:   }
66: 
67:   private static void initializeClasses() {
68:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MultiValueMap_23_tmp__ESTest_scaffolding.class.getClassLoader() ,
69:       "org.apache.commons.collections4.MapIterator",
70:       "org.apache.commons.collections4.iterators.IteratorChain",
71:       "org.apache.commons.collections4.functors.ExceptionFactory",
72:       "org.apache.commons.collections4.map.MultiValueMap$Values",
73:       "org.apache.commons.collections4.map.AbstractMapDecorator",
74:       "org.apache.commons.collections4.Get",
75:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
76:       "org.apache.commons.collections4.CollectionUtils",
77:       "org.apache.commons.collections4.map.MultiValueMap",
78:       "org.apache.commons.collections4.FunctorException",
79:       "org.apache.commons.collections4.map.AbstractIterableMap",
80:       "org.apache.commons.collections4.Factory",
81:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
82:       "org.apache.commons.collections4.Unmodifiable",
83:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
84:       "org.apache.commons.collections4.Transformer",
85:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
86:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
87:       "org.apache.commons.collections4.map.MultiValueMap$1",
88:       "org.apache.commons.collections4.ResettableIterator",
89:       "org.apache.commons.collections4.iterators.EmptyIterator",
90:       "org.apache.commons.collections4.functors.ConstantFactory",
91:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
92:       "org.apache.commons.collections4.Put",
93:       "org.apache.commons.collections4.MultiMap",
94:       "org.apache.commons.collections4.IterableMap",
95:       "org.apache.commons.collections4.IterableGet"
96:     );
97:   } 
98: 
99:   private static void resetClasses() {
100:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MultiValueMap_23_tmp__ESTest_scaffolding.class.getClassLoader()); 
101: 
102:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
103:       "org.apache.commons.collections4.map.AbstractIterableMap",
104:       "org.apache.commons.collections4.map.AbstractMapDecorator",
105:       "org.apache.commons.collections4.map.MultiValueMap",
106:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
107:       "org.apache.commons.collections4.map.MultiValueMap$Values",
108:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
109:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
110:       "org.apache.commons.collections4.map.MultiValueMap$1",
111:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
112:       "org.apache.commons.collections4.iterators.EmptyIterator",
113:       "org.apache.commons.collections4.iterators.EmptyListIterator",
114:       "org.apache.commons.collections4.iterators.EmptyOrderedIterator",
115:       "org.apache.commons.collections4.iterators.AbstractEmptyMapIterator",
116:       "org.apache.commons.collections4.iterators.EmptyMapIterator",
117:       "org.apache.commons.collections4.iterators.EmptyOrderedMapIterator",
118:       "org.apache.commons.collections4.functors.ExceptionFactory",
119:       "org.apache.commons.collections4.iterators.IteratorChain",
120:       "org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter",
121:       "org.apache.commons.collections4.functors.ConstantFactory",
122:       "org.apache.commons.collections4.FunctorException",
123:       "org.apache.commons.collections4.functors.InstantiateFactory",
124:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
125:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
126:       "org.apache.commons.collections4.CollectionUtils"
127:     );
128:   }
129: }

[MASTER] 14:32:19.639 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
LinkedList<Object> linkedList0 = new LinkedList<Object>();
Factory<LinkedList<Object>> factory0 = ConstantFactory.constantFactory(linkedList0);
MultiValueMap<ArrayList<String>, ArrayList<String>> multiValueMap0 = new MultiValueMap<ArrayList<String>, ArrayList<String>>((Map<ArrayList<String>, ? super LinkedList<Object>>) null, factory0);

[MASTER] 14:32:19.673 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_24_1628260339640/org/apache/commons/collections4/map/MultiValueMap_24_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_24_1628260339640/org/apache/commons/collections4/map/MultiValueMap_24_tmp__ESTest_scaffolding.java]]
[MASTER] 14:32:19.673 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Collections-27/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 14:32:19.673 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 14:32:19.673 [logback-2] ERROR JUnitAnalyzer - Diagnostic: constructor MultiValueMap in class org.apache.commons.collections4.map.MultiValueMap<K,V> cannot be applied to given types;
  required: java.util.Map<java.lang.String,? super C>,org.apache.commons.collections4.Factory<C>
  found: java.util.Map<java.lang.String,capture#1 of ? super java.util.LinkedList<java.lang.Object>>,org.apache.commons.collections4.Factory<java.util.LinkedList<java.lang.Object>>
  reason: inference variable C has incompatible bounds
    equality constraints: java.util.LinkedList<java.lang.Object>
    upper bounds: java.util.LinkedList<java.lang.Object>,java.util.Collection<java.lang.Integer>: 35
[MASTER] 14:32:19.674 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_24_1628260339640/org/apache/commons/collections4/map/MultiValueMap_24_tmp__ESTest.java uses or overrides a deprecated API.: -1
[MASTER] 14:32:19.674 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:deprecation for details.: -1
[MASTER] 14:32:19.674 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Some messages have been simplified; recompile with -Xdiags:verbose to get full output: -1
[MASTER] 14:32:19.674 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_24_1628260339640/org/apache/commons/collections4/map/MultiValueMap_24_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Aug 06 14:32:19 GMT 2021
4:  */
5: 
6: package org.apache.commons.collections4.map;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.ArrayList;
12: import java.util.Collection;
13: import java.util.HashMap;
14: import java.util.Iterator;
15: import java.util.LinkedList;
16: import java.util.Map;
17: import org.apache.commons.collections4.Factory;
18: import org.apache.commons.collections4.functors.ConstantFactory;
19: import org.apache.commons.collections4.map.MultiValueMap;
20: import org.evosuite.runtime.EvoRunner;
21: import org.evosuite.runtime.EvoRunnerParameters;
22: import org.junit.runner.RunWith;
23: 
24: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
25: public class MultiValueMap_24_tmp__ESTest extends MultiValueMap_24_tmp__ESTest_scaffolding {
26: 
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       MultiValueMap<ArrayList<String>, Collection<Integer>> multiValueMap0 = new MultiValueMap<ArrayList<String>, Collection<Integer>>();
30:       Iterator<Map.Entry<ArrayList<String>, Collection<Integer>>> iterator0 = (Iterator<Map.Entry<ArrayList<String>, Collection<Integer>>>)multiValueMap0.iterator();
31:       HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
32:       hashMap0.put("6VX|=oM9Pm$0)pvb", iterator0);
33:       LinkedList<Object> linkedList0 = new LinkedList<Object>();
34:       ConstantFactory<LinkedList<Object>> constantFactory0 = new ConstantFactory<LinkedList<Object>>(linkedList0);
35:       MultiValueMap<String, Integer> multiValueMap1 = new MultiValueMap<String, Integer>((Map<String, ? super LinkedList<Object>>) hashMap0, (Factory<LinkedList<Object>>) constantFactory0);
36:       ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
37:       // Undeclared exception!
38:       try { 
39:         multiValueMap1.containsValue((Object) arrayList0);
40:         fail("Expecting exception: ClassCastException");
41:       
42:       } catch(ClassCastException e) {
43:          //
44:          // org.apache.commons.collections4.map.MultiValueMap$1 cannot be cast to java.util.Collection
45:          //
46:          verifyException("org.apache.commons.collections4.map.MultiValueMap", e);
47:       }
48:   }
49: }
RegularFileObject[/tmp/EvoSuite_24_1628260339640/org/apache/commons/collections4/map/MultiValueMap_24_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Aug 06 14:32:19 GMT 2021
5:  */
6: 
7: package org.apache.commons.collections4.map;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: @EvoSuiteClassExclude
17: public class MultiValueMap_24_tmp__ESTest_scaffolding {
18: 
19:   @org.junit.Rule 
20:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
21: 
22:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
23: 
24: 
25:   @BeforeClass 
26:   public static void initEvoSuiteFramework() { 
27:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.map.MultiValueMap"; 
28:     org.evosuite.runtime.GuiSupport.initialize(); 
29:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
31:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
32:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
33:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
34:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
35:     setSystemProperties();
36:     initializeClasses();
37:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
38:   } 
39: 
40:   @Before 
41:   public void initTestCase(){ 
42:     threadStopper.storeCurrentThreads();
43:     threadStopper.startRecordingTime();
44:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
45:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
46:     org.evosuite.runtime.GuiSupport.setHeadless(); 
47:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
48:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
49:   } 
50: 
51:   @After 
52:   public void doneWithTestCase(){ 
53:     threadStopper.killAndJoinClientThreads();
54:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
55:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
56:     resetClasses(); 
57:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
59:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
60:   } 
61: 
62:   public static void setSystemProperties() {
63:  
64:     /*No java.lang.System property to set*/
65:   }
66: 
67:   private static void initializeClasses() {
68:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MultiValueMap_24_tmp__ESTest_scaffolding.class.getClassLoader() ,
69:       "org.apache.commons.collections4.MapIterator",
70:       "org.apache.commons.collections4.iterators.IteratorChain",
71:       "org.apache.commons.collections4.functors.ExceptionFactory",
72:       "org.apache.commons.collections4.map.MultiValueMap$Values",
73:       "org.apache.commons.collections4.map.AbstractMapDecorator",
74:       "org.apache.commons.collections4.Get",
75:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
76:       "org.apache.commons.collections4.CollectionUtils",
77:       "org.apache.commons.collections4.map.MultiValueMap",
78:       "org.apache.commons.collections4.FunctorException",
79:       "org.apache.commons.collections4.map.AbstractIterableMap",
80:       "org.apache.commons.collections4.Factory",
81:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
82:       "org.apache.commons.collections4.Unmodifiable",
83:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
84:       "org.apache.commons.collections4.Transformer",
85:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
86:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
87:       "org.apache.commons.collections4.map.MultiValueMap$1",
88:       "org.apache.commons.collections4.ResettableIterator",
89:       "org.apache.commons.collections4.iterators.EmptyIterator",
90:       "org.apache.commons.collections4.functors.ConstantFactory",
91:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
92:       "org.apache.commons.collections4.Put",
93:       "org.apache.commons.collections4.MultiMap",
94:       "org.apache.commons.collections4.IterableMap",
95:       "org.apache.commons.collections4.IterableGet"
96:     );
97:   } 
98: 
99:   private static void resetClasses() {
100:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MultiValueMap_24_tmp__ESTest_scaffolding.class.getClassLoader()); 
101: 
102:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
103:       "org.apache.commons.collections4.map.AbstractIterableMap",
104:       "org.apache.commons.collections4.map.AbstractMapDecorator",
105:       "org.apache.commons.collections4.map.MultiValueMap",
106:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
107:       "org.apache.commons.collections4.map.MultiValueMap$Values",
108:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
109:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
110:       "org.apache.commons.collections4.map.MultiValueMap$1",
111:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
112:       "org.apache.commons.collections4.iterators.EmptyIterator",
113:       "org.apache.commons.collections4.iterators.EmptyListIterator",
114:       "org.apache.commons.collections4.iterators.EmptyOrderedIterator",
115:       "org.apache.commons.collections4.iterators.AbstractEmptyMapIterator",
116:       "org.apache.commons.collections4.iterators.EmptyMapIterator",
117:       "org.apache.commons.collections4.iterators.EmptyOrderedMapIterator",
118:       "org.apache.commons.collections4.functors.ExceptionFactory",
119:       "org.apache.commons.collections4.iterators.IteratorChain",
120:       "org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter",
121:       "org.apache.commons.collections4.functors.ConstantFactory",
122:       "org.apache.commons.collections4.FunctorException",
123:       "org.apache.commons.collections4.functors.InstantiateFactory",
124:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
125:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
126:       "org.apache.commons.collections4.CollectionUtils"
127:     );
128:   }
129: }

[MASTER] 14:32:19.675 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
MultiValueMap<ArrayList<String>, Collection<Integer>> multiValueMap0 = new MultiValueMap<ArrayList<String>, Collection<Integer>>();
Iterator<Map.Entry<ArrayList<String>, Collection<Integer>>> iterator0 = (Iterator<Map.Entry<ArrayList<String>, Collection<Integer>>>)multiValueMap0.iterator();
HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
hashMap0.put("6VX|=oM9Pm$0)pvb", iterator0);
LinkedList<Object> linkedList0 = new LinkedList<Object>();
ConstantFactory<LinkedList<Object>> constantFactory0 = new ConstantFactory<LinkedList<Object>>(linkedList0);
MultiValueMap<String, Integer> multiValueMap1 = new MultiValueMap<String, Integer>((Map<String, ? super LinkedList<Object>>) hashMap0, (Factory<LinkedList<Object>>) constantFactory0);
ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
multiValueMap1.containsValue((Object) arrayList0);

[MASTER] 14:32:19.712 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_25_1628260339676/org/apache/commons/collections4/map/MultiValueMap_25_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_25_1628260339676/org/apache/commons/collections4/map/MultiValueMap_25_tmp__ESTest_scaffolding.java]]
[MASTER] 14:32:19.712 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Collections-27/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 14:32:19.712 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 14:32:19.713 [logback-2] ERROR JUnitAnalyzer - Diagnostic: constructor MultiValueMap in class org.apache.commons.collections4.map.MultiValueMap<K,V> cannot be applied to given types;
  required: java.util.Map<java.lang.String,? super C>,org.apache.commons.collections4.Factory<C>
  found: java.util.Map<java.lang.String,capture#1 of ? super java.util.LinkedList<java.lang.Object>>,org.apache.commons.collections4.Factory<java.util.LinkedList<java.lang.Object>>
  reason: inference variable C has incompatible bounds
    equality constraints: java.util.LinkedList<java.lang.Object>
    upper bounds: java.util.LinkedList<java.lang.Object>,java.util.Collection<java.lang.Integer>: 29
[MASTER] 14:32:19.713 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_25_1628260339676/org/apache/commons/collections4/map/MultiValueMap_25_tmp__ESTest.java uses or overrides a deprecated API.: -1
[MASTER] 14:32:19.713 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:deprecation for details.: -1
[MASTER] 14:32:19.713 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Some messages have been simplified; recompile with -Xdiags:verbose to get full output: -1
[MASTER] 14:32:19.714 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_25_1628260339676/org/apache/commons/collections4/map/MultiValueMap_25_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Aug 06 14:32:19 GMT 2021
4:  */
5: 
6: package org.apache.commons.collections4.map;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.HashMap;
12: import java.util.LinkedList;
13: import java.util.Map;
14: import org.apache.commons.collections4.Factory;
15: import org.apache.commons.collections4.functors.ExceptionFactory;
16: import org.apache.commons.collections4.map.MultiValueMap;
17: import org.evosuite.runtime.EvoRunner;
18: import org.evosuite.runtime.EvoRunnerParameters;
19: import org.junit.runner.RunWith;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
22: public class MultiValueMap_25_tmp__ESTest extends MultiValueMap_25_tmp__ESTest_scaffolding {
23: 
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
27:       hashMap0.put((String) null, (Object) null);
28:       Factory<LinkedList<Object>> factory0 = ExceptionFactory.exceptionFactory();
29:       MultiValueMap<String, Integer> multiValueMap0 = new MultiValueMap<String, Integer>((Map<String, ? super LinkedList<Object>>) hashMap0, factory0);
30:       // Undeclared exception!
31:       try { 
32:         multiValueMap0.containsValue((Object) hashMap0);
33:         fail("Expecting exception: NullPointerException");
34:       
35:       } catch(NullPointerException e) {
36:       }
37:   }
38: }
RegularFileObject[/tmp/EvoSuite_25_1628260339676/org/apache/commons/collections4/map/MultiValueMap_25_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Aug 06 14:32:19 GMT 2021
5:  */
6: 
7: package org.apache.commons.collections4.map;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: @EvoSuiteClassExclude
17: public class MultiValueMap_25_tmp__ESTest_scaffolding {
18: 
19:   @org.junit.Rule 
20:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
21: 
22:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
23: 
24: 
25:   @BeforeClass 
26:   public static void initEvoSuiteFramework() { 
27:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.map.MultiValueMap"; 
28:     org.evosuite.runtime.GuiSupport.initialize(); 
29:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
31:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
32:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
33:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
34:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
35:     setSystemProperties();
36:     initializeClasses();
37:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
38:   } 
39: 
40:   @Before 
41:   public void initTestCase(){ 
42:     threadStopper.storeCurrentThreads();
43:     threadStopper.startRecordingTime();
44:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
45:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
46:     org.evosuite.runtime.GuiSupport.setHeadless(); 
47:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
48:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
49:   } 
50: 
51:   @After 
52:   public void doneWithTestCase(){ 
53:     threadStopper.killAndJoinClientThreads();
54:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
55:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
56:     resetClasses(); 
57:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
59:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
60:   } 
61: 
62:   public static void setSystemProperties() {
63:  
64:     /*No java.lang.System property to set*/
65:   }
66: 
67:   private static void initializeClasses() {
68:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MultiValueMap_25_tmp__ESTest_scaffolding.class.getClassLoader() ,
69:       "org.apache.commons.collections4.MapIterator",
70:       "org.apache.commons.collections4.iterators.IteratorChain",
71:       "org.apache.commons.collections4.functors.ExceptionFactory",
72:       "org.apache.commons.collections4.map.MultiValueMap$Values",
73:       "org.apache.commons.collections4.map.AbstractMapDecorator",
74:       "org.apache.commons.collections4.Get",
75:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
76:       "org.apache.commons.collections4.CollectionUtils",
77:       "org.apache.commons.collections4.map.MultiValueMap",
78:       "org.apache.commons.collections4.FunctorException",
79:       "org.apache.commons.collections4.map.AbstractIterableMap",
80:       "org.apache.commons.collections4.Factory",
81:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
82:       "org.apache.commons.collections4.Unmodifiable",
83:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
84:       "org.apache.commons.collections4.Transformer",
85:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
86:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
87:       "org.apache.commons.collections4.map.MultiValueMap$1",
88:       "org.apache.commons.collections4.ResettableIterator",
89:       "org.apache.commons.collections4.iterators.EmptyIterator",
90:       "org.apache.commons.collections4.functors.ConstantFactory",
91:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
92:       "org.apache.commons.collections4.Put",
93:       "org.apache.commons.collections4.MultiMap",
94:       "org.apache.commons.collections4.IterableMap",
95:       "org.apache.commons.collections4.IterableGet"
96:     );
97:   } 
98: 
99:   private static void resetClasses() {
100:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MultiValueMap_25_tmp__ESTest_scaffolding.class.getClassLoader()); 
101: 
102:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
103:       "org.apache.commons.collections4.map.AbstractIterableMap",
104:       "org.apache.commons.collections4.map.AbstractMapDecorator",
105:       "org.apache.commons.collections4.map.MultiValueMap",
106:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
107:       "org.apache.commons.collections4.map.MultiValueMap$Values",
108:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
109:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
110:       "org.apache.commons.collections4.map.MultiValueMap$1",
111:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
112:       "org.apache.commons.collections4.iterators.EmptyIterator",
113:       "org.apache.commons.collections4.iterators.EmptyListIterator",
114:       "org.apache.commons.collections4.iterators.EmptyOrderedIterator",
115:       "org.apache.commons.collections4.iterators.AbstractEmptyMapIterator",
116:       "org.apache.commons.collections4.iterators.EmptyMapIterator",
117:       "org.apache.commons.collections4.iterators.EmptyOrderedMapIterator",
118:       "org.apache.commons.collections4.functors.ExceptionFactory",
119:       "org.apache.commons.collections4.iterators.IteratorChain",
120:       "org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter",
121:       "org.apache.commons.collections4.functors.ConstantFactory",
122:       "org.apache.commons.collections4.FunctorException",
123:       "org.apache.commons.collections4.functors.InstantiateFactory",
124:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
125:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
126:       "org.apache.commons.collections4.CollectionUtils"
127:     );
128:   }
129: }

[MASTER] 14:32:19.714 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
hashMap0.put((String) null, (Object) null);
Factory<LinkedList<Object>> factory0 = ExceptionFactory.exceptionFactory();
MultiValueMap<String, Integer> multiValueMap0 = new MultiValueMap<String, Integer>((Map<String, ? super LinkedList<Object>>) hashMap0, factory0);
multiValueMap0.containsValue((Object) hashMap0);

[MASTER] 14:32:20.139 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_34_1628260340113/org/apache/commons/collections4/map/MultiValueMap_34_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_34_1628260340113/org/apache/commons/collections4/map/MultiValueMap_34_tmp__ESTest_scaffolding.java]]
[MASTER] 14:32:20.140 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Collections-27/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 14:32:20.140 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 14:32:20.140 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.lang.Class<java.lang.Object> cannot be converted to java.lang.Class<java.util.Collection<java.util.AbstractMap.SimpleEntry<java.lang.Integer,java.util.LinkedList>>>: 29
[MASTER] 14:32:20.140 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_34_1628260340113/org/apache/commons/collections4/map/MultiValueMap_34_tmp__ESTest.java uses or overrides a deprecated API.: -1
[MASTER] 14:32:20.140 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:deprecation for details.: -1
[MASTER] 14:32:20.184 [logback-1] WARN  JUnitAnalyzer - Failed to create tmp dir
[MASTER] 14:32:20.141 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_34_1628260340113/org/apache/commons/collections4/map/MultiValueMap_34_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Aug 06 14:32:20 GMT 2021
4:  */
5: 
6: package org.apache.commons.collections4.map;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.AbstractMap;
12: import java.util.ArrayList;
13: import java.util.Collection;
14: import java.util.LinkedList;
15: import java.util.Map;
16: import org.apache.commons.collections4.map.MultiValueMap;
17: import org.evosuite.runtime.EvoRunner;
18: import org.evosuite.runtime.EvoRunnerParameters;
19: import org.junit.runner.RunWith;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
22: public class MultiValueMap_34_tmp__ESTest extends MultiValueMap_34_tmp__ESTest_scaffolding {
23: 
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       Class<Object> class0 = Object.class;
27:       // Undeclared exception!
28:       try { 
29:         MultiValueMap.multiValueMap((Map<LinkedList<ArrayList<Object>>, ? super Collection<AbstractMap.SimpleEntry<Integer, LinkedList>>>) null, (Class<Collection<AbstractMap.SimpleEntry<Integer, LinkedList>>>) class0);
30:         fail("Expecting exception: NullPointerException");
31:       
32:       } catch(NullPointerException e) {
33:          //
34:          // Map must not be null.
35:          //
36:          verifyException("org.apache.commons.collections4.map.AbstractMapDecorator", e);
37:       }
38:   }
39: }
RegularFileObject[/tmp/EvoSuite_34_1628260340113/org/apache/commons/collections4/map/MultiValueMap_34_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Aug 06 14:32:20 GMT 2021
5:  */
6: 
7: package org.apache.commons.collections4.map;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: @EvoSuiteClassExclude
17: public class MultiValueMap_34_tmp__ESTest_scaffolding {
18: 
19:   @org.junit.Rule 
20:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
21: 
22:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
23: 
24: 
25:   @BeforeClass 
26:   public static void initEvoSuiteFramework() { 
27:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.map.MultiValueMap"; 
28:     org.evosuite.runtime.GuiSupport.initialize(); 
29:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
31:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
32:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
33:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
34:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
35:     setSystemProperties();
36:     initializeClasses();
37:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
38:   } 
39: 
40:   @Before 
41:   public void initTestCase(){ 
42:     threadStopper.storeCurrentThreads();
43:     threadStopper.startRecordingTime();
44:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
45:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
46:     org.evosuite.runtime.GuiSupport.setHeadless(); 
47:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
48:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
49:   } 
50: 
51:   @After 
52:   public void doneWithTestCase(){ 
53:     threadStopper.killAndJoinClientThreads();
54:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
55:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
56:     resetClasses(); 
57:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
59:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
60:   } 
61: 
62:   public static void setSystemProperties() {
63:  
64:     /*No java.lang.System property to set*/
65:   }
66: 
67:   private static void initializeClasses() {
68:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MultiValueMap_34_tmp__ESTest_scaffolding.class.getClassLoader() ,
69:       "org.apache.commons.collections4.MapIterator",
70:       "org.apache.commons.collections4.iterators.IteratorChain",
71:       "org.apache.commons.collections4.functors.ExceptionFactory",
72:       "org.apache.commons.collections4.map.MultiValueMap$Values",
73:       "org.apache.commons.collections4.map.AbstractMapDecorator",
74:       "org.apache.commons.collections4.Get",
75:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
76:       "org.apache.commons.collections4.CollectionUtils",
77:       "org.apache.commons.collections4.map.MultiValueMap",
78:       "org.apache.commons.collections4.FunctorException",
79:       "org.apache.commons.collections4.map.AbstractIterableMap",
80:       "org.apache.commons.collections4.Factory",
81:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
82:       "org.apache.commons.collections4.Unmodifiable",
83:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
84:       "org.apache.commons.collections4.Transformer",
85:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
86:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
87:       "org.apache.commons.collections4.map.MultiValueMap$1",
88:       "org.apache.commons.collections4.ResettableIterator",
89:       "org.apache.commons.collections4.iterators.EmptyIterator",
90:       "org.apache.commons.collections4.functors.ConstantFactory",
91:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
92:       "org.apache.commons.collections4.Put",
93:       "org.apache.commons.collections4.MultiMap",
94:       "org.apache.commons.collections4.IterableMap",
95:       "org.apache.commons.collections4.IterableGet"
96:     );
97:   } 
98: 
99:   private static void resetClasses() {
100:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MultiValueMap_34_tmp__ESTest_scaffolding.class.getClassLoader()); 
101: 
102:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
103:       "org.apache.commons.collections4.map.AbstractIterableMap",
104:       "org.apache.commons.collections4.map.AbstractMapDecorator",
105:       "org.apache.commons.collections4.map.MultiValueMap",
106:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
107:       "org.apache.commons.collections4.map.MultiValueMap$Values",
108:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
109:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
110:       "org.apache.commons.collections4.map.MultiValueMap$1",
111:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
112:       "org.apache.commons.collections4.iterators.EmptyIterator",
113:       "org.apache.commons.collections4.iterators.EmptyListIterator",
114:       "org.apache.commons.collections4.iterators.EmptyOrderedIterator",
115:       "org.apache.commons.collections4.iterators.AbstractEmptyMapIterator",
116:       "org.apache.commons.collections4.iterators.EmptyMapIterator",
117:       "org.apache.commons.collections4.iterators.EmptyOrderedMapIterator",
118:       "org.apache.commons.collections4.functors.ExceptionFactory",
119:       "org.apache.commons.collections4.iterators.IteratorChain",
120:       "org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter",
121:       "org.apache.commons.collections4.functors.ConstantFactory",
122:       "org.apache.commons.collections4.FunctorException",
123:       "org.apache.commons.collections4.functors.InstantiateFactory",
124:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
125:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
126:       "org.apache.commons.collections4.CollectionUtils"
127:     );
128:   }
129: }

[MASTER] 14:32:20.141 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
Class<Object> class0 = Object.class;
MultiValueMap.multiValueMap((Map<LinkedList<ArrayList<Object>>, ? super Collection<AbstractMap.SimpleEntry<Integer, LinkedList>>>) null, (Class<Collection<AbstractMap.SimpleEntry<Integer, LinkedList>>>) class0);

[MASTER] 14:32:20.184 [logback-2] ERROR JUnitAnalyzer - Cannot create tmp dir: /tmp/EvoSuite_36_1628260340184
[MASTER] 14:32:20.463 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:32:20.602 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:32:20.706 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:32:20.801 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:32:20.884 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:32:20.960 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:32:21.050 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:32:21.141 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:32:21.217 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:32:21.299 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:32:21.380 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:32:21.436 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:32:21.484 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:32:21.549 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:32:21.599 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:32:21.668 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:32:21.758 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:32:21.818 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:32:21.874 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:32:21.941 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:32:22.070 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:32:22.134 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:32:22.193 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:32:22.344 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:32:22.392 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:32:22.445 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:32:22.522 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:32:22.577 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:32:22.626 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:32:22.649 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_66_1628260342627/org/apache/commons/collections4/map/MultiValueMap_65_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_66_1628260342627/org/apache/commons/collections4/map/MultiValueMap_65_tmp__ESTest_scaffolding.java]]
[MASTER] 14:32:22.649 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Collections-27/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 14:32:22.649 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 14:32:22.650 [logback-2] ERROR JUnitAnalyzer - Diagnostic: constructor MultiValueMap in class org.apache.commons.collections4.map.MultiValueMap<K,V> cannot be applied to given types;
  required: java.util.Map<java.util.AbstractMap.SimpleEntry<java.lang.Integer,java.lang.String>,? super C>,org.apache.commons.collections4.Factory<C>
  found: java.util.Map<java.util.AbstractMap.SimpleEntry<java.lang.Integer,java.lang.String>,capture#1 of ? super java.util.Collection<java.lang.Object>>,org.apache.commons.collections4.Factory<java.util.Collection<java.lang.Object>>
  reason: inference variable C has incompatible bounds
    equality constraints: java.util.Collection<java.lang.Object>
    upper bounds: java.util.Collection<java.lang.Object>,java.util.Collection<java.lang.String>: 34
[MASTER] 14:32:22.650 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_66_1628260342627/org/apache/commons/collections4/map/MultiValueMap_65_tmp__ESTest.java uses or overrides a deprecated API.: -1
[MASTER] 14:32:22.650 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:deprecation for details.: -1
[MASTER] 14:32:22.650 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Some messages have been simplified; recompile with -Xdiags:verbose to get full output: -1
[MASTER] 14:32:22.651 [logback-1] WARN  JUnitAnalyzer - Failed to compile the test cases 
[MASTER] 14:32:22.651 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_66_1628260342627/org/apache/commons/collections4/map/MultiValueMap_65_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Aug 06 14:32:22 GMT 2021
4:  */
5: 
6: package org.apache.commons.collections4.map;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.AbstractMap;
12: import java.util.ArrayList;
13: import java.util.Collection;
14: import java.util.HashMap;
15: import java.util.Map;
16: import org.apache.commons.collections4.Factory;
17: import org.apache.commons.collections4.functors.ExceptionFactory;
18: import org.apache.commons.collections4.map.MultiValueMap;
19: import org.evosuite.runtime.EvoRunner;
20: import org.evosuite.runtime.EvoRunnerParameters;
21: import org.junit.runner.RunWith;
22: 
23: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
24: public class MultiValueMap_65_tmp__ESTest extends MultiValueMap_65_tmp__ESTest_scaffolding {
25: 
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       Integer integer0 = new Integer(0);
29:       AbstractMap.SimpleEntry<Integer, String> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Integer, String>(integer0, "kq<hy]O");
30:       HashMap<AbstractMap.SimpleEntry<Integer, String>, Object> hashMap0 = new HashMap<AbstractMap.SimpleEntry<Integer, String>, Object>();
31:       hashMap0.put(abstractMap_SimpleEntry0, abstractMap_SimpleEntry0);
32:       MultiValueMap<AbstractMap.SimpleEntry<Integer, String>, ArrayList<AbstractMap.SimpleEntry>> multiValueMap0 = MultiValueMap.multiValueMap((Map<AbstractMap.SimpleEntry<Integer, String>, ? super Collection<ArrayList<AbstractMap.SimpleEntry>>>) hashMap0);
33:       Factory<Collection<Object>> factory0 = ExceptionFactory.exceptionFactory();
34:       MultiValueMap<AbstractMap.SimpleEntry<Integer, String>, String> multiValueMap1 = new MultiValueMap<AbstractMap.SimpleEntry<Integer, String>, String>((Map<AbstractMap.SimpleEntry<Integer, String>, ? super Collection<Object>>) multiValueMap0, factory0);
35:       // Undeclared exception!
36:       try { 
37:         multiValueMap1.put(abstractMap_SimpleEntry0, abstractMap_SimpleEntry0);
38:         fail("Expecting exception: ClassCastException");
39:       
40:       } catch(ClassCastException e) {
41:          //
42:          // java.util.AbstractMap$SimpleEntry cannot be cast to java.util.Collection
43:          //
44:          verifyException("org.apache.commons.collections4.map.MultiValueMap", e);
45:       }
46:   }
47: }
RegularFileObject[/tmp/EvoSuite_66_1628260342627/org/apache/commons/collections4/map/MultiValueMap_65_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Aug 06 14:32:22 GMT 2021
5:  */
6: 
7: package org.apache.commons.collections4.map;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: @EvoSuiteClassExclude
17: public class MultiValueMap_65_tmp__ESTest_scaffolding {
18: 
19:   @org.junit.Rule 
20:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
21: 
22:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
23: 
24: 
25:   @BeforeClass 
26:   public static void initEvoSuiteFramework() { 
27:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.map.MultiValueMap"; 
28:     org.evosuite.runtime.GuiSupport.initialize(); 
29:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
31:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
32:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
33:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
34:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
35:     setSystemProperties();
36:     initializeClasses();
37:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
38:   } 
39: 
40:   @Before 
41:   public void initTestCase(){ 
42:     threadStopper.storeCurrentThreads();
43:     threadStopper.startRecordingTime();
44:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
45:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
46:     org.evosuite.runtime.GuiSupport.setHeadless(); 
47:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
48:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
49:   } 
50: 
51:   @After 
52:   public void doneWithTestCase(){ 
53:     threadStopper.killAndJoinClientThreads();
54:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
55:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
56:     resetClasses(); 
57:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
59:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
60:   } 
61: 
62:   public static void setSystemProperties() {
63:  
64:     /*No java.lang.System property to set*/
65:   }
66: 
67:   private static void initializeClasses() {
68:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MultiValueMap_65_tmp__ESTest_scaffolding.class.getClassLoader() ,
69:       "org.apache.commons.collections4.MapIterator",
70:       "org.apache.commons.collections4.iterators.IteratorChain",
71:       "org.apache.commons.collections4.functors.ExceptionFactory",
72:       "org.apache.commons.collections4.map.MultiValueMap$Values",
73:       "org.apache.commons.collections4.map.AbstractMapDecorator",
74:       "org.apache.commons.collections4.Get",
75:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
76:       "org.apache.commons.collections4.CollectionUtils",
77:       "org.apache.commons.collections4.map.MultiValueMap",
78:       "org.apache.commons.collections4.FunctorException",
79:       "org.apache.commons.collections4.map.AbstractIterableMap",
80:       "org.apache.commons.collections4.Factory",
81:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
82:       "org.apache.commons.collections4.Unmodifiable",
83:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
84:       "org.apache.commons.collections4.Transformer",
85:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
86:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
87:       "org.apache.commons.collections4.map.MultiValueMap$1",
88:       "org.apache.commons.collections4.ResettableIterator",
89:       "org.apache.commons.collections4.iterators.EmptyIterator",
90:       "org.apache.commons.collections4.functors.ConstantFactory",
91:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
92:       "org.apache.commons.collections4.Put",
93:       "org.apache.commons.collections4.MultiMap",
94:       "org.apache.commons.collections4.IterableMap",
95:       "org.apache.commons.collections4.IterableGet"
96:     );
97:   } 
98: 
99:   private static void resetClasses() {
100:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MultiValueMap_65_tmp__ESTest_scaffolding.class.getClassLoader()); 
101: 
102:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
103:       "org.apache.commons.collections4.map.AbstractIterableMap",
104:       "org.apache.commons.collections4.map.AbstractMapDecorator",
105:       "org.apache.commons.collections4.map.MultiValueMap",
106:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
107:       "org.apache.commons.collections4.map.MultiValueMap$Values",
108:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
109:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
110:       "org.apache.commons.collections4.map.MultiValueMap$1",
111:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
112:       "org.apache.commons.collections4.iterators.EmptyIterator",
113:       "org.apache.commons.collections4.iterators.EmptyListIterator",
114:       "org.apache.commons.collections4.iterators.EmptyOrderedIterator",
115:       "org.apache.commons.collections4.iterators.AbstractEmptyMapIterator",
116:       "org.apache.commons.collections4.iterators.EmptyMapIterator",
117:       "org.apache.commons.collections4.iterators.EmptyOrderedMapIterator",
118:       "org.apache.commons.collections4.functors.ExceptionFactory",
119:       "org.apache.commons.collections4.iterators.IteratorChain",
120:       "org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter",
121:       "org.apache.commons.collections4.functors.ConstantFactory",
122:       "org.apache.commons.collections4.FunctorException",
123:       "org.apache.commons.collections4.functors.InstantiateFactory",
124:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
125:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
126:       "org.apache.commons.collections4.CollectionUtils"
127:     );
128:   }
129: }

[MASTER] 14:32:22.698 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:32:23.568 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_68_1628260342699/org/apache/commons/collections4/map/MultiValueMap_67_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_68_1628260342699/org/apache/commons/collections4/map/MultiValueMap_67_tmp__ESTest_scaffolding.java]]
[MASTER] 14:32:23.568 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Collections-27/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 14:32:23.568 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 14:32:23.570 [logback-2] ERROR JUnitAnalyzer - Diagnostic: constructor MultiValueMap in class org.apache.commons.collections4.map.MultiValueMap<K,V> cannot be applied to given types;
  required: java.util.Map<java.lang.Object,? super C>,org.apache.commons.collections4.Factory<C>
  found: java.util.Map<java.lang.Object,capture#1 of ? super java.util.LinkedList<java.lang.Object>>,org.apache.commons.collections4.Factory<java.util.LinkedList<java.lang.Object>>
  reason: inference variable C has incompatible bounds
    equality constraints: java.util.LinkedList<java.lang.Object>
    upper bounds: java.util.LinkedList<java.lang.Object>,java.util.Collection<java.util.AbstractMap.SimpleEntry<java.lang.Object,java.lang.Object>>: 32
[MASTER] 14:32:23.570 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_68_1628260342699/org/apache/commons/collections4/map/MultiValueMap_67_tmp__ESTest.java uses or overrides a deprecated API.: -1
[MASTER] 14:32:23.570 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:deprecation for details.: -1
[MASTER] 14:32:23.571 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Some messages have been simplified; recompile with -Xdiags:verbose to get full output: -1
[MASTER] 14:32:23.571 [logback-1] WARN  JUnitAnalyzer - Failed to compile the test cases 
[MASTER] 14:32:23.571 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_68_1628260342699/org/apache/commons/collections4/map/MultiValueMap_67_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Aug 06 14:32:23 GMT 2021
4:  */
5: 
6: package org.apache.commons.collections4.map;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.AbstractMap;
12: import java.util.ArrayList;
13: import java.util.Collection;
14: import java.util.HashMap;
15: import java.util.LinkedList;
16: import java.util.Map;
17: import org.apache.commons.collections4.Factory;
18: import org.apache.commons.collections4.functors.ConstantFactory;
19: import org.apache.commons.collections4.map.MultiValueMap;
20: import org.evosuite.runtime.EvoRunner;
21: import org.evosuite.runtime.EvoRunnerParameters;
22: import org.junit.runner.RunWith;
23: 
24: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
25: public class MultiValueMap_67_tmp__ESTest extends MultiValueMap_67_tmp__ESTest_scaffolding {
26: 
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>(2147483645);
30:       LinkedList<Object> linkedList0 = new LinkedList<Object>();
31:       ConstantFactory<LinkedList<Object>> constantFactory0 = new ConstantFactory<LinkedList<Object>>(linkedList0);
32:       MultiValueMap<Object, AbstractMap.SimpleEntry<Object, Object>> multiValueMap0 = new MultiValueMap<Object, AbstractMap.SimpleEntry<Object, Object>>((Map<Object, ? super LinkedList<Object>>) hashMap0, (Factory<LinkedList<Object>>) constantFactory0);
33:       ArrayList<String> arrayList0 = new ArrayList<String>();
34:       HashMap<ArrayList<Integer>, Object> hashMap1 = new HashMap<ArrayList<Integer>, Object>();
35:       MultiValueMap<ArrayList<Integer>, Object> multiValueMap1 = MultiValueMap.multiValueMap((Map<ArrayList<Integer>, ? super Collection<Object>>) hashMap1);
36:       // Undeclared exception!
37:       multiValueMap0.put(arrayList0, multiValueMap1);
38:   }
39: }
RegularFileObject[/tmp/EvoSuite_68_1628260342699/org/apache/commons/collections4/map/MultiValueMap_67_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Aug 06 14:32:23 GMT 2021
5:  */
6: 
7: package org.apache.commons.collections4.map;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: @EvoSuiteClassExclude
17: public class MultiValueMap_67_tmp__ESTest_scaffolding {
18: 
19:   @org.junit.Rule 
20:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
21: 
22:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
23: 
24: 
25:   @BeforeClass 
26:   public static void initEvoSuiteFramework() { 
27:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.map.MultiValueMap"; 
28:     org.evosuite.runtime.GuiSupport.initialize(); 
29:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
31:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
32:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
33:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
34:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
35:     setSystemProperties();
36:     initializeClasses();
37:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
38:   } 
39: 
40:   @Before 
41:   public void initTestCase(){ 
42:     threadStopper.storeCurrentThreads();
43:     threadStopper.startRecordingTime();
44:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
45:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
46:     org.evosuite.runtime.GuiSupport.setHeadless(); 
47:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
48:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
49:   } 
50: 
51:   @After 
52:   public void doneWithTestCase(){ 
53:     threadStopper.killAndJoinClientThreads();
54:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
55:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
56:     resetClasses(); 
57:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
59:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
60:   } 
61: 
62:   public static void setSystemProperties() {
63:  
64:     /*No java.lang.System property to set*/
65:   }
66: 
67:   private static void initializeClasses() {
68:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MultiValueMap_67_tmp__ESTest_scaffolding.class.getClassLoader() ,
69:       "org.apache.commons.collections4.MapIterator",
70:       "org.apache.commons.collections4.iterators.IteratorChain",
71:       "org.apache.commons.collections4.functors.ExceptionFactory",
72:       "org.apache.commons.collections4.map.MultiValueMap$Values",
73:       "org.apache.commons.collections4.map.AbstractMapDecorator",
74:       "org.apache.commons.collections4.Get",
75:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
76:       "org.apache.commons.collections4.CollectionUtils",
77:       "org.apache.commons.collections4.map.MultiValueMap",
78:       "org.apache.commons.collections4.FunctorException",
79:       "org.apache.commons.collections4.map.AbstractIterableMap",
80:       "org.apache.commons.collections4.Factory",
81:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
82:       "org.apache.commons.collections4.Unmodifiable",
83:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
84:       "org.apache.commons.collections4.Transformer",
85:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
86:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
87:       "org.apache.commons.collections4.map.MultiValueMap$1",
88:       "org.apache.commons.collections4.ResettableIterator",
89:       "org.apache.commons.collections4.iterators.EmptyIterator",
90:       "org.apache.commons.collections4.functors.ConstantFactory",
91:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
92:       "org.apache.commons.collections4.Put",
93:       "org.apache.commons.collections4.MultiMap",
94:       "org.apache.commons.collections4.IterableMap",
95:       "org.apache.commons.collections4.IterableGet"
96:     );
97:   } 
98: 
99:   private static void resetClasses() {
100:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MultiValueMap_67_tmp__ESTest_scaffolding.class.getClassLoader()); 
101: 
102:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
103:       "org.apache.commons.collections4.map.AbstractIterableMap",
104:       "org.apache.commons.collections4.map.AbstractMapDecorator",
105:       "org.apache.commons.collections4.map.MultiValueMap",
106:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
107:       "org.apache.commons.collections4.map.MultiValueMap$Values",
108:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
109:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
110:       "org.apache.commons.collections4.map.MultiValueMap$1",
111:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
112:       "org.apache.commons.collections4.iterators.EmptyIterator",
113:       "org.apache.commons.collections4.iterators.EmptyListIterator",
114:       "org.apache.commons.collections4.iterators.EmptyOrderedIterator",
115:       "org.apache.commons.collections4.iterators.AbstractEmptyMapIterator",
116:       "org.apache.commons.collections4.iterators.EmptyMapIterator",
117:       "org.apache.commons.collections4.iterators.EmptyOrderedMapIterator",
118:       "org.apache.commons.collections4.functors.ExceptionFactory",
119:       "org.apache.commons.collections4.iterators.IteratorChain",
120:       "org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter",
121:       "org.apache.commons.collections4.functors.ConstantFactory",
122:       "org.apache.commons.collections4.FunctorException",
123:       "org.apache.commons.collections4.functors.InstantiateFactory",
124:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
125:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
126:       "org.apache.commons.collections4.CollectionUtils"
127:     );
128:   }
129: }

[MASTER] 14:32:23.691 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:32:23.747 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:32:23.797 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:32:23.842 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:32:23.957 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:32:23.983 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_74_1628260343958/org/apache/commons/collections4/map/MultiValueMap_73_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_74_1628260343958/org/apache/commons/collections4/map/MultiValueMap_73_tmp__ESTest_scaffolding.java]]
[MASTER] 14:32:23.983 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Collections-27/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 14:32:23.983 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 14:32:23.984 [logback-2] ERROR JUnitAnalyzer - Diagnostic: constructor MultiValueMap in class org.apache.commons.collections4.map.MultiValueMap<K,V> cannot be applied to given types;
  required: java.util.Map<java.lang.String,? super C>,org.apache.commons.collections4.Factory<C>
  found: java.util.Map<java.lang.String,capture#1 of ? super java.util.Collection<java.lang.Object>>,org.apache.commons.collections4.Factory<java.util.Collection<java.lang.Object>>
  reason: inference variable C has incompatible bounds
    equality constraints: java.util.Collection<java.lang.Object>
    upper bounds: java.util.Collection<java.lang.Object>,java.util.Collection<java.util.AbstractMap.SimpleImmutableEntry<java.lang.Integer,java.lang.String>>: 37
[MASTER] 14:32:23.984 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_74_1628260343958/org/apache/commons/collections4/map/MultiValueMap_73_tmp__ESTest.java uses or overrides a deprecated API.: -1
[MASTER] 14:32:23.984 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:deprecation for details.: -1
[MASTER] 14:32:23.984 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Some messages have been simplified; recompile with -Xdiags:verbose to get full output: -1
[MASTER] 14:32:23.984 [logback-1] WARN  JUnitAnalyzer - Failed to compile the test cases 
[MASTER] 14:32:23.984 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_74_1628260343958/org/apache/commons/collections4/map/MultiValueMap_73_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Aug 06 14:32:23 GMT 2021
4:  */
5: 
6: package org.apache.commons.collections4.map;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.AbstractMap;
12: import java.util.ArrayList;
13: import java.util.Collection;
14: import java.util.LinkedList;
15: import java.util.Map;
16: import org.apache.commons.collections4.Factory;
17: import org.apache.commons.collections4.functors.ConstantFactory;
18: import org.apache.commons.collections4.map.MultiValueMap;
19: import org.evosuite.runtime.EvoRunner;
20: import org.evosuite.runtime.EvoRunnerParameters;
21: import org.junit.runner.RunWith;
22: 
23: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
24: public class MultiValueMap_73_tmp__ESTest extends MultiValueMap_73_tmp__ESTest_scaffolding {
25: 
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       LinkedList<AbstractMap.SimpleImmutableEntry<Integer, String>> linkedList0 = new LinkedList<AbstractMap.SimpleImmutableEntry<Integer, String>>();
29:       linkedList0.add((AbstractMap.SimpleImmutableEntry<Integer, String>) null);
30:       MultiValueMap<String, LinkedList<String>> multiValueMap0 = new MultiValueMap<String, LinkedList<String>>();
31:       MultiValueMap<Object, ArrayList<String>> multiValueMap1 = new MultiValueMap<Object, ArrayList<String>>();
32:       LinkedList<MultiValueMap<String, Object>> linkedList1 = new LinkedList<MultiValueMap<String, Object>>();
33:       ConstantFactory<LinkedList<MultiValueMap<String, Object>>> constantFactory0 = new ConstantFactory<LinkedList<MultiValueMap<String, Object>>>(linkedList1);
34:       MultiValueMap<Object, MultiValueMap<String, Object>> multiValueMap2 = MultiValueMap.multiValueMap((Map<Object, ? super LinkedList<MultiValueMap<String, Object>>>) multiValueMap1, (Factory<LinkedList<MultiValueMap<String, Object>>>) constantFactory0);
35:       Collection<Object> collection0 = multiValueMap2.values();
36:       Factory<Collection<Object>> factory0 = ConstantFactory.constantFactory(collection0);
37:       MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>> multiValueMap3 = new MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>>((Map<String, ? super Collection<Object>>) multiValueMap0, factory0);
38:       // Undeclared exception!
39:       try { 
40:         multiValueMap3.putAll((String) null, (Collection<AbstractMap.SimpleImmutableEntry<Integer, String>>) linkedList0);
41:         fail("Expecting exception: UnsupportedOperationException");
42:       
43:       } catch(UnsupportedOperationException e) {
44:          //
45:          // no message in exception (getMessage() returned null)
46:          //
47:          verifyException("java.util.AbstractCollection", e);
48:       }
49:   }
50: }
RegularFileObject[/tmp/EvoSuite_74_1628260343958/org/apache/commons/collections4/map/MultiValueMap_73_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Aug 06 14:32:23 GMT 2021
5:  */
6: 
7: package org.apache.commons.collections4.map;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: @EvoSuiteClassExclude
17: public class MultiValueMap_73_tmp__ESTest_scaffolding {
18: 
19:   @org.junit.Rule 
20:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
21: 
22:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
23: 
24: 
25:   @BeforeClass 
26:   public static void initEvoSuiteFramework() { 
27:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.map.MultiValueMap"; 
28:     org.evosuite.runtime.GuiSupport.initialize(); 
29:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
31:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
32:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
33:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
34:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
35:     setSystemProperties();
36:     initializeClasses();
37:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
38:   } 
39: 
40:   @Before 
41:   public void initTestCase(){ 
42:     threadStopper.storeCurrentThreads();
43:     threadStopper.startRecordingTime();
44:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
45:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
46:     org.evosuite.runtime.GuiSupport.setHeadless(); 
47:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
48:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
49:   } 
50: 
51:   @After 
52:   public void doneWithTestCase(){ 
53:     threadStopper.killAndJoinClientThreads();
54:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
55:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
56:     resetClasses(); 
57:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
59:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
60:   } 
61: 
62:   public static void setSystemProperties() {
63:  
64:     /*No java.lang.System property to set*/
65:   }
66: 
67:   private static void initializeClasses() {
68:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MultiValueMap_73_tmp__ESTest_scaffolding.class.getClassLoader() ,
69:       "org.apache.commons.collections4.MapIterator",
70:       "org.apache.commons.collections4.iterators.IteratorChain",
71:       "org.apache.commons.collections4.functors.ExceptionFactory",
72:       "org.apache.commons.collections4.map.MultiValueMap$Values",
73:       "org.apache.commons.collections4.map.AbstractMapDecorator",
74:       "org.apache.commons.collections4.Get",
75:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
76:       "org.apache.commons.collections4.CollectionUtils",
77:       "org.apache.commons.collections4.map.MultiValueMap",
78:       "org.apache.commons.collections4.FunctorException",
79:       "org.apache.commons.collections4.map.AbstractIterableMap",
80:       "org.apache.commons.collections4.Factory",
81:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
82:       "org.apache.commons.collections4.Unmodifiable",
83:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
84:       "org.apache.commons.collections4.Transformer",
85:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
86:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
87:       "org.apache.commons.collections4.map.MultiValueMap$1",
88:       "org.apache.commons.collections4.ResettableIterator",
89:       "org.apache.commons.collections4.iterators.EmptyIterator",
90:       "org.apache.commons.collections4.functors.ConstantFactory",
91:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
92:       "org.apache.commons.collections4.Put",
93:       "org.apache.commons.collections4.MultiMap",
94:       "org.apache.commons.collections4.IterableMap",
95:       "org.apache.commons.collections4.IterableGet"
96:     );
97:   } 
98: 
99:   private static void resetClasses() {
100:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MultiValueMap_73_tmp__ESTest_scaffolding.class.getClassLoader()); 
101: 
102:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
103:       "org.apache.commons.collections4.map.AbstractIterableMap",
104:       "org.apache.commons.collections4.map.AbstractMapDecorator",
105:       "org.apache.commons.collections4.map.MultiValueMap",
106:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
107:       "org.apache.commons.collections4.map.MultiValueMap$Values",
108:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
109:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
110:       "org.apache.commons.collections4.map.MultiValueMap$1",
111:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
112:       "org.apache.commons.collections4.iterators.EmptyIterator",
113:       "org.apache.commons.collections4.iterators.EmptyListIterator",
114:       "org.apache.commons.collections4.iterators.EmptyOrderedIterator",
115:       "org.apache.commons.collections4.iterators.AbstractEmptyMapIterator",
116:       "org.apache.commons.collections4.iterators.EmptyMapIterator",
117:       "org.apache.commons.collections4.iterators.EmptyOrderedMapIterator",
118:       "org.apache.commons.collections4.functors.ExceptionFactory",
119:       "org.apache.commons.collections4.iterators.IteratorChain",
120:       "org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter",
121:       "org.apache.commons.collections4.functors.ConstantFactory",
122:       "org.apache.commons.collections4.FunctorException",
123:       "org.apache.commons.collections4.functors.InstantiateFactory",
124:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
125:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
126:       "org.apache.commons.collections4.CollectionUtils"
127:     );
128:   }
129: }

[MASTER] 14:32:24.006 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_75_1628260343985/org/apache/commons/collections4/map/MultiValueMap_74_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_75_1628260343985/org/apache/commons/collections4/map/MultiValueMap_74_tmp__ESTest_scaffolding.java]]
[MASTER] 14:32:24.006 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Collections-27/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 14:32:24.006 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 14:32:24.007 [logback-2] ERROR JUnitAnalyzer - Diagnostic: constructor MultiValueMap in class org.apache.commons.collections4.map.MultiValueMap<K,V> cannot be applied to given types;
  required: java.util.Map<java.lang.String,? super C>,org.apache.commons.collections4.Factory<C>
  found: java.util.Map<java.lang.String,capture#1 of ? super java.util.ArrayList<java.lang.Object>>,org.apache.commons.collections4.Factory<java.util.ArrayList<java.lang.Object>>
  reason: inference variable C has incompatible bounds
    equality constraints: java.util.ArrayList<java.lang.Object>
    upper bounds: java.util.ArrayList<java.lang.Object>,java.util.Collection<org.apache.commons.collections4.functors.ConstantFactory<java.lang.String>>: 34
[MASTER] 14:32:24.007 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_75_1628260343985/org/apache/commons/collections4/map/MultiValueMap_74_tmp__ESTest.java uses or overrides a deprecated API.: -1
[MASTER] 14:32:24.007 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:deprecation for details.: -1
[MASTER] 14:32:24.007 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Some messages have been simplified; recompile with -Xdiags:verbose to get full output: -1
[MASTER] 14:32:24.007 [logback-1] WARN  JUnitAnalyzer - Failed to compile the test cases 
[MASTER] 14:32:24.007 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_75_1628260343985/org/apache/commons/collections4/map/MultiValueMap_74_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Aug 06 14:32:23 GMT 2021
4:  */
5: 
6: package org.apache.commons.collections4.map;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.AbstractMap;
12: import java.util.ArrayList;
13: import java.util.Collection;
14: import java.util.HashMap;
15: import java.util.LinkedList;
16: import java.util.Map;
17: import org.apache.commons.collections4.Factory;
18: import org.apache.commons.collections4.functors.ConstantFactory;
19: import org.apache.commons.collections4.functors.ExceptionFactory;
20: import org.apache.commons.collections4.map.MultiValueMap;
21: import org.evosuite.runtime.EvoRunner;
22: import org.evosuite.runtime.EvoRunnerParameters;
23: import org.junit.runner.RunWith;
24: 
25: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
26: public class MultiValueMap_74_tmp__ESTest extends MultiValueMap_74_tmp__ESTest_scaffolding {
27: 
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       LinkedList<AbstractMap.SimpleImmutableEntry<Integer, String>> linkedList0 = new LinkedList<AbstractMap.SimpleImmutableEntry<Integer, String>>();
31:       linkedList0.add((AbstractMap.SimpleImmutableEntry<Integer, String>) null);
32:       HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
33:       Factory<ArrayList<Object>> factory0 = ExceptionFactory.exceptionFactory();
34:       MultiValueMap<String, ConstantFactory<String>> multiValueMap0 = new MultiValueMap<String, ConstantFactory<String>>((Map<String, ? super ArrayList<Object>>) hashMap0, factory0);
35:       ConstantFactory<LinkedList<AbstractMap.SimpleImmutableEntry<Integer, String>>> constantFactory0 = new ConstantFactory<LinkedList<AbstractMap.SimpleImmutableEntry<Integer, String>>>(linkedList0);
36:       MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>> multiValueMap1 = MultiValueMap.multiValueMap((Map<String, ? super LinkedList<AbstractMap.SimpleImmutableEntry<Integer, String>>>) multiValueMap0, (Factory<LinkedList<AbstractMap.SimpleImmutableEntry<Integer, String>>>) constantFactory0);
37:       // Undeclared exception!
38:       try { 
39:         multiValueMap1.putAll((String) null, (Collection<AbstractMap.SimpleImmutableEntry<Integer, String>>) linkedList0);
40:         fail("Expecting exception: RuntimeException");
41:       
42:       } catch(RuntimeException e) {
43:          //
44:          // ExceptionFactory invoked
45:          //
46:          verifyException("org.apache.commons.collections4.functors.ExceptionFactory", e);
47:       }
48:   }
49: }
RegularFileObject[/tmp/EvoSuite_75_1628260343985/org/apache/commons/collections4/map/MultiValueMap_74_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Aug 06 14:32:23 GMT 2021
5:  */
6: 
7: package org.apache.commons.collections4.map;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: @EvoSuiteClassExclude
17: public class MultiValueMap_74_tmp__ESTest_scaffolding {
18: 
19:   @org.junit.Rule 
20:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
21: 
22:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
23: 
24: 
25:   @BeforeClass 
26:   public static void initEvoSuiteFramework() { 
27:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.map.MultiValueMap"; 
28:     org.evosuite.runtime.GuiSupport.initialize(); 
29:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
31:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
32:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
33:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
34:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
35:     setSystemProperties();
36:     initializeClasses();
37:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
38:   } 
39: 
40:   @Before 
41:   public void initTestCase(){ 
42:     threadStopper.storeCurrentThreads();
43:     threadStopper.startRecordingTime();
44:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
45:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
46:     org.evosuite.runtime.GuiSupport.setHeadless(); 
47:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
48:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
49:   } 
50: 
51:   @After 
52:   public void doneWithTestCase(){ 
53:     threadStopper.killAndJoinClientThreads();
54:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
55:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
56:     resetClasses(); 
57:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
59:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
60:   } 
61: 
62:   public static void setSystemProperties() {
63:  
64:     /*No java.lang.System property to set*/
65:   }
66: 
67:   private static void initializeClasses() {
68:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MultiValueMap_74_tmp__ESTest_scaffolding.class.getClassLoader() ,
69:       "org.apache.commons.collections4.MapIterator",
70:       "org.apache.commons.collections4.iterators.IteratorChain",
71:       "org.apache.commons.collections4.functors.ExceptionFactory",
72:       "org.apache.commons.collections4.map.MultiValueMap$Values",
73:       "org.apache.commons.collections4.map.AbstractMapDecorator",
74:       "org.apache.commons.collections4.Get",
75:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
76:       "org.apache.commons.collections4.CollectionUtils",
77:       "org.apache.commons.collections4.map.MultiValueMap",
78:       "org.apache.commons.collections4.FunctorException",
79:       "org.apache.commons.collections4.map.AbstractIterableMap",
80:       "org.apache.commons.collections4.Factory",
81:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
82:       "org.apache.commons.collections4.Unmodifiable",
83:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
84:       "org.apache.commons.collections4.Transformer",
85:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
86:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
87:       "org.apache.commons.collections4.map.MultiValueMap$1",
88:       "org.apache.commons.collections4.ResettableIterator",
89:       "org.apache.commons.collections4.iterators.EmptyIterator",
90:       "org.apache.commons.collections4.functors.ConstantFactory",
91:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
92:       "org.apache.commons.collections4.Put",
93:       "org.apache.commons.collections4.MultiMap",
94:       "org.apache.commons.collections4.IterableMap",
95:       "org.apache.commons.collections4.IterableGet"
96:     );
97:   } 
98: 
99:   private static void resetClasses() {
100:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MultiValueMap_74_tmp__ESTest_scaffolding.class.getClassLoader()); 
101: 
102:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
103:       "org.apache.commons.collections4.map.AbstractIterableMap",
104:       "org.apache.commons.collections4.map.AbstractMapDecorator",
105:       "org.apache.commons.collections4.map.MultiValueMap",
106:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
107:       "org.apache.commons.collections4.map.MultiValueMap$Values",
108:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
109:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
110:       "org.apache.commons.collections4.map.MultiValueMap$1",
111:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
112:       "org.apache.commons.collections4.iterators.EmptyIterator",
113:       "org.apache.commons.collections4.iterators.EmptyListIterator",
114:       "org.apache.commons.collections4.iterators.EmptyOrderedIterator",
115:       "org.apache.commons.collections4.iterators.AbstractEmptyMapIterator",
116:       "org.apache.commons.collections4.iterators.EmptyMapIterator",
117:       "org.apache.commons.collections4.iterators.EmptyOrderedMapIterator",
118:       "org.apache.commons.collections4.functors.ExceptionFactory",
119:       "org.apache.commons.collections4.iterators.IteratorChain",
120:       "org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter",
121:       "org.apache.commons.collections4.functors.ConstantFactory",
122:       "org.apache.commons.collections4.FunctorException",
123:       "org.apache.commons.collections4.functors.InstantiateFactory",
124:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
125:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
126:       "org.apache.commons.collections4.CollectionUtils"
127:     );
128:   }
129: }

[MASTER] 14:32:24.062 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:32:24.117 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:32:24.166 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:32:24.364 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:32:24.426 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:32:24.535 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:32:24.587 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:32:24.691 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:32:24.785 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:32:24.952 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:32:25.008 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:32:25.037 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_87_1628260345009/org/apache/commons/collections4/map/MultiValueMap_86_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_87_1628260345009/org/apache/commons/collections4/map/MultiValueMap_86_tmp__ESTest_scaffolding.java]]
[MASTER] 14:32:25.037 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Collections-27/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 14:32:25.037 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 14:32:25.038 [logback-2] ERROR JUnitAnalyzer - Diagnostic: constructor MultiValueMap in class org.apache.commons.collections4.map.MultiValueMap<K,V> cannot be applied to given types;
  required: java.util.Map<java.lang.String,? super C>,org.apache.commons.collections4.Factory<C>
  found: java.util.Map<java.lang.String,capture#1 of ? super java.util.Collection<java.lang.Object>>,org.apache.commons.collections4.Factory<java.util.Collection<java.lang.Object>>
  reason: inference variable C has incompatible bounds
    equality constraints: java.util.Collection<java.lang.Object>
    upper bounds: java.util.Collection<java.lang.Object>,java.util.Collection<java.util.LinkedList<java.lang.Integer>>: 36
[MASTER] 14:32:25.038 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_87_1628260345009/org/apache/commons/collections4/map/MultiValueMap_86_tmp__ESTest.java uses or overrides a deprecated API.: -1
[MASTER] 14:32:25.038 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:deprecation for details.: -1
[MASTER] 14:32:25.038 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_87_1628260345009/org/apache/commons/collections4/map/MultiValueMap_86_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 14:32:25.038 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 14:32:25.038 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Some messages have been simplified; recompile with -Xdiags:verbose to get full output: -1
[MASTER] 14:32:25.038 [logback-1] WARN  JUnitAnalyzer - Failed to compile the test cases 
[MASTER] 14:32:25.064 [logback-1] WARN  JUnitAnalyzer - Failed to compile the test cases 
[MASTER] 14:32:25.038 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_87_1628260345009/org/apache/commons/collections4/map/MultiValueMap_86_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Aug 06 14:32:25 GMT 2021
4:  */
5: 
6: package org.apache.commons.collections4.map;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import java.util.AbstractMap;
12: import java.util.ArrayList;
13: import java.util.Collection;
14: import java.util.LinkedList;
15: import java.util.Map;
16: import java.util.function.BiFunction;
17: import org.apache.commons.collections4.Factory;
18: import org.apache.commons.collections4.functors.ExceptionFactory;
19: import org.apache.commons.collections4.map.MultiValueMap;
20: import org.evosuite.runtime.EvoRunner;
21: import org.evosuite.runtime.EvoRunnerParameters;
22: import org.evosuite.runtime.ViolatedAssumptionAnswer;
23: import org.junit.runner.RunWith;
24: 
25: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
26: public class MultiValueMap_86_tmp__ESTest extends MultiValueMap_86_tmp__ESTest_scaffolding {
27: 
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>> multiValueMap0 = new MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>>();
31:       BiFunction<Object, Object, String> biFunction0 = (BiFunction<Object, Object, String>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
32:       multiValueMap0.merge("7", "7", biFunction0);
33:       MultiValueMap<String, Object> multiValueMap1 = MultiValueMap.multiValueMap((Map<String, ? super Collection<Object>>) multiValueMap0);
34:       MultiValueMap<String, ArrayList<Object>> multiValueMap2 = MultiValueMap.multiValueMap((Map<String, ? super Collection<ArrayList<Object>>>) multiValueMap1);
35:       Factory<Collection<Object>> factory0 = ExceptionFactory.exceptionFactory();
36:       MultiValueMap<String, LinkedList<Integer>> multiValueMap3 = new MultiValueMap<String, LinkedList<Integer>>((Map<String, ? super Collection<Object>>) multiValueMap2, factory0);
37:       multiValueMap3.getCollection("7");
38:       assertEquals(1, multiValueMap0.size());
39:       assertFalse(multiValueMap0.isEmpty());
40:   }
41: }
RegularFileObject[/tmp/EvoSuite_87_1628260345009/org/apache/commons/collections4/map/MultiValueMap_86_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Aug 06 14:32:25 GMT 2021
5:  */
6: 
7: package org.apache.commons.collections4.map;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: import static org.evosuite.shaded.org.mockito.Mockito.*;
17: @EvoSuiteClassExclude
18: public class MultiValueMap_86_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
24: 
25: 
26:   @BeforeClass 
27:   public static void initEvoSuiteFramework() { 
28:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.map.MultiValueMap"; 
29:     org.evosuite.runtime.GuiSupport.initialize(); 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
31:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
32:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
33:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
34:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
35:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
36:     setSystemProperties();
37:     initializeClasses();
38:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
39:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
40:   } 
41: 
42:   @Before 
43:   public void initTestCase(){ 
44:     threadStopper.storeCurrentThreads();
45:     threadStopper.startRecordingTime();
46:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
47:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
48:     org.evosuite.runtime.GuiSupport.setHeadless(); 
49:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
50:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
51:   } 
52: 
53:   @After 
54:   public void doneWithTestCase(){ 
55:     threadStopper.killAndJoinClientThreads();
56:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
57:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
58:     resetClasses(); 
59:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
61:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
62:   } 
63: 
64:   public static void setSystemProperties() {
65:  
66:     /*No java.lang.System property to set*/
67:   }
68: 
69:   private static void initializeClasses() {
70:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MultiValueMap_86_tmp__ESTest_scaffolding.class.getClassLoader() ,
71:       "org.apache.commons.collections4.MapIterator",
72:       "org.apache.commons.collections4.iterators.IteratorChain",
73:       "org.apache.commons.collections4.functors.ExceptionFactory",
74:       "org.apache.commons.collections4.map.MultiValueMap$Values",
75:       "org.apache.commons.collections4.map.AbstractMapDecorator",
76:       "org.apache.commons.collections4.Get",
77:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
78:       "org.apache.commons.collections4.CollectionUtils",
79:       "org.apache.commons.collections4.map.MultiValueMap",
80:       "org.apache.commons.collections4.FunctorException",
81:       "org.apache.commons.collections4.map.AbstractIterableMap",
82:       "org.apache.commons.collections4.Factory",
83:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
84:       "org.apache.commons.collections4.Unmodifiable",
85:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
86:       "org.apache.commons.collections4.Transformer",
87:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
88:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
89:       "org.apache.commons.collections4.map.MultiValueMap$1",
90:       "org.apache.commons.collections4.ResettableIterator",
91:       "org.apache.commons.collections4.iterators.EmptyIterator",
92:       "org.apache.commons.collections4.functors.ConstantFactory",
93:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
94:       "org.apache.commons.collections4.Put",
95:       "org.apache.commons.collections4.MultiMap",
96:       "org.apache.commons.collections4.IterableMap",
97:       "org.apache.commons.collections4.IterableGet"
98:     );
99:   } 
100:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
101:     mock(Class.forName("java.util.function.BiFunction", false, MultiValueMap_86_tmp__ESTest_scaffolding.class.getClassLoader()));
102:   }
103: 
104:   private static void resetClasses() {
105:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MultiValueMap_86_tmp__ESTest_scaffolding.class.getClassLoader()); 
106: 
107:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
108:       "org.apache.commons.collections4.map.AbstractIterableMap",
109:       "org.apache.commons.collections4.map.AbstractMapDecorator",
110:       "org.apache.commons.collections4.map.MultiValueMap",
111:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
112:       "org.apache.commons.collections4.map.MultiValueMap$Values",
113:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
114:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
115:       "org.apache.commons.collections4.map.MultiValueMap$1",
116:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
117:       "org.apache.commons.collections4.iterators.EmptyIterator",
118:       "org.apache.commons.collections4.iterators.EmptyListIterator",
119:       "org.apache.commons.collections4.iterators.EmptyOrderedIterator",
120:       "org.apache.commons.collections4.iterators.AbstractEmptyMapIterator",
121:       "org.apache.commons.collections4.iterators.EmptyMapIterator",
122:       "org.apache.commons.collections4.iterators.EmptyOrderedMapIterator",
123:       "org.apache.commons.collections4.functors.ExceptionFactory",
124:       "org.apache.commons.collections4.iterators.IteratorChain",
125:       "org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter",
126:       "org.apache.commons.collections4.functors.ConstantFactory",
127:       "org.apache.commons.collections4.FunctorException",
128:       "org.apache.commons.collections4.functors.InstantiateFactory",
129:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
130:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
131:       "org.apache.commons.collections4.CollectionUtils"
132:     );
133:   }
134: }

[MASTER] 14:32:25.063 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_88_1628260345039/org/apache/commons/collections4/map/MultiValueMap_87_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_88_1628260345039/org/apache/commons/collections4/map/MultiValueMap_87_tmp__ESTest_scaffolding.java]]
[MASTER] 14:32:25.063 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Collections-27/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 14:32:25.063 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 14:32:25.063 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.lang.Class<java.lang.Object> cannot be converted to java.lang.Class<java.util.LinkedList<java.util.LinkedList<java.util.HashMap>>>: 31
[MASTER] 14:32:25.063 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_88_1628260345039/org/apache/commons/collections4/map/MultiValueMap_87_tmp__ESTest.java uses or overrides a deprecated API.: -1
[MASTER] 14:32:25.064 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:deprecation for details.: -1
[MASTER] 14:32:25.064 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_88_1628260345039/org/apache/commons/collections4/map/MultiValueMap_87_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Aug 06 14:32:25 GMT 2021
4:  */
5: 
6: package org.apache.commons.collections4.map;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.AbstractMap;
11: import java.util.ArrayList;
12: import java.util.Collection;
13: import java.util.HashMap;
14: import java.util.LinkedList;
15: import java.util.Map;
16: import org.apache.commons.collections4.map.MultiValueMap;
17: import org.evosuite.runtime.EvoRunner;
18: import org.evosuite.runtime.EvoRunnerParameters;
19: import org.junit.runner.RunWith;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
22: public class MultiValueMap_87_tmp__ESTest extends MultiValueMap_87_tmp__ESTest_scaffolding {
23: 
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       HashMap<LinkedList<ArrayList<String>>, Object> hashMap0 = new HashMap<LinkedList<ArrayList<String>>, Object>();
27:       MultiValueMap<LinkedList<ArrayList<String>>, AbstractMap.SimpleEntry<HashMap<Integer, String>, Integer>> multiValueMap0 = MultiValueMap.multiValueMap((Map<LinkedList<ArrayList<String>>, ? super Collection<AbstractMap.SimpleEntry<HashMap<Integer, String>, Integer>>>) hashMap0);
28:       LinkedList<ArrayList<String>> linkedList0 = new LinkedList<ArrayList<String>>();
29:       hashMap0.put(linkedList0, linkedList0);
30:       Class<Object> class0 = Object.class;
31:       MultiValueMap<LinkedList<ArrayList<String>>, LinkedList<HashMap>> multiValueMap1 = MultiValueMap.multiValueMap((Map<LinkedList<ArrayList<String>>, ? super LinkedList<LinkedList<HashMap>>>) multiValueMap0, (Class<LinkedList<LinkedList<HashMap>>>) class0);
32:       assertFalse(multiValueMap1.isEmpty());
33:   }
34: }
RegularFileObject[/tmp/EvoSuite_88_1628260345039/org/apache/commons/collections4/map/MultiValueMap_87_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Aug 06 14:32:25 GMT 2021
5:  */
6: 
7: package org.apache.commons.collections4.map;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: @EvoSuiteClassExclude
17: public class MultiValueMap_87_tmp__ESTest_scaffolding {
18: 
19:   @org.junit.Rule 
20:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
21: 
22:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
23: 
24: 
25:   @BeforeClass 
26:   public static void initEvoSuiteFramework() { 
27:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.map.MultiValueMap"; 
28:     org.evosuite.runtime.GuiSupport.initialize(); 
29:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
31:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
32:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
33:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
34:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
35:     setSystemProperties();
36:     initializeClasses();
37:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
38:   } 
39: 
40:   @Before 
41:   public void initTestCase(){ 
42:     threadStopper.storeCurrentThreads();
43:     threadStopper.startRecordingTime();
44:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
45:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
46:     org.evosuite.runtime.GuiSupport.setHeadless(); 
47:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
48:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
49:   } 
50: 
51:   @After 
52:   public void doneWithTestCase(){ 
53:     threadStopper.killAndJoinClientThreads();
54:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
55:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
56:     resetClasses(); 
57:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
59:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
60:   } 
61: 
62:   public static void setSystemProperties() {
63:  
64:     /*No java.lang.System property to set*/
65:   }
66: 
67:   private static void initializeClasses() {
68:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MultiValueMap_87_tmp__ESTest_scaffolding.class.getClassLoader() ,
69:       "org.apache.commons.collections4.MapIterator",
70:       "org.apache.commons.collections4.iterators.IteratorChain",
71:       "org.apache.commons.collections4.functors.ExceptionFactory",
72:       "org.apache.commons.collections4.map.MultiValueMap$Values",
73:       "org.apache.commons.collections4.map.AbstractMapDecorator",
74:       "org.apache.commons.collections4.Get",
75:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
76:       "org.apache.commons.collections4.CollectionUtils",
77:       "org.apache.commons.collections4.map.MultiValueMap",
78:       "org.apache.commons.collections4.FunctorException",
79:       "org.apache.commons.collections4.map.AbstractIterableMap",
80:       "org.apache.commons.collections4.Factory",
81:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
82:       "org.apache.commons.collections4.Unmodifiable",
83:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
84:       "org.apache.commons.collections4.Transformer",
85:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
86:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
87:       "org.apache.commons.collections4.map.MultiValueMap$1",
88:       "org.apache.commons.collections4.ResettableIterator",
89:       "org.apache.commons.collections4.iterators.EmptyIterator",
90:       "org.apache.commons.collections4.functors.ConstantFactory",
91:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
92:       "org.apache.commons.collections4.Put",
93:       "org.apache.commons.collections4.MultiMap",
94:       "org.apache.commons.collections4.IterableMap",
95:       "org.apache.commons.collections4.IterableGet"
96:     );
97:   } 
98: 
99:   private static void resetClasses() {
100:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MultiValueMap_87_tmp__ESTest_scaffolding.class.getClassLoader()); 
101: 
102:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
103:       "org.apache.commons.collections4.map.AbstractIterableMap",
104:       "org.apache.commons.collections4.map.AbstractMapDecorator",
105:       "org.apache.commons.collections4.map.MultiValueMap",
106:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
107:       "org.apache.commons.collections4.map.MultiValueMap$Values",
108:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
109:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
110:       "org.apache.commons.collections4.map.MultiValueMap$1",
111:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
112:       "org.apache.commons.collections4.iterators.EmptyIterator",
113:       "org.apache.commons.collections4.iterators.EmptyListIterator",
114:       "org.apache.commons.collections4.iterators.EmptyOrderedIterator",
115:       "org.apache.commons.collections4.iterators.AbstractEmptyMapIterator",
116:       "org.apache.commons.collections4.iterators.EmptyMapIterator",
117:       "org.apache.commons.collections4.iterators.EmptyOrderedMapIterator",
118:       "org.apache.commons.collections4.functors.ExceptionFactory",
119:       "org.apache.commons.collections4.iterators.IteratorChain",
120:       "org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter",
121:       "org.apache.commons.collections4.functors.ConstantFactory",
122:       "org.apache.commons.collections4.FunctorException",
123:       "org.apache.commons.collections4.functors.InstantiateFactory",
124:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
125:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
126:       "org.apache.commons.collections4.CollectionUtils"
127:     );
128:   }
129: }

[MASTER] 14:32:25.105 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:32:25.149 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:32:25.170 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_91_1628260345150/org/apache/commons/collections4/map/MultiValueMap_90_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_91_1628260345150/org/apache/commons/collections4/map/MultiValueMap_90_tmp__ESTest_scaffolding.java]]
[MASTER] 14:32:25.170 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Collections-27/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 14:32:25.170 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 14:32:25.171 [logback-2] ERROR JUnitAnalyzer - Diagnostic: constructor MultiValueMap in class org.apache.commons.collections4.map.MultiValueMap<K,V> cannot be applied to given types;
  required: java.util.Map<java.util.LinkedList<org.apache.commons.collections4.functors.ConstantFactory<java.lang.Object>>,? super C>,org.apache.commons.collections4.Factory<C>
  found: java.util.Map<java.util.LinkedList<org.apache.commons.collections4.functors.ConstantFactory<java.lang.Object>>,capture#1 of ? super java.util.Collection<java.lang.Integer>>,org.apache.commons.collections4.Factory<java.util.Collection<java.lang.Integer>>
  reason: inference variable C has incompatible bounds
    equality constraints: java.util.Collection<java.lang.Integer>
    upper bounds: java.util.Collection<java.lang.Integer>,java.util.Collection<java.util.ArrayList<java.lang.Integer>>: 33
[MASTER] 14:32:25.171 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_91_1628260345150/org/apache/commons/collections4/map/MultiValueMap_90_tmp__ESTest.java uses or overrides a deprecated API.: -1
[MASTER] 14:32:25.171 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:deprecation for details.: -1
[MASTER] 14:32:25.171 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Some messages have been simplified; recompile with -Xdiags:verbose to get full output: -1
[MASTER] 14:32:25.171 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_91_1628260345150/org/apache/commons/collections4/map/MultiValueMap_90_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Aug 06 14:32:25 GMT 2021
4:  */
5: 
6: package org.apache.commons.collections4.map;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.ArrayList;
11: import java.util.Collection;
12: import java.util.HashMap;
13: import java.util.LinkedList;
14: import java.util.Map;
15: import org.apache.commons.collections4.Factory;
16: import org.apache.commons.collections4.functors.ConstantFactory;
17: import org.apache.commons.collections4.map.MultiValueMap;
18: import org.evosuite.runtime.EvoRunner;
19: import org.evosuite.runtime.EvoRunnerParameters;
20: import org.junit.runner.RunWith;
21: 
22: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
23: public class MultiValueMap_90_tmp__ESTest extends MultiValueMap_90_tmp__ESTest_scaffolding {
24: 
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       HashMap<LinkedList<ConstantFactory<Object>>, Object> hashMap0 = new HashMap<LinkedList<ConstantFactory<Object>>, Object>();
28:       ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
29:       LinkedList<ConstantFactory<Object>> linkedList0 = new LinkedList<ConstantFactory<Object>>();
30:       LinkedList<Object> linkedList1 = new LinkedList<Object>();
31:       hashMap0.put(linkedList0, linkedList1);
32:       Factory<Collection<Integer>> factory0 = ConstantFactory.constantFactory((Collection<Integer>) arrayList0);
33:       MultiValueMap<LinkedList<ConstantFactory<Object>>, ArrayList<Integer>> multiValueMap0 = new MultiValueMap<LinkedList<ConstantFactory<Object>>, ArrayList<Integer>>((Map<LinkedList<ConstantFactory<Object>>, ? super Collection<Integer>>) hashMap0, factory0);
34:       multiValueMap0.putAll((Map<? extends LinkedList<ConstantFactory<Object>>, ?>) hashMap0);
35:       boolean boolean0 = multiValueMap0.removeMapping(linkedList0, linkedList1);
36:       assertEquals(0, multiValueMap0.size());
37:       assertTrue(boolean0);
38:   }
39: }
RegularFileObject[/tmp/EvoSuite_91_1628260345150/org/apache/commons/collections4/map/MultiValueMap_90_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Aug 06 14:32:25 GMT 2021
5:  */
6: 
7: package org.apache.commons.collections4.map;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: @EvoSuiteClassExclude
17: public class MultiValueMap_90_tmp__ESTest_scaffolding {
18: 
19:   @org.junit.Rule 
20:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
21: 
22:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
23: 
24: 
25:   @BeforeClass 
26:   public static void initEvoSuiteFramework() { 
27:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.map.MultiValueMap"; 
28:     org.evosuite.runtime.GuiSupport.initialize(); 
29:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
31:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
32:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
33:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
34:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
35:     setSystemProperties();
36:     initializeClasses();
37:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
38:   } 
39: 
40:   @Before 
41:   public void initTestCase(){ 
42:     threadStopper.storeCurrentThreads();
43:     threadStopper.startRecordingTime();
44:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
45:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
46:     org.evosuite.runtime.GuiSupport.setHeadless(); 
47:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
48:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
49:   } 
50: 
51:   @After 
52:   public void doneWithTestCase(){ 
53:     threadStopper.killAndJoinClientThreads();
54:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
55:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
56:     resetClasses(); 
57:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
59:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
60:   } 
61: 
62:   public static void setSystemProperties() {
63:  
64:     /*No java.lang.System property to set*/
65:   }
66: 
67:   private static void initializeClasses() {
68:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MultiValueMap_90_tmp__ESTest_scaffolding.class.getClassLoader() ,
69:       "org.apache.commons.collections4.MapIterator",
70:       "org.apache.commons.collections4.iterators.IteratorChain",
71:       "org.apache.commons.collections4.functors.ExceptionFactory",
72:       "org.apache.commons.collections4.map.MultiValueMap$Values",
73:       "org.apache.commons.collections4.map.AbstractMapDecorator",
74:       "org.apache.commons.collections4.Get",
75:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
76:       "org.apache.commons.collections4.CollectionUtils",
77:       "org.apache.commons.collections4.map.MultiValueMap",
78:       "org.apache.commons.collections4.FunctorException",
79:       "org.apache.commons.collections4.map.AbstractIterableMap",
80:       "org.apache.commons.collections4.Factory",
81:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
82:       "org.apache.commons.collections4.Unmodifiable",
83:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
84:       "org.apache.commons.collections4.Transformer",
85:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
86:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
87:       "org.apache.commons.collections4.map.MultiValueMap$1",
88:       "org.apache.commons.collections4.ResettableIterator",
89:       "org.apache.commons.collections4.iterators.EmptyIterator",
90:       "org.apache.commons.collections4.functors.ConstantFactory",
91:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
92:       "org.apache.commons.collections4.Put",
93:       "org.apache.commons.collections4.MultiMap",
94:       "org.apache.commons.collections4.IterableMap",
95:       "org.apache.commons.collections4.IterableGet"
96:     );
97:   } 
98: 
99:   private static void resetClasses() {
100:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MultiValueMap_90_tmp__ESTest_scaffolding.class.getClassLoader()); 
101: 
102:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
103:       "org.apache.commons.collections4.map.AbstractIterableMap",
104:       "org.apache.commons.collections4.map.AbstractMapDecorator",
105:       "org.apache.commons.collections4.map.MultiValueMap",
106:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
107:       "org.apache.commons.collections4.map.MultiValueMap$Values",
108:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
109:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
110:       "org.apache.commons.collections4.map.MultiValueMap$1",
111:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
112:       "org.apache.commons.collections4.iterators.EmptyIterator",
113:       "org.apache.commons.collections4.iterators.EmptyListIterator",
114:       "org.apache.commons.collections4.iterators.EmptyOrderedIterator",
115:       "org.apache.commons.collections4.iterators.AbstractEmptyMapIterator",
116:       "org.apache.commons.collections4.iterators.EmptyMapIterator",
117:       "org.apache.commons.collections4.iterators.EmptyOrderedMapIterator",
118:       "org.apache.commons.collections4.functors.ExceptionFactory",
119:       "org.apache.commons.collections4.iterators.IteratorChain",
120:       "org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter",
121:       "org.apache.commons.collections4.functors.ConstantFactory",
122:       "org.apache.commons.collections4.FunctorException",
123:       "org.apache.commons.collections4.functors.InstantiateFactory",
124:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
125:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
126:       "org.apache.commons.collections4.CollectionUtils"
127:     );
128:   }
129: }

[MASTER] 14:32:25.171 [logback-1] WARN  JUnitAnalyzer - Failed to compile the test cases 
[MASTER] 14:32:26.408 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_92_1628260345172/org/apache/commons/collections4/map/MultiValueMap_91_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_92_1628260345172/org/apache/commons/collections4/map/MultiValueMap_91_tmp__ESTest_scaffolding.java]]
[MASTER] 14:32:26.408 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Collections-27/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 14:32:26.408 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 14:32:26.410 [logback-2] ERROR JUnitAnalyzer - Diagnostic: constructor MultiValueMap in class org.apache.commons.collections4.map.MultiValueMap<K,V> cannot be applied to given types;
  required: java.util.Map<java.util.AbstractMap.SimpleEntry<java.lang.Integer,java.lang.String>,? super C>,org.apache.commons.collections4.Factory<C>
  found: java.util.Map<java.util.AbstractMap.SimpleEntry<java.lang.Integer,java.lang.String>,capture#1 of ? super java.util.Collection<java.lang.Object>>,org.apache.commons.collections4.Factory<java.util.Collection<java.lang.Object>>
  reason: inference variable C has incompatible bounds
    equality constraints: java.util.Collection<java.lang.Object>
    upper bounds: java.util.Collection<java.lang.Object>,java.util.Collection<java.lang.String>: 417
[MASTER] 14:32:26.410 [logback-2] ERROR JUnitAnalyzer - Diagnostic: constructor MultiValueMap in class org.apache.commons.collections4.map.MultiValueMap<K,V> cannot be applied to given types;
  required: java.util.Map<java.lang.Object,? super C>,org.apache.commons.collections4.Factory<C>
  found: java.util.Map<java.lang.Object,capture#2 of ? super java.util.LinkedList<java.lang.Object>>,org.apache.commons.collections4.Factory<java.util.LinkedList<java.lang.Object>>
  reason: inference variable C has incompatible bounds
    equality constraints: java.util.LinkedList<java.lang.Object>
    upper bounds: java.util.LinkedList<java.lang.Object>,java.util.Collection<java.util.AbstractMap.SimpleEntry<java.lang.Object,java.lang.Object>>: 456
[MASTER] 14:32:26.411 [logback-2] ERROR JUnitAnalyzer - Diagnostic: constructor MultiValueMap in class org.apache.commons.collections4.map.MultiValueMap<K,V> cannot be applied to given types;
  required: java.util.Map<java.lang.String,? super C>,org.apache.commons.collections4.Factory<C>
  found: java.util.Map<java.lang.String,capture#3 of ? super java.util.Collection<java.lang.Object>>,org.apache.commons.collections4.Factory<java.util.Collection<java.lang.Object>>
  reason: inference variable C has incompatible bounds
    equality constraints: java.util.Collection<java.lang.Object>
    upper bounds: java.util.Collection<java.lang.Object>,java.util.Collection<java.util.AbstractMap.SimpleImmutableEntry<java.lang.Integer,java.lang.String>>: 574
[MASTER] 14:32:26.411 [logback-2] ERROR JUnitAnalyzer - Diagnostic: constructor MultiValueMap in class org.apache.commons.collections4.map.MultiValueMap<K,V> cannot be applied to given types;
  required: java.util.Map<java.lang.String,? super C>,org.apache.commons.collections4.Factory<C>
  found: java.util.Map<java.lang.String,capture#4 of ? super java.util.ArrayList<java.lang.Object>>,org.apache.commons.collections4.Factory<java.util.ArrayList<java.lang.Object>>
  reason: inference variable C has incompatible bounds
    equality constraints: java.util.ArrayList<java.lang.Object>
    upper bounds: java.util.ArrayList<java.lang.Object>,java.util.Collection<org.apache.commons.collections4.functors.ConstantFactory<java.lang.String>>: 594
[MASTER] 14:32:26.411 [logback-2] ERROR JUnitAnalyzer - Diagnostic: constructor MultiValueMap in class org.apache.commons.collections4.map.MultiValueMap<K,V> cannot be applied to given types;
  required: java.util.Map<java.lang.String,? super C>,org.apache.commons.collections4.Factory<C>
  found: java.util.Map<java.lang.String,capture#5 of ? super java.util.Collection<java.lang.Object>>,org.apache.commons.collections4.Factory<java.util.Collection<java.lang.Object>>
  reason: inference variable C has incompatible bounds
    equality constraints: java.util.Collection<java.lang.Object>
    upper bounds: java.util.Collection<java.lang.Object>,java.util.Collection<java.util.LinkedList<java.lang.Integer>>: 815
[MASTER] 14:32:26.412 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.lang.Class<java.lang.Object> cannot be converted to java.lang.Class<java.util.LinkedList<java.util.LinkedList<java.util.HashMap>>>: 828
[MASTER] 14:32:26.412 [logback-2] ERROR JUnitAnalyzer - Diagnostic: constructor MultiValueMap in class org.apache.commons.collections4.map.MultiValueMap<K,V> cannot be applied to given types;
  required: java.util.Map<java.util.LinkedList<org.apache.commons.collections4.functors.ConstantFactory<java.lang.Object>>,? super C>,org.apache.commons.collections4.Factory<C>
  found: java.util.Map<java.util.LinkedList<org.apache.commons.collections4.functors.ConstantFactory<java.lang.Object>>,capture#6 of ? super java.util.Collection<java.lang.Integer>>,org.apache.commons.collections4.Factory<java.util.Collection<java.lang.Integer>>
  reason: inference variable C has incompatible bounds
    equality constraints: java.util.Collection<java.lang.Integer>
    upper bounds: java.util.Collection<java.lang.Integer>,java.util.Collection<java.util.ArrayList<java.lang.Integer>>: 862
[MASTER] 14:32:26.413 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_92_1628260345172/org/apache/commons/collections4/map/MultiValueMap_91_tmp__ESTest.java uses or overrides a deprecated API.: -1
[MASTER] 14:32:26.413 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:deprecation for details.: -1
[MASTER] 14:32:26.413 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_92_1628260345172/org/apache/commons/collections4/map/MultiValueMap_91_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 14:32:26.413 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 14:32:26.413 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Some messages have been simplified; recompile with -Xdiags:verbose to get full output: -1
[MASTER] 14:32:26.414 [logback-1] WARN  JUnitAnalyzer - Failed to compile the test cases 
[MASTER] 14:32:26.414 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_92_1628260345172/org/apache/commons/collections4/map/MultiValueMap_91_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Aug 06 14:32:25 GMT 2021
4:  */
5: 
6: package org.apache.commons.collections4.map;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import static org.evosuite.runtime.EvoAssertions.*;
12: import java.util.AbstractMap;
13: import java.util.ArrayList;
14: import java.util.Collection;
15: import java.util.HashMap;
16: import java.util.Iterator;
17: import java.util.LinkedList;
18: import java.util.Map;
19: import java.util.Set;
20: import java.util.function.BiFunction;
21: import org.apache.commons.collections4.Factory;
22: import org.apache.commons.collections4.functors.ConstantFactory;
23: import org.apache.commons.collections4.functors.ExceptionFactory;
24: import org.apache.commons.collections4.map.MultiValueMap;
25: import org.evosuite.runtime.EvoRunner;
26: import org.evosuite.runtime.EvoRunnerParameters;
27: import org.evosuite.runtime.ViolatedAssumptionAnswer;
28: import org.junit.runner.RunWith;
29: 
30: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
31: public class MultiValueMap_91_tmp__ESTest extends MultiValueMap_91_tmp__ESTest_scaffolding {
32: 
33:   @Test(timeout = 4000)
34:   public void test00()  throws Throwable  {
35:       HashMap<LinkedList<Object>, Object> hashMap0 = new HashMap<LinkedList<Object>, Object>();
36:       ConstantFactory<Collection<ArrayList<String>>> constantFactory0 = new ConstantFactory<Collection<ArrayList<String>>>((Collection<ArrayList<String>>) null);
37:       MultiValueMap<LinkedList<Object>, ArrayList<String>> multiValueMap0 = MultiValueMap.multiValueMap((Map<LinkedList<Object>, ? super Collection<ArrayList<String>>>) hashMap0, (Factory<Collection<ArrayList<String>>>) constantFactory0);
38:       Collection<ArrayList<String>> collection0 = multiValueMap0.createCollection((-3375));
39:       assertNull(collection0);
40:   }
41: 
42:   @Test(timeout = 4000)
43:   public void test01()  throws Throwable  {
44:       MultiValueMap<Integer, Integer> multiValueMap0 = new MultiValueMap<Integer, Integer>();
45:       multiValueMap0.clear();
46:       assertEquals(0, multiValueMap0.size());
47:   }
48: 
49:   @Test(timeout = 4000)
50:   public void test02()  throws Throwable  {
51:       MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>> multiValueMap0 = new MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>>();
52:       MultiValueMap<String, Object> multiValueMap1 = MultiValueMap.multiValueMap((Map<String, ? super Collection<Object>>) multiValueMap0);
53:       Set<Map.Entry<String, Object>> set0 = (Set<Map.Entry<String, Object>>)multiValueMap1.entrySet();
54:       assertTrue(set0.isEmpty());
55:   }
56: 
57:   @Test(timeout = 4000)
58:   public void test03()  throws Throwable  {
59:       MultiValueMap<Object, ArrayList<String>> multiValueMap0 = new MultiValueMap<Object, ArrayList<String>>();
60:       MultiValueMap<Object, Object> multiValueMap1 = MultiValueMap.multiValueMap((Map<Object, ? super Collection<Object>>) multiValueMap0);
61:       ArrayList<Object> arrayList0 = new ArrayList<Object>();
62:       HashMap<Collection<Object>, Object> hashMap0 = new HashMap<Collection<Object>, Object>();
63:       MultiValueMap<Collection<Object>, Object> multiValueMap2 = MultiValueMap.multiValueMap((Map<Collection<Object>, ? super Collection<Object>>) hashMap0);
64:       Collection<Object> collection0 = multiValueMap2.values();
65:       assertNotNull(collection0);
66:       
67:       boolean boolean0 = multiValueMap1.putAll((Object) arrayList0, collection0);
68:       assertFalse(boolean0);
69:   }
70: 
71:   @Test(timeout = 4000)
72:   public void test04()  throws Throwable  {
73:       MultiValueMap<Object, String> multiValueMap0 = new MultiValueMap<Object, String>();
74:       MultiValueMap<LinkedList<String>, AbstractMap.SimpleEntry<Integer, Object>> multiValueMap1 = new MultiValueMap<LinkedList<String>, AbstractMap.SimpleEntry<Integer, Object>>();
75:       BiFunction<Object, Object, Object> biFunction0 = (BiFunction<Object, Object, Object>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
76:       multiValueMap1.merge((LinkedList<String>) null, multiValueMap0, biFunction0);
77:       LinkedList<ArrayList<Object>> linkedList0 = new LinkedList<ArrayList<Object>>();
78:       ConstantFactory<LinkedList<ArrayList<Object>>> constantFactory0 = new ConstantFactory<LinkedList<ArrayList<Object>>>(linkedList0);
79:       MultiValueMap<LinkedList<String>, ArrayList<Object>> multiValueMap2 = MultiValueMap.multiValueMap((Map<LinkedList<String>, ? super LinkedList<ArrayList<Object>>>) multiValueMap1, (Factory<LinkedList<ArrayList<Object>>>) constantFactory0);
80:       int int0 = multiValueMap2.totalSize();
81:       assertEquals(1, multiValueMap1.size());
82:       assertEquals(0, int0);
83:   }
84: 
85:   @Test(timeout = 4000)
86:   public void test05()  throws Throwable  {
87:       MultiValueMap<Object, String> multiValueMap0 = new MultiValueMap<Object, String>();
88:       // Undeclared exception!
89:       try { 
90:         MultiValueMap.multiValueMap((Map<Object, ? super Collection<ArrayList<Object>>>) multiValueMap0, (Factory<Collection<ArrayList<Object>>>) null);
91:         fail("Expecting exception: IllegalArgumentException");
92:       
93:       } catch(IllegalArgumentException e) {
94:          //
95:          // The factory must not be null
96:          //
97:          verifyException("org.apache.commons.collections4.map.MultiValueMap", e);
98:       }
99:   }
100: 
101:   @Test(timeout = 4000)
102:   public void test06()  throws Throwable  {
103:       MultiValueMap<String, AbstractMap.SimpleEntry<Object, Object>> multiValueMap0 = new MultiValueMap<String, AbstractMap.SimpleEntry<Object, Object>>();
104:       MultiValueMap<ArrayList<Integer>, LinkedList<Object>> multiValueMap1 = new MultiValueMap<ArrayList<Integer>, LinkedList<Object>>();
105:       MultiValueMap<Object, String> multiValueMap2 = new MultiValueMap<Object, String>();
106:       boolean boolean0 = multiValueMap1.removeMapping(multiValueMap2, multiValueMap0);
107:       assertFalse(boolean0);
108:   }
109: 
110:   @Test(timeout = 4000)
111:   public void test07()  throws Throwable  {
112:       MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>> multiValueMap0 = new MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>>();
113:       BiFunction<Object, Object, String> biFunction0 = (BiFunction<Object, Object, String>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
114:       multiValueMap0.merge("7", "7", biFunction0);
115:       MultiValueMap<String, Object> multiValueMap1 = MultiValueMap.multiValueMap((Map<String, ? super Collection<Object>>) multiValueMap0);
116:       MultiValueMap<String, ArrayList<Object>> multiValueMap2 = MultiValueMap.multiValueMap((Map<String, ? super Collection<ArrayList<Object>>>) multiValueMap1);
117:       multiValueMap2.replace("7", (Object) null);
118:       MultiValueMap<String, Collection<String>> multiValueMap3 = MultiValueMap.multiValueMap((Map<String, ? super Collection<Collection<String>>>) multiValueMap1);
119:       boolean boolean0 = multiValueMap3.removeMapping("7", "7");
120:       assertEquals(1, multiValueMap0.size());
121:       assertTrue(boolean0);
122:   }
123: 
124:   @Test(timeout = 4000)
125:   public void test08()  throws Throwable  {
126:       MultiValueMap<AbstractMap.SimpleEntry<Integer, String>, String> multiValueMap0 = new MultiValueMap<AbstractMap.SimpleEntry<Integer, String>, String>();
127:       Integer integer0 = new Integer(0);
128:       AbstractMap.SimpleEntry<Integer, String> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Integer, String>(integer0, "kq<hy]O");
129:       multiValueMap0.put(abstractMap_SimpleEntry0, (Object) null);
130:       boolean boolean0 = multiValueMap0.containsValue((Object) null);
131:       assertEquals(1, multiValueMap0.size());
132:       assertTrue(boolean0);
133:   }
134: 
135:   @Test(timeout = 4000)
136:   public void test09()  throws Throwable  {
137:       MultiValueMap<AbstractMap.SimpleEntry<Integer, String>, String> multiValueMap0 = new MultiValueMap<AbstractMap.SimpleEntry<Integer, String>, String>();
138:       Integer integer0 = new Integer(0);
139:       AbstractMap.SimpleEntry<Integer, String> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Integer, String>(integer0, "kq<hy]O");
140:       multiValueMap0.put(abstractMap_SimpleEntry0, integer0);
141:       boolean boolean0 = multiValueMap0.containsValue((Object) null);
142:       assertFalse(multiValueMap0.isEmpty());
143:       assertFalse(boolean0);
144:   }
145: 
146:   @Test(timeout = 4000)
147:   public void test10()  throws Throwable  {
148:       MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>> multiValueMap0 = new MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>>();
149:       LinkedList<AbstractMap.SimpleImmutableEntry<Integer, String>> linkedList0 = new LinkedList<AbstractMap.SimpleImmutableEntry<Integer, String>>();
150:       Integer integer0 = new Integer((-2372));
151:       AbstractMap.SimpleImmutableEntry<Integer, String> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<Integer, String>(integer0, (String) null);
152:       linkedList0.add(abstractMap_SimpleImmutableEntry0);
153:       multiValueMap0.putAll((String) null, (Collection<AbstractMap.SimpleImmutableEntry<Integer, String>>) linkedList0);
154:       MultiValueMap<String, Object> multiValueMap1 = MultiValueMap.multiValueMap((Map<String, ? super Collection<Object>>) multiValueMap0);
155:       MultiValueMap<String, LinkedList<Object>> multiValueMap2 = new MultiValueMap<String, LinkedList<Object>>();
156:       MultiValueMap<String, HashMap<Integer, Integer>> multiValueMap3 = MultiValueMap.multiValueMap((Map<String, ? super Collection<HashMap<Integer, Integer>>>) multiValueMap2);
157:       multiValueMap3.putAll((Map<? extends String, ?>) multiValueMap1);
158:       assertEquals(1, multiValueMap0.size());
159:       assertFalse(multiValueMap2.isEmpty());
160:   }
161: 
162:   @Test(timeout = 4000)
163:   public void test11()  throws Throwable  {
164:       MultiValueMap<String, AbstractMap.SimpleEntry<Object, Object>> multiValueMap0 = new MultiValueMap<String, AbstractMap.SimpleEntry<Object, Object>>();
165:       Collection<Object> collection0 = multiValueMap0.values();
166:       Collection<Object> collection1 = multiValueMap0.values();
167:       assertSame(collection1, collection0);
168:   }
169: 
170:   @Test(timeout = 4000)
171:   public void test12()  throws Throwable  {
172:       LinkedList<AbstractMap.SimpleImmutableEntry<Integer, String>> linkedList0 = new LinkedList<AbstractMap.SimpleImmutableEntry<Integer, String>>();
173:       MultiValueMap<LinkedList<Object>, LinkedList<Object>> multiValueMap0 = new MultiValueMap<LinkedList<Object>, LinkedList<Object>>();
174:       LinkedList<Object> linkedList1 = new LinkedList<Object>();
175:       boolean boolean0 = multiValueMap0.containsValue((Object) linkedList1, (Object) linkedList0);
176:       assertFalse(boolean0);
177:   }
178: 
179:   @Test(timeout = 4000)
180:   public void test13()  throws Throwable  {
181:       MultiValueMap<LinkedList<Object>, LinkedList<Object>> multiValueMap0 = new MultiValueMap<LinkedList<Object>, LinkedList<Object>>();
182:       LinkedList<Object> linkedList0 = new LinkedList<Object>();
183:       Object object0 = multiValueMap0.putIfAbsent(linkedList0, linkedList0);
184:       AbstractMap.SimpleEntry<Object, String> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Object, String>(multiValueMap0, "+-$>!/");
185:       boolean boolean0 = multiValueMap0.containsValue(object0, (Object) abstractMap_SimpleEntry0);
186:       assertFalse(multiValueMap0.isEmpty());
187:       assertFalse(boolean0);
188:   }
189: 
190:   @Test(timeout = 4000)
191:   public void test14()  throws Throwable  {
192:       Integer integer0 = new Integer(660);
193:       AbstractMap.SimpleImmutableEntry<Integer, String> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<Integer, String>(integer0, " a2IR)=\"sW*s3");
194:       LinkedList<AbstractMap.SimpleImmutableEntry<Integer, String>> linkedList0 = new LinkedList<AbstractMap.SimpleImmutableEntry<Integer, String>>();
195:       linkedList0.add(abstractMap_SimpleImmutableEntry0);
196:       MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>> multiValueMap0 = new MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>>();
197:       multiValueMap0.putAll("<jfUXGA1T3", (Collection<AbstractMap.SimpleImmutableEntry<Integer, String>>) linkedList0);
198:       MultiValueMap<String, Object> multiValueMap1 = MultiValueMap.multiValueMap((Map<String, ? super Collection<Object>>) multiValueMap0);
199:       int int0 = multiValueMap1.size((Object) "<jfUXGA1T3");
200:       assertEquals(1, multiValueMap0.size());
201:       assertEquals(1, int0);
202:   }
203: 
204:   @Test(timeout = 4000)
205:   public void test15()  throws Throwable  {
206:       HashMap<MultiValueMap<Object, Object>, Object> hashMap0 = new HashMap<MultiValueMap<Object, Object>, Object>();
207:       HashMap<Integer, Object> hashMap1 = new HashMap<Integer, Object>();
208:       MultiValueMap<Integer, LinkedList<Object>> multiValueMap0 = MultiValueMap.multiValueMap((Map<Integer, ? super Collection<LinkedList<Object>>>) hashMap1);
209:       int int0 = multiValueMap0.size((Object) hashMap0);
210:       assertEquals(0, int0);
211:   }
212: 
213:   @Test(timeout = 4000)
214:   public void test16()  throws Throwable  {
215:       HashMap<LinkedList<String>, Object> hashMap0 = new HashMap<LinkedList<String>, Object>(0);
216:       MultiValueMap<LinkedList<String>, AbstractMap.SimpleEntry<AbstractMap.SimpleImmutableEntry, Object>> multiValueMap0 = MultiValueMap.multiValueMap((Map<LinkedList<String>, ? super Collection<AbstractMap.SimpleEntry<AbstractMap.SimpleImmutableEntry, Object>>>) hashMap0);
217:       MultiValueMap<LinkedList<String>, HashMap<Object, Object>> multiValueMap1 = MultiValueMap.multiValueMap((Map<LinkedList<String>, ? super Collection<HashMap<Object, Object>>>) multiValueMap0);
218:       LinkedList<String> linkedList0 = new LinkedList<String>();
219:       boolean boolean0 = multiValueMap1.putAll(linkedList0, (Collection<HashMap<Object, Object>>) null);
220:       assertFalse(boolean0);
221:   }
222: 
223:   @Test(timeout = 4000)
224:   public void test17()  throws Throwable  {
225:       MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>> multiValueMap0 = new MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>>();
226:       LinkedList<AbstractMap.SimpleImmutableEntry<Integer, String>> linkedList0 = new LinkedList<AbstractMap.SimpleImmutableEntry<Integer, String>>();
227:       Integer integer0 = new Integer((-2372));
228:       AbstractMap.SimpleImmutableEntry<Integer, String> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<Integer, String>(integer0, (String) null);
229:       linkedList0.add(abstractMap_SimpleImmutableEntry0);
230:       multiValueMap0.putAll((String) null, (Collection<AbstractMap.SimpleImmutableEntry<Integer, String>>) linkedList0);
231:       boolean boolean0 = multiValueMap0.putAll((String) null, (Collection<AbstractMap.SimpleImmutableEntry<Integer, String>>) linkedList0);
232:       assertEquals(1, linkedList0.size());
233:       assertTrue(boolean0);
234:   }
235: 
236:   @Test(timeout = 4000)
237:   public void test18()  throws Throwable  {
238:       MultiValueMap<AbstractMap.SimpleEntry<String, Object>, Object> multiValueMap0 = new MultiValueMap<AbstractMap.SimpleEntry<String, Object>, Object>();
239:       Iterator<Object> iterator0 = multiValueMap0.iterator((Object) "3~c!D|*u|f");
240:       assertNotNull(iterator0);
241:   }
242: 
243:   @Test(timeout = 4000)
244:   public void test19()  throws Throwable  {
245:       LinkedList<AbstractMap.SimpleImmutableEntry<Integer, String>> linkedList0 = new LinkedList<AbstractMap.SimpleImmutableEntry<Integer, String>>();
246:       MultiValueMap<LinkedList<Object>, LinkedList<Object>> multiValueMap0 = new MultiValueMap<LinkedList<Object>, LinkedList<Object>>();
247:       LinkedList<Object> linkedList1 = new LinkedList<Object>();
248:       multiValueMap0.putIfAbsent(linkedList1, linkedList1);
249:       boolean boolean0 = multiValueMap0.containsValue((Object) linkedList0, (Object) linkedList0);
250:       assertEquals(1, multiValueMap0.size());
251:       assertTrue(boolean0);
252:   }
253: 
254:   @Test(timeout = 4000)
255:   public void test20()  throws Throwable  {
256:       LinkedList<AbstractMap.SimpleImmutableEntry<Integer, String>> linkedList0 = new LinkedList<AbstractMap.SimpleImmutableEntry<Integer, String>>();
257:       MultiValueMap<LinkedList<Object>, LinkedList<Object>> multiValueMap0 = new MultiValueMap<LinkedList<Object>, LinkedList<Object>>();
258:       LinkedList<Object> linkedList1 = new LinkedList<Object>();
259:       linkedList1.add((Object) multiValueMap0);
260:       multiValueMap0.putIfAbsent(linkedList1, linkedList1);
261:       // Undeclared exception!
262:       try { 
263:         multiValueMap0.containsValue((Object) linkedList1, (Object) linkedList0);
264:         fail("Expecting exception: StackOverflowError");
265:       
266:       } catch(StackOverflowError e) {
267:          //
268:          // no message in exception (getMessage() returned null)
269:          //
270:       }
271:   }
272: 
273:   @Test(timeout = 4000)
274:   public void test21()  throws Throwable  {
275:       MultiValueMap<Integer, LinkedList<Object>> multiValueMap0 = new MultiValueMap<Integer, LinkedList<Object>>();
276:       Factory<ArrayList<Object>> factory0 = ExceptionFactory.exceptionFactory();
277:       MultiValueMap<Integer, Object> multiValueMap1 = MultiValueMap.multiValueMap((Map<Integer, ? super ArrayList<Object>>) multiValueMap0, factory0);
278:       // Undeclared exception!
279:       try { 
280:         multiValueMap1.createCollection(4);
281:         fail("Expecting exception: RuntimeException");
282:       
283:       } catch(RuntimeException e) {
284:          //
285:          // ExceptionFactory invoked
286:          //
287:          verifyException("org.apache.commons.collections4.functors.ExceptionFactory", e);
288:       }
289:   }
290: 
291:   @Test(timeout = 4000)
292:   public void test22()  throws Throwable  {
293:       MultiValueMap<LinkedList<Object>, ArrayList<Object>> multiValueMap0 = new MultiValueMap<LinkedList<Object>, ArrayList<Object>>();
294:       multiValueMap0.map = null;
295:       // Undeclared exception!
296:       try { 
297:         multiValueMap0.entrySet();
298:         fail("Expecting exception: NullPointerException");
299:       
300:       } catch(NullPointerException e) {
301:          //
302:          // no message in exception (getMessage() returned null)
303:          //
304:          verifyException("org.apache.commons.collections4.map.AbstractMapDecorator", e);
305:       }
306:   }
307: 
308:   @Test(timeout = 4000)
309:   public void test23()  throws Throwable  {
310:       MultiValueMap<String, Collection<Object>> multiValueMap0 = new MultiValueMap<String, Collection<Object>>();
311:       MultiValueMap<String, ArrayList<AbstractMap.SimpleEntry>> multiValueMap1 = MultiValueMap.multiValueMap((Map<String, ? super Collection<ArrayList<AbstractMap.SimpleEntry>>>) multiValueMap0);
312:       multiValueMap0.map = (Map<String, Object>) multiValueMap1;
313:       // Undeclared exception!
314:       try { 
315:         multiValueMap0.iterator();
316:         fail("Expecting exception: StackOverflowError");
317:       
318:       } catch(StackOverflowError e) {
319:          //
320:          // no message in exception (getMessage() returned null)
321:          //
322:       }
323:   }
324: 
325:   @Test(timeout = 4000)
326:   public void test24()  throws Throwable  {
327:       HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
328:       hashMap0.put("294", "294");
329:       MultiValueMap<String, Collection<String>> multiValueMap0 = MultiValueMap.multiValueMap((Map<String, ? super Collection<Collection<String>>>) hashMap0);
330:       // Undeclared exception!
331:       try { 
332:         multiValueMap0.iterator((Object) "294");
333:         fail("Expecting exception: ClassCastException");
334:       
335:       } catch(ClassCastException e) {
336:          //
337:          // java.lang.String cannot be cast to java.util.Collection
338:          //
339:          verifyException("org.apache.commons.collections4.map.MultiValueMap", e);
340:       }
341:   }
342: 
343:   @Test(timeout = 4000)
344:   public void test25()  throws Throwable  {
345:       MultiValueMap<Integer, Integer> multiValueMap0 = new MultiValueMap<Integer, Integer>();
346:       multiValueMap0.map = null;
347:       // Undeclared exception!
348:       try { 
349:         multiValueMap0.iterator((Object) null);
350:         fail("Expecting exception: NullPointerException");
351:       
352:       } catch(NullPointerException e) {
353:          //
354:          // no message in exception (getMessage() returned null)
355:          //
356:          verifyException("org.apache.commons.collections4.map.AbstractMapDecorator", e);
357:       }
358:   }
359: 
360:   @Test(timeout = 4000)
361:   public void test26()  throws Throwable  {
362:       MultiValueMap<LinkedList<Object>, LinkedList<Object>> multiValueMap0 = new MultiValueMap<LinkedList<Object>, LinkedList<Object>>();
363:       LinkedList<Object> linkedList0 = new LinkedList<Object>();
364:       Object object0 = multiValueMap0.putIfAbsent(linkedList0, linkedList0);
365:       linkedList0.add(object0);
366:       MultiValueMap<Comparable<String>, Collection<Object>> multiValueMap1 = new MultiValueMap<Comparable<String>, Collection<Object>>();
367:       // Undeclared exception!
368:       try { 
369:         multiValueMap1.iterator((Object) linkedList0);
370:         fail("Expecting exception: StackOverflowError");
371:       
372:       } catch(StackOverflowError e) {
373:          //
374:          // no message in exception (getMessage() returned null)
375:          //
376:       }
377:   }
378: 
379:   @Test(timeout = 4000)
380:   public void test27()  throws Throwable  {
381:       // Undeclared exception!
382:       try { 
383:         MultiValueMap.multiValueMap((Map<ArrayList<Object>, ? super Collection<String>>) null);
384:         fail("Expecting exception: NullPointerException");
385:       
386:       } catch(NullPointerException e) {
387:          //
388:          // Map must not be null.
389:          //
390:          verifyException("org.apache.commons.collections4.map.AbstractMapDecorator", e);
391:       }
392:   }
393: 
394:   @Test(timeout = 4000)
395:   public void test28()  throws Throwable  {
396:       // Undeclared exception!
397:       try { 
398:         MultiValueMap.multiValueMap((Map<HashMap<String, Object>, ? super Collection<Object>>) null, (Factory<Collection<Object>>) null);
399:         fail("Expecting exception: NullPointerException");
400:       
401:       } catch(NullPointerException e) {
402:          //
403:          // Map must not be null.
404:          //
405:          verifyException("org.apache.commons.collections4.map.AbstractMapDecorator", e);
406:       }
407:   }
408: 
409:   @Test(timeout = 4000)
410:   public void test29()  throws Throwable  {
411:       Integer integer0 = new Integer(0);
412:       AbstractMap.SimpleEntry<Integer, String> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Integer, String>(integer0, "kq<hy]O");
413:       HashMap<AbstractMap.SimpleEntry<Integer, String>, Object> hashMap0 = new HashMap<AbstractMap.SimpleEntry<Integer, String>, Object>();
414:       hashMap0.put(abstractMap_SimpleEntry0, abstractMap_SimpleEntry0);
415:       MultiValueMap<AbstractMap.SimpleEntry<Integer, String>, ArrayList<AbstractMap.SimpleEntry>> multiValueMap0 = MultiValueMap.multiValueMap((Map<AbstractMap.SimpleEntry<Integer, String>, ? super Collection<ArrayList<AbstractMap.SimpleEntry>>>) hashMap0);
416:       Factory<Collection<Object>> factory0 = ExceptionFactory.exceptionFactory();
417:       MultiValueMap<AbstractMap.SimpleEntry<Integer, String>, String> multiValueMap1 = new MultiValueMap<AbstractMap.SimpleEntry<Integer, String>, String>((Map<AbstractMap.SimpleEntry<Integer, String>, ? super Collection<Object>>) multiValueMap0, factory0);
418:       // Undeclared exception!
419:       try { 
420:         multiValueMap1.put(abstractMap_SimpleEntry0, abstractMap_SimpleEntry0);
421:         fail("Expecting exception: ClassCastException");
422:       
423:       } catch(ClassCastException e) {
424:          //
425:          // java.util.AbstractMap$SimpleEntry cannot be cast to java.util.Collection
426:          //
427:          verifyException("org.apache.commons.collections4.map.MultiValueMap", e);
428:       }
429:   }
430: 
431:   @Test(timeout = 4000)
432:   public void test30()  throws Throwable  {
433:       Integer integer0 = new Integer(1);
434:       AbstractMap.SimpleEntry<Integer, String> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Integer, String>(integer0, "uo<ym^=`*'Z");
435:       HashMap<AbstractMap.SimpleEntry<Integer, String>, Object> hashMap0 = new HashMap<AbstractMap.SimpleEntry<Integer, String>, Object>();
436:       ConstantFactory<Collection<String>> constantFactory0 = new ConstantFactory<Collection<String>>((Collection<String>) null);
437:       MultiValueMap<AbstractMap.SimpleEntry<Integer, String>, String> multiValueMap0 = MultiValueMap.multiValueMap((Map<AbstractMap.SimpleEntry<Integer, String>, ? super Collection<String>>) hashMap0, (Factory<Collection<String>>) constantFactory0);
438:       // Undeclared exception!
439:       try { 
440:         multiValueMap0.put(abstractMap_SimpleEntry0, "uo<ym^=`*'Z");
441:         fail("Expecting exception: NullPointerException");
442:       
443:       } catch(NullPointerException e) {
444:          //
445:          // no message in exception (getMessage() returned null)
446:          //
447:          verifyException("org.apache.commons.collections4.map.MultiValueMap", e);
448:       }
449:   }
450: 
451:   @Test(timeout = 4000)
452:   public void test31()  throws Throwable  {
453:       HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>(2147483645);
454:       LinkedList<Object> linkedList0 = new LinkedList<Object>();
455:       ConstantFactory<LinkedList<Object>> constantFactory0 = new ConstantFactory<LinkedList<Object>>(linkedList0);
456:       MultiValueMap<Object, AbstractMap.SimpleEntry<Object, Object>> multiValueMap0 = new MultiValueMap<Object, AbstractMap.SimpleEntry<Object, Object>>((Map<Object, ? super LinkedList<Object>>) hashMap0, (Factory<LinkedList<Object>>) constantFactory0);
457:       ArrayList<String> arrayList0 = new ArrayList<String>();
458:       HashMap<ArrayList<Integer>, Object> hashMap1 = new HashMap<ArrayList<Integer>, Object>();
459:       MultiValueMap<ArrayList<Integer>, Object> multiValueMap1 = MultiValueMap.multiValueMap((Map<ArrayList<Integer>, ? super Collection<Object>>) hashMap1);
460:       // Undeclared exception!
461:       multiValueMap0.put(arrayList0, multiValueMap1);
462:   }
463: 
464:   @Test(timeout = 4000)
465:   public void test32()  throws Throwable  {
466:       HashMap<AbstractMap.SimpleImmutableEntry<Object, String>, Object> hashMap0 = new HashMap<AbstractMap.SimpleImmutableEntry<Object, String>, Object>();
467:       MultiValueMap<AbstractMap.SimpleImmutableEntry<Object, String>, AbstractMap.SimpleEntry<Integer, Integer>> multiValueMap0 = MultiValueMap.multiValueMap((Map<AbstractMap.SimpleImmutableEntry<Object, String>, ? super Collection<AbstractMap.SimpleEntry<Integer, Integer>>>) hashMap0);
468:       AbstractMap.SimpleEntry<Integer, String> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Integer, String>((Integer) null, "");
469:       ArrayList<Object> arrayList0 = new ArrayList<Object>();
470:       AbstractMap.SimpleImmutableEntry<Object, String> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<Object, String>(arrayList0, "org.apache.commons.collections4.iterators.EmptyMapIterator");
471:       hashMap0.put(abstractMap_SimpleImmutableEntry0, abstractMap_SimpleEntry0);
472:       arrayList0.add((Object) multiValueMap0);
473:       // Undeclared exception!
474:       try { 
475:         multiValueMap0.put(abstractMap_SimpleImmutableEntry0, "");
476:         fail("Expecting exception: StackOverflowError");
477:       
478:       } catch(StackOverflowError e) {
479:          //
480:          // no message in exception (getMessage() returned null)
481:          //
482:       }
483:   }
484: 
485:   @Test(timeout = 4000)
486:   public void test33()  throws Throwable  {
487:       HashMap<ArrayList<Collection<String>>, Object> hashMap0 = new HashMap<ArrayList<Collection<String>>, Object>(5);
488:       MultiValueMap<Collection<String>, ArrayList<Collection<String>>> multiValueMap0 = new MultiValueMap<Collection<String>, ArrayList<Collection<String>>>();
489:       Set<Collection<String>> set0 = multiValueMap0.keySet();
490:       ConstantFactory<Collection<Collection<String>>> constantFactory0 = new ConstantFactory<Collection<Collection<String>>>(set0);
491:       MultiValueMap<ArrayList<Collection<String>>, Collection<String>> multiValueMap1 = MultiValueMap.multiValueMap((Map<ArrayList<Collection<String>>, ? super Collection<Collection<String>>>) hashMap0, (Factory<Collection<Collection<String>>>) constantFactory0);
492:       ArrayList<Collection<String>> arrayList0 = new ArrayList<Collection<String>>();
493:       // Undeclared exception!
494:       try { 
495:         multiValueMap1.put(arrayList0, arrayList0);
496:         fail("Expecting exception: UnsupportedOperationException");
497:       
498:       } catch(UnsupportedOperationException e) {
499:          //
500:          // no message in exception (getMessage() returned null)
501:          //
502:          verifyException("java.util.AbstractCollection", e);
503:       }
504:   }
505: 
506:   @Test(timeout = 4000)
507:   public void test34()  throws Throwable  {
508:       MultiValueMap<String, LinkedList<Object>> multiValueMap0 = new MultiValueMap<String, LinkedList<Object>>();
509:       MultiValueMap<String, HashMap<Object, Object>> multiValueMap1 = MultiValueMap.multiValueMap((Map<String, ? super Collection<HashMap<Object, Object>>>) multiValueMap0);
510:       Factory<LinkedList<String>> factory0 = ExceptionFactory.exceptionFactory();
511:       MultiValueMap<String, String> multiValueMap2 = new MultiValueMap<String, String>((Map<String, ? super LinkedList<String>>) multiValueMap1, factory0);
512:       // Undeclared exception!
513:       try { 
514:         multiValueMap2.put("w][T}>", (Object) null);
515:         fail("Expecting exception: RuntimeException");
516:       
517:       } catch(RuntimeException e) {
518:          //
519:          // ExceptionFactory invoked
520:          //
521:          verifyException("org.apache.commons.collections4.functors.ExceptionFactory", e);
522:       }
523:   }
524: 
525:   @Test(timeout = 4000)
526:   public void test35()  throws Throwable  {
527:       MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>> multiValueMap0 = new MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>>();
528:       ArrayList<AbstractMap.SimpleImmutableEntry<Integer, String>> arrayList0 = new ArrayList<AbstractMap.SimpleImmutableEntry<Integer, String>>();
529:       arrayList0.add((AbstractMap.SimpleImmutableEntry<Integer, String>) null);
530:       multiValueMap0.map = null;
531:       // Undeclared exception!
532:       try { 
533:         multiValueMap0.putAll("ywBkynBRs>3K", (Collection<AbstractMap.SimpleImmutableEntry<Integer, String>>) arrayList0);
534:         fail("Expecting exception: NullPointerException");
535:       
536:       } catch(NullPointerException e) {
537:          //
538:          // no message in exception (getMessage() returned null)
539:          //
540:          verifyException("org.apache.commons.collections4.map.MultiValueMap", e);
541:       }
542:   }
543: 
544:   @Test(timeout = 4000)
545:   public void test36()  throws Throwable  {
546:       LinkedList<AbstractMap.SimpleImmutableEntry<Integer, String>> linkedList0 = new LinkedList<AbstractMap.SimpleImmutableEntry<Integer, String>>();
547:       linkedList0.addFirst((AbstractMap.SimpleImmutableEntry<Integer, String>) null);
548:       MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>> multiValueMap0 = new MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>>();
549:       MultiValueMap<String, ArrayList<AbstractMap.SimpleImmutableEntry>> multiValueMap1 = MultiValueMap.multiValueMap((Map<String, ? super Collection<ArrayList<AbstractMap.SimpleImmutableEntry>>>) multiValueMap0);
550:       multiValueMap0.map = (Map<String, Object>) multiValueMap1;
551:       // Undeclared exception!
552:       try { 
553:         multiValueMap0.putAll("", (Collection<AbstractMap.SimpleImmutableEntry<Integer, String>>) linkedList0);
554:         fail("Expecting exception: StackOverflowError");
555:       
556:       } catch(StackOverflowError e) {
557:          //
558:          // no message in exception (getMessage() returned null)
559:          //
560:       }
561:   }
562: 
563:   @Test(timeout = 4000)
564:   public void test37()  throws Throwable  {
565:       LinkedList<AbstractMap.SimpleImmutableEntry<Integer, String>> linkedList0 = new LinkedList<AbstractMap.SimpleImmutableEntry<Integer, String>>();
566:       linkedList0.add((AbstractMap.SimpleImmutableEntry<Integer, String>) null);
567:       MultiValueMap<String, LinkedList<String>> multiValueMap0 = new MultiValueMap<String, LinkedList<String>>();
568:       MultiValueMap<Object, ArrayList<String>> multiValueMap1 = new MultiValueMap<Object, ArrayList<String>>();
569:       LinkedList<MultiValueMap<String, Object>> linkedList1 = new LinkedList<MultiValueMap<String, Object>>();
570:       ConstantFactory<LinkedList<MultiValueMap<String, Object>>> constantFactory0 = new ConstantFactory<LinkedList<MultiValueMap<String, Object>>>(linkedList1);
571:       MultiValueMap<Object, MultiValueMap<String, Object>> multiValueMap2 = MultiValueMap.multiValueMap((Map<Object, ? super LinkedList<MultiValueMap<String, Object>>>) multiValueMap1, (Factory<LinkedList<MultiValueMap<String, Object>>>) constantFactory0);
572:       Collection<Object> collection0 = multiValueMap2.values();
573:       Factory<Collection<Object>> factory0 = ConstantFactory.constantFactory(collection0);
574:       MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>> multiValueMap3 = new MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>>((Map<String, ? super Collection<Object>>) multiValueMap0, factory0);
575:       // Undeclared exception!
576:       try { 
577:         multiValueMap3.putAll((String) null, (Collection<AbstractMap.SimpleImmutableEntry<Integer, String>>) linkedList0);
578:         fail("Expecting exception: UnsupportedOperationException");
579:       
580:       } catch(UnsupportedOperationException e) {
581:          //
582:          // no message in exception (getMessage() returned null)
583:          //
584:          verifyException("java.util.AbstractCollection", e);
585:       }
586:   }
587: 
588:   @Test(timeout = 4000)
589:   public void test38()  throws Throwable  {
590:       LinkedList<AbstractMap.SimpleImmutableEntry<Integer, String>> linkedList0 = new LinkedList<AbstractMap.SimpleImmutableEntry<Integer, String>>();
591:       linkedList0.add((AbstractMap.SimpleImmutableEntry<Integer, String>) null);
592:       HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
593:       Factory<ArrayList<Object>> factory0 = ExceptionFactory.exceptionFactory();
594:       MultiValueMap<String, ConstantFactory<String>> multiValueMap0 = new MultiValueMap<String, ConstantFactory<String>>((Map<String, ? super ArrayList<Object>>) hashMap0, factory0);
595:       ConstantFactory<LinkedList<AbstractMap.SimpleImmutableEntry<Integer, String>>> constantFactory0 = new ConstantFactory<LinkedList<AbstractMap.SimpleImmutableEntry<Integer, String>>>(linkedList0);
596:       MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>> multiValueMap1 = MultiValueMap.multiValueMap((Map<String, ? super LinkedList<AbstractMap.SimpleImmutableEntry<Integer, String>>>) multiValueMap0, (Factory<LinkedList<AbstractMap.SimpleImmutableEntry<Integer, String>>>) constantFactory0);
597:       // Undeclared exception!
598:       try { 
599:         multiValueMap1.putAll((String) null, (Collection<AbstractMap.SimpleImmutableEntry<Integer, String>>) linkedList0);
600:         fail("Expecting exception: RuntimeException");
601:       
602:       } catch(RuntimeException e) {
603:          //
604:          // ExceptionFactory invoked
605:          //
606:          verifyException("org.apache.commons.collections4.functors.ExceptionFactory", e);
607:       }
608:   }
609: 
610:   @Test(timeout = 4000)
611:   public void test39()  throws Throwable  {
612:       Integer integer0 = new Integer(2615);
613:       HashMap<ArrayList<String>, Object> hashMap0 = new HashMap<ArrayList<String>, Object>();
614:       ArrayList<String> arrayList0 = new ArrayList<String>();
615:       hashMap0.put(arrayList0, integer0);
616:       MultiValueMap<ArrayList<String>, String> multiValueMap0 = MultiValueMap.multiValueMap((Map<ArrayList<String>, ? super Collection<String>>) hashMap0);
617:       // Undeclared exception!
618:       try { 
619:         multiValueMap0.putAll((Map<? extends ArrayList<String>, ?>) hashMap0);
620:         fail("Expecting exception: ClassCastException");
621:       
622:       } catch(ClassCastException e) {
623:          //
624:          // java.lang.Integer cannot be cast to java.util.Collection
625:          //
626:          verifyException("org.apache.commons.collections4.map.MultiValueMap", e);
627:       }
628:   }
629: 
630:   @Test(timeout = 4000)
631:   public void test40()  throws Throwable  {
632:       MultiValueMap<HashMap<String, Object>, Object> multiValueMap0 = new MultiValueMap<HashMap<String, Object>, Object>();
633:       // Undeclared exception!
634:       try { 
635:         multiValueMap0.putAll((Map<? extends HashMap<String, Object>, ?>) null);
636:         fail("Expecting exception: NullPointerException");
637:       
638:       } catch(NullPointerException e) {
639:          //
640:          // no message in exception (getMessage() returned null)
641:          //
642:          verifyException("org.apache.commons.collections4.map.MultiValueMap", e);
643:       }
644:   }
645: 
646:   @Test(timeout = 4000)
647:   public void test41()  throws Throwable  {
648:       MultiValueMap<AbstractMap.SimpleEntry<String, Object>, Object> multiValueMap0 = new MultiValueMap<AbstractMap.SimpleEntry<String, Object>, Object>();
649:       multiValueMap0.map = null;
650:       // Undeclared exception!
651:       try { 
652:         multiValueMap0.removeMapping((Object) null, (Object) null);
653:         fail("Expecting exception: NullPointerException");
654:       
655:       } catch(NullPointerException e) {
656:          //
657:          // no message in exception (getMessage() returned null)
658:          //
659:          verifyException("org.apache.commons.collections4.map.MultiValueMap", e);
660:       }
661:   }
662: 
663:   @Test(timeout = 4000)
664:   public void test42()  throws Throwable  {
665:       HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
666:       MultiValueMap<String, ArrayList<Integer>> multiValueMap0 = MultiValueMap.multiValueMap((Map<String, ? super Collection<ArrayList<Integer>>>) hashMap0);
667:       hashMap0.put("org.apache.commons.collections4.iterators.EmptyMapIterator", multiValueMap0);
668:       LinkedList<AbstractMap.SimpleEntry<Integer, String>> linkedList0 = new LinkedList<AbstractMap.SimpleEntry<Integer, String>>();
669:       // Undeclared exception!
670:       try { 
671:         multiValueMap0.removeMapping(hashMap0, linkedList0);
672:         fail("Expecting exception: StackOverflowError");
673:       
674:       } catch(StackOverflowError e) {
675:          //
676:          // no message in exception (getMessage() returned null)
677:          //
678:       }
679:   }
680: 
681:   @Test(timeout = 4000)
682:   public void test43()  throws Throwable  {
683:       MultiValueMap<Integer, Integer> multiValueMap0 = new MultiValueMap<Integer, Integer>();
684:       multiValueMap0.map = null;
685:       Object object0 = new Object();
686:       // Undeclared exception!
687:       try { 
688:         multiValueMap0.size(object0);
689:         fail("Expecting exception: NullPointerException");
690:       
691:       } catch(NullPointerException e) {
692:          //
693:          // no message in exception (getMessage() returned null)
694:          //
695:          verifyException("org.apache.commons.collections4.map.MultiValueMap", e);
696:       }
697:   }
698: 
699:   @Test(timeout = 4000)
700:   public void test44()  throws Throwable  {
701:       MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>> multiValueMap0 = new MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>>();
702:       MultiValueMap<String, Object> multiValueMap1 = MultiValueMap.multiValueMap((Map<String, ? super Collection<Object>>) multiValueMap0);
703:       Object object0 = multiValueMap1.put("%L{u)]Z\"Bl$ww?~ ", multiValueMap0);
704:       MultiValueMap<LinkedList<Object>, Object> multiValueMap2 = new MultiValueMap<LinkedList<Object>, Object>();
705:       // Undeclared exception!
706:       try { 
707:         multiValueMap2.size(object0);
708:         fail("Expecting exception: StackOverflowError");
709:       
710:       } catch(StackOverflowError e) {
711:          //
712:          // no message in exception (getMessage() returned null)
713:          //
714:       }
715:   }
716: 
717:   @Test(timeout = 4000)
718:   public void test45()  throws Throwable  {
719:       HashMap<Integer, Object> hashMap0 = new HashMap<Integer, Object>();
720:       MultiValueMap<Integer, LinkedList<Object>> multiValueMap0 = MultiValueMap.multiValueMap((Map<Integer, ? super Collection<LinkedList<Object>>>) hashMap0);
721:       Integer integer0 = new Integer(1264);
722:       hashMap0.put(integer0, multiValueMap0);
723:       MultiValueMap<Integer, Collection<Collection<String>>> multiValueMap1 = MultiValueMap.multiValueMap((Map<Integer, ? super Collection<Collection<Collection<String>>>>) multiValueMap0);
724:       // Undeclared exception!
725:       try { 
726:         multiValueMap1.totalSize();
727:         fail("Expecting exception: ClassCastException");
728:       
729:       } catch(ClassCastException e) {
730:          //
731:          // org.apache.commons.collections4.map.MultiValueMap cannot be cast to java.util.Collection
732:          //
733:          verifyException("org.apache.commons.collections4.map.MultiValueMap", e);
734:       }
735:   }
736: 
737:   @Test(timeout = 4000)
738:   public void test46()  throws Throwable  {
739:       HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
740:       ConstantFactory<Object> constantFactory0 = new ConstantFactory<Object>(hashMap0);
741:       hashMap0.put(constantFactory0, constantFactory0);
742:       MultiValueMap<Object, LinkedList<LinkedList<String>>> multiValueMap0 = MultiValueMap.multiValueMap((Map<Object, ? super Collection<LinkedList<LinkedList<String>>>>) hashMap0);
743:       // Undeclared exception!
744:       try { 
745:         multiValueMap0.totalSize();
746:         fail("Expecting exception: IllegalArgumentException");
747:       
748:       } catch(IllegalArgumentException e) {
749:          //
750:          // Unsupported object type: org.apache.commons.collections4.functors.ConstantFactory
751:          //
752:          verifyException("org.apache.commons.collections4.CollectionUtils", e);
753:       }
754:   }
755: 
756:   @Test(timeout = 4000)
757:   public void test47()  throws Throwable  {
758:       MultiValueMap<Collection<Object>, LinkedList<String>> multiValueMap0 = new MultiValueMap<Collection<Object>, LinkedList<String>>();
759:       Collection<Object> collection0 = multiValueMap0.values();
760:       BiFunction<Object, Object, Object> biFunction0 = (BiFunction<Object, Object, Object>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
761:       multiValueMap0.merge(collection0, collection0, biFunction0);
762:       BiFunction<Object, Object, String> biFunction1 = (BiFunction<Object, Object, String>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
763:       doReturn((Object) null).when(biFunction1).apply(any() , any());
764:       multiValueMap0.replaceAll(biFunction1);
765:       MultiValueMap<Collection<Object>, String> multiValueMap1 = MultiValueMap.multiValueMap((Map<Collection<Object>, ? super Collection<String>>) multiValueMap0);
766:       // Undeclared exception!
767:       try { 
768:         multiValueMap1.totalSize();
769:         fail("Expecting exception: NullPointerException");
770:       
771:       } catch(NullPointerException e) {
772:          //
773:          // no message in exception (getMessage() returned null)
774:          //
775:          verifyException("org.apache.commons.collections4.map.MultiValueMap$ValuesIterator", e);
776:       }
777:   }
778: 
779:   @Test(timeout = 4000)
780:   public void test48()  throws Throwable  {
781:       MultiValueMap<LinkedList<String>, AbstractMap.SimpleEntry<Integer, Object>> multiValueMap0 = new MultiValueMap<LinkedList<String>, AbstractMap.SimpleEntry<Integer, Object>>();
782:       LinkedList<ArrayList<Object>> linkedList0 = new LinkedList<ArrayList<Object>>();
783:       ConstantFactory<LinkedList<ArrayList<Object>>> constantFactory0 = new ConstantFactory<LinkedList<ArrayList<Object>>>(linkedList0);
784:       MultiValueMap<LinkedList<String>, String> multiValueMap1 = MultiValueMap.multiValueMap((Map<LinkedList<String>, ? super Collection<String>>) multiValueMap0);
785:       multiValueMap0.map = (Map<LinkedList<String>, Object>) multiValueMap1;
786:       MultiValueMap<LinkedList<String>, ArrayList<Object>> multiValueMap2 = MultiValueMap.multiValueMap((Map<LinkedList<String>, ? super LinkedList<ArrayList<Object>>>) multiValueMap0, (Factory<LinkedList<ArrayList<Object>>>) constantFactory0);
787:       // Undeclared exception!
788:       try { 
789:         multiValueMap2.totalSize();
790:         fail("Expecting exception: StackOverflowError");
791:       
792:       } catch(StackOverflowError e) {
793:          //
794:          // no message in exception (getMessage() returned null)
795:          //
796:       }
797:   }
798: 
799:   @Test(timeout = 4000)
800:   public void test49()  throws Throwable  {
801:       HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
802:       MultiValueMap<Object, LinkedList<LinkedList<String>>> multiValueMap0 = MultiValueMap.multiValueMap((Map<Object, ? super Collection<LinkedList<LinkedList<String>>>>) hashMap0);
803:       Collection<LinkedList<LinkedList<String>>> collection0 = multiValueMap0.createCollection(1883);
804:       assertNotNull(collection0);
805:   }
806: 
807:   @Test(timeout = 4000)
808:   public void test50()  throws Throwable  {
809:       MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>> multiValueMap0 = new MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>>();
810:       BiFunction<Object, Object, String> biFunction0 = (BiFunction<Object, Object, String>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
811:       multiValueMap0.merge("7", "7", biFunction0);
812:       MultiValueMap<String, Object> multiValueMap1 = MultiValueMap.multiValueMap((Map<String, ? super Collection<Object>>) multiValueMap0);
813:       MultiValueMap<String, ArrayList<Object>> multiValueMap2 = MultiValueMap.multiValueMap((Map<String, ? super Collection<ArrayList<Object>>>) multiValueMap1);
814:       Factory<Collection<Object>> factory0 = ExceptionFactory.exceptionFactory();
815:       MultiValueMap<String, LinkedList<Integer>> multiValueMap3 = new MultiValueMap<String, LinkedList<Integer>>((Map<String, ? super Collection<Object>>) multiValueMap2, factory0);
816:       multiValueMap3.getCollection("7");
817:       assertEquals(1, multiValueMap0.size());
818:       assertFalse(multiValueMap0.isEmpty());
819:   }
820: 
821:   @Test(timeout = 4000)
822:   public void test51()  throws Throwable  {
823:       HashMap<LinkedList<ArrayList<String>>, Object> hashMap0 = new HashMap<LinkedList<ArrayList<String>>, Object>();
824:       MultiValueMap<LinkedList<ArrayList<String>>, AbstractMap.SimpleEntry<HashMap<Integer, String>, Integer>> multiValueMap0 = MultiValueMap.multiValueMap((Map<LinkedList<ArrayList<String>>, ? super Collection<AbstractMap.SimpleEntry<HashMap<Integer, String>, Integer>>>) hashMap0);
825:       LinkedList<ArrayList<String>> linkedList0 = new LinkedList<ArrayList<String>>();
826:       hashMap0.put(linkedList0, linkedList0);
827:       Class<Object> class0 = Object.class;
828:       MultiValueMap<LinkedList<ArrayList<String>>, LinkedList<HashMap>> multiValueMap1 = MultiValueMap.multiValueMap((Map<LinkedList<ArrayList<String>>, ? super LinkedList<LinkedList<HashMap>>>) multiValueMap0, (Class<LinkedList<LinkedList<HashMap>>>) class0);
829:       assertFalse(multiValueMap1.isEmpty());
830:   }
831: 
832:   @Test(timeout = 4000)
833:   public void test52()  throws Throwable  {
834:       MultiValueMap<LinkedList<String>, ArrayList<Object>> multiValueMap0 = new MultiValueMap<LinkedList<String>, ArrayList<Object>>();
835:       LinkedList<String> linkedList0 = new LinkedList<String>();
836:       Integer integer0 = new Integer(3170);
837:       multiValueMap0.put(linkedList0, integer0);
838:       int int0 = multiValueMap0.totalSize();
839:       assertFalse(multiValueMap0.isEmpty());
840:       assertEquals(1, int0);
841:   }
842: 
843:   @Test(timeout = 4000)
844:   public void test53()  throws Throwable  {
845:       MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>> multiValueMap0 = new MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>>();
846:       Integer integer0 = new Integer(2615);
847:       multiValueMap0.putIfAbsent("Iterator ms no be null", integer0);
848:       MultiValueMap<String, Collection<String>> multiValueMap1 = MultiValueMap.multiValueMap((Map<String, ? super Collection<Collection<String>>>) multiValueMap0);
849:       boolean boolean0 = multiValueMap1.removeMapping("Iterator ms no be null", "%L{u)]Z\"Bl$ww?~ ");
850:       assertFalse(multiValueMap0.isEmpty());
851:       assertFalse(boolean0);
852:   }
853: 
854:   @Test(timeout = 4000)
855:   public void test54()  throws Throwable  {
856:       HashMap<LinkedList<ConstantFactory<Object>>, Object> hashMap0 = new HashMap<LinkedList<ConstantFactory<Object>>, Object>();
857:       ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
858:       LinkedList<ConstantFactory<Object>> linkedList0 = new LinkedList<ConstantFactory<Object>>();
859:       LinkedList<Object> linkedList1 = new LinkedList<Object>();
860:       hashMap0.put(linkedList0, linkedList1);
861:       Factory<Collection<Integer>> factory0 = ConstantFactory.constantFactory((Collection<Integer>) arrayList0);
862:       MultiValueMap<LinkedList<ConstantFactory<Object>>, ArrayList<Integer>> multiValueMap0 = new MultiValueMap<LinkedList<ConstantFactory<Object>>, ArrayList<Integer>>((Map<LinkedList<ConstantFactory<Object>>, ? super Collection<Integer>>) hashMap0, factory0);
863:       multiValueMap0.putAll((Map<? extends LinkedList<ConstantFactory<Object>>, ?>) hashMap0);
864:       boolean boolean0 = multiValueMap0.removeMapping(linkedList0, linkedList1);
865:       assertEquals(0, multiValueMap0.size());
866:       assertTrue(boolean0);
867:   }
868: }
RegularFileObject[/tmp/EvoSuite_92_1628260345172/org/apache/commons/collections4/map/MultiValueMap_91_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Aug 06 14:32:26 GMT 2021
5:  */
6: 
7: package org.apache.commons.collections4.map;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: import static org.evosuite.shaded.org.mockito.Mockito.*;
17: @EvoSuiteClassExclude
18: public class MultiValueMap_91_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
24: 
25: 
26:   @BeforeClass 
27:   public static void initEvoSuiteFramework() { 
28:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.map.MultiValueMap"; 
29:     org.evosuite.runtime.GuiSupport.initialize(); 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
31:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
32:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
33:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
34:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
35:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
36:     setSystemProperties();
37:     initializeClasses();
38:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
39:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
40:   } 
41: 
42:   @Before 
43:   public void initTestCase(){ 
44:     threadStopper.storeCurrentThreads();
45:     threadStopper.startRecordingTime();
46:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
47:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
48:     org.evosuite.runtime.GuiSupport.setHeadless(); 
49:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
50:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
51:   } 
52: 
53:   @After 
54:   public void doneWithTestCase(){ 
55:     threadStopper.killAndJoinClientThreads();
56:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
57:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
58:     resetClasses(); 
59:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
61:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
62:   } 
63: 
64:   public static void setSystemProperties() {
65:  
66:     /*No java.lang.System property to set*/
67:   }
68: 
69:   private static void initializeClasses() {
70:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MultiValueMap_91_tmp__ESTest_scaffolding.class.getClassLoader() ,
71:       "org.apache.commons.collections4.MapIterator",
72:       "org.apache.commons.collections4.iterators.IteratorChain",
73:       "org.apache.commons.collections4.functors.ExceptionFactory",
74:       "org.apache.commons.collections4.map.MultiValueMap$Values",
75:       "org.apache.commons.collections4.map.AbstractMapDecorator",
76:       "org.apache.commons.collections4.Get",
77:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
78:       "org.apache.commons.collections4.CollectionUtils",
79:       "org.apache.commons.collections4.map.MultiValueMap",
80:       "org.apache.commons.collections4.FunctorException",
81:       "org.apache.commons.collections4.map.AbstractIterableMap",
82:       "org.apache.commons.collections4.Factory",
83:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
84:       "org.apache.commons.collections4.Unmodifiable",
85:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
86:       "org.apache.commons.collections4.Transformer",
87:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
88:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
89:       "org.apache.commons.collections4.map.MultiValueMap$1",
90:       "org.apache.commons.collections4.ResettableIterator",
91:       "org.apache.commons.collections4.iterators.EmptyIterator",
92:       "org.apache.commons.collections4.functors.ConstantFactory",
93:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
94:       "org.apache.commons.collections4.Put",
95:       "org.apache.commons.collections4.MultiMap",
96:       "org.apache.commons.collections4.IterableMap",
97:       "org.apache.commons.collections4.IterableGet"
98:     );
99:   } 
100:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
101:     mock(Class.forName("java.util.function.BiFunction", false, MultiValueMap_91_tmp__ESTest_scaffolding.class.getClassLoader()));
102:   }
103: 
104:   private static void resetClasses() {
105:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MultiValueMap_91_tmp__ESTest_scaffolding.class.getClassLoader()); 
106: 
107:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
108:       "org.apache.commons.collections4.map.AbstractIterableMap",
109:       "org.apache.commons.collections4.map.AbstractMapDecorator",
110:       "org.apache.commons.collections4.map.MultiValueMap",
111:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
112:       "org.apache.commons.collections4.map.MultiValueMap$Values",
113:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
114:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
115:       "org.apache.commons.collections4.map.MultiValueMap$1",
116:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
117:       "org.apache.commons.collections4.iterators.EmptyIterator",
118:       "org.apache.commons.collections4.iterators.EmptyListIterator",
119:       "org.apache.commons.collections4.iterators.EmptyOrderedIterator",
120:       "org.apache.commons.collections4.iterators.AbstractEmptyMapIterator",
121:       "org.apache.commons.collections4.iterators.EmptyMapIterator",
122:       "org.apache.commons.collections4.iterators.EmptyOrderedMapIterator",
123:       "org.apache.commons.collections4.functors.ExceptionFactory",
124:       "org.apache.commons.collections4.iterators.IteratorChain",
125:       "org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter",
126:       "org.apache.commons.collections4.functors.ConstantFactory",
127:       "org.apache.commons.collections4.FunctorException",
128:       "org.apache.commons.collections4.functors.InstantiateFactory",
129:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
130:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
131:       "org.apache.commons.collections4.CollectionUtils"
132:     );
133:   }
134: }

[MASTER] 14:32:27.733 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_93_1628260346415/org/apache/commons/collections4/map/MultiValueMap_92_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_93_1628260346415/org/apache/commons/collections4/map/MultiValueMap_92_tmp__ESTest_scaffolding.java]]
[MASTER] 14:32:27.733 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Collections-27/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 14:32:27.733 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-27/target/classes
[MASTER] 14:32:27.733 [logback-2] ERROR JUnitAnalyzer - Diagnostic: constructor MultiValueMap in class org.apache.commons.collections4.map.MultiValueMap<K,V> cannot be applied to given types;
  required: java.util.Map<java.util.LinkedList<org.apache.commons.collections4.functors.ConstantFactory<java.lang.Object>>,? super C>,org.apache.commons.collections4.Factory<C>
  found: java.util.Map<java.util.LinkedList<org.apache.commons.collections4.functors.ConstantFactory<java.lang.Object>>,capture#1 of ? super java.util.Collection<java.lang.Integer>>,org.apache.commons.collections4.Factory<java.util.Collection<java.lang.Integer>>
  reason: inference variable C has incompatible bounds
    equality constraints: java.util.Collection<java.lang.Integer>
    upper bounds: java.util.Collection<java.lang.Integer>,java.util.Collection<java.util.ArrayList<java.lang.Integer>>: 41
[MASTER] 14:32:27.733 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.lang.Class<java.lang.Object> cannot be converted to java.lang.Class<java.util.LinkedList<java.util.LinkedList<java.util.HashMap>>>: 77
[MASTER] 14:32:27.734 [logback-2] ERROR JUnitAnalyzer - Diagnostic: constructor MultiValueMap in class org.apache.commons.collections4.map.MultiValueMap<K,V> cannot be applied to given types;
  required: java.util.Map<java.lang.String,? super C>,org.apache.commons.collections4.Factory<C>
  found: java.util.Map<java.lang.String,capture#2 of ? super java.util.Collection<java.lang.Object>>,org.apache.commons.collections4.Factory<java.util.Collection<java.lang.Object>>
  reason: inference variable C has incompatible bounds
    equality constraints: java.util.Collection<java.lang.Object>
    upper bounds: java.util.Collection<java.lang.Object>,java.util.Collection<java.util.LinkedList<java.lang.Integer>>: 89
[MASTER] 14:32:27.734 [logback-2] ERROR JUnitAnalyzer - Diagnostic: constructor MultiValueMap in class org.apache.commons.collections4.map.MultiValueMap<K,V> cannot be applied to given types;
  required: java.util.Map<java.lang.String,? super C>,org.apache.commons.collections4.Factory<C>
  found: java.util.Map<java.lang.String,capture#3 of ? super java.util.ArrayList<java.lang.Object>>,org.apache.commons.collections4.Factory<java.util.ArrayList<java.lang.Object>>
  reason: inference variable C has incompatible bounds
    equality constraints: java.util.ArrayList<java.lang.Object>
    upper bounds: java.util.ArrayList<java.lang.Object>,java.util.Collection<org.apache.commons.collections4.functors.ConstantFactory<java.lang.String>>: 298
[MASTER] 14:32:27.734 [logback-2] ERROR JUnitAnalyzer - Diagnostic: constructor MultiValueMap in class org.apache.commons.collections4.map.MultiValueMap<K,V> cannot be applied to given types;
  required: java.util.Map<java.lang.String,? super C>,org.apache.commons.collections4.Factory<C>
  found: java.util.Map<java.lang.String,capture#4 of ? super java.util.Collection<java.lang.Object>>,org.apache.commons.collections4.Factory<java.util.Collection<java.lang.Object>>
  reason: inference variable C has incompatible bounds
    equality constraints: java.util.Collection<java.lang.Object>
    upper bounds: java.util.Collection<java.lang.Object>,java.util.Collection<java.util.AbstractMap.SimpleImmutableEntry<java.lang.Integer,java.lang.String>>: 325
[MASTER] 14:32:27.734 [logback-2] ERROR JUnitAnalyzer - Diagnostic: constructor MultiValueMap in class org.apache.commons.collections4.map.MultiValueMap<K,V> cannot be applied to given types;
  required: java.util.Map<java.lang.Object,? super C>,org.apache.commons.collections4.Factory<C>
  found: java.util.Map<java.lang.Object,capture#5 of ? super java.util.LinkedList<java.lang.Object>>,org.apache.commons.collections4.Factory<java.util.LinkedList<java.lang.Object>>
  reason: inference variable C has incompatible bounds
    equality constraints: java.util.LinkedList<java.lang.Object>
    upper bounds: java.util.LinkedList<java.lang.Object>,java.util.Collection<java.util.AbstractMap.SimpleEntry<java.lang.Object,java.lang.Object>>: 443
[MASTER] 14:32:27.734 [logback-2] ERROR JUnitAnalyzer - Diagnostic: constructor MultiValueMap in class org.apache.commons.collections4.map.MultiValueMap<K,V> cannot be applied to given types;
  required: java.util.Map<java.util.AbstractMap.SimpleEntry<java.lang.Integer,java.lang.String>,? super C>,org.apache.commons.collections4.Factory<C>
  found: java.util.Map<java.util.AbstractMap.SimpleEntry<java.lang.Integer,java.lang.String>,capture#6 of ? super java.util.Collection<java.lang.Object>>,org.apache.commons.collections4.Factory<java.util.Collection<java.lang.Object>>
  reason: inference variable C has incompatible bounds
    equality constraints: java.util.Collection<java.lang.Object>
    upper bounds: java.util.Collection<java.lang.Object>,java.util.Collection<java.lang.String>: 479
[MASTER] 14:32:27.734 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_93_1628260346415/org/apache/commons/collections4/map/MultiValueMap_92_tmp__ESTest.java uses or overrides a deprecated API.: -1
[MASTER] 14:32:27.734 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:deprecation for details.: -1
[MASTER] 14:32:27.734 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_93_1628260346415/org/apache/commons/collections4/map/MultiValueMap_92_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 14:32:27.735 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 14:32:27.735 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Some messages have been simplified; recompile with -Xdiags:verbose to get full output: -1
[MASTER] 14:32:27.736 [logback-1] WARN  JUnitAnalyzer - Failed to compile the test cases 
[MASTER] 14:32:27.736 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_93_1628260346415/org/apache/commons/collections4/map/MultiValueMap_92_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Aug 06 14:32:27 GMT 2021
4:  */
5: 
6: package org.apache.commons.collections4.map;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import static org.evosuite.runtime.EvoAssertions.*;
12: import java.util.AbstractMap;
13: import java.util.ArrayList;
14: import java.util.Collection;
15: import java.util.HashMap;
16: import java.util.Iterator;
17: import java.util.LinkedList;
18: import java.util.Map;
19: import java.util.Set;
20: import java.util.function.BiFunction;
21: import org.apache.commons.collections4.Factory;
22: import org.apache.commons.collections4.functors.ConstantFactory;
23: import org.apache.commons.collections4.functors.ExceptionFactory;
24: import org.apache.commons.collections4.map.MultiValueMap;
25: import org.evosuite.runtime.EvoRunner;
26: import org.evosuite.runtime.EvoRunnerParameters;
27: import org.evosuite.runtime.ViolatedAssumptionAnswer;
28: import org.junit.runner.RunWith;
29: 
30: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
31: public class MultiValueMap_92_tmp__ESTest extends MultiValueMap_92_tmp__ESTest_scaffolding {
32: 
33:   @Test(timeout = 4000)
34:   public void test00()  throws Throwable  {
35:       HashMap<LinkedList<ConstantFactory<Object>>, Object> hashMap0 = new HashMap<LinkedList<ConstantFactory<Object>>, Object>();
36:       ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
37:       LinkedList<ConstantFactory<Object>> linkedList0 = new LinkedList<ConstantFactory<Object>>();
38:       LinkedList<Object> linkedList1 = new LinkedList<Object>();
39:       hashMap0.put(linkedList0, linkedList1);
40:       Factory<Collection<Integer>> factory0 = ConstantFactory.constantFactory((Collection<Integer>) arrayList0);
41:       MultiValueMap<LinkedList<ConstantFactory<Object>>, ArrayList<Integer>> multiValueMap0 = new MultiValueMap<LinkedList<ConstantFactory<Object>>, ArrayList<Integer>>((Map<LinkedList<ConstantFactory<Object>>, ? super Collection<Integer>>) hashMap0, factory0);
42:       multiValueMap0.putAll((Map<? extends LinkedList<ConstantFactory<Object>>, ?>) hashMap0);
43:       boolean boolean0 = multiValueMap0.removeMapping(linkedList0, linkedList1);
44:       assertEquals(0, multiValueMap0.size());
45:       assertTrue(boolean0);
46:   }
47: 
48:   @Test(timeout = 4000)
49:   public void test01()  throws Throwable  {
50:       MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>> multiValueMap0 = new MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>>();
51:       Integer integer0 = new Integer(2615);
52:       multiValueMap0.putIfAbsent("Iterator ms no be null", integer0);
53:       MultiValueMap<String, Collection<String>> multiValueMap1 = MultiValueMap.multiValueMap((Map<String, ? super Collection<Collection<String>>>) multiValueMap0);
54:       boolean boolean0 = multiValueMap1.removeMapping("Iterator ms no be null", "%L{u)]Z\"Bl$ww?~ ");
55:       assertFalse(multiValueMap0.isEmpty());
56:       assertFalse(boolean0);
57:   }
58: 
59:   @Test(timeout = 4000)
60:   public void test02()  throws Throwable  {
61:       MultiValueMap<LinkedList<String>, ArrayList<Object>> multiValueMap0 = new MultiValueMap<LinkedList<String>, ArrayList<Object>>();
62:       LinkedList<String> linkedList0 = new LinkedList<String>();
63:       Integer integer0 = new Integer(3170);
64:       multiValueMap0.put(linkedList0, integer0);
65:       int int0 = multiValueMap0.totalSize();
66:       assertFalse(multiValueMap0.isEmpty());
67:       assertEquals(1, int0);
68:   }
69: 
70:   @Test(timeout = 4000)
71:   public void test03()  throws Throwable  {
72:       HashMap<LinkedList<ArrayList<String>>, Object> hashMap0 = new HashMap<LinkedList<ArrayList<String>>, Object>();
73:       MultiValueMap<LinkedList<ArrayList<String>>, AbstractMap.SimpleEntry<HashMap<Integer, String>, Integer>> multiValueMap0 = MultiValueMap.multiValueMap((Map<LinkedList<ArrayList<String>>, ? super Collection<AbstractMap.SimpleEntry<HashMap<Integer, String>, Integer>>>) hashMap0);
74:       LinkedList<ArrayList<String>> linkedList0 = new LinkedList<ArrayList<String>>();
75:       hashMap0.put(linkedList0, linkedList0);
76:       Class<Object> class0 = Object.class;
77:       MultiValueMap<LinkedList<ArrayList<String>>, LinkedList<HashMap>> multiValueMap1 = MultiValueMap.multiValueMap((Map<LinkedList<ArrayList<String>>, ? super LinkedList<LinkedList<HashMap>>>) multiValueMap0, (Class<LinkedList<LinkedList<HashMap>>>) class0);
78:       assertFalse(multiValueMap1.isEmpty());
79:   }
80: 
81:   @Test(timeout = 4000)
82:   public void test04()  throws Throwable  {
83:       MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>> multiValueMap0 = new MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>>();
84:       BiFunction<Object, Object, String> biFunction0 = (BiFunction<Object, Object, String>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
85:       multiValueMap0.merge("7", "7", biFunction0);
86:       MultiValueMap<String, Object> multiValueMap1 = MultiValueMap.multiValueMap((Map<String, ? super Collection<Object>>) multiValueMap0);
87:       MultiValueMap<String, ArrayList<Object>> multiValueMap2 = MultiValueMap.multiValueMap((Map<String, ? super Collection<ArrayList<Object>>>) multiValueMap1);
88:       Factory<Collection<Object>> factory0 = ExceptionFactory.exceptionFactory();
89:       MultiValueMap<String, LinkedList<Integer>> multiValueMap3 = new MultiValueMap<String, LinkedList<Integer>>((Map<String, ? super Collection<Object>>) multiValueMap2, factory0);
90:       multiValueMap3.getCollection("7");
91:       assertEquals(1, multiValueMap0.size());
92:       assertFalse(multiValueMap0.isEmpty());
93:   }
94: 
95:   @Test(timeout = 4000)
96:   public void test05()  throws Throwable  {
97:       HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
98:       MultiValueMap<Object, LinkedList<LinkedList<String>>> multiValueMap0 = MultiValueMap.multiValueMap((Map<Object, ? super Collection<LinkedList<LinkedList<String>>>>) hashMap0);
99:       Collection<LinkedList<LinkedList<String>>> collection0 = multiValueMap0.createCollection(1883);
100:       assertNotNull(collection0);
101:   }
102: 
103:   @Test(timeout = 4000)
104:   public void test06()  throws Throwable  {
105:       MultiValueMap<LinkedList<String>, AbstractMap.SimpleEntry<Integer, Object>> multiValueMap0 = new MultiValueMap<LinkedList<String>, AbstractMap.SimpleEntry<Integer, Object>>();
106:       LinkedList<ArrayList<Object>> linkedList0 = new LinkedList<ArrayList<Object>>();
107:       ConstantFactory<LinkedList<ArrayList<Object>>> constantFactory0 = new ConstantFactory<LinkedList<ArrayList<Object>>>(linkedList0);
108:       MultiValueMap<LinkedList<String>, String> multiValueMap1 = MultiValueMap.multiValueMap((Map<LinkedList<String>, ? super Collection<String>>) multiValueMap0);
109:       multiValueMap0.map = (Map<LinkedList<String>, Object>) multiValueMap1;
110:       MultiValueMap<LinkedList<String>, ArrayList<Object>> multiValueMap2 = MultiValueMap.multiValueMap((Map<LinkedList<String>, ? super LinkedList<ArrayList<Object>>>) multiValueMap0, (Factory<LinkedList<ArrayList<Object>>>) constantFactory0);
111:       // Undeclared exception!
112:       try { 
113:         multiValueMap2.totalSize();
114:         fail("Expecting exception: StackOverflowError");
115:       
116:       } catch(StackOverflowError e) {
117:          //
118:          // no message in exception (getMessage() returned null)
119:          //
120:       }
121:   }
122: 
123:   @Test(timeout = 4000)
124:   public void test07()  throws Throwable  {
125:       MultiValueMap<Collection<Object>, LinkedList<String>> multiValueMap0 = new MultiValueMap<Collection<Object>, LinkedList<String>>();
126:       Collection<Object> collection0 = multiValueMap0.values();
127:       BiFunction<Object, Object, Object> biFunction0 = (BiFunction<Object, Object, Object>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
128:       multiValueMap0.merge(collection0, collection0, biFunction0);
129:       BiFunction<Object, Object, String> biFunction1 = (BiFunction<Object, Object, String>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
130:       doReturn((Object) null).when(biFunction1).apply(any() , any());
131:       multiValueMap0.replaceAll(biFunction1);
132:       MultiValueMap<Collection<Object>, String> multiValueMap1 = MultiValueMap.multiValueMap((Map<Collection<Object>, ? super Collection<String>>) multiValueMap0);
133:       // Undeclared exception!
134:       try { 
135:         multiValueMap1.totalSize();
136:         fail("Expecting exception: NullPointerException");
137:       
138:       } catch(NullPointerException e) {
139:          //
140:          // no message in exception (getMessage() returned null)
141:          //
142:          verifyException("org.apache.commons.collections4.map.MultiValueMap$ValuesIterator", e);
143:       }
144:   }
145: 
146:   @Test(timeout = 4000)
147:   public void test08()  throws Throwable  {
148:       HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
149:       ConstantFactory<Object> constantFactory0 = new ConstantFactory<Object>(hashMap0);
150:       hashMap0.put(constantFactory0, constantFactory0);
151:       MultiValueMap<Object, LinkedList<LinkedList<String>>> multiValueMap0 = MultiValueMap.multiValueMap((Map<Object, ? super Collection<LinkedList<LinkedList<String>>>>) hashMap0);
152:       // Undeclared exception!
153:       try { 
154:         multiValueMap0.totalSize();
155:         fail("Expecting exception: IllegalArgumentException");
156:       
157:       } catch(IllegalArgumentException e) {
158:          //
159:          // Unsupported object type: org.apache.commons.collections4.functors.ConstantFactory
160:          //
161:          verifyException("org.apache.commons.collections4.CollectionUtils", e);
162:       }
163:   }
164: 
165:   @Test(timeout = 4000)
166:   public void test09()  throws Throwable  {
167:       HashMap<Integer, Object> hashMap0 = new HashMap<Integer, Object>();
168:       MultiValueMap<Integer, LinkedList<Object>> multiValueMap0 = MultiValueMap.multiValueMap((Map<Integer, ? super Collection<LinkedList<Object>>>) hashMap0);
169:       Integer integer0 = new Integer(1264);
170:       hashMap0.put(integer0, multiValueMap0);
171:       MultiValueMap<Integer, Collection<Collection<String>>> multiValueMap1 = MultiValueMap.multiValueMap((Map<Integer, ? super Collection<Collection<Collection<String>>>>) multiValueMap0);
172:       // Undeclared exception!
173:       try { 
174:         multiValueMap1.totalSize();
175:         fail("Expecting exception: ClassCastException");
176:       
177:       } catch(ClassCastException e) {
178:          //
179:          // org.apache.commons.collections4.map.MultiValueMap cannot be cast to java.util.Collection
180:          //
181:          verifyException("org.apache.commons.collections4.map.MultiValueMap", e);
182:       }
183:   }
184: 
185:   @Test(timeout = 4000)
186:   public void test10()  throws Throwable  {
187:       MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>> multiValueMap0 = new MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>>();
188:       MultiValueMap<String, Object> multiValueMap1 = MultiValueMap.multiValueMap((Map<String, ? super Collection<Object>>) multiValueMap0);
189:       Object object0 = multiValueMap1.put("%L{u)]Z\"Bl$ww?~ ", multiValueMap0);
190:       MultiValueMap<LinkedList<Object>, Object> multiValueMap2 = new MultiValueMap<LinkedList<Object>, Object>();
191:       // Undeclared exception!
192:       try { 
193:         multiValueMap2.size(object0);
194:         fail("Expecting exception: StackOverflowError");
195:       
196:       } catch(StackOverflowError e) {
197:          //
198:          // no message in exception (getMessage() returned null)
199:          //
200:       }
201:   }
202: 
203:   @Test(timeout = 4000)
204:   public void test11()  throws Throwable  {
205:       MultiValueMap<Integer, Integer> multiValueMap0 = new MultiValueMap<Integer, Integer>();
206:       multiValueMap0.map = null;
207:       Object object0 = new Object();
208:       // Undeclared exception!
209:       try { 
210:         multiValueMap0.size(object0);
211:         fail("Expecting exception: NullPointerException");
212:       
213:       } catch(NullPointerException e) {
214:          //
215:          // no message in exception (getMessage() returned null)
216:          //
217:          verifyException("org.apache.commons.collections4.map.MultiValueMap", e);
218:       }
219:   }
220: 
221:   @Test(timeout = 4000)
222:   public void test12()  throws Throwable  {
223:       HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
224:       MultiValueMap<String, ArrayList<Integer>> multiValueMap0 = MultiValueMap.multiValueMap((Map<String, ? super Collection<ArrayList<Integer>>>) hashMap0);
225:       hashMap0.put("org.apache.commons.collections4.iterators.EmptyMapIterator", multiValueMap0);
226:       LinkedList<AbstractMap.SimpleEntry<Integer, String>> linkedList0 = new LinkedList<AbstractMap.SimpleEntry<Integer, String>>();
227:       // Undeclared exception!
228:       try { 
229:         multiValueMap0.removeMapping(hashMap0, linkedList0);
230:         fail("Expecting exception: StackOverflowError");
231:       
232:       } catch(StackOverflowError e) {
233:          //
234:          // no message in exception (getMessage() returned null)
235:          //
236:       }
237:   }
238: 
239:   @Test(timeout = 4000)
240:   public void test13()  throws Throwable  {
241:       MultiValueMap<AbstractMap.SimpleEntry<String, Object>, Object> multiValueMap0 = new MultiValueMap<AbstractMap.SimpleEntry<String, Object>, Object>();
242:       multiValueMap0.map = null;
243:       // Undeclared exception!
244:       try { 
245:         multiValueMap0.removeMapping((Object) null, (Object) null);
246:         fail("Expecting exception: NullPointerException");
247:       
248:       } catch(NullPointerException e) {
249:          //
250:          // no message in exception (getMessage() returned null)
251:          //
252:          verifyException("org.apache.commons.collections4.map.MultiValueMap", e);
253:       }
254:   }
255: 
256:   @Test(timeout = 4000)
257:   public void test14()  throws Throwable  {
258:       MultiValueMap<HashMap<String, Object>, Object> multiValueMap0 = new MultiValueMap<HashMap<String, Object>, Object>();
259:       // Undeclared exception!
260:       try { 
261:         multiValueMap0.putAll((Map<? extends HashMap<String, Object>, ?>) null);
262:         fail("Expecting exception: NullPointerException");
263:       
264:       } catch(NullPointerException e) {
265:          //
266:          // no message in exception (getMessage() returned null)
267:          //
268:          verifyException("org.apache.commons.collections4.map.MultiValueMap", e);
269:       }
270:   }
271: 
272:   @Test(timeout = 4000)
273:   public void test15()  throws Throwable  {
274:       Integer integer0 = new Integer(2615);
275:       HashMap<ArrayList<String>, Object> hashMap0 = new HashMap<ArrayList<String>, Object>();
276:       ArrayList<String> arrayList0 = new ArrayList<String>();
277:       hashMap0.put(arrayList0, integer0);
278:       MultiValueMap<ArrayList<String>, String> multiValueMap0 = MultiValueMap.multiValueMap((Map<ArrayList<String>, ? super Collection<String>>) hashMap0);
279:       // Undeclared exception!
280:       try { 
281:         multiValueMap0.putAll((Map<? extends ArrayList<String>, ?>) hashMap0);
282:         fail("Expecting exception: ClassCastException");
283:       
284:       } catch(ClassCastException e) {
285:          //
286:          // java.lang.Integer cannot be cast to java.util.Collection
287:          //
288:          verifyException("org.apache.commons.collections4.map.MultiValueMap", e);
289:       }
290:   }
291: 
292:   @Test(timeout = 4000)
293:   public void test16()  throws Throwable  {
294:       LinkedList<AbstractMap.SimpleImmutableEntry<Integer, String>> linkedList0 = new LinkedList<AbstractMap.SimpleImmutableEntry<Integer, String>>();
295:       linkedList0.add((AbstractMap.SimpleImmutableEntry<Integer, String>) null);
296:       HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
297:       Factory<ArrayList<Object>> factory0 = ExceptionFactory.exceptionFactory();
298:       MultiValueMap<String, ConstantFactory<String>> multiValueMap0 = new MultiValueMap<String, ConstantFactory<String>>((Map<String, ? super ArrayList<Object>>) hashMap0, factory0);
299:       ConstantFactory<LinkedList<AbstractMap.SimpleImmutableEntry<Integer, String>>> constantFactory0 = new ConstantFactory<LinkedList<AbstractMap.SimpleImmutableEntry<Integer, String>>>(linkedList0);
300:       MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>> multiValueMap1 = MultiValueMap.multiValueMap((Map<String, ? super LinkedList<AbstractMap.SimpleImmutableEntry<Integer, String>>>) multiValueMap0, (Factory<LinkedList<AbstractMap.SimpleImmutableEntry<Integer, String>>>) constantFactory0);
301:       // Undeclared exception!
302:       try { 
303:         multiValueMap1.putAll((String) null, (Collection<AbstractMap.SimpleImmutableEntry<Integer, String>>) linkedList0);
304:         fail("Expecting exception: RuntimeException");
305:       
306:       } catch(RuntimeException e) {
307:          //
308:          // ExceptionFactory invoked
309:          //
310:          verifyException("org.apache.commons.collections4.functors.ExceptionFactory", e);
311:       }
312:   }
313: 
314:   @Test(timeout = 4000)
315:   public void test17()  throws Throwable  {
316:       LinkedList<AbstractMap.SimpleImmutableEntry<Integer, String>> linkedList0 = new LinkedList<AbstractMap.SimpleImmutableEntry<Integer, String>>();
317:       linkedList0.add((AbstractMap.SimpleImmutableEntry<Integer, String>) null);
318:       MultiValueMap<String, LinkedList<String>> multiValueMap0 = new MultiValueMap<String, LinkedList<String>>();
319:       MultiValueMap<Object, ArrayList<String>> multiValueMap1 = new MultiValueMap<Object, ArrayList<String>>();
320:       LinkedList<MultiValueMap<String, Object>> linkedList1 = new LinkedList<MultiValueMap<String, Object>>();
321:       ConstantFactory<LinkedList<MultiValueMap<String, Object>>> constantFactory0 = new ConstantFactory<LinkedList<MultiValueMap<String, Object>>>(linkedList1);
322:       MultiValueMap<Object, MultiValueMap<String, Object>> multiValueMap2 = MultiValueMap.multiValueMap((Map<Object, ? super LinkedList<MultiValueMap<String, Object>>>) multiValueMap1, (Factory<LinkedList<MultiValueMap<String, Object>>>) constantFactory0);
323:       Collection<Object> collection0 = multiValueMap2.values();
324:       Factory<Collection<Object>> factory0 = ConstantFactory.constantFactory(collection0);
325:       MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>> multiValueMap3 = new MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>>((Map<String, ? super Collection<Object>>) multiValueMap0, factory0);
326:       // Undeclared exception!
327:       try { 
328:         multiValueMap3.putAll((String) null, (Collection<AbstractMap.SimpleImmutableEntry<Integer, String>>) linkedList0);
329:         fail("Expecting exception: UnsupportedOperationException");
330:       
331:       } catch(UnsupportedOperationException e) {
332:          //
333:          // no message in exception (getMessage() returned null)
334:          //
335:          verifyException("java.util.AbstractCollection", e);
336:       }
337:   }
338: 
339:   @Test(timeout = 4000)
340:   public void test18()  throws Throwable  {
341:       LinkedList<AbstractMap.SimpleImmutableEntry<Integer, String>> linkedList0 = new LinkedList<AbstractMap.SimpleImmutableEntry<Integer, String>>();
342:       linkedList0.addFirst((AbstractMap.SimpleImmutableEntry<Integer, String>) null);
343:       MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>> multiValueMap0 = new MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>>();
344:       MultiValueMap<String, ArrayList<AbstractMap.SimpleImmutableEntry>> multiValueMap1 = MultiValueMap.multiValueMap((Map<String, ? super Collection<ArrayList<AbstractMap.SimpleImmutableEntry>>>) multiValueMap0);
345:       multiValueMap0.map = (Map<String, Object>) multiValueMap1;
346:       // Undeclared exception!
347:       try { 
348:         multiValueMap0.putAll("", (Collection<AbstractMap.SimpleImmutableEntry<Integer, String>>) linkedList0);
349:         fail("Expecting exception: StackOverflowError");
350:       
351:       } catch(StackOverflowError e) {
352:          //
353:          // no message in exception (getMessage() returned null)
354:          //
355:       }
356:   }
357: 
358:   @Test(timeout = 4000)
359:   public void test19()  throws Throwable  {
360:       MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>> multiValueMap0 = new MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>>();
361:       ArrayList<AbstractMap.SimpleImmutableEntry<Integer, String>> arrayList0 = new ArrayList<AbstractMap.SimpleImmutableEntry<Integer, String>>();
362:       arrayList0.add((AbstractMap.SimpleImmutableEntry<Integer, String>) null);
363:       multiValueMap0.map = null;
364:       // Undeclared exception!
365:       try { 
366:         multiValueMap0.putAll("ywBkynBRs>3K", (Collection<AbstractMap.SimpleImmutableEntry<Integer, String>>) arrayList0);
367:         fail("Expecting exception: NullPointerException");
368:       
369:       } catch(NullPointerException e) {
370:          //
371:          // no message in exception (getMessage() returned null)
372:          //
373:          verifyException("org.apache.commons.collections4.map.MultiValueMap", e);
374:       }
375:   }
376: 
377:   @Test(timeout = 4000)
378:   public void test20()  throws Throwable  {
379:       MultiValueMap<String, LinkedList<Object>> multiValueMap0 = new MultiValueMap<String, LinkedList<Object>>();
380:       MultiValueMap<String, HashMap<Object, Object>> multiValueMap1 = MultiValueMap.multiValueMap((Map<String, ? super Collection<HashMap<Object, Object>>>) multiValueMap0);
381:       Factory<LinkedList<String>> factory0 = ExceptionFactory.exceptionFactory();
382:       MultiValueMap<String, String> multiValueMap2 = new MultiValueMap<String, String>((Map<String, ? super LinkedList<String>>) multiValueMap1, factory0);
383:       // Undeclared exception!
384:       try { 
385:         multiValueMap2.put("w][T}>", (Object) null);
386:         fail("Expecting exception: RuntimeException");
387:       
388:       } catch(RuntimeException e) {
389:          //
390:          // ExceptionFactory invoked
391:          //
392:          verifyException("org.apache.commons.collections4.functors.ExceptionFactory", e);
393:       }
394:   }
395: 
396:   @Test(timeout = 4000)
397:   public void test21()  throws Throwable  {
398:       HashMap<ArrayList<Collection<String>>, Object> hashMap0 = new HashMap<ArrayList<Collection<String>>, Object>(5);
399:       MultiValueMap<Collection<String>, ArrayList<Collection<String>>> multiValueMap0 = new MultiValueMap<Collection<String>, ArrayList<Collection<String>>>();
400:       Set<Collection<String>> set0 = multiValueMap0.keySet();
401:       ConstantFactory<Collection<Collection<String>>> constantFactory0 = new ConstantFactory<Collection<Collection<String>>>(set0);
402:       MultiValueMap<ArrayList<Collection<String>>, Collection<String>> multiValueMap1 = MultiValueMap.multiValueMap((Map<ArrayList<Collection<String>>, ? super Collection<Collection<String>>>) hashMap0, (Factory<Collection<Collection<String>>>) constantFactory0);
403:       ArrayList<Collection<String>> arrayList0 = new ArrayList<Collection<String>>();
404:       // Undeclared exception!
405:       try { 
406:         multiValueMap1.put(arrayList0, arrayList0);
407:         fail("Expecting exception: UnsupportedOperationException");
408:       
409:       } catch(UnsupportedOperationException e) {
410:          //
411:          // no message in exception (getMessage() returned null)
412:          //
413:          verifyException("java.util.AbstractCollection", e);
414:       }
415:   }
416: 
417:   @Test(timeout = 4000)
418:   public void test22()  throws Throwable  {
419:       HashMap<AbstractMap.SimpleImmutableEntry<Object, String>, Object> hashMap0 = new HashMap<AbstractMap.SimpleImmutableEntry<Object, String>, Object>();
420:       MultiValueMap<AbstractMap.SimpleImmutableEntry<Object, String>, AbstractMap.SimpleEntry<Integer, Integer>> multiValueMap0 = MultiValueMap.multiValueMap((Map<AbstractMap.SimpleImmutableEntry<Object, String>, ? super Collection<AbstractMap.SimpleEntry<Integer, Integer>>>) hashMap0);
421:       AbstractMap.SimpleEntry<Integer, String> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Integer, String>((Integer) null, "");
422:       ArrayList<Object> arrayList0 = new ArrayList<Object>();
423:       AbstractMap.SimpleImmutableEntry<Object, String> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<Object, String>(arrayList0, "org.apache.commons.collections4.iterators.EmptyMapIterator");
424:       hashMap0.put(abstractMap_SimpleImmutableEntry0, abstractMap_SimpleEntry0);
425:       arrayList0.add((Object) multiValueMap0);
426:       // Undeclared exception!
427:       try { 
428:         multiValueMap0.put(abstractMap_SimpleImmutableEntry0, "");
429:         fail("Expecting exception: StackOverflowError");
430:       
431:       } catch(StackOverflowError e) {
432:          //
433:          // no message in exception (getMessage() returned null)
434:          //
435:       }
436:   }
437: 
438:   @Test(timeout = 4000)
439:   public void test23()  throws Throwable  {
440:       HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>(2147483645);
441:       LinkedList<Object> linkedList0 = new LinkedList<Object>();
442:       ConstantFactory<LinkedList<Object>> constantFactory0 = new ConstantFactory<LinkedList<Object>>(linkedList0);
443:       MultiValueMap<Object, AbstractMap.SimpleEntry<Object, Object>> multiValueMap0 = new MultiValueMap<Object, AbstractMap.SimpleEntry<Object, Object>>((Map<Object, ? super LinkedList<Object>>) hashMap0, (Factory<LinkedList<Object>>) constantFactory0);
444:       ArrayList<String> arrayList0 = new ArrayList<String>();
445:       HashMap<ArrayList<Integer>, Object> hashMap1 = new HashMap<ArrayList<Integer>, Object>();
446:       MultiValueMap<ArrayList<Integer>, Object> multiValueMap1 = MultiValueMap.multiValueMap((Map<ArrayList<Integer>, ? super Collection<Object>>) hashMap1);
447:       // Undeclared exception!
448:       multiValueMap0.put(arrayList0, multiValueMap1);
449:   }
450: 
451:   @Test(timeout = 4000)
452:   public void test24()  throws Throwable  {
453:       Integer integer0 = new Integer(1);
454:       AbstractMap.SimpleEntry<Integer, String> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Integer, String>(integer0, "uo<ym^=`*'Z");
455:       HashMap<AbstractMap.SimpleEntry<Integer, String>, Object> hashMap0 = new HashMap<AbstractMap.SimpleEntry<Integer, String>, Object>();
456:       ConstantFactory<Collection<String>> constantFactory0 = new ConstantFactory<Collection<String>>((Collection<String>) null);
457:       MultiValueMap<AbstractMap.SimpleEntry<Integer, String>, String> multiValueMap0 = MultiValueMap.multiValueMap((Map<AbstractMap.SimpleEntry<Integer, String>, ? super Collection<String>>) hashMap0, (Factory<Collection<String>>) constantFactory0);
458:       // Undeclared exception!
459:       try { 
460:         multiValueMap0.put(abstractMap_SimpleEntry0, "uo<ym^=`*'Z");
461:         fail("Expecting exception: NullPointerException");
462:       
463:       } catch(NullPointerException e) {
464:          //
465:          // no message in exception (getMessage() returned null)
466:          //
467:          verifyException("org.apache.commons.collections4.map.MultiValueMap", e);
468:       }
469:   }
470: 
471:   @Test(timeout = 4000)
472:   public void test25()  throws Throwable  {
473:       Integer integer0 = new Integer(0);
474:       AbstractMap.SimpleEntry<Integer, String> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Integer, String>(integer0, "kq<hy]O");
475:       HashMap<AbstractMap.SimpleEntry<Integer, String>, Object> hashMap0 = new HashMap<AbstractMap.SimpleEntry<Integer, String>, Object>();
476:       hashMap0.put(abstractMap_SimpleEntry0, abstractMap_SimpleEntry0);
477:       MultiValueMap<AbstractMap.SimpleEntry<Integer, String>, ArrayList<AbstractMap.SimpleEntry>> multiValueMap0 = MultiValueMap.multiValueMap((Map<AbstractMap.SimpleEntry<Integer, String>, ? super Collection<ArrayList<AbstractMap.SimpleEntry>>>) hashMap0);
478:       Factory<Collection<Object>> factory0 = ExceptionFactory.exceptionFactory();
479:       MultiValueMap<AbstractMap.SimpleEntry<Integer, String>, String> multiValueMap1 = new MultiValueMap<AbstractMap.SimpleEntry<Integer, String>, String>((Map<AbstractMap.SimpleEntry<Integer, String>, ? super Collection<Object>>) multiValueMap0, factory0);
480:       // Undeclared exception!
481:       try { 
482:         multiValueMap1.put(abstractMap_SimpleEntry0, abstractMap_SimpleEntry0);
483:         fail("Expecting exception: ClassCastException");
484:       
485:       } catch(ClassCastException e) {
486:          //
487:          // java.util.AbstractMap$SimpleEntry cannot be cast to java.util.Collection
488:          //
489:          verifyException("org.apache.commons.collections4.map.MultiValueMap", e);
490:       }
491:   }
492: 
493:   @Test(timeout = 4000)
494:   public void test26()  throws Throwable  {
495:       // Undeclared exception!
496:       try { 
497:         MultiValueMap.multiValueMap((Map<HashMap<String, Object>, ? super Collection<Object>>) null, (Factory<Collection<Object>>) null);
498:         fail("Expecting exception: NullPointerException");
499:       
500:       } catch(NullPointerException e) {
501:          //
502:          // Map must not be null.
503:          //
504:          verifyException("org.apache.commons.collections4.map.AbstractMapDecorator", e);
505:       }
506:   }
507: 
508:   @Test(timeout = 4000)
509:   public void test27()  throws Throwable  {
510:       // Undeclared exception!
511:       try { 
512:         MultiValueMap.multiValueMap((Map<ArrayList<Object>, ? super Collection<String>>) null);
513:         fail("Expecting exception: NullPointerException");
514:       
515:       } catch(NullPointerException e) {
516:          //
517:          // Map must not be null.
518:          //
519:          verifyException("org.apache.commons.collections4.map.AbstractMapDecorator", e);
520:       }
521:   }
522: 
523:   @Test(timeout = 4000)
524:   public void test28()  throws Throwable  {
525:       MultiValueMap<LinkedList<Object>, LinkedList<Object>> multiValueMap0 = new MultiValueMap<LinkedList<Object>, LinkedList<Object>>();
526:       LinkedList<Object> linkedList0 = new LinkedList<Object>();
527:       Object object0 = multiValueMap0.putIfAbsent(linkedList0, linkedList0);
528:       linkedList0.add(object0);
529:       MultiValueMap<Comparable<String>, Collection<Object>> multiValueMap1 = new MultiValueMap<Comparable<String>, Collection<Object>>();
530:       // Undeclared exception!
531:       try { 
532:         multiValueMap1.iterator((Object) linkedList0);
533:         fail("Expecting exception: StackOverflowError");
534:       
535:       } catch(StackOverflowError e) {
536:          //
537:          // no message in exception (getMessage() returned null)
538:          //
539:       }
540:   }
541: 
542:   @Test(timeout = 4000)
543:   public void test29()  throws Throwable  {
544:       MultiValueMap<Integer, Integer> multiValueMap0 = new MultiValueMap<Integer, Integer>();
545:       multiValueMap0.map = null;
546:       // Undeclared exception!
547:       try { 
548:         multiValueMap0.iterator((Object) null);
549:         fail("Expecting exception: NullPointerException");
550:       
551:       } catch(NullPointerException e) {
552:          //
553:          // no message in exception (getMessage() returned null)
554:          //
555:          verifyException("org.apache.commons.collections4.map.AbstractMapDecorator", e);
556:       }
557:   }
558: 
559:   @Test(timeout = 4000)
560:   public void test30()  throws Throwable  {
561:       HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
562:       hashMap0.put("294", "294");
563:       MultiValueMap<String, Collection<String>> multiValueMap0 = MultiValueMap.multiValueMap((Map<String, ? super Collection<Collection<String>>>) hashMap0);
564:       // Undeclared exception!
565:       try { 
566:         multiValueMap0.iterator((Object) "294");
567:         fail("Expecting exception: ClassCastException");
568:       
569:       } catch(ClassCastException e) {
570:          //
571:          // java.lang.String cannot be cast to java.util.Collection
572:          //
573:          verifyException("org.apache.commons.collections4.map.MultiValueMap", e);
574:       }
575:   }
576: 
577:   @Test(timeout = 4000)
578:   public void test31()  throws Throwable  {
579:       MultiValueMap<String, Collection<Object>> multiValueMap0 = new MultiValueMap<String, Collection<Object>>();
580:       MultiValueMap<String, ArrayList<AbstractMap.SimpleEntry>> multiValueMap1 = MultiValueMap.multiValueMap((Map<String, ? super Collection<ArrayList<AbstractMap.SimpleEntry>>>) multiValueMap0);
581:       multiValueMap0.map = (Map<String, Object>) multiValueMap1;
582:       // Undeclared exception!
583:       try { 
584:         multiValueMap0.iterator();
585:         fail("Expecting exception: StackOverflowError");
586:       
587:       } catch(StackOverflowError e) {
588:          //
589:          // no message in exception (getMessage() returned null)
590:          //
591:       }
592:   }
593: 
594:   @Test(timeout = 4000)
595:   public void test32()  throws Throwable  {
596:       MultiValueMap<LinkedList<Object>, ArrayList<Object>> multiValueMap0 = new MultiValueMap<LinkedList<Object>, ArrayList<Object>>();
597:       multiValueMap0.map = null;
598:       // Undeclared exception!
599:       try { 
600:         multiValueMap0.entrySet();
601:         fail("Expecting exception: NullPointerException");
602:       
603:       } catch(NullPointerException e) {
604:          //
605:          // no message in exception (getMessage() returned null)
606:          //
607:          verifyException("org.apache.commons.collections4.map.AbstractMapDecorator", e);
608:       }
609:   }
610: 
611:   @Test(timeout = 4000)
612:   public void test33()  throws Throwable  {
613:       MultiValueMap<Integer, LinkedList<Object>> multiValueMap0 = new MultiValueMap<Integer, LinkedList<Object>>();
614:       Factory<ArrayList<Object>> factory0 = ExceptionFactory.exceptionFactory();
615:       MultiValueMap<Integer, Object> multiValueMap1 = MultiValueMap.multiValueMap((Map<Integer, ? super ArrayList<Object>>) multiValueMap0, factory0);
616:       // Undeclared exception!
617:       try { 
618:         multiValueMap1.createCollection(4);
619:         fail("Expecting exception: RuntimeException");
620:       
621:       } catch(RuntimeException e) {
622:          //
623:          // ExceptionFactory invoked
624:          //
625:          verifyException("org.apache.commons.collections4.functors.ExceptionFactory", e);
626:       }
627:   }
628: 
629:   @Test(timeout = 4000)
630:   public void test34()  throws Throwable  {
631:       LinkedList<AbstractMap.SimpleImmutableEntry<Integer, String>> linkedList0 = new LinkedList<AbstractMap.SimpleImmutableEntry<Integer, String>>();
632:       MultiValueMap<LinkedList<Object>, LinkedList<Object>> multiValueMap0 = new MultiValueMap<LinkedList<Object>, LinkedList<Object>>();
633:       LinkedList<Object> linkedList1 = new LinkedList<Object>();
634:       linkedList1.add((Object) multiValueMap0);
635:       multiValueMap0.putIfAbsent(linkedList1, linkedList1);
636:       // Undeclared exception!
637:       try { 
638:         multiValueMap0.containsValue((Object) linkedList1, (Object) linkedList0);
639:         fail("Expecting exception: StackOverflowError");
640:       
641:       } catch(StackOverflowError e) {
642:          //
643:          // no message in exception (getMessage() returned null)
644:          //
645:       }
646:   }
647: 
648:   @Test(timeout = 4000)
649:   public void test35()  throws Throwable  {
650:       LinkedList<AbstractMap.SimpleImmutableEntry<Integer, String>> linkedList0 = new LinkedList<AbstractMap.SimpleImmutableEntry<Integer, String>>();
651:       MultiValueMap<LinkedList<Object>, LinkedList<Object>> multiValueMap0 = new MultiValueMap<LinkedList<Object>, LinkedList<Object>>();
652:       LinkedList<Object> linkedList1 = new LinkedList<Object>();
653:       multiValueMap0.putIfAbsent(linkedList1, linkedList1);
654:       boolean boolean0 = multiValueMap0.containsValue((Object) linkedList0, (Object) linkedList0);
655:       assertEquals(1, multiValueMap0.size());
656:       assertTrue(boolean0);
657:   }
658: 
659:   @Test(timeout = 4000)
660:   public void test36()  throws Throwable  {
661:       MultiValueMap<AbstractMap.SimpleEntry<String, Object>, Object> multiValueMap0 = new MultiValueMap<AbstractMap.SimpleEntry<String, Object>, Object>();
662:       Iterator<Object> iterator0 = multiValueMap0.iterator((Object) "3~c!D|*u|f");
663:       assertNotNull(iterator0);
664:   }
665: 
666:   @Test(timeout = 4000)
667:   public void test37()  throws Throwable  {
668:       MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>> multiValueMap0 = new MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>>();
669:       LinkedList<AbstractMap.SimpleImmutableEntry<Integer, String>> linkedList0 = new LinkedList<AbstractMap.SimpleImmutableEntry<Integer, String>>();
670:       Integer integer0 = new Integer((-2372));
671:       AbstractMap.SimpleImmutableEntry<Integer, String> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<Integer, String>(integer0, (String) null);
672:       linkedList0.add(abstractMap_SimpleImmutableEntry0);
673:       multiValueMap0.putAll((String) null, (Collection<AbstractMap.SimpleImmutableEntry<Integer, String>>) linkedList0);
674:       boolean boolean0 = multiValueMap0.putAll((String) null, (Collection<AbstractMap.SimpleImmutableEntry<Integer, String>>) linkedList0);
675:       assertEquals(1, linkedList0.size());
676:       assertTrue(boolean0);
677:   }
678: 
679:   @Test(timeout = 4000)
680:   public void test38()  throws Throwable  {
681:       HashMap<LinkedList<String>, Object> hashMap0 = new HashMap<LinkedList<String>, Object>(0);
682:       MultiValueMap<LinkedList<String>, AbstractMap.SimpleEntry<AbstractMap.SimpleImmutableEntry, Object>> multiValueMap0 = MultiValueMap.multiValueMap((Map<LinkedList<String>, ? super Collection<AbstractMap.SimpleEntry<AbstractMap.SimpleImmutableEntry, Object>>>) hashMap0);
683:       MultiValueMap<LinkedList<String>, HashMap<Object, Object>> multiValueMap1 = MultiValueMap.multiValueMap((Map<LinkedList<String>, ? super Collection<HashMap<Object, Object>>>) multiValueMap0);
684:       LinkedList<String> linkedList0 = new LinkedList<String>();
685:       boolean boolean0 = multiValueMap1.putAll(linkedList0, (Collection<HashMap<Object, Object>>) null);
686:       assertFalse(boolean0);
687:   }
688: 
689:   @Test(timeout = 4000)
690:   public void test39()  throws Throwable  {
691:       HashMap<MultiValueMap<Object, Object>, Object> hashMap0 = new HashMap<MultiValueMap<Object, Object>, Object>();
692:       HashMap<Integer, Object> hashMap1 = new HashMap<Integer, Object>();
693:       MultiValueMap<Integer, LinkedList<Object>> multiValueMap0 = MultiValueMap.multiValueMap((Map<Integer, ? super Collection<LinkedList<Object>>>) hashMap1);
694:       int int0 = multiValueMap0.size((Object) hashMap0);
695:       assertEquals(0, int0);
696:   }
697: 
698:   @Test(timeout = 4000)
699:   public void test40()  throws Throwable  {
700:       Integer integer0 = new Integer(660);
701:       AbstractMap.SimpleImmutableEntry<Integer, String> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<Integer, String>(integer0, " a2IR)=\"sW*s3");
702:       LinkedList<AbstractMap.SimpleImmutableEntry<Integer, String>> linkedList0 = new LinkedList<AbstractMap.SimpleImmutableEntry<Integer, String>>();
703:       linkedList0.add(abstractMap_SimpleImmutableEntry0);
704:       MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>> multiValueMap0 = new MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>>();
705:       multiValueMap0.putAll("<jfUXGA1T3", (Collection<AbstractMap.SimpleImmutableEntry<Integer, String>>) linkedList0);
706:       MultiValueMap<String, Object> multiValueMap1 = MultiValueMap.multiValueMap((Map<String, ? super Collection<Object>>) multiValueMap0);
707:       int int0 = multiValueMap1.size((Object) "<jfUXGA1T3");
708:       assertEquals(1, multiValueMap0.size());
709:       assertEquals(1, int0);
710:   }
711: 
712:   @Test(timeout = 4000)
713:   public void test41()  throws Throwable  {
714:       MultiValueMap<LinkedList<Object>, LinkedList<Object>> multiValueMap0 = new MultiValueMap<LinkedList<Object>, LinkedList<Object>>();
715:       LinkedList<Object> linkedList0 = new LinkedList<Object>();
716:       Object object0 = multiValueMap0.putIfAbsent(linkedList0, linkedList0);
717:       AbstractMap.SimpleEntry<Object, String> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Object, String>(multiValueMap0, "+-$>!/");
718:       boolean boolean0 = multiValueMap0.containsValue(object0, (Object) abstractMap_SimpleEntry0);
719:       assertFalse(multiValueMap0.isEmpty());
720:       assertFalse(boolean0);
721:   }
722: 
723:   @Test(timeout = 4000)
724:   public void test42()  throws Throwable  {
725:       LinkedList<AbstractMap.SimpleImmutableEntry<Integer, String>> linkedList0 = new LinkedList<AbstractMap.SimpleImmutableEntry<Integer, String>>();
726:       MultiValueMap<LinkedList<Object>, LinkedList<Object>> multiValueMap0 = new MultiValueMap<LinkedList<Object>, LinkedList<Object>>();
727:       LinkedList<Object> linkedList1 = new LinkedList<Object>();
728:       boolean boolean0 = multiValueMap0.containsValue((Object) linkedList1, (Object) linkedList0);
729:       assertFalse(boolean0);
730:   }
731: 
732:   @Test(timeout = 4000)
733:   public void test43()  throws Throwable  {
734:       MultiValueMap<String, AbstractMap.SimpleEntry<Object, Object>> multiValueMap0 = new MultiValueMap<String, AbstractMap.SimpleEntry<Object, Object>>();
735:       Collection<Object> collection0 = multiValueMap0.values();
736:       Collection<Object> collection1 = multiValueMap0.values();
737:       assertSame(collection1, collection0);
738:   }
739: 
740:   @Test(timeout = 4000)
741:   public void test44()  throws Throwable  {
742:       MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>> multiValueMap0 = new MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>>();
743:       LinkedList<AbstractMap.SimpleImmutableEntry<Integer, String>> linkedList0 = new LinkedList<AbstractMap.SimpleImmutableEntry<Integer, String>>();
744:       Integer integer0 = new Integer((-2372));
745:       AbstractMap.SimpleImmutableEntry<Integer, String> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<Integer, String>(integer0, (String) null);
746:       linkedList0.add(abstractMap_SimpleImmutableEntry0);
747:       multiValueMap0.putAll((String) null, (Collection<AbstractMap.SimpleImmutableEntry<Integer, String>>) linkedList0);
748:       MultiValueMap<String, Object> multiValueMap1 = MultiValueMap.multiValueMap((Map<String, ? super Collection<Object>>) multiValueMap0);
749:       MultiValueMap<String, LinkedList<Object>> multiValueMap2 = new MultiValueMap<String, LinkedList<Object>>();
750:       MultiValueMap<String, HashMap<Integer, Integer>> multiValueMap3 = MultiValueMap.multiValueMap((Map<String, ? super Collection<HashMap<Integer, Integer>>>) multiValueMap2);
751:       multiValueMap3.putAll((Map<? extends String, ?>) multiValueMap1);
752:       assertEquals(1, multiValueMap0.size());
753:       assertFalse(multiValueMap2.isEmpty());
754:   }
755: 
756:   @Test(timeout = 4000)
757:   public void test45()  throws Throwable  {
758:       MultiValueMap<AbstractMap.SimpleEntry<Integer, String>, String> multiValueMap0 = new MultiValueMap<AbstractMap.SimpleEntry<Integer, String>, String>();
759:       Integer integer0 = new Integer(0);
760:       AbstractMap.SimpleEntry<Integer, String> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Integer, String>(integer0, "kq<hy]O");
761:       multiValueMap0.put(abstractMap_SimpleEntry0, integer0);
762:       boolean boolean0 = multiValueMap0.containsValue((Object) null);
763:       assertFalse(multiValueMap0.isEmpty());
764:       assertFalse(boolean0);
765:   }
766: 
767:   @Test(timeout = 4000)
768:   public void test46()  throws Throwable  {
769:       MultiValueMap<AbstractMap.SimpleEntry<Integer, String>, String> multiValueMap0 = new MultiValueMap<AbstractMap.SimpleEntry<Integer, String>, String>();
770:       Integer integer0 = new Integer(0);
771:       AbstractMap.SimpleEntry<Integer, String> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Integer, String>(integer0, "kq<hy]O");
772:       multiValueMap0.put(abstractMap_SimpleEntry0, (Object) null);
773:       boolean boolean0 = multiValueMap0.containsValue((Object) null);
774:       assertEquals(1, multiValueMap0.size());
775:       assertTrue(boolean0);
776:   }
777: 
778:   @Test(timeout = 4000)
779:   public void test47()  throws Throwable  {
780:       MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>> multiValueMap0 = new MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>>();
781:       BiFunction<Object, Object, String> biFunction0 = (BiFunction<Object, Object, String>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
782:       multiValueMap0.merge("7", "7", biFunction0);
783:       MultiValueMap<String, Object> multiValueMap1 = MultiValueMap.multiValueMap((Map<String, ? super Collection<Object>>) multiValueMap0);
784:       MultiValueMap<String, ArrayList<Object>> multiValueMap2 = MultiValueMap.multiValueMap((Map<String, ? super Collection<ArrayList<Object>>>) multiValueMap1);
785:       multiValueMap2.replace("7", (Object) null);
786:       MultiValueMap<String, Collection<String>> multiValueMap3 = MultiValueMap.multiValueMap((Map<String, ? super Collection<Collection<String>>>) multiValueMap1);
787:       boolean boolean0 = multiValueMap3.removeMapping("7", "7");
788:       assertEquals(1, multiValueMap0.size());
789:       assertTrue(boolean0);
790:   }
791: 
792:   @Test(timeout = 4000)
793:   public void test48()  throws Throwable  {
794:       MultiValueMap<String, AbstractMap.SimpleEntry<Object, Object>> multiValueMap0 = new MultiValueMap<String, AbstractMap.SimpleEntry<Object, Object>>();
795:       MultiValueMap<ArrayList<Integer>, LinkedList<Object>> multiValueMap1 = new MultiValueMap<ArrayList<Integer>, LinkedList<Object>>();
796:       MultiValueMap<Object, String> multiValueMap2 = new MultiValueMap<Object, String>();
797:       boolean boolean0 = multiValueMap1.removeMapping(multiValueMap2, multiValueMap0);
798:       assertFalse(boolean0);
799:   }
800: 
801:   @Test(timeout = 4000)
802:   public void test49()  throws Throwable  {
803:       MultiValueMap<Object, String> multiValueMap0 = new MultiValueMap<Object, String>();
804:       // Undeclared exception!
805:       try { 
806:         MultiValueMap.multiValueMap((Map<Object, ? super Collection<ArrayList<Object>>>) multiValueMap0, (Factory<Collection<ArrayList<Object>>>) null);
807:         fail("Expecting exception: IllegalArgumentException");
808:       
809:       } catch(IllegalArgumentException e) {
810:          //
811:          // The factory must not be null
812:          //
813:          verifyException("org.apache.commons.collections4.map.MultiValueMap", e);
814:       }
815:   }
816: 
817:   @Test(timeout = 4000)
818:   public void test50()  throws Throwable  {
819:       MultiValueMap<Object, String> multiValueMap0 = new MultiValueMap<Object, String>();
820:       MultiValueMap<LinkedList<String>, AbstractMap.SimpleEntry<Integer, Object>> multiValueMap1 = new MultiValueMap<LinkedList<String>, AbstractMap.SimpleEntry<Integer, Object>>();
821:       BiFunction<Object, Object, Object> biFunction0 = (BiFunction<Object, Object, Object>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
822:       multiValueMap1.merge((LinkedList<String>) null, multiValueMap0, biFunction0);
823:       LinkedList<ArrayList<Object>> linkedList0 = new LinkedList<ArrayList<Object>>();
824:       ConstantFactory<LinkedList<ArrayList<Object>>> constantFactory0 = new ConstantFactory<LinkedList<ArrayList<Object>>>(linkedList0);
825:       MultiValueMap<LinkedList<String>, ArrayList<Object>> multiValueMap2 = MultiValueMap.multiValueMap((Map<LinkedList<String>, ? super LinkedList<ArrayList<Object>>>) multiValueMap1, (Factory<LinkedList<ArrayList<Object>>>) constantFactory0);
826:       int int0 = multiValueMap2.totalSize();
827:       assertEquals(1, multiValueMap1.size());
828:       assertEquals(0, int0);
829:   }
830: 
831:   @Test(timeout = 4000)
832:   public void test51()  throws Throwable  {
833:       MultiValueMap<Object, ArrayList<String>> multiValueMap0 = new MultiValueMap<Object, ArrayList<String>>();
834:       MultiValueMap<Object, Object> multiValueMap1 = MultiValueMap.multiValueMap((Map<Object, ? super Collection<Object>>) multiValueMap0);
835:       ArrayList<Object> arrayList0 = new ArrayList<Object>();
836:       HashMap<Collection<Object>, Object> hashMap0 = new HashMap<Collection<Object>, Object>();
837:       MultiValueMap<Collection<Object>, Object> multiValueMap2 = MultiValueMap.multiValueMap((Map<Collection<Object>, ? super Collection<Object>>) hashMap0);
838:       Collection<Object> collection0 = multiValueMap2.values();
839:       assertNotNull(collection0);
840:       
841:       boolean boolean0 = multiValueMap1.putAll((Object) arrayList0, collection0);
842:       assertFalse(boolean0);
843:   }
844: 
845:   @Test(timeout = 4000)
846:   public void test52()  throws Throwable  {
847:       MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>> multiValueMap0 = new MultiValueMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>>();
848:       MultiValueMap<String, Object> multiValueMap1 = MultiValueMap.multiValueMap((Map<String, ? super Collection<Object>>) multiValueMap0);
849:       Set<Map.Entry<String, Object>> set0 = (Set<Map.Entry<String, Object>>)multiValueMap1.entrySet();
850:       assertTrue(set0.isEmpty());
851:   }
852: 
853:   @Test(timeout = 4000)
854:   public void test53()  throws Throwable  {
855:       MultiValueMap<Integer, Integer> multiValueMap0 = new MultiValueMap<Integer, Integer>();
856:       multiValueMap0.clear();
857:       assertEquals(0, multiValueMap0.size());
858:   }
859: 
860:   @Test(timeout = 4000)
861:   public void test54()  throws Throwable  {
862:       HashMap<LinkedList<Object>, Object> hashMap0 = new HashMap<LinkedList<Object>, Object>();
863:       ConstantFactory<Collection<ArrayList<String>>> constantFactory0 = new ConstantFactory<Collection<ArrayList<String>>>((Collection<ArrayList<String>>) null);
864:       MultiValueMap<LinkedList<Object>, ArrayList<String>> multiValueMap0 = MultiValueMap.multiValueMap((Map<LinkedList<Object>, ? super Collection<ArrayList<String>>>) hashMap0, (Factory<Collection<ArrayList<String>>>) constantFactory0);
865:       Collection<ArrayList<String>> collection0 = multiValueMap0.createCollection((-3375));
866:       assertNull(collection0);
867:   }
868: }
RegularFileObject[/tmp/EvoSuite_93_1628260346415/org/apache/commons/collections4/map/MultiValueMap_92_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Aug 06 14:32:27 GMT 2021
5:  */
6: 
7: package org.apache.commons.collections4.map;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: import static org.evosuite.shaded.org.mockito.Mockito.*;
17: @EvoSuiteClassExclude
18: public class MultiValueMap_92_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
24: 
25: 
26:   @BeforeClass 
27:   public static void initEvoSuiteFramework() { 
28:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.map.MultiValueMap"; 
29:     org.evosuite.runtime.GuiSupport.initialize(); 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
31:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
32:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
33:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
34:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
35:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
36:     setSystemProperties();
37:     initializeClasses();
38:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
39:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
40:   } 
41: 
42:   @Before 
43:   public void initTestCase(){ 
44:     threadStopper.storeCurrentThreads();
45:     threadStopper.startRecordingTime();
46:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
47:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
48:     org.evosuite.runtime.GuiSupport.setHeadless(); 
49:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
50:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
51:   } 
52: 
53:   @After 
54:   public void doneWithTestCase(){ 
55:     threadStopper.killAndJoinClientThreads();
56:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
57:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
58:     resetClasses(); 
59:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
61:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
62:   } 
63: 
64:   public static void setSystemProperties() {
65:  
66:     /*No java.lang.System property to set*/
67:   }
68: 
69:   private static void initializeClasses() {
70:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MultiValueMap_92_tmp__ESTest_scaffolding.class.getClassLoader() ,
71:       "org.apache.commons.collections4.MapIterator",
72:       "org.apache.commons.collections4.iterators.IteratorChain",
73:       "org.apache.commons.collections4.functors.ExceptionFactory",
74:       "org.apache.commons.collections4.map.MultiValueMap$Values",
75:       "org.apache.commons.collections4.map.AbstractMapDecorator",
76:       "org.apache.commons.collections4.Get",
77:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
78:       "org.apache.commons.collections4.CollectionUtils",
79:       "org.apache.commons.collections4.map.MultiValueMap",
80:       "org.apache.commons.collections4.FunctorException",
81:       "org.apache.commons.collections4.map.AbstractIterableMap",
82:       "org.apache.commons.collections4.Factory",
83:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
84:       "org.apache.commons.collections4.Unmodifiable",
85:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
86:       "org.apache.commons.collections4.Transformer",
87:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
88:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
89:       "org.apache.commons.collections4.map.MultiValueMap$1",
90:       "org.apache.commons.collections4.ResettableIterator",
91:       "org.apache.commons.collections4.iterators.EmptyIterator",
92:       "org.apache.commons.collections4.functors.ConstantFactory",
93:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
94:       "org.apache.commons.collections4.Put",
95:       "org.apache.commons.collections4.MultiMap",
96:       "org.apache.commons.collections4.IterableMap",
97:       "org.apache.commons.collections4.IterableGet"
98:     );
99:   } 
100:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
101:     mock(Class.forName("java.util.function.BiFunction", false, MultiValueMap_92_tmp__ESTest_scaffolding.class.getClassLoader()));
102:   }
103: 
104:   private static void resetClasses() {
105:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MultiValueMap_92_tmp__ESTest_scaffolding.class.getClassLoader()); 
106: 
107:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
108:       "org.apache.commons.collections4.map.AbstractIterableMap",
109:       "org.apache.commons.collections4.map.AbstractMapDecorator",
110:       "org.apache.commons.collections4.map.MultiValueMap",
111:       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
112:       "org.apache.commons.collections4.map.MultiValueMap$Values",
113:       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
114:       "org.apache.commons.collections4.iterators.LazyIteratorChain",
115:       "org.apache.commons.collections4.map.MultiValueMap$1",
116:       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
117:       "org.apache.commons.collections4.iterators.EmptyIterator",
118:       "org.apache.commons.collections4.iterators.EmptyListIterator",
119:       "org.apache.commons.collections4.iterators.EmptyOrderedIterator",
120:       "org.apache.commons.collections4.iterators.AbstractEmptyMapIterator",
121:       "org.apache.commons.collections4.iterators.EmptyMapIterator",
122:       "org.apache.commons.collections4.iterators.EmptyOrderedMapIterator",
123:       "org.apache.commons.collections4.functors.ExceptionFactory",
124:       "org.apache.commons.collections4.iterators.IteratorChain",
125:       "org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter",
126:       "org.apache.commons.collections4.functors.ConstantFactory",
127:       "org.apache.commons.collections4.FunctorException",
128:       "org.apache.commons.collections4.functors.InstantiateFactory",
129:       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
130:       "org.apache.commons.collections4.collection.UnmodifiableCollection",
131:       "org.apache.commons.collections4.CollectionUtils"
132:     );
133:   }
134: }

* Writing tests to file
* Writing JUnit test case 'MultiValueMap_ESTest' to results/Collections-27/org.apache.commons.collections4.map.MultiValueMap/BBC-F0-100/tests/2
* Done!

* Computation finished
