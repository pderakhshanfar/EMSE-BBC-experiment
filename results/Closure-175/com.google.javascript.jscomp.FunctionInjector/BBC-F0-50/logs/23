* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-50
* Going to generate test cases for class: com.google.javascript.jscomp.FunctionInjector
* Starting Client-0
* Connecting to master process on port 3915
* Analyzing classpath: 
  - subjects/buggy-versions/Closure-175/build/classes
  - subjects/buggy-versions/Closure-175/lib/args4j.jar
  - subjects/buggy-versions/Closure-175/lib/guava.jar
  - subjects/buggy-versions/Closure-175/lib/json.jar
  - subjects/buggy-versions/Closure-175/lib/jsr305.jar
  - subjects/buggy-versions/Closure-175/lib/protobuf-java.jar
  - subjects/buggy-versions/Closure-175/build/lib/rhino.jar
  - subjects/buggy-versions/Closure-175/lib/ant.jar
* Finished analyzing classpath
* Generating tests for class com.google.javascript.jscomp.FunctionInjector
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1880
* Using seed 1953239598
* Starting evolution
bbc usage percentage is: 50%
* Initial Number of Goals in DynaMOSA = 529 / 1880
[MASTER] 17:40:14.089 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 17:40:17.240 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 17:40:18.058 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Iterator<E> : Type points to itself
[MASTER] 17:41:39.362 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[MASTER] 17:44:47.743 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
* Search finished after 607s and 718 generations, 402716 statements, best individual has fitness: 1594.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 25%
* Total number of goals: 259
* Number of covered goals: 66
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 19%
* Total number of goals: 250
* Number of covered goals: 47
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 88%
* Total number of goals: 16
* Number of covered goals: 14
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 14%
* Total number of goals: 955
* Number of covered goals: 130
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 1%
* Total number of goals: 146
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 90%
* Total number of goals: 10
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 10
* Number of covered goals: 5
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 19%
* Total number of goals: 250
* Number of covered goals: 47
* Generated 24 tests with total length 199
* Resulting test suite's coverage: 29% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 4%
* Compiling and checking tests
[MASTER] 17:50:27.121 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing tests to file
* Writing JUnit test case 'FunctionInjector_ESTest' to results/Closure-175/com.google.javascript.jscomp.FunctionInjector/BBC-F0-50/tests/23
* Done!

* Computation finished
