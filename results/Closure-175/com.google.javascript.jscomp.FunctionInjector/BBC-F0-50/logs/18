* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-50
* Going to generate test cases for class: com.google.javascript.jscomp.FunctionInjector
* Starting Client-0
* Connecting to master process on port 11338
* Analyzing classpath: 
  - subjects/buggy-versions/Closure-175/build/classes
  - subjects/buggy-versions/Closure-175/lib/args4j.jar
  - subjects/buggy-versions/Closure-175/lib/guava.jar
  - subjects/buggy-versions/Closure-175/lib/json.jar
  - subjects/buggy-versions/Closure-175/lib/jsr305.jar
  - subjects/buggy-versions/Closure-175/lib/protobuf-java.jar
  - subjects/buggy-versions/Closure-175/build/lib/rhino.jar
  - subjects/buggy-versions/Closure-175/lib/ant.jar
* Finished analyzing classpath
* Generating tests for class com.google.javascript.jscomp.FunctionInjector
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1880
* Using seed 2155463806
* Starting evolution
bbc usage percentage is: 50%
* Initial Number of Goals in DynaMOSA = 529 / 1880
[MASTER] 17:39:12.376 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 17:39:25.948 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[MASTER] 17:41:59.992 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Iterator<E> : Type points to itself
[MASTER] 17:42:00.029 [logback-2] ERROR TestCluster - Failed to check cache for com.google.javascript.jscomp.ControlFlowGraph<N> : Type points to itself
* Search finished after 602s and 802 generations, 449634 statements, best individual has fitness: 1475.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 36%
* Total number of goals: 259
* Number of covered goals: 93
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 27%
* Total number of goals: 250
* Number of covered goals: 67
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 19
* Number of covered goals: 19
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 19%
* Total number of goals: 955
* Number of covered goals: 183
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 1%
* Total number of goals: 146
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 90%
* Total number of goals: 10
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 60%
* Total number of goals: 10
* Number of covered goals: 6
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 27%
* Total number of goals: 250
* Number of covered goals: 67
* Generated 31 tests with total length 266
* Resulting test suite's coverage: 34% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 4%
* Compiling and checking tests
[MASTER] 17:49:02.598 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 17:49:02.603 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 17:49:02.604 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
compiler0.getUniqueNameIdSupplier();
compiler0.parseTestCode("?");

[MASTER] 17:49:05.674 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 17:49:05.674 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
compiler0.getUniqueNameIdSupplier();
TreeSet<String> treeSet0 = new TreeSet<String>();
compiler0.parseTestCode("7u'];");

[MASTER] 17:49:08.472 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 17:49:08.472 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
compiler0.getUniqueNameIdSupplier();
compiler0.parseTestCode("YPO");

[MASTER] 17:49:09.913 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 17:49:09.913 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
compiler0.getUniqueNameIdSupplier();
compiler0.parseTestCode("PO");

[MASTER] 17:49:11.272 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 17:49:11.272 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
compiler0.getUniqueNameIdSupplier();
compiler0.parseTestCode("YPO");

[MASTER] 17:49:17.243 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 17:49:17.243 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
compiler0.getUniqueNameIdSupplier();
compiler0.parseTestCode("nQHq_D");

[MASTER] 17:49:18.641 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 17:49:18.642 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
compiler0.getUniqueNameIdSupplier();
compiler0.parseTestCode("nQHq_D");

[MASTER] 17:49:25.119 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 17:49:25.120 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
compiler0.getUniqueNameIdSupplier();
SourceInformationAnnotator sourceInformationAnnotator0 = new SourceInformationAnnotator("Q/ach ", true);
NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, sourceInformationAnnotator0);
compiler0.parseTestCode("Q/ach ");

[MASTER] 17:49:35.332 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 17:49:35.333 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
compiler0.getUniqueNameIdSupplier();
compiler0.parseTestCode("?");

[MASTER] 17:49:38.046 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 17:49:38.046 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
compiler0.getUniqueNameIdSupplier();
compiler0.parseTestCode("?");

[MASTER] 17:49:42.218 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 17:49:42.219 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
compiler0.getUniqueNameIdSupplier();
SourceInformationAnnotator sourceInformationAnnotator0 = new SourceInformationAnnotator("each ", true);
NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, sourceInformationAnnotator0);
compiler0.parseTestCode("each ");

[MASTER] 17:49:43.557 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 17:49:43.557 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
compiler0.getUniqueNameIdSupplier();
TreeSet<String> treeSet0 = new TreeSet<String>();
compiler0.parseTestCode("7u'];");

[MASTER] 17:49:44.861 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 17:49:44.861 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
compiler0.getUniqueNameIdSupplier();
compiler0.parseTestCode("PO");

* Writing tests to file
* Writing JUnit test case 'FunctionInjector_ESTest' to results/Closure-175/com.google.javascript.jscomp.FunctionInjector/BBC-F0-50/tests/18
* Done!

* Computation finished
