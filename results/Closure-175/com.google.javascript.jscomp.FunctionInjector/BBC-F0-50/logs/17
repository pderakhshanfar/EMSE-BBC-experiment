* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-50
* Going to generate test cases for class: com.google.javascript.jscomp.FunctionInjector
* Starting Client-0
* Connecting to master process on port 15073
* Analyzing classpath: 
  - subjects/buggy-versions/Closure-175/build/classes
  - subjects/buggy-versions/Closure-175/lib/args4j.jar
  - subjects/buggy-versions/Closure-175/lib/guava.jar
  - subjects/buggy-versions/Closure-175/lib/json.jar
  - subjects/buggy-versions/Closure-175/lib/jsr305.jar
  - subjects/buggy-versions/Closure-175/lib/protobuf-java.jar
  - subjects/buggy-versions/Closure-175/build/lib/rhino.jar
  - subjects/buggy-versions/Closure-175/lib/ant.jar
* Finished analyzing classpath
* Generating tests for class com.google.javascript.jscomp.FunctionInjector
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1880
* Using seed 1920182132
* Starting evolution
bbc usage percentage is: 50%
* Initial Number of Goals in DynaMOSA = 529 / 1880
[MASTER] 17:38:40.106 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 17:40:05.334 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[MASTER] 17:41:04.447 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Iterator<E> : Type points to itself
[MASTER] 17:44:47.666 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
[MASTER] 17:46:53.690 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 602s and 770 generations, 416663 statements, best individual has fitness: 1479.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 36%
* Total number of goals: 259
* Number of covered goals: 93
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 26%
* Total number of goals: 250
* Number of covered goals: 65
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 18
* Number of covered goals: 18
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 19%
* Total number of goals: 955
* Number of covered goals: 182
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 1%
* Total number of goals: 146
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 90%
* Total number of goals: 10
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 60%
* Total number of goals: 10
* Number of covered goals: 6
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 26%
* Total number of goals: 250
* Number of covered goals: 65
* Generated 31 tests with total length 252
* Resulting test suite's coverage: 34% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 5%
* Compiling and checking tests
[MASTER] 17:48:41.630 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 17:48:41.636 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 17:48:41.637 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
compiler0.getUniqueNameIdSupplier();
compiler0.parseTestCode("3CdLTlslzBvOoWL74,");

[MASTER] 17:49:20.484 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 17:49:20.484 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
compiler0.getUniqueNameIdSupplier();
compiler0.parseTestCode("C@|:G>`&~~^");

* Writing tests to file
* Writing JUnit test case 'FunctionInjector_ESTest' to results/Closure-175/com.google.javascript.jscomp.FunctionInjector/BBC-F0-50/tests/17
* Done!

* Computation finished
