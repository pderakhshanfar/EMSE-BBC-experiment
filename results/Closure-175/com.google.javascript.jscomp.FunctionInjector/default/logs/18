* EvoSuite 1.1.1-SNAPSHOT
* Configuration: default
* Going to generate test cases for class: com.google.javascript.jscomp.FunctionInjector
* Starting Client-0
* Connecting to master process on port 16989
* Analyzing classpath: 
  - subjects/buggy-versions/Closure-175/build/classes
  - subjects/buggy-versions/Closure-175/lib/args4j.jar
  - subjects/buggy-versions/Closure-175/lib/guava.jar
  - subjects/buggy-versions/Closure-175/lib/json.jar
  - subjects/buggy-versions/Closure-175/lib/jsr305.jar
  - subjects/buggy-versions/Closure-175/lib/protobuf-java.jar
  - subjects/buggy-versions/Closure-175/build/lib/rhino.jar
  - subjects/buggy-versions/Closure-175/lib/ant.jar
* Finished analyzing classpath
* Generating tests for class com.google.javascript.jscomp.FunctionInjector
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1880
* Using seed 24081874
* Starting evolution
* Initial Number of Goals in DynaMOSA = 529 / 1880
[MASTER] 18:29:49.418 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Iterator<E> : Type points to itself
[MASTER] 18:29:53.180 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[MASTER] 18:29:55.783 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
Number of times BBC is called in total: 0
* Search finished after 602s and 698 generations, 361200 statements, best individual has fitness: 1618.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 22%
* Total number of goals: 259
* Number of covered goals: 58
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 18%
* Total number of goals: 250
* Number of covered goals: 44
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 12%
* Total number of goals: 955
* Number of covered goals: 118
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 1%
* Total number of goals: 146
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 90%
* Total number of goals: 10
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 10
* Number of covered goals: 5
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 18%
* Total number of goals: 250
* Number of covered goals: 44
* Generated 20 tests with total length 149
* Resulting test suite's coverage: 26% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 4%
* Compiling and checking tests
[MASTER] 18:40:15.394 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test00 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Multiple entries with same key: copyright=NOT_IMPLEMENTED and copyright=LICENSE
[MASTER] 18:40:15.417 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
Supplier<String> supplier0 = compiler0.getUniqueNameIdSupplier();
Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "hBIjOm P~iIm%IS ");
FunctionInjector functionInjector0 = new FunctionInjector(compiler0, supplier0, true, true, true);
functionInjector0.maybePrepareCall(node0);

[MASTER] 18:40:15.417 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test03 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Multiple entries with same key: copyright=NOT_IMPLEMENTED and copyright=LICENSE
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 42
* Writing tests to file
* Writing JUnit test case 'FunctionInjector_ESTest' to results/Closure-175/com.google.javascript.jscomp.FunctionInjector/default/tests/18
[MASTER] 18:40:15.417 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
Supplier<String> supplier0 = compiler0.getUniqueNameIdSupplier();
FunctionInjector functionInjector0 = new FunctionInjector(compiler0, supplier0, false, false, false);
PriorityQueue<FunctionInjector.Reference> priorityQueue0 = new PriorityQueue<FunctionInjector.Reference>();
TreeSet<String> treeSet0 = new TreeSet<String>();
boolean boolean0 = functionInjector0.inliningLowersCost((JSModule) null, (Node) null, priorityQueue0, treeSet0, false, false);
assertTrue(boolean0);


[MASTER] 18:40:15.417 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test02 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Multiple entries with same key: copyright=NOT_IMPLEMENTED and copyright=LICENSE
[MASTER] 18:40:15.418 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
Supplier<String> supplier0 = compiler0.getUniqueNameIdSupplier();
Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "\")YNdH9M6)V\"");
GatherRawExports gatherRawExports0 = new GatherRawExports(compiler0);
HashSet<String> hashSet0 = new HashSet<String>();
NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, gatherRawExports0);
FunctionInjector functionInjector0 = new FunctionInjector(compiler0, supplier0, false, false, false);
Node node1 = new Node(53, node0, 1, 8);
FunctionInjector.InliningMode functionInjector_InliningMode0 = FunctionInjector.InliningMode.BLOCK;
functionInjector0.canInlineReferenceToFunction(nodeTraversal0, node0, node1, hashSet0, functionInjector_InliningMode0, false, true);

[MASTER] 18:40:15.418 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test08 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Multiple entries with same key: copyright=NOT_IMPLEMENTED and copyright=LICENSE
[MASTER] 18:40:15.418 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
FunctionInjector functionInjector0 = new FunctionInjector(compiler0, (Supplier<String>) null, false, false, false);

[MASTER] 18:40:15.418 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test19 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Multiple entries with same key: copyright=NOT_IMPLEMENTED and copyright=LICENSE
[MASTER] 18:40:15.418 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test18 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Multiple entries with same key: copyright=NOT_IMPLEMENTED and copyright=LICENSE
[MASTER] 18:40:15.418 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test06 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Multiple entries with same key: copyright=NOT_IMPLEMENTED and copyright=LICENSE
[MASTER] 18:40:15.419 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
Supplier<String> supplier0 = compiler0.getUniqueNameIdSupplier();
FunctionInjector functionInjector0 = new FunctionInjector(compiler0, supplier0, true, true, true);
PriorityQueue<FunctionInjector.Reference> priorityQueue0 = new PriorityQueue<FunctionInjector.Reference>();
FunctionInjector.InliningMode functionInjector_InliningMode0 = FunctionInjector.InliningMode.DIRECT;
FunctionInjector.Reference functionInjector_Reference0 = new FunctionInjector.Reference((Node) null, (JSModule) null, functionInjector_InliningMode0);
priorityQueue0.add(functionInjector_Reference0);
TreeSet<String> treeSet0 = new TreeSet<String>();
boolean boolean0 = functionInjector0.inliningLowersCost((JSModule) null, (Node) null, priorityQueue0, treeSet0, true, true);
assertTrue(boolean0);


* Done!

* Computation finished
