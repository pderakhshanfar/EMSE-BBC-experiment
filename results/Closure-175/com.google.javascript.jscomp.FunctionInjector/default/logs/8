* EvoSuite 1.1.1-SNAPSHOT
* Configuration: default
* Going to generate test cases for class: com.google.javascript.jscomp.FunctionInjector
* Starting Client-0
* Connecting to master process on port 2498
* Analyzing classpath: 
  - subjects/buggy-versions/Closure-175/build/classes
  - subjects/buggy-versions/Closure-175/lib/args4j.jar
  - subjects/buggy-versions/Closure-175/lib/guava.jar
  - subjects/buggy-versions/Closure-175/lib/json.jar
  - subjects/buggy-versions/Closure-175/lib/jsr305.jar
  - subjects/buggy-versions/Closure-175/lib/protobuf-java.jar
  - subjects/buggy-versions/Closure-175/build/lib/rhino.jar
  - subjects/buggy-versions/Closure-175/lib/ant.jar
* Finished analyzing classpath
* Generating tests for class com.google.javascript.jscomp.FunctionInjector
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1880
* Using seed 3122963632
* Starting evolution
* Initial Number of Goals in DynaMOSA = 529 / 1880
[MASTER] 18:26:49.305 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 18:26:49.758 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.Comparable<T> : Type points to itself
[MASTER] 18:26:53.112 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[MASTER] 18:27:15.486 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Iterator<E> : Type points to itself
[MASTER] 18:28:22.191 [logback-2] ERROR TestCluster - Failed to check cache for com.google.javascript.jscomp.ControlFlowGraph<N> : Type points to itself
[MASTER] 18:35:11.934 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
Number of times BBC is called in total: 0
* Search finished after 601s and 618 generations, 299586 statements, best individual has fitness: 1483.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 36%
* Total number of goals: 259
* Number of covered goals: 93
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 26%
* Total number of goals: 250
* Number of covered goals: 64
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 17
* Number of covered goals: 17
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 19%
* Total number of goals: 955
* Number of covered goals: 180
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 1%
* Total number of goals: 146
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 90%
* Total number of goals: 10
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 60%
* Total number of goals: 10
* Number of covered goals: 6
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 26%
* Total number of goals: 250
* Number of covered goals: 64
* Generated 30 tests with total length 225
* Resulting test suite's coverage: 33% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 7%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 39
* Writing tests to file
* Writing JUnit test case 'FunctionInjector_ESTest' to results/Closure-175/com.google.javascript.jscomp.FunctionInjector/default/tests/8
* Done!

* Computation finished
