* EvoSuite 1.1.1-SNAPSHOT
* Configuration: default
* Going to generate test cases for class: com.google.javascript.jscomp.FunctionInjector
* Starting Client-0
* Connecting to master process on port 2200
* Analyzing classpath: 
  - subjects/buggy-versions/Closure-175/build/classes
  - subjects/buggy-versions/Closure-175/lib/args4j.jar
  - subjects/buggy-versions/Closure-175/lib/guava.jar
  - subjects/buggy-versions/Closure-175/lib/json.jar
  - subjects/buggy-versions/Closure-175/lib/jsr305.jar
  - subjects/buggy-versions/Closure-175/lib/protobuf-java.jar
  - subjects/buggy-versions/Closure-175/build/lib/rhino.jar
  - subjects/buggy-versions/Closure-175/lib/ant.jar
* Finished analyzing classpath
* Generating tests for class com.google.javascript.jscomp.FunctionInjector
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1880
* Using seed 3124829677
* Starting evolution
* Initial Number of Goals in DynaMOSA = 529 / 1880
[MASTER] 00:56:24.507 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 305s and 120 generations, 70400 statements, best individual has fitness: 1607.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 23%
* Total number of goals: 259
* Number of covered goals: 60
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 18%
* Total number of goals: 250
* Number of covered goals: 46
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 14
* Number of covered goals: 14
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 13%
* Total number of goals: 955
* Number of covered goals: 124
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 1%
* Total number of goals: 146
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 90%
* Total number of goals: 10
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 10
* Number of covered goals: 5
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 18%
* Total number of goals: 250
* Number of covered goals: 46
* Generated 23 tests with total length 197
* Resulting test suite's coverage: 27% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 4%
* Compiling and checking tests
[MASTER] 01:02:02.403 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 01:02:02.403 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
compiler0.getUniqueNameIdSupplier();
Normalize.parseAndNormalizeTestCode(compiler0, "D&I} 7vkH .g+R&'rHF");

[MASTER] 01:02:05.943 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 01:02:05.943 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
compiler0.getUniqueNameIdSupplier();
Normalize.parseAndNormalizeTestCode(compiler0, "D&I} 7vkH .g+R&'rHF");

[MASTER] 01:02:30.263 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 01:02:30.264 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
compiler0.getUniqueNameIdSupplier();
Normalize.parseAndNormalizeTestCode(compiler0, "D&I} 7vkH g+R&'rHF");

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 6
* Writing tests to file
* Writing JUnit test case 'FunctionInjector_ESTest' to results/Closure-175/com.google.javascript.jscomp.FunctionInjector/default/tests/17
* Done!

* Computation finished
