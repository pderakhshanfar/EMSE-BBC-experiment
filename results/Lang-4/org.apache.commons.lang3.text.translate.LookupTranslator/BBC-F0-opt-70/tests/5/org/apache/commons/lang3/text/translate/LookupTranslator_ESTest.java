/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 10 20:20:47 GMT 2021
 */

package org.apache.commons.lang3.text.translate;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.io.Writer;
import java.nio.CharBuffer;
import org.apache.commons.lang3.text.translate.CharSequenceTranslator;
import org.apache.commons.lang3.text.translate.LookupTranslator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LookupTranslator_ESTest extends LookupTranslator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[2][4];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      char[] charArray0 = new char[8];
      charArray0[0] = 'o';
      charArray0[1] = 'V';
      charArray0[2] = '?';
      charArray0[3] = 'B';
      charArray0[4] = 'f';
      charArray0[5] = 'n';
      charArray0[6] = '!';
      charArray0[7] = ')';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 1, 1);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      charBuffer1.codePoints();
      CharSequenceTranslator.hex((-3387));
      charBuffer0.put('_');
      charSequenceArray1[1] = (CharSequence) "FFFFF2C5";
      charSequenceArray0[0] = charSequenceArray1;
      CharSequence[] charSequenceArray2 = new CharSequence[0];
      charSequenceArray0[1] = charSequenceArray2;
      LookupTranslator lookupTranslator0 = null;
      try {
        lookupTranslator0 = new LookupTranslator(charSequenceArray0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][6];
      CharSequence[] charSequenceArray1 = new CharSequence[3];
      CharBuffer charBuffer0 = CharBuffer.allocate(65535);
      charSequenceArray1[0] = (CharSequence) charBuffer0;
      CharBuffer charBuffer1 = CharBuffer.wrap(charSequenceArray1[0]);
      charSequenceArray1[1] = (CharSequence) charBuffer1;
      char[] charArray0 = new char[6];
      charArray0[0] = 'X';
      charArray0[1] = 'i';
      charArray0[2] = 'G';
      charArray0[3] = 'E';
      charArray0[4] = 't';
      charArray0[5] = '6';
      CharBuffer charBuffer2 = CharBuffer.wrap(charArray0);
      charSequenceArray1[2] = (CharSequence) charBuffer2;
      charSequenceArray0[0] = charSequenceArray1;
      CharSequence[] charSequenceArray2 = new CharSequence[7];
      charSequenceArray2[0] = (CharSequence) charBuffer2;
      charSequenceArray2[1] = (CharSequence) charBuffer1;
      charSequenceArray2[2] = (CharSequence) charBuffer1;
      charSequenceArray2[3] = (CharSequence) charBuffer0;
      CharBuffer charBuffer3 = CharBuffer.wrap(charArray0);
      charSequenceArray2[4] = (CharSequence) charBuffer3;
      charSequenceArray2[5] = (CharSequence) charBuffer2;
      charSequenceArray2[6] = (CharSequence) charBuffer0;
      charSequenceArray0[1] = charSequenceArray2;
      CharSequence[] charSequenceArray3 = new CharSequence[5];
      charSequenceArray3[0] = (CharSequence) charBuffer0;
      charSequenceArray3[1] = (CharSequence) charBuffer0;
      charSequenceArray3[2] = (CharSequence) charBuffer0;
      charSequenceArray3[3] = (CharSequence) charBuffer1;
      charSequenceArray3[4] = (CharSequence) charBuffer1;
      charSequenceArray0[2] = charSequenceArray3;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      StringWriter stringWriter0 = new StringWriter(65535);
      StringWriter stringWriter1 = stringWriter0.append('0');
      StringWriter stringWriter2 = stringWriter1.append(charSequenceArray1[0]);
      lookupTranslator0.translate(charSequenceArray3[4], 57, (Writer) stringWriter2);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[9][3];
      CharSequence[] charSequenceArray1 = new CharSequence[6];
      CharSequenceTranslator.hex(2293);
      charSequenceArray1[0] = (CharSequence) "8F5";
      char[] charArray0 = new char[1];
      charArray0[0] = 'l';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      charSequenceArray1[1] = (CharSequence) charBuffer0;
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 0, 0);
      charSequenceArray1[2] = (CharSequence) charBuffer1;
      CharBuffer charBuffer2 = CharBuffer.wrap((CharSequence) "8F5");
      charSequenceArray1[3] = (CharSequence) charBuffer2;
      CharBuffer charBuffer3 = CharBuffer.allocate(767);
      charSequenceArray1[4] = (CharSequence) charBuffer3;
      CharSequence[][] charSequenceArray2 = new CharSequence[8][8];
      charSequenceArray2[0] = charSequenceArray1;
      charSequenceArray2[1] = charSequenceArray1;
      charSequenceArray2[2] = charSequenceArray1;
      charSequenceArray2[3] = charSequenceArray1;
      charSequenceArray2[4] = charSequenceArray1;
      charSequenceArray2[5] = charSequenceArray1;
      charSequenceArray2[6] = charSequenceArray1;
      CharSequence[] charSequenceArray3 = new CharSequence[9];
      charSequenceArray3[0] = (CharSequence) charBuffer1;
      charSequenceArray3[1] = (CharSequence) "8F5";
      charSequenceArray3[2] = (CharSequence) charBuffer2;
      charSequenceArray3[3] = (CharSequence) "8F5";
      charSequenceArray3[4] = (CharSequence) charBuffer3;
      charSequenceArray3[5] = (CharSequence) "8F5";
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('l');
      StringBuffer stringBuffer0 = stringWriter1.getBuffer();
      charSequenceArray3[6] = (CharSequence) stringBuffer0;
      charSequenceArray3[7] = (CharSequence) charBuffer0;
      charSequenceArray3[8] = (CharSequence) charBuffer3;
      charSequenceArray2[7] = charSequenceArray3;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray2);
      lookupTranslator0.translate(charSequenceArray1[1]);
      charSequenceArray1[5] = (CharSequence) "8F5l";
      charSequenceArray0[0] = charSequenceArray1;
      CharSequence[] charSequenceArray4 = new CharSequence[6];
      charSequenceArray4[0] = (CharSequence) "8F5l";
      charSequenceArray4[1] = (CharSequence) "8F5l";
      charSequenceArray4[2] = (CharSequence) stringBuffer0;
      charSequenceArray4[3] = (CharSequence) charBuffer1;
      charSequenceArray4[4] = (CharSequence) stringBuffer0;
      charSequenceArray4[5] = (CharSequence) charBuffer2;
      charSequenceArray0[1] = charSequenceArray4;
      CharSequence[] charSequenceArray5 = new CharSequence[0];
      charSequenceArray0[2] = charSequenceArray5;
      CharSequence[] charSequenceArray6 = new CharSequence[6];
      charSequenceArray6[0] = (CharSequence) "8F5l";
      charSequenceArray6[1] = (CharSequence) stringBuffer0;
      charSequenceArray6[2] = (CharSequence) charBuffer0;
      charSequenceArray6[3] = (CharSequence) "8F5l";
      charSequenceArray6[4] = (CharSequence) charBuffer0;
      charSequenceArray6[5] = (CharSequence) charBuffer1;
      charSequenceArray0[3] = charSequenceArray6;
      CharSequence[] charSequenceArray7 = new CharSequence[6];
      charSequenceArray7[0] = (CharSequence) charBuffer0;
      charSequenceArray7[1] = (CharSequence) charBuffer3;
      charSequenceArray7[2] = (CharSequence) stringBuffer0;
      charSequenceArray7[3] = (CharSequence) charBuffer1;
      // Undeclared exception!
      try { 
        CharBuffer.wrap(charSequenceArray4[1], 332, (-1));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[2][4];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(4);
      charSequenceArray1[0] = (CharSequence) charBuffer0;
      CharSequenceTranslator.hex(0);
      charSequenceArray1[1] = (CharSequence) "0";
      charSequenceArray0[0] = charSequenceArray1;
      CharSequence[] charSequenceArray2 = new CharSequence[2];
      charSequenceArray2[0] = (CharSequence) charBuffer0;
      charSequenceArray2[1] = (CharSequence) charBuffer0;
      charSequenceArray0[1] = charSequenceArray2;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      StringWriter stringWriter0 = new StringWriter(0);
      stringWriter0.getBuffer();
      int int0 = lookupTranslator0.translate(charSequenceArray2[0], 0, (Writer) stringWriter0);
      assertEquals("\u0000\u0000\u0000\u0000", stringWriter0.toString());
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[2][4];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      charSequenceArray1[0] = (CharSequence) charBuffer0;
      CharSequenceTranslator.hex(0);
      charBuffer0.order();
      charSequenceArray1[1] = (CharSequence) "0";
      charSequenceArray0[0] = charSequenceArray1;
      CharSequence[] charSequenceArray2 = new CharSequence[2];
      charSequenceArray2[0] = (CharSequence) charBuffer0;
      charSequenceArray2[1] = (CharSequence) charBuffer0;
      charSequenceArray0[1] = charSequenceArray2;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      StringWriter stringWriter0 = new StringWriter(0);
      LookupTranslator lookupTranslator1 = new LookupTranslator(charSequenceArray0);
      StringWriter stringWriter1 = new StringWriter(0);
      stringWriter1.getBuffer();
      StringWriter stringWriter2 = new StringWriter();
      lookupTranslator0.translate(charSequenceArray2[1], 0, (Writer) stringWriter2);
      char[] charArray0 = new char[7];
      charArray0[0] = 'W';
      charArray0[1] = '6';
      charArray0[2] = 'W';
      charArray0[3] = '6';
      charArray0[4] = '6';
      charArray0[5] = 'W';
      charArray0[6] = 'W';
      CharBuffer charBuffer1 = CharBuffer.wrap(charArray0);
      lookupTranslator0.translate((CharSequence) charBuffer1, (Writer) stringWriter1);
      // Undeclared exception!
      try { 
        CharBuffer.wrap(charArray0, 10, 57);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[2][4];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      charSequenceArray1[0] = (CharSequence) charBuffer0;
      CharSequenceTranslator.hex(0);
      charSequenceArray1[0] = (CharSequence) "0";
      charSequenceArray0[0] = charSequenceArray1;
      CharSequence[] charSequenceArray2 = new CharSequence[2];
      charSequenceArray2[0] = (CharSequence) charBuffer0;
      charSequenceArray2[1] = (CharSequence) charBuffer0;
      charSequenceArray0[1] = charSequenceArray2;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      StringWriter stringWriter0 = new StringWriter();
      char[] charArray0 = new char[0];
      CharBuffer.wrap((CharSequence) charBuffer0);
      stringWriter0.append('0');
      CharSequenceTranslator.hex(2774);
      lookupTranslator0.translate(charSequenceArray1[0], 0, (Writer) stringWriter0);
      LookupTranslator lookupTranslator1 = new LookupTranslator(charSequenceArray0);
      // Undeclared exception!
      try { 
        lookupTranslator1.translate(charSequenceArray2[1], (-48), (Writer) stringWriter0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.HeapCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[2][4];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      charSequenceArray1[0] = (CharSequence) charBuffer0;
      CharSequenceTranslator.hex(0);
      charBuffer0.order();
      charSequenceArray1[1] = (CharSequence) "0";
      charSequenceArray0[0] = charSequenceArray1;
      CharSequence[] charSequenceArray2 = new CharSequence[2];
      charSequenceArray2[0] = (CharSequence) charBuffer0;
      charSequenceArray2[1] = (CharSequence) charBuffer0;
      charSequenceArray0[1] = charSequenceArray2;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      StringWriter stringWriter0 = new StringWriter(0);
      stringWriter0.getBuffer();
      lookupTranslator0.translate(charSequenceArray2[0], 0, (Writer) stringWriter0);
      char[] charArray0 = new char[2];
      charArray0[0] = 'W';
      lookupTranslator0.translate(charSequenceArray1[1]);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) "0");
      lookupTranslator0.translate((CharSequence) charBuffer1, (Writer) stringWriter0);
      charArray0[1] = '6';
      int int0 = 57;
      // Undeclared exception!
      try { 
        CharBuffer.wrap(charArray0, 0, 57);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[2][4];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      charSequenceArray1[0] = (CharSequence) charBuffer0;
      CharSequenceTranslator.hex(0);
      charSequenceArray1[0] = (CharSequence) "0";
      charSequenceArray0[0] = charSequenceArray1;
      CharSequence[] charSequenceArray2 = new CharSequence[2];
      charSequenceArray2[0] = (CharSequence) charBuffer0;
      charSequenceArray2[1] = (CharSequence) charBuffer0;
      charSequenceArray0[1] = charSequenceArray2;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('0');
      // Undeclared exception!
      try { 
        lookupTranslator0.translate(charSequenceArray2[1], (-1), (Writer) stringWriter1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.HeapCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[2][4];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      charSequenceArray1[0] = (CharSequence) charBuffer0;
      CharSequenceTranslator.hex(0);
      charSequenceArray1[1] = (CharSequence) "0";
      charSequenceArray0[0] = charSequenceArray1;
      CharSequence[] charSequenceArray2 = new CharSequence[2];
      charSequenceArray2[0] = (CharSequence) charBuffer0;
      charSequenceArray2[1] = (CharSequence) charBuffer0;
      charSequenceArray0[1] = charSequenceArray2;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      StringWriter stringWriter0 = new StringWriter(0);
      stringWriter0.getBuffer();
      stringWriter0.flush();
      StringWriter stringWriter1 = stringWriter0.append('x');
      // Undeclared exception!
      try { 
        lookupTranslator0.translate((CharSequence) "0", (-4), (Writer) stringWriter1);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[2][4];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      charSequenceArray1[0] = (CharSequence) charBuffer0;
      CharSequenceTranslator.hex(0);
      charSequenceArray1[1] = (CharSequence) "0";
      charSequenceArray0[0] = charSequenceArray1;
      CharSequence[] charSequenceArray2 = new CharSequence[2];
      charSequenceArray2[0] = (CharSequence) charBuffer0;
      charSequenceArray2[1] = (CharSequence) charBuffer0;
      charSequenceArray0[1] = charSequenceArray2;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('0');
      CharSequenceTranslator.hex(2774);
      lookupTranslator0.translate(charSequenceArray1[0], 0, (Writer) stringWriter0);
      // Undeclared exception!
      try { 
        lookupTranslator0.translate((CharSequence) charBuffer0, (-48), (Writer) stringWriter1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.HeapCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[0][4];
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      StringWriter stringWriter0 = new StringWriter(1);
      StringWriter stringWriter1 = stringWriter0.append('9');
      char[] charArray0 = new char[7];
      charArray0[0] = '9';
      charArray0[1] = '9';
      charArray0[2] = '9';
      charArray0[3] = '9';
      charArray0[4] = '9';
      charArray0[5] = '9';
      charArray0[6] = '9';
      stringWriter0.write(charArray0);
      String string0 = "Semi-colon required at end of numeric entity";
      stringWriter0.write("Semi-colon required at end of numeric entity", 1, 1);
      StringBuffer stringBuffer0 = stringWriter1.getBuffer();
      lookupTranslator0.translate((CharSequence) stringBuffer0, 4, (Writer) stringWriter0);
      stringWriter0.append((CharSequence) "Semi-colon required at end of numeric entity");
      lookupTranslator0.translate((CharSequence) stringBuffer0, 1, (Writer) stringWriter1);
      int int0 = 1464;
      stringWriter0.flush();
      lookupTranslator0.translate((CharSequence) stringBuffer0, 1464, (Writer) stringWriter1);
      lookupTranslator0.translate((CharSequence) stringBuffer0, 2149, (Writer) stringWriter0);
      lookupTranslator0.translate((CharSequence) stringBuffer0, 0, (Writer) stringWriter1);
      CharSequence charSequence0 = null;
      // Undeclared exception!
      try { 
        lookupTranslator0.translate((CharSequence) null, 0, (Writer) stringWriter1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.text.translate.LookupTranslator", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[6][2];
      CharSequence[] charSequenceArray1 = new CharSequence[4];
      CharSequenceTranslator.hex((-89));
      charSequenceArray1[0] = (CharSequence) "FFFFFFA7";
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      char[] charArray0 = new char[9];
      charArray0[0] = 'f';
      charArray0[1] = '0';
      charArray0[2] = 'f';
      charArray0[3] = 'T';
      charArray0[4] = 'g';
      charArray0[5] = 'f';
      charArray0[6] = '6';
      charArray0[7] = '%';
      charArray0[8] = '7';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      charSequenceArray1[2] = (CharSequence) charBuffer0;
      CharSequenceTranslator.hex((-693));
      charSequenceArray1[3] = (CharSequence) "FFFFFD4B";
      charSequenceArray0[0] = charSequenceArray1;
      CharSequence[] charSequenceArray2 = new CharSequence[5];
      charSequenceArray2[0] = (CharSequence) charBuffer0;
      charSequenceArray2[1] = (CharSequence) stringBuffer0;
      charSequenceArray2[2] = (CharSequence) charBuffer0;
      charSequenceArray2[3] = (CharSequence) charBuffer0;
      charSequenceArray2[4] = (CharSequence) charBuffer0;
      charSequenceArray0[1] = charSequenceArray2;
      CharSequence[] charSequenceArray3 = new CharSequence[6];
      charSequenceArray3[0] = (CharSequence) "FFFFFFA7";
      charSequenceArray3[1] = (CharSequence) stringBuffer0;
      charSequenceArray3[2] = (CharSequence) charBuffer0;
      charSequenceArray3[3] = (CharSequence) "FFFFFD4B";
      charSequenceArray3[4] = (CharSequence) "FFFFFFA7";
      charSequenceArray3[5] = (CharSequence) "FFFFFFA7";
      charSequenceArray0[2] = charSequenceArray3;
      CharSequence[] charSequenceArray4 = new CharSequence[0];
      charSequenceArray0[3] = charSequenceArray4;
      CharSequence[] charSequenceArray5 = new CharSequence[7];
      charSequenceArray5[0] = (CharSequence) "FFFFFFA7";
      charSequenceArray5[1] = (CharSequence) stringBuffer0;
      charSequenceArray5[2] = (CharSequence) "FFFFFD4B";
      charSequenceArray5[3] = (CharSequence) charBuffer0;
      CharBuffer charBuffer1 = CharBuffer.wrap(charArray0);
      charSequenceArray5[4] = (CharSequence) charBuffer1;
      charSequenceArray5[5] = (CharSequence) stringBuffer0;
      charSequenceArray5[6] = (CharSequence) charBuffer0;
      charSequenceArray0[4] = charSequenceArray5;
      CharSequence[] charSequenceArray6 = new CharSequence[1];
      charSequenceArray6[0] = (CharSequence) charBuffer0;
      charSequenceArray0[5] = charSequenceArray6;
      LookupTranslator lookupTranslator0 = null;
      try {
        lookupTranslator0 = new LookupTranslator(charSequenceArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[1][9];
      CharSequence[] charSequenceArray1 = new CharSequence[3];
      char[] charArray0 = new char[5];
      charArray0[0] = 'd';
      charArray0[1] = 'Y';
      charArray0[2] = 'B';
      charArray0[3] = '<';
      charArray0[4] = 'U';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      charBuffer0.get(charArray0);
      charSequenceArray1[0] = (CharSequence) charBuffer0;
      LookupTranslator lookupTranslator0 = null;
      try {
        lookupTranslator0 = new LookupTranslator(charSequenceArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[8][1];
      CharSequence[] charSequenceArray1 = new CharSequence[5];
      LookupTranslator lookupTranslator0 = null;
      try {
        lookupTranslator0 = new LookupTranslator(charSequenceArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LookupTranslator lookupTranslator0 = new LookupTranslator((CharSequence[][]) null);
      int int0 = 2565;
      CharSequenceTranslator.hex(2565);
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "A05");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append(']');
      lookupTranslator0.translate((CharSequence) charBuffer0, 2565, (Writer) stringWriter0);
      lookupTranslator0.translate((CharSequence) "A05");
      StringWriter stringWriter2 = new StringWriter();
      StringWriter stringWriter3 = stringWriter2.append((CharSequence) charBuffer0);
      stringWriter2.close();
      lookupTranslator0.translate((CharSequence) charBuffer0, 0, (Writer) stringWriter2);
      StringWriter stringWriter4 = new StringWriter();
      lookupTranslator0.translate((CharSequence) "A05", 117, (Writer) stringWriter4);
      lookupTranslator0.translate((CharSequence) "A05", 0, (Writer) stringWriter3);
      lookupTranslator0.translate((CharSequence) charBuffer0, 2565, (Writer) stringWriter4);
      lookupTranslator0.translate((CharSequence) "A05", 117, (Writer) stringWriter2);
      int int1 = (-108);
      // Undeclared exception!
      try { 
        stringWriter1.append((CharSequence) "A05", 424, 0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[2][4];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      charSequenceArray1[0] = (CharSequence) charBuffer0;
      CharSequenceTranslator.hex(0);
      charSequenceArray1[1] = (CharSequence) "0";
      charSequenceArray0[0] = charSequenceArray1;
      CharSequence[] charSequenceArray2 = new CharSequence[2];
      charSequenceArray2[0] = (CharSequence) charBuffer0;
      charSequenceArray2[1] = (CharSequence) charBuffer0;
      charSequenceArray0[1] = charSequenceArray2;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('0');
      // Undeclared exception!
      try { 
        lookupTranslator0.translate(charSequenceArray2[1], (-1), (Writer) stringWriter1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.HeapCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LookupTranslator lookupTranslator0 = new LookupTranslator((CharSequence[][]) null);
      StringWriter stringWriter0 = null;
      try {
        stringWriter0 = new StringWriter((-1101));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative buffer size
         //
         verifyException("java.io.StringWriter", e);
      }
  }
}
