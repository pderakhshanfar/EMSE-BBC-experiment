/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 21 02:23:20 GMT 2021
 */

package org.apache.commons.lang3.text.translate;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.io.Writer;
import java.nio.CharBuffer;
import org.apache.commons.lang3.text.translate.LookupTranslator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LookupTranslator_ESTest extends LookupTranslator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CharSequence[] charSequenceArray0 = new CharSequence[8];
      CharBuffer charBuffer0 = CharBuffer.allocate(1553);
      charSequenceArray0[0] = (CharSequence) charBuffer0;
      CharSequence[][] charSequenceArray1 = new CharSequence[3][9];
      charSequenceArray1[0] = charSequenceArray0;
      charSequenceArray1[1] = charSequenceArray0;
      CharSequence[] charSequenceArray2 = new CharSequence[6];
      char[] charArray0 = new char[2];
      CharBuffer charBuffer1 = CharBuffer.wrap(charArray0);
      charSequenceArray2[0] = (CharSequence) charBuffer1;
      charSequenceArray2[1] = (CharSequence) charBuffer0;
      charSequenceArray1[2] = charSequenceArray2;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray1);
      // Undeclared exception!
      lookupTranslator0.translate(charSequenceArray0[0]);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CharSequence[] charSequenceArray0 = new CharSequence[8];
      CharBuffer charBuffer0 = CharBuffer.allocate(1513);
      charSequenceArray0[0] = (CharSequence) charBuffer0;
      CharSequence[][] charSequenceArray1 = new CharSequence[2][0];
      charSequenceArray1[0] = charSequenceArray0;
      CharSequence[] charSequenceArray2 = new CharSequence[6];
      charSequenceArray2[0] = (CharSequence) charBuffer0;
      charSequenceArray2[1] = (CharSequence) charBuffer0;
      charSequenceArray2[2] = (CharSequence) charBuffer0;
      charSequenceArray1[1] = charSequenceArray2;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray1);
      StringWriter stringWriter0 = new StringWriter();
      CharBuffer charBuffer1 = CharBuffer.wrap(charSequenceArray2[2]);
      int int0 = lookupTranslator0.translate((CharSequence) charBuffer1, 0, (Writer) stringWriter0);
      assertEquals(1513, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CharSequence[] charSequenceArray0 = new CharSequence[8];
      CharBuffer charBuffer0 = CharBuffer.allocate(1553);
      charSequenceArray0[0] = (CharSequence) charBuffer0;
      CharSequence[][] charSequenceArray1 = new CharSequence[3][9];
      charSequenceArray1[0] = charSequenceArray0;
      charSequenceArray1[1] = charSequenceArray0;
      CharSequence[] charSequenceArray2 = new CharSequence[6];
      char[] charArray0 = new char[2];
      CharBuffer charBuffer1 = CharBuffer.wrap(charArray0);
      charSequenceArray2[0] = (CharSequence) charBuffer1;
      charSequenceArray1[2] = charSequenceArray2;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray1);
      // Undeclared exception!
      lookupTranslator0.translate(charSequenceArray0[0]);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[2][9];
      CharSequence[] charSequenceArray1 = new CharSequence[8];
      CharBuffer charBuffer0 = CharBuffer.allocate(1553);
      StringWriter stringWriter0 = new StringWriter(0);
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) stringBuffer0, 0, 0);
      charSequenceArray0[0] = charSequenceArray1;
      CharSequence[] charSequenceArray2 = new CharSequence[12];
      charSequenceArray2[0] = (CharSequence) charBuffer0;
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      charSequenceArray0[1] = charSequenceArray2;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[2][9];
      CharSequence[] charSequenceArray1 = new CharSequence[8];
      CharBuffer charBuffer0 = CharBuffer.allocate(1553);
      charSequenceArray1[0] = (CharSequence) charBuffer0;
      StringWriter stringWriter0 = new StringWriter(0);
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray1;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      // Undeclared exception!
      try { 
        lookupTranslator0.translate((CharSequence) stringBuffer0, (-1644), (Writer) stringWriter0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1644
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[0][0];
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        lookupTranslator0.translate((CharSequence) null, Integer.MAX_VALUE, (Writer) stringWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CharSequence[] charSequenceArray0 = new CharSequence[8];
      CharBuffer charBuffer0 = CharBuffer.allocate(1553);
      charSequenceArray0[0] = (CharSequence) charBuffer0;
      StringWriter stringWriter0 = new StringWriter(0);
      charSequenceArray0[4] = (CharSequence) charBuffer0;
      CharSequence[][] charSequenceArray1 = new CharSequence[1][0];
      charSequenceArray1[0] = charSequenceArray0;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray1);
      // Undeclared exception!
      try { 
        lookupTranslator0.translate(charSequenceArray0[4], (-3653), (Writer) stringWriter0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.HeapCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[9][5];
      LookupTranslator lookupTranslator0 = null;
      try {
        lookupTranslator0 = new LookupTranslator(charSequenceArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[2][9];
      CharSequence[] charSequenceArray1 = new CharSequence[8];
      CharBuffer charBuffer0 = CharBuffer.allocate(1553);
      charSequenceArray1[0] = (CharSequence) charBuffer0;
      CharBuffer charBuffer1 = CharBuffer.wrap(charSequenceArray1[0]);
      charBuffer0.append((CharSequence) charBuffer1);
      charSequenceArray0[0] = charSequenceArray1;
      CharSequence[] charSequenceArray2 = new CharSequence[12];
      charSequenceArray2[0] = (CharSequence) charBuffer1;
      charSequenceArray0[1] = charSequenceArray2;
      LookupTranslator lookupTranslator0 = null;
      try {
        lookupTranslator0 = new LookupTranslator(charSequenceArray0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CharSequence[] charSequenceArray0 = new CharSequence[8];
      CharBuffer charBuffer0 = CharBuffer.allocate(1513);
      charSequenceArray0[0] = (CharSequence) charBuffer0;
      CharSequence[][] charSequenceArray1 = new CharSequence[2][0];
      charSequenceArray1[0] = charSequenceArray0;
      CharSequence[] charSequenceArray2 = new CharSequence[6];
      charSequenceArray2[0] = (CharSequence) charBuffer0;
      charSequenceArray2[4] = (CharSequence) charBuffer0;
      charSequenceArray1[1] = charSequenceArray2;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray1);
      StringWriter stringWriter0 = new StringWriter();
      int int0 = lookupTranslator0.translate(charSequenceArray2[4], 2447, (Writer) stringWriter0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[2][0];
      LookupTranslator lookupTranslator0 = null;
      try {
        lookupTranslator0 = new LookupTranslator(charSequenceArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LookupTranslator lookupTranslator0 = new LookupTranslator((CharSequence[][]) null);
  }
}
