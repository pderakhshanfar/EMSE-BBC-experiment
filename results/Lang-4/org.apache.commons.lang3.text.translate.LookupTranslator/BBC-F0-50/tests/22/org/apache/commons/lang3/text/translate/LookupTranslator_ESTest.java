/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 02 03:34:17 GMT 2021
 */

package org.apache.commons.lang3.text.translate;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.io.Writer;
import java.nio.CharBuffer;
import org.apache.commons.lang3.text.translate.LookupTranslator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LookupTranslator_ESTest extends LookupTranslator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CharSequence[] charSequenceArray0 = new CharSequence[3];
      charSequenceArray0[0] = (CharSequence) "0";
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBuffer charBuffer1 = charBuffer0.subSequence(0, 0);
      CharSequence[] charSequenceArray1 = new CharSequence[9];
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      charSequenceArray1[1] = (CharSequence) charBuffer1;
      CharSequence[][] charSequenceArray2 = new CharSequence[6][2];
      charSequenceArray2[0] = charSequenceArray1;
      charSequenceArray2[1] = charSequenceArray0;
      charSequenceArray2[2] = charSequenceArray0;
      charSequenceArray2[3] = charSequenceArray1;
      charSequenceArray2[4] = charSequenceArray1;
      charSequenceArray2[5] = charSequenceArray0;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray2);
      StringWriter stringWriter0 = new StringWriter();
      int int0 = lookupTranslator0.translate((CharSequence) charBuffer0, 0, (Writer) stringWriter0);
      assertEquals(0, int0);
      assertEquals("", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CharSequence[] charSequenceArray0 = new CharSequence[3];
      charSequenceArray0[0] = (CharSequence) "0";
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharSequence[] charSequenceArray1 = new CharSequence[9];
      charSequenceArray1[0] = (CharSequence) charBuffer0;
      CharSequence[][] charSequenceArray2 = new CharSequence[6][2];
      charSequenceArray2[0] = charSequenceArray1;
      charSequenceArray2[1] = charSequenceArray0;
      charSequenceArray2[2] = charSequenceArray0;
      charSequenceArray2[3] = charSequenceArray1;
      charSequenceArray2[4] = charSequenceArray1;
      charSequenceArray2[5] = charSequenceArray0;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray2);
      StringWriter stringWriter0 = new StringWriter();
      int int0 = lookupTranslator0.translate((CharSequence) charBuffer0, 0, (Writer) stringWriter0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[3];
      charSequenceArray1[0] = (CharSequence) "0";
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray1;
      charSequenceArray0[2] = charSequenceArray1;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      StringWriter stringWriter0 = new StringWriter(1);
      int int0 = lookupTranslator0.translate((CharSequence) charBuffer0, 117, (Writer) stringWriter0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CharSequence[] charSequenceArray0 = new CharSequence[3];
      charSequenceArray0[0] = (CharSequence) "0";
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      CharSequence[] charSequenceArray1 = new CharSequence[9];
      charSequenceArray1[0] = (CharSequence) charBuffer0;
      CharSequence[][] charSequenceArray2 = new CharSequence[6][2];
      charSequenceArray2[0] = charSequenceArray1;
      charSequenceArray2[1] = charSequenceArray0;
      LookupTranslator lookupTranslator0 = null;
      try {
        lookupTranslator0 = new LookupTranslator(charSequenceArray2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.text.translate.LookupTranslator", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[0][4];
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBuffer charBuffer1 = CharBuffer.allocate(9998);
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      StringWriter stringWriter0 = new StringWriter(9998);
      lookupTranslator0.translate((CharSequence) charBuffer1, (Writer) stringWriter0);
      lookupTranslator0.translate((CharSequence) charBuffer1, 1, (Writer) stringWriter0);
      // Undeclared exception!
      lookupTranslator0.translate((CharSequence) charBuffer0, 9998, (Writer) stringWriter0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[3];
      charSequenceArray1[0] = (CharSequence) "0";
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray1;
      charSequenceArray0[2] = charSequenceArray1;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      StringWriter stringWriter0 = new StringWriter(1);
      // Undeclared exception!
      try { 
        lookupTranslator0.translate(charSequenceArray1[0], (-1003), (Writer) stringWriter0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[3];
      charSequenceArray1[0] = (CharSequence) "0";
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      charSequenceArray1[1] = (CharSequence) charBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray0[0];
      charSequenceArray0[2] = charSequenceArray1;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      // Undeclared exception!
      try { 
        lookupTranslator0.translate(charSequenceArray1[0], 0, (Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CharSequence[] charSequenceArray0 = new CharSequence[3];
      charSequenceArray0[0] = (CharSequence) "0";
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharSequence[] charSequenceArray1 = new CharSequence[9];
      charSequenceArray1[0] = (CharSequence) charBuffer0;
      CharSequence[][] charSequenceArray2 = new CharSequence[6][2];
      charSequenceArray2[0] = charSequenceArray1;
      charSequenceArray2[1] = charSequenceArray0;
      charSequenceArray2[2] = charSequenceArray0;
      charSequenceArray2[3] = charSequenceArray1;
      charSequenceArray2[4] = charSequenceArray1;
      charSequenceArray2[5] = charSequenceArray0;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray2);
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        lookupTranslator0.translate(charSequenceArray1[0], (-1882), (Writer) stringWriter0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.HeapCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[3];
      charSequenceArray1[0] = (CharSequence) "0";
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      charSequenceArray1[1] = (CharSequence) charBuffer0;
      CharBuffer charBuffer1 = CharBuffer.wrap(charSequenceArray1[1]);
      charSequenceArray0[0] = charSequenceArray1;
      CharSequence[] charSequenceArray2 = new CharSequence[9];
      charSequenceArray2[0] = (CharSequence) charBuffer1;
      charBuffer0.put("0");
      charSequenceArray0[1] = charSequenceArray2;
      LookupTranslator lookupTranslator0 = null;
      try {
        lookupTranslator0 = new LookupTranslator(charSequenceArray0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][1];
      LookupTranslator lookupTranslator0 = null;
      try {
        lookupTranslator0 = new LookupTranslator(charSequenceArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.lang3.text.translate.LookupTranslator", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CharSequence[] charSequenceArray0 = new CharSequence[3];
      charSequenceArray0[0] = (CharSequence) "0";
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharSequence[] charSequenceArray1 = new CharSequence[9];
      charSequenceArray1[0] = (CharSequence) charBuffer0;
      charSequenceArray1[1] = (CharSequence) charBuffer0;
      CharSequence[][] charSequenceArray2 = new CharSequence[6][2];
      charSequenceArray2[0] = charSequenceArray1;
      charSequenceArray2[1] = charSequenceArray0;
      charSequenceArray2[2] = charSequenceArray0;
      charSequenceArray2[3] = charSequenceArray1;
      charSequenceArray2[4] = charSequenceArray1;
      charSequenceArray2[5] = charSequenceArray0;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray2);
      StringWriter stringWriter0 = new StringWriter();
      int int0 = lookupTranslator0.translate((CharSequence) charBuffer0, 0, (Writer) stringWriter0);
      assertEquals("\u0000\u0000\u0000", stringWriter0.toString());
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LookupTranslator lookupTranslator0 = new LookupTranslator((CharSequence[][]) null);
  }
}
