* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-50
* Going to generate test cases for class: org.apache.commons.lang3.text.translate.LookupTranslator
* Starting Client-0
* Connecting to master process on port 16707
* Analyzing classpath: 
  - subjects/buggy-versions/Lang-4/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.lang3.text.translate.LookupTranslator
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 226
* Using seed 1309106689
* Starting evolution
bbc usage percentage is: 50%
* Initial Number of Goals in DynaMOSA = 54 / 226
* Search finished after 601s and 4810 generations, 2037523 statements, best individual has fitness: 10.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 25
* Number of covered goals: 25
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 14
* Number of covered goals: 14
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 6
* Number of covered goals: 6
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 98%
* Total number of goals: 166
* Number of covered goals: 163
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 67%
* Total number of goals: 3
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 14
* Number of covered goals: 14
* Generated 11 tests with total length 119
* Resulting test suite's coverage: 89% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 56%
* Compiling and checking tests
[MASTER] 04:57:46.326 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 04:57:46.398 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 04:57:46.452 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 04:57:46.504 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 04:57:46.563 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 04:57:46.610 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 04:57:46.660 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 04:57:46.703 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 04:57:46.747 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 04:57:46.788 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 04:57:49.353 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 04:57:49.356 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 04:57:49.356 [logback-1] WARN  JUnitAnalyzer - Failing test:
 CharSequence[] charSequenceArray0 = new CharSequence[18];
char[] charArray0 = new char[5];
CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
charSequenceArray0[0] = (CharSequence) charBuffer0;
CharBuffer charBuffer1 = CharBuffer.allocate(3127);
StringWriter stringWriter0 = new StringWriter('v');
stringWriter0.write((String) null);
StringBuffer stringBuffer0 = stringWriter0.getBuffer();
charSequenceArray0[1] = (CharSequence) stringBuffer0;
CharSequence[][] charSequenceArray1 = new CharSequence[5][5];
CharSequence[] charSequenceArray2 = new CharSequence[3];
charBuffer1.read(charBuffer0);
charSequenceArray2[0] = (CharSequence) stringBuffer0;
charSequenceArray2[1] = (CharSequence) charBuffer1;
charSequenceArray1[0] = charSequenceArray2;
charSequenceArray1[1] = charSequenceArray0;
charSequenceArray1[2] = charSequenceArray0;
charSequenceArray1[3] = charSequenceArray0;
charSequenceArray1[4] = charSequenceArray0;
LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray1);
lookupTranslator0.translate(charSequenceArray2[1], (Writer) stringWriter0);

[MASTER] 04:57:49.450 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 04:57:49.534 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing tests to file
* Writing JUnit test case 'LookupTranslator_ESTest' to results/Lang-4/org.apache.commons.lang3.text.translate.LookupTranslator/BBC-F0-50/tests/18
* Done!

* Computation finished
