/*
 * This file was automatically generated by EvoSuite
 * Mon Mar 08 05:35:37 GMT 2021
 */

package org.apache.commons.lang3.text.translate;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.io.Writer;
import java.nio.CharBuffer;
import org.apache.commons.lang3.text.translate.LookupTranslator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LookupTranslator_ESTest extends LookupTranslator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CharSequence[] charSequenceArray0 = new CharSequence[4];
      CharBuffer charBuffer0 = CharBuffer.allocate(1165);
      charSequenceArray0[0] = (CharSequence) charBuffer0;
      CharBuffer charBuffer1 = CharBuffer.allocate(434);
      CharSequence[][] charSequenceArray1 = new CharSequence[9][2];
      charSequenceArray1[0] = charSequenceArray0;
      CharSequence[] charSequenceArray2 = new CharSequence[7];
      charSequenceArray2[0] = (CharSequence) charBuffer1;
      charSequenceArray2[1] = (CharSequence) charBuffer0;
      charSequenceArray1[1] = charSequenceArray2;
      charSequenceArray1[2] = charSequenceArray0;
      charSequenceArray1[3] = charSequenceArray0;
      charSequenceArray1[4] = charSequenceArray0;
      charSequenceArray1[5] = charSequenceArray0;
      charSequenceArray1[6] = charSequenceArray0;
      charSequenceArray1[7] = charSequenceArray0;
      charSequenceArray1[8] = charSequenceArray0;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray1);
      String string0 = lookupTranslator0.translate((CharSequence) charBuffer1);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CharSequence[] charSequenceArray0 = new CharSequence[4];
      CharBuffer charBuffer0 = CharBuffer.allocate(1165);
      CharBuffer charBuffer1 = CharBuffer.allocate(434);
      charSequenceArray0[0] = (CharSequence) charBuffer1;
      CharSequence[][] charSequenceArray1 = new CharSequence[2][8];
      charSequenceArray1[0] = charSequenceArray0;
      CharSequence[] charSequenceArray2 = new CharSequence[4];
      charSequenceArray2[0] = (CharSequence) charBuffer0;
      charSequenceArray1[1] = charSequenceArray2;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CharSequence[] charSequenceArray0 = new CharSequence[4];
      CharBuffer charBuffer0 = CharBuffer.allocate(1165);
      charSequenceArray0[0] = (CharSequence) charBuffer0;
      CharSequence[][] charSequenceArray1 = new CharSequence[9][2];
      charSequenceArray1[0] = charSequenceArray0;
      charSequenceArray1[1] = charSequenceArray1[0];
      charSequenceArray1[2] = charSequenceArray0;
      charSequenceArray1[3] = charSequenceArray0;
      charSequenceArray1[4] = charSequenceArray0;
      charSequenceArray1[5] = charSequenceArray0;
      charSequenceArray1[6] = charSequenceArray0;
      charSequenceArray1[7] = charSequenceArray0;
      charSequenceArray1[8] = charSequenceArray0;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray1);
      StringWriter stringWriter0 = new StringWriter();
      int int0 = lookupTranslator0.translate((CharSequence) charBuffer0, 272, (Writer) stringWriter0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CharSequence[] charSequenceArray0 = new CharSequence[4];
      CharBuffer charBuffer0 = CharBuffer.allocate(1165);
      charSequenceArray0[0] = (CharSequence) charBuffer0;
      CharBuffer charBuffer1 = CharBuffer.allocate(434);
      CharSequence[][] charSequenceArray1 = new CharSequence[9][2];
      charSequenceArray1[0] = charSequenceArray0;
      CharSequence[] charSequenceArray2 = new CharSequence[7];
      charSequenceArray2[0] = (CharSequence) charBuffer1;
      charSequenceArray2[1] = (CharSequence) charBuffer0;
      charSequenceArray1[1] = charSequenceArray2;
      charSequenceArray1[2] = charSequenceArray0;
      charSequenceArray1[3] = charSequenceArray0;
      charSequenceArray1[4] = charSequenceArray0;
      charSequenceArray1[5] = charSequenceArray0;
      charSequenceArray1[6] = charSequenceArray0;
      charSequenceArray1[7] = charSequenceArray0;
      charSequenceArray1[8] = charSequenceArray0;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray1);
      StringWriter stringWriter0 = new StringWriter();
      int int0 = lookupTranslator0.translate((CharSequence) charBuffer0, 614, (Writer) stringWriter0);
      assertEquals(434, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CharSequence[] charSequenceArray0 = new CharSequence[4];
      charSequenceArray0[0] = (CharSequence) "FFFFFFFF";
      CharSequence[][] charSequenceArray1 = new CharSequence[8][0];
      charSequenceArray1[0] = charSequenceArray0;
      charSequenceArray1[1] = charSequenceArray0;
      charSequenceArray1[2] = charSequenceArray0;
      charSequenceArray1[3] = charSequenceArray0;
      charSequenceArray1[4] = charSequenceArray0;
      charSequenceArray1[5] = charSequenceArray0;
      charSequenceArray1[6] = charSequenceArray0;
      charSequenceArray1[7] = charSequenceArray0;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray1);
      StringWriter stringWriter0 = new StringWriter(372);
      // Undeclared exception!
      try { 
        lookupTranslator0.translate((CharSequence) "FFFFFFFF", (-1), (Writer) stringWriter0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CharSequence[] charSequenceArray0 = new CharSequence[4];
      CharBuffer charBuffer0 = CharBuffer.allocate(1165);
      charSequenceArray0[0] = (CharSequence) charBuffer0;
      StringWriter stringWriter0 = new StringWriter();
      CharSequence[][] charSequenceArray1 = new CharSequence[5][1];
      charSequenceArray1[0] = charSequenceArray0;
      charSequenceArray1[1] = charSequenceArray0;
      charSequenceArray1[2] = charSequenceArray0;
      charSequenceArray1[3] = charSequenceArray0;
      charSequenceArray1[4] = charSequenceArray0;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray1);
      // Undeclared exception!
      try { 
        lookupTranslator0.translate((CharSequence) null, 0, (Writer) stringWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.text.translate.LookupTranslator", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CharSequence[] charSequenceArray0 = new CharSequence[4];
      CharBuffer charBuffer0 = CharBuffer.allocate(1165);
      charSequenceArray0[0] = (CharSequence) charBuffer0;
      CharSequence[][] charSequenceArray1 = new CharSequence[4][0];
      charSequenceArray1[0] = charSequenceArray0;
      charSequenceArray1[1] = charSequenceArray0;
      charSequenceArray1[2] = charSequenceArray0;
      charSequenceArray1[3] = charSequenceArray0;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray1);
      StringWriter stringWriter0 = new StringWriter(1056);
      // Undeclared exception!
      try { 
        lookupTranslator0.translate((CharSequence) charBuffer0, (-2915), (Writer) stringWriter0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.HeapCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CharSequence[] charSequenceArray0 = new CharSequence[4];
      CharBuffer charBuffer0 = CharBuffer.allocate(1165);
      charSequenceArray0[0] = (CharSequence) charBuffer0;
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0);
      CharSequence[][] charSequenceArray1 = new CharSequence[4][4];
      charSequenceArray1[0] = charSequenceArray0;
      charSequenceArray1[1] = charSequenceArray0;
      CharSequence[] charSequenceArray2 = new CharSequence[7];
      charSequenceArray2[0] = (CharSequence) charBuffer1;
      charSequenceArray1[2] = charSequenceArray2;
      charBuffer0.get();
      LookupTranslator lookupTranslator0 = null;
      try {
        lookupTranslator0 = new LookupTranslator(charSequenceArray1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[7][3];
      CharSequence[] charSequenceArray1 = new CharSequence[5];
      CharBuffer charBuffer0 = CharBuffer.allocate(2);
      charSequenceArray1[0] = (CharSequence) charBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray1;
      charSequenceArray0[2] = charSequenceArray0[1];
      charSequenceArray0[3] = charSequenceArray0[0];
      CharSequence[] charSequenceArray2 = new CharSequence[0];
      charSequenceArray0[4] = charSequenceArray2;
      LookupTranslator lookupTranslator0 = null;
      try {
        lookupTranslator0 = new LookupTranslator(charSequenceArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CharSequence[] charSequenceArray0 = new CharSequence[4];
      CharBuffer charBuffer0 = CharBuffer.allocate(1165);
      charSequenceArray0[0] = (CharSequence) charBuffer0;
      CharBuffer charBuffer1 = CharBuffer.allocate(434);
      CharSequence[][] charSequenceArray1 = new CharSequence[9][2];
      charSequenceArray1[0] = charSequenceArray0;
      CharSequence[] charSequenceArray2 = new CharSequence[7];
      charSequenceArray2[0] = (CharSequence) charBuffer1;
      charSequenceArray2[1] = (CharSequence) charBuffer0;
      charSequenceArray1[1] = charSequenceArray2;
      charSequenceArray1[2] = charSequenceArray0;
      charSequenceArray1[3] = charSequenceArray0;
      charSequenceArray1[4] = charSequenceArray0;
      charSequenceArray1[5] = charSequenceArray0;
      charSequenceArray1[6] = charSequenceArray0;
      charSequenceArray1[7] = charSequenceArray0;
      charSequenceArray1[8] = charSequenceArray0;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray1);
      String string0 = lookupTranslator0.translate((CharSequence) charBuffer0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[4][4];
      LookupTranslator lookupTranslator0 = null;
      try {
        lookupTranslator0 = new LookupTranslator(charSequenceArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LookupTranslator lookupTranslator0 = new LookupTranslator((CharSequence[][]) null);
  }
}
