/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 17 19:41:27 GMT 2021
 */

package org.apache.commons.compress.archivers.tar;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.compress.archivers.tar.TarUtils;
import org.apache.commons.compress.archivers.zip.ZipEncoding;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TarUtils_ESTest extends TarUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        TarUtils.formatLongOctalOrBinaryBytes((-1067L), byteArray0, (-582), (-582));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Value -1067 is too large for -582 byte field.
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[23];
      // Undeclared exception!
      try { 
        TarUtils.formatLongOctalOrBinaryBytes((-1884L), byteArray0, (-1049), 9508);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      // Undeclared exception!
      try { 
        TarUtils.formatLongOctalOrBinaryBytes(8589934591L, byteArray0, 8, (byte)91);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 97
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[24];
      String string0 = TarUtils.parseName(byteArray0, (int) (byte)78, (-3536));
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[53];
      int int0 = TarUtils.formatLongOctalOrBinaryBytes((-71L), byteArray0, 7, 7);
      assertEquals(14, int0);
      
      long long0 = TarUtils.parseOctalOrBinary(byteArray0, 7, 14);
      assertEquals((-5116089176692883456L), long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[53];
      int int0 = TarUtils.formatLongOctalOrBinaryBytes((-1L), byteArray0, 7, 7);
      assertEquals(14, int0);
      
      long long0 = TarUtils.parseOctalOrBinary(byteArray0, 7, 9);
      assertEquals((-65536L), long0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[23];
      TarUtils.formatLongOctalOrBinaryBytes((-4140L), byteArray0, 3, 3);
      // Undeclared exception!
      try { 
        TarUtils.parseOctal(byteArray0, 3, 6);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid byte -1 at offset 0 in '\uFFFD\uFFFD\uFFFD{NUL}{NUL}{NUL}' len=6
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      int int0 = TarUtils.formatLongOctalOrBinaryBytes(2, byteArray0, 2, 2);
      assertEquals(4, int0);
      
      ZipEncoding zipEncoding0 = TarUtils.FALLBACK_ENCODING;
      String string0 = TarUtils.parseName(byteArray0, 2, 4, zipEncoding0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)50, (byte)32, (byte)0, (byte)0}, byteArray0);
      assertEquals("2 ", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[41];
      int int0 = TarUtils.formatLongOctalOrBinaryBytes(251L, byteArray0, 4, 4);
      assertEquals(8, int0);
      
      long long0 = TarUtils.parseOctalOrBinary(byteArray0, 4, 8);
      assertEquals(251L, long0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      int int0 = TarUtils.formatLongOctalOrBinaryBytes(3, byteArray0, 3, 3);
      assertEquals(6, int0);
      
      long long0 = TarUtils.parseOctal(byteArray0, 3, 3);
      assertEquals(3L, long0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)48, (byte)51, (byte)32, (byte)0, (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte)3;
      String string0 = TarUtils.parseName(byteArray0, (int) (byte)3, (int) (byte)3);
      assertEquals("\u0003", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[23];
      int int0 = TarUtils.formatOctalBytes(216L, byteArray0, (byte)0, 8);
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[23];
      ZipEncoding zipEncoding0 = TarUtils.DEFAULT_ENCODING;
      int int0 = TarUtils.formatNameBytes("J@7t", byteArray0, (int) (byte)0, (int) (byte)0, zipEncoding0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ZipEncoding zipEncoding0 = TarUtils.DEFAULT_ENCODING;
      byte[] byteArray0 = new byte[7];
      int int0 = TarUtils.formatNameBytes("ISO-8859-1", byteArray0, (int) (byte)0, (-185), zipEncoding0);
      assertEquals((-185), int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      int int0 = TarUtils.formatNameBytes("", byteArray0, (int) (byte)0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      int int0 = TarUtils.formatNameBytes("", byteArray0, 4, 2);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(6, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[23];
      int int0 = TarUtils.formatNameBytes("", byteArray0, 19, (-5255));
      assertEquals((-5236), int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[26];
      int int0 = TarUtils.formatCheckSumOctalBytes(3, byteArray0, 3, 3);
      assertEquals(6, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[41];
      int int0 = TarUtils.formatLongOctalOrBinaryBytes(251L, byteArray0, 4, 4);
      assertEquals(8, int0);
      
      long long0 = TarUtils.computeCheckSum(byteArray0);
      assertEquals(189L, long0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        TarUtils.verifyCheckSum((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[23];
      // Undeclared exception!
      try { 
        TarUtils.verifyCheckSum(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 148
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      // Undeclared exception!
      try { 
        TarUtils.parseOctalOrBinary((byte[]) null, (-1272), (-1272));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      // Undeclared exception!
      try { 
        TarUtils.parseOctal((byte[]) null, 2258, (byte)119);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[53];
      TarUtils.formatLongOctalOrBinaryBytes(4, byteArray0, 4, 4);
      // Undeclared exception!
      try { 
        TarUtils.parseOctal(byteArray0, 7, 198);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 204
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      // Undeclared exception!
      try { 
        TarUtils.parseName((byte[]) null, 2874, 2874, (ZipEncoding) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[23];
      // Undeclared exception!
      try { 
        TarUtils.parseName(byteArray0, (int) (byte) (-1), (int) (byte)2, (ZipEncoding) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      // Undeclared exception!
      try { 
        TarUtils.parseName((byte[]) null, (-2920), 1273);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      // Undeclared exception!
      try { 
        TarUtils.parseName(byteArray0, (int) (byte) (-16), 63);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 46
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      // Undeclared exception!
      try { 
        TarUtils.parseBoolean((byte[]) null, 1063);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[23];
      // Undeclared exception!
      try { 
        TarUtils.parseBoolean(byteArray0, (byte) (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[50];
      // Undeclared exception!
      try { 
        TarUtils.formatUnsignedOctalString(1L, byteArray0, 14, 239);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 252
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      // Undeclared exception!
      try { 
        TarUtils.formatOctalBytes(7L, (byte[]) null, (-3328), 2035);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ZipEncoding zipEncoding0 = TarUtils.DEFAULT_ENCODING;
      // Undeclared exception!
      try { 
        TarUtils.formatNameBytes(" must be at least 2", byteArray0, (-4536), (int) (byte)0, zipEncoding0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      // Undeclared exception!
      try { 
        TarUtils.formatNameBytes((String) null, byteArray0, (int) (byte)79, 18);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      // Undeclared exception!
      try { 
        TarUtils.formatLongOctalOrBinaryBytes(206L, (byte[]) null, (byte)91, 930);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      // Undeclared exception!
      try { 
        TarUtils.formatLongOctalOrBinaryBytes(0L, byteArray0, (byte)48, (byte) (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 45
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      // Undeclared exception!
      try { 
        TarUtils.formatLongOctalBytes((-170L), (byte[]) null, 148, 148);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        TarUtils.formatLongOctalBytes((-1L), byteArray0, 9576, (byte)0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -1=1777777777777777777777 will not fit in octal number buffer of length -1
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      // Undeclared exception!
      try { 
        TarUtils.formatLongOctalBytes(0L, byteArray0, (byte)0, 162);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 160
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      // Undeclared exception!
      try { 
        TarUtils.formatCheckSumOctalBytes(2434L, (byte[]) null, (-1484), 61);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      // Undeclared exception!
      try { 
        TarUtils.formatCheckSumOctalBytes((-2094L), byteArray0, (byte)101, (-1484));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -2094=1777777777777777773722 will not fit in octal number buffer of length -1486
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      // Undeclared exception!
      try { 
        TarUtils.computeCheckSum((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      // Undeclared exception!
      try { 
        TarUtils.formatUnsignedOctalString((byte)62, byteArray0, 10, (byte)0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 62=76 will not fit in octal number buffer of length 0
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[23];
      TarUtils.formatUnsignedOctalString(1197L, byteArray0, 10, 10);
      assertEquals(23, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      // Undeclared exception!
      try { 
        TarUtils.formatUnsignedOctalString(0L, (byte[]) null, 222, (-1166));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      byte[] byteArray0 = new byte[26];
      ZipEncoding zipEncoding0 = TarUtils.DEFAULT_ENCODING;
      String string0 = TarUtils.parseName(byteArray0, 3, 3, zipEncoding0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      byte[] byteArray0 = new byte[23];
      long long0 = TarUtils.parseOctal(byteArray0, (byte)0, 2203);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      long long0 = TarUtils.computeCheckSum(byteArray0);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        TarUtils.formatLongOctalOrBinaryBytes((-2015L), byteArray0, 949, (-331));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Value -2015 is too large for -331 byte field.
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      // Undeclared exception!
      try { 
        TarUtils.formatLongOctalOrBinaryBytes((-1L), byteArray0, 1, 1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Value -1 is too large for 1 byte field.
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      byte[] byteArray0 = new byte[23];
      int int0 = TarUtils.formatLongOctalOrBinaryBytes((-2042L), byteArray0, 9, 9);
      assertEquals(18, int0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      byte[] byteArray0 = new byte[50];
      int int0 = TarUtils.formatLongOctalOrBinaryBytes(1099511627776L, byteArray0, 7, 7);
      assertEquals(14, int0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        TarUtils.formatOctalBytes((-1131L), byteArray0, 9619, (-889));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -1131=1777777777777777775625 will not fit in octal number buffer of length -891
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        TarUtils.formatCheckSumOctalBytes(0L, byteArray0, (byte)0, 9577);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9574
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ZipEncoding zipEncoding0 = TarUtils.DEFAULT_ENCODING;
      // Undeclared exception!
      try { 
        TarUtils.formatNameBytes("US-ASCII", (byte[]) null, 3004, (-2141015322), zipEncoding0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[2] = (byte)1;
      boolean boolean0 = TarUtils.parseBoolean(byteArray0, 2);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      byte[] byteArray0 = new byte[53];
      boolean boolean0 = TarUtils.parseBoolean(byteArray0, 7);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      byte[] byteArray0 = new byte[23];
      TarUtils.formatLongOctalOrBinaryBytes((-2023L), byteArray0, 3, 3);
      // Undeclared exception!
      try { 
        TarUtils.parseOctalOrBinary(byteArray0, 3, 12);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // At offset 3, 12 byte binary number exceeds maximum signed long value
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      byte[] byteArray0 = new byte[24];
      byteArray0[0] = (byte) (-105);
      long long0 = TarUtils.parseOctalOrBinary(byteArray0, 0, (-2147483646));
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      byte[] byteArray0 = new byte[23];
      int int0 = TarUtils.formatLongOctalOrBinaryBytes((-4149L), byteArray0, 4, 4);
      assertEquals(8, int0);
      
      long long0 = TarUtils.parseOctalOrBinary(byteArray0, 4, 8);
      assertEquals((-17819819311104L), long0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      byte[] byteArray0 = new byte[53];
      TarUtils.formatLongOctalOrBinaryBytes((-17L), byteArray0, 7, 7);
      long long0 = TarUtils.parseOctalOrBinary(byteArray0, 13, 14);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      byteArray0[0] = (byte)3;
      // Undeclared exception!
      try { 
        TarUtils.parseOctalOrBinary(byteArray0, 0, (byte)3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid byte 3 at offset 0 in '\u0003{NUL}{NUL}' len=3
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      byte[] byteArray0 = new byte[53];
      int int0 = TarUtils.formatLongOctalOrBinaryBytes(4, byteArray0, 4, 4);
      assertEquals(8, int0);
      
      long long0 = TarUtils.parseOctal(byteArray0, 7, 8);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      TarUtils.formatLongOctalOrBinaryBytes(2, byteArray0, 2, 2);
      // Undeclared exception!
      try { 
        TarUtils.parseOctalOrBinary(byteArray0, 2, Integer.MAX_VALUE);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2147483648
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      byte[] byteArray0 = new byte[23];
      long long0 = TarUtils.parseOctalOrBinary(byteArray0, (byte)10, 2);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        TarUtils.parseOctal(byteArray0, (-2203), (-2203));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Length -2203 must be at least 2
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      byte[] byteArray0 = new byte[23];
      int int0 = TarUtils.formatLongOctalOrBinaryBytes((-4149L), byteArray0, 4, 4);
      assertEquals(8, int0);
      
      ZipEncoding zipEncoding0 = TarUtils.FALLBACK_ENCODING;
      String string0 = TarUtils.parseName(byteArray0, 1, 8, zipEncoding0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      byte[] byteArray0 = new byte[23];
      int int0 = TarUtils.formatLongOctalOrBinaryBytes((-299L), byteArray0, 8, 8);
      assertEquals(16, int0);
      
      ZipEncoding zipEncoding0 = TarUtils.FALLBACK_ENCODING;
      String string0 = TarUtils.parseName(byteArray0, 9, 9, zipEncoding0);
      assertEquals("\u00FF\u00FF\u00FF\u00FF\u00FF\u00FE\u00D5", string0);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      byte[] byteArray0 = new byte[53];
      ZipEncoding zipEncoding0 = TarUtils.FALLBACK_ENCODING;
      int int0 = TarUtils.formatNameBytes("`.5^?YKbRW5_&)", byteArray0, 4, 8, zipEncoding0);
      assertEquals(12, int0);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      byte[] byteArray0 = new byte[23];
      ZipEncoding zipEncoding0 = TarUtils.FALLBACK_ENCODING;
      int int0 = TarUtils.formatNameBytes("", byteArray0, 4, 1, zipEncoding0);
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      byte[] byteArray0 = new byte[53];
      // Undeclared exception!
      try { 
        TarUtils.formatOctalBytes(7, byteArray0, 7, 1199);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1203
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[2] = (byte)117;
      // Undeclared exception!
      try { 
        TarUtils.parseOctal(byteArray0, 2, 4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid byte 117 at offset 0 in 'u{NUL}{NUL}{NUL}' len=4
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      byte[] byteArray0 = new byte[65];
      // Undeclared exception!
      try { 
        TarUtils.formatNameBytes("", byteArray0, 62, 31);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 65
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      byte[] byteArray0 = new byte[65];
      int int0 = TarUtils.formatLongOctalBytes((-2585L), byteArray0, 31, 31);
      assertEquals(62, int0);
      
      long long0 = TarUtils.parseOctal(byteArray0, 31, 31);
      assertEquals((-2585L), long0);
  }
}
