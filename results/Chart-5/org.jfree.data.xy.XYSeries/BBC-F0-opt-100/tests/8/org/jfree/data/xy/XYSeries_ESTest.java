/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 07 15:22:33 GMT 2021
 */

package org.jfree.data.xy;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.AWTKeyStroke;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JLayeredPane;
import javax.swing.JList;
import javax.swing.KeyStroke;
import javax.swing.event.RowSorterEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.jfree.data.time.Minute;
import org.jfree.data.time.Month;
import org.jfree.data.time.SimpleTimePeriod;
import org.jfree.data.time.SpreadsheetDate;
import org.jfree.data.time.Week;
import org.jfree.data.time.Year;
import org.jfree.data.xy.XYDataItem;
import org.jfree.data.xy.XYDatasetTableModel;
import org.jfree.data.xy.XYSeries;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class XYSeries_ESTest extends XYSeries_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0, true, true);
      BigInteger bigInteger0 = BigInteger.ONE;
      xYSeries0.add((Number) integer0, (Number) bigInteger0);
      XYDataItem xYDataItem0 = new XYDataItem((Number) integer0, (Number) integer0);
      xYSeries0.add(xYDataItem0, true);
      xYSeries0.add((Number) integer0, (Number) integer0);
      xYSeries0.add(xYDataItem0, true);
      xYSeries0.add((Number) bigInteger0, (Number) integer0);
      xYSeries0.hashCode();
      assertEquals(5, xYSeries0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      SimpleTimePeriod simpleTimePeriod0 = new SimpleTimePeriod(1536L, 1536L);
      XYSeries xYSeries0 = new XYSeries(simpleTimePeriod0, true);
      XYSeries xYSeries1 = xYSeries0.createCopy((-1153), (-1153));
      xYSeries1.setMaximumItemCount(0);
      boolean boolean0 = xYSeries0.equals(xYSeries1);
      assertEquals(0, xYSeries1.getMaximumItemCount());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      xYSeries0.add((Number) integer0, (Number) integer0);
      // Undeclared exception!
      try { 
        xYSeries0.createCopy(0, 1697);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      SimpleTimePeriod simpleTimePeriod0 = new SimpleTimePeriod(1536L, 1536L);
      XYSeries xYSeries0 = new XYSeries(simpleTimePeriod0, true);
      xYSeries0.addOrUpdate(0.0, Double.NaN);
      // Undeclared exception!
      try { 
        xYSeries0.createCopy((-822), 1402);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0, false, false);
      xYSeries0.add(0.0, (-975.5), true);
      xYSeries0.add((Number) integer0, (Number) integer0);
      xYSeries0.addOrUpdate((Number) integer0, (Number) integer0);
      assertEquals(2, xYSeries0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      xYSeries0.addOrUpdate(1247.16013377411, 0.0);
      Float float0 = new Float(1.7976931348623157E308);
      xYSeries0.addOrUpdate((Number) float0, (Number) integer0);
      xYSeries0.update(float0, integer0);
      assertEquals(2, xYSeries0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Month month0 = new Month();
      XYSeries xYSeries0 = new XYSeries(month0, true);
      Float float0 = new Float((double) 44);
      xYSeries0.add(697.6886478642907, (Number) float0, false);
      // Undeclared exception!
      try { 
        xYSeries0.delete(0, 3953);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      xYSeries0.addOrUpdate(0.0, 820.392561806592);
      Number number0 = xYSeries0.getX(0);
      assertEquals(0.0, number0);
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Month month0 = new Month();
      XYSeries xYSeries0 = new XYSeries(month0, true);
      Float float0 = new Float((double) 44);
      xYSeries0.add(697.6886478642907, (Number) float0, false);
      xYSeries0.updateByIndex(0, float0);
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0, true, true);
      xYSeries0.add((Number) integer0, (Number) integer0);
      xYSeries0.remove((Number) integer0);
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Float float0 = new Float(Double.NaN);
      XYSeries xYSeries0 = new XYSeries(float0);
      xYSeries0.add(Double.NaN, (Number) float0, false);
      assertTrue(xYSeries0.getAutoSort());
      
      xYSeries0.remove((Number) float0);
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      xYSeries0.addOrUpdate((Number) integer0, (Number) integer0);
      xYSeries0.remove((Number) integer0);
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
      assertTrue(xYSeries0.getAutoSort());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0, false, false);
      xYSeries0.addOrUpdate(0.0, 0.0);
      XYDataItem xYDataItem0 = xYSeries0.remove(0);
      assertEquals(0.0, xYDataItem0.getXValue(), 0.01);
      assertFalse(xYSeries0.getAutoSort());
      assertEquals(0.0, xYDataItem0.getYValue(), 0.01);
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      xYSeries0.add((Number) integer0, (Number) integer0);
      xYSeries0.remove(0);
      assertTrue(xYSeries0.getAutoSort());
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      xYSeries0.addOrUpdate((Number) integer0, (Number) integer0);
      xYSeries0.remove(0);
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
      assertTrue(xYSeries0.getAutoSort());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0, true, true);
      xYSeries0.add((Number) integer0, (Number) integer0);
      xYSeries0.addOrUpdate((-2526.73), 1.0);
      int int0 = xYSeries0.indexOf(integer0);
      assertEquals(2, xYSeries0.getItemCount());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      xYSeries0.addOrUpdate((Number) integer0, (Number) null);
      Number number0 = xYSeries0.getY(0);
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
      assertNull(number0);
      assertTrue(xYSeries0.getAutoSort());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      SimpleTimePeriod simpleTimePeriod0 = new SimpleTimePeriod(1536L, 1536L);
      XYSeries xYSeries0 = new XYSeries(simpleTimePeriod0, true);
      xYSeries0.setMaximumItemCount(0);
      int int0 = xYSeries0.getMaximumItemCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      SimpleTimePeriod simpleTimePeriod0 = new SimpleTimePeriod(1536L, 1536L);
      XYSeries xYSeries0 = new XYSeries(simpleTimePeriod0, true);
      xYSeries0.getItemCount();
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
      assertTrue(xYSeries0.getAutoSort());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0, true, true);
      xYSeries0.addOrUpdate((Number) integer0, (Number) integer0);
      xYSeries0.getItemCount();
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
      assertTrue(xYSeries0.getAutoSort());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Minute minute0 = new Minute();
      XYSeries xYSeries0 = new XYSeries(minute0, false, false);
      xYSeries0.add((Number) 0, (Number) 0);
      xYSeries0.getDataItem(0);
      assertFalse(xYSeries0.getAutoSort());
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      xYSeries0.addOrUpdate((Number) integer0, (Number) integer0);
      xYSeries0.getDataItem(0);
      assertTrue(xYSeries0.getAutoSort());
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      xYSeries0.addOrUpdate((Number) integer0, (Number) integer0);
      assertEquals(1, xYSeries0.getItemCount());
      
      xYSeries0.getDataItem(0);
      assertTrue(xYSeries0.getAutoSort());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      SimpleTimePeriod simpleTimePeriod0 = new SimpleTimePeriod(1536L, 1536L);
      XYSeries xYSeries0 = new XYSeries(simpleTimePeriod0, false);
      boolean boolean0 = xYSeries0.getAutoSort();
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0, false, false);
      xYSeries0.getAllowDuplicateXValues();
      assertFalse(xYSeries0.getAutoSort());
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      xYSeries0.setNotify(false);
      XYSeries xYSeries1 = xYSeries0.createCopy(1156, 43);
      assertTrue(xYSeries1.getAutoSort());
      assertEquals(Integer.MAX_VALUE, xYSeries1.getMaximumItemCount());
      assertNotSame(xYSeries1, xYSeries0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      xYSeries0.setMaximumItemCount(0);
      xYSeries0.createCopy(0, 0);
      assertEquals(0, xYSeries0.getMaximumItemCount());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      MockDate mockDate0 = new MockDate(0L);
      XYSeries xYSeries0 = new XYSeries(mockDate0, false, false);
      XYSeries xYSeries1 = xYSeries0.createCopy(Integer.MAX_VALUE, Integer.MAX_VALUE);
      assertFalse(xYSeries1.getAutoSort());
      assertEquals(Integer.MAX_VALUE, xYSeries1.getMaximumItemCount());
      assertNotSame(xYSeries1, xYSeries0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      Minute minute0 = new Minute();
      XYSeries xYSeries0 = new XYSeries(minute0, false, false);
      xYSeries0.add((Number) 0, (Number) 0);
      xYSeries0.addOrUpdate((Number) 0, (Number) integer0);
      assertEquals(1, xYSeries0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0, false, false);
      xYSeries0.add(0.0, 0.0, false);
      xYSeries0.addOrUpdate(0.0, (-4312.067300477));
      assertEquals(1, xYSeries0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0, false, false);
      xYSeries0.add((double) 0, (Number) integer0);
      xYSeries0.addOrUpdate(0.0, 0.0);
      assertEquals(1, xYSeries0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0, false, false);
      xYSeries0.add(0.0, (-975.5), true);
      xYSeries0.addOrUpdate(0.0, 1.0);
      assertEquals(1, xYSeries0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      SimpleTimePeriod simpleTimePeriod0 = new SimpleTimePeriod(1536L, 1536L);
      XYSeries xYSeries0 = new XYSeries(simpleTimePeriod0, true, false);
      xYSeries0.add(858.148603589205, (-985.7190752223935), true);
      xYSeries0.addOrUpdate(858.148603589205, 3340.4606674);
      assertEquals(1, xYSeries0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0, false, false);
      xYSeries0.add((-0.5867250670904095), (-975.5), true);
      xYSeries0.addOrUpdate((-0.5867250670904095), (-975.5));
      assertEquals(1, xYSeries0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Week week0 = new Week();
      XYSeries xYSeries0 = new XYSeries(week0);
      xYSeries0.data = null;
      // Undeclared exception!
      try { 
        xYSeries0.updateByIndex(1, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.xy.XYSeries", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      SimpleTimePeriod simpleTimePeriod0 = new SimpleTimePeriod(1536L, 1536L);
      XYSeries xYSeries0 = new XYSeries(simpleTimePeriod0, true);
      Double double0 = new Double(Double.POSITIVE_INFINITY);
      // Undeclared exception!
      try { 
        xYSeries0.updateByIndex((-822), double0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      xYSeries0.data = null;
      // Undeclared exception!
      try { 
        xYSeries0.update(integer0, integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      // Undeclared exception!
      try { 
        xYSeries0.update((Number) null, (Number) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'x' argument.
         //
         verifyException("org.jfree.data.xy.XYDataItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      xYSeries0.data = null;
      // Undeclared exception!
      try { 
        xYSeries0.toArray();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.xy.XYSeries", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      java.util.Vector<LinkedList<RowSorterEvent.Type>> vector0 = new java.util.Vector<LinkedList<RowSorterEvent.Type>>();
      xYSeries0.data = (List) vector0;
      LinkedList<RowSorterEvent.Type> linkedList0 = new LinkedList<RowSorterEvent.Type>();
      vector0.add(linkedList0);
      // Undeclared exception!
      try { 
        xYSeries0.toArray();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.LinkedList cannot be cast to org.jfree.data.xy.XYDataItem
         //
         verifyException("org.jfree.data.xy.XYSeries", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      xYSeries0.data = null;
      // Undeclared exception!
      try { 
        xYSeries0.setMaximumItemCount(363);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.xy.XYSeries", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      Stack<XYDatasetTableModel> stack0 = new Stack<XYDatasetTableModel>();
      xYSeries0.data = (List) stack0;
      // Undeclared exception!
      try { 
        xYSeries0.setMaximumItemCount((-3448));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      xYSeries0.data = null;
      // Undeclared exception!
      try { 
        xYSeries0.remove((Number) integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      LinkedList<LinkedList<String>> linkedList0 = new LinkedList<LinkedList<String>>();
      xYSeries0.data = (List) linkedList0;
      // Undeclared exception!
      try { 
        xYSeries0.remove((Number) integer0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -1, Size: 0
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Month month0 = new Month();
      XYSeries xYSeries0 = new XYSeries(month0);
      // Undeclared exception!
      try { 
        xYSeries0.remove((Number) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'x' argument.
         //
         verifyException("org.jfree.data.xy.XYDataItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      java.util.Vector<RowSorterEvent.Type> vector0 = new java.util.Vector<RowSorterEvent.Type>(1325, 2309);
      JList<Object> jList0 = new JList<Object>(vector0);
      List<Object> list0 = jList0.getSelectedValuesList();
      xYSeries0.data = list0;
      // Undeclared exception!
      try { 
        xYSeries0.remove(1325);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractList", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      xYSeries0.data = null;
      // Undeclared exception!
      try { 
        xYSeries0.remove(1380);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.xy.XYSeries", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      SimpleTimePeriod simpleTimePeriod0 = new SimpleTimePeriod(1536L, 1536L);
      XYSeries xYSeries0 = new XYSeries(simpleTimePeriod0, true, true);
      // Undeclared exception!
      try { 
        xYSeries0.remove((-2372));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      SimpleTimePeriod simpleTimePeriod0 = new SimpleTimePeriod(1536L, 1536L);
      XYSeries xYSeries0 = new XYSeries(simpleTimePeriod0, true);
      // Undeclared exception!
      try { 
        xYSeries0.indexOf((Number) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'x' argument.
         //
         verifyException("org.jfree.data.xy.XYDataItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0, false, false);
      java.util.Vector<String> vector0 = new java.util.Vector<String>();
      xYSeries0.data = (List) vector0;
      vector0.add("mj4J8hc(WF\"<jB<PIuN");
      // Undeclared exception!
      try { 
        xYSeries0.indexOf(integer0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to org.jfree.data.xy.XYDataItem
         //
         verifyException("org.jfree.data.xy.XYSeries", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      xYSeries0.data = null;
      // Undeclared exception!
      try { 
        xYSeries0.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.xy.XYSeries", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0, false, false);
      java.util.Vector<String> vector0 = new java.util.Vector<String>();
      xYSeries0.data = (List) vector0;
      vector0.add("mj4J8hc(WF\"<jB<PIuN");
      // Undeclared exception!
      try { 
        xYSeries0.hashCode();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to org.jfree.data.xy.XYDataItem
         //
         verifyException("org.jfree.data.xy.XYSeries", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0, false, false);
      // Undeclared exception!
      try { 
        xYSeries0.getY(1792);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1792, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      java.util.Vector<Integer> vector0 = new java.util.Vector<Integer>(0, 0);
      vector0.add(integer0);
      xYSeries0.data = (List) vector0;
      // Undeclared exception!
      try { 
        xYSeries0.getY(0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to org.jfree.data.xy.XYDataItem
         //
         verifyException("org.jfree.data.xy.XYSeries", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      arrayList0.add(integer0);
      xYSeries0.data = (List) arrayList0;
      // Undeclared exception!
      try { 
        xYSeries0.getX(0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to org.jfree.data.xy.XYDataItem
         //
         verifyException("org.jfree.data.xy.XYSeries", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      SimpleTimePeriod simpleTimePeriod0 = new SimpleTimePeriod(1536L, 1536L);
      XYSeries xYSeries0 = new XYSeries(simpleTimePeriod0, true);
      // Undeclared exception!
      try { 
        xYSeries0.getX((-1194));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      xYSeries0.data = null;
      // Undeclared exception!
      try { 
        xYSeries0.getItems();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      xYSeries0.data = null;
      // Undeclared exception!
      try { 
        xYSeries0.getDataItem(1380);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.xy.XYSeries", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Week week0 = new Week((-2419), (-2419));
      XYSeries xYSeries0 = new XYSeries(week0, false);
      // Undeclared exception!
      try { 
        xYSeries0.getDataItem((-2419));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      xYSeries0.data = null;
      // Undeclared exception!
      try { 
        xYSeries0.delete((-2577), (-2577));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.xy.XYSeries", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      xYSeries0.data = null;
      // Undeclared exception!
      try { 
        xYSeries0.createCopy((-1280), (-1280));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.xy.XYSeries", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Float float0 = new Float(Double.NaN);
      XYSeries xYSeries0 = new XYSeries(float0);
      xYSeries0.add((-1.0), (Number) null, false);
      // Undeclared exception!
      try { 
        xYSeries0.createCopy(90, 90);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 90, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      arrayList0.add(integer0);
      xYSeries0.data = (List) arrayList0;
      // Undeclared exception!
      try { 
        xYSeries0.createCopy(0, 0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to org.jfree.data.xy.XYDataItem
         //
         verifyException("org.jfree.data.xy.XYSeries", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0, false, true);
      Object[] objectArray0 = new Object[4];
      JList<Object> jList0 = new JList<Object>(objectArray0);
      List<Object> list0 = jList0.getSelectedValuesList();
      xYSeries0.data = list0;
      try { 
        xYSeries0.clone();
        fail("Expecting exception: CloneNotSupportedException");
      
      } catch(CloneNotSupportedException e) {
         //
         // Failed to clone.
         //
         verifyException("org.jfree.chart.util.ObjectUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      xYSeries0.data = null;
      // Undeclared exception!
      try { 
        xYSeries0.clear();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.xy.XYSeries", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      java.util.Vector<RowSorterEvent.Type> vector0 = new java.util.Vector<RowSorterEvent.Type>(1325, 2309);
      JList<Object> jList0 = new JList<Object>(vector0);
      List<Object> list0 = jList0.getSelectedValuesList();
      xYSeries0.data = list0;
      // Undeclared exception!
      try { 
        xYSeries0.addOrUpdate((Number) integer0, (Number) integer0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractList", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      xYSeries0.data = null;
      // Undeclared exception!
      try { 
        xYSeries0.addOrUpdate((Number) integer0, (Number) integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      java.util.Vector<Integer> vector0 = new java.util.Vector<Integer>(0, 0);
      vector0.add(integer0);
      xYSeries0.data = (List) vector0;
      // Undeclared exception!
      try { 
        xYSeries0.addOrUpdate((Number) integer0, (Number) integer0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jfree.data.xy.XYDataItem cannot be cast to java.lang.Integer
         //
         verifyException("java.lang.Integer", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0, true, true);
      Stack<Integer> stack0 = new Stack<Integer>();
      xYSeries0.data = (List) stack0;
      xYSeries0.add((Number) integer0, (Number) integer0);
      // Undeclared exception!
      try { 
        xYSeries0.addOrUpdate((Number) integer0, (Number) integer0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XYSeries xYSeries0 = new XYSeries((byte)29);
      JList<Object> jList0 = new JList<Object>();
      List<Object> list0 = jList0.getSelectedValuesList();
      xYSeries0.data = list0;
      // Undeclared exception!
      try { 
        xYSeries0.addOrUpdate(1198.8, (double) (byte)29);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractList", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      xYSeries0.data = null;
      // Undeclared exception!
      try { 
        xYSeries0.addOrUpdate((-826.74537348), 1265.549);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0, true, true);
      xYSeries0.add((Number) integer0, (Number) integer0);
      // Undeclared exception!
      try { 
        xYSeries0.addOrUpdate(0.0, (-381.15070333));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -1, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      Stack<AWTKeyStroke> stack0 = new Stack<AWTKeyStroke>();
      xYSeries0.data = (List) stack0;
      AWTKeyStroke aWTKeyStroke0 = AWTKeyStroke.getAWTKeyStroke(1422, 1422, true);
      stack0.add(aWTKeyStroke0);
      // Undeclared exception!
      try { 
        xYSeries0.addOrUpdate((-1635.6229269908), 0.0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0, false, false);
      xYSeries0.add((Number) integer0, (Number) integer0);
      XYDataItem xYDataItem0 = xYSeries0.addOrUpdate((Number) integer0, (Number) integer0);
      // Undeclared exception!
      try { 
        xYSeries0.add(xYDataItem0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // X-value already exists.
         //
         verifyException("org.jfree.data.xy.XYSeries", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      xYSeries0.data = null;
      XYDataItem xYDataItem0 = new XYDataItem(1265.549, (-827.5847630360438));
      // Undeclared exception!
      try { 
        xYSeries0.add(xYDataItem0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      MockDate mockDate0 = new MockDate(0L);
      Year year0 = new Year(mockDate0);
      XYSeries xYSeries0 = new XYSeries(year0, false, false);
      // Undeclared exception!
      try { 
        xYSeries0.add((XYDataItem) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'item' argument.
         //
         verifyException("org.jfree.data.xy.XYSeries", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0, false, false);
      ArrayList<XYDatasetTableModel> arrayList0 = new ArrayList<XYDatasetTableModel>();
      xYSeries0.data = (List) arrayList0;
      XYDatasetTableModel xYDatasetTableModel0 = new XYDatasetTableModel();
      arrayList0.add(xYDatasetTableModel0);
      XYDataItem xYDataItem0 = new XYDataItem((-6347.94), (-6347.94));
      // Undeclared exception!
      try { 
        xYSeries0.add(xYDataItem0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jfree.data.xy.XYDatasetTableModel cannot be cast to org.jfree.data.xy.XYDataItem
         //
         verifyException("org.jfree.data.xy.XYSeries", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0, false, false);
      xYSeries0.add((Number) integer0, (Number) integer0, false);
      // Undeclared exception!
      try { 
        xYSeries0.add((Number) integer0, (Number) integer0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // X-value already exists.
         //
         verifyException("org.jfree.data.xy.XYSeries", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      Object[] objectArray0 = new Object[2];
      DefaultComboBoxModel<Object> defaultComboBoxModel0 = new DefaultComboBoxModel<Object>(objectArray0);
      JList<Object> jList0 = new JList<Object>(defaultComboBoxModel0);
      List<Object> list0 = jList0.getSelectedValuesList();
      xYSeries0.data = list0;
      // Undeclared exception!
      try { 
        xYSeries0.add((Number) integer0, (Number) integer0, false);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractList", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      xYSeries0.data = null;
      // Undeclared exception!
      try { 
        xYSeries0.add((Number) integer0, (Number) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      SimpleTimePeriod simpleTimePeriod0 = new SimpleTimePeriod(1536L, 1536L);
      XYSeries xYSeries0 = new XYSeries(simpleTimePeriod0, true);
      // Undeclared exception!
      try { 
        xYSeries0.add((Number) null, (Number) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'x' argument.
         //
         verifyException("org.jfree.data.xy.XYDataItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0, false, false);
      xYSeries0.add((Number) integer0, (Number) integer0, false);
      // Undeclared exception!
      try { 
        xYSeries0.add((Number) integer0, (Number) integer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // X-value already exists.
         //
         verifyException("org.jfree.data.xy.XYSeries", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      java.util.Vector<Object> vector0 = new java.util.Vector<Object>();
      DefaultComboBoxModel<Object> defaultComboBoxModel0 = new DefaultComboBoxModel<Object>(vector0);
      JList<Object> jList0 = new JList<Object>(defaultComboBoxModel0);
      List<Object> list0 = jList0.getSelectedValuesList();
      xYSeries0.data = list0;
      // Undeclared exception!
      try { 
        xYSeries0.add((Number) integer0, (Number) integer0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractList", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      xYSeries0.data = null;
      // Undeclared exception!
      try { 
        xYSeries0.add((Number) integer0, (Number) integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      SimpleTimePeriod simpleTimePeriod0 = new SimpleTimePeriod(1536L, 1536L);
      XYSeries xYSeries0 = new XYSeries(simpleTimePeriod0, false, false);
      // Undeclared exception!
      try { 
        xYSeries0.add((Number) null, (Number) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'x' argument.
         //
         verifyException("org.jfree.data.xy.XYDataItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      ArrayList<XYSeries> arrayList0 = new ArrayList<XYSeries>();
      xYSeries0.data = (List) arrayList0;
      arrayList0.add(xYSeries0);
      // Undeclared exception!
      try { 
        xYSeries0.add((Number) integer0, (Number) integer0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      xYSeries0.data = null;
      // Undeclared exception!
      try { 
        xYSeries0.add((-3044.0), (Number) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      LinkedList<AWTKeyStroke> linkedList0 = new LinkedList<AWTKeyStroke>();
      xYSeries0.data = (List) linkedList0;
      Character character0 = new Character('d');
      KeyStroke keyStroke0 = KeyStroke.getKeyStroke(character0, (-827));
      linkedList0.offerFirst(keyStroke0);
      // Undeclared exception!
      try { 
        xYSeries0.add((-781.9001919), (Number) integer0, false);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0, false, false);
      xYSeries0.add((double) 3732L, 2149.96017662458);
      // Undeclared exception!
      try { 
        xYSeries0.add((double) 3732L, (Number) integer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // X-value already exists.
         //
         verifyException("org.jfree.data.xy.XYSeries", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      xYSeries0.data = null;
      // Undeclared exception!
      try { 
        xYSeries0.add(0.0, (Number) integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0, false, false);
      xYSeries0.addOrUpdate(0.0, (-965.2947974243846));
      // Undeclared exception!
      try { 
        xYSeries0.add(0.0, (-381.15070333), false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // X-value already exists.
         //
         verifyException("org.jfree.data.xy.XYSeries", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      xYSeries0.data = null;
      // Undeclared exception!
      try { 
        xYSeries0.add((-3458.0), 1251.57, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      ArrayList<XYSeries> arrayList0 = new ArrayList<XYSeries>();
      xYSeries0.data = (List) arrayList0;
      arrayList0.add(xYSeries0);
      // Undeclared exception!
      try { 
        xYSeries0.add((-731.24258129801), (-731.24258129801), true);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      xYSeries0.data = null;
      // Undeclared exception!
      try { 
        xYSeries0.add((-1.0), 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XYSeries xYSeries0 = null;
      try {
        xYSeries0 = new XYSeries((Comparable) null, true, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'key' argument.
         //
         verifyException("org.jfree.data.general.Series", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XYSeries xYSeries0 = null;
      try {
        xYSeries0 = new XYSeries((Comparable) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'key' argument.
         //
         verifyException("org.jfree.data.general.Series", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XYSeries xYSeries0 = null;
      try {
        xYSeries0 = new XYSeries((Comparable) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'key' argument.
         //
         verifyException("org.jfree.data.general.Series", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0, false);
      xYSeries0.addOrUpdate(0.0, (double) (-9999));
      int int0 = xYSeries0.indexOf(9999);
      assertEquals(1, xYSeries0.getItemCount());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0, false, false);
      xYSeries0.add((Number) integer0, (Number) integer0);
      int int0 = xYSeries0.indexOf(integer0);
      assertFalse(xYSeries0.getAutoSort());
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      SimpleTimePeriod simpleTimePeriod0 = new SimpleTimePeriod(1536L, 1536L);
      XYSeries xYSeries0 = new XYSeries(simpleTimePeriod0, true);
      xYSeries0.setMaximumItemCount(0);
      Integer integer0 = new Integer(0);
      xYSeries0.addOrUpdate((Number) integer0, (Number) integer0);
      assertEquals(0, xYSeries0.getMaximumItemCount());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      SimpleTimePeriod simpleTimePeriod0 = new SimpleTimePeriod(1539L, 1539L);
      XYSeries xYSeries0 = new XYSeries(simpleTimePeriod0, false);
      Float float0 = new Float(0.0);
      xYSeries0.addOrUpdate((Number) float0, (Number) float0);
      assertEquals(1, xYSeries0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      SimpleTimePeriod simpleTimePeriod0 = new SimpleTimePeriod(1536L, 1536L);
      XYDataItem xYDataItem0 = new XYDataItem((-2590.973), (-298.81));
      XYSeries xYSeries0 = new XYSeries(simpleTimePeriod0, false, false);
      xYSeries0.add(xYDataItem0, false);
      // Undeclared exception!
      try { 
        xYSeries0.add(xYDataItem0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // X-value already exists.
         //
         verifyException("org.jfree.data.xy.XYSeries", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0, true, true);
      BigInteger bigInteger0 = BigInteger.ONE;
      xYSeries0.add((Number) integer1, (Number) bigInteger0);
      XYDataItem xYDataItem0 = new XYDataItem((Number) integer1, (Number) integer0);
      xYSeries0.add((Number) integer0, (Number) integer0);
      xYSeries0.add(xYDataItem0, true);
      assertEquals(3, xYSeries0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      XYDataItem xYDataItem0 = new XYDataItem(0.0, 0.0);
      XYSeries xYSeries0 = new XYSeries(integer0, false, true);
      xYSeries0.add(xYDataItem0, true);
      assertFalse(xYSeries0.getAutoSort());
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      XYDataItem xYDataItem0 = new XYDataItem(1265.549, (-827.5847630360438));
      xYSeries0.add(xYDataItem0);
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
      assertTrue(xYSeries0.getAutoSort());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      // Undeclared exception!
      try { 
        xYSeries0.getX(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      SpreadsheetDate spreadsheetDate0 = new SpreadsheetDate(407);
      XYSeries xYSeries0 = new XYSeries(spreadsheetDate0);
      // Undeclared exception!
      try { 
        xYSeries0.getY((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      // Undeclared exception!
      try { 
        xYSeries0.getDataItem(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      // Undeclared exception!
      try { 
        xYSeries0.remove(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0, false, false);
      xYSeries0.hashCode();
      assertFalse(xYSeries0.getAutoSort());
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      SimpleTimePeriod simpleTimePeriod0 = new SimpleTimePeriod(1536L, 1536L);
      XYSeries xYSeries0 = new XYSeries(simpleTimePeriod0, true, false);
      Byte byte0 = new Byte((byte) (-86));
      xYSeries0.add((Number) byte0, (Number) byte0);
      xYSeries0.addOrUpdate((-985.7190752223935), (double) (byte) (-86));
      xYSeries0.hashCode();
      assertEquals(2, xYSeries0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      XYSeries xYSeries1 = new XYSeries(integer0, true, true);
      assertTrue(xYSeries1.equals((Object)xYSeries0));
      
      xYSeries1.add((Number) integer0, (Number) integer0, true);
      boolean boolean0 = xYSeries1.equals(xYSeries0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      SimpleTimePeriod simpleTimePeriod0 = new SimpleTimePeriod(1536L, 1536L);
      XYSeries xYSeries0 = new XYSeries(simpleTimePeriod0, true);
      XYSeries xYSeries1 = xYSeries0.createCopy((-1153), (-1153));
      boolean boolean0 = xYSeries1.equals(xYSeries0);
      assertEquals(Integer.MAX_VALUE, xYSeries1.getMaximumItemCount());
      assertTrue(xYSeries1.getAutoSort());
      assertNotSame(xYSeries1, xYSeries0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0, true, true);
      XYSeries xYSeries1 = new XYSeries(integer0, false);
      boolean boolean0 = xYSeries0.equals(xYSeries1);
      assertFalse(xYSeries1.getAutoSort());
      assertFalse(boolean0);
      assertEquals(Integer.MAX_VALUE, xYSeries1.getMaximumItemCount());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0, true);
      XYSeries xYSeries1 = xYSeries0.createCopy((-1153), 1);
      xYSeries0.setMaximumItemCount(0);
      boolean boolean0 = xYSeries0.equals(xYSeries1);
      assertEquals(0, xYSeries0.getMaximumItemCount());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      Integer integer1 = new Integer(0);
      XYSeries xYSeries1 = new XYSeries(integer1, false, true);
      XYSeries xYSeries2 = xYSeries0.createCopy(0, 0);
      boolean boolean0 = xYSeries1.equals(xYSeries2);
      assertFalse(xYSeries1.getAutoSort());
      assertFalse(boolean0);
      assertEquals(Integer.MAX_VALUE, xYSeries2.getMaximumItemCount());
      assertNotSame(xYSeries2, xYSeries0);
      assertTrue(xYSeries2.equals((Object)xYSeries0));
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      XYSeries xYSeries1 = new XYSeries(integer0, true, false);
      boolean boolean0 = xYSeries0.equals(xYSeries1);
      assertFalse(boolean0);
      assertEquals(Integer.MAX_VALUE, xYSeries1.getMaximumItemCount());
      assertTrue(xYSeries1.getAutoSort());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0, true, true);
      boolean boolean0 = xYSeries0.equals(xYSeries0);
      assertTrue(xYSeries0.getAutoSort());
      assertTrue(boolean0);
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0, true, true);
      boolean boolean0 = xYSeries0.equals(integer0);
      assertFalse(boolean0);
      assertTrue(xYSeries0.getAutoSort());
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      xYSeries0.add((-910.97), (Number) null, false);
      double[][] doubleArray0 = xYSeries0.toArray();
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
      assertEquals(2, doubleArray0.length);
      assertTrue(xYSeries0.getAutoSort());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0, true, true);
      BigInteger bigInteger0 = BigInteger.valueOf((-630L));
      xYSeries0.addOrUpdate((Number) bigInteger0, (Number) integer0);
      // Undeclared exception!
      try { 
        xYSeries0.addOrUpdate((Number) bigInteger0, (Number) integer0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -1, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      SimpleTimePeriod simpleTimePeriod0 = new SimpleTimePeriod(1536L, 1536L);
      XYSeries xYSeries0 = new XYSeries(simpleTimePeriod0, true, false);
      Byte byte0 = new Byte((byte) (-86));
      xYSeries0.add((Number) byte0, (Number) byte0);
      assertFalse(xYSeries0.getAllowDuplicateXValues());
      
      xYSeries0.addOrUpdate((Number) byte0, (Number) byte0);
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
      assertTrue(xYSeries0.getAutoSort());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0, false, true);
      BigInteger bigInteger0 = BigInteger.valueOf((-1247L));
      // Undeclared exception!
      try { 
        xYSeries0.addOrUpdate((Number) null, (Number) bigInteger0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'x' argument.
         //
         verifyException("org.jfree.data.xy.XYSeries", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      MockDate mockDate0 = new MockDate(0L);
      Year year0 = new Year(mockDate0);
      XYSeries xYSeries0 = new XYSeries(year0, false, false);
      // Undeclared exception!
      try { 
        xYSeries0.update((-9999), 9999);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No observation for x = -9999
         //
         verifyException("org.jfree.data.xy.XYSeries", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0, true, true);
      xYSeries0.add((Number) integer0, (Number) integer0);
      assertEquals(1, xYSeries0.getItemCount());
      
      xYSeries0.update(integer0, integer0);
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      xYSeries0.add((Number) integer0, (Number) integer0);
      assertEquals(1, xYSeries0.getItemCount());
      
      xYSeries0.clear();
      assertTrue(xYSeries0.getAutoSort());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      xYSeries0.clear();
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
      assertTrue(xYSeries0.getAutoSort());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      // Undeclared exception!
      try { 
        xYSeries0.delete((-2577), (-2577));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Month month0 = new Month();
      XYSeries xYSeries0 = new XYSeries(month0, true);
      xYSeries0.delete(44, 0);
      assertTrue(xYSeries0.getAutoSort());
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
      
      xYSeries0.setMaximumItemCount(0);
      XYDataItem xYDataItem0 = new XYDataItem(0.0, (double) 0);
      xYSeries0.add(xYDataItem0, true);
      assertTrue(xYSeries0.getAutoSort());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0, false, false);
      xYSeries0.addOrUpdate(0.0, 1.0);
      // Undeclared exception!
      try { 
        xYSeries0.add(0.0, (Number) integer0, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // X-value already exists.
         //
         verifyException("org.jfree.data.xy.XYSeries", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      XYDataItem xYDataItem0 = new XYDataItem(1200.7, 0.8);
      XYSeries xYSeries0 = new XYSeries(integer0, true, false);
      xYSeries0.add(xYDataItem0, false);
      // Undeclared exception!
      try { 
        xYSeries0.add(xYDataItem0, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // X-value already exists.
         //
         verifyException("org.jfree.data.xy.XYSeries", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      xYSeries0.add(Double.NaN, (Number) integer0, false);
      xYSeries0.add(0.0, (Number) integer0, true);
      xYSeries0.add(2.0, Double.NaN, false);
      assertEquals(3, xYSeries0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      // Undeclared exception!
      try { 
        xYSeries0.add((XYDataItem) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'item' argument.
         //
         verifyException("org.jfree.data.xy.XYSeries", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      SimpleTimePeriod simpleTimePeriod0 = new SimpleTimePeriod(1527L, 1527L);
      XYSeries xYSeries0 = new XYSeries(simpleTimePeriod0, true);
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      xYSeries0.add((Number) integer0, (Number) integer0, false);
      assertEquals(1, xYSeries0.getItemCount());
      
      xYSeries0.setMaximumItemCount(0);
      assertEquals(0, xYSeries0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      // Undeclared exception!
      try { 
        xYSeries0.setMaximumItemCount((-3448));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      xYSeries0.setMaximumItemCount(1);
      xYSeries0.addOrUpdate((double) 1, (double) 0);
      assertEquals(1, xYSeries0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      SimpleTimePeriod simpleTimePeriod0 = new SimpleTimePeriod(1536L, 1536L);
      XYSeries xYSeries0 = new XYSeries(simpleTimePeriod0, true);
      boolean boolean0 = xYSeries0.getAutoSort();
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
      assertTrue(boolean0);
      assertTrue(xYSeries0.getAllowDuplicateXValues());
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0, true, true);
      boolean boolean0 = xYSeries0.getAllowDuplicateXValues();
      assertTrue(xYSeries0.getAutoSort());
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      // Undeclared exception!
      try { 
        xYSeries0.remove((Number) integer0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      xYSeries0.addOrUpdate((Number) integer0, (Number) integer0);
      xYSeries0.createCopy(0, 0);
      assertEquals(1, xYSeries0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Week week0 = new Week();
      XYSeries xYSeries0 = new XYSeries(week0);
      // Undeclared exception!
      try { 
        xYSeries0.updateByIndex(1, 1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      xYSeries0.getItems();
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
      assertTrue(xYSeries0.getAllowDuplicateXValues());
      assertTrue(xYSeries0.getAutoSort());
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0);
      xYSeries0.add(Double.NaN, (Number) integer0, false);
      xYSeries0.toArray();
      assertEquals(1, xYSeries0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0, true, true);
      int int0 = xYSeries0.getMaximumItemCount();
      assertTrue(xYSeries0.getAllowDuplicateXValues());
      assertTrue(xYSeries0.getAutoSort());
      assertEquals(Integer.MAX_VALUE, int0);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0, false, true);
      XYSeries xYSeries1 = (XYSeries)xYSeries0.clone();
      assertFalse(xYSeries1.getAutoSort());
      assertEquals(Integer.MAX_VALUE, xYSeries1.getMaximumItemCount());
      assertTrue(xYSeries1.getAllowDuplicateXValues());
      assertNotSame(xYSeries1, xYSeries0);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0, false, false);
      xYSeries0.add(0.0, 31.736805124);
      // Undeclared exception!
      try { 
        xYSeries0.add(0.0, 0.0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // X-value already exists.
         //
         verifyException("org.jfree.data.xy.XYSeries", e);
      }
  }
}
