* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-50
* Going to generate test cases for class: org.mockito.internal.util.reflection.GenericMetadataSupport
* Starting Client-0
* Connecting to master process on port 16053
* Analyzing classpath: 
  - subjects/buggy-versions/Mockito-7/build/classes/main
  - defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar
  - defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar
  - defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar
  - defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar
  - defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
* Finished analyzing classpath
* Generating tests for class org.mockito.internal.util.reflection.GenericMetadataSupport
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 629
* Using seed 2463136142
* Starting evolution
bbc usage percentage is: 50%
* Initial Number of Goals in DynaMOSA = 270 / 629
[MASTER] 07:44:10.055 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.reflect.TypeVariable<D> : Type points to itself
[MASTER] 07:44:10.854 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVarBoundedType due to org.evosuite.ga.ConstructionFailedException: Invalid generic instance
[MASTER] 07:44:11.001 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Have no generator for class java.lang.reflect.Method canUseFunctionalMocks=true, canBeMocked: false
[MASTER] 07:44:11.038 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Have no generator for class org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVarBoundedType canUseFunctionalMocks=false, canBeMocked: true
[MASTER] 07:44:11.170 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Have no generator for class org.mockito.internal.util.reflection.GenericMetadataSupport canUseFunctionalMocks=false, canBeMocked: false
[MASTER] 07:44:11.312 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Invalid generic instance
[MASTER] 07:44:14.179 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Have no generator for class org.mockito.internal.util.reflection.GenericMetadataSupport$WildCardBoundedType canUseFunctionalMocks=false, canBeMocked: true
[MASTER] 07:44:55.158 [logback-1] WARN  ExecutionTrace - Popping method toString()Ljava/lang/String; because we were looking for firstBound()Ljava/lang/reflect/Type;
[MASTER] 07:44:55.159 [logback-1] WARN  ExecutionTrace - Current stack: [org.mockito.internal.util.reflection.GenericMetadataSupport$WildCardBoundedType:toString()Ljava/lang/String;
Branches: 
True Distances: 
False Distances: 
, org.mockito.internal.util.reflection.GenericMetadataSupport:inferFrom(Ljava/lang/reflect/Type;)Lorg/mockito/internal/util/reflection/GenericMetadataSupport;
Branches:  16 17
True Distances:  0.0 0.0
False Distances:  1.0 1.0
, :
Branches: 
True Distances: 
False Distances: 
]
[MASTER] 07:44:55.160 [logback-1] WARN  ExecutionTrace - Popping method inferFrom(Ljava/lang/reflect/Type;)Lorg/mockito/internal/util/reflection/GenericMetadataSupport; because we were looking for firstBound()Ljava/lang/reflect/Type;
[MASTER] 07:44:55.160 [logback-1] WARN  ExecutionTrace - Current stack: [org.mockito.internal.util.reflection.GenericMetadataSupport:inferFrom(Ljava/lang/reflect/Type;)Lorg/mockito/internal/util/reflection/GenericMetadataSupport;
Branches:  16 17
True Distances:  0.0 0.0
False Distances:  1.0 1.0
, :
Branches: 
True Distances: 
False Distances: 
]
* Search finished after 602s and 506 generations, 45618 statements, best individual has fitness: 509.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 16%
* Total number of goals: 173
* Number of covered goals: 28
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 23%
* Total number of goals: 110
* Number of covered goals: 25
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 32%
* Total number of goals: 139
* Number of covered goals: 45
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 0%
* Total number of goals: 39
* Number of covered goals: 0
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 38%
* Total number of goals: 29
* Number of covered goals: 11
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 28%
* Total number of goals: 29
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 23%
* Total number of goals: 110
* Number of covered goals: 25
* Generated 19 tests with total length 69
* Resulting test suite's coverage: 18% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 12%
* Compiling and checking tests
[MASTER] 07:54:35.894 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:54:36.195 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:54:36.393 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:54:36.716 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:54:37.228 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:54:37.399 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:54:37.607 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:54:37.627 [logback-2] ERROR JUnitAnalyzer - Issue in scaffolding of the test suite: The thread was not executing unsafe code
Stack trace:
org.evosuite.runtime.sandbox.MSecurityManager.doneWithExecutingUnsafeCodeOnSameThread(MSecurityManager.java:287)
org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingUnsafeCodeOnSameThread(Sandbox.java:164)
org.evosuite.runtime.classhandling.ClassStateSupport.loadClasses(ClassStateSupport.java:171)
org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ClassStateSupport.java:65)
org.mockito.internal.util.reflection.GenericMetadataSupport_25_tmp__ESTest_scaffolding.initializeClasses(GenericMetadataSupport_25_tmp__ESTest_scaffolding.java:68)
org.mockito.internal.util.reflection.GenericMetadataSupport_25_tmp__ESTest_scaffolding.initEvoSuiteFramework(GenericMetadataSupport_25_tmp__ESTest_scaffolding.java:36)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:498)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
org.junit.internal.runners.statements.RunBefores.invokeMethod(RunBefores.java:33)
org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)
org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
org.junit.runners.ParentRunner.run(ParentRunner.java:413)
org.junit.runners.Suite.runChild(Suite.java:128)
org.junit.runners.Suite.runChild(Suite.java:27)
org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
org.junit.runners.ParentRunner.run(ParentRunner.java:413)
org.junit.runner.JUnitCore.run(JUnitCore.java:137)
org.junit.runner.JUnitCore.run(JUnitCore.java:115)
org.junit.runner.JUnitCore.run(JUnitCore.java:105)
org.junit.runner.JUnitCore.run(JUnitCore.java:94)
org.evosuite.junit.JUnitAnalyzer.runJUnitOnCurrentProcess(JUnitAnalyzer.java:306)
org.evosuite.junit.JUnitAnalyzer.runTests(JUnitAnalyzer.java:276)
org.evosuite.junit.JUnitAnalyzer.handleTestsThatAreUnstable(JUnitAnalyzer.java:178)
org.evosuite.TestSuiteGenerator.compileAndCheckTests(TestSuiteGenerator.java:571)
org.evosuite.TestSuiteGenerator.postProcessTests(TestSuiteGenerator.java:516)
org.evosuite.TestSuiteGenerator.generateTestSuite(TestSuiteGenerator.java:215)
org.evosuite.rmi.service.ClientNodeImpl.lambda$startNewSearch$0(ClientNodeImpl.java:150)
java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
java.lang.Thread.run(Thread.java:748)

[MASTER] 07:54:37.827 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:54:38.014 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:54:38.198 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:54:38.432 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:54:38.667 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:54:38.758 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:54:38.867 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:54:39.047 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:54:39.223 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:54:39.406 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:54:39.720 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:54:39.893 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:54:40.498 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:54:41.044 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing tests to file
* Writing JUnit test case 'GenericMetadataSupport_ESTest' to results/Mockito-7/org.mockito.internal.util.reflection.GenericMetadataSupport/BBC-F0-50/tests/18
* Done!

* Computation finished
