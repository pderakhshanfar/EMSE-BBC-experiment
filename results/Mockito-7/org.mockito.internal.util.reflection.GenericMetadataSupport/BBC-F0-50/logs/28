* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-50
* Going to generate test cases for class: org.mockito.internal.util.reflection.GenericMetadataSupport
* Starting Client-0
* Connecting to master process on port 15652
* Analyzing classpath: 
  - subjects/buggy-versions/Mockito-7/build/classes/main
  - defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar
  - defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar
  - defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar
  - defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar
  - defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
* Finished analyzing classpath
* Generating tests for class org.mockito.internal.util.reflection.GenericMetadataSupport
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 629
* Using seed 4083985569
* Starting evolution
bbc usage percentage is: 50%
* Initial Number of Goals in DynaMOSA = 270 / 629
[MASTER] 07:45:40.465 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.reflect.TypeVariable<D> : Type points to itself
[MASTER] 07:45:41.575 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Invalid generic instance
[MASTER] 07:45:41.592 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVarBoundedType due to org.evosuite.ga.ConstructionFailedException: Invalid generic instance
[MASTER] 07:45:41.624 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Have no generator for class org.mockito.internal.util.reflection.GenericMetadataSupport canUseFunctionalMocks=false, canBeMocked: false
[MASTER] 07:45:41.683 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Have no generator for class org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVarBoundedType canUseFunctionalMocks=false, canBeMocked: true
[MASTER] 07:45:41.699 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Have no generator for class java.lang.reflect.Method canUseFunctionalMocks=true, canBeMocked: false
[MASTER] 07:46:52.875 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Have no generator for class org.mockito.internal.util.reflection.GenericMetadataSupport$WildCardBoundedType canUseFunctionalMocks=false, canBeMocked: true
* Search finished after 601s and 2498 generations, 228424 statements, best individual has fitness: 509.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 16%
* Total number of goals: 173
* Number of covered goals: 28
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 23%
* Total number of goals: 110
* Number of covered goals: 25
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 29%
* Total number of goals: 139
* Number of covered goals: 40
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 0%
* Total number of goals: 39
* Number of covered goals: 0
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 38%
* Total number of goals: 29
* Number of covered goals: 11
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 34%
* Total number of goals: 29
* Number of covered goals: 10
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 23%
* Total number of goals: 110
* Number of covered goals: 25
* Generated 18 tests with total length 64
* Resulting test suite's coverage: 18% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 19%
* Compiling and checking tests
[MASTER] 07:55:48.676 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:55:48.911 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:55:49.183 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:55:49.362 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:55:49.620 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:55:49.800 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:55:49.913 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:55:50.105 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:55:50.336 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:55:50.459 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:55:50.798 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:55:50.932 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:55:51.018 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:55:51.159 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:55:51.332 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:55:51.517 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:55:51.665 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:55:51.813 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:55:52.472 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing tests to file
[MASTER] 07:55:53.016 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing JUnit test case 'GenericMetadataSupport_ESTest' to results/Mockito-7/org.mockito.internal.util.reflection.GenericMetadataSupport/BBC-F0-50/tests/28
* Done!

* Computation finished
