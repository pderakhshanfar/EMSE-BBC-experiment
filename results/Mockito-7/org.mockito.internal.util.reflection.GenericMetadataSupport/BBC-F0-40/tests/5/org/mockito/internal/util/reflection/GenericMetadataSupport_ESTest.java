/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 06 14:41:30 GMT 2021
 */

package org.mockito.internal.util.reflection;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Method;
import java.lang.reflect.Type;
import java.lang.reflect.TypeVariable;
import java.lang.reflect.WildcardType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.mockito.internal.util.reflection.GenericMetadataSupport;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class GenericMetadataSupport_ESTest extends GenericMetadataSupport_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Type[] typeArray0 = new Type[4];
      TypeVariable<Method> typeVariable0 = (TypeVariable<Method>) mock(TypeVariable.class, new ViolatedAssumptionAnswer());
      doReturn("~wmln.`l_7<", "org.mockito.internal.util.reflection.GenericMetadataSupport$ParameterizedReturnType", "~wmln.`l_7<", "\"T,R!QBD|l#/;", "$jxQu|9D2`)8").when(typeVariable0).toString();
      doReturn((Object) typeArray0, (Object) typeArray0, (Object) null).when(typeVariable0).getBounds();
      GenericMetadataSupport.TypeVarBoundedType genericMetadataSupport_TypeVarBoundedType0 = new GenericMetadataSupport.TypeVarBoundedType(typeVariable0);
      TypeVariable typeVariable1 = genericMetadataSupport_TypeVarBoundedType0.typeVariable();
      typeArray0[0] = (Type) typeVariable1;
      Type type0 = genericMetadataSupport_TypeVarBoundedType0.firstBound();
      typeArray0[1] = type0;
      Type type1 = genericMetadataSupport_TypeVarBoundedType0.firstBound();
      typeArray0[2] = (Type) genericMetadataSupport_TypeVarBoundedType0;
      Type[] typeArray1 = new Type[3];
      typeArray1[0] = type1;
      typeArray1[1] = type0;
      typeArray1[2] = type1;
      WildcardType wildcardType0 = mock(WildcardType.class, new ViolatedAssumptionAnswer());
      doReturn((Object) typeArray0, (Object) typeArray1, (Object) typeArray0, (Object) typeArray1).when(wildcardType0).getLowerBounds();
      doReturn((Object) typeArray0, (Object) typeArray0, (Object) typeArray1, (Object) typeArray0).when(wildcardType0).getUpperBounds();
      GenericMetadataSupport.WildCardBoundedType genericMetadataSupport_WildCardBoundedType0 = new GenericMetadataSupport.WildCardBoundedType(wildcardType0);
      typeArray0[3] = (Type) genericMetadataSupport_WildCardBoundedType0;
      genericMetadataSupport_WildCardBoundedType0.firstBound();
      Type[] typeArray2 = new Type[8];
      typeArray2[0] = (Type) typeVariable1;
      typeArray0[0] = (Type) typeVariable0;
      typeArray2[2] = (Type) typeVariable0;
      genericMetadataSupport_WildCardBoundedType0.toString();
      typeArray2[3] = type1;
      typeArray2[4] = (Type) typeVariable1;
      typeArray2[5] = (Type) genericMetadataSupport_WildCardBoundedType0;
      genericMetadataSupport_WildCardBoundedType0.toString();
      typeArray2[6] = type1;
      genericMetadataSupport_WildCardBoundedType0.toString();
      // Undeclared exception!
      try { 
        GenericMetadataSupport.inferFrom(typeArray0[2]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVarBoundedType", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Type[] typeArray0 = new Type[4];
      TypeVariable<Method> typeVariable0 = (TypeVariable<Method>) mock(TypeVariable.class, new ViolatedAssumptionAnswer());
      doReturn("~wmln.`l_7<", "~3?}2$zSuqa;RiDT*", "~3?}2$zSuqa;RiDT*", "", (String) null).when(typeVariable0).toString();
      doReturn((Object) typeArray0, (Object) typeArray0, (Object) null, (Object) null).when(typeVariable0).getBounds();
      GenericMetadataSupport.TypeVarBoundedType genericMetadataSupport_TypeVarBoundedType0 = new GenericMetadataSupport.TypeVarBoundedType(typeVariable0);
      TypeVariable typeVariable1 = genericMetadataSupport_TypeVarBoundedType0.typeVariable();
      typeArray0[0] = (Type) typeVariable1;
      Type type0 = genericMetadataSupport_TypeVarBoundedType0.firstBound();
      typeArray0[1] = type0;
      Type type1 = genericMetadataSupport_TypeVarBoundedType0.firstBound();
      typeArray0[2] = type1;
      Type[] typeArray1 = new Type[0];
      WildcardType wildcardType0 = mock(WildcardType.class, new ViolatedAssumptionAnswer());
      doReturn(typeArray0).when(wildcardType0).getLowerBounds();
      doReturn(typeArray0).when(wildcardType0).getUpperBounds();
      GenericMetadataSupport.WildCardBoundedType genericMetadataSupport_WildCardBoundedType0 = new GenericMetadataSupport.WildCardBoundedType(wildcardType0);
      typeArray0[3] = (Type) genericMetadataSupport_WildCardBoundedType0;
      Type[] typeArray2 = new Type[3];
      typeArray2[0] = (Type) genericMetadataSupport_TypeVarBoundedType0;
      typeArray2[1] = (Type) typeVariable1;
      typeArray2[2] = type0;
      TypeVariable<Method> typeVariable2 = (TypeVariable<Method>) mock(TypeVariable.class, new ViolatedAssumptionAnswer());
      doReturn((Object) typeArray0, (Object) typeArray0, (Object) typeArray0, (Object) typeArray0, (Object) typeArray2).when(typeVariable2).getBounds();
      GenericMetadataSupport.TypeVarBoundedType genericMetadataSupport_TypeVarBoundedType1 = new GenericMetadataSupport.TypeVarBoundedType(typeVariable2);
      genericMetadataSupport_TypeVarBoundedType1.toString();
      // Undeclared exception!
      try { 
        GenericMetadataSupport.inferFrom(genericMetadataSupport_TypeVarBoundedType1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVarBoundedType", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Type[] typeArray0 = new Type[3];
      TypeVariable<Method> typeVariable0 = (TypeVariable<Method>) mock(TypeVariable.class, new ViolatedAssumptionAnswer());
      doReturn((Type[]) null).when(typeVariable0).getBounds();
      GenericMetadataSupport.TypeVarBoundedType genericMetadataSupport_TypeVarBoundedType0 = new GenericMetadataSupport.TypeVarBoundedType(typeVariable0);
      TypeVariable<Method> typeVariable1 = (TypeVariable<Method>) mock(TypeVariable.class, new ViolatedAssumptionAnswer());
      genericMetadataSupport_TypeVarBoundedType0.equals(genericMetadataSupport_TypeVarBoundedType0);
      // Undeclared exception!
      try { 
        genericMetadataSupport_TypeVarBoundedType0.firstBound();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVarBoundedType", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TypeVariable<Method> typeVariable0 = (TypeVariable<Method>) mock(TypeVariable.class, new ViolatedAssumptionAnswer());
      doReturn((Type[]) null).when(typeVariable0).getBounds();
      GenericMetadataSupport.TypeVarBoundedType genericMetadataSupport_TypeVarBoundedType0 = new GenericMetadataSupport.TypeVarBoundedType(typeVariable0);
      genericMetadataSupport_TypeVarBoundedType0.equals((Object) null);
      WildcardType wildcardType0 = mock(WildcardType.class, new ViolatedAssumptionAnswer());
      GenericMetadataSupport.WildCardBoundedType genericMetadataSupport_WildCardBoundedType0 = new GenericMetadataSupport.WildCardBoundedType(wildcardType0);
      genericMetadataSupport_WildCardBoundedType0.equals(genericMetadataSupport_TypeVarBoundedType0);
      // Undeclared exception!
      try { 
        GenericMetadataSupport.inferFrom(genericMetadataSupport_TypeVarBoundedType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVarBoundedType", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Type[] typeArray0 = new Type[8];
      WildcardType wildcardType0 = mock(WildcardType.class, new ViolatedAssumptionAnswer());
      doReturn((Type[]) null).when(wildcardType0).getLowerBounds();
      doReturn((Type[]) null).when(wildcardType0).getUpperBounds();
      GenericMetadataSupport.WildCardBoundedType genericMetadataSupport_WildCardBoundedType0 = new GenericMetadataSupport.WildCardBoundedType(wildcardType0);
      Object object0 = new Object();
      Object object1 = new Object();
      genericMetadataSupport_WildCardBoundedType0.equals(genericMetadataSupport_WildCardBoundedType0);
      // Undeclared exception!
      try { 
        genericMetadataSupport_WildCardBoundedType0.getTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.util.reflection.GenericMetadataSupport$WildCardBoundedType", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Type[] typeArray0 = new Type[4];
      TypeVariable<Method> typeVariable0 = (TypeVariable<Method>) mock(TypeVariable.class, new ViolatedAssumptionAnswer());
      doReturn("~wmln.`l_7<", "org.mockito.internal.util.reflection.GenericMetadataSupport$ParameterizedReturnType", "~wmln.`l_7<", "\"T,R!QBD|l#/;", "$jxQu|9D2`)8").when(typeVariable0).toString();
      doReturn((Object) typeArray0, (Object) typeArray0).when(typeVariable0).getBounds();
      GenericMetadataSupport.TypeVarBoundedType genericMetadataSupport_TypeVarBoundedType0 = new GenericMetadataSupport.TypeVarBoundedType(typeVariable0);
      TypeVariable typeVariable1 = genericMetadataSupport_TypeVarBoundedType0.typeVariable();
      typeArray0[0] = (Type) typeVariable1;
      Type type0 = genericMetadataSupport_TypeVarBoundedType0.firstBound();
      typeArray0[1] = type0;
      Type type1 = genericMetadataSupport_TypeVarBoundedType0.firstBound();
      typeArray0[2] = type1;
      Type[] typeArray1 = new Type[3];
      typeArray1[0] = type1;
      typeArray1[1] = type0;
      typeArray1[2] = type1;
      WildcardType wildcardType0 = mock(WildcardType.class, new ViolatedAssumptionAnswer());
      doReturn((Object) typeArray0, (Object) typeArray1, (Object) null).when(wildcardType0).getLowerBounds();
      doReturn((Object) typeArray0, (Object) typeArray0, (Object) null).when(wildcardType0).getUpperBounds();
      GenericMetadataSupport.WildCardBoundedType genericMetadataSupport_WildCardBoundedType0 = new GenericMetadataSupport.WildCardBoundedType(wildcardType0);
      typeArray0[3] = (Type) genericMetadataSupport_WildCardBoundedType0;
      genericMetadataSupport_WildCardBoundedType0.firstBound();
      Type[] typeArray2 = new Type[8];
      typeArray2[0] = (Type) typeVariable1;
      typeArray2[1] = (Type) typeVariable0;
      typeArray2[2] = (Type) typeVariable0;
      typeArray2[3] = type1;
      typeArray2[4] = (Type) typeVariable1;
      typeArray2[5] = (Type) genericMetadataSupport_WildCardBoundedType0;
      genericMetadataSupport_WildCardBoundedType0.toString();
      typeArray2[6] = type1;
      // Undeclared exception!
      try { 
        genericMetadataSupport_WildCardBoundedType0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.util.reflection.GenericMetadataSupport$WildCardBoundedType", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Type[] typeArray0 = new Type[3];
      TypeVariable<Method> typeVariable0 = (TypeVariable<Method>) mock(TypeVariable.class, new ViolatedAssumptionAnswer());
      doReturn((Type[]) null).when(typeVariable0).getBounds();
      GenericMetadataSupport.TypeVarBoundedType genericMetadataSupport_TypeVarBoundedType0 = new GenericMetadataSupport.TypeVarBoundedType(typeVariable0);
      TypeVariable<Method> typeVariable1 = (TypeVariable<Method>) mock(TypeVariable.class, new ViolatedAssumptionAnswer());
      GenericMetadataSupport.TypeVarBoundedType genericMetadataSupport_TypeVarBoundedType1 = new GenericMetadataSupport.TypeVarBoundedType(typeVariable1);
      genericMetadataSupport_TypeVarBoundedType0.equals(genericMetadataSupport_TypeVarBoundedType1);
      // Undeclared exception!
      try { 
        genericMetadataSupport_TypeVarBoundedType0.firstBound();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVarBoundedType", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Type[] typeArray0 = new Type[0];
      WildcardType wildcardType0 = mock(WildcardType.class, new ViolatedAssumptionAnswer());
      doReturn(typeArray0).when(wildcardType0).getLowerBounds();
      doReturn(typeArray0).when(wildcardType0).getUpperBounds();
      GenericMetadataSupport.WildCardBoundedType genericMetadataSupport_WildCardBoundedType0 = new GenericMetadataSupport.WildCardBoundedType(wildcardType0);
      // Undeclared exception!
      try { 
        genericMetadataSupport_WildCardBoundedType0.firstBound();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.mockito.internal.util.reflection.GenericMetadataSupport$WildCardBoundedType", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Type[] typeArray0 = new Type[4];
      TypeVariable<Method> typeVariable0 = (TypeVariable<Method>) mock(TypeVariable.class, new ViolatedAssumptionAnswer());
      doReturn("~wmln.`l_7<", "org.mockito.internal.util.reflection.GenericMetadataSupport$ParameterizedReturnType", "~wmln.`l_7<", "\"T,R!QBD|l#/;").when(typeVariable0).toString();
      doReturn((Object) typeArray0, (Object) typeArray0).when(typeVariable0).getBounds();
      GenericMetadataSupport.TypeVarBoundedType genericMetadataSupport_TypeVarBoundedType0 = new GenericMetadataSupport.TypeVarBoundedType(typeVariable0);
      TypeVariable typeVariable1 = genericMetadataSupport_TypeVarBoundedType0.typeVariable();
      typeArray0[0] = (Type) typeVariable1;
      Type type0 = genericMetadataSupport_TypeVarBoundedType0.firstBound();
      typeArray0[1] = type0;
      Type type1 = genericMetadataSupport_TypeVarBoundedType0.firstBound();
      typeArray0[2] = type1;
      WildcardType wildcardType0 = mock(WildcardType.class, new ViolatedAssumptionAnswer());
      doReturn((Object) typeArray0, (Object) null).when(wildcardType0).getLowerBounds();
      doReturn((Object) typeArray0, (Object) null).when(wildcardType0).getUpperBounds();
      GenericMetadataSupport.WildCardBoundedType genericMetadataSupport_WildCardBoundedType0 = new GenericMetadataSupport.WildCardBoundedType(wildcardType0);
      typeArray0[3] = (Type) genericMetadataSupport_WildCardBoundedType0;
      genericMetadataSupport_WildCardBoundedType0.firstBound();
      Type[] typeArray1 = new Type[8];
      typeArray1[0] = (Type) typeVariable1;
      typeArray1[1] = (Type) typeVariable0;
      typeArray1[2] = (Type) typeVariable0;
      typeArray1[3] = type1;
      typeArray1[4] = (Type) typeVariable1;
      typeArray1[5] = (Type) genericMetadataSupport_WildCardBoundedType0;
      typeArray1[6] = type1;
      // Undeclared exception!
      try { 
        genericMetadataSupport_WildCardBoundedType0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.util.reflection.GenericMetadataSupport$WildCardBoundedType", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      WildcardType wildcardType0 = mock(WildcardType.class, new ViolatedAssumptionAnswer());
      GenericMetadataSupport.WildCardBoundedType genericMetadataSupport_WildCardBoundedType0 = new GenericMetadataSupport.WildCardBoundedType(wildcardType0);
      boolean boolean0 = genericMetadataSupport_WildCardBoundedType0.equals("u}%c#GopP@E)ff");
      TypeVariable<Method> typeVariable0 = (TypeVariable<Method>) mock(TypeVariable.class, new ViolatedAssumptionAnswer());
      GenericMetadataSupport.TypeVarBoundedType genericMetadataSupport_TypeVarBoundedType0 = new GenericMetadataSupport.TypeVarBoundedType(typeVariable0);
      boolean boolean1 = genericMetadataSupport_TypeVarBoundedType0.equals("u}%c#GopP@E)ff");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      WildcardType wildcardType0 = mock(WildcardType.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(wildcardType0).toString();
      doReturn((Type[]) null).when(wildcardType0).getLowerBounds();
      doReturn((Type[]) null).when(wildcardType0).getUpperBounds();
      GenericMetadataSupport.WildCardBoundedType genericMetadataSupport_WildCardBoundedType0 = new GenericMetadataSupport.WildCardBoundedType(wildcardType0);
      genericMetadataSupport_WildCardBoundedType0.wildCard();
      // Undeclared exception!
      try { 
        genericMetadataSupport_WildCardBoundedType0.getTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.util.reflection.GenericMetadataSupport$WildCardBoundedType", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Type[] typeArray0 = new Type[4];
      TypeVariable<Method> typeVariable0 = (TypeVariable<Method>) mock(TypeVariable.class, new ViolatedAssumptionAnswer());
      doReturn("~wmln.`l_7<", "~3?}2$zSuqa;RiDT*", "~3?}2$zSuqa;RiDT*", "", (String) null).when(typeVariable0).toString();
      doReturn((Object) typeArray0, (Object) typeArray0).when(typeVariable0).getBounds();
      GenericMetadataSupport.TypeVarBoundedType genericMetadataSupport_TypeVarBoundedType0 = new GenericMetadataSupport.TypeVarBoundedType(typeVariable0);
      TypeVariable typeVariable1 = genericMetadataSupport_TypeVarBoundedType0.typeVariable();
      typeArray0[0] = (Type) typeVariable1;
      Type type0 = genericMetadataSupport_TypeVarBoundedType0.firstBound();
      typeArray0[1] = type0;
      Type type1 = genericMetadataSupport_TypeVarBoundedType0.firstBound();
      typeArray0[2] = type1;
      WildcardType wildcardType0 = mock(WildcardType.class, new ViolatedAssumptionAnswer());
      doReturn(typeArray0).when(wildcardType0).getLowerBounds();
      doReturn(typeArray0).when(wildcardType0).getUpperBounds();
      GenericMetadataSupport.WildCardBoundedType genericMetadataSupport_WildCardBoundedType0 = new GenericMetadataSupport.WildCardBoundedType(wildcardType0);
      typeArray0[3] = (Type) genericMetadataSupport_WildCardBoundedType0;
      TypeVariable<Method> typeVariable2 = (TypeVariable<Method>) mock(TypeVariable.class, new ViolatedAssumptionAnswer());
      doReturn((Object) typeArray0, (Object) typeArray0, (Object) typeArray0, (Object) typeArray0, (Object) null).when(typeVariable2).getBounds();
      GenericMetadataSupport.TypeVarBoundedType genericMetadataSupport_TypeVarBoundedType1 = new GenericMetadataSupport.TypeVarBoundedType(typeVariable2);
      genericMetadataSupport_TypeVarBoundedType1.toString();
      // Undeclared exception!
      try { 
        GenericMetadataSupport.inferFrom(genericMetadataSupport_TypeVarBoundedType1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVarBoundedType", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Type[] typeArray0 = new Type[9];
      WildcardType wildcardType0 = mock(WildcardType.class, new ViolatedAssumptionAnswer());
      GenericMetadataSupport.WildCardBoundedType genericMetadataSupport_WildCardBoundedType0 = new GenericMetadataSupport.WildCardBoundedType(wildcardType0);
      Object object0 = new Object();
      Object object1 = new Object();
      WildcardType wildcardType1 = mock(WildcardType.class, new ViolatedAssumptionAnswer());
      GenericMetadataSupport.WildCardBoundedType genericMetadataSupport_WildCardBoundedType1 = new GenericMetadataSupport.WildCardBoundedType(wildcardType1);
      // Undeclared exception!
      try { 
        genericMetadataSupport_WildCardBoundedType0.equals(genericMetadataSupport_WildCardBoundedType1);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.mockito.internal.util.reflection.GenericMetadataSupport$WildCardBoundedType cannot be cast to org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVarBoundedType
         //
         verifyException("org.mockito.internal.util.reflection.GenericMetadataSupport$WildCardBoundedType", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Type[] typeArray0 = new Type[0];
      WildcardType wildcardType0 = mock(WildcardType.class, new ViolatedAssumptionAnswer());
      doReturn((Type[]) null).when(wildcardType0).getLowerBounds();
      doReturn((Type[]) null).when(wildcardType0).getUpperBounds();
      WildcardType wildcardType1 = mock(WildcardType.class, new ViolatedAssumptionAnswer());
      GenericMetadataSupport.WildCardBoundedType genericMetadataSupport_WildCardBoundedType0 = new GenericMetadataSupport.WildCardBoundedType(wildcardType1);
      genericMetadataSupport_WildCardBoundedType0.equals((Object) null);
      GenericMetadataSupport.WildCardBoundedType genericMetadataSupport_WildCardBoundedType1 = new GenericMetadataSupport.WildCardBoundedType(wildcardType0);
      // Undeclared exception!
      try { 
        genericMetadataSupport_WildCardBoundedType1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.util.reflection.GenericMetadataSupport$WildCardBoundedType", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Type[] typeArray0 = new Type[4];
      WildcardType wildcardType0 = mock(WildcardType.class, new ViolatedAssumptionAnswer());
      doReturn((Object) typeArray0, (Object) null).when(wildcardType0).getLowerBounds();
      doReturn((Object) typeArray0, (Object) null).when(wildcardType0).getUpperBounds();
      GenericMetadataSupport.WildCardBoundedType genericMetadataSupport_WildCardBoundedType0 = new GenericMetadataSupport.WildCardBoundedType(wildcardType0);
      genericMetadataSupport_WildCardBoundedType0.getTypeName();
      // Undeclared exception!
      try { 
        GenericMetadataSupport.inferFrom(genericMetadataSupport_WildCardBoundedType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.util.reflection.GenericMetadataSupport$WildCardBoundedType", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Type[] typeArray0 = new Type[4];
      TypeVariable<Method> typeVariable0 = (TypeVariable<Method>) mock(TypeVariable.class, new ViolatedAssumptionAnswer());
      doReturn("~wmln.`l_7<", (String) null).when(typeVariable0).toString();
      doReturn((Object) typeArray0, (Object) null).when(typeVariable0).getBounds();
      GenericMetadataSupport.TypeVarBoundedType genericMetadataSupport_TypeVarBoundedType0 = new GenericMetadataSupport.TypeVarBoundedType(typeVariable0);
      TypeVariable typeVariable1 = genericMetadataSupport_TypeVarBoundedType0.typeVariable();
      typeArray0[0] = (Type) typeVariable1;
      Type type0 = genericMetadataSupport_TypeVarBoundedType0.firstBound();
      typeArray0[1] = type0;
      // Undeclared exception!
      try { 
        genericMetadataSupport_TypeVarBoundedType0.firstBound();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVarBoundedType", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Type[] typeArray0 = new Type[0];
      WildcardType wildcardType0 = mock(WildcardType.class, new ViolatedAssumptionAnswer());
      doReturn(typeArray0).when(wildcardType0).getLowerBounds();
      doReturn(typeArray0).when(wildcardType0).getUpperBounds();
      GenericMetadataSupport.WildCardBoundedType genericMetadataSupport_WildCardBoundedType0 = new GenericMetadataSupport.WildCardBoundedType(wildcardType0);
      genericMetadataSupport_WildCardBoundedType0.interfaceBounds();
      // Undeclared exception!
      try { 
        GenericMetadataSupport.inferFrom(genericMetadataSupport_WildCardBoundedType0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.mockito.internal.util.reflection.GenericMetadataSupport$WildCardBoundedType", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Type[] typeArray0 = new Type[4];
      TypeVariable<Method> typeVariable0 = (TypeVariable<Method>) mock(TypeVariable.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(typeVariable0).toString();
      doReturn((Type[]) null).when(typeVariable0).getBounds();
      GenericMetadataSupport.TypeVarBoundedType genericMetadataSupport_TypeVarBoundedType0 = new GenericMetadataSupport.TypeVarBoundedType(typeVariable0);
      TypeVariable typeVariable1 = genericMetadataSupport_TypeVarBoundedType0.typeVariable();
      typeArray0[0] = (Type) typeVariable1;
      // Undeclared exception!
      try { 
        genericMetadataSupport_TypeVarBoundedType0.firstBound();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVarBoundedType", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Type[] typeArray0 = new Type[0];
      WildcardType wildcardType0 = mock(WildcardType.class, new ViolatedAssumptionAnswer());
      doReturn(typeArray0).when(wildcardType0).getLowerBounds();
      doReturn(typeArray0).when(wildcardType0).getUpperBounds();
      GenericMetadataSupport.WildCardBoundedType genericMetadataSupport_WildCardBoundedType0 = new GenericMetadataSupport.WildCardBoundedType(wildcardType0);
      Object object0 = new Object();
      Object object1 = new Object();
      genericMetadataSupport_WildCardBoundedType0.equals(object1);
      // Undeclared exception!
      try { 
        genericMetadataSupport_WildCardBoundedType0.getTypeName();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.mockito.internal.util.reflection.GenericMetadataSupport$WildCardBoundedType", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        GenericMetadataSupport.inferFrom((Type) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // type should not be null
         //
         verifyException("org.mockito.internal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      WildcardType wildcardType0 = mock(WildcardType.class, new ViolatedAssumptionAnswer());
      doReturn((Type[]) null).when(wildcardType0).getLowerBounds();
      doReturn((Type[]) null).when(wildcardType0).getUpperBounds();
      GenericMetadataSupport.WildCardBoundedType genericMetadataSupport_WildCardBoundedType0 = new GenericMetadataSupport.WildCardBoundedType(wildcardType0);
      genericMetadataSupport_WildCardBoundedType0.equals((Object) null);
      // Undeclared exception!
      try { 
        genericMetadataSupport_WildCardBoundedType0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.util.reflection.GenericMetadataSupport$WildCardBoundedType", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TypeVariable<Method> typeVariable0 = (TypeVariable<Method>) mock(TypeVariable.class, new ViolatedAssumptionAnswer());
      doReturn((Type[]) null).when(typeVariable0).getBounds();
      GenericMetadataSupport.TypeVarBoundedType genericMetadataSupport_TypeVarBoundedType0 = new GenericMetadataSupport.TypeVarBoundedType(typeVariable0);
      // Undeclared exception!
      try { 
        genericMetadataSupport_TypeVarBoundedType0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVarBoundedType", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TypeVariable<Method> typeVariable0 = null;
      GenericMetadataSupport.TypeVarBoundedType genericMetadataSupport_TypeVarBoundedType0 = new GenericMetadataSupport.TypeVarBoundedType((TypeVariable) null);
      genericMetadataSupport_TypeVarBoundedType0.typeVariable();
      // Undeclared exception!
      try { 
        genericMetadataSupport_TypeVarBoundedType0.getTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVarBoundedType", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      TypeVariable<Method> typeVariable0 = (TypeVariable<Method>) mock(TypeVariable.class, new ViolatedAssumptionAnswer());
      doReturn((Type[]) null).when(typeVariable0).getBounds();
      GenericMetadataSupport.TypeVarBoundedType genericMetadataSupport_TypeVarBoundedType0 = new GenericMetadataSupport.TypeVarBoundedType(typeVariable0);
      // Undeclared exception!
      try { 
        genericMetadataSupport_TypeVarBoundedType0.firstBound();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVarBoundedType", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      GenericMetadataSupport.WildCardBoundedType genericMetadataSupport_WildCardBoundedType0 = new GenericMetadataSupport.WildCardBoundedType((WildcardType) null);
      // Undeclared exception!
      try { 
        GenericMetadataSupport.inferFrom(genericMetadataSupport_WildCardBoundedType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.util.reflection.GenericMetadataSupport$WildCardBoundedType", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      WildcardType wildcardType0 = mock(WildcardType.class, new ViolatedAssumptionAnswer());
      doReturn((Type[]) null).when(wildcardType0).getLowerBounds();
      doReturn((Type[]) null).when(wildcardType0).getUpperBounds();
      GenericMetadataSupport.WildCardBoundedType genericMetadataSupport_WildCardBoundedType0 = new GenericMetadataSupport.WildCardBoundedType(wildcardType0);
      genericMetadataSupport_WildCardBoundedType0.interfaceBounds();
      // Undeclared exception!
      try { 
        GenericMetadataSupport.inferFrom(genericMetadataSupport_WildCardBoundedType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.util.reflection.GenericMetadataSupport$WildCardBoundedType", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      WildcardType wildcardType0 = mock(WildcardType.class, new ViolatedAssumptionAnswer());
      doReturn((Type[]) null).when(wildcardType0).getLowerBounds();
      doReturn((Type[]) null).when(wildcardType0).getUpperBounds();
      GenericMetadataSupport.WildCardBoundedType genericMetadataSupport_WildCardBoundedType0 = new GenericMetadataSupport.WildCardBoundedType(wildcardType0);
      Object object0 = new Object();
      genericMetadataSupport_WildCardBoundedType0.equals(object0);
      // Undeclared exception!
      try { 
        genericMetadataSupport_WildCardBoundedType0.getTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.util.reflection.GenericMetadataSupport$WildCardBoundedType", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      GenericMetadataSupport.WildCardBoundedType genericMetadataSupport_WildCardBoundedType0 = new GenericMetadataSupport.WildCardBoundedType((WildcardType) null);
      genericMetadataSupport_WildCardBoundedType0.equals("u}%c#GopP@E)ff");
      // Undeclared exception!
      try { 
        GenericMetadataSupport.inferFrom((Type) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // type should not be null
         //
         verifyException("org.mockito.internal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      WildcardType wildcardType0 = mock(WildcardType.class, new ViolatedAssumptionAnswer());
      doReturn((Type[]) null).when(wildcardType0).getLowerBounds();
      doReturn((Type[]) null).when(wildcardType0).getUpperBounds();
      GenericMetadataSupport.WildCardBoundedType genericMetadataSupport_WildCardBoundedType0 = new GenericMetadataSupport.WildCardBoundedType(wildcardType0);
      // Undeclared exception!
      try { 
        genericMetadataSupport_WildCardBoundedType0.getTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.util.reflection.GenericMetadataSupport$WildCardBoundedType", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      WildcardType wildcardType0 = mock(WildcardType.class, new ViolatedAssumptionAnswer());
      doReturn((Type[]) null).when(wildcardType0).getLowerBounds();
      doReturn((Type[]) null).when(wildcardType0).getUpperBounds();
      GenericMetadataSupport.WildCardBoundedType genericMetadataSupport_WildCardBoundedType0 = new GenericMetadataSupport.WildCardBoundedType(wildcardType0);
      // Undeclared exception!
      try { 
        genericMetadataSupport_WildCardBoundedType0.firstBound();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.util.reflection.GenericMetadataSupport$WildCardBoundedType", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      WildcardType wildcardType0 = null;
      GenericMetadataSupport.WildCardBoundedType genericMetadataSupport_WildCardBoundedType0 = new GenericMetadataSupport.WildCardBoundedType((WildcardType) null);
      // Undeclared exception!
      try { 
        genericMetadataSupport_WildCardBoundedType0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.util.reflection.GenericMetadataSupport$WildCardBoundedType", e);
      }
  }
}
