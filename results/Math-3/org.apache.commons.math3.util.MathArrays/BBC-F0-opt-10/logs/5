* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-10
* Going to generate test cases for class: org.apache.commons.math3.util.MathArrays
* Starting Client-0
* Connecting to master process on port 21826
* Analyzing classpath: 
  - subjects/buggy-versions/Math-3/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math3.util.MathArrays
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 2071
* Using seed 1276109183
* Starting evolution
bbc usage percentage is: 10%
* Initial Number of Goals in DynaMOSA = 814 / 2071
[MASTER] 20:23:45.767 [logback-2] ERROR TestCluster - Failed to check cache for org.apache.commons.math3.util.Pair<K, V> : Type points to itself
* Search finished after 602s and 1268 generations, 700077 statements, best individual has fitness: 132.0
* Minimizing test suite
[MASTER] 20:34:40.229 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 99%
* Total number of goals: 413
* Number of covered goals: 410
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 99%
* Total number of goals: 255
* Number of covered goals: 253
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 68
* Number of covered goals: 68
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 96%
* Total number of goals: 982
* Number of covered goals: 944
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 73%
* Total number of goals: 86
* Number of covered goals: 63
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 40
* Number of covered goals: 40
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 40
* Number of covered goals: 40
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 99%
* Total number of goals: 255
* Number of covered goals: 253
* Generated 194 tests with total length 3611
* Resulting test suite's coverage: 90% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 20:35:25.041 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6674833333333333% of time used, but only 12/194 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 8%
* Compiling and checking tests
[MASTER] 20:36:22.117 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_146_1633638981766/org/apache/commons/math3/util/MathArrays_146_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_146_1633638981766/org/apache/commons/math3/util/MathArrays_146_tmp__ESTest_scaffolding.java]]
[MASTER] 20:36:22.117 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Math-3/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Math-3/target/classes
[MASTER] 20:36:22.117 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Math-3/target/classes
[MASTER] 20:36:22.120 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: org.apache.commons.math3.Field<java.lang.String> cannot be converted to org.apache.commons.math3.Field<org.apache.commons.math3.FieldElement<org.apache.commons.math3.FieldElement>>: 54
[MASTER] 20:36:22.120 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_146_1633638981766/org/apache/commons/math3/util/MathArrays_146_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 20:36:22.120 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 20:36:22.121 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_146_1633638981766/org/apache/commons/math3/util/MathArrays_146_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Oct 07 20:36:21 GMT 2021
4:  */
5: 
6: package org.apache.commons.math3.util;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import static org.evosuite.runtime.EvoAssertions.*;
12: import org.apache.commons.math3.Field;
13: import org.apache.commons.math3.FieldElement;
14: import org.apache.commons.math3.util.MathArrays;
15: import org.evosuite.runtime.EvoRunner;
16: import org.evosuite.runtime.EvoRunnerParameters;
17: import org.evosuite.runtime.ViolatedAssumptionAnswer;
18: import org.junit.runner.RunWith;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
21: public class MathArrays_146_tmp__ESTest extends MathArrays_146_tmp__ESTest_scaffolding {
22: 
23:   @Test(timeout = 4000)
24:   public void test0()  throws Throwable  {
25:       double[] doubleArray0 = new double[4];
26:       doubleArray0[1] = 3.635590471206654E7;
27:       doubleArray0[2] = 1587.731617057;
28:       doubleArray0[3] = (-1.0);
29:       double[] doubleArray1 = MathArrays.ebeAdd(doubleArray0, doubleArray0);
30:       assertNotNull(doubleArray1);
31:       assertEquals(4, doubleArray0.length);
32:       assertEquals(4, doubleArray1.length);
33:       assertArrayEquals(new double[] {0.0, 3.635590471206654E7, 1587.731617057, (-1.0)}, doubleArray0, 0.01);
34:       assertArrayEquals(new double[] {0.0, 7.271180942413308E7, 3175.463234114, (-2.0)}, doubleArray1, 0.01);
35:       assertNotSame(doubleArray0, doubleArray1);
36:       assertNotSame(doubleArray1, doubleArray0);
37:       assertFalse(doubleArray1.equals((Object)doubleArray0));
38:       
39:       double double0 = MathArrays.distance1(doubleArray0, doubleArray1);
40:       assertEquals(4, doubleArray0.length);
41:       assertEquals(4, doubleArray1.length);
42:       assertArrayEquals(new double[] {0.0, 3.635590471206654E7, 1587.731617057, (-1.0)}, doubleArray0, 0.01);
43:       assertArrayEquals(new double[] {0.0, 7.271180942413308E7, 3175.463234114, (-2.0)}, doubleArray1, 0.01);
44:       assertEquals(3.6357493443683594E7, double0, 0.01);
45:       assertNotSame(doubleArray0, doubleArray1);
46:       assertNotSame(doubleArray1, doubleArray0);
47:       assertFalse(doubleArray0.equals((Object)doubleArray1));
48:       assertFalse(doubleArray1.equals((Object)doubleArray0));
49:       
50:       Field<String> field0 = (Field<String>) mock(Field.class, new ViolatedAssumptionAnswer());
51:       doReturn((Class) null).when(field0).getRuntimeClass();
52:       // Undeclared exception!
53:       try { 
54:         MathArrays.buildArray((Field<FieldElement<FieldElement>>) field0, (-2147483647), 2146981536);
55:         fail("Expecting exception: NullPointerException");
56:       
57:       } catch(NullPointerException e) {
58:          //
59:          // no message in exception (getMessage() returned null)
60:          //
61:          verifyException("java.lang.reflect.Array", e);
62:       }
63:   }
64: }
RegularFileObject[/tmp/EvoSuite_146_1633638981766/org/apache/commons/math3/util/MathArrays_146_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Oct 07 20:36:21 GMT 2021
5:  */
6: 
7: package org.apache.commons.math3.util;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: import static org.evosuite.shaded.org.mockito.Mockito.*;
17: @EvoSuiteClassExclude
18: public class MathArrays_146_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
24: 
25: 
26:   @BeforeClass 
27:   public static void initEvoSuiteFramework() { 
28:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.math3.util.MathArrays"; 
29:     org.evosuite.runtime.GuiSupport.initialize(); 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
31:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
32:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
33:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
34:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
35:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
36:     setSystemProperties();
37:     initializeClasses();
38:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
39:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
40:   } 
41: 
42:   @Before 
43:   public void initTestCase(){ 
44:     threadStopper.storeCurrentThreads();
45:     threadStopper.startRecordingTime();
46:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
47:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
48:     org.evosuite.runtime.GuiSupport.setHeadless(); 
49:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
50:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
51:   } 
52: 
53:   @After 
54:   public void doneWithTestCase(){ 
55:     threadStopper.killAndJoinClientThreads();
56:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
57:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
58:     resetClasses(); 
59:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
61:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
62:   } 
63: 
64:   public static void setSystemProperties() {
65:  
66:     /*No java.lang.System property to set*/
67:   }
68: 
69:   private static void initializeClasses() {
70:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MathArrays_146_tmp__ESTest_scaffolding.class.getClassLoader() ,
71:       "org.apache.commons.math3.util.Precision",
72:       "org.apache.commons.math3.exception.util.ExceptionContextProvider",
73:       "org.apache.commons.math3.util.MathArrays",
74:       "org.apache.commons.math3.util.MathArrays$1",
75:       "org.apache.commons.math3.util.MathArrays$2",
76:       "org.apache.commons.math3.util.MathArrays$3",
77:       "org.apache.commons.math3.exception.util.ArgUtils",
78:       "org.apache.commons.math3.exception.MathArithmeticException",
79:       "org.apache.commons.math3.util.MathArrays$OrderDirection",
80:       "org.apache.commons.math3.exception.NumberIsTooSmallException",
81:       "org.apache.commons.math3.exception.NotPositiveException",
82:       "org.apache.commons.math3.exception.MathInternalError",
83:       "org.apache.commons.math3.exception.MathIllegalStateException",
84:       "org.apache.commons.math3.exception.NonMonotonicSequenceException",
85:       "org.apache.commons.math3.exception.MathIllegalArgumentException",
86:       "org.apache.commons.math3.util.MathUtils",
87:       "org.apache.commons.math3.exception.MathIllegalNumberException",
88:       "org.apache.commons.math3.util.Pair",
89:       "org.apache.commons.math3.exception.util.LocalizedFormats",
90:       "org.apache.commons.math3.util.FastMath",
91:       "org.apache.commons.math3.exception.DimensionMismatchException",
92:       "org.apache.commons.math3.FieldElement",
93:       "org.apache.commons.math3.exception.util.Localizable",
94:       "org.apache.commons.math3.exception.NotStrictlyPositiveException",
95:       "org.apache.commons.math3.exception.util.ExceptionContext",
96:       "org.apache.commons.math3.exception.NullArgumentException",
97:       "org.apache.commons.math3.exception.NoDataException",
98:       "org.apache.commons.math3.Field",
99:       "org.apache.commons.math3.exception.NotFiniteNumberException"
100:     );
101:   } 
102:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
103:     mock(Class.forName("org.apache.commons.math3.Field", false, MathArrays_146_tmp__ESTest_scaffolding.class.getClassLoader()));
104:   }
105: 
106:   private static void resetClasses() {
107:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MathArrays_146_tmp__ESTest_scaffolding.class.getClassLoader()); 
108: 
109:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
110:       "org.apache.commons.math3.util.MathArrays",
111:       "org.apache.commons.math3.util.MathArrays$OrderDirection",
112:       "org.apache.commons.math3.util.MathArrays$1",
113:       "org.apache.commons.math3.util.MathArrays$2",
114:       "org.apache.commons.math3.util.MathArrays$3",
115:       "org.apache.commons.math3.exception.util.LocalizedFormats",
116:       "org.apache.commons.math3.util.FastMath",
117:       "org.apache.commons.math3.util.Precision",
118:       "org.apache.commons.math3.exception.MathIllegalArgumentException",
119:       "org.apache.commons.math3.exception.MathIllegalNumberException",
120:       "org.apache.commons.math3.exception.NumberIsTooSmallException",
121:       "org.apache.commons.math3.exception.NotPositiveException",
122:       "org.apache.commons.math3.exception.util.ExceptionContext",
123:       "org.apache.commons.math3.exception.util.ArgUtils",
124:       "org.apache.commons.math3.util.MathUtils",
125:       "org.apache.commons.math3.exception.DimensionMismatchException",
126:       "org.apache.commons.math3.util.Pair",
127:       "org.apache.commons.math3.exception.NonMonotonicSequenceException",
128:       "org.apache.commons.math3.exception.NotStrictlyPositiveException",
129:       "org.apache.commons.math3.exception.NullArgumentException",
130:       "org.apache.commons.math3.exception.MathArithmeticException",
131:       "org.apache.commons.math3.exception.NoDataException"
132:     );
133:   }
134: }

[MASTER] 20:36:22.169 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
double[] doubleArray0 = new double[4];
doubleArray0[1] = 3.635590471206654E7;
doubleArray0[2] = 1587.731617057;
doubleArray0[3] = (-1.0);
double[] doubleArray1 = MathArrays.ebeAdd(doubleArray0, doubleArray0);
assertNotNull(doubleArray1);
assertEquals(4, doubleArray0.length);
assertEquals(4, doubleArray1.length);
assertArrayEquals(new double[] {0.0, 3.635590471206654E7, 1587.731617057, (-1.0)}, doubleArray0, 0.01);
assertArrayEquals(new double[] {0.0, 7.271180942413308E7, 3175.463234114, (-2.0)}, doubleArray1, 0.01);
assertNotSame(doubleArray0, doubleArray1);
assertNotSame(doubleArray1, doubleArray0);
assertFalse(doubleArray1.equals((Object)doubleArray0));

double double0 = MathArrays.distance1(doubleArray0, doubleArray1);
assertEquals(4, doubleArray0.length);
assertEquals(4, doubleArray1.length);
assertArrayEquals(new double[] {0.0, 3.635590471206654E7, 1587.731617057, (-1.0)}, doubleArray0, 0.01);
assertArrayEquals(new double[] {0.0, 7.271180942413308E7, 3175.463234114, (-2.0)}, doubleArray1, 0.01);
assertEquals(3.6357493443683594E7, double0, 0.01);
assertNotSame(doubleArray0, doubleArray1);
assertNotSame(doubleArray1, doubleArray0);
assertFalse(doubleArray0.equals((Object)doubleArray1));
assertFalse(doubleArray1.equals((Object)doubleArray0));

Field<String> field0 = (Field<String>) mock(Field.class, new ViolatedAssumptionAnswer());
doReturn((Class) null).when(field0).getRuntimeClass();
MathArrays.buildArray((Field<FieldElement<FieldElement>>) field0, (-2147483647), 2146981536);

* Writing tests to file
* Writing JUnit test case 'MathArrays_ESTest' to results/Math-3/org.apache.commons.math3.util.MathArrays/BBC-F0-opt-10/tests/5
* Done!

* Computation finished
