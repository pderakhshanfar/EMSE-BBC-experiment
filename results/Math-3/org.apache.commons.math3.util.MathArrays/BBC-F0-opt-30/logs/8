* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-30
* Going to generate test cases for class: org.apache.commons.math3.util.MathArrays
* Starting Client-0
* Connecting to master process on port 13914
* Analyzing classpath: 
  - subjects/buggy-versions/Math-3/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math3.util.MathArrays
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 2071
* Using seed 243567104
* Starting evolution
bbc usage percentage is: 30%
* Initial Number of Goals in DynaMOSA = 814 / 2071
[MASTER] 20:35:18.989 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 98: org.apache.commons.math3.util.MathArrays.ebeSubtract([D[D)[D:148 - ReplaceArithmeticOperator - -> %
[MASTER] 20:35:19.150 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.apache.commons.math3.util.MathArrays.buildArray(Lorg/apache/commons/math3/Field;II)[[Ljava/lang/Object;
[MASTER] 20:35:33.369 [logback-2] ERROR TestCluster - Failed to check cache for org.apache.commons.math3.util.Pair<K, V> : Type points to itself
*C1*
*C1*
*C1*
*C1*
* Search finished after 603s and 756 generations, 438395 statements, best individual has fitness: 141.0
* Minimizing test suite
[MASTER] 20:46:21.682 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 99%
* Total number of goals: 413
* Number of covered goals: 409
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 99%
* Total number of goals: 255
* Number of covered goals: 252
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 69
* Number of covered goals: 69
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 96%
* Total number of goals: 982
* Number of covered goals: 943
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 73%
* Total number of goals: 86
* Number of covered goals: 63
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 40
* Number of covered goals: 40
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 40
* Number of covered goals: 40
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 99%
* Total number of goals: 255
* Number of covered goals: 252
* Generated 188 tests with total length 3520
* Resulting test suite's coverage: 89% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 20:47:07.001 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6746166666666666% of time used, but only 24/188 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 7%
* Compiling and checking tests
[MASTER] 20:47:54.155 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_144_1633639674022/org/apache/commons/math3/util/MathArrays_144_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_144_1633639674022/org/apache/commons/math3/util/MathArrays_144_tmp__ESTest_scaffolding.java]]
[MASTER] 20:47:54.160 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Math-3/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Math-3/target/classes
[MASTER] 20:47:54.160 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Math-3/target/classes
[MASTER] 20:47:54.164 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   variable Double
  location: class org.apache.commons.math3.util.MathArrays_144_tmp__ESTest: 58
[MASTER] 20:47:54.181 [logback-2] ERROR JUnitAnalyzer - Diagnostic: illegal start of type: 58
[MASTER] 20:47:54.182 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_144_1633639674022/org/apache/commons/math3/util/MathArrays_144_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Oct 07 20:47:54 GMT 2021
4:  */
5: 
6: package org.apache.commons.math3.util;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import org.apache.commons.math3.util.MathArrays;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: 
15: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
16: public class MathArrays_144_tmp__ESTest extends MathArrays_144_tmp__ESTest_scaffolding {
17: 
18:   @Test(timeout = 4000)
19:   public void test0()  throws Throwable  {
20:       int[] intArray0 = new int[1];
21:       intArray0[0] = (-1064);
22:       int int0 = MathArrays.distanceInf(intArray0, intArray0);
23:       assertArrayEquals(new int[] {(-1064)}, intArray0);
24:       assertEquals(0, int0);
25:       assertEquals(1, intArray0.length);
26:       
27:       float[] floatArray0 = new float[2];
28:       floatArray0[0] = (float) 0;
29:       floatArray0[1] = (float) (-1064);
30:       boolean boolean0 = MathArrays.equalsIncludingNaN(floatArray0, floatArray0);
31:       assertArrayEquals(new float[] {0.0F, (-1064.0F)}, floatArray0, 0.01F);
32:       assertTrue(boolean0);
33:       assertEquals(2, floatArray0.length);
34:       
35:       double[] doubleArray0 = new double[7];
36:       doubleArray0[0] = (double) (-1064.0F);
37:       doubleArray0[1] = 2214.421838;
38:       doubleArray0[2] = (double) (-1064);
39:       doubleArray0[3] = 2214.421838;
40:       doubleArray0[4] = 2214.421838;
41:       doubleArray0[5] = (double) 0;
42:       doubleArray0[6] = 2214.421838;
43:       MathArrays.scaleInPlace(0.0F, doubleArray0);
44:       assertArrayEquals(new double[] {-0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
45:       assertEquals(7, doubleArray0.length);
46:       
47:       double[] doubleArray1 = MathArrays.ebeSubtract(doubleArray0, doubleArray0);
48:       assertNotSame(doubleArray1, doubleArray0);
49:       assertNotSame(doubleArray0, doubleArray1);
50:       assertNotNull(doubleArray1);
51:       assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray1, 0.01);
52:       assertArrayEquals(new double[] {-0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
53:       assertFalse(doubleArray1.equals((Object)doubleArray0));
54:       assertEquals(7, doubleArray1.length);
55:       assertEquals(7, doubleArray0.length);
56:       
57:       Double[] doubleArray2 = new Double[5];
58:       doubleArray2[0] = (Double) -0.0;
59:       doubleArray2[1] = (Double) 0.0;
60:       doubleArray2[2] = (Double) 0.0;
61:       doubleArray2[3] = (Double) 0.0;
62:       Double double0 = new Double(1085.0);
63:       assertNotNull(double0);
64:       assertEquals(1085.0, (double)double0, 0.01);
65:       
66:       doubleArray2[4] = double0;
67:       MathArrays.OrderDirection mathArrays_OrderDirection0 = MathArrays.OrderDirection.INCREASING;
68:       boolean boolean1 = MathArrays.isMonotonic(doubleArray2, mathArrays_OrderDirection0, true);
69:       assertFalse(boolean1 == boolean0);
70:       assertFalse(boolean1);
71:       assertEquals(5, doubleArray2.length);
72:   }
73: }
RegularFileObject[/tmp/EvoSuite_144_1633639674022/org/apache/commons/math3/util/MathArrays_144_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Oct 07 20:47:54 GMT 2021
5:  */
6: 
7: package org.apache.commons.math3.util;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: @EvoSuiteClassExclude
17: public class MathArrays_144_tmp__ESTest_scaffolding {
18: 
19:   @org.junit.Rule 
20:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
21: 
22:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
23: 
24: 
25:   @BeforeClass 
26:   public static void initEvoSuiteFramework() { 
27:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.math3.util.MathArrays"; 
28:     org.evosuite.runtime.GuiSupport.initialize(); 
29:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
31:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
32:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
33:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
34:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
35:     setSystemProperties();
36:     initializeClasses();
37:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
38:   } 
39: 
40:   @Before 
41:   public void initTestCase(){ 
42:     threadStopper.storeCurrentThreads();
43:     threadStopper.startRecordingTime();
44:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
45:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
46:     org.evosuite.runtime.GuiSupport.setHeadless(); 
47:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
48:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
49:   } 
50: 
51:   @After 
52:   public void doneWithTestCase(){ 
53:     threadStopper.killAndJoinClientThreads();
54:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
55:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
56:     resetClasses(); 
57:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
59:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
60:   } 
61: 
62:   public static void setSystemProperties() {
63:  
64:     /*No java.lang.System property to set*/
65:   }
66: 
67:   private static void initializeClasses() {
68:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MathArrays_144_tmp__ESTest_scaffolding.class.getClassLoader() ,
69:       "org.apache.commons.math3.util.Precision",
70:       "org.apache.commons.math3.exception.util.ExceptionContextProvider",
71:       "org.apache.commons.math3.util.MathArrays",
72:       "org.apache.commons.math3.util.MathArrays$1",
73:       "org.apache.commons.math3.util.MathArrays$2",
74:       "org.apache.commons.math3.util.MathArrays$3",
75:       "org.apache.commons.math3.exception.util.ArgUtils",
76:       "org.apache.commons.math3.exception.MathArithmeticException",
77:       "org.apache.commons.math3.util.MathArrays$OrderDirection",
78:       "org.apache.commons.math3.exception.NumberIsTooSmallException",
79:       "org.apache.commons.math3.exception.NotPositiveException",
80:       "org.apache.commons.math3.exception.MathInternalError",
81:       "org.apache.commons.math3.exception.MathIllegalStateException",
82:       "org.apache.commons.math3.exception.NonMonotonicSequenceException",
83:       "org.apache.commons.math3.exception.MathIllegalArgumentException",
84:       "org.apache.commons.math3.util.MathUtils",
85:       "org.apache.commons.math3.exception.MathIllegalNumberException",
86:       "org.apache.commons.math3.util.Pair",
87:       "org.apache.commons.math3.exception.util.LocalizedFormats",
88:       "org.apache.commons.math3.util.FastMath",
89:       "org.apache.commons.math3.exception.DimensionMismatchException",
90:       "org.apache.commons.math3.FieldElement",
91:       "org.apache.commons.math3.exception.util.Localizable",
92:       "org.apache.commons.math3.exception.NotStrictlyPositiveException",
93:       "org.apache.commons.math3.exception.util.ExceptionContext",
94:       "org.apache.commons.math3.exception.NullArgumentException",
95:       "org.apache.commons.math3.exception.NoDataException",
96:       "org.apache.commons.math3.Field",
97:       "org.apache.commons.math3.exception.NotFiniteNumberException"
98:     );
99:   } 
100: 
101:   private static void resetClasses() {
102:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MathArrays_144_tmp__ESTest_scaffolding.class.getClassLoader()); 
103: 
104:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
105:       "org.apache.commons.math3.util.MathArrays",
106:       "org.apache.commons.math3.util.MathArrays$OrderDirection",
107:       "org.apache.commons.math3.util.MathArrays$1",
108:       "org.apache.commons.math3.util.MathArrays$2",
109:       "org.apache.commons.math3.util.MathArrays$3",
110:       "org.apache.commons.math3.exception.util.LocalizedFormats",
111:       "org.apache.commons.math3.util.FastMath",
112:       "org.apache.commons.math3.exception.MathIllegalArgumentException",
113:       "org.apache.commons.math3.exception.MathIllegalNumberException",
114:       "org.apache.commons.math3.exception.NonMonotonicSequenceException",
115:       "org.apache.commons.math3.exception.util.ExceptionContext",
116:       "org.apache.commons.math3.exception.util.ArgUtils",
117:       "org.apache.commons.math3.util.Pair",
118:       "org.apache.commons.math3.util.MathUtils",
119:       "org.apache.commons.math3.exception.MathArithmeticException",
120:       "org.apache.commons.math3.exception.DimensionMismatchException",
121:       "org.apache.commons.math3.util.Precision",
122:       "org.apache.commons.math3.exception.NumberIsTooSmallException",
123:       "org.apache.commons.math3.exception.NotPositiveException",
124:       "org.apache.commons.math3.exception.NoDataException",
125:       "org.apache.commons.math3.exception.NullArgumentException",
126:       "org.apache.commons.math3.exception.NotStrictlyPositiveException"
127:     );
128:   }
129: }

[MASTER] 20:47:54.185 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
int[] intArray0 = new int[1];
intArray0[0] = (-1064);
int int0 = MathArrays.distanceInf(intArray0, intArray0);
assertArrayEquals(new int[] {(-1064)}, intArray0);
assertEquals(0, int0);
assertEquals(1, intArray0.length);

float[] floatArray0 = new float[2];
floatArray0[0] = (float) 0;
floatArray0[1] = (float) (-1064);
boolean boolean0 = MathArrays.equalsIncludingNaN(floatArray0, floatArray0);
assertArrayEquals(new float[] {0.0F, (-1064.0F)}, floatArray0, 0.01F);
assertTrue(boolean0);
assertEquals(2, floatArray0.length);

double[] doubleArray0 = new double[7];
doubleArray0[0] = (double) (-1064.0F);
doubleArray0[1] = 2214.421838;
doubleArray0[2] = (double) (-1064);
doubleArray0[3] = 2214.421838;
doubleArray0[4] = 2214.421838;
doubleArray0[5] = (double) 0;
doubleArray0[6] = 2214.421838;
MathArrays.scaleInPlace(0.0F, doubleArray0);
assertArrayEquals(new double[] {-0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
assertEquals(7, doubleArray0.length);

double[] doubleArray1 = MathArrays.ebeSubtract(doubleArray0, doubleArray0);
assertNotSame(doubleArray1, doubleArray0);
assertNotSame(doubleArray0, doubleArray1);
assertNotNull(doubleArray1);
assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray1, 0.01);
assertArrayEquals(new double[] {-0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
assertFalse(doubleArray1.equals((Object)doubleArray0));
assertEquals(7, doubleArray1.length);
assertEquals(7, doubleArray0.length);

Double[] doubleArray2 = new Double[5];
doubleArray2[0] = (Double) -0.0;
doubleArray2[1] = (Double) 0.0;
doubleArray2[2] = (Double) 0.0;
doubleArray2[3] = (Double) 0.0;
Double double0 = new Double(1085.0);
assertNotNull(double0);
assertEquals(1085.0, (double)double0, 0.01);

doubleArray2[4] = double0;
MathArrays.OrderDirection mathArrays_OrderDirection0 = MathArrays.OrderDirection.INCREASING;
boolean boolean1 = MathArrays.isMonotonic(doubleArray2, mathArrays_OrderDirection0, true);
assertFalse(boolean1 == boolean0);
assertFalse(boolean1);
assertEquals(5, doubleArray2.length);


[MASTER] 20:48:01.515 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:48:02.328 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:48:02.710 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:48:03.861 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:48:04.715 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:48:04.969 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:48:05.741 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:48:06.355 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:48:06.969 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:48:07.583 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:48:08.328 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:48:09.080 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:48:09.596 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:48:10.278 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:48:11.018 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:48:11.973 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:48:12.826 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing tests to file
* Writing JUnit test case 'MathArrays_ESTest' to results/Math-3/org.apache.commons.math3.util.MathArrays/BBC-F0-opt-30/tests/8
* Done!

* Computation finished
