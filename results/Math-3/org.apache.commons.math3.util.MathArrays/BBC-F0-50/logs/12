* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-50
* Going to generate test cases for class: org.apache.commons.math3.util.MathArrays
* Starting Client-0
* Connecting to master process on port 19415
* Analyzing classpath: 
  - subjects/buggy-versions/Math-3/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math3.util.MathArrays
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 2071
* Using seed 2710356644
* Starting evolution
bbc usage percentage is: 50%
* Initial Number of Goals in DynaMOSA = 814 / 2071
[MASTER] 12:12:14.796 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.apache.commons.math3.util.MathArrays.checkNonNegative([[J)V
[MASTER] 12:12:35.286 [logback-2] ERROR TestCluster - Failed to check cache for org.apache.commons.math3.util.Pair<K, V> : Type points to itself
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.convolve([D[D)[D: I23 Branch 118 IFNE L1401 - false: 40
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.checkOrder([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z: I63 Branch 35 IFLT L396 - false: 23
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.equals([F[F)Z: I59 Branch 82 IFNE L1185 - false: 335
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.safeNorm([D)D: I123 Branch 53 IFLE L605 - false: 1858
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.normalizeArray([DD)[D: I18 Branch 108 IFEQ L1296 - false: 366
Number of times BBC is called for org.apache.commons.math3.util.MathArrays$1.compare(Lorg/apache/commons/math3/util/Pair;Lorg/apache/commons/math3/util/Pair;)I: Line 712: 250
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.equals([D[D)Z: I16 Branch 94 IFNONNULL L1230 - false: 11
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.safeNorm([D)D: I71 Branch 51 IFLE L595 - false: 61
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.equals([D[D)Z: I59 Branch 98 IFNE L1236 - true: 25
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.normalizeArray([DD)[D: I56 Branch 110 IFEQ L1303 - false: 2869
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.safeNorm([D)D: I187 Branch 55 IFEQ L621 - false: 115
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.equals([D[D)Z: I5 Branch 92 IFNONNULL L1229 - false: 185
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.equals([F[F)Z: I36 Branch 80 IF_ICMPEQ L1181 - false: 167
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.equals([F[F)Z: I5 Branch 76 IFNONNULL L1178 - false: 500
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.normalizeArray([DD)[D: I4 Branch 107 IFEQ L1293 - false: 4725
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.isMonotonic([Ljava/lang/Comparable;Lorg/apache/commons/math3/util/MathArrays$OrderDirection;Z)Z: I41 Branch 22 IFLT L319 - true: 30
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.normalizeArray([DD)[D: I126 Branch 114 IFEQ L1314 - false: 363
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.checkNonNegative([[J)V: Line 513: 49
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.equalsIncludingNaN([D[D)Z: I3 Branch 99 IFNULL L1255 - true: 87
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.equalsIncludingNaN([F[F)Z: I16 Branch 86 IFNONNULL L1205 - true: 374
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.checkRectangular([[J)V: I12 Branch 39 IF_ICMPGE L462 - true: 11
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.isMonotonic([Ljava/lang/Comparable;Lorg/apache/commons/math3/util/MathArrays$OrderDirection;Z)Z: I65 Branch 24 IFEQ L330 - false: 16
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.ebeMultiply([D[D)[D: I6 Branch 7 IF_ICMPEQ L164 - true: 250
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.buildArray(Lorg/apache/commons/math3/Field;I)[Ljava/lang/Object;: Line 1337: 15
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.safeNorm([D)D: I77 Branch 52 IFLE L596 - true: 61
Number of times BBC is called for org.apache.commons.math3.util.MathArrays$1.compare(Lorg/apache/commons/math3/util/Pair;Lorg/apache/commons/math3/util/Pair;)I: root-Branch: 250
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.checkOrder([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z: I106 Branch 38 IFEQ L419 - true: 199
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.linearCombination([D[D)D: I233 Branch 70 IFEQ L862 - true: 12
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.safeNorm([D)D: I152 Branch 54 IFEQ L610 - false: 7543
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.equals([F[F)Z: I23 Branch 79 IFNE L1179 - true: 39
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.ebeMultiply([D[D)[D: I6 Branch 7 IF_ICMPEQ L164 - false: 344
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.safeNorm([D)D: I77 Branch 52 IFLE L596 - false: 61
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.equalsIncludingNaN([F[F)Z: I36 Branch 88 IF_ICMPEQ L1207 - false: 203
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.equals([D[D)Z: I23 Branch 95 IFNE L1230 - false: 11
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.buildArray(Lorg/apache/commons/math3/Field;I)[Ljava/lang/Object;: Line 1336: 15
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.sortInPlace([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;[[D)V: I3 Branch 58 IFNONNULL L682 - false: 150
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.checkNonNegative([[J)V: I8 Branch 45 IF_ICMPGE L513 - true: 141
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.equalsIncludingNaN([D[D)Z: I16 Branch 102 IFNONNULL L1256 - false: 4
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.checkNonNegative([[J)V: I8 Branch 45 IF_ICMPGE L513 - false: 49
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.checkNonNegative([J)V: I8 Branch 43 IF_ICMPGE L497 - true: 76
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.equalsIncludingNaN([D[D)Z: I9 Branch 101 IFNONNULL L1256 - false: 87
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.ebeSubtract([D[D)[D: I6 Branch 5 IF_ICMPEQ L142 - false: 182
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.isMonotonic([Ljava/lang/Comparable;Lorg/apache/commons/math3/util/MathArrays$OrderDirection;Z)Z: I77 Branch 26 IFLE L335 - false: 33
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.buildArray(Lorg/apache/commons/math3/Field;II)[[Ljava/lang/Object;: Line 1367: 24
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.equalsIncludingNaN([D[D)Z: I9 Branch 101 IFNONNULL L1256 - true: 109
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.normalizeArray([DD)[D: I84 Branch 111 IFNE L1306 - true: 244
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.equals([F[F)Z: I16 Branch 78 IFNONNULL L1179 - true: 39
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.equals([D[D)Z: I36 Branch 96 IF_ICMPEQ L1232 - false: 86
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.equals([D[D)Z: I3 Branch 91 IFNULL L1229 - true: 94
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.linearCombination(DDDD)D: I170 Branch 72 IFEQ L942 - false: 216
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.checkPositive([D)V: I8 Branch 41 IF_ICMPGE L481 - true: 104
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.buildArray(Lorg/apache/commons/math3/Field;II)[[Ljava/lang/Object;: Line 1358: 189
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.buildArray(Lorg/apache/commons/math3/Field;II)[[Ljava/lang/Object;: Line 1357: 23
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.equalsIncludingNaN([D[D)Z: I23 Branch 103 IFNE L1256 - false: 4
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.isMonotonic([Ljava/lang/Comparable;Lorg/apache/commons/math3/util/MathArrays$OrderDirection;Z)Z: I25 Branch 20 LOOKUPSWITCH L315 Default-Case - true: 35028
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.isMonotonic([Ljava/lang/Comparable;Lorg/apache/commons/math3/util/MathArrays$OrderDirection;Z)Z: I69 Branch 25 IFLT L331 - false: 16
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.equalsIncludingNaN([F[F)Z: I23 Branch 87 IFNE L1205 - true: 241
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.isMonotonic([Ljava/lang/Comparable;Lorg/apache/commons/math3/util/MathArrays$OrderDirection;Z)Z: I69 Branch 25 IFLT L331 - true: 33
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.equals([F[F)Z: I9 Branch 77 IFNONNULL L1179 - false: 151
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.normalizeArray([DD)[D: I102 Branch 112 IFNE L1310 - false: 40
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.buildArray(Lorg/apache/commons/math3/Field;II)[[Ljava/lang/Object;: Line 1363: 23
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.safeNorm([D)D: I65 Branch 50 IFLE L594 - false: 48
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.equals([F[F)Z: I9 Branch 77 IFNONNULL L1179 - true: 442
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.equals([D[D)Z: I9 Branch 93 IFNONNULL L1230 - true: 153
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.ebeMultiply([D[D)[D: Line 164: 250
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.sortInPlace([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;[[D)V: I37 Branch 60 IFNONNULL L691 - false: 9536
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.equals([F[F)Z: I3 Branch 75 IFNULL L1178 - true: 151
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.buildArray(Lorg/apache/commons/math3/Field;II)[[Ljava/lang/Object;: I47 Branch 116 IF_ICMPGE L1363 - false: 492
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.ebeAdd([D[D)[D: I6 Branch 3 IF_ICMPEQ L120 - false: 17
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.equals([D[D)Z: I9 Branch 93 IFNONNULL L1230 - false: 94
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.equalsIncludingNaN([D[D)Z: I5 Branch 100 IFNONNULL L1255 - false: 120
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.<init>()V: Line 52: 113533
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.ebeDivide([D[D)[D: I6 Branch 9 IF_ICMPEQ L186 - false: 70
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.equalsIncludingNaN([F[F)Z: I5 Branch 84 IFNONNULL L1204 - false: 260
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.equalsIncludingNaN([D[D)Z: I59 Branch 106 IFNE L1262 - false: 98
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.checkOrder([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z: I55 Branch 34 IFEQ L395 - false: 23
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.checkOrder([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z: I25 Branch 30 LOOKUPSWITCH L382 Default-Case - true: 10592
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.equalsIncludingNaN([F[F)Z: I59 Branch 90 IFNE L1211 - false: 543
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.equalsIncludingNaN([F[F)Z: I9 Branch 85 IFNONNULL L1205 - true: 241
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.linearCombination([D[D)D: I10 Branch 67 IF_ICMPEQ L817 - false: 36
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.buildArray(Lorg/apache/commons/math3/Field;II)[[Ljava/lang/Object;: I47 Branch 116 IF_ICMPGE L1363 - true: 23
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.checkOrder([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z: I63 Branch 35 IFLT L396 - true: 23
Number of times BBC is called for org.apache.commons.math3.util.MathArrays.convolve([D[D)[D: I21 Branch 117 IFEQ L1401 - true: 40
Number of times BBC is called in total: 195634
* Search finished after 602s and 1134 generations, 623837 statements, best individual has fitness: 136.0
* Minimizing test suite
[MASTER] 12:23:26.571 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 99%
* Total number of goals: 413
* Number of covered goals: 410
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 99%
* Total number of goals: 255
* Number of covered goals: 253
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 71
* Number of covered goals: 71
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 96%
* Total number of goals: 982
* Number of covered goals: 944
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 74%
* Total number of goals: 86
* Number of covered goals: 64
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 40
* Number of covered goals: 40
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 40
* Number of covered goals: 40
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 99%
* Total number of goals: 255
* Number of covered goals: 253
* Generated 188 tests with total length 4097
* Resulting test suite's coverage: 90% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 12:24:16.714 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.69865% of time used, but only 38/188 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 13%
* Compiling and checking tests
[MASTER] 12:25:08.616 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_86_1627647908411/org/apache/commons/math3/util/MathArrays_86_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_86_1627647908411/org/apache/commons/math3/util/MathArrays_86_tmp__ESTest_scaffolding.java]]
[MASTER] 12:25:08.641 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Math-3/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Math-3/target/classes
[MASTER] 12:25:08.641 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Math-3/target/classes
[MASTER] 12:25:08.644 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: org.apache.commons.math3.Field<java.lang.Integer> cannot be converted to org.apache.commons.math3.Field<org.apache.commons.math3.FieldElement<org.apache.commons.math3.FieldElement>>: 50
[MASTER] 12:25:08.666 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_86_1627647908411/org/apache/commons/math3/util/MathArrays_86_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 12:25:08.667 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 12:25:08.675 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_86_1627647908411/org/apache/commons/math3/util/MathArrays_86_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Jul 30 12:25:08 GMT 2021
4:  */
5: 
6: package org.apache.commons.math3.util;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import static org.evosuite.runtime.EvoAssertions.*;
12: import org.apache.commons.math3.Field;
13: import org.apache.commons.math3.FieldElement;
14: import org.apache.commons.math3.util.MathArrays;
15: import org.evosuite.runtime.EvoRunner;
16: import org.evosuite.runtime.EvoRunnerParameters;
17: import org.evosuite.runtime.ViolatedAssumptionAnswer;
18: import org.junit.runner.RunWith;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
21: public class MathArrays_86_tmp__ESTest extends MathArrays_86_tmp__ESTest_scaffolding {
22: 
23:   @Test(timeout = 4000)
24:   public void test0()  throws Throwable  {
25:       double[] doubleArray0 = new double[6];
26:       doubleArray0[0] = (-727.1947554031996);
27:       doubleArray0[1] = (-20.0);
28:       doubleArray0[2] = 134.0;
29:       doubleArray0[3] = 1818.10882;
30:       doubleArray0[4] = 2234.0;
31:       doubleArray0[5] = 0.49999999999999994;
32:       double double0 = MathArrays.distance1(doubleArray0, doubleArray0);
33:       assertEquals(0.0, double0, 0.01);
34:       assertEquals(6, doubleArray0.length);
35:       assertArrayEquals(new double[] {(-727.1947554031996), (-20.0), 134.0, 1818.10882, 2234.0, 0.49999999999999994}, doubleArray0, 0.01);
36:       
37:       MathArrays.OrderDirection mathArrays_OrderDirection0 = MathArrays.OrderDirection.INCREASING;
38:       double[][] doubleArray1 = new double[1][2];
39:       doubleArray1[0] = doubleArray0;
40:       MathArrays.sortInPlace(doubleArray0, mathArrays_OrderDirection0, doubleArray1);
41:       assertEquals(6, doubleArray0.length);
42:       assertEquals(1, doubleArray1.length);
43:       assertArrayEquals(new double[] {(-727.1947554031996), (-20.0), 2234.0, 0.49999999999999994, 134.0, 1818.10882}, doubleArray0, 0.01);
44:       
45:       Field<Integer> field0 = (Field<Integer>) mock(Field.class, new ViolatedAssumptionAnswer());
46:       doReturn((Class) null).when(field0).getRuntimeClass();
47:       int int0 = (-3296);
48:       // Undeclared exception!
49:       try { 
50:         MathArrays.buildArray((Field<FieldElement<FieldElement>>) field0, (-3296));
51:         fail("Expecting exception: NullPointerException");
52:       
53:       } catch(NullPointerException e) {
54:          //
55:          // no message in exception (getMessage() returned null)
56:          //
57:       }
58:   }
59: }
RegularFileObject[/tmp/EvoSuite_86_1627647908411/org/apache/commons/math3/util/MathArrays_86_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Jul 30 12:25:08 GMT 2021
5:  */
6: 
7: package org.apache.commons.math3.util;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class MathArrays_86_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule 
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass 
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.math3.util.MathArrays"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass 
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before 
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After 
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/experiment"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MathArrays_86_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "org.apache.commons.math3.util.Precision",
84:       "org.apache.commons.math3.exception.util.ExceptionContextProvider",
85:       "org.apache.commons.math3.util.MathArrays",
86:       "org.apache.commons.math3.util.MathArrays$1",
87:       "org.apache.commons.math3.util.MathArrays$2",
88:       "org.apache.commons.math3.util.MathArrays$3",
89:       "org.apache.commons.math3.exception.util.ArgUtils",
90:       "org.apache.commons.math3.exception.MathArithmeticException",
91:       "org.apache.commons.math3.util.MathArrays$OrderDirection",
92:       "org.apache.commons.math3.exception.NumberIsTooSmallException",
93:       "org.apache.commons.math3.exception.NotPositiveException",
94:       "org.apache.commons.math3.exception.MathInternalError",
95:       "org.apache.commons.math3.exception.MathIllegalStateException",
96:       "org.apache.commons.math3.exception.NonMonotonicSequenceException",
97:       "org.apache.commons.math3.exception.MathIllegalArgumentException",
98:       "org.apache.commons.math3.util.MathUtils",
99:       "org.apache.commons.math3.exception.MathIllegalNumberException",
100:       "org.apache.commons.math3.util.Pair",
101:       "org.apache.commons.math3.exception.util.LocalizedFormats",
102:       "org.apache.commons.math3.util.FastMath",
103:       "org.apache.commons.math3.exception.DimensionMismatchException",
104:       "org.apache.commons.math3.FieldElement",
105:       "org.apache.commons.math3.exception.util.Localizable",
106:       "org.apache.commons.math3.exception.NotStrictlyPositiveException",
107:       "org.apache.commons.math3.exception.util.ExceptionContext",
108:       "org.apache.commons.math3.exception.NullArgumentException",
109:       "org.apache.commons.math3.exception.NoDataException",
110:       "org.apache.commons.math3.Field",
111:       "org.apache.commons.math3.exception.NotFiniteNumberException"
112:     );
113:   } 
114:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
115:     mock(Class.forName("org.apache.commons.math3.Field", false, MathArrays_86_tmp__ESTest_scaffolding.class.getClassLoader()));
116:   }
117: 
118:   private static void resetClasses() {
119:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MathArrays_86_tmp__ESTest_scaffolding.class.getClassLoader()); 
120: 
121:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
122:       "org.apache.commons.math3.util.MathArrays",
123:       "org.apache.commons.math3.util.MathArrays$OrderDirection",
124:       "org.apache.commons.math3.util.MathArrays$1",
125:       "org.apache.commons.math3.util.MathArrays$2",
126:       "org.apache.commons.math3.util.MathArrays$3",
127:       "org.apache.commons.math3.exception.util.LocalizedFormats",
128:       "org.apache.commons.math3.exception.MathIllegalArgumentException",
129:       "org.apache.commons.math3.exception.MathIllegalNumberException",
130:       "org.apache.commons.math3.exception.NumberIsTooSmallException",
131:       "org.apache.commons.math3.exception.NotPositiveException",
132:       "org.apache.commons.math3.exception.util.ExceptionContext",
133:       "org.apache.commons.math3.exception.util.ArgUtils",
134:       "org.apache.commons.math3.util.FastMath",
135:       "org.apache.commons.math3.exception.NonMonotonicSequenceException",
136:       "org.apache.commons.math3.util.MathUtils",
137:       "org.apache.commons.math3.exception.DimensionMismatchException",
138:       "org.apache.commons.math3.exception.NotStrictlyPositiveException",
139:       "org.apache.commons.math3.util.Precision",
140:       "org.apache.commons.math3.util.Pair",
141:       "org.apache.commons.math3.exception.NoDataException",
142:       "org.apache.commons.math3.exception.MathArithmeticException",
143:       "org.apache.commons.math3.exception.NullArgumentException"
144:     );
145:   }
146: }

[MASTER] 12:25:08.676 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
double[] doubleArray0 = new double[6];
doubleArray0[0] = (-727.1947554031996);
doubleArray0[1] = (-20.0);
doubleArray0[2] = 134.0;
doubleArray0[3] = 1818.10882;
doubleArray0[4] = 2234.0;
doubleArray0[5] = 0.49999999999999994;
double double0 = MathArrays.distance1(doubleArray0, doubleArray0);
assertEquals(0.0, double0, 0.01);
assertEquals(6, doubleArray0.length);
assertArrayEquals(new double[] {(-727.1947554031996), (-20.0), 134.0, 1818.10882, 2234.0, 0.49999999999999994}, doubleArray0, 0.01);

MathArrays.OrderDirection mathArrays_OrderDirection0 = MathArrays.OrderDirection.INCREASING;
double[][] doubleArray1 = new double[1][2];
doubleArray1[0] = doubleArray0;
MathArrays.sortInPlace(doubleArray0, mathArrays_OrderDirection0, doubleArray1);
assertEquals(6, doubleArray0.length);
assertEquals(1, doubleArray1.length);
assertArrayEquals(new double[] {(-727.1947554031996), (-20.0), 2234.0, 0.49999999999999994, 134.0, 1818.10882}, doubleArray0, 0.01);

Field<Integer> field0 = (Field<Integer>) mock(Field.class, new ViolatedAssumptionAnswer());
doReturn((Class) null).when(field0).getRuntimeClass();
int int0 = (-3296);
MathArrays.buildArray((Field<FieldElement<FieldElement>>) field0, (-3296));

[MASTER] 12:25:27.704 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_174_1627647927586/org/apache/commons/math3/util/MathArrays_174_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_174_1627647927586/org/apache/commons/math3/util/MathArrays_174_tmp__ESTest_scaffolding.java]]
[MASTER] 12:25:27.706 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Math-3/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Math-3/target/classes
[MASTER] 12:25:27.706 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Math-3/target/classes
[MASTER] 12:25:27.707 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: org.apache.commons.math3.Field<java.lang.Integer> cannot be converted to org.apache.commons.math3.Field<org.apache.commons.math3.FieldElement<org.apache.commons.math3.FieldElement>>: 44
[MASTER] 12:25:27.708 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_174_1627647927586/org/apache/commons/math3/util/MathArrays_174_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 12:25:27.708 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 12:25:27.714 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_174_1627647927586/org/apache/commons/math3/util/MathArrays_174_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Jul 30 12:25:27 GMT 2021
4:  */
5: 
6: package org.apache.commons.math3.util;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import static org.evosuite.runtime.EvoAssertions.*;
12: import org.apache.commons.math3.Field;
13: import org.apache.commons.math3.FieldElement;
14: import org.apache.commons.math3.util.MathArrays;
15: import org.evosuite.runtime.EvoRunner;
16: import org.evosuite.runtime.EvoRunnerParameters;
17: import org.evosuite.runtime.ViolatedAssumptionAnswer;
18: import org.junit.runner.RunWith;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
21: public class MathArrays_174_tmp__ESTest extends MathArrays_174_tmp__ESTest_scaffolding {
22: 
23:   @Test(timeout = 4000)
24:   public void test0()  throws Throwable  {
25:       double[] doubleArray0 = new double[6];
26:       doubleArray0[0] = (-727.1947554031996);
27:       doubleArray0[1] = (-20.0);
28:       doubleArray0[2] = 134.0;
29:       doubleArray0[3] = 1818.10882;
30:       doubleArray0[4] = 2234.0;
31:       doubleArray0[5] = 0.49999999999999994;
32:       double double0 = MathArrays.distance1(doubleArray0, doubleArray0);
33:       assertEquals(0.0, double0, 0.01);
34:       assertEquals(6, doubleArray0.length);
35:       assertArrayEquals(new double[] {(-727.1947554031996), (-20.0), 134.0, 1818.10882, 2234.0, 0.49999999999999994}, doubleArray0, 0.01);
36:       
37:       MathArrays.OrderDirection mathArrays_OrderDirection0 = MathArrays.OrderDirection.INCREASING;
38:       Class<FieldElement> class0 = FieldElement.class;
39:       Field<Integer> field0 = (Field<Integer>) mock(Field.class, new ViolatedAssumptionAnswer());
40:       doReturn(class0).when(field0).getRuntimeClass();
41:       int int0 = (-3296);
42:       // Undeclared exception!
43:       try { 
44:         MathArrays.buildArray((Field<FieldElement<FieldElement>>) field0, (-3296));
45:         fail("Expecting exception: NegativeArraySizeException");
46:       
47:       } catch(NegativeArraySizeException e) {
48:          //
49:          // no message in exception (getMessage() returned null)
50:          //
51:          verifyException("java.lang.reflect.Array", e);
52:       }
53:   }
54: }
RegularFileObject[/tmp/EvoSuite_174_1627647927586/org/apache/commons/math3/util/MathArrays_174_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Jul 30 12:25:27 GMT 2021
5:  */
6: 
7: package org.apache.commons.math3.util;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class MathArrays_174_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule 
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass 
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.math3.util.MathArrays"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass 
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before 
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After 
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/experiment"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MathArrays_174_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "org.apache.commons.math3.util.Precision",
84:       "org.apache.commons.math3.exception.util.ExceptionContextProvider",
85:       "org.apache.commons.math3.util.MathArrays",
86:       "org.apache.commons.math3.util.MathArrays$1",
87:       "org.apache.commons.math3.util.MathArrays$2",
88:       "org.apache.commons.math3.util.MathArrays$3",
89:       "org.apache.commons.math3.exception.util.ArgUtils",
90:       "org.apache.commons.math3.exception.MathArithmeticException",
91:       "org.apache.commons.math3.util.MathArrays$OrderDirection",
92:       "org.apache.commons.math3.exception.NumberIsTooSmallException",
93:       "org.apache.commons.math3.exception.NotPositiveException",
94:       "org.apache.commons.math3.exception.MathInternalError",
95:       "org.apache.commons.math3.exception.MathIllegalStateException",
96:       "org.apache.commons.math3.exception.NonMonotonicSequenceException",
97:       "org.apache.commons.math3.exception.MathIllegalArgumentException",
98:       "org.apache.commons.math3.util.MathUtils",
99:       "org.apache.commons.math3.exception.MathIllegalNumberException",
100:       "org.apache.commons.math3.util.Pair",
101:       "org.apache.commons.math3.exception.util.LocalizedFormats",
102:       "org.apache.commons.math3.util.FastMath",
103:       "org.apache.commons.math3.exception.DimensionMismatchException",
104:       "org.apache.commons.math3.FieldElement",
105:       "org.apache.commons.math3.exception.util.Localizable",
106:       "org.apache.commons.math3.exception.NotStrictlyPositiveException",
107:       "org.apache.commons.math3.exception.util.ExceptionContext",
108:       "org.apache.commons.math3.exception.NullArgumentException",
109:       "org.apache.commons.math3.exception.NoDataException",
110:       "org.apache.commons.math3.Field",
111:       "org.apache.commons.math3.exception.NotFiniteNumberException"
112:     );
113:   } 
114:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
115:     mock(Class.forName("org.apache.commons.math3.Field", false, MathArrays_174_tmp__ESTest_scaffolding.class.getClassLoader()));
116:   }
117: 
118:   private static void resetClasses() {
119:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MathArrays_174_tmp__ESTest_scaffolding.class.getClassLoader()); 
120: 
121:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
122:       "org.apache.commons.math3.util.MathArrays",
123:       "org.apache.commons.math3.util.MathArrays$OrderDirection",
124:       "org.apache.commons.math3.util.MathArrays$1",
125:       "org.apache.commons.math3.util.MathArrays$2",
126:       "org.apache.commons.math3.util.MathArrays$3",
127:       "org.apache.commons.math3.exception.util.LocalizedFormats",
128:       "org.apache.commons.math3.exception.MathIllegalArgumentException",
129:       "org.apache.commons.math3.exception.MathIllegalNumberException",
130:       "org.apache.commons.math3.exception.NumberIsTooSmallException",
131:       "org.apache.commons.math3.exception.NotPositiveException",
132:       "org.apache.commons.math3.exception.util.ExceptionContext",
133:       "org.apache.commons.math3.exception.util.ArgUtils",
134:       "org.apache.commons.math3.util.FastMath",
135:       "org.apache.commons.math3.exception.NonMonotonicSequenceException",
136:       "org.apache.commons.math3.util.MathUtils",
137:       "org.apache.commons.math3.exception.DimensionMismatchException",
138:       "org.apache.commons.math3.exception.NotStrictlyPositiveException",
139:       "org.apache.commons.math3.util.Precision",
140:       "org.apache.commons.math3.util.Pair",
141:       "org.apache.commons.math3.exception.NoDataException",
142:       "org.apache.commons.math3.exception.MathArithmeticException",
143:       "org.apache.commons.math3.exception.NullArgumentException"
144:     );
145:   }
146: }

[MASTER] 12:25:27.715 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
double[] doubleArray0 = new double[6];
doubleArray0[0] = (-727.1947554031996);
doubleArray0[1] = (-20.0);
doubleArray0[2] = 134.0;
doubleArray0[3] = 1818.10882;
doubleArray0[4] = 2234.0;
doubleArray0[5] = 0.49999999999999994;
double double0 = MathArrays.distance1(doubleArray0, doubleArray0);
assertEquals(0.0, double0, 0.01);
assertEquals(6, doubleArray0.length);
assertArrayEquals(new double[] {(-727.1947554031996), (-20.0), 134.0, 1818.10882, 2234.0, 0.49999999999999994}, doubleArray0, 0.01);

MathArrays.OrderDirection mathArrays_OrderDirection0 = MathArrays.OrderDirection.INCREASING;
Class<FieldElement> class0 = FieldElement.class;
Field<Integer> field0 = (Field<Integer>) mock(Field.class, new ViolatedAssumptionAnswer());
doReturn(class0).when(field0).getRuntimeClass();
int int0 = (-3296);
MathArrays.buildArray((Field<FieldElement<FieldElement>>) field0, (-3296));

[MASTER] 12:25:37.359 [logback-1] WARN  TestSuiteGenerator - JUnit checking timed out
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing tests to file
* Writing JUnit test case 'MathArrays_ESTest' to results/Math-3/org.apache.commons.math3.util.MathArrays/BBC-F0-50/tests/12
* Done!

* Computation finished
