* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-50
* Going to generate test cases for class: org.joda.time.field.UnsupportedDurationField
* Starting Client-0
* Connecting to master process on port 2115
* Analyzing classpath: 
  - subjects/buggy-versions/Time-2/target/classes
  - defects4j/framework/projects/Time/lib/org/joda/joda-convert/1.2/joda-convert-1.2.jar
* Finished analyzing classpath
* Generating tests for class org.joda.time.field.UnsupportedDurationField
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 246
* Using seed 3739403195
* Starting evolution
bbc usage percentage is: 50%
* Initial Number of Goals in DynaMOSA = 136 / 246
[MASTER] 15:39:14.348 [logback-2] ERROR TestCluster - Failed to check cache for java.util.List<E> : Type points to itself
[MASTER] 15:40:03.656 [logback-2] ERROR TestCluster - Failed to check cache for java.time.temporal.TemporalQuery<R> : Type points to itself
[MASTER] 15:43:16.698 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
Number of times BBC is called for org.joda.time.field.UnsupportedDurationField.equals(Ljava/lang/Object;)Z: I13 Branch 4 IFEQ L240 - false: 982
Number of times BBC is called for org.joda.time.field.UnsupportedDurationField.readResolve()Ljava/lang/Object;: Line 272: 662563
Number of times BBC is called for org.joda.time.field.UnsupportedDurationField.equals(Ljava/lang/Object;)Z: I23 Branch 5 IFNONNULL L242 - true: 982
Number of times BBC is called for org.joda.time.field.UnsupportedDurationField.compareTo(Lorg/joda/time/DurationField;)I: Line 227: 38
Number of times BBC is called for org.joda.time.field.UnsupportedDurationField.equals(Ljava/lang/Object;)Z: I23 Branch 5 IFNONNULL L242 - false: 348996
Number of times BBC is called for org.joda.time.field.UnsupportedDurationField.equals(Ljava/lang/Object;)Z: I4 Branch 3 IF_ACMPNE L238 - false: 52
Number of times BBC is called for org.joda.time.field.UnsupportedDurationField.getValue(J)I: root-Branch: 123
Number of times BBC is called for org.joda.time.field.UnsupportedDurationField.getValue(J)I: Line 110: 123
Number of times BBC is called for org.joda.time.field.UnsupportedDurationField.compareTo(Lorg/joda/time/DurationField;)I: root-Branch: 38
Number of times BBC is called for org.joda.time.field.UnsupportedDurationField.equals(Ljava/lang/Object;)Z: I28 Branch 6 IFNONNULL L243 - false: 348014
Number of times BBC is called for org.joda.time.field.UnsupportedDurationField.getMillis(J)J: root-Branch: 38
Number of times BBC is called for org.joda.time.field.UnsupportedDurationField.getMillis(J)J: Line 155: 38
Number of times BBC is called for org.joda.time.field.UnsupportedDurationField.getDifferenceAsLong(JJ)J: root-Branch: 123
Number of times BBC is called for org.joda.time.field.UnsupportedDurationField.readResolve()Ljava/lang/Object;: root-Branch: 662563
Number of times BBC is called for org.joda.time.field.UnsupportedDurationField.getDifference(JJ)I: Line 200: 123
Number of times BBC is called for org.joda.time.field.UnsupportedDurationField.getDifference(JJ)I: root-Branch: 123
Number of times BBC is called for org.joda.time.field.UnsupportedDurationField.getDifferenceAsLong(JJ)J: Line 209: 123
Number of times BBC is called for org.joda.time.field.UnsupportedDurationField.equals(Ljava/lang/Object;)Z: I28 Branch 6 IFNONNULL L243 - true: 348014
Number of times BBC is called in total: 2373056
* Search finished after 601s and 6836 generations, 1919713 statements, best individual has fitness: 112.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 41
* Number of covered goals: 39
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 88%
* Total number of goals: 34
* Number of covered goals: 30
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 36
* Number of covered goals: 36
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 90%
* Total number of goals: 29
* Number of covered goals: 26
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 20%
* Total number of goals: 64
* Number of covered goals: 13
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 45%
* Total number of goals: 22
* Number of covered goals: 10
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 88%
* Total number of goals: 34
* Number of covered goals: 30
* Generated 48 tests with total length 165
* Resulting test suite's coverage: 72% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 62%
* Compiling and checking tests
[MASTER] 15:43:42.132 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_25_1627659822093/org/joda/time/field/UnsupportedDurationField_25_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_25_1627659822093/org/joda/time/field/UnsupportedDurationField_25_tmp__ESTest_scaffolding.java]]
[MASTER] 15:43:42.132 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Time-2/target/classes:defects4j/framework/projects/Time/lib/org/joda/joda-convert/1.2/joda-convert-1.2.jar:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Time-2/target/classes:/experiment/defects4j/framework/projects/Time/lib/org/joda/joda-convert/1.2/joda-convert-1.2.jar
[MASTER] 15:43:42.132 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Time-2/target/classes:/experiment/defects4j/framework/projects/Time/lib/org/joda/joda-convert/1.2/joda-convert-1.2.jar
[MASTER] 15:43:42.136 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: org.joda.time.field.PreciseDurationField cannot be converted to org.joda.time.field.UnsupportedDurationField: 31
[MASTER] 15:43:42.137 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_25_1627659822093/org/joda/time/field/UnsupportedDurationField_25_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Jul 30 15:43:42 GMT 2021
4:  */
5: 
6: package org.joda.time.field;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.joda.time.DurationField;
14: import org.joda.time.DurationFieldType;
15: import org.joda.time.chrono.GregorianChronology;
16: import org.joda.time.field.PreciseDurationField;
17: import org.joda.time.field.UnsupportedDurationField;
18: import org.junit.runner.RunWith;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
21: public class UnsupportedDurationField_25_tmp__ESTest extends UnsupportedDurationField_25_tmp__ESTest_scaffolding {
22: 
23:   @Test(timeout = 4000)
24:   public void test0()  throws Throwable  {
25:       DurationFieldType durationFieldType0 = DurationFieldType.days();
26:       UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
27:       GregorianChronology gregorianChronology0 = GregorianChronology.getInstanceUTC();
28:       PreciseDurationField preciseDurationField0 = (PreciseDurationField)durationFieldType0.getField(gregorianChronology0);
29:       // Undeclared exception!
30:       try { 
31:         ((UnsupportedDurationField) preciseDurationField0).compareTo((DurationField) unsupportedDurationField0);
32:         fail("Expecting exception: IllegalArgumentException");
33:       
34:       } catch(IllegalArgumentException e) {
35:       }
36:   }
37: }
RegularFileObject[/tmp/EvoSuite_25_1627659822093/org/joda/time/field/UnsupportedDurationField_25_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Jul 30 15:43:42 GMT 2021
5:  */
6: 
7: package org.joda.time.field;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class UnsupportedDurationField_25_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "org.joda.time.field.UnsupportedDurationField"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
76:     java.lang.System.setProperty("user.dir", "/experiment"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:   }
79: 
80:   private static void initializeClasses() {
81:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(UnsupportedDurationField_25_tmp__ESTest_scaffolding.class.getClassLoader() ,
82:       "org.joda.time.DateTimeZone",
83:       "org.joda.time.tz.DateTimeZoneBuilder$Recurrence",
84:       "org.joda.time.DateTimeUtils$MillisProvider",
85:       "org.joda.time.chrono.GJYearOfEraDateTimeField",
86:       "org.joda.time.Seconds",
87:       "org.joda.time.field.RemainderDateTimeField",
88:       "org.joda.time.JodaTimePermission",
89:       "org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField",
90:       "org.joda.time.DateTimeFieldType",
91:       "org.joda.time.DateTimeFieldType$StandardDateTimeFieldType",
92:       "org.joda.time.ReadableInterval",
93:       "org.joda.time.chrono.BasicChronology$HalfdayField",
94:       "org.joda.time.chrono.LimitChronology$LimitDateTimeField",
95:       "org.joda.time.chrono.BasicChronology$YearInfo",
96:       "org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone",
97:       "org.joda.time.field.UnsupportedDurationField",
98:       "org.joda.time.field.SkipUndoDateTimeField",
99:       "org.joda.time.base.AbstractDateTime",
100:       "org.joda.time.format.PeriodFormatterBuilder",
101:       "org.joda.time.chrono.ISOChronology",
102:       "org.joda.time.field.DelegatedDateTimeField",
103:       "org.joda.time.base.BaseLocal",
104:       "org.joda.time.chrono.BasicChronology",
105:       "org.joda.time.chrono.BasicYearDateTimeField",
106:       "org.joda.time.format.PeriodFormatterBuilder$FieldFormatter",
107:       "org.joda.time.field.DividedDateTimeField",
108:       "org.joda.time.chrono.ZonedChronology",
109:       "org.joda.time.field.BaseDateTimeField",
110:       "org.joda.time.field.ZeroIsMaxDateTimeField",
111:       "org.joda.time.tz.CachedDateTimeZone$Info",
112:       "org.joda.time.Duration",
113:       "org.joda.time.format.PeriodFormatter",
114:       "org.joda.time.PeriodType",
115:       "org.joda.time.field.MillisDurationField",
116:       "org.joda.time.chrono.GJChronology",
117:       "org.joda.time.base.AbstractInstant",
118:       "org.joda.time.tz.DateTimeZoneBuilder",
119:       "org.joda.time.field.UnsupportedDateTimeField",
120:       "org.joda.time.field.ScaledDurationField",
121:       "org.joda.time.ReadWritablePeriod",
122:       "org.joda.time.field.PreciseDurationDateTimeField",
123:       "org.joda.time.MutablePeriod",
124:       "org.joda.time.LocalDateTime",
125:       "org.joda.time.tz.FixedDateTimeZone",
126:       "org.joda.time.format.PeriodPrinter",
127:       "org.joda.time.field.PreciseDateTimeField",
128:       "org.joda.time.tz.CachedDateTimeZone",
129:       "org.joda.time.chrono.LimitChronology$LimitException",
130:       "org.joda.time.ReadableDateTime",
131:       "org.joda.time.format.PeriodFormatterBuilder$Literal",
132:       "org.joda.time.format.PeriodParser",
133:       "org.joda.time.base.BaseDuration",
134:       "org.joda.time.field.DecoratedDateTimeField",
135:       "org.joda.time.chrono.GJChronology$CutoverField",
136:       "org.joda.time.field.OffsetDateTimeField",
137:       "org.joda.time.chrono.GJMonthOfYearDateTimeField",
138:       "org.joda.time.chrono.BasicWeekyearDateTimeField",
139:       "org.joda.time.Days",
140:       "org.joda.time.DateTimeField",
141:       "org.joda.time.field.FieldUtils",
142:       "org.joda.time.chrono.BasicSingleEraDateTimeField",
143:       "org.joda.time.field.SkipDateTimeField",
144:       "org.joda.time.chrono.LimitChronology",
145:       "org.joda.time.base.AbstractPeriod",
146:       "org.joda.time.ReadableInstant",
147:       "org.joda.time.base.BaseSingleFieldPeriod",
148:       "org.joda.time.chrono.GJDayOfWeekDateTimeField",
149:       "org.joda.time.DateTimeUtils$SystemMillisProvider",
150:       "org.joda.time.IllegalFieldValueException",
151:       "org.joda.time.IllegalInstantException",
152:       "org.joda.time.tz.DefaultNameProvider",
153:       "org.joda.time.tz.Provider",
154:       "org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField",
155:       "org.joda.time.ReadablePeriod",
156:       "org.joda.time.chrono.ZonedChronology$ZonedDateTimeField",
157:       "org.joda.time.chrono.GregorianChronology",
158:       "org.joda.time.chrono.AssembledChronology$Fields",
159:       "org.joda.time.DurationFieldType",
160:       "org.joda.time.tz.NameProvider",
161:       "org.joda.time.chrono.GJChronology$LinkedDurationField",
162:       "org.joda.time.Minutes",
163:       "org.joda.time.chrono.BasicMonthOfYearDateTimeField",
164:       "org.joda.time.base.AbstractPartial",
165:       "org.joda.time.base.AbstractDuration",
166:       "org.joda.time.DateTimeUtils",
167:       "org.joda.time.base.BaseDateTime",
168:       "org.joda.time.Hours",
169:       "org.joda.time.base.BasePeriod",
170:       "org.joda.time.field.DecoratedDurationField",
171:       "org.joda.time.tz.DateTimeZoneBuilder$DSTZone",
172:       "org.joda.time.chrono.AssembledChronology",
173:       "org.joda.time.format.ISOPeriodFormat",
174:       "org.joda.time.chrono.GJEraDateTimeField",
175:       "org.joda.time.tz.ZoneInfoProvider",
176:       "org.joda.time.DateTimeZone$1",
177:       "org.joda.time.chrono.BaseChronology",
178:       "org.joda.time.chrono.JulianChronology",
179:       "org.joda.time.field.ImpreciseDateTimeField",
180:       "org.joda.time.field.PreciseDurationField",
181:       "org.joda.time.Period",
182:       "org.joda.time.tz.DateTimeZoneBuilder$OfYear",
183:       "org.joda.time.ReadableDuration",
184:       "org.joda.time.chrono.BasicGJChronology",
185:       "org.joda.time.DurationField",
186:       "org.joda.time.format.DateTimeFormatter",
187:       "org.joda.time.Weeks",
188:       "org.joda.time.Chronology",
189:       "org.joda.time.format.PeriodFormatterBuilder$Composite",
190:       "org.joda.time.DateTime",
191:       "org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix",
192:       "org.joda.time.format.PeriodFormatterBuilder$SimpleAffix",
193:       "org.joda.time.chrono.BasicDayOfMonthDateTimeField",
194:       "org.joda.time.chrono.ZonedChronology$ZonedDurationField",
195:       "org.joda.time.format.PeriodFormatterBuilder$Separator",
196:       "org.joda.time.Instant",
197:       "org.joda.time.ReadablePartial",
198:       "org.joda.time.chrono.LimitChronology$LimitDurationField",
199:       "org.joda.time.DurationFieldType$StandardDurationFieldType",
200:       "org.joda.time.chrono.BasicDayOfYearDateTimeField",
201:       "org.joda.time.chrono.GJChronology$ImpreciseCutoverField",
202:       "org.joda.time.field.BaseDurationField",
203:       "org.joda.time.chrono.BuddhistChronology"
204:     );
205:   } 
206: 
207:   private static void resetClasses() {
208:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(UnsupportedDurationField_25_tmp__ESTest_scaffolding.class.getClassLoader()); 
209: 
210:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
211:       "org.joda.time.DurationField",
212:       "org.joda.time.field.UnsupportedDurationField",
213:       "org.joda.time.DurationFieldType$StandardDurationFieldType",
214:       "org.joda.time.DurationFieldType",
215:       "org.joda.time.Chronology",
216:       "org.joda.time.chrono.BaseChronology",
217:       "org.joda.time.chrono.AssembledChronology",
218:       "org.joda.time.field.MillisDurationField",
219:       "org.joda.time.field.BaseDurationField",
220:       "org.joda.time.field.PreciseDurationField",
221:       "org.joda.time.DateTimeField",
222:       "org.joda.time.field.BaseDateTimeField",
223:       "org.joda.time.field.PreciseDurationDateTimeField",
224:       "org.joda.time.field.PreciseDateTimeField",
225:       "org.joda.time.DateTimeFieldType$StandardDateTimeFieldType",
226:       "org.joda.time.DateTimeFieldType",
227:       "org.joda.time.field.DecoratedDateTimeField",
228:       "org.joda.time.field.ZeroIsMaxDateTimeField",
229:       "org.joda.time.chrono.BasicChronology$HalfdayField",
230:       "org.joda.time.chrono.BasicChronology",
231:       "org.joda.time.chrono.BasicFixedMonthChronology",
232:       "org.joda.time.chrono.BasicSingleEraDateTimeField",
233:       "org.joda.time.tz.FixedDateTimeZone",
234:       "org.joda.time.tz.ZoneInfoProvider",
235:       "org.joda.time.tz.DefaultNameProvider",
236:       "org.joda.time.DateTimeZone",
237:       "org.joda.time.chrono.AssembledChronology$Fields",
238:       "org.joda.time.field.ImpreciseDateTimeField",
239:       "org.joda.time.chrono.BasicYearDateTimeField",
240:       "org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField",
241:       "org.joda.time.chrono.GJYearOfEraDateTimeField",
242:       "org.joda.time.field.OffsetDateTimeField",
243:       "org.joda.time.field.DividedDateTimeField",
244:       "org.joda.time.field.DecoratedDurationField",
245:       "org.joda.time.field.ScaledDurationField",
246:       "org.joda.time.field.RemainderDateTimeField",
247:       "org.joda.time.chrono.GJEraDateTimeField",
248:       "org.joda.time.chrono.GJDayOfWeekDateTimeField",
249:       "org.joda.time.chrono.BasicDayOfMonthDateTimeField",
250:       "org.joda.time.chrono.BasicDayOfYearDateTimeField",
251:       "org.joda.time.chrono.BasicMonthOfYearDateTimeField",
252:       "org.joda.time.chrono.GJMonthOfYearDateTimeField",
253:       "org.joda.time.chrono.BasicWeekyearDateTimeField",
254:       "org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField",
255:       "org.joda.time.field.DelegatedDateTimeField",
256:       "org.joda.time.field.SkipDateTimeField",
257:       "org.joda.time.base.AbstractInstant",
258:       "org.joda.time.base.AbstractDateTime",
259:       "org.joda.time.base.BaseDateTime",
260:       "org.joda.time.DateTime",
261:       "org.joda.time.DateTimeUtils$SystemMillisProvider",
262:       "org.joda.time.tz.DateTimeZoneBuilder",
263:       "org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone",
264:       "org.joda.time.tz.DateTimeZoneBuilder$DSTZone",
265:       "org.joda.time.tz.DateTimeZoneBuilder$Recurrence",
266:       "org.joda.time.tz.DateTimeZoneBuilder$OfYear",
267:       "org.joda.time.tz.CachedDateTimeZone",
268:       "org.joda.time.DateTimeUtils",
269:       "org.joda.time.field.FieldUtils",
270:       "org.joda.time.chrono.BasicChronology$YearInfo",
271:       "org.joda.time.chrono.LimitChronology",
272:       "org.joda.time.chrono.LimitChronology$LimitDurationField",
273:       "org.joda.time.chrono.LimitChronology$LimitDateTimeField",
274:       "org.joda.time.chrono.EthiopicChronology",
275:       "org.joda.time.chrono.ZonedChronology",
276:       "org.joda.time.chrono.ZonedChronology$ZonedDurationField",
277:       "org.joda.time.chrono.ZonedChronology$ZonedDateTimeField",
278:       "org.joda.time.PeriodType",
279:       "org.joda.time.base.AbstractDuration",
280:       "org.joda.time.base.BaseDuration",
281:       "org.joda.time.Duration",
282:       "org.joda.time.base.BaseSingleFieldPeriod",
283:       "org.joda.time.format.ISOPeriodFormat",
284:       "org.joda.time.format.PeriodFormatterBuilder",
285:       "org.joda.time.format.PeriodFormatterBuilder$Literal",
286:       "org.joda.time.format.PeriodFormatterBuilder$FieldFormatter",
287:       "org.joda.time.format.PeriodFormatterBuilder$SimpleAffix",
288:       "org.joda.time.format.PeriodFormatterBuilder$Composite",
289:       "org.joda.time.format.PeriodFormatterBuilder$Separator",
290:       "org.joda.time.format.PeriodFormatter",
291:       "org.joda.time.Hours",
292:       "org.joda.time.base.AbstractPeriod",
293:       "org.joda.time.base.BasePeriod$1",
294:       "org.joda.time.base.BasePeriod",
295:       "org.joda.time.MutablePeriod",
296:       "org.joda.time.chrono.BasicGJChronology",
297:       "org.joda.time.chrono.GregorianChronology",
298:       "org.joda.time.chrono.ISOYearOfEraDateTimeField",
299:       "org.joda.time.chrono.ISOChronology",
300:       "org.joda.time.format.DateTimeFormatter",
301:       "org.joda.time.Instant",
302:       "org.joda.time.Weeks",
303:       "org.joda.time.format.FormatUtils",
304:       "org.joda.time.Days",
305:       "org.joda.time.Years",
306:       "org.joda.time.tz.UTCProvider",
307:       "org.joda.time.chrono.IslamicChronology$LeapYearPatternType",
308:       "org.joda.time.chrono.IslamicChronology",
309:       "org.joda.time.base.AbstractPartial",
310:       "org.joda.time.base.BasePartial",
311:       "org.joda.time.format.DateTimeFormatterBuilder",
312:       "org.joda.time.format.ISODateTimeFormat",
313:       "org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter",
314:       "org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber",
315:       "org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral",
316:       "org.joda.time.format.DateTimeFormatterBuilder$Composite",
317:       "org.joda.time.format.DateTimeFormatterBuilder$StringLiteral",
318:       "org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber",
319:       "org.joda.time.format.DateTimeFormatterBuilder$Fraction",
320:       "org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset",
321:       "org.joda.time.format.DateTimeFormatterBuilder$FixedNumber",
322:       "org.joda.time.format.DateTimeFormatterBuilder$MatchingParser",
323:       "org.joda.time.format.ISODateTimeFormat$Constants",
324:       "org.joda.time.format.DateTimeFormat$1",
325:       "org.joda.time.format.DateTimeFormat",
326:       "org.joda.time.MonthDay",
327:       "org.joda.time.format.DateTimeParserBucket",
328:       "org.joda.time.base.BaseLocal",
329:       "org.joda.time.LocalDateTime",
330:       "org.joda.time.LocalDate",
331:       "org.joda.time.Minutes",
332:       "org.joda.time.chrono.GJChronology",
333:       "org.joda.time.chrono.JulianChronology",
334:       "org.joda.time.chrono.GJChronology$CutoverField",
335:       "org.joda.time.chrono.GJChronology$ImpreciseCutoverField",
336:       "org.joda.time.chrono.GJChronology$LinkedDurationField",
337:       "org.joda.time.field.SkipUndoDateTimeField",
338:       "org.joda.time.chrono.BuddhistChronology",
339:       "org.joda.time.chrono.StrictChronology",
340:       "org.joda.time.field.StrictDateTimeField",
341:       "org.joda.time.Period",
342:       "org.joda.time.convert.ConverterManager",
343:       "org.joda.time.convert.ConverterSet",
344:       "org.joda.time.convert.AbstractConverter",
345:       "org.joda.time.convert.ReadableInstantConverter",
346:       "org.joda.time.convert.StringConverter",
347:       "org.joda.time.convert.CalendarConverter",
348:       "org.joda.time.convert.DateConverter",
349:       "org.joda.time.convert.LongConverter",
350:       "org.joda.time.convert.NullConverter",
351:       "org.joda.time.convert.ReadablePartialConverter",
352:       "org.joda.time.convert.ReadableDurationConverter",
353:       "org.joda.time.convert.ReadableIntervalConverter",
354:       "org.joda.time.convert.ReadablePeriodConverter",
355:       "org.joda.time.convert.ConverterSet$Entry",
356:       "org.joda.time.IllegalFieldValueException",
357:       "org.joda.time.Seconds",
358:       "org.joda.time.base.AbstractInterval",
359:       "org.joda.time.base.BaseInterval",
360:       "org.joda.time.MutableInterval",
361:       "org.joda.time.Partial",
362:       "org.joda.time.chrono.LenientChronology",
363:       "org.joda.time.field.LenientDateTimeField",
364:       "org.joda.time.chrono.CopticChronology",
365:       "org.joda.time.format.DateTimeParserBucket$SavedState",
366:       "org.joda.time.format.DateTimeParserBucket$SavedField",
367:       "org.joda.time.field.DelegatedDurationField",
368:       "org.joda.time.MutableDateTime",
369:       "org.joda.time.tz.CachedDateTimeZone$Info",
370:       "org.joda.time.Interval",
371:       "org.joda.time.field.UnsupportedDateTimeField",
372:       "org.joda.time.Months",
373:       "org.joda.time.DateTimeZone$1",
374:       "org.joda.time.LocalTime",
375:       "org.joda.time.YearMonth",
376:       "org.joda.time.field.AbstractReadableInstantFieldProperty",
377:       "org.joda.time.LocalDate$Property",
378:       "org.joda.time.format.DateTimeFormatterBuilder$TextField",
379:       "org.joda.time.LocalTime$Property",
380:       "org.joda.time.JodaTimePermission",
381:       "org.joda.time.field.AbstractPartialFieldProperty",
382:       "org.joda.time.MonthDay$Property",
383:       "org.joda.time.chrono.LimitChronology$LimitException",
384:       "org.joda.time.MutableDateTime$Property",
385:       "org.joda.time.DateTime$Property",
386:       "org.joda.time.LocalDateTime$Property",
387:       "org.joda.time.Partial$Property",
388:       "org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName"
389:     );
390:   }
391: }

[MASTER] 15:43:42.138 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
DurationFieldType durationFieldType0 = DurationFieldType.days();
UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
GregorianChronology gregorianChronology0 = GregorianChronology.getInstanceUTC();
PreciseDurationField preciseDurationField0 = (PreciseDurationField)durationFieldType0.getField(gregorianChronology0);
((UnsupportedDurationField) preciseDurationField0).compareTo((DurationField) unsupportedDurationField0);

[MASTER] 15:43:51.245 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 15:43:51.245 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.days();
GregorianChronology gregorianChronology0 = GregorianChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(gregorianChronology0);
durationField0.add(655L, 1);

[MASTER] 15:43:51.814 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 15:43:51.814 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.days();
GregorianChronology gregorianChronology0 = GregorianChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(gregorianChronology0);
durationField0.add(0L, 0L);

[MASTER] 15:43:52.144 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.ClassCastException: org.joda.time.field.PreciseDurationField cannot be cast to org.joda.time.field.UnsupportedDurationField
[MASTER] 15:43:52.145 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.days();
GregorianChronology gregorianChronology0 = GregorianChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(gregorianChronology0);
((UnsupportedDurationField) durationField0).equals(durationField0);

[MASTER] 15:43:52.796 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 15:43:52.796 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.days();
GregorianChronology gregorianChronology0 = GregorianChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(gregorianChronology0);
durationField0.getDifference(1L, 1L);

[MASTER] 15:43:53.117 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 15:43:53.117 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.days();
GregorianChronology gregorianChronology0 = GregorianChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(gregorianChronology0);
durationField0.getDifferenceAsLong(0L, 10000000000000000L);

[MASTER] 15:43:53.391 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 15:43:53.391 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.hours();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(buddhistChronology0);
durationField0.getMillis(1);

[MASTER] 15:43:53.679 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 15:43:53.679 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.seconds();
GregorianChronology gregorianChronology0 = GregorianChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(gregorianChronology0);
durationField0.getMillis(0, 15308640144L);

[MASTER] 15:43:53.950 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 15:43:53.950 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.days();
GregorianChronology gregorianChronology0 = GregorianChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(gregorianChronology0);
durationField0.getMillis(0L);

[MASTER] 15:43:54.241 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 15:43:54.241 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.days();
GregorianChronology gregorianChronology0 = GregorianChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(gregorianChronology0);
durationField0.getMillis(0L, 0L);

[MASTER] 15:43:54.524 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 15:43:54.524 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.days();
GregorianChronology gregorianChronology0 = GregorianChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(gregorianChronology0);
durationField0.getName();

[MASTER] 15:43:55.115 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 15:43:55.115 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.seconds();
GregorianChronology gregorianChronology0 = GregorianChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(gregorianChronology0);
durationField0.getType();

[MASTER] 15:43:55.389 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 15:43:55.390 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.days();
GregorianChronology gregorianChronology0 = GregorianChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(gregorianChronology0);
durationField0.getUnitMillis();

[MASTER] 15:43:55.766 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 15:43:55.766 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.days();
GregorianChronology gregorianChronology0 = GregorianChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(gregorianChronology0);
durationField0.getValue(0L);

[MASTER] 15:43:56.062 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 15:43:56.062 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.seconds();
GregorianChronology gregorianChronology0 = GregorianChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(gregorianChronology0);
durationField0.getValue(10080L, 10080L);

[MASTER] 15:43:56.370 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 15:43:56.370 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.days();
GregorianChronology gregorianChronology0 = GregorianChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(gregorianChronology0);
durationField0.getValueAsLong(0L);

[MASTER] 15:43:56.674 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 15:43:56.675 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.days();
GregorianChronology gregorianChronology0 = GregorianChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(gregorianChronology0);
durationField0.getValueAsLong(1800000L, 0L);

[MASTER] 15:43:57.021 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 15:43:57.021 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.days();
GregorianChronology gregorianChronology0 = GregorianChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(gregorianChronology0);
durationField0.isPrecise();

[MASTER] 15:43:57.305 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 15:43:57.305 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.seconds();
GregorianChronology gregorianChronology0 = GregorianChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(gregorianChronology0);
durationField0.isSupported();

[MASTER] 15:43:57.581 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 15:43:57.582 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.days();
GregorianChronology gregorianChronology0 = GregorianChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(gregorianChronology0);
durationField0.toString();

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing tests to file
* Writing JUnit test case 'UnsupportedDurationField_ESTest' to results/Time-2/org.joda.time.field.UnsupportedDurationField/BBC-F0-50/tests/25
* Done!

* Computation finished
