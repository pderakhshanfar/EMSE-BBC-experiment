* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-50
* Going to generate test cases for class: org.joda.time.field.UnsupportedDurationField
* Starting Client-0
* Connecting to master process on port 2115
* Analyzing classpath: 
  - subjects/buggy-versions/Time-2/target/classes
  - defects4j/framework/projects/Time/lib/org/joda/joda-convert/1.2/joda-convert-1.2.jar
* Finished analyzing classpath
* Generating tests for class org.joda.time.field.UnsupportedDurationField
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 246
* Using seed 3739403195
* Starting evolution
bbc usage percentage is: 50%
* Initial Number of Goals in DynaMOSA = 136 / 246
[MASTER] 08:05:57.331 [logback-2] ERROR TestCluster - Failed to check cache for java.time.temporal.TemporalQuery<R> : Type points to itself
* Search finished after 601s and 3859 generations, 1063308 statements, best individual has fitness: 105.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 41
* Number of covered goals: 39
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 88%
* Total number of goals: 34
* Number of covered goals: 30
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 35
* Number of covered goals: 35
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 90%
* Total number of goals: 29
* Number of covered goals: 26
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 20%
* Total number of goals: 64
* Number of covered goals: 13
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 45%
* Total number of goals: 22
* Number of covered goals: 10
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 88%
* Total number of goals: 34
* Number of covered goals: 30
* Generated 47 tests with total length 160
* Resulting test suite's coverage: 73% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 62%
* Compiling and checking tests
[MASTER] 08:14:05.647 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 08:14:18.817 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:14:18.818 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.halfdays();
GregorianChronology gregorianChronology0 = GregorianChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(gregorianChronology0);
durationField0.add(0L, (-299));

[MASTER] 08:14:19.826 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:14:19.828 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.weekyears();
GregorianChronology gregorianChronology0 = GregorianChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(gregorianChronology0);
durationField0.add(1L, 1L);

[MASTER] 08:14:20.483 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.ClassCastException: org.joda.time.chrono.ZonedChronology$ZonedDurationField cannot be cast to org.joda.time.field.UnsupportedDurationField
[MASTER] 08:14:20.483 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.months();
UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
GregorianChronology gregorianChronology0 = GregorianChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(gregorianChronology0);
((UnsupportedDurationField) durationField0).equals(unsupportedDurationField0);

[MASTER] 08:14:21.025 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:14:21.025 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.halfdays();
GregorianChronology gregorianChronology0 = GregorianChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(gregorianChronology0);
durationField0.getDifference(0L, 0L);

[MASTER] 08:14:21.497 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:14:21.498 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.months();
GregorianChronology gregorianChronology0 = GregorianChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(gregorianChronology0);
durationField0.getDifferenceAsLong(0L, (-3169L));

[MASTER] 08:14:22.283 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:14:22.284 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.halfdays();
GregorianChronology gregorianChronology0 = GregorianChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(gregorianChronology0);
durationField0.getMillis((-1279));

[MASTER] 08:14:22.719 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:14:22.720 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.years();
GregorianChronology gregorianChronology0 = GregorianChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(gregorianChronology0);
durationField0.getMillis(1963, 3567L);

[MASTER] 08:14:23.083 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:14:23.084 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.halfdays();
GregorianChronology gregorianChronology0 = GregorianChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(gregorianChronology0);
durationField0.getMillis((-141L));

[MASTER] 08:14:23.499 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:14:23.505 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.halfdays();
GregorianChronology gregorianChronology0 = GregorianChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(gregorianChronology0);
durationField0.getMillis(0L, 0L);

[MASTER] 08:14:24.011 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:14:24.012 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.years();
GregorianChronology gregorianChronology0 = GregorianChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(gregorianChronology0);
durationField0.getName();

[MASTER] 08:14:24.930 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:14:24.934 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.weeks();
GregorianChronology gregorianChronology0 = GregorianChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(gregorianChronology0);
durationField0.getUnitMillis();

[MASTER] 08:14:25.312 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:14:25.312 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.halfdays();
GregorianChronology gregorianChronology0 = GregorianChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(gregorianChronology0);
durationField0.getValue(0L);

[MASTER] 08:14:25.684 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:14:25.685 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.years();
GregorianChronology gregorianChronology0 = GregorianChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(gregorianChronology0);
durationField0.getValue(0L, 0L);

[MASTER] 08:14:26.011 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:14:26.011 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.halfdays();
GregorianChronology gregorianChronology0 = GregorianChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(gregorianChronology0);
durationField0.getValueAsLong((long) 34);

[MASTER] 08:14:26.437 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:14:26.437 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.halfdays();
GregorianChronology gregorianChronology0 = GregorianChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(gregorianChronology0);
durationField0.getValueAsLong((-1L), 0L);

[MASTER] 08:14:26.914 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:14:26.914 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.halfdays();
GregorianChronology gregorianChronology0 = GregorianChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(gregorianChronology0);
durationField0.hashCode();

[MASTER] 08:14:27.297 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:14:27.297 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.weeks();
GregorianChronology gregorianChronology0 = GregorianChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(gregorianChronology0);
durationField0.isPrecise();

[MASTER] 08:14:27.723 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:14:27.723 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.years();
GregorianChronology gregorianChronology0 = GregorianChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(gregorianChronology0);
durationField0.isSupported();

[MASTER] 08:14:28.025 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:14:28.027 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.years();
GregorianChronology gregorianChronology0 = GregorianChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(gregorianChronology0);
durationField0.toString();

* Writing tests to file
* Writing JUnit test case 'UnsupportedDurationField_ESTest' to results/Time-2/org.joda.time.field.UnsupportedDurationField/BBC-F0-50/tests/25
* Done!

* Computation finished
