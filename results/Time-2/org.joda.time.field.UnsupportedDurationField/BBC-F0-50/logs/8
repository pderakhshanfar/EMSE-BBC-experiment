* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-50
* Going to generate test cases for class: org.joda.time.field.UnsupportedDurationField
* Starting Client-0
* Connecting to master process on port 17116
* Analyzing classpath: 
  - subjects/buggy-versions/Time-2/target/classes
  - defects4j/framework/projects/Time/lib/org/joda/joda-convert/1.2/joda-convert-1.2.jar
* Finished analyzing classpath
* Generating tests for class org.joda.time.field.UnsupportedDurationField
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 246
* Using seed 4261074120
* Starting evolution
bbc usage percentage is: 50%
* Initial Number of Goals in DynaMOSA = 136 / 246
[MASTER] 15:32:33.890 [logback-2] ERROR TestCluster - Failed to check cache for java.time.temporal.TemporalQuery<R> : Type points to itself
[MASTER] 15:34:10.267 [logback-2] ERROR TestCluster - Failed to check cache for java.util.List<E> : Type points to itself
[MASTER] 15:36:30.799 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
Number of times BBC is called for org.joda.time.field.UnsupportedDurationField.equals(Ljava/lang/Object;)Z: I13 Branch 4 IFEQ L240 - false: 108
Number of times BBC is called for org.joda.time.field.UnsupportedDurationField.readResolve()Ljava/lang/Object;: Line 272: 676930
Number of times BBC is called for org.joda.time.field.UnsupportedDurationField.equals(Ljava/lang/Object;)Z: Line 238: 206
Number of times BBC is called for org.joda.time.field.UnsupportedDurationField.equals(Ljava/lang/Object;)Z: I23 Branch 5 IFNONNULL L242 - true: 24
Number of times BBC is called for org.joda.time.field.UnsupportedDurationField.getValueAsLong(J)J: Line 119: 34
Number of times BBC is called for org.joda.time.field.UnsupportedDurationField.compareTo(Lorg/joda/time/DurationField;)I: Line 227: 693
Number of times BBC is called for org.joda.time.field.UnsupportedDurationField.equals(Ljava/lang/Object;)Z: I23 Branch 5 IFNONNULL L242 - false: 350475
Number of times BBC is called for org.joda.time.field.UnsupportedDurationField.equals(Ljava/lang/Object;)Z: I4 Branch 3 IF_ACMPNE L238 - false: 206
Number of times BBC is called for org.joda.time.field.UnsupportedDurationField.equals(Ljava/lang/Object;)Z: I13 Branch 4 IFEQ L240 - true: 84
Number of times BBC is called for org.joda.time.field.UnsupportedDurationField.compareTo(Lorg/joda/time/DurationField;)I: root-Branch: 693
Number of times BBC is called for org.joda.time.field.UnsupportedDurationField.equals(Ljava/lang/Object;)Z: I28 Branch 6 IFNONNULL L243 - false: 350451
Number of times BBC is called for org.joda.time.field.UnsupportedDurationField.getValueAsLong(J)J: root-Branch: 34
Number of times BBC is called for org.joda.time.field.UnsupportedDurationField.readResolve()Ljava/lang/Object;: root-Branch: 676930
Number of times BBC is called for org.joda.time.field.UnsupportedDurationField.equals(Ljava/lang/Object;)Z: I4 Branch 3 IF_ACMPNE L238 - true: 287
Number of times BBC is called for org.joda.time.field.UnsupportedDurationField.equals(Ljava/lang/Object;)Z: I28 Branch 6 IFNONNULL L243 - true: 350451
Number of times BBC is called in total: 2407606
* Search finished after 601s and 6952 generations, 2004425 statements, best individual has fitness: 95.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 41
* Number of covered goals: 39
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 88%
* Total number of goals: 34
* Number of covered goals: 30
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 25
* Number of covered goals: 25
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 90%
* Total number of goals: 29
* Number of covered goals: 26
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 20%
* Total number of goals: 64
* Number of covered goals: 13
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 45%
* Total number of goals: 22
* Number of covered goals: 10
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 88%
* Total number of goals: 34
* Number of covered goals: 30
* Generated 38 tests with total length 137
* Resulting test suite's coverage: 73% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 66%
* Compiling and checking tests
[MASTER] 15:40:29.724 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 15:40:29.724 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.days();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(buddhistChronology0);
durationField0.add((-1L), 0L);

[MASTER] 15:40:30.037 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.ClassCastException: org.joda.time.field.PreciseDurationField cannot be cast to org.joda.time.field.UnsupportedDurationField
[MASTER] 15:40:30.037 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.hours();
JulianChronology julianChronology0 = JulianChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(julianChronology0);
((UnsupportedDurationField) durationField0).equals(durationFieldType0);

[MASTER] 15:40:30.390 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 15:40:30.390 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.days();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(buddhistChronology0);
durationField0.getDifference(1, 0L);

[MASTER] 15:40:30.714 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 15:40:30.714 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.days();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(buddhistChronology0);
durationField0.getMillis(908);

[MASTER] 15:40:31.033 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 15:40:31.033 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.days();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(buddhistChronology0);
durationField0.getMillis((long) Integer.MIN_VALUE);

[MASTER] 15:40:31.767 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 15:40:31.767 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.days();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(buddhistChronology0);
durationField0.getUnitMillis();

[MASTER] 15:40:32.165 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 15:40:32.165 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.days();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(buddhistChronology0);
durationField0.getValue(0L);

[MASTER] 15:40:32.478 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 15:40:32.478 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.days();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(buddhistChronology0);
durationField0.getValue((long) Integer.MIN_VALUE, 28L);

[MASTER] 15:40:32.835 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 15:40:32.836 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.days();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(buddhistChronology0);
durationField0.isPrecise();

[MASTER] 15:40:33.165 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 15:40:33.165 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.days();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(buddhistChronology0);
durationField0.isSupported();

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing tests to file
* Writing JUnit test case 'UnsupportedDurationField_ESTest' to results/Time-2/org.joda.time.field.UnsupportedDurationField/BBC-F0-50/tests/8
* Done!

* Computation finished
