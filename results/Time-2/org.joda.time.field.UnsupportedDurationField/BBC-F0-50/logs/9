* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-50
* Going to generate test cases for class: org.joda.time.field.UnsupportedDurationField
* Starting Client-0
* Connecting to master process on port 4212
* Analyzing classpath: 
  - subjects/buggy-versions/Time-2/target/classes
  - defects4j/framework/projects/Time/lib/org/joda/joda-convert/1.2/joda-convert-1.2.jar
* Finished analyzing classpath
* Generating tests for class org.joda.time.field.UnsupportedDurationField
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 246
* Using seed 450405782
* Starting evolution
bbc usage percentage is: 50%
* Initial Number of Goals in DynaMOSA = 136 / 246
[MASTER] 07:57:54.811 [logback-2] ERROR TestCluster - Failed to check cache for java.time.temporal.TemporalQuery<R> : Type points to itself
[MASTER] 08:05:45.516 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 601s and 4055 generations, 1141796 statements, best individual has fitness: 110.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 41
* Number of covered goals: 39
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 88%
* Total number of goals: 34
* Number of covered goals: 30
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 35
* Number of covered goals: 35
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 90%
* Total number of goals: 29
* Number of covered goals: 26
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 20%
* Total number of goals: 64
* Number of covered goals: 13
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 45%
* Total number of goals: 22
* Number of covered goals: 10
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 88%
* Total number of goals: 34
* Number of covered goals: 30
* Generated 48 tests with total length 166
* Resulting test suite's coverage: 72% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 76%
* Compiling and checking tests
[MASTER] 08:06:28.255 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 08:06:44.578 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:06:44.579 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.months();
GregorianChronology gregorianChronology0 = GregorianChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(gregorianChronology0);
durationField0.add(837L, 945);

[MASTER] 08:06:46.531 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:06:46.532 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.months();
GregorianChronology gregorianChronology0 = GregorianChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(gregorianChronology0);
durationField0.add((long) 945, (long) 945);

[MASTER] 08:06:47.111 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.ClassCastException: org.joda.time.chrono.ZonedChronology$ZonedDurationField cannot be cast to org.joda.time.field.UnsupportedDurationField
[MASTER] 08:06:47.114 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.weekyears();
GregorianChronology gregorianChronology0 = GregorianChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(gregorianChronology0);
((UnsupportedDurationField) durationField0).equals(durationField0);

[MASTER] 08:06:48.092 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:06:48.095 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.years();
GregorianChronology gregorianChronology0 = GregorianChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(gregorianChronology0);
durationField0.getDifference(3781L, 3781L);

[MASTER] 08:06:48.664 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:06:48.664 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.millis();
GregorianChronology gregorianChronology0 = GregorianChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(gregorianChronology0);
durationField0.getDifferenceAsLong(2217L, 1400L);

[MASTER] 08:06:49.512 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:06:49.513 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.months();
GregorianChronology gregorianChronology0 = GregorianChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(gregorianChronology0);
durationField0.getMillis(978);

[MASTER] 08:06:50.103 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:06:50.104 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.centuries();
IslamicChronology islamicChronology0 = IslamicChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(islamicChronology0);
durationField0.getMillis(7, (long) 7);

[MASTER] 08:06:50.991 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:06:50.991 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.months();
GregorianChronology gregorianChronology0 = GregorianChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(gregorianChronology0);
durationField0.getMillis(0L);

[MASTER] 08:06:51.470 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:06:51.470 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.millis();
GregorianChronology gregorianChronology0 = GregorianChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(gregorianChronology0);
durationField0.getMillis(1400L, 2217L);

[MASTER] 08:06:52.109 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:06:52.109 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.centuries();
GregorianChronology gregorianChronology0 = GregorianChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(gregorianChronology0);
durationField0.getName();

[MASTER] 08:06:52.571 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:06:52.571 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.days();
GregorianChronology gregorianChronology0 = GregorianChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(gregorianChronology0);
durationField0.getType();

[MASTER] 08:06:53.306 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:06:53.308 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.years();
GregorianChronology gregorianChronology0 = GregorianChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(gregorianChronology0);
durationField0.getUnitMillis();

[MASTER] 08:06:53.795 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:06:53.796 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.millis();
JulianChronology julianChronology0 = JulianChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(julianChronology0);
durationField0.getValue(0L);

[MASTER] 08:06:54.358 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:06:54.358 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.months();
GregorianChronology gregorianChronology0 = GregorianChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(gregorianChronology0);
durationField0.getValue((-1L), (-1L));

[MASTER] 08:06:55.133 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:06:55.133 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.millis();
GregorianChronology gregorianChronology0 = GregorianChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(gregorianChronology0);
durationField0.getValueAsLong((-85L));

[MASTER] 08:06:55.512 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:06:55.512 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.millis();
GregorianChronology gregorianChronology0 = GregorianChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(gregorianChronology0);
durationField0.getValueAsLong(0L, 0L);

[MASTER] 08:06:56.614 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:06:56.614 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.weekyears();
GregorianChronology gregorianChronology0 = GregorianChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(gregorianChronology0);
durationField0.isPrecise();

[MASTER] 08:06:57.109 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:06:57.110 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.millis();
GregorianChronology gregorianChronology0 = GregorianChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(gregorianChronology0);
durationField0.isSupported();

[MASTER] 08:06:57.770 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:06:57.771 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.millis();
GregorianChronology gregorianChronology0 = GregorianChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(gregorianChronology0);
durationField0.toString();

* Writing tests to file
* Writing JUnit test case 'UnsupportedDurationField_ESTest' to results/Time-2/org.joda.time.field.UnsupportedDurationField/BBC-F0-50/tests/9
* Done!

* Computation finished
