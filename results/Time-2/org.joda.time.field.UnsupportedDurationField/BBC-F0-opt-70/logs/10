* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-70
* Going to generate test cases for class: org.joda.time.field.UnsupportedDurationField
* Starting Client-0
* Connecting to master process on port 14845
* Analyzing classpath: 
  - subjects/buggy-versions/Time-2/target/classes
  - defects4j/framework/projects/Time/lib/org/joda/joda-convert/1.2/joda-convert-1.2.jar
* Finished analyzing classpath
* Generating tests for class org.joda.time.field.UnsupportedDurationField
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 246
* Using seed 791376462
* Starting evolution
bbc usage percentage is: 70%
* Initial Number of Goals in DynaMOSA = 136 / 246
[MASTER] 09:19:57.002 [logback-2] ERROR TestCluster - Failed to check cache for java.time.temporal.TemporalQuery<R> : Type points to itself
* Search finished after 601s and 6533 generations, 1707153 statements, best individual has fitness: 110.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 41
* Number of covered goals: 39
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 88%
* Total number of goals: 34
* Number of covered goals: 30
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 34
* Number of covered goals: 34
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 90%
* Total number of goals: 29
* Number of covered goals: 26
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 20%
* Total number of goals: 64
* Number of covered goals: 13
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 45%
* Total number of goals: 22
* Number of covered goals: 10
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 88%
* Total number of goals: 34
* Number of covered goals: 30
* Generated 47 tests with total length 178
* Resulting test suite's coverage: 72% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 66%
* Compiling and checking tests
[MASTER] 09:26:18.222 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 09:26:26.929 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 09:26:26.929 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.halfdays();
DateTimeZone dateTimeZone0 = DateTimeZone.getDefault();
ISOChronology iSOChronology0 = ISOChronology.getInstance(dateTimeZone0);
DurationField durationField0 = durationFieldType0.getField(iSOChronology0);
durationField0.add(63072000000L, 0);

[MASTER] 09:26:27.289 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 09:26:27.289 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.halfdays();
DateTimeZone dateTimeZone0 = DateTimeZone.getDefault();
ISOChronology iSOChronology0 = ISOChronology.getInstance(dateTimeZone0);
DurationField durationField0 = durationFieldType0.getField(iSOChronology0);
durationField0.add(0L, 0L);

[MASTER] 09:26:27.642 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.ClassCastException: org.joda.time.chrono.ZonedChronology$ZonedDurationField cannot be cast to org.joda.time.field.UnsupportedDurationField
[MASTER] 09:26:27.642 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.hours();
UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
ISOChronology iSOChronology0 = ISOChronology.getInstance();
UnsupportedDurationField unsupportedDurationField1 = (UnsupportedDurationField)durationFieldType0.getField(iSOChronology0);
unsupportedDurationField1.compareTo((DurationField) unsupportedDurationField0);

[MASTER] 09:26:27.983 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.ClassCastException: org.joda.time.chrono.ZonedChronology$ZonedDurationField cannot be cast to org.joda.time.field.UnsupportedDurationField
[MASTER] 09:26:27.983 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.halfdays();
DateTimeZone dateTimeZone0 = DateTimeZone.getDefault();
ISOChronology iSOChronology0 = ISOChronology.getInstance(dateTimeZone0);
DurationField durationField0 = durationFieldType0.getField(iSOChronology0);
((UnsupportedDurationField) durationField0).equals((Object) null);

[MASTER] 09:26:28.639 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 09:26:28.639 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.minutes();
DateTimeZone dateTimeZone0 = DateTimeZone.getDefault();
ISOChronology iSOChronology0 = ISOChronology.getInstance(dateTimeZone0);
DurationField durationField0 = durationFieldType0.getField(iSOChronology0);
durationField0.getDifference((-318L), (-318L));

[MASTER] 09:26:28.970 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 09:26:28.971 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.halfdays();
DateTimeZone dateTimeZone0 = DateTimeZone.getDefault();
ISOChronology iSOChronology0 = ISOChronology.getInstance(dateTimeZone0);
DurationField durationField0 = durationFieldType0.getField(iSOChronology0);
durationField0.getDifferenceAsLong((-2629L), 1227L);

[MASTER] 09:26:29.318 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 09:26:29.318 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.halfdays();
DateTimeZone dateTimeZone0 = DateTimeZone.getDefault();
ISOChronology iSOChronology0 = ISOChronology.getInstance(dateTimeZone0);
DurationField durationField0 = durationFieldType0.getField(iSOChronology0);
durationField0.getMillis(3215);

[MASTER] 09:26:29.646 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 09:26:29.646 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.halfdays();
DateTimeZone dateTimeZone0 = DateTimeZone.getDefault();
ISOChronology iSOChronology0 = ISOChronology.getInstance(dateTimeZone0);
DurationField durationField0 = durationFieldType0.getField(iSOChronology0);
durationField0.getMillis(1, (-137L));

[MASTER] 09:26:30.066 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockArithmeticException: Multiplication overflows a long: 918518400000 * 43200000
[MASTER] 09:26:30.066 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.halfdays();
DateTimeZone dateTimeZone0 = DateTimeZone.getDefault();
ISOChronology iSOChronology0 = ISOChronology.getInstance(dateTimeZone0);
DurationField durationField0 = durationFieldType0.getField(iSOChronology0);
durationField0.getMillis(918518400000L);

[MASTER] 09:26:30.423 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 09:26:30.423 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.halfdays();
DateTimeZone dateTimeZone0 = DateTimeZone.getDefault();
ISOChronology iSOChronology0 = ISOChronology.getInstance(dateTimeZone0);
DurationField durationField0 = durationFieldType0.getField(iSOChronology0);
durationField0.getMillis((-318L), (long) 0);

[MASTER] 09:26:30.767 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 09:26:30.767 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.halfdays();
DateTimeZone dateTimeZone0 = DateTimeZone.getDefault();
ISOChronology iSOChronology0 = ISOChronology.getInstance(dateTimeZone0);
DurationField durationField0 = durationFieldType0.getField(iSOChronology0);
durationField0.getName();

[MASTER] 09:26:31.120 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 09:26:31.121 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.halfdays();
DateTimeZone dateTimeZone0 = DateTimeZone.getDefault();
ISOChronology iSOChronology0 = ISOChronology.getInstance(dateTimeZone0);
DurationField durationField0 = durationFieldType0.getField(iSOChronology0);
durationField0.getUnitMillis();

[MASTER] 09:26:31.437 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 09:26:31.437 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.halfdays();
DateTimeZone dateTimeZone0 = DateTimeZone.getDefault();
ISOChronology iSOChronology0 = ISOChronology.getInstance(dateTimeZone0);
DurationField durationField0 = durationFieldType0.getField(iSOChronology0);
durationField0.getValue((-2290L));

[MASTER] 09:26:31.789 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 09:26:31.790 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.halfdays();
DateTimeZone dateTimeZone0 = DateTimeZone.getDefault();
ISOChronology iSOChronology0 = ISOChronology.getInstance(dateTimeZone0);
DurationField durationField0 = durationFieldType0.getField(iSOChronology0);
durationField0.getValue(216L, 31557600000L);

[MASTER] 09:26:32.132 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 09:26:32.132 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.halfdays();
DateTimeZone dateTimeZone0 = DateTimeZone.getDefault();
ISOChronology iSOChronology0 = ISOChronology.getInstance(dateTimeZone0);
DurationField durationField0 = durationFieldType0.getField(iSOChronology0);
durationField0.getValueAsLong((-318L));

[MASTER] 09:26:32.464 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 09:26:32.464 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.halfdays();
DateTimeZone dateTimeZone0 = DateTimeZone.getDefault();
ISOChronology iSOChronology0 = ISOChronology.getInstance(dateTimeZone0);
DurationField durationField0 = durationFieldType0.getField(iSOChronology0);
durationField0.getValueAsLong(216L, 531L);

[MASTER] 09:26:32.782 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 09:26:32.783 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.halfdays();
DateTimeZone dateTimeZone0 = DateTimeZone.getDefault();
ISOChronology iSOChronology0 = ISOChronology.getInstance(dateTimeZone0);
DurationField durationField0 = durationFieldType0.getField(iSOChronology0);
durationField0.isPrecise();

[MASTER] 09:26:33.114 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 09:26:33.115 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.halfdays();
DateTimeZone dateTimeZone0 = DateTimeZone.getDefault();
ISOChronology iSOChronology0 = ISOChronology.getInstance(dateTimeZone0);
DurationField durationField0 = durationFieldType0.getField(iSOChronology0);
durationField0.isSupported();

[MASTER] 09:26:33.445 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 09:26:33.446 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.halfdays();
DateTimeZone dateTimeZone0 = DateTimeZone.getDefault();
ISOChronology iSOChronology0 = ISOChronology.getInstance(dateTimeZone0);
DurationField durationField0 = durationFieldType0.getField(iSOChronology0);
durationField0.toString();

* Writing tests to file
* Writing JUnit test case 'UnsupportedDurationField_ESTest' to results/Time-2/org.joda.time.field.UnsupportedDurationField/BBC-F0-opt-70/tests/10
* Done!

* Computation finished
