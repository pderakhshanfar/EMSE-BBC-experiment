* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-100
* Going to generate test cases for class: org.joda.time.field.UnsupportedDurationField
* Starting Client-0
* Connecting to master process on port 10418
* Analyzing classpath: 
  - subjects/buggy-versions/Time-2/target/classes
  - defects4j/framework/projects/Time/lib/org/joda/joda-convert/1.2/joda-convert-1.2.jar
* Finished analyzing classpath
* Generating tests for class org.joda.time.field.UnsupportedDurationField
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 246
* Using seed 4117666044
* Starting evolution
bbc usage percentage is: 100%
* Initial Number of Goals in DynaMOSA = 136 / 246
[MASTER] 03:21:34.619 [logback-2] ERROR TestCluster - Failed to check cache for java.time.temporal.TemporalQuery<R> : Type points to itself
Number of times BBC is called, activated, and useful for org.joda.time.field.UnsupportedDurationField.readResolve()Ljava/lang/Object;: Line 272: 818852,742545,0| Number of FF evals: 404424
Number of times BBC is called, activated, and useful for org.joda.time.field.UnsupportedDurationField.add(JI)J: Line 182: 208,0,0| Number of FF evals: 129
Number of times BBC is called, activated, and useful for org.joda.time.field.UnsupportedDurationField.equals(Ljava/lang/Object;)Z: Line 238: 117,0,0| Number of FF evals: 93
Number of times BBC is called, activated, and useful for org.joda.time.field.UnsupportedDurationField.compareTo(Lorg/joda/time/DurationField;)I: Line 227: 36,0,0| Number of FF evals: 77
Number of times BBC is called, activated, and useful for org.joda.time.field.UnsupportedDurationField.getValueAsLong(JJ)J: Line 137: 36,0,0| Number of FF evals: 82
Number of times BBC is called, activated, and useful for org.joda.time.field.UnsupportedDurationField.equals(Ljava/lang/Object;)Z: I23 Branch 5 IFNONNULL L242 - false: 458504,418550,88407| Number of FF evals: 404394
Number of times BBC is called, activated, and useful for org.joda.time.field.UnsupportedDurationField.getType()Lorg/joda/time/DurationFieldType;: root-Branch: 36,0,0| Number of FF evals: 4841
Number of times BBC is called, activated, and useful for org.joda.time.field.UnsupportedDurationField.equals(Ljava/lang/Object;)Z: I4 Branch 3 IF_ACMPNE L238 - false: 239,0,0| Number of FF evals: 51368
Number of times BBC is called, activated, and useful for org.joda.time.field.UnsupportedDurationField.equals(Ljava/lang/Object;)Z: I13 Branch 4 IFEQ L240 - true: 61,0,0| Number of FF evals: 118268
Number of times BBC is called, activated, and useful for org.joda.time.field.UnsupportedDurationField.getValueAsLong(JJ)J: root-Branch: 36,0,0| Number of FF evals: 10802
Number of times BBC is called, activated, and useful for org.joda.time.field.UnsupportedDurationField.compareTo(Lorg/joda/time/DurationField;)I: root-Branch: 36,0,0| Number of FF evals: 5879
Number of times BBC is called, activated, and useful for org.joda.time.field.UnsupportedDurationField.equals(Ljava/lang/Object;)Z: I28 Branch 6 IFNONNULL L243 - false: 458504,418550,88405| Number of FF evals: 404394
Number of times BBC is called, activated, and useful for org.joda.time.field.UnsupportedDurationField.getMillis(J)J: root-Branch: 36,0,0| Number of FF evals: 12289
Number of times BBC is called, activated, and useful for org.joda.time.field.UnsupportedDurationField.getType()Lorg/joda/time/DurationFieldType;: Line 79: 36,0,0| Number of FF evals: 46
Number of times BBC is called, activated, and useful for org.joda.time.field.UnsupportedDurationField.getMillis(J)J: Line 155: 36,0,0| Number of FF evals: 51
Number of times BBC is called, activated, and useful for org.joda.time.field.UnsupportedDurationField.readResolve()Ljava/lang/Object;: root-Branch: 818852,742545,0| Number of FF evals: 404424
Number of times BBC is called, activated, and useful for org.joda.time.field.UnsupportedDurationField.add(JI)J: root-Branch: 208,0,0| Number of FF evals: 12414
Number of times BBC is called, activated, and useful for org.joda.time.field.UnsupportedDurationField.equals(Ljava/lang/Object;)Z: I4 Branch 3 IF_ACMPNE L238 - true: 117,0,0| Number of FF evals: 141023
Number of times BBC is called, activated, and useful for org.joda.time.field.UnsupportedDurationField.equals(Ljava/lang/Object;)Z: I28 Branch 6 IFNONNULL L243 - true: 458504,418550,88366| Number of FF evals: 404394
* Search finished after 601s and 8458 generations, 2588362 statements, best individual has fitness: 108.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 41
* Number of covered goals: 39
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 88%
* Total number of goals: 34
* Number of covered goals: 30
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 34
* Number of covered goals: 34
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 90%
* Total number of goals: 29
* Number of covered goals: 26
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 20%
* Total number of goals: 64
* Number of covered goals: 13
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 45%
* Total number of goals: 22
* Number of covered goals: 10
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 88%
* Total number of goals: 34
* Number of covered goals: 30
* Generated 47 tests with total length 204
* Resulting test suite's coverage: 72% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 66%
* Compiling and checking tests
[MASTER] 03:30:01.668 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:30:09.025 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 03:30:09.025 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.minutes();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance();
DateTimeZone dateTimeZone0 = buddhistChronology0.getZone();
GJChronology gJChronology0 = GJChronology.getInstance(dateTimeZone0, (long) 1, 1);
DurationField durationField0 = durationFieldType0.getField(gJChronology0);
durationField0.add((long) 1, 1);

[MASTER] 03:30:09.276 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 03:30:09.277 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.centuries();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance();
DateTimeZone dateTimeZone0 = buddhistChronology0.getZone();
GJChronology gJChronology0 = GJChronology.getInstance(dateTimeZone0, (long) 1, 1);
DurationField durationField0 = durationFieldType0.getField(gJChronology0);
durationField0.add(1750L, 1750L);

[MASTER] 03:30:09.558 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.ClassCastException: org.joda.time.chrono.ZonedChronology$ZonedDurationField cannot be cast to org.joda.time.field.UnsupportedDurationField
[MASTER] 03:30:09.558 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.minutes();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance();
DateTimeZone dateTimeZone0 = buddhistChronology0.getZone();
GJChronology gJChronology0 = GJChronology.getInstance(dateTimeZone0, (long) 1, 1);
DurationField durationField0 = durationFieldType0.getField(gJChronology0);
((UnsupportedDurationField) durationField0).equals(durationFieldType0);

[MASTER] 03:30:09.807 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 03:30:09.807 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.centuries();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance();
DateTimeZone dateTimeZone0 = buddhistChronology0.getZone();
GJChronology gJChronology0 = GJChronology.getInstance(dateTimeZone0, (long) 1, 1);
DurationField durationField0 = durationFieldType0.getField(gJChronology0);
durationField0.getDifference(1, 1);

[MASTER] 03:30:10.065 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 03:30:10.066 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.minutes();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance();
DateTimeZone dateTimeZone0 = buddhistChronology0.getZone();
GJChronology gJChronology0 = GJChronology.getInstance(dateTimeZone0, (long) 1, 1);
DurationField durationField0 = durationFieldType0.getField(gJChronology0);
durationField0.getDifferenceAsLong(1, (-1208L));

[MASTER] 03:30:10.317 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 03:30:10.317 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.minutes();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance();
DateTimeZone dateTimeZone0 = buddhistChronology0.getZone();
GJChronology gJChronology0 = GJChronology.getInstance(dateTimeZone0, (long) 1, 1);
DurationField durationField0 = durationFieldType0.getField(gJChronology0);
durationField0.getMillis(1);

[MASTER] 03:30:10.562 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 03:30:10.562 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.centuries();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance();
DateTimeZone dateTimeZone0 = buddhistChronology0.getZone();
GJChronology gJChronology0 = GJChronology.getInstance(dateTimeZone0, (long) 1, 1);
DurationField durationField0 = durationFieldType0.getField(gJChronology0);
durationField0.getMillis(0, (-976L));

[MASTER] 03:30:10.807 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 03:30:10.807 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.minutes();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance();
DateTimeZone dateTimeZone0 = buddhistChronology0.getZone();
GJChronology gJChronology0 = GJChronology.getInstance(dateTimeZone0, (long) 1, 1);
DurationField durationField0 = durationFieldType0.getField(gJChronology0);
durationField0.getMillis((long) 1);

[MASTER] 03:30:11.119 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 03:30:11.119 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.minutes();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance();
DateTimeZone dateTimeZone0 = buddhistChronology0.getZone();
GJChronology gJChronology0 = GJChronology.getInstance(dateTimeZone0, (long) 1, 1);
DurationField durationField0 = durationFieldType0.getField(gJChronology0);
durationField0.getMillis((-2284L), (long) 1);

[MASTER] 03:30:11.383 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 03:30:11.383 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.minutes();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance();
DateTimeZone dateTimeZone0 = buddhistChronology0.getZone();
GJChronology gJChronology0 = GJChronology.getInstance(dateTimeZone0, (long) 1, 1);
DurationField durationField0 = durationFieldType0.getField(gJChronology0);
durationField0.getName();

[MASTER] 03:30:11.648 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 03:30:11.648 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.centuries();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance();
DateTimeZone dateTimeZone0 = buddhistChronology0.getZone();
GJChronology gJChronology0 = GJChronology.getInstance(dateTimeZone0, (long) 1, 1);
DurationField durationField0 = durationFieldType0.getField(gJChronology0);
durationField0.getUnitMillis();

[MASTER] 03:30:11.890 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 03:30:11.890 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.centuries();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance();
DateTimeZone dateTimeZone0 = buddhistChronology0.getZone();
GJChronology gJChronology0 = GJChronology.getInstance(dateTimeZone0, (long) 1, 1);
DurationField durationField0 = durationFieldType0.getField(gJChronology0);
durationField0.getValue((long) 1);

[MASTER] 03:30:12.187 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 03:30:12.187 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.minutes();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance();
DateTimeZone dateTimeZone0 = buddhistChronology0.getZone();
GJChronology gJChronology0 = GJChronology.getInstance(dateTimeZone0, (long) 1, 1);
DurationField durationField0 = durationFieldType0.getField(gJChronology0);
durationField0.getValue((long) 1, (long) 1);

[MASTER] 03:30:12.468 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 03:30:12.468 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.centuries();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance();
DateTimeZone dateTimeZone0 = buddhistChronology0.getZone();
GJChronology gJChronology0 = GJChronology.getInstance(dateTimeZone0, (long) 1, 1);
DurationField durationField0 = durationFieldType0.getField(gJChronology0);
durationField0.getValueAsLong((-1141L));

[MASTER] 03:30:12.724 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 03:30:12.724 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.minutes();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance();
DateTimeZone dateTimeZone0 = buddhistChronology0.getZone();
GJChronology gJChronology0 = GJChronology.getInstance(dateTimeZone0, (long) 1, 1);
DurationField durationField0 = durationFieldType0.getField(gJChronology0);
durationField0.getValueAsLong(0L, (long) 1);

[MASTER] 03:30:13.062 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 03:30:13.062 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.minutes();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance();
DateTimeZone dateTimeZone0 = buddhistChronology0.getZone();
GJChronology gJChronology0 = GJChronology.getInstance(dateTimeZone0, (long) 1, 1);
DurationField durationField0 = durationFieldType0.getField(gJChronology0);
durationField0.isPrecise();

[MASTER] 03:30:13.312 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 03:30:13.312 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.minutes();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance();
DateTimeZone dateTimeZone0 = buddhistChronology0.getZone();
GJChronology gJChronology0 = GJChronology.getInstance(dateTimeZone0, (long) 1, 1);
DurationField durationField0 = durationFieldType0.getField(gJChronology0);
durationField0.isSupported();

[MASTER] 03:30:13.643 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 03:30:13.643 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.minutes();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance();
DateTimeZone dateTimeZone0 = buddhistChronology0.getZone();
GJChronology gJChronology0 = GJChronology.getInstance(dateTimeZone0, (long) 1, 1);
DurationField durationField0 = durationFieldType0.getField(gJChronology0);
durationField0.toString();

* Writing tests to file
* Writing JUnit test case 'UnsupportedDurationField_ESTest' to results/Time-2/org.joda.time.field.UnsupportedDurationField/BBC-F0-100/tests/22
* Done!

* Computation finished
