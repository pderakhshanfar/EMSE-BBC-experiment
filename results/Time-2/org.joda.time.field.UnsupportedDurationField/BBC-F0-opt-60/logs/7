* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-60
* Going to generate test cases for class: org.joda.time.field.UnsupportedDurationField
* Starting Client-0
* Connecting to master process on port 12631
* Analyzing classpath: 
  - subjects/buggy-versions/Time-2/target/classes
  - defects4j/framework/projects/Time/lib/org/joda/joda-convert/1.2/joda-convert-1.2.jar
* Finished analyzing classpath
* Generating tests for class org.joda.time.field.UnsupportedDurationField
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 246
* Using seed 4099486854
* Starting evolution
bbc usage percentage is: 60%
* Initial Number of Goals in DynaMOSA = 136 / 246
[MASTER] 09:13:25.909 [logback-2] ERROR TestCluster - Failed to check cache for java.time.temporal.TemporalQuery<R> : Type points to itself
[MASTER] 09:20:11.204 [logback-2] ERROR TestCluster - Failed to check cache for java.util.List<E> : Type points to itself
[MASTER] 09:21:40.446 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 601s and 6459 generations, 1671993 statements, best individual has fitness: 109.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 41
* Number of covered goals: 39
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 88%
* Total number of goals: 34
* Number of covered goals: 30
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 35
* Number of covered goals: 35
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 90%
* Total number of goals: 29
* Number of covered goals: 26
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 20%
* Total number of goals: 64
* Number of covered goals: 13
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 45%
* Total number of goals: 22
* Number of covered goals: 10
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 88%
* Total number of goals: 34
* Number of covered goals: 30
* Generated 47 tests with total length 157
* Resulting test suite's coverage: 72% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 62%
* Compiling and checking tests
[MASTER] 09:22:57.189 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 09:23:05.820 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 09:23:05.820 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.weekyears();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(buddhistChronology0);
durationField0.add(222L, 1);

[MASTER] 09:23:06.203 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockArithmeticException: Value cannot fit in an int: -7005398401974
[MASTER] 09:23:06.203 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.weekyears();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(buddhistChronology0);
durationField0.add((-7005398401974L), (-7005398401974L));

[MASTER] 09:23:06.566 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.ClassCastException: org.joda.time.chrono.LimitChronology$LimitDurationField cannot be cast to org.joda.time.field.UnsupportedDurationField
[MASTER] 09:23:06.567 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.weekyears();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
UnsupportedDurationField unsupportedDurationField0 = (UnsupportedDurationField)durationFieldType0.getField(buddhistChronology0);
unsupportedDurationField0.compareTo((DurationField) unsupportedDurationField0);

[MASTER] 09:23:06.962 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.ClassCastException: org.joda.time.chrono.LimitChronology$LimitDurationField cannot be cast to org.joda.time.field.UnsupportedDurationField
[MASTER] 09:23:06.962 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.hours();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(buddhistChronology0);
((UnsupportedDurationField) durationField0).equals(buddhistChronology0);

[MASTER] 09:23:07.314 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 09:23:07.315 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.hours();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(buddhistChronology0);
durationField0.getDifference(1388L, 154L);

[MASTER] 09:23:07.667 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 09:23:07.667 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.weekyears();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(buddhistChronology0);
durationField0.getDifferenceAsLong((-1L), 0L);

[MASTER] 09:23:08.050 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 09:23:08.051 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.weekyears();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(buddhistChronology0);
durationField0.getMillis(1);

[MASTER] 09:23:08.410 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 09:23:08.411 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.weekyears();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(buddhistChronology0);
durationField0.getMillis(718, 646L);

[MASTER] 09:23:08.810 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 09:23:08.810 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.weekyears();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(buddhistChronology0);
durationField0.getMillis(0L);

[MASTER] 09:23:09.176 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 09:23:09.178 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.weekyears();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(buddhistChronology0);
durationField0.getMillis(1569L, (-1472L));

[MASTER] 09:23:09.542 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 09:23:09.543 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.weekyears();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(buddhistChronology0);
durationField0.getName();

[MASTER] 09:23:09.905 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 09:23:09.906 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.weekyears();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(buddhistChronology0);
durationField0.getUnitMillis();

[MASTER] 09:23:10.273 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 09:23:10.273 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.weekyears();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(buddhistChronology0);
durationField0.getValue(259200000L);

[MASTER] 09:23:10.659 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 09:23:10.660 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.hours();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(buddhistChronology0);
durationField0.getValue((-1978L), (long) 1);

[MASTER] 09:23:11.049 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 09:23:11.049 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.weekyears();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(buddhistChronology0);
durationField0.getValueAsLong(718);

[MASTER] 09:23:11.404 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 09:23:11.404 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.weekyears();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(buddhistChronology0);
durationField0.getValueAsLong(1, 222L);

[MASTER] 09:23:12.158 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 09:23:12.158 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.weekyears();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(buddhistChronology0);
durationField0.isPrecise();

[MASTER] 09:23:12.521 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 09:23:12.521 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.millis();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(buddhistChronology0);
durationField0.isSupported();

[MASTER] 09:23:12.851 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 09:23:12.851 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.hours();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(buddhistChronology0);
durationField0.toString();

* Writing tests to file
* Writing JUnit test case 'UnsupportedDurationField_ESTest' to results/Time-2/org.joda.time.field.UnsupportedDurationField/BBC-F0-opt-60/tests/7
* Done!

* Computation finished
