/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 05 20:25:22 GMT 2021
 */

package org.apache.commons.cli;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.FilterOutputStream;
import java.io.PipedOutputStream;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.io.UnsupportedEncodingException;
import java.io.Writer;
import java.util.Comparator;
import java.util.Locale;
import org.apache.commons.cli.HelpFormatter;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.OptionGroup;
import org.apache.commons.cli.Options;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class HelpFormatter_ESTest extends HelpFormatter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      optionGroup0.setRequired(true);
      Option option0 = new Option("arg", " ");
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      Options options1 = options0.addOptionGroup(optionGroup1);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((-2), ";.w69lq]eV cQ", "v}uT|.(=DUI-", options1, "v}uT|.(=DUI-", true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("\n");
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) "usage: ");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(printWriter0, false);
      // Undeclared exception!
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter1, 0, "");
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      options0.getOptionGroups();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer("usage: ");
      stringBuffer0.insert(1, (long) 3);
      // Undeclared exception!
      try { 
        helpFormatter1.renderWrappedText(stringBuffer0, 1, (-2084), "usage: ");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLongOptPrefix("has already been selected: '");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("~Z`6tPu", "org.apache.commons.cli.HelpFormatter$1", (Options) null, "~Z`6tPu", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer("usage: ");
      helpFormatter0.defaultNewLine = null;
      StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 3, 1, "usage: ");
      helpFormatter0.renderWrappedText(stringBuffer1, 3, 3, "");
      helpFormatter0.findWrapPos("UM<@.HgqdIX g9R_VZ", 0, 0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      // Undeclared exception!
      try { 
        helpFormatter0.findWrapPos((String) null, (-702), 3526);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultArgName = "";
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      helpFormatter0.defaultOptPrefix = "";
      helpFormatter0.setArgName("");
      helpFormatter0.getArgName();
      // Undeclared exception!
      try { 
        helpFormatter0.findWrapPos("", (-1492), 18);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "!ZLikc{LA=FN!Ok[9";
      Options options0 = new Options();
      helpFormatter0.getSyntaxPrefix();
      // Undeclared exception!
      helpFormatter0.printHelp(0, "!ZLikc{LA=FN!Ok[9", (String) null, options0, "");
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      String string0 = null;
      // Undeclared exception!
      helpFormatter0.printUsage((PrintWriter) null, 0, " p?/]Tx'", options0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((-2), " ] [ long ", " ] [ long ", options0, "");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-2);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = 1004;
      String string0 = "]";
      String string1 = "";
      Options options0 = null;
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("]", (Options) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("58");
      Options options0 = new Options();
      Options options1 = options0.addOption("58", false, "-");
      Options options2 = options1.addOption("", "", false, "");
      Option option0 = new Option("", "", false, "org.apache.commons.cli.HelpFormatter$OptionComparator");
      Options options3 = options2.addOption(option0);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 32, "58", (String) null, options3, 1406, (-2340), "V1a%Z*:iGWy2/G+]", true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultWidth = (-1128);
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("o=oKe 0f~#iQSpv&Sqg", options0, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("", "--", true, " ");
      optionGroup0.addOption(option0);
      Option option1 = new Option("arg", "");
      OptionGroup optionGroup1 = optionGroup0.addOption(option1);
      options0.addOptionGroup(optionGroup1);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(3, "\n", "\n", options0, "\n", true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printOptions((PrintWriter) null, 3372, options0, 3372, 3372);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setDescPadding((-1299));
      String string0 = "!ZLikEc{LA=FFN!Bk9";
      Options options0 = new Options();
      helpFormatter0.defaultDescPad = (-1299);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(78, "!ZLikEc{LA=FFN!Bk9", "7BU", options0, ">", false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      options0.hasShortOption("usage: ");
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option((String) null, "W", false, "usage: ");
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      options0.addOptionGroup(optionGroup1);
      options0.getMatchingOptions(" | ");
      StringWriter stringWriter0 = new StringWriter(135);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 41, "JP<1G3&$x^jce", options0);
      String string0 = HelpFormatter.DEFAULT_LONG_OPT_SEPARATOR;
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.setLongOptPrefix("-");
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.rtrim("A_UmX35wYw&45((1O$");
      PrintWriter printWriter0 = null;
      Options options0 = new Options();
      String string0 = "b0fN7a2";
      Options options1 = options0.addOption("b0fN7a2", false, "<");
      options1.helpOptions();
      Option option0 = new Option("", "", false, "A_UmX35wYw&45((1O$");
      Options options2 = options1.addOption(option0);
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage((PrintWriter) null, (-609), "", options2);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "";
      Options options0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4aM,_/hl");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("", (Options) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      File file0 = MockFile.createTempFile("arg", "arg");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) file0;
      objectArray0[1] = (Object) mockPrintWriter0;
      objectArray0[2] = (Object) "";
      objectArray0[3] = (Object) helpFormatter1;
      PrintWriter printWriter0 = mockPrintWriter0.printf("", objectArray0);
      Options options0 = new Options();
      helpFormatter1.defaultArgName = "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ";
      Options options1 = options0.addOption("arg", "usage: ", true, " ");
      Options options2 = options1.addOption("", true, "usage: ");
      helpFormatter1.printHelp(printWriter0, 32, "usage: ", " ", options2, 74, 3, "", true);
      helpFormatter0.getSyntaxPrefix();
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      MockFile mockFile0 = new MockFile((String) null, "\n");
      File file0 = MockFile.createTempFile("[ option: ", "--", (File) mockFile0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      mockFile0.getCanonicalPath();
      mockPrintWriter0.append((CharSequence) "usage: ");
      mockPrintWriter0.print(false);
      mockPrintWriter0.close();
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 34, "/experiment/\n");
      helpFormatter0.getOptPrefix();
      helpFormatter0.getOptionComparator();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.getDescPadding();
      Options options1 = new Options();
      options1.addOption((String) null, true, "M/}*");
      options1.getMatchingOptions("\n");
      options0.helpOptions();
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 34, "usage: ", options1);
      helpFormatter1.getArgName();
      helpFormatter1.findWrapPos("'", 1, 32);
      StringBuffer stringBuffer0 = new StringBuffer("vyf4w@D=.iG%D/3;");
      helpFormatter0.renderOptions(stringBuffer0, 1162, options0, 3, 34);
      helpFormatter0.getOptPrefix();
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("\n");
      Options options2 = options1.addOption("arg", "", true, (String) null);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 6, (String) null, "", options2, 0, 2, "[Wku7zI w'!8hCm]uy", true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      options0.addOptionGroup(optionGroup0);
      helpFormatter0.renderOptions((StringBuffer) null, (-55), options0, 1, 3);
      helpFormatter0.setLongOptPrefix("arg");
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-2);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultDescPad = (int) (byte) (-2);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("W6jV3#Z", "", (Options) null, "");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      String string0 = "dE#9!y";
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option((String) null, "W", false, "usage: ");
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      Options options1 = options0.addOptionGroup(optionGroup1);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((-1307), "dE#9!y", "dE#9!y", options1, "dE#9!y", true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "arg");
      // Undeclared exception!
      helpFormatter0.renderWrappedText(stringBuffer0, 0, 0, " [ARG]");
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("\n");
      Options options2 = options1.addOption("arg", "-", true, "--");
      options1.getOptions();
      helpFormatter0.printHelp("9G9", "2u", options0, "n[qW)t-SrFR:C1]*");
      helpFormatter0.getNewLine();
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        helpFormatter0.renderOptions(stringBuffer0, 1, options2, 1, 1);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = 99;
      helpFormatter0.defaultLeftPad = 99;
      helpFormatter0.defaultNewLine = "7]";
      PrintWriter printWriter0 = null;
      int int1 = 63;
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage((PrintWriter) null, 63, "[");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getDescPadding();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("-");
      Options options0 = new Options();
      Option option0 = new Option("", "VytZm<");
      Options options1 = options0.addOption(option0);
      Options options2 = options1.addOption("", true, (String) null);
      helpFormatter0.printHelp(97, "@ ybFOkQ@-T", "&", options2, "", true);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      String string0 = HelpFormatter.DEFAULT_ARG_NAME;
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "W(d= #5 !rq~Y}&2C*";
      helpFormatter0.setArgName("W(d= #5 !rq~Y}&2C*");
      String string1 = "usage: ";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "usage: ");
      helpFormatter0.defaultArgName = null;
      helpFormatter0.findWrapPos("-", 2668, 3);
      helpFormatter0.getArgName();
      helpFormatter0.getSyntaxPrefix();
      String string2 = null;
      // Undeclared exception!
      try { 
        MockFile.createTempFile((String) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.setOptionComparator((Comparator) null);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      int int0 = helpFormatter1.defaultDescPad;
      helpFormatter1.rtrim("");
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultLongOptPrefix = "^D]c";
      helpFormatter0.setLongOptSeparator("[");
      helpFormatter0.setOptionComparator((Comparator) null);
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.getOptionComparator();
      helpFormatter0.getOptPrefix();
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("--");
      Options options0 = new Options();
      mockPrintWriter0.append('H');
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, (-643), "8iLWB", options0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      String string0 = "UR1";
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("UR1");
      // Undeclared exception!
      try { 
        helpFormatter0.printOptions(mockPrintWriter0, 0, options0, 31, (-1330));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "";
      Options options0 = new Options();
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, (-1867), options0, 5453, 5453);
      // Undeclared exception!
      try { 
        helpFormatter0.renderWrappedText(stringBuffer1, (-1867), 34, "P|9c7el*_-x'[=VMQ");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Option option0 = new Option("", "--");
      options0.addOption(option0);
      OptionGroup optionGroup0 = new OptionGroup();
      helpFormatter0.setLongOptPrefix("");
      helpFormatter0.rtrim("?kp{R3(");
      helpFormatter0.getLongOptPrefix();
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((-1849), "\n", (String) null, options0, (String) null, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setWidth((-3548));
      helpFormatter0.setLongOptPrefix("\n");
      helpFormatter0.getWidth();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.setLongOptPrefix("e4H6");
      helpFormatter1.defaultSyntaxPrefix = ";<rmy{#@w";
      helpFormatter1.rtrim("PrVaAC");
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Option option0 = new Option((String) null, "\n");
      Options options1 = options0.addOption(option0);
      OptionGroup optionGroup0 = new OptionGroup();
      Options options2 = options1.addOptionGroup(optionGroup0);
      options2.getOptions();
      helpFormatter0.printHelp("ClH~!", (String) null, options0, "ZhxScqKcB");
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      helpFormatter0.printHelp("]", (String) null, options1, "", true);
      helpFormatter0.defaultLeftPad = (-12);
      helpFormatter0.getDescPadding();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("\n");
      Options options2 = options1.addOptionGroup(optionGroup0);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 1158, "]", "", options2, 1158, (-12), "", true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      int int0 = helpFormatter0.defaultWidth;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Vkb)PO8:gA;cy");
      Options options2 = options1.addOption("", "-", false, "--");
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 74, "y!wXe>3rU}g&e", "y!wXe>3rU}g&e", options2, 1158, 33, "y!wXe>3rU}g&e", false);
      helpFormatter0.printHelp(33, "'", "--", options0, "--", false);
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 31, "Vkb)PO8:gA;cy");
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 67, "");
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 928, 18, "org.apache.commons.cli.HelpFormatter$1");
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "";
      helpFormatter0.defaultOptPrefix = "";
      helpFormatter0.getLongOptSeparator();
      PrintWriter printWriter0 = null;
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped((PrintWriter) null, 4, 405, " ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      helpFormatter0.printHelp("?", (String) null, options1, "", true);
      helpFormatter0.defaultLeftPad = 2;
      helpFormatter0.getDescPadding();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("\n");
      Options options2 = options1.addOption("arg", "-", true, "");
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 1158, "?", "", options2, 33, 2, "", true);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "");
      helpFormatter0.getNewLine();
      StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, 2, options0, 112, 72);
      StringBuffer stringBuffer2 = helpFormatter0.renderWrappedText(stringBuffer1, 1158, (-3101), "*cKBJBm:Z~k:I1^e");
      // Undeclared exception!
      try { 
        helpFormatter0.renderOptions(stringBuffer2, (-5041), options1, 10, (-3101));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      helpFormatter0.printHelp("?", (String) null, options1, "", true);
      helpFormatter0.defaultLeftPad = 2;
      helpFormatter0.getDescPadding();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("\n");
      Options options2 = options1.addOption("arg", "-", true, "");
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 1158, "?", "", options2, 33, 2, "", true);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(2, (String) null, (String) null, options1, "'", true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Comparator<Option> comparator0 = (Comparator<Option>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.setOptionComparator(comparator0);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      helpFormatter1.renderWrappedText(stringBuffer0, 2680, 1151, " ");
      HelpFormatter helpFormatter2 = new HelpFormatter();
      helpFormatter2.createPadding(74);
      MockFile mockFile0 = new MockFile("--", "Lba");
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter("Cannot add value, list full.", "\"%fE");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // \"%fE
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultLeftPad = (-1386);
      Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.setOptionComparator(comparator0);
      helpFormatter0.getWidth();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("TPI");
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 74, "");
      helpFormatter0.getLongOptSeparator();
      helpFormatter0.getLeftPadding();
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.createPadding(3);
      StringBuffer stringBuffer0 = new StringBuffer("");
      helpFormatter0.setSyntaxPrefix("");
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) null, 2, "", "", options0, 1813, 0, "", true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      Options options0 = new Options();
      helpFormatter0.setLongOptPrefix("@2^K\"i{lYavWmDy^");
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("", true, "@2^K\"i{lYavWmDy^");
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      options0.addOptionGroup(optionGroup1);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.printHelp("#!%[e<7[<m@2", (String) null, options0, "'_S@JVR");
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = options0.addOption("arg", true, "\"|_Vn");
      helpFormatter0.printHelp(1799, "o&0l}vCYJnOj]", "", options1, "Hoy#0+hgW/opDjd7;", false);
      helpFormatter0.rtrim("o&0l}vCYJnOj]");
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockFile mockFile0 = new MockFile("usage: ");
      MockFile mockFile1 = new MockFile(mockFile0, "");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile1);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0, true);
      Options options0 = new Options();
      Option option0 = new Option("", "7w{c97[N.");
      Options options1 = options0.addOption(option0);
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 1151, "k5V|kFn^L3|HZ,pK0", options1);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Option option0 = new Option((String) null, "\n");
      Options options1 = options0.addOption(option0);
      OptionGroup optionGroup0 = new OptionGroup();
      Options options2 = options1.addOption("", false, "");
      Options options3 = options2.addOptionGroup(optionGroup0);
      options3.getOptions();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      // Undeclared exception!
      try { 
        helpFormatter1.printHelp("-", "^2MtyM)QC' ox/kb;]9", options0, "^2MtyM)QC' ox/kb;]9");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setWidth(2332);
      helpFormatter0.setLongOptPrefix("e4H6");
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) null, 10, "bGjK+H", "A CloneNotSupportedException was thrown: ", options0, 281, 1813, "A CloneNotSupportedException was thrown: ", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      helpFormatter0.printHelp("]", (String) null, options1, "", true);
      helpFormatter0.defaultLeftPad = 2;
      helpFormatter0.getDescPadding();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("\n");
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 2731, "cmdLineSyntax not provided", "A CloneNotSupportedException was thrown: ", options1, 63, 63, "A CloneNotSupportedException was thrown: ", true);
      helpFormatter0.getOptionComparator();
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setWidth(74);
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("", "--", true, "arg");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      Options options1 = options0.addOptionGroup(optionGroup1);
      String string0 = " [ARG]";
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((String) null, "-", options1, " [ARG]", false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = options0.addOption("ZhxScqKcB", "--", false, "");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("--");
      helpFormatter1.printHelp((PrintWriter) mockPrintWriter0, 3539, "ClH~!", "", options1, 1, 73, (String) null);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "]";
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = new Options();
      boolean boolean0 = true;
      helpFormatter0.printHelp("]", (String) null, options1, "", true);
      helpFormatter0.defaultLeftPad = 2;
      helpFormatter0.getDescPadding();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("\n");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      int int0 = 882;
      int int1 = (-2627);
      // Undeclared exception!
      try { 
        helpFormatter1.printHelp((PrintWriter) mockPrintWriter0, 882, "pC#5bAO EY0k", "s=", options0, (-3414), (-2627), "--");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getSyntaxPrefix();
      StringBuffer stringBuffer0 = new StringBuffer();
      helpFormatter0.defaultOptPrefix = "usage: ";
      helpFormatter0.setSyntaxPrefix(" | ");
      StringBuffer stringBuffer1 = new StringBuffer("usage: ");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.createPadding(1);
      HelpFormatter helpFormatter2 = new HelpFormatter();
      helpFormatter2.setLongOptPrefix("`28NM/% N8$d1R*");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(1, "-", "\n", (Options) null, "[", false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringWriter stringWriter0 = new StringWriter(1);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
      Object[] objectArray0 = new Object[9];
      Object object0 = new Object();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) mockPrintWriter0;
      Object object1 = new Object();
      objectArray0[2] = object1;
      objectArray0[3] = (Object) mockPrintWriter0;
      objectArray0[4] = (Object) helpFormatter0;
      objectArray0[5] = (Object) mockPrintWriter0;
      objectArray0[6] = (Object) mockPrintWriter0;
      objectArray0[7] = (Object) helpFormatter0;
      objectArray0[8] = (Object) stringWriter0;
      PrintWriter printWriter0 = mockPrintWriter0.format("V3_dG<", objectArray0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(printWriter0, true);
      Locale locale0 = Locale.CHINESE;
      PrintWriter printWriter1 = mockPrintWriter1.format(locale0, " ", objectArray0);
      helpFormatter0.printWrapped(printWriter1, 9, "V3_dG<");
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = new Options();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      // Undeclared exception!
      try { 
        helpFormatter1.printHelp((PrintWriter) null, 3, " ] [ long ", " ", options0, 1, 3, "--");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) null, 64, "ZhxScqKcB", "usage: ", options0, 1, (-2031), "VV=v^)29CU7]3<lWYr");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) null, (-2), "A[_", "A[_", options0, 73, 64, "KhN.@R*A");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer("]");
      // Undeclared exception!
      try { 
        helpFormatter0.renderWrappedText(stringBuffer0, 44, 2, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      helpFormatter0.printHelp("org.apache.commons.cli.HelpFormatter$1", "cmdLineSyntax not provided", options1, (String) null, true);
      helpFormatter0.getDescPadding();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("' was specified but an option from this group ");
      Options options2 = options1.addOptionGroup(optionGroup0);
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 1145, ")66SyH#", ")66SyH#", options2, 2, 1, "   ", false);
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, (-1), "' was specified but an option from this group ");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.rtrim("n#4_>$sM92N");
      HelpFormatter helpFormatter2 = new HelpFormatter();
      helpFormatter2.createPadding(102);
      HelpFormatter helpFormatter3 = new HelpFormatter();
      helpFormatter3.setLongOptPrefix(" | ");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "--");
      helpFormatter0.renderWrappedText(stringBuffer0, 74, 74, "-");
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      helpFormatter0.printHelp("]", "vnrGy`(0Bgqr", options1, "ZIg", true);
      helpFormatter0.getDescPadding();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("--");
      options1.getOptionGroups();
      Options options2 = options1.addOptionGroup(optionGroup0);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, (-275), "[", "oK1<K%H{o", options2, 26, 1158, "A CloneNotSupportedException was thrown: ", true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringWriter stringWriter0 = new StringWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0, true);
      Object[] objectArray0 = new Object[0];
      PrintWriter printWriter0 = mockPrintWriter0.format("Byz!vjp.`e", objectArray0);
      Options options0 = new Options();
      Option option0 = new Option("arg", false, "arg");
      Options options1 = options0.addOption(option0);
      Options options2 = options1.addOption("arg", "Y&VI", true, "arg");
      // Undeclared exception!
      helpFormatter0.printHelp(printWriter0, 0, "Byz!vjp.`e", "Byz!vjp.`e", options2, 3076, (-2), "Byz!vjp.`e");
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = options0.addOption("ZhxScqKcB", "--", false, "");
      Option option0 = new Option("", "--");
      options0.addOption(option0);
      Options options2 = options1.addOption("ZhxScqKcB", false, "--");
      OptionGroup optionGroup0 = new OptionGroup();
      Options options3 = options2.addOptionGroup(optionGroup0);
      helpFormatter0.printHelp("-", "ClH~!", options3, "ZhxScqKcB");
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getSyntaxPrefix();
      StringBuffer stringBuffer0 = new StringBuffer();
      helpFormatter0.defaultOptPrefix = "usage: ";
      helpFormatter0.setSyntaxPrefix("");
      helpFormatter0.renderWrappedText(stringBuffer0, 5, 1, "usage: ");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.createPadding(1);
      HelpFormatter helpFormatter2 = new HelpFormatter();
      helpFormatter2.setLongOptPrefix("`28NM/% N8$d1R*");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(1, " ", "\n", (Options) null, "", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setWidth(2332);
      helpFormatter0.setLongOptPrefix("e4H6");
      Options options0 = new Options();
      options0.getOptions();
      Options options1 = options0.addOption("", "bGjK+H", true, "y");
      helpFormatter0.printHelp(2332, "Cannot add value, list full.", "bGjK+H", options1, "");
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn("]").when(comparator0).toString();
      options1.toString();
      helpFormatter0.defaultOptPrefix = "   ";
      helpFormatter0.optionComparator = comparator0;
      helpFormatter0.getLeftPadding();
      options1.helpOptions();
      helpFormatter0.printHelp(67, "[ Options: [ short java.util.HashMap@0000000006 ] [ long {bGjK+H=[ option:  bGjK+H  [ARG] :: y ]} ]", "", options0, "", false);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "O";
      helpFormatter0.rtrim("O");
      helpFormatter0.createPadding(74);
      helpFormatter0.setLongOptPrefix("");
      helpFormatter0.setSyntaxPrefix("O");
      String string1 = null;
      Options options0 = new Options();
      options0.helpOptions();
      helpFormatter0.setArgName("pd5|ZD4,*@s|UphP");
      helpFormatter0.printHelp(38, "}.BD$P)rK##", "pd5|ZD4,*@s|UphP", options0, "O");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.getLongOptSeparator();
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter("\n", "Z`KaytVQIh=w");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // Z`KaytVQIh=w
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      PrintWriter printWriter0 = null;
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped((PrintWriter) null, 1, "=IB*pC<YS6'YdCE!/f");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getSyntaxPrefix();
      StringBuffer stringBuffer0 = new StringBuffer("");
      helpFormatter0.setSyntaxPrefix("");
      // Undeclared exception!
      helpFormatter0.renderWrappedText(stringBuffer0, 0, 12, "usage: ");
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLongOptSeparator("A CloneNotSupportedException was thrown: ");
      helpFormatter0.setNewLine(":7#.76");
      helpFormatter0.defaultNewLine = ":7#.76";
      int int0 = 0;
      helpFormatter0.setDescPadding(0);
      helpFormatter0.setDescPadding(0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("--");
      mockPrintWriter0.flush();
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 0, "KQ6wz7pT*J", (Options) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setWidth(2332);
      helpFormatter0.setLongOptPrefix("e4H6");
      Options options0 = new Options();
      boolean boolean0 = false;
      options0.getOptions();
      String string0 = "y";
      Options options1 = options0.addOption("", "bGjK+H", false, "y");
      helpFormatter0.printHelp(2332, "Cannot add value, list full.", "bGjK+H", options1, "");
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn("").when(comparator0).toString();
      options1.toString();
      String string1 = "   ";
      helpFormatter0.defaultOptPrefix = "   ";
      helpFormatter0.optionComparator = comparator0;
      helpFormatter0.getLeftPadding();
      options1.helpOptions();
      helpFormatter0.setSyntaxPrefix("m^aJ0$c&.Y/#,-;");
      options0.helpOptions();
      helpFormatter0.setArgName("pd5|ZD4,*@s|UphP");
      helpFormatter0.printHelp(2332, "pd5|ZD4,*@s|UphP", (String) null, options1, "");
      helpFormatter0.getOptPrefix();
      String string2 = "\"TElW`* ";
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter("", "\"TElW`* ");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // \"TElW`* 
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Options options0 = new Options();
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getOptPrefix();
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer();
      stringBuffer0.codePoints();
      // Undeclared exception!
      try { 
        helpFormatter0.renderOptions(stringBuffer0, (-2), (Options) null, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLongOptSeparator();
      helpFormatter0.getNewLine();
      String string0 = "A CloneNotSupportedException was thrown: ";
      String string1 = "";
      Options options0 = new Options();
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        options0.addOption("IOka$ba!", "line.separator", false, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The option 'IOka$ba!' contains an illegal character : '!'
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Comparator<Option> comparator0 = (Comparator<Option>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.optionComparator = comparator0;
      helpFormatter0.getArgName();
      int int0 = (-2);
      helpFormatter0.defaultNewLine = "";
      String string0 = "";
      Options options0 = null;
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(907, ";+", "p?yyEvH5jW{u#+V{~|", (Options) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      StringWriter stringWriter0 = new StringWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0, true);
      helpFormatter0.printOptions(mockPrintWriter0, 0, options0, 0, 2191);
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      String string0 = "C";
      Option option0 = new Option("arg", "C", false, "arg");
      optionGroup0.setSelected(option0);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((-3385), "", "", options1, "", true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = null;
      int int0 = 0;
      Options options0 = new Options();
      String string1 = "}W$0";
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(0, (String) null, "", options0, "}W$0", false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setWidth(2332);
      helpFormatter0.setLongOptPrefix("e4H6");
      String string0 = "Cannot add value, list full.";
      Options options0 = new Options();
      String string1 = "";
      options0.getOptions();
      String string2 = "y";
      Options options1 = options0.addOption("", "bGjK+H", true, "y");
      helpFormatter0.printHelp(2332, "Cannot add value, list full.", "bGjK+H", options1, "");
      Option option0 = new Option("e4H6", "e4H6");
      options1.addOption(option0);
      // Undeclared exception!
      try { 
        options1.addOption("<,_", true, "-");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The option '<,_' contains an illegal character : '<'
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer("usage: ");
      Option option0 = new Option((String) null, "A CloneNotSupportedException was thrown: ", true, "usage: ");
      OptionGroup optionGroup0 = new OptionGroup();
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      optionGroup1.addOption(option0);
      Options options0 = new Options();
      Options options1 = options0.addOption("arg", " :: ", false, " :: ");
      Options options2 = options1.addOptionGroup(optionGroup0);
      OptionGroup optionGroup2 = optionGroup1.addOption(option0);
      options2.addOptionGroup(optionGroup2);
      helpFormatter0.printHelp(74, " :: ", "NTz-^]G<g@DN4", options2, "A CloneNotSupportedException was thrown: ", false);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      helpFormatter0.printHelp("]", (String) null, options1, "", true);
      helpFormatter0.defaultLeftPad = 2;
      helpFormatter0.getDescPadding();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("\n");
      Options options2 = options1.addOptionGroup(optionGroup0);
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 1158, "]", "", options2, 33, 2, "", true);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = options0.addOption("ZhxScqKcB", "--", false, "");
      options1.toString();
      helpFormatter0.getLeftPadding();
      Options options2 = new Options();
      Option option0 = new Option("", "5BGU3&Kg-<j%y/vo");
      Options options3 = options2.addOption(option0);
      options3.helpOptions();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(67, "", "", options2, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ", false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setWidth(2332);
      helpFormatter0.setLongOptPrefix("e4H6");
      Options options0 = new Options();
      boolean boolean0 = true;
      options0.getOptions();
      String string0 = "y";
      Options options1 = options0.addOption("", "bGjK+H", true, "y");
      helpFormatter0.printHelp(2332, "Cannot add value, list full.", "bGjK+H", options1, "");
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(comparator0).toString();
      options1.toString();
      String string1 = "   ";
      helpFormatter0.defaultOptPrefix = "   ";
      helpFormatter0.optionComparator = comparator0;
      helpFormatter0.getLeftPadding();
      options1.helpOptions();
      helpFormatter0.setSyntaxPrefix("m^aJ0$c&.Y/#,-;");
      options0.helpOptions();
      helpFormatter0.setArgName("pd5|ZD4,*@s|UphP");
      helpFormatter0.printHelp(2332, "pd5|ZD4,*@s|UphP", (String) null, options1, "");
      helpFormatter0.getLongOptSeparator();
      String string2 = "\"TElW`* ";
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter("", "\"TElW`* ");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // \"TElW`* 
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      String string0 = "ZhxScqKcB";
      String string1 = "";
      Options options1 = options0.addOption("ZhxScqKcB", "--", true, "");
      options1.addOption("ZhxScqKcB", false, "--");
      helpFormatter0.setArgName("?Y6ju6");
      int int0 = 602;
      helpFormatter0.printHelp(602, "5]9 }A>;-z<{aLkU<7R", "cmdLineSyntax not provided", options0, "rj`eaIS&");
      helpFormatter0.getLongOptSeparator();
      String string2 = "";
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter("", "-");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // -
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = options0.addOption("ZhxScqKcB", "--", false, "");
      helpFormatter0.printHelp("ClH~!", "", options0, "b/F Dq/4", false);
      helpFormatter0.getDescPadding();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("TH9  >y");
      OptionGroup optionGroup0 = new OptionGroup();
      options0.addOptionGroup(optionGroup0);
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 1764, "b/F Dq/4", "", options1, 2731, 896, "", true);
      helpFormatter0.getOptionComparator();
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      options0.addOption("arg", true, "\"|_Vn");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter0.rtrim((String) null);
      helpFormatter0.getLeftPadding();
      // Undeclared exception!
      try { 
        helpFormatter1.findWrapPos("arg", 1, 1);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "   ";
      helpFormatter0.setLongOptSeparator("   ");
      helpFormatter0.rtrim("");
      Comparator<Option> comparator0 = (Comparator<Option>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.setSyntaxPrefix("");
      helpFormatter0.optionComparator = comparator0;
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter("-", "arg");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // arg
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.rtrim("O");
      helpFormatter0.createPadding(0);
      helpFormatter0.setLongOptPrefix("");
      // Undeclared exception!
      helpFormatter0.printHelp(0, "O", (String) null, (Options) null, (String) null, false);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.setLongOptPrefix("'UR}W9R\"]1]");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.rtrim(" ");
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) null, 0, (String) null, "A[_", options0, 0, 74, "KhN.@R*A");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("6[y-+20TuPqHuJR");
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) mockPrintWriter0;
      objectArray0[1] = (Object) mockPrintWriter0;
      objectArray0[2] = (Object) helpFormatter0;
      objectArray0[3] = (Object) helpFormatter0;
      objectArray0[4] = (Object) helpFormatter0;
      objectArray0[5] = (Object) "6[y-+20TuPqHuJR";
      objectArray0[6] = (Object) helpFormatter0;
      helpFormatter0.createPadding(0);
      objectArray0[7] = (Object) "6[y-+20TuPqHuJR";
      objectArray0[8] = (Object) "[";
      PrintWriter printWriter0 = mockPrintWriter0.format("[", objectArray0);
      int int0 = (-880);
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage(printWriter0, (-880), "[");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped((PrintWriter) null, 32, "=IB*pC<YS6'YdCE!/f");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "<ns3FmLFP(xE7~tYf";
      helpFormatter0.setOptPrefix("<ns3FmLFP(xE7~tYf");
      helpFormatter0.setLeftPadding(1334);
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.defaultLeftPad = 0;
      helpFormatter0.getLongOptPrefix();
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.setOptionComparator(comparator0);
      String string1 = "3";
      String string2 = "";
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        options0.addOption((Option) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.Options", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setNewLine("");
      helpFormatter0.setDescPadding((-1303));
      int int0 = 1140;
      Options options0 = new Options();
      boolean boolean0 = true;
      options0.addOption("arg", (String) null, true, "");
      boolean boolean1 = true;
      Options options1 = options0.addOption("arg", true, "");
      String string0 = "";
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(0, "", "", options1, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = 0;
      helpFormatter0.setDescPadding(0);
      helpFormatter0.setLongOptSeparator("f#Ag7\".");
      String string0 = "";
      helpFormatter0.setNewLine("");
      String string1 = "#{P,s_1[5I~_Px&E";
      helpFormatter0.setLongOptSeparator("#{P,s_1[5I~_Px&E");
      String string2 = "";
      Options options0 = new Options();
      options0.getOptions();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("", options0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("x", "-", false, "w ZDN9r^G");
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      Options options1 = options0.addOptionGroup(optionGroup1);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("", "[", options1, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = helpFormatter0.getSyntaxPrefix();
      assertEquals("usage: ", string0);
      
      Options options0 = new Options();
      helpFormatter0.printHelp(" ", options0, true);
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      helpFormatter0.printHelp(" ", options1);
      assertEquals(3, helpFormatter0.defaultDescPad);
      assertEquals(1, helpFormatter0.defaultLeftPad);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLongOptSeparator("A CloneNotSupportedException was thrown: ");
      helpFormatter0.setNewLine(":7#.76");
      helpFormatter0.defaultNewLine = ":7#.76";
      StringBuffer stringBuffer0 = new StringBuffer();
      stringBuffer0.insert(0, (CharSequence) "-");
      int int0 = 0;
      stringBuffer0.insert(1, (-1L));
      helpFormatter0.setDescPadding(0);
      // Undeclared exception!
      try { 
        helpFormatter0.renderWrappedText(stringBuffer0, 0, 0, "line.separator");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = null;
      helpFormatter0.defaultOptPrefix = null;
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.setLongOptSeparator("@5i-u<#R[IK");
      helpFormatter0.optionComparator = comparator0;
      int int0 = 0;
      helpFormatter0.setLeftPadding(0);
      helpFormatter0.getWidth();
      int int1 = 74;
      helpFormatter0.findWrapPos("PQ|:j^bm(", 74, 0);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "arg");
      String string1 = "usage: ";
      // Undeclared exception!
      try { 
        stringBuffer0.insert(74, "--");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 74
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "-";
      helpFormatter0.setLongOptSeparator("-");
      helpFormatter0.setOptPrefix("-");
      helpFormatter0.getSyntaxPrefix();
      StringBuffer stringBuffer0 = new StringBuffer("RU4\";`;yFn");
      helpFormatter0.setSyntaxPrefix("-");
      int int0 = 0;
      // Undeclared exception!
      try { 
        helpFormatter0.renderWrappedText(stringBuffer0, 0, 0, "-");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = helpFormatter0.getSyntaxPrefix();
      assertEquals("usage: ", string0);
      
      Options options0 = new Options();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      String string1 = helpFormatter0.rtrim("R C]l)~^M0P0$$6#wZ|");
      assertEquals("R C]l)~^M0P0$$6#wZ|", string1);
      
      String string2 = helpFormatter0.getLongOptPrefix();
      assertEquals("--", string2);
      assertEquals(1, helpFormatter0.defaultLeftPad);
      assertEquals(3, helpFormatter0.defaultDescPad);
      assertEquals("-", helpFormatter0.getOptPrefix());
      assertEquals(74, helpFormatter0.defaultWidth);
      assertEquals(" ", helpFormatter0.getLongOptSeparator());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setSyntaxPrefix("v6/,^AcuW(GA*=c");
      helpFormatter0.setSyntaxPrefix("");
      int int0 = (-1);
      helpFormatter0.defaultLeftPad = (-1);
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.getWidth();
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter("--", "");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // 
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringWriter stringWriter0 = new StringWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0, true);
      OptionGroup optionGroup0 = new OptionGroup();
      String string0 = "C";
      Option option0 = new Option("arg", "C", true, "arg");
      optionGroup0.setSelected(option0);
      helpFormatter0.getWidth();
      helpFormatter0.getDescPadding();
      helpFormatter0.getArgName();
      int int0 = 0;
      int int1 = (-3299);
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 0, (-3385), "C");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getSyntaxPrefix();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(pipedOutputStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(filterOutputStream0);
      Locale locale0 = Locale.CANADA_FRENCH;
      String string0 = null;
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) locale0;
      objectArray0[1] = (Object) mockPrintWriter0;
      Locale.getISOLanguages();
      // Undeclared exception!
      try { 
        mockPrintWriter0.format(locale0, (String) null, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLongOptPrefix("");
      helpFormatter0.setWidth((-2128));
      int int0 = helpFormatter0.getDescPadding();
      assertEquals((-2128), helpFormatter0.defaultWidth);
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLeftPadding(0);
      helpFormatter0.defaultSyntaxPrefix = "org.apache.commons.cli.HelpFormatter$OptionComparator";
      helpFormatter0.setNewLine("");
      helpFormatter0.getLongOptSeparator();
      Options options0 = new Options();
      helpFormatter0.printHelp("The option '", "", options0, "_vg%E", true);
      helpFormatter0.getDescPadding();
      helpFormatter0.getNewLine();
      helpFormatter0.setLongOptSeparator("EEbkBBY5?p9X6N K");
      assertEquals("", helpFormatter0.getNewLine());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "p7l=}&r*H";
      Options options0 = null;
      String string1 = "org.apache.commons.cli.HelpFormatter$1";
      boolean boolean0 = false;
      int int0 = 0;
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("p7l=}&r*H", (Options) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer("--");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.setSyntaxPrefix(")[%C%aQVx>^QGy");
      HelpFormatter helpFormatter2 = new HelpFormatter();
      helpFormatter2.renderWrappedText(stringBuffer0, 74, (-1215), "--");
      HelpFormatter helpFormatter3 = new HelpFormatter();
      helpFormatter0.setLongOptPrefix("usage: ");
      // Undeclared exception!
      try { 
        helpFormatter3.createPadding((-3484));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = (-1275);
      Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.optionComparator = comparator0;
      // Undeclared exception!
      try { 
        helpFormatter0.createPadding((-1275));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultDescPad = 0;
      helpFormatter0.setArgName("");
      helpFormatter0.setLeftPadding(1092);
      String string0 = "";
      Options options0 = new Options();
      String string1 = "";
      // Undeclared exception!
      try { 
        options0.addOption("org.apache.commons.cli.Option", "", false, "NO_ARGS_ALLOWED");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The option 'org.apache.commons.cli.Option' contains an illegal character : '.'
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getOptionComparator();
      int int0 = (-957);
      String string0 = "org.apache.commons.cli.AlreadySelectedException";
      Options options0 = new Options();
      options0.helpOptions();
      Options options1 = options0.addOption((String) null, false, " ");
      options1.toString();
      // Undeclared exception!
      try { 
        options1.addOption("-", " ", false, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal option name '-'
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      options0.helpOptions();
      helpFormatter0.printHelp("Cannot add value, list full.", "Cannot add value, list full.", options0, "<n4{<");
      helpFormatter0.getLongOptSeparator();
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter((Writer) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Writer", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ";
      helpFormatter0.setOptPrefix("The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter("arg", " X1YV`YlR:(hmw");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         //  X1YV`YlR:(hmw
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }
}
