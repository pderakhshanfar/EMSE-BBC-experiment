/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 23 10:20:45 GMT 2021
 */

package org.apache.commons.cli;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.io.UnsupportedEncodingException;
import java.net.URI;
import java.util.Comparator;
import java.util.Locale;
import org.apache.commons.cli.HelpFormatter;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.OptionGroup;
import org.apache.commons.cli.Options;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class HelpFormatter_ESTest extends HelpFormatter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("", true, "-");
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      helpFormatter0.setLongOptSeparator("");
      optionGroup1.setRequired(true);
      Options options1 = options0.addOptionGroup(optionGroup1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      helpFormatter0.printHelp("Xt^yzY9cvwO$", "Xt^yzY9cvwO$", options1, "-");
      helpFormatter0.getLongOptSeparator();
      int int0 = 1;
      helpFormatter0.createPadding(1);
      helpFormatter0.getLongOptSeparator();
      String string0 = "vg$s(r:gSy#{j(P";
      MockFile mockFile0 = new MockFile("vg$s(r:gSy#{j(P");
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter(mockFile0, " ");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         //  
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setWidth(0);
      helpFormatter0.getWidth();
      String string0 = ":NS*sltkwGp.J1`Zv}@";
      String string1 = "&AbG)5P\\gB>57@PS{A";
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        options0.addOption("&AbG)5PgB>57@PS{A", false, "usage: ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The option '&AbG)5PgB>57@PS{A' contains an illegal character : '&'
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getOptionComparator();
      String string0 = null;
      helpFormatter0.defaultSyntaxPrefix = null;
      helpFormatter0.getSyntaxPrefix();
      String string1 = "";
      MockFile mockFile0 = new MockFile("");
      MockFileOutputStream mockFileOutputStream0 = null;
      try {
        mockFileOutputStream0 = new MockFileOutputStream(mockFile0, true);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setWidth(114);
      helpFormatter0.setNewLine("");
      helpFormatter0.getNewLine();
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultLeftPad = (-1358);
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(20, "-", "", options0, "-");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter0.renderWrappedText(stringBuffer0, 1, 1, "\n");
      helpFormatter1.findWrapPos("E6hA )!e&m*av,?", 3, 1);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("--");
      StringBuffer stringBuffer0 = new StringBuffer(0);
      helpFormatter0.renderWrappedText(stringBuffer0, 43, 43, "DO;Yd{Vmf@VNPWObr");
      Options options0 = new Options();
      Options options1 = options0.addOption("arg", "\n", true, " ");
      // Undeclared exception!
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 0, "DO;Yd{Vmf@VNPWObr", options1);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.setWidth(3);
      boolean boolean0 = true;
      helpFormatter0.setSyntaxPrefix("org.apache.commons8cli.HelpFormatter$1");
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0);
      // Undeclared exception!
      try { 
        helpFormatter0.printOptions(mockPrintWriter0, (-3584), options0, (-3584), 13);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.setWidth(3);
      helpFormatter0.setSyntaxPrefix("org.apache.commons8cli.HelpFormatter$1");
      helpFormatter0.getOptionComparator();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("\"v)Qj)>1!~;X<Isjz", options0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.setWidth(3);
      helpFormatter0.setSyntaxPrefix("arg");
      helpFormatter0.printHelp("\n", "\n", options0, "--", false);
      helpFormatter0.getOptionComparator();
      StringBuffer stringBuffer0 = new StringBuffer(3);
      helpFormatter0.renderWrappedText(stringBuffer0, 18, 5, "");
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "-");
      String string0 = " ";
      // Undeclared exception!
      helpFormatter0.renderWrappedText(stringBuffer0, 0, 0, " ");
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      options0.addOption((String) null, true, "--");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.printHelp("--", "arg", options0, "-", true);
      Options options1 = options0.addOption("VKC", "\n", true, "--");
      // Undeclared exception!
      try { 
        helpFormatter1.printHelp(1, " ", "W|lfMyF3", options1, "3SJQ%8rP", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "arg");
      helpFormatter0.setNewLine((String) null);
      String string0 = "a ecRl9Mke0lFd3g";
      // Undeclared exception!
      try { 
        helpFormatter0.renderWrappedText(stringBuffer0, 0, (-1), "a ecRl9Mke0lFd3g");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("arg", "   ");
      optionGroup0.addOption(option0);
      optionGroup0.addOption(option0);
      options0.addOptionGroup(optionGroup0);
      helpFormatter0.setDescPadding((-1));
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("1<7qT?5:7", options0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.setWidth(3824);
      helpFormatter0.setSyntaxPrefix("kI{bk8Bu");
      helpFormatter0.printHelp("org.apache.commons.cli.OptionGroup", (String) null, options0, "org.apache.commons.cli.HelpFormatter$1", false);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.getOptionComparator();
      helpFormatter0.rtrim((String) null);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Options options0 = new Options();
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultArgName = "";
      helpFormatter0.getOptionComparator();
      helpFormatter0.getArgName();
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      helpFormatter0.setLongOptPrefix("");
      helpFormatter0.setWidth(3);
      helpFormatter0.setSyntaxPrefix("org.apache.commons.cli.HelpFormatter$1");
      helpFormatter0.printHelp("\n", "\n", options0, "", false);
      helpFormatter0.getOptionComparator();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("org.apache.commons.cli.HelpFormatter$1", options0, false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      optionGroup0.toString();
      options0.addOptionGroup(optionGroup0);
      helpFormatter0.setWidth(3);
      Options options1 = new Options();
      helpFormatter0.setOptPrefix("-");
      helpFormatter0.setSyntaxPrefix("org.apache.commons.cli.HelpFormatter$1");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("\n", "\n", options0, "`*Y7P)Q>pF/", false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer("FNn<O)3mwn");
      helpFormatter0.setWidth(1717);
      helpFormatter0.setSyntaxPrefix("u`a'22gM9Gqr35QN@!{");
      helpFormatter0.setLongOptPrefix((String) null);
      Options options0 = new Options();
      helpFormatter0.setOptPrefix("FNn<O)3mwn");
      helpFormatter0.printHelp(">", "`*Y7P)Q>pF/", options0, "FNn<O)3mwn", false);
      helpFormatter0.getLongOptPrefix();
      StringBuffer stringBuffer1 = new StringBuffer();
      helpFormatter0.renderWrappedText(stringBuffer1, 1717, 481, ">");
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("--");
      helpFormatter0.setWidth(0);
      Options options0 = new Options();
      helpFormatter0.setOptPrefix("");
      // Undeclared exception!
      helpFormatter0.printHelp("`*Y7P)Q>pF/", "", options0, "", true);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("cmdLineSyntax not provided");
      mockPrintWriter0.println(3);
      int int0 = 10;
      String string0 = "~VN}>f%qfmjI^^_]";
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 10, "~VN}>f%qfmjI^^_]");
      // Undeclared exception!
      try { 
        helpFormatter0.renderOptions((StringBuffer) null, 10, (Options) null, 10, 10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer("FNn<O)3mwn");
      helpFormatter0.renderWrappedText(stringBuffer0, 62, 62, "");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("pho&=o", (Options) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("--");
      Options options0 = new Options();
      mockPrintWriter0.println(0);
      helpFormatter0.setDescPadding(1682);
      // Undeclared exception!
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 0, "r ");
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("arg", "   ");
      optionGroup0.addOption(option0);
      Options options1 = options0.addOptionGroup(optionGroup0);
      helpFormatter0.setDescPadding((-1));
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("   ", "org.apache.commons.cli.OptionValidator", options1, "1<7qT?5:7", true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "arg");
      helpFormatter0.setLongOptPrefix("r");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("--");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = options0.addOption("arg", true, "line.separator");
      options0.toString();
      options1.addOption("r", true, "");
      helpFormatter1.printHelp("[", " ", options1, " ", false);
      helpFormatter0.getOptionComparator();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      optionGroup0.setRequired(true);
      helpFormatter0.setNewLine("");
      Option option0 = new Option("", " ");
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      options0.addOptionGroup(optionGroup1);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      options0.getMatchingOptions("org.apache.commons.cli.HelpFormatter$OptionComparator");
      helpFormatter1.printHelp("usage: ", "--", options0, "-", true);
      Options options1 = new Options();
      helpFormatter1.getLongOptPrefix();
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "usage: ");
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.setWidth(1);
      Options options2 = new Options();
      helpFormatter1.setOptPrefix("2>.>oC%vN?/B(S");
      helpFormatter0.printHelp("arg", " ", options2, "", false);
      HelpFormatter helpFormatter2 = new HelpFormatter();
      helpFormatter2.getLongOptPrefix();
      StringWriter stringWriter0 = new StringWriter(74);
      StringWriter stringWriter1 = stringWriter0.append('c');
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter1, false);
      // Undeclared exception!
      try { 
        helpFormatter1.printUsage((PrintWriter) mockPrintWriter0, (-6847), "usage: ", options1);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped((PrintWriter) null, 74, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultOptPrefix = "r";
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "r");
      helpFormatter0.setLongOptPrefix("0t;048");
      StringWriter stringWriter0 = new StringWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Ex^&%s+\"TU");
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(dataOutputStream0, false);
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter1, 492, (-627), "org.apache.commons.cli.HelpFormatter$1");
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter1, 31, "0t;048");
      helpFormatter0.setLongOptPrefix(" \"|&ul@3\t9");
      helpFormatter0.getArgName();
      Options options0 = new Options();
      Options options1 = options0.addOption((String) null, "", true, "");
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 31, "r", options1);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = null;
      helpFormatter0.setArgName((String) null);
      helpFormatter0.getArgName();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      helpFormatter0.getArgName();
      String string1 = "B@<'`B<_e&r/c6=-MO-";
      MockFile mockFile0 = new MockFile("B@<'`B<_e&r/c6=-MO-", " ");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      int int0 = (-454);
      helpFormatter0.defaultOptPrefix = null;
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string2 = "";
      try { 
        mockFile0.createNewFile();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultOptPrefix = "r";
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      helpFormatter0.setLongOptPrefix("org.apache.commons.cli.HelpFormatter$1");
      Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      StringWriter stringWriter0 = new StringWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("org.apache.commons.cli.HelpFormatter$1");
      int int0 = 1674;
      int int1 = 65;
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 1, 65, " ");
      helpFormatter0.optionComparator = comparator0;
      helpFormatter0.createPadding(0);
      stringWriter0.getBuffer();
      Options options0 = new Options();
      Option option0 = null;
      try {
        option0 = new Option(";^xJ;heDMaw@20M2#", "usage: ", true, "org.apache.commons.cli.HelpFormatter$1");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The option ';^xJ;heDMaw@20M2#' contains an illegal character : ';'
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultOptPrefix = "r";
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String string0 = "org.apache.commons.cli.HelpFormatter$1";
      helpFormatter0.setLongOptPrefix("org.apache.commons.cli.HelpFormatter$1");
      StringWriter stringWriter0 = new StringWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("org.apache.commons.cli.HelpFormatter$1");
      int int0 = 65;
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 1, 65, " ");
      helpFormatter0.createPadding(0);
      stringWriter0.getBuffer();
      Options options0 = new Options();
      String string1 = ";^xJ;heDMaw@20M2#";
      boolean boolean0 = true;
      Option option0 = null;
      try {
        option0 = new Option(";^xJ;heDMaw@20M2#", "usage: ", true, "org.apache.commons.cli.HelpFormatter$1");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The option ';^xJ;heDMaw@20M2#' contains an illegal character : ';'
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      helpFormatter0.setWidth(3);
      Options options1 = options0.addOption((String) null, false, "QBEV+n1");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.printHelp("--", (String) null, options1, "usage: ");
      helpFormatter1.printHelp("' was specified but an option from this group ", "1-unu=w?IQ~", options0, "--", true);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      options0.getMatchingOptions((String) null);
      helpFormatter1.printHelp(" kay7$", "--", options0, "qqMgLH:Tk", false);
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage((PrintWriter) null, 16, "qqMgLH:Tk", options0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("--");
      helpFormatter0.defaultNewLine = "]";
      Options options0 = new Options();
      mockPrintWriter0.println(0);
      helpFormatter0.setDescPadding(1682);
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 1, "");
      helpFormatter0.setLongOptPrefix("");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "");
      StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, 116, options0, 1682, 116);
      StringBuffer stringBuffer2 = helpFormatter0.renderWrappedText(stringBuffer1, 9, 9, "]");
      helpFormatter0.renderWrappedText(stringBuffer2, 2199, 1682, "");
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "usage: ");
      Options options0 = new Options();
      options0.getMatchingOptions("usage: ");
      helpFormatter0.setDescPadding(19);
      helpFormatter0.printHelp("e  <`] )=XwtkL!u=n", "", options0, "x_{_jzPhP<gOR)m&");
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.renderOptions((StringBuffer) null, (-570), options0, 1097, 1097);
      helpFormatter0.getNewLine();
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "usage: ");
      Options options0 = new Options();
      options0.getMatchingOptions(" ");
      helpFormatter0.setDescPadding(2);
      helpFormatter0.printHelp("org.apache.commons.cli.HelpFormatter$1", "org.apache.commons.cli.HelpFormatter$1", options0, " aE6]BGo#3=k<eg");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.getLongOptPrefix();
      helpFormatter1.rtrim(":7l0%?(w^1!y;");
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("", " ]");
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      options0.addOptionGroup(optionGroup1);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      options0.getMatchingOptions("org.apache.commons.cli.HelpFormatter$OptionComparator");
      helpFormatter1.printHelp("usage: ", "--", options0, "-", false);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Cannot add value, list full.");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "-");
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 525, (String) null, options0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "--";
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      options0.addOptionGroup(optionGroup0);
      helpFormatter0.setWidth(3);
      options0.addOptionGroup(optionGroup0);
      String string1 = "Rb\"nN=u#Z30";
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Rb\"nN=u#Z30");
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) " ");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(printWriter0, 1205, "--", "--", options0, (-4591), (-4591), "--");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Cannot add value, list full.");
      helpFormatter0.defaultNewLine = "]";
      Options options0 = new Options();
      mockPrintWriter0.println(0);
      helpFormatter0.setDescPadding(6);
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 1959, "Cannot add value, list full.", (String) null, options0, 1959, 4160, "", false);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("   ");
      PrintWriter printWriter0 = mockPrintWriter0.printf("c^bxR7=", (Object[]) null);
      Options options0 = new Options();
      Option option0 = new Option("", (String) null);
      Options options1 = options0.addOption(option0);
      OptionGroup optionGroup0 = new OptionGroup();
      Options options2 = options1.addOptionGroup(optionGroup0);
      Options options3 = options2.addOption("arg", ";L~u!TDPwv-X", true, " ");
      helpFormatter0.printUsage(printWriter0, 17, "c^bxR7=", options3);
      Options options4 = new Options();
      mockPrintWriter0.println((-805));
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.setDescPadding(116);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("arg");
      helpFormatter1.printUsage((PrintWriter) mockPrintWriter1, 1682, "P{OTAwqh4lTTCg4");
      int int0 = 10;
      MockPrintWriter mockPrintWriter2 = null;
      try {
        mockPrintWriter2 = new MockPrintWriter("");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Cannot add value, list full.");
      Options options0 = new Options();
      mockPrintWriter0.println(0);
      helpFormatter0.setDescPadding(1682);
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 3, "");
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 10, "]", options0);
      StringBuffer stringBuffer0 = new StringBuffer();
      helpFormatter0.renderOptions(stringBuffer0, (-1021), options0, 0, 0);
      helpFormatter0.getLongOptSeparator();
      helpFormatter0.getArgName();
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Cannot add value, list full.");
      helpFormatter0.defaultNewLine = "]";
      Options options0 = new Options();
      String string0 = "H.K6Lmt07,'N3j!";
      // Undeclared exception!
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 0, "<", "H.K6Lmt07,'N3j!", options0, 0, 0, "H.K6Lmt07,'N3j!");
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "usage: ");
      Options options0 = new Options();
      options0.getMatchingOptions("arg");
      helpFormatter0.setSyntaxPrefix("-");
      helpFormatter0.setDescPadding(3);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      Options options1 = options0.addOption("arg", true, "usage: ");
      helpFormatter1.defaultSyntaxPrefix = "";
      helpFormatter1.printHelp("org.apache.commons.cli.HelpFormatter$1", "\n", options0, "^~bn|jL~;j");
      options1.addOption("arg", "XD+y^@/T(", false, "--");
      helpFormatter0.printHelp(" ", "usage: ", options1, "arg", true);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "usage: ");
      Options options0 = new Options();
      options0.getMatchingOptions("arg");
      helpFormatter0.setSyntaxPrefix("Qb=%JY=ul4M( 0k");
      helpFormatter0.setDescPadding(3);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      options0.addOption("arg", true, "usage: ");
      helpFormatter1.printHelp("\n", "\n", options0, "^~bn|jL~;j");
      helpFormatter0.printHelp("--", "S:. W", options0, " ", true);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("rsD\"", (Options) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Cannot add value, list full.");
      helpFormatter0.defaultNewLine = "--";
      Options options0 = new Options();
      mockPrintWriter0.println(0);
      helpFormatter0.setDescPadding(1682);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((-158), "dMh#M}%#jK>OmB7#+", (String) null, options0, " ]");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Cannot add value, list full.");
      helpFormatter0.defaultNewLine = "]";
      Options options0 = new Options();
      mockPrintWriter0.println(0);
      helpFormatter0.setDescPadding(1682);
      String string0 = null;
      String string1 = "AAR;zk`7$EF#>*b%";
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 1682, "line.separator", "AAR;zk`7$EF#>*b%", options0, 553, 1682, "", true);
      helpFormatter0.setNewLine("< lsIYA8|-l$rz76");
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 13, "]");
      String string2 = "So2g";
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 10, "AAR;zk`7$EF#>*b%", "", options0, 13, 77, "AAR;zk`7$EF#>*b%", false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLongOptSeparator("");
      helpFormatter0.setLongOptSeparator("");
      helpFormatter0.setLongOptPrefix("");
      helpFormatter0.getWidth();
      Options options0 = new Options();
      Options options1 = new Options();
      Option option0 = new Option("", "mNR_>~Lz_|bW ");
      Options options2 = options0.addOption(option0);
      OptionGroup optionGroup0 = new OptionGroup();
      options2.addOptionGroup(optionGroup0);
      helpFormatter0.getLongOptPrefix();
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Cannot add value, list full.");
      helpFormatter0.defaultNewLine = "--";
      Options options0 = new Options();
      mockPrintWriter0.println(0);
      helpFormatter0.setDescPadding(1682);
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 2748, "--", " ]", options0, 74, 77, (String) null, false);
      helpFormatter0.setNewLine("");
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 1682, "dMh#M}%#jK>OmB7#+");
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 77, "Cannot add value, list full.", "So2g", options0, 2748, 32, "{F\"@(b&[%uj__X", true);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 32, (String) null, "So2g", options0, 3, 32, "", true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Cannot add value, list full.");
      helpFormatter0.defaultNewLine = "]";
      Options options0 = new Options();
      mockPrintWriter0.println(0);
      helpFormatter0.setDescPadding(1682);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "arg");
      String string0 = ":5bM/*eZ%g%2rD+hmo";
      Options options1 = options0.addOption("", true, "cmdLineSyntax not provided");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 553, ":5bM/*eZ%g%2rD+hmo", ":5bM/*eZ%g%2rD+hmo", options1, (-1227), 553, "]", true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "usage: ");
      Options options0 = new Options();
      options0.getMatchingOptions("arg");
      helpFormatter0.setDescPadding(19);
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.printHelp("   ", options0, false);
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 19, 19, "");
      helpFormatter0.renderWrappedText(stringBuffer1, 623, 5, "");
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Cannot add value, list full.");
      helpFormatter0.defaultNewLine = "]";
      Options options0 = new Options();
      mockPrintWriter0.println(0);
      helpFormatter0.setDescPadding(1682);
      Options options1 = options0.addOption("NO_ARGS_ALLOWED", true, "-");
      helpFormatter0.printHelp("org.apache.commons.cli.HelpFormatter$1", "-", options1, "org.apache.commons.cli.HelpFormatter$1");
      helpFormatter0.getLongOptPrefix();
      // Undeclared exception!
      try { 
        helpFormatter0.renderOptions((StringBuffer) null, (-2412), options1, 0, 396);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      options0.addOptionGroup(optionGroup0);
      helpFormatter0.setWidth(3);
      Options options1 = new Options();
      helpFormatter0.printHelp(3, "-", "--", options1, "--", true);
      helpFormatter0.setOptPrefix((String) null);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("org.apache.commons.cli.HelpFormatter$1", "==rPT", options0, "org.apache.commons.cli.HelpFormatter$1");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "--";
      String string1 = null;
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      options0.addOptionGroup(optionGroup0);
      helpFormatter0.setWidth(3);
      boolean boolean0 = false;
      Options options1 = new Options();
      options1.toString();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "usage: ");
      // Undeclared exception!
      try { 
        helpFormatter0.renderWrappedText(stringBuffer0, (-203), 31, "");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Cannot add value, list full.");
      helpFormatter0.defaultNewLine = "--";
      Options options0 = new Options();
      mockPrintWriter0.println(0);
      helpFormatter0.setDescPadding(1682);
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 2748, "--", " ]", options0, 74, 77, (String) null, false);
      helpFormatter0.setNewLine("");
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 104, "dMh#M}%#jK>OmB7#+");
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLongOptSeparator("");
      helpFormatter0.setLongOptSeparator("");
      helpFormatter0.setLongOptPrefix("");
      helpFormatter0.getWidth();
      Options options0 = new Options();
      Options options1 = new Options();
      options1.addOption("", true, "");
      StringWriter stringWriter0 = new StringWriter(2463);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter1);
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 1, 2463, "<");
      helpFormatter0.createPadding(0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Cannot add value, list full.");
      Options options0 = new Options();
      Options options1 = new Options();
      options1.getMatchingOptions("qdSCkE9Ez,~IhVCj(>d");
      helpFormatter0.setDescPadding(0);
      helpFormatter0.printHelp("|u)0C)7xT`2k", "org.apache.commons.cli.HelpFormatter$1", options1, "qdSCkE9Ez,~IhVCj(>d");
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.printOptions(mockPrintWriter0, 64, options0, 74, 74);
      helpFormatter0.getArgName();
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      options0.addOptionGroup(optionGroup0);
      Options options1 = new Options();
      helpFormatter0.printHelp(3, "8", "--", options1, "--", true);
      helpFormatter0.setOptPrefix((String) null);
      helpFormatter0.printHelp("\n", "\n", options0, "", false);
      helpFormatter0.setLongOptPrefix("V)`h#[58&h&v,KxJ");
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLongOptSeparator(")qzDF]P6?");
      helpFormatter0.setLongOptPrefix(")qzDF]P6?");
      helpFormatter0.getWidth();
      Options options0 = new Options();
      Options options1 = new Options();
      Options options2 = options1.addOption((String) null, true, "[ARG...]");
      Option option0 = new Option("", "");
      options1.addOption(option0);
      OptionGroup optionGroup0 = new OptionGroup();
      options2.addOptionGroup(optionGroup0);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("SOCmn]L=", (String) null, options2, "", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLongOptSeparator("");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("4K@<J=e<V");
      String string0 = "<";
      Options options0 = new Options();
      mockPrintWriter0.println(3);
      helpFormatter0.setDescPadding((-1671));
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) "]";
      Object object0 = new Object();
      objectArray0[1] = object0;
      Object object1 = new Object();
      objectArray0[2] = object1;
      objectArray0[3] = (Object) mockPrintWriter0;
      objectArray0[4] = (Object) "dMh#M}%#jK>OmB7#+";
      PrintWriter printWriter0 = mockPrintWriter0.printf("\n", objectArray0);
      int int0 = 1;
      String string1 = "KtQ-\\txUg=8SU#^1d";
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(printWriter0, (-1671), "<", "--", options0, 0, 1, "KtQ-\txUg=8SU#^1d", true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Cannot add value, list full.");
      helpFormatter0.defaultNewLine = "]";
      Options options0 = new Options();
      mockPrintWriter0.println(0);
      String string0 = " ]";
      int int0 = 77;
      String string1 = null;
      String string2 = null;
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 0, (String) null, "1ay$]RZ9", options0, 0, 0, "6R[6W<g(Du~r^ D.mf", false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "--");
      Options options0 = new Options();
      Option option0 = new Option((String) null, false, "-");
      option0.clearValues();
      Options options1 = options0.addOption(option0);
      helpFormatter0.setDescPadding((-2));
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("org.apache.commons.cli.HelpFormatter$1", "?1zewqTo U", options1, "?1zewqTo U");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "8";
      Options options0 = null;
      boolean boolean0 = false;
      String string1 = " ";
      URI uRI0 = MockURI.aFileURI;
      URI uRI1 = MockURI.resolve(uRI0, "org.apache.commons.cli.Util");
      MockFile mockFile0 = new MockFile(uRI1);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) uRI1;
      objectArray0[1] = (Object) null;
      PrintWriter printWriter0 = mockPrintWriter0.format("arg", objectArray0);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(printWriter0, 9, " ", "Z5'Y*pv-ci", (Options) null, 4725, 4725, "-");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      options0.addOptionGroup(optionGroup0);
      helpFormatter0.setWidth(3);
      Options options1 = new Options();
      helpFormatter0.printHelp(3, "-", "--", options1, "--", true);
      helpFormatter0.setOptPrefix((String) null);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("\n", "\n", options0, "`*Y7P)Q>pF/", false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter0.setWidth(74);
      helpFormatter0.setSyntaxPrefix("");
      StringWriter stringWriter0 = new StringWriter(101);
      options0.hasOption("arg");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0, false);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      helpFormatter0.getSyntaxPrefix();
      helpFormatter0.printHelp("U2p!H[.", options0);
      helpFormatter1.findWrapPos("\n", 886, 101);
      helpFormatter1.getWidth();
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 74, 74, "Ki]U<@%AM");
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Cannot add value, list full.");
      helpFormatter0.defaultNewLine = "]";
      Options options0 = new Options();
      mockPrintWriter0.println(0);
      helpFormatter0.setDescPadding(393);
      helpFormatter0.printHelp("dMh#M}%#jK>OmB7#+", "<", options0, "M\"q%@m|6)dc34Ye");
      helpFormatter0.printHelp("org.apache.commons.cli.ParseException", "dMh#M}%#jK>OmB7#+", options0, "Cannot add value, list full.");
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 2320, (String) null, options0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultSyntaxPrefix = ";Z>wvx@QIQZU)";
      int int0 = 17;
      String string0 = "b5;O1r*H_}%agh{d";
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped((PrintWriter) null, 17, 17, "b5;O1r*H_}%agh{d");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = 31;
      String string0 = "";
      helpFormatter0.setNewLine("");
      int int1 = (-730);
      // Undeclared exception!
      try { 
        helpFormatter0.renderWrappedText((StringBuffer) null, 31, (-730), "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName("");
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.printHelp("--", "", options1, "G\"");
      helpFormatter0.setWidth(74);
      helpFormatter0.setSyntaxPrefix("");
      helpFormatter1.setDescPadding(127);
      HelpFormatter helpFormatter2 = new HelpFormatter();
      Options options2 = options1.addOption("", true, "usage: ");
      helpFormatter2.printHelp("--", "arg", options2, "faSw");
      helpFormatter2.getLongOptPrefix();
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "--";
      helpFormatter0.setArgName("--");
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      options0.addOptionGroup(optionGroup0);
      helpFormatter0.setWidth(3);
      String string1 = "8";
      Options options1 = options0.addOption("arg", "usage: ", false, (String) null);
      boolean boolean0 = false;
      helpFormatter0.printHelp(3, "8", "--", options1, "--", false);
      helpFormatter0.setOptPrefix((String) null);
      String string2 = "";
      helpFormatter0.printHelp("\n", "\n", options0, "", false);
      helpFormatter0.setLongOptPrefix("V)`h#[58&h&v,KxJ");
      helpFormatter0.getLeftPadding();
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append(')');
      helpFormatter0.setDescPadding(0);
      MockFile mockFile0 = new MockFile("gh4EX1!z]RNo/");
      MockFile mockFile1 = new MockFile(mockFile0, "-");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile1);
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) null;
      PrintWriter printWriter0 = mockPrintWriter0.printf("", objectArray0);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(printWriter0, 0, ", ", "", (Options) null, 0, 4031, (String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName("--");
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      options0.addOptionGroup(optionGroup0);
      helpFormatter0.setWidth(44);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.printHelp(1376, "\\S.SvPFTdjs!:jF!k", "[F(y'41DPJ|U<Vx9bE", options0, "A}CJ=c\"r8v`X");
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName("b-W>oLIwL|[k b:\ng#");
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      options0.addOptionGroup(optionGroup0);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      Options options1 = options0.addOptionGroup(optionGroup0);
      helpFormatter0.printHelp("b.3h:q.<;=7", "-", options1, " ");
      HelpFormatter helpFormatter2 = new HelpFormatter();
      helpFormatter2.setWidth(655);
      helpFormatter2.setSyntaxPrefix("yqa8/?`kNOK~Z=N]");
      StringWriter stringWriter0 = new StringWriter(1713);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0, false);
      helpFormatter1.printHelp((PrintWriter) mockPrintWriter0, 97, "--", "W-wwV(~<", options0, 1713, 655, "b-W>oLIwL|[k b:\ng#");
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) "--");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(printWriter0);
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter1, 3, "--");
      // Undeclared exception!
      try { 
        helpFormatter1.printHelp("", "", options1, "dk4ub tS)V", true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HelpFormatter helpFormatter0 = new HelpFormatter();
      PipedInputStream pipedInputStream0 = new PipedInputStream(74);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0, false);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      PrintWriter printWriter0 = mockPrintWriter1.append((CharSequence) "-");
      Object[] objectArray0 = new Object[3];
      Object object0 = new Object();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) printWriter0;
      objectArray0[2] = (Object) helpFormatter0;
      mockPrintWriter1.format("-", objectArray0);
      helpFormatter0.printUsage(printWriter0, 74, "");
      helpFormatter0.setDescPadding(74);
      helpFormatter0.getWidth();
      // Undeclared exception!
      try { 
        helpFormatter0.printOptions(mockPrintWriter0, 74, (Options) null, 74, 8);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLongOptSeparator("");
      helpFormatter0.setLongOptSeparator("");
      helpFormatter0.setLongOptPrefix("");
      helpFormatter0.getWidth();
      Options options0 = new Options();
      Options options1 = new Options();
      Options options2 = options1.addOption("", true, "");
      Option option0 = new Option("", "mNR_>~Lz_|bW ");
      Options options3 = options2.addOption(option0);
      OptionGroup optionGroup0 = new OptionGroup();
      Options options4 = options3.addOptionGroup(optionGroup0);
      helpFormatter0.printHelp("usage: ", "", options4, "", false);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append(')');
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0, false);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) stringWriter1;
      objectArray0[1] = (Object) mockPrintWriter0;
      objectArray0[2] = (Object) stringWriter1;
      objectArray0[3] = (Object) "";
      objectArray0[4] = (Object) "HPSz55\"lN.N<ZNT@";
      objectArray0[5] = (Object) mockPrintWriter0;
      PrintWriter printWriter0 = mockPrintWriter1.format("arg", objectArray0);
      helpFormatter0.printWrapped(printWriter0, 1, 1, "");
      helpFormatter0.createPadding(1);
      helpFormatter0.getLongOptPrefix();
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "--");
      helpFormatter0.setWidth(22);
      helpFormatter0.setSyntaxPrefix("}\"o]N");
      StringWriter stringWriter0 = new StringWriter(22);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0, true);
      mockPrintWriter0.println('J');
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 22, "");
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "--");
      Options options0 = new Options();
      Option option0 = new Option((String) null, false, "-");
      option0.clearValues();
      Options options1 = options0.addOption(option0);
      helpFormatter0.getSyntaxPrefix();
      helpFormatter0.printHelp("t50nC'vhZN~%:AVL", "4#}{>e8Y2CULA7Z.Yz", options0, "VV<:Uz-W*vOxC");
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.printHelp("Q!0{Rt", options1, false);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Cannot add value, list full.");
      helpFormatter0.defaultNewLine = "]";
      Options options0 = new Options();
      mockPrintWriter0.println(0);
      String string0 = "dMh#M}%#jK>OmB7#+";
      helpFormatter0.setDescPadding(1682);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 2748, "]", " ]", options0, (-1671), 77, (String) null, false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = null;
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append(')');
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter1, true);
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) ", ";
      objectArray0[1] = (Object) mockPrintWriter0;
      objectArray0[2] = (Object) null;
      PrintWriter printWriter0 = mockPrintWriter0.format("HPSz55\"lN.N<ZNT@", objectArray0);
      PrintWriter printWriter1 = printWriter0.append((CharSequence) "--");
      String string0 = "Cannot add value, list full.";
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(printWriter1, (-611), "", "Cannot add value, list full.", (Options) null, 0, 20, ", ", true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "--");
      Options options0 = new Options();
      String string0 = null;
      Option option0 = new Option((String) null, false, "-");
      option0.clearValues();
      options0.addOption(option0);
      int int0 = 886;
      helpFormatter0.getSyntaxPrefix();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((String) null, options0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = "org.apache.commons.cli.HelpFormatter$OptionComparator";
      Options options0 = null;
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((-1890), "", "org.apache.commons.cli.HelpFormatter$OptionComparator", (Options) null, "FxLr{%.(zq()", false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      String string0 = "SMS|?*";
      // Undeclared exception!
      try { 
        helpFormatter1.printHelp((PrintWriter) null, 9, "SMS|?*", "\n", options0, 74, 74, "H.K6Lmt07,'N3j!");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "A CloneNotSupportedExceptionwas thrown: ";
      String string1 = "h";
      Options options0 = null;
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("h", "--", (Options) null, "9e8Zj<G!*]nN)=");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.setArgName("");
      helpFormatter0.setOptPrefix("usage: ");
      helpFormatter0.getDescPadding();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("--");
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) mockPrintWriter0;
      Object object0 = new Object();
      objectArray0[1] = object0;
      PrintWriter printWriter0 = mockPrintWriter0.format(" ", objectArray0);
      char[] charArray0 = new char[3];
      charArray0[0] = 's';
      printWriter0.printf("arg", objectArray0);
      Object[] objectArray1 = new Object[4];
      objectArray1[0] = (Object) "";
      objectArray1[1] = (Object) printWriter0;
      objectArray1[2] = (Object) "usage: ";
      objectArray1[3] = (Object) 's';
      printWriter0.format("usage: ", objectArray1);
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped(printWriter0, 1, (-471), "[ option: ");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append(')');
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter1, true);
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) ", ";
      objectArray0[1] = (Object) mockPrintWriter0;
      objectArray0[2] = (Object) null;
      PrintWriter printWriter0 = mockPrintWriter0.format("HPSz55\"lN.N<ZNT@", objectArray0);
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped(printWriter0, 1, 1, "{],\"p Y`N,7");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(980, "org.apache.commons.cli.HelpFormatter$1", "org.apache.commons.cli.HelpFormatter$1", (Options) null, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      Locale locale0 = Locale.TAIWAN;
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) uRI0;
      objectArray0[1] = (Object) uRI0;
      objectArray0[2] = (Object) locale0;
      objectArray0[3] = (Object) uRI0;
      objectArray0[4] = (Object) locale0;
      objectArray0[5] = (Object) locale0;
      PrintWriter printWriter0 = mockPrintWriter0.printf(locale0, "-", objectArray0);
      String string0 = "D";
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped(printWriter0, (-182), 60, "D");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "--");
      Options options0 = new Options();
      Option option0 = new Option((String) null, false, "-");
      options0.addOption(option0);
      // Undeclared exception!
      try { 
        helpFormatter0.findWrapPos((String) null, (-1), 886);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName("--");
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      helpFormatter0.setWidth(44);
      helpFormatter0.setSyntaxPrefix("");
      helpFormatter0.printHelp("\"", options1, true);
      helpFormatter0.setLongOptSeparator("");
      Options options2 = options0.addOption((String) null, "", true, "");
      StringBuffer stringBuffer0 = new StringBuffer("--");
      helpFormatter0.renderOptions(stringBuffer0, 44, options2, 44, 44);
      helpFormatter0.createPadding(44);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "-");
      Options options0 = new Options();
      helpFormatter0.printHelp("org.apache.commons.cli.HelpFormatter$OptionComparator", "--", options0, "--");
      helpFormatter0.getLongOptPrefix();
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "-");
      Options options0 = new Options();
      helpFormatter0.printHelp("org.apache.commons.cli.HelpFormatter$OptionComparator", "", options0, "");
      helpFormatter0.getLongOptPrefix();
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "8";
      Options options0 = null;
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(3, "A CloneNotSupportedExceptionwas thrown: ", "8", (Options) null, "8", false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName("");
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.printHelp("--", "", options1, "G\"");
      helpFormatter0.setWidth(74);
      helpFormatter0.setSyntaxPrefix("");
      StringWriter stringWriter0 = new StringWriter(101);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0, false);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 1, "X#xm+$Wh");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName("--");
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      helpFormatter0.setWidth(44);
      helpFormatter0.setSyntaxPrefix("");
      helpFormatter0.printHelp("\"", options1, true);
      helpFormatter0.setLongOptSeparator("");
      // Undeclared exception!
      try { 
        helpFormatter0.findWrapPos("aA.'v", 512, (-773));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "   ";
      // Undeclared exception!
      helpFormatter0.printHelp(0, "p$2", "   ", (Options) null, "");
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = 0;
      String string0 = "A CloneNotSupportedException was thrown: ";
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((-2015), "A CloneNotSupportedException was thrown: ", "", options0, "", true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "org.apache.commons.cli.HelpFormatter$OptionComparator";
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) null, 1, "", "", options0, 9, 9, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      boolean boolean0 = false;
      // Undeclared exception!
      helpFormatter0.printHelp(0, "A CloneNotSupportedException was thrown: ", "8", (Options) null, "8", false);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = null;
      helpFormatter0.defaultArgName = null;
      Options options0 = null;
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((String) null, (Options) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "--");
      Options options0 = new Options();
      Option option0 = new Option((String) null, false, "-");
      Options options1 = options0.addOption(option0);
      Options options2 = options1.addOption("Waj0", "--", true, "arg");
      // Undeclared exception!
      try { 
        helpFormatter0.renderOptions(stringBuffer0, 1027, options2, 1027, (-165));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = null;
      helpFormatter0.defaultArgName = null;
      helpFormatter0.setWidth(0);
      int int0 = 0;
      Options options0 = null;
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(0, "", "", (Options) null, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "";
      helpFormatter0.setArgName("");
      int int0 = 44;
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("", (String) null, options1, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = ", ";
      Options options0 = null;
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(0, "", ", ", (Options) null, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "Cannot add value, list full.";
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Cannot add value, list full.");
      helpFormatter0.defaultNewLine = "]";
      Options options0 = new Options();
      int int0 = (-1);
      mockPrintWriter0.println(0);
      helpFormatter0.setDescPadding(393);
      // Undeclared exception!
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 0, "<", "Cannot add value, list full.", options0, (-1), (-1671), "dMh#M}%#jK>OmB7#+", false);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.findWrapPos("HC%B*L@ppo", 2458, 2458);
      String string0 = "h";
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        options0.addOptionGroup((OptionGroup) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.Options", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultArgName = "r";
      helpFormatter0.getDescPadding();
      helpFormatter0.setLongOptPrefix("");
      // Undeclared exception!
      try { 
        helpFormatter0.createPadding((-1737));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLongOptSeparator("");
      helpFormatter0.setLongOptSeparator("");
      String string0 = "";
      helpFormatter0.setLongOptPrefix("");
      helpFormatter0.getWidth();
      String string1 = "usage: ";
      Options options0 = new Options();
      Options options1 = options0.addOption("", "KS3f", false, "");
      options1.addOption("", true, ">");
      Option option0 = null;
      try {
        option0 = new Option(">", "mNR_>~Lz_|bW ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal option name '>'
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "usage: ");
      StringWriter stringWriter2 = stringWriter1.append('8');
      helpFormatter0.getSyntaxPrefix();
      int int0 = 1919;
      // Undeclared exception!
      try { 
        stringWriter2.append((CharSequence) "usage: ", 1919, 3);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "org.apache.commons.cli.HelpFormatter$OptionComparator";
      String string1 = "";
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) null, 44, "org.apache.commons.cli.HelpFormatter$OptionComparator", "", options0, 44, (-2), "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "";
      Options options0 = null;
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("", (Options) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = ".Vu1i\\8I*l:gx";
      helpFormatter0.defaultArgName = ".Vu1i8I*l:gx";
      String string1 = "";
      helpFormatter0.rtrim("");
      MockFile mockFile0 = new MockFile("usage: ");
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream(mockFile0, "arg");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // arg
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLeftPadding(44);
      helpFormatter0.getLongOptSeparator();
      helpFormatter0.getOptionComparator();
      assertEquals(44, helpFormatter0.defaultLeftPad);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName("--");
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      options0.addOptionGroup(optionGroup0);
      helpFormatter0.setWidth(3);
      Options options1 = new Options();
      helpFormatter0.printHelp(3, "8", "--", options1, (String) null, true);
      helpFormatter0.setOptPrefix((String) null);
      helpFormatter0.printHelp("\n", "\n", options0, "", false);
      helpFormatter0.setLongOptPrefix("V)`h#[58&h&v,KxJ");
      int int0 = helpFormatter0.getLeftPadding();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "--");
      Options options0 = new Options();
      Option option0 = new Option((String) null, false, "-");
      option0.clearValues();
      helpFormatter0.setDescPadding(0);
      helpFormatter0.setNewLine("line.separator");
      assertEquals("line.separator", helpFormatter0.getNewLine());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.optionComparator = comparator0;
      helpFormatter0.getLeftPadding();
      helpFormatter0.getLongOptSeparator();
      helpFormatter0.getOptPrefix();
      helpFormatter0.setNewLine("' was specified but an option from this group ");
      assertEquals("' was specified but an option from this group ", helpFormatter0.getNewLine());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setDescPadding(34);
      helpFormatter0.setArgName("");
      helpFormatter0.setOptPrefix("sCh3B,{/r/9(");
      helpFormatter0.getDescPadding();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("DWEY)E;(5r");
      char[] charArray0 = new char[12];
      charArray0[0] = '9';
      charArray0[1] = '9';
      charArray0[2] = '<';
      charArray0[3] = 's';
      charArray0[4] = '<';
      charArray0[5] = 's';
      charArray0[6] = '9';
      charArray0[7] = '<';
      mockPrintWriter0.println(charArray0);
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 34, ">");
      helpFormatter0.getNewLine();
      assertEquals("", helpFormatter0.getArgName());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      assertEquals("-", helpFormatter0.getOptPrefix());
      
      helpFormatter0.setOptPrefix("");
      helpFormatter0.getOptPrefix();
      helpFormatter0.getNewLine();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.setOptionComparator(comparator0);
      assertEquals("", helpFormatter0.getOptPrefix());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultDescPad = 0;
      String string0 = "uC5MC}H\\7RP(8d#=ia";
      helpFormatter0.setLongOptPrefix("uC5MC}H\u0007RP(8d#=ia");
      helpFormatter0.setDescPadding(0);
      helpFormatter0.setLeftPadding(0);
      helpFormatter0.getOptPrefix();
      helpFormatter0.setOptPrefix("--");
      MockFile mockFile0 = new MockFile("usage: ");
      File file0 = MockFile.createTempFile("'Cu", "uC5MC}H\u0007RP(8d#=ia", (File) mockFile0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
      int int0 = 74;
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        options0.addOption("usage: ", false, "uC5MC}H\u0007RP(8d#=ia");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The option 'usage: ' contains an illegal character : ':'
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getArgName();
      helpFormatter0.setLongOptPrefix("arg");
      helpFormatter0.getWidth();
      Options options0 = new Options();
      Option option0 = null;
      try {
        option0 = new Option("=zNT-T>YK33", "2W)m}3PF_TtiW");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The option '=zNT-T>YK33' contains an illegal character : '='
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setOptionComparator((Comparator) null);
      String string0 = "";
      helpFormatter0.rtrim("");
      int int0 = 1191;
      String string1 = "-";
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = null;
      // Undeclared exception!
      try { 
        optionGroup0.addOption((Option) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.OptionGroup", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Comparator<Option> comparator0 = (Comparator<Option>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.defaultNewLine = "";
      helpFormatter0.setOptionComparator(comparator0);
      int int0 = helpFormatter0.getDescPadding();
      assertEquals("usage: ", helpFormatter0.getSyntaxPrefix());
      assertEquals("arg", helpFormatter0.getArgName());
      assertEquals(1, helpFormatter0.defaultLeftPad);
      assertEquals("--", helpFormatter0.getLongOptPrefix());
      assertEquals(3, int0);
      assertEquals("-", helpFormatter0.getOptPrefix());
      assertEquals(74, helpFormatter0.defaultWidth);
      assertEquals(" ", helpFormatter0.getLongOptSeparator());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setDescPadding((-671));
      helpFormatter0.setArgName("b`&qTi");
      helpFormatter0.setOptPrefix("sCh3B,{/r/9(");
      helpFormatter0.getDescPadding();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
      char[] charArray0 = new char[3];
      charArray0[0] = 's';
      charArray0[1] = '9';
      charArray0[2] = '<';
      mockPrintWriter0.println(charArray0);
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, (-671), "qpQ.nut{/3B++5*'W");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Comparator comparator0 = helpFormatter0.getOptionComparator();
      helpFormatter0.defaultLongOptPrefix = "z5";
      helpFormatter0.setOptionComparator(comparator0);
      helpFormatter0.findWrapPos("z5", 11, 26);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('g');
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter1);
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) "-");
      helpFormatter0.printUsage(printWriter0, 1, "");
      assertEquals("g-usage:\n \n", stringWriter1.toString());
      
      StringBuffer stringBuffer0 = new StringBuffer(11);
      Options options0 = new Options();
      Options options1 = options0.addOption("z5", "", true, "usage: ");
      Options options2 = options1.addOption("arg", false, "<");
      helpFormatter0.renderOptions(stringBuffer0, 26, options2, 1, 26);
      assertEquals(74, helpFormatter0.getWidth());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "";
      helpFormatter0.setLongOptPrefix("");
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter("usage: ", "usage: ");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // usage: 
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLongOptPrefix();
      MockFile mockFile0 = new MockFile("}C\"g4>]H;~u");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      Locale locale0 = Locale.JAPANESE;
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) mockFile0;
      objectArray0[1] = (Object) helpFormatter0;
      objectArray0[2] = (Object) locale0;
      objectArray0[3] = (Object) mockFile0;
      objectArray0[4] = (Object) helpFormatter0;
      objectArray0[5] = (Object) helpFormatter0;
      objectArray0[6] = (Object) "--";
      mockPrintWriter0.printf(locale0, "--", objectArray0);
      int int0 = 0;
      String string0 = "";
      String string1 = null;
      Options options0 = new Options();
      Option option0 = new Option((String) null, "");
      Options options1 = options0.addOption(option0);
      boolean boolean0 = false;
      Option option1 = new Option((String) null, false, "");
      options1.addOption(option1);
      // Undeclared exception!
      try { 
        options1.addOption("'", false, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal option name '''
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      PrintWriter printWriter0 = null;
      int int0 = 386;
      String string0 = "A CloneNotSupportedException was thrown: ";
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage((PrintWriter) null, 386, "A CloneNotSupportedException was thrown: ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }
}
