/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 07 18:02:17 GMT 2021
 */

package org.apache.commons.cli;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.io.UnsupportedEncodingException;
import java.util.Comparator;
import java.util.Locale;
import org.apache.commons.cli.HelpFormatter;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.OptionGroup;
import org.apache.commons.cli.Options;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class HelpFormatter_ESTest extends HelpFormatter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.findWrapPos("od%", 0, 0);
      String string0 = "y3Vfg]";
      File file0 = MockFile.createTempFile("y3Vfg]", "-");
      String string1 = "line.separator";
      helpFormatter0.defaultSyntaxPrefix = "y3Vfg]";
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter(file0, "line.separator");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // line.separator
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Option option0 = new Option("arg", "\n");
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      Options options1 = options0.addOptionGroup(optionGroup1);
      helpFormatter0.printHelp("XXp", "-", options1, "XXp", true);
      MockPrintStream mockPrintStream0 = new MockPrintStream(" ");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
      Locale locale0 = Locale.ENGLISH;
      PrintWriter printWriter0 = mockPrintWriter0.printf(locale0, "XXp", (Object[]) null);
      helpFormatter0.printUsage(printWriter0, 307, "XXp", options0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("-");
      StringBuffer stringBuffer0 = new StringBuffer();
      Options options0 = new Options();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Options options1 = options0.addOption("arg", true, "usage: ");
      helpFormatter0.getArgName();
      helpFormatter0.printHelp("arg", "", options1, "usage: ", true);
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 1, (-2343), "arg");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "";
      int int0 = (-2);
      Options options0 = new Options();
      options0.getOptions();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("", options0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = null;
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.setDescPadding(1);
      HelpFormatter helpFormatter2 = new HelpFormatter();
      int int0 = 154;
      // Undeclared exception!
      try { 
        helpFormatter2.printHelp("arg", (Options) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = "28;'?bfPy/f4wJf]?";
      StringBuffer stringBuffer0 = null;
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((String) null, "", options0, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.rtrim((String) null);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("8LpF");
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringBuffer stringBuffer0 = new StringBuffer();
      Options options0 = new Options();
      FileSystemHandling.shouldAllThrowIOExceptions();
      options0.addOption("arg", false, "usage: ");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.getLongOptSeparator();
      // Undeclared exception!
      try { 
        helpFormatter1.findWrapPos((String) null, 3, 1447);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      StringBuffer stringBuffer0 = new StringBuffer();
      Options options0 = new Options();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Options options1 = options0.addOption("arg", true, "^");
      helpFormatter0.getArgName();
      helpFormatter0.printHelp(13, "^", "", options1, "3;B6O[(5xt1zVwZ", true);
      // Undeclared exception!
      helpFormatter0.renderOptions(stringBuffer0, 1, options0, 74, 1);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer();
      Options options0 = new Options();
      FileSystemHandling.shouldAllThrowIOExceptions();
      options0.addOption("arg", true, "^");
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 74, "arg", options0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(".lbD~b");
      Option option0 = new Option("", "");
      Options options1 = options0.addOption(option0);
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter1, 31, "' contains an illegal character : '", options1);
      helpFormatter0.getLongOptSeparator();
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = null;
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("<KS=(\"iTR<6XXi$!tJ", "usage: ", (Options) null, "0d,`s%UM7TR0`M8");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer();
      Options options0 = new Options();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Options options1 = options0.addOption("arg", true, "^");
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 74, "arg", options0);
      String string0 = helpFormatter0.defaultOptPrefix;
      helpFormatter1.printHelp((PrintWriter) mockPrintWriter0, 3, "\n", "\"}+zpw", options1, 1, 1, (String) null, true);
      helpFormatter0.createPadding(74);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)71;
      byteArray0[2] = (byte) (-108);
      byteArray0[3] = (byte)74;
      byteArray0[4] = (byte) (-2);
      byteArray0[5] = (byte)13;
      byteArray0[6] = (byte)4;
      byteArray0[7] = (byte)1;
      byteArray0[8] = (byte)36;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      String string0 = "";
      Locale locale0 = Locale.CHINA;
      int int0 = 983;
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(41, ")Z*RB%phlLZB \bz", "", (Options) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("-");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer();
      Options options0 = new Options();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      StringBuffer stringBuffer1 = new StringBuffer(32);
      helpFormatter0.renderOptions((StringBuffer) null, 32, options0, 32, 3);
      // Undeclared exception!
      try { 
        helpFormatter0.renderWrappedText((StringBuffer) null, 666, 13, "lJr;o+dcO&");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer();
      Options options0 = new Options();
      options0.hasLongOption("--");
      Options options1 = new Options();
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 74, "arg", options0);
      helpFormatter0.getLongOptSeparator();
      helpFormatter1.getSyntaxPrefix();
      // Undeclared exception!
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 1, "arg", "usage: ", options1, 3, 55, "~wl");
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setWidth(115);
      Options options0 = null;
      PipedInputStream pipedInputStream0 = new PipedInputStream(90);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0, false);
      PrintWriter printWriter0 = mockPrintWriter0.append('H');
      // Undeclared exception!
      try { 
        helpFormatter0.printOptions(printWriter0, 90, (Options) null, 125, 90);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer();
      Options options0 = new Options();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/experiment");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, true, true);
      options0.hasLongOption("--");
      options0.addOption("arg", false, "^");
      Options options1 = new Options();
      helpFormatter1.renderOptions(stringBuffer0, 342, options1, 1, 342);
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 74, "arg", options0);
      helpFormatter1.printHelp("--", options0);
      Locale locale0 = Locale.CHINA;
      helpFormatter0.renderWrappedText(stringBuffer0, 1, 1, "\n");
      helpFormatter1.printHelp((PrintWriter) mockPrintWriter0, 3952, "OE|gLlD0Q(nNV|", (String) null, options1, 32, 3, "", false);
      helpFormatter1.getDescPadding();
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer();
      Options options0 = new Options();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/experiment");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, true);
      options0.hasLongOption("org.apache.commons.cli.Options");
      options0.addOption((String) null, false, "ky[,jr4+9!");
      Options options1 = new Options();
      int int0 = 32;
      // Undeclared exception!
      try { 
        helpFormatter1.renderOptions(stringBuffer0, (-4101), options0, 74, 32);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(565);
      helpFormatter0.setArgName("");
      helpFormatter0.setLongOptSeparator("R+$wt");
      Object object0 = new Object();
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) "R+$wt";
      objectArray0[1] = (Object) locale0;
      objectArray0[3] = (Object) "R+$wt";
      helpFormatter0.getWidth();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "-");
      Options options0 = new Options();
      helpFormatter0.renderOptions(stringBuffer0, 63, options0, 0, 0);
      helpFormatter0.getWidth();
      helpFormatter0.getArgName();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0, false);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter1, 74, "", "", options0, 9, 8, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer();
      Options options0 = new Options();
      options0.hasLongOption("--");
      HelpFormatter helpFormatter2 = new HelpFormatter();
      String string0 = HelpFormatter.DEFAULT_LONG_OPT_PREFIX;
      helpFormatter1.printHelp((PrintWriter) mockPrintWriter0, 74, "^o,EC]33=!J", "&b++Fr#MpE>#J6s", options0, 80, 80, (String) null, false);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("8LpF");
      StringBuffer stringBuffer0 = new StringBuffer();
      Options options0 = new Options();
      Options options1 = new Options();
      FileSystemHandling.shouldAllThrowIOExceptions();
      options0.addOption((String) null, " ", true, "usage: ");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      // Undeclared exception!
      helpFormatter1.printUsage((PrintWriter) mockPrintWriter0, 1, "", options0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultDescPad = (-1154);
      helpFormatter0.setSyntaxPrefix("ov.");
      helpFormatter0.setArgName("arg");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("-", "", (Options) null, "kXXp", false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer("-");
      helpFormatter0.setSyntaxPrefix("usage: ");
      helpFormatter1.setLeftPadding(757);
      helpFormatter1.printWrapped((PrintWriter) mockPrintWriter0, 74, "--");
      // Undeclared exception!
      try { 
        helpFormatter1.printHelp(" v| ", "", (Options) null, "", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Option option0 = new Option("arg", "\n");
      Options options1 = options0.addOption(option0);
      OptionGroup optionGroup0 = new OptionGroup();
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      Options options2 = options1.addOptionGroup(optionGroup1);
      options0.addOption(option0);
      // Undeclared exception!
      helpFormatter0.printHelp(1, "line.separator", "", options2, "", true);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1086);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.printUsage((PrintWriter) mockPrintWriter0, 74, "--");
      helpFormatter0.setArgName("arg");
      Options options0 = new Options();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/experiment");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "--");
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) "arg");
      helpFormatter1.printHelp(printWriter0, 74, "\n", "/", options0, 17, 2644, "");
      helpFormatter0.getArgName();
      helpFormatter1.getArgName();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1086);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter0.setArgName("arg");
      Options options0 = new Options();
      helpFormatter1.defaultArgName = "";
      // Undeclared exception!
      try { 
        helpFormatter1.printHelp((PrintWriter) mockPrintWriter0, 4631, "", "--", options0, (-5456), 1, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Option option0 = new Option("arg", "\n");
      Options options1 = options0.addOption(option0);
      options1.hasShortOption("");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) null, 2, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ", (String) null, options1, 2152, 1273, "[");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getNewLine();
      helpFormatter0.findWrapPos("\n", 63, (-2646));
      helpFormatter0.setSyntaxPrefix("2kl'RD_{ayIyX'C");
      PrintWriter printWriter0 = null;
      Options options0 = new Options();
      options0.hasLongOption(" ");
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage((PrintWriter) null, 63, "R]kQK[(hmnzf`", options0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1086);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer(1086);
      // Undeclared exception!
      try { 
        helpFormatter1.renderWrappedText(stringBuffer0, 3, (-4603), "usage: ");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1086);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter0.setArgName("arg");
      Options options0 = new Options();
      helpFormatter0.printOptions(mockPrintWriter0, 1, options0, 87, 3);
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 74, "6`T<wS&fK*Wo>wI3", "UV_1sJ6,J.[)U\"=", options0, 1086, 75, " | ", false);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Option option0 = new Option("arg", "\n");
      options0.addOption(option0);
      Options options1 = new Options();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      // Undeclared exception!
      try { 
        helpFormatter1.printHelp((PrintWriter) null, 74, " ", "org.apache.commons.cli.HelpFormatter", options0, 1, 13, "--", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setSyntaxPrefix("");
      Option option0 = new Option("", "-", true, "--");
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      Options options1 = options0.addOptionGroup(optionGroup1);
      Options options2 = options1.addOption(option0);
      String string0 = "";
      helpFormatter0.printHelp((-1), "[ARG...]", "", options2, "", true);
      Locale locale0 = Locale.CHINA;
      helpFormatter0.getSyntaxPrefix();
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        stringWriter0.append((CharSequence) "-", 3, 1);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("8LpF");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer();
      Options options0 = new Options();
      FileSystemHandling.shouldAllThrowIOExceptions();
      options0.helpOptions();
      Options options1 = options0.addOption("arg", true, "^");
      HelpFormatter helpFormatter2 = new HelpFormatter();
      helpFormatter1.getArgName();
      helpFormatter2.printHelp(3, "--", "-8RCF`>PW}i@\"e", options1, " ", true);
      Locale locale0 = Locale.CHINA;
      helpFormatter0.getSyntaxPrefix();
      helpFormatter1.rtrim("arg");
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.createPadding(9);
      Option option0 = new Option("", "--", true, "-");
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      OptionGroup optionGroup1 = new OptionGroup();
      OptionGroup optionGroup2 = optionGroup1.addOption(option0);
      Options options1 = options0.addOptionGroup(optionGroup2);
      Options options2 = options0.addOption(option0);
      String string0 = "`Ny1,vEE)eTJv<wirFN";
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, true);
      Locale locale0 = new Locale("org.apache.commons.cli.HelpFormatter", "WE=3o1$J9j_`IowpGM");
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) "         ";
      mockPrintWriter0.printf(locale0, "", objectArray0);
      Options options3 = new Options();
      String string1 = ">8>T,4";
      options2.getOption(">8>T,4");
      int int0 = (-337);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 9, "e$18c}TaU-$", (String) null, options1, (-367), (-109), (String) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(565);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, false);
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 565, "R+$wt");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(byteArrayOutputStream0, true);
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 15, "d*H8]Q)ax=X9Z=j-UL");
      helpFormatter0.setLongOptSeparator("d*H8]Q)ax=X9Z=j-UL");
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter1, 44, 0, "q#J]`NSYkl|3Ws:qrb");
      helpFormatter0.getWidth();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "'");
      Options options0 = new Options();
      options0.hasLongOption(">");
      options0.getOptionGroups();
      helpFormatter0.renderOptions(stringBuffer0, 64, options0, 64, 131);
      int int0 = helpFormatter0.defaultWidth;
      helpFormatter0.setLeftPadding(74);
      helpFormatter0.getLongOptSeparator();
      helpFormatter0.getLongOptSeparator();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter1, 44, "R+$wt", "", options0, (-787), 2267, (String) null, false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setSyntaxPrefix("");
      String string0 = "";
      Option option0 = new Option("", "-", true, "--");
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      Options options1 = options0.addOptionGroup(optionGroup1);
      options1.addOption(option0);
      String string1 = "`Ny1,vEE)eTJv<wirFN";
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, true);
      Locale locale0 = new Locale("", "arg");
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) helpFormatter0;
      PrintWriter printWriter0 = mockPrintWriter0.printf(locale0, "-", objectArray0);
      Options options2 = new Options();
      options2.getOption(" ");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(printWriter0, (-2), "`Ny1,vEE)eTJv<wirFN", "", options2, (-337), 1981, "");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("8LpF");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer();
      Options options0 = new Options();
      options0.hasLongOption("-");
      Options options1 = options0.addOption("arg", false, "^");
      // Undeclared exception!
      helpFormatter1.printUsage((PrintWriter) mockPrintWriter0, 1, "8LpF", options1);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1086);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, false);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.printUsage((PrintWriter) mockPrintWriter0, 2582, "--");
      helpFormatter0.setArgName("arg");
      helpFormatter1.setLongOptSeparator(" | ");
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((-1991), "U.2 ", "\"", options0, "[", false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setSyntaxPrefix("");
      Option option0 = new Option("", "-", true, "--");
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      Options options1 = options0.addOptionGroup(optionGroup1);
      options1.addOption(option0);
      helpFormatter0.printHelp((-1), "`Ny1,vEE)eTJv<wirFN", "", options1, (String) null, true);
      Locale locale0 = Locale.CHINA;
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1086);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, false);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.printUsage((PrintWriter) mockPrintWriter0, 2582, "--");
      helpFormatter0.setArgName("arg");
      helpFormatter1.setLongOptSeparator("usage: ");
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter1.printHelp((PrintWriter) mockPrintWriter0, (-1719), "\n", "|%RV-5ElqabL", options0, 4123, 74, "Illegal option name '", false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setSyntaxPrefix("");
      helpFormatter0.setArgName("");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("-");
      PrintWriter printWriter0 = mockPrintWriter0.append('G');
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(printWriter0, false);
      mockPrintWriter0.flush();
      // Undeclared exception!
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter1, 0, "-", "", (Options) null, (-2976), 74, "", false);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.createPadding(9);
      Options options0 = new Options();
      StringBuffer stringBuffer0 = new StringBuffer(74);
      // Undeclared exception!
      try { 
        helpFormatter0.renderWrappedText((StringBuffer) null, 2674, 33, "'");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("\n");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      Options options0 = new Options();
      Option option0 = new Option("", "en");
      Options options1 = new Options();
      option0.clearValues();
      Options options2 = options1.addOption("", "usage: ", false, "`'+.PW%");
      Options options3 = options2.addOption(option0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      helpFormatter0.printHelp("7:&1g4;dXudG,eE(t", " :: ", options3, "I)T,ad:&-7J=[sFJ", true);
      helpFormatter0.printHelp(" :: ", " :: ", options2, "");
      helpFormatter0.printHelp("{*}jh8-", options0);
      helpFormatter0.getLongOptSeparator();
      // Undeclared exception!
      helpFormatter0.printHelp(0, "7=Dp$qM[:l+x", "", options3, " ]");
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("\n");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer();
      Options options0 = new Options();
      options0.hasLongOption("--");
      helpFormatter1.printUsage((PrintWriter) mockPrintWriter0, 3, "arg", options0);
      HelpFormatter helpFormatter2 = new HelpFormatter();
      helpFormatter2.setNewLine((String) null);
      helpFormatter2.setWidth(2580);
      helpFormatter1.printHelp(535, "XON2u7bQ:9W <)zCA+|", "--", options0, "", false);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Option option0 = new Option("arg", "\n");
      Options options1 = options0.addOption(option0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "-");
      Options options2 = options0.addOption("", "usage: ", false, "NMJv9~mq/tb3N|B");
      helpFormatter0.printHelp(", ", (String) null, options2, "", true);
      helpFormatter0.printHelp("H#Lzw", ", ", options0, " | ");
      Options options3 = new Options();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      StringWriter stringWriter0 = new StringWriter(4324);
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      StringBuffer stringBuffer1 = helpFormatter1.renderWrappedText(stringBuffer0, 63, 117, "");
      StringBuffer stringBuffer2 = new StringBuffer(stringBuffer1);
      Options options4 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter1.printHelp("", options1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1086);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, false);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.printUsage((PrintWriter) mockPrintWriter0, 2582, "--");
      helpFormatter1.setArgName("-");
      helpFormatter1.setLongOptSeparator("vvdUIv,w1]+%U");
      Options options0 = new Options();
      helpFormatter1.printHelp((PrintWriter) mockPrintWriter0, 63, "k:LGtX^<]*", " ", options0, 1425, 1086, "\n", false);
      helpFormatter0.getSyntaxPrefix();
      StringBuffer stringBuffer0 = new StringBuffer();
      helpFormatter1.renderWrappedText(stringBuffer0, 3, 11, ">");
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.createPadding(9);
      Options options0 = new Options();
      Option option0 = new Option("", "!+FnS,7vTm", false, "arg");
      options0.addOption(option0);
      helpFormatter0.printHelp(9, "I3hka$M$17i", "[ARG...]", options0, "", false);
      Locale locale0 = Locale.CHINA;
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.createPadding(43);
      helpFormatter1.findWrapPos("$@hZ", (-2975), 4317);
      helpFormatter0.setSyntaxPrefix("--");
      Options options0 = new Options();
      options0.hasLongOption("'rf4H-!.k@EOZo^diq]");
      // Undeclared exception!
      helpFormatter1.printUsage((PrintWriter) null, 1, "$@hZ", options0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setSyntaxPrefix("");
      helpFormatter0.setArgName("");
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped((PrintWriter) null, 34, "_<}6S83H`=pL");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getNewLine();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "\n");
      Options options0 = new Options();
      helpFormatter0.printHelp("\n", options0);
      helpFormatter0.getOptPrefix();
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultOptPrefix = "has already been selected: '";
      helpFormatter0.setLongOptSeparator("has already been selected: '");
      String string0 = "&~FdyHZ.{";
      String string1 = "Z[a gf";
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)77;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      helpFormatter0.setLongOptPrefix("Z[a gf");
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      boolean boolean0 = true;
      try { 
        pipedOutputStream0.write(byteArray0, 3, 1);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Option option0 = new Option("arg", "\n");
      Options options1 = options0.addOption(option0);
      helpFormatter0.printHelp("H#Lzw", "0`aYZyQK7fc", options1, "8 i:t:KNV{rg,1", false);
      helpFormatter0.printHelp("H#Lzw", "B9K\"3`Yua?8C7M", options0, "0`aYZyQK7fc");
      helpFormatter0.printHelp("B9K\"3`Yua?8C7M", options0, true);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.setLongOptSeparator("{;)9I.LYZr");
      Options options2 = new Options();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Ob%xLZfk");
      // Undeclared exception!
      try { 
        helpFormatter1.printHelp((PrintWriter) mockPrintWriter0, 75, (String) null, "arg", options0, (-2), 1, "8 i:t:KNV{rg,1", true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.createPadding(9);
      String string0 = "R]kQK[(hmnzf`";
      int int0 = 0;
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuffer stringBuffer1 = new StringBuffer("         ");
      Options options0 = new Options();
      String string1 = "2GNRux";
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((-345), "         ", "R]kQK[(hmnzf`", options0, "2GNRux");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1086);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, false);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.printUsage((PrintWriter) mockPrintWriter0, 2582, "--");
      helpFormatter0.setArgName("arg");
      helpFormatter0.setLongOptSeparator("-");
      Options options0 = new Options();
      HelpFormatter helpFormatter2 = new HelpFormatter();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 74, "", "--", options0, 74, 116, "--", false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(565);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, false);
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 565, "R+$wt");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(byteArrayOutputStream0, true);
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 15, "org.apache.commons.cli.OptionGroup");
      helpFormatter0.setLongOptSeparator("org.apache.commons.cli.OptionGroup");
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter1, 44, 0, "q#J]`NSYkl|3Ws:qrb");
      helpFormatter0.getWidth();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "");
      Options options0 = new Options();
      options0.getOptionGroups();
      helpFormatter0.renderOptions(stringBuffer0, 64, options0, 64, 131);
      helpFormatter0.getWidth();
      helpFormatter0.setLeftPadding(74);
      helpFormatter0.getLongOptSeparator();
      helpFormatter0.getLongOptSeparator();
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(565);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, false);
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 565, "R+$wt");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(byteArrayOutputStream0, true);
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter1, 565, "");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.setArgName("-");
      helpFormatter1.setLongOptSeparator(" ");
      Options options0 = new Options();
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter1, 75, "&V?'_", "", options0, 75, 5072, "arg", false);
      helpFormatter1.getLeftPadding();
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1086);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, false);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      int int0 = 1;
      // Undeclared exception!
      helpFormatter1.printUsage((PrintWriter) mockPrintWriter0, 1, "ym:v");
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = (-2305);
      helpFormatter0.defaultLeftPad = (-2305);
      String string0 = "`4`/S+";
      helpFormatter0.defaultOptPrefix = "`4`/S+";
      helpFormatter0.setWidth((-2));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " ");
      helpFormatter0.defaultLongOptPrefix = "]";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      helpFormatter0.getNewLine();
      helpFormatter0.getWidth();
      helpFormatter0.getNewLine();
      helpFormatter0.getDescPadding();
      StringBuffer stringBuffer0 = null;
      try {
        stringBuffer0 = new StringBuffer((-2));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = 10;
      helpFormatter0.setDescPadding(10);
      helpFormatter0.getLongOptSeparator();
      helpFormatter0.defaultWidth = 10;
      helpFormatter0.rtrim("");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "usage: ");
      int int1 = 1;
      Options options0 = null;
      // Undeclared exception!
      try { 
        helpFormatter0.renderOptions(stringBuffer0, 1, (Options) null, 1, 10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ");
      Options options0 = new Options();
      Option option0 = new Option((String) null, "");
      options0.addOption(option0);
      helpFormatter0.printHelp((-1), "H#Lzw", "H#Lzw", options0, "", true);
      helpFormatter0.getArgName();
      helpFormatter0.getDescPadding();
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.createPadding(9);
      String string0 = "R]kQK[(hmnzf`";
      int int0 = (-343);
      int int1 = 0;
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      helpFormatter0.renderWrappedText(stringBuffer0, 0, 9, "         ");
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(565);
      helpFormatter0.setArgName("");
      helpFormatter0.setLongOptSeparator((String) null);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
      Locale locale0 = Locale.FRANCE;
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) locale0;
      objectArray0[1] = (Object) byteArrayOutputStream0;
      PrintWriter printWriter0 = mockPrintWriter0.format(locale0, "", objectArray0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(printWriter0);
      PrintWriter printWriter1 = mockPrintWriter1.append('y');
      Object object0 = new Object();
      Locale locale1 = Locale.TRADITIONAL_CHINESE;
      mockPrintWriter0.printf(locale0, "<|zC-APT1tk:FP", objectArray0);
      helpFormatter0.printWrapped(printWriter1, 27, 27, "]");
      helpFormatter0.getWidth();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "--");
      Options options0 = new Options();
      options0.getOptionGroups();
      helpFormatter0.renderOptions(stringBuffer0, (-3697), options0, 0, 74);
      helpFormatter0.getWidth();
      helpFormatter0.setLeftPadding(27);
      helpFormatter0.getLongOptSeparator();
      helpFormatter0.getLongOptSeparator();
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(565);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, false);
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 565, "R+$wt");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(byteArrayOutputStream0, true);
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 15, "org.apache.commons.cli.OptionGroup");
      helpFormatter0.setLongOptSeparator("org.apache.commons.cli.OptionGroup");
      Options options0 = new Options();
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter1, 3, "6`T<wS&fK*Wo>wI3", "", options0, 1425, 63, "R+$wt", false);
      helpFormatter0.getSyntaxPrefix();
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      helpFormatter0.renderWrappedText(stringBuffer0, 0, 0, "6`T<wS&fK*Wo>wI3");
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.createPadding(9);
      helpFormatter0.findWrapPos("R]kQK[(hmnzf`", 855, 74);
      helpFormatter0.setSyntaxPrefix("R]kQK[(hmnzf`");
      Options options0 = new Options();
      options0.hasLongOption("-");
      helpFormatter0.setWidth(74);
      helpFormatter0.getNewLine();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("", options0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1086);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, false);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.printUsage((PrintWriter) mockPrintWriter0, 2582, "--");
      helpFormatter0.setArgName("arg");
      helpFormatter1.setLongOptSeparator(" | ");
      Options options0 = new Options();
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 74, "6`T<wS&fK*Wo>wI3", "UV_1sJ6,J.[)U\"=", options0, 1086, 75, " | ", false);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = 20;
      EvoSuiteFile evoSuiteFile0 = null;
      PipedInputStream pipedInputStream0 = new PipedInputStream(1826);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0);
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      Options options2 = options1.addOption((String) null, "", false, (String) null);
      // Undeclared exception!
      try { 
        helpFormatter0.printOptions(mockPrintWriter0, 1826, options2, (-442), 31);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = 9;
      helpFormatter0.createPadding(9);
      String string0 = "R]kQK[(hmnzf`";
      // Undeclared exception!
      try { 
        helpFormatter0.findWrapPos("         ", 9, (-2646));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("\n");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      Options options0 = new Options();
      Option option0 = new Option("", (String) null, false, "'");
      Options options1 = options0.addOption(option0);
      helpFormatter0.printHelp(10, "]", "", options1, "", false);
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(10, "", (String) null, options0, "_3<yfpfDh\"MQ4i6P\"", false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("\n");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      Options options0 = new Options();
      Option option0 = new Option("", (String) null, false, "'");
      helpFormatter0.setWidth(10);
      helpFormatter0.getNewLine();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      // Undeclared exception!
      try { 
        helpFormatter1.printHelp((String) null, options0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(565);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, true);
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 565, "R+$wt");
      helpFormatter0.setArgName("");
      helpFormatter0.setLongOptSeparator("R+$wt");
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, (-1537), "6`T<wS&fK*Wo>wI3", "6`T<wS&fK*Wo>wI3", options0, 190, (-1537), "6`T<wS&fK*Wo>wI3", false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "q+|CeW~[Qm)aq s5U_,";
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(31);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, true);
      String string1 = null;
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 31, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.createPadding(9);
      helpFormatter0.findWrapPos("R]kQK[(hmnzf`", 855, 4317);
      helpFormatter0.setSyntaxPrefix("R]kQK[(hmnzf`");
      helpFormatter0.setSyntaxPrefix("");
      helpFormatter0.setArgName("R]kQK[(hmnzf`");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("[ option: ", "org.apache.commons.cli.AlreadySelectedException", (Options) null, "RUb", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultArgName = "";
      helpFormatter0.setSyntaxPrefix("");
      helpFormatter0.setArgName("");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(5, "_<}6S83H`=pL", "_<}6S83H`=pL", (Options) null, "_<}6S83H`=pL", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Option option0 = new Option("arg", "\n");
      Options options1 = options0.addOption(option0);
      helpFormatter0.printHelp("H#Lzw", "0`aYZyQK7fc", options1, "8 i:t:KNV{rg,1", false);
      helpFormatter0.printHelp("H#Lzw", "B9K\"3`Yua?8C7M", options0, "0`aYZyQK7fc");
      helpFormatter0.printHelp("B9K\"3`Yua?8C7M", options0, true);
      File file0 = MockFile.createTempFile("Hy4lotS=2|8m]l6%4", (String) null);
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter(file0, "");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // 
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.createPadding(9);
      String string0 = "R]kQK[(hmnzf`";
      helpFormatter0.findWrapPos("R]kQK[(hmnzf`", 855, 4317);
      int int0 = (-343);
      int int1 = 0;
      StringBuffer stringBuffer0 = new StringBuffer();
      String string1 = "";
      helpFormatter0.renderWrappedText(stringBuffer0, 0, (-343), "");
      Options options0 = new Options();
      helpFormatter0.printHelp(855, "         ", "R]kQK[(hmnzf`", options0, "         ");
      String string2 = null;
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getNewLine();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "\n");
      Options options0 = new Options();
      helpFormatter0.printHelp("\n", options0);
      helpFormatter0.getLongOptSeparator();
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(565);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, false);
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 565, "R+$wt");
      helpFormatter0.setArgName("");
      helpFormatter0.setLongOptSeparator("R+$wt");
      PrintWriter printWriter0 = mockPrintWriter0.append('w');
      Object object0 = new Object();
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) "R+$wt";
      objectArray0[1] = (Object) locale0;
      objectArray0[2] = (Object) printWriter0;
      objectArray0[3] = (Object) "R+$wt";
      mockPrintWriter0.printf(locale0, "R+$wt", objectArray0);
      int int0 = 0;
      // Undeclared exception!
      helpFormatter0.printWrapped(printWriter0, 0, 0, "R+$wt");
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Option option0 = new Option("arg", "\n");
      options0.addOption(option0);
      int int0 = 0;
      StringWriter stringWriter0 = new StringWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, (-2), 1521, "01aYZyQ.K7fc:");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("\n");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      Object[] objectArray0 = new Object[0];
      mockPrintWriter1.printf("]", objectArray0);
      Options options0 = new Options();
      Option option0 = new Option("", (String) null, false, "'");
      Options options1 = options0.addOption(option0);
      helpFormatter0.printHelp(10, "]", "", options1, "", false);
      String string0 = null;
      Locale locale0 = null;
      try {
        locale0 = new Locale("arg", (String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Locale", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      PrintWriter printWriter0 = null;
      String string0 = null;
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped((PrintWriter) null, 1, 1, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(565);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, false);
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 565, "R+$wt");
      helpFormatter0.setArgName("");
      helpFormatter0.setLongOptSeparator("R+$wt");
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, (-1537), "6`T<wS&fK*Wo>wI3", "6`T<wS&fK*Wo>wI3", options0, 190, (-1537), "6`T<wS&fK*Wo>wI3", true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setWidth(32);
      helpFormatter0.findWrapPos("*", 1521, 1521);
      StringBuffer stringBuffer0 = new StringBuffer("--");
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      Options options2 = options1.addOption("", false, (String) null);
      helpFormatter0.renderOptions(stringBuffer0, (-1), options2, 1521, 32);
      helpFormatter0.setWidth(1521);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.optionComparator = comparator0;
      helpFormatter0.getNewLine();
      helpFormatter0.defaultSyntaxPrefix = "[ARG...]";
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("vp`'T8tD'T?A7@f^z$", (Options) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getNewLine();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "\n");
      Options options0 = new Options();
      Option option0 = new Option("", false, (String) null);
      Options options1 = options0.addOption(option0);
      Options options2 = options1.addOption("arg", "usage: ", false, "<pNji<8OJ@!n2ZGr ");
      OptionGroup optionGroup0 = new OptionGroup();
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      options2.addOptionGroup(optionGroup1);
      helpFormatter0.printHelp("\n", "", options0, "", false);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.defaultSyntaxPrefix = "--";
      StringBuffer stringBuffer0 = new StringBuffer(">K]'@w`o0kTc_JIq}g");
      String string0 = ":(p,89>>%,<1#;r";
      helpFormatter0.defaultArgName = ":(p,89>>%,<1#;r";
      helpFormatter0.renderWrappedText(stringBuffer0, 1064, 1064, "--");
      helpFormatter0.createPadding(0);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("--", (Options) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer();
      Options options0 = new Options();
      FileSystemHandling.shouldAllThrowIOExceptions();
      options0.helpOptions();
      options0.addOption("arg", true, "^");
      HelpFormatter helpFormatter2 = new HelpFormatter();
      helpFormatter1.getArgName();
      helpFormatter1.printHelp((PrintWriter) mockPrintWriter0, 74, "arg", "arg", options0, 64, 3, "arg", true);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLeftPadding(1);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLongOptSeparator(" | ");
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.renderOptions((StringBuffer) null, 2582, options0, 75, (-1501));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setOptionComparator((Comparator) null);
      helpFormatter0.setNewLine(" ");
      helpFormatter0.setWidth(63);
      StringBuffer stringBuffer0 = new StringBuffer();
      Options options0 = new Options();
      helpFormatter0.renderOptions(stringBuffer0, 0, options0, 9, 0);
      helpFormatter0.setOptionComparator((Comparator) null);
      // Undeclared exception!
      try { 
        MockFile.createTempFile("--", "}_D W_Ao9H>JK");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.createPadding(44);
      String string0 = "org.apache.commons.cli.HelpFormatter$1";
      helpFormatter0.defaultNewLine = "org.apache.commons.cli.HelpFormatter$1";
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.setOptionComparator(comparator0);
      helpFormatter0.setNewLine(":Rkv].o$Y0JVzA");
      helpFormatter0.setWidth((-131));
      StringBuffer stringBuffer0 = new StringBuffer();
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.renderOptions(stringBuffer0, (-836), options0, 0, (-2));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ");
      int int0 = (-1567);
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, (-1567), "5");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = (-1);
      // Undeclared exception!
      try { 
        helpFormatter0.createPadding((-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getSyntaxPrefix();
      helpFormatter0.setNewLine("usage: ");
      helpFormatter0.setArgName("");
      String string0 = "";
      Options options0 = new Options();
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        options0.addOption("usage: ", true, "arg");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The option 'usage: ' contains an illegal character : ':'
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.createPadding(9);
      String string0 = "R]kQK[(hmnzf`";
      int int0 = 4317;
      helpFormatter0.findWrapPos("R]kQK[(hmnzf`", 855, 4317);
      helpFormatter0.setSyntaxPrefix("R]kQK[(hmnzf`");
      PrintWriter printWriter0 = null;
      Options options0 = new Options();
      options0.hasLongOption("-");
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage((PrintWriter) null, 855, "R]kQK[(hmnzf`", options0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultArgName = "*M[Ka";
      helpFormatter0.setWidth((-238));
      StringBuffer stringBuffer0 = new StringBuffer("");
      stringBuffer0.trimToSize();
      // Undeclared exception!
      try { 
        helpFormatter0.renderWrappedText(stringBuffer0, (-238), (-238), "");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Option option0 = new Option("arg", "\n");
      options0.addOption(option0);
      helpFormatter0.printHelp(1522, "01aYZyQ.K7fc:", "01aYZyQ.K7fc:", options0, "H#Lzw", true);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultArgName = "";
      helpFormatter0.setSyntaxPrefix("");
      helpFormatter0.setArgName("");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("", "_<}6S83H`=pL", (Options) null, "_<}6S83H`=pL", false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      options0.addOption("", true, " :fo+`2I@Wl$,1Loa");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(0, "", "l%oqoL@1^g$", options0, "l%oqoL@1^g$");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = helpFormatter0.getNewLine();
      assertEquals("\n", string0);
      
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "\n");
      Options options0 = new Options();
      helpFormatter0.renderOptions(stringBuffer0, 3, options0, 0, 31);
      assertEquals(3, helpFormatter0.defaultDescPad);
      assertEquals("usage: ", helpFormatter0.getSyntaxPrefix());
      assertEquals(74, helpFormatter0.defaultWidth);
      assertEquals(" ", helpFormatter0.getLongOptSeparator());
      assertEquals("--", helpFormatter0.getLongOptPrefix());
      assertEquals("-", helpFormatter0.getOptPrefix());
      assertEquals(1, helpFormatter0.defaultLeftPad);
      assertEquals("arg", helpFormatter0.getArgName());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setSyntaxPrefix("9`(P$e_Ofzc*A");
      helpFormatter0.getArgName();
      helpFormatter0.defaultLeftPad = (-1);
      helpFormatter0.setNewLine("arg");
      helpFormatter0.setDescPadding(0);
      int int0 = helpFormatter0.findWrapPos("arg", 432, 432);
      assertEquals("arg", helpFormatter0.getNewLine());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "q+|CeW~[Qm)aq s5U_,";
      helpFormatter0.rtrim("q+|CeW~[Qm)aq s5U_,");
      File file0 = null;
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getWidth();
      helpFormatter0.setLongOptSeparator((String) null);
      String string0 = "6v>X;y";
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("6v>X;y");
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) "arg");
      String string1 = "arg";
      helpFormatter0.setOptPrefix("arg");
      int int0 = 3450;
      mockPrintWriter0.write(3450);
      int int1 = (-3405);
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped(printWriter0, (-3405), "6v>X;y");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = null;
      helpFormatter0.setNewLine((String) null);
      StringBuffer stringBuffer0 = new StringBuffer("-");
      String string1 = "(";
      // Undeclared exception!
      try { 
        helpFormatter0.renderWrappedText(stringBuffer0, (-2148), (-2148), "(");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getOptionComparator();
      helpFormatter0.getLongOptSeparator();
      Options options0 = new Options();
      options0.addOption("", "usage: ", true, "[dL=pS:7l&/_");
      OptionGroup optionGroup0 = new OptionGroup();
      // Undeclared exception!
      try { 
        optionGroup0.addOption((Option) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.OptionGroup", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockFile mockFile0 = new MockFile("-", "\n");
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter(mockFile0, "r43/Uu@W-v1");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // r43/Uu@W-v1
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }
}
