* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-30
* Going to generate test cases for class: org.apache.commons.cli.HelpFormatter
* Starting Client-0
* Connecting to master process on port 12360
* Analyzing classpath: 
  - subjects/buggy-versions/Cli-33/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.cli.HelpFormatter
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1103
* Using seed 1709994748
* Starting evolution
bbc usage percentage is: 30%
* Initial Number of Goals in DynaMOSA = 400 / 1103
[MASTER] 17:49:24.914 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
*C2*
*C2*
* Search finished after 601s and 108 generations, 46419 statements, best individual has fitness: 138.0
* Minimizing test suite
[MASTER] 18:00:44.707 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 201
* Number of covered goals: 200
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 91%
* Total number of goals: 149
* Number of covered goals: 136
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 56
* Number of covered goals: 56
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 94%
* Total number of goals: 478
* Number of covered goals: 450
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 61%
* Total number of goals: 46
* Number of covered goals: 28
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 98%
* Total number of goals: 40
* Number of covered goals: 39
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 40
* Number of covered goals: 39
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 89%
* Total number of goals: 149
* Number of covered goals: 133
* Generated 120 tests with total length 1914
* Resulting test suite's coverage: 85% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 18:01:47.267 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Resulting test suite's mutation score: 6%
* Compiling and checking tests
[MASTER] 18:02:11.451 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:02:11.621 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:02:11.696 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:02:11.761 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:02:11.813 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:02:12.893 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:02:27.233 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.lang.RuntimePermission" "writeFileDescriptor")
java.lang.Thread.getStackTrace(Thread.java:1559)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkWrite(SecurityManager.java:954)
java.io.FileOutputStream.<init>(FileOutputStream.java:245)
org.evosuite.runtime.mock.java.io.MockFileOutputStream.<init>(MockFileOutputStream.java:114)
org.apache.commons.cli.HelpFormatter_207_tmp__ESTest.test0(HelpFormatter_207_tmp__ESTest.java:33)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:498)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:288)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:282)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:748)

[MASTER] 18:02:27.234 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FileSystemHandling.createFolder((EvoSuiteFile) null);
HelpFormatter helpFormatter0 = new HelpFormatter();
FileDescriptor fileDescriptor0 = new FileDescriptor();
MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(fileDescriptor0);
BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockFileOutputStream0, 34);
MockPrintWriter mockPrintWriter0 = new MockPrintWriter(bufferedOutputStream0, false);
Locale locale0 = Locale.JAPAN;
Object[] objectArray0 = new Object[8];
objectArray0[0] = (Object) locale0;
objectArray0[1] = (Object) null;
objectArray0[2] = (Object) mockFileOutputStream0;
objectArray0[3] = (Object) null;
objectArray0[4] = (Object) null;
objectArray0[5] = (Object) bufferedOutputStream0;
mockPrintWriter0.println((float) 74);
objectArray0[6] = (Object) locale0;
objectArray0[7] = (Object) null;
bufferedOutputStream0.write(0);
String string0 = ",q/DdL7oY";
mockPrintWriter0.printf(",q/DdL7oY", objectArray0);
PrintWriter printWriter0 = mockPrintWriter0.format(locale0, "usage: ", objectArray0);
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
String string1 = null;
Options options0 = null;
helpFormatter0.printUsage(printWriter0, 34, (String) null, (Options) null);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing tests to file
* Writing JUnit test case 'HelpFormatter_ESTest' to results/Cli-33/org.apache.commons.cli.HelpFormatter/BBC-F0-opt-30/tests/9
* Done!

* Computation finished
