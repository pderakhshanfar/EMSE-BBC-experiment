* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-30
* Going to generate test cases for class: org.apache.commons.cli.HelpFormatter
* Starting Client-0
* Connecting to master process on port 2112
* Analyzing classpath: 
  - subjects/buggy-versions/Cli-33/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.cli.HelpFormatter
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1103
* Using seed 714152156
* Starting evolution
bbc usage percentage is: 30%
* Initial Number of Goals in DynaMOSA = 400 / 1103
[MASTER] 17:48:53.453 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
* Search finished after 603s and 89 generations, 39390 statements, best individual has fitness: 188.0
* Minimizing test suite
[MASTER] 18:00:14.434 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 93%
* Total number of goals: 201
* Number of covered goals: 186
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 80%
* Total number of goals: 149
* Number of covered goals: 119
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 54
* Number of covered goals: 54
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 90%
* Total number of goals: 478
* Number of covered goals: 430
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 65%
* Total number of goals: 46
* Number of covered goals: 30
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 98%
* Total number of goals: 40
* Number of covered goals: 39
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 40
* Number of covered goals: 39
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 80%
* Total number of goals: 149
* Number of covered goals: 119
* Generated 131 tests with total length 1899
* Resulting test suite's coverage: 82% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 18:01:07.004 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.8157666666666666% of time used, but only 37/131 tests minimized), falling back to using all assertions
[MASTER] 18:01:18.224 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Resulting test suite's mutation score: 15%
* Compiling and checking tests
[MASTER] 18:01:44.779 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:01:44.875 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:01:44.952 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:01:45.042 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:01:45.102 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:01:45.152 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:01:45.220 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:01:45.276 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:01:45.329 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:01:59.238 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.lang.RuntimePermission" "writeFileDescriptor")
java.lang.Thread.getStackTrace(Thread.java:1559)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkWrite(SecurityManager.java:954)
java.io.FileOutputStream.<init>(FileOutputStream.java:245)
org.evosuite.runtime.mock.java.io.MockFileOutputStream.<init>(MockFileOutputStream.java:114)
org.apache.commons.cli.HelpFormatter_212_tmp__ESTest.test0(HelpFormatter_212_tmp__ESTest.java:232)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:498)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:288)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:282)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:748)

[MASTER] 18:01:59.241 [logback-1] WARN  JUnitAnalyzer - Failing test:
 HelpFormatter helpFormatter0 = new HelpFormatter();
assertEquals(3, helpFormatter0.getDescPadding());
assertEquals(74, helpFormatter0.getWidth());
assertEquals("arg", helpFormatter0.getArgName());
assertEquals("--", helpFormatter0.getLongOptPrefix());
assertEquals("usage: ", helpFormatter0.getSyntaxPrefix());
assertEquals(1, helpFormatter0.getLeftPadding());
assertEquals(" ", helpFormatter0.getLongOptSeparator());
assertEquals("-", helpFormatter0.getOptPrefix());
assertEquals("\n", helpFormatter0.getNewLine());
assertEquals(3, HelpFormatter.DEFAULT_DESC_PAD);
assertEquals(3, helpFormatter0.defaultDescPad);
assertEquals(1, helpFormatter0.defaultLeftPad);
assertEquals(74, HelpFormatter.DEFAULT_WIDTH);
assertEquals(1, HelpFormatter.DEFAULT_LEFT_PAD);
assertEquals(74, helpFormatter0.defaultWidth);
assertNotNull(helpFormatter0);

Options options0 = new Options();
assertNotNull(options0);

List list0 = options0.getMatchingOptions("");
assertTrue(list0.isEmpty());
assertEquals(0, list0.size());
assertNotNull(list0);

HelpFormatter helpFormatter1 = new HelpFormatter();
assertFalse(helpFormatter1.equals((Object)helpFormatter0));
assertEquals("\n", helpFormatter1.getNewLine());
assertEquals("usage: ", helpFormatter1.getSyntaxPrefix());
assertEquals(3, helpFormatter1.getDescPadding());
assertEquals(" ", helpFormatter1.getLongOptSeparator());
assertEquals("-", helpFormatter1.getOptPrefix());
assertEquals(1, helpFormatter1.getLeftPadding());
assertEquals(74, helpFormatter1.getWidth());
assertEquals("arg", helpFormatter1.getArgName());
assertEquals("--", helpFormatter1.getLongOptPrefix());
assertEquals(1, helpFormatter1.defaultLeftPad);
assertEquals(74, helpFormatter1.defaultWidth);
assertEquals(3, helpFormatter1.defaultDescPad);
assertEquals(74, HelpFormatter.DEFAULT_WIDTH);
assertEquals(3, HelpFormatter.DEFAULT_DESC_PAD);
assertEquals(1, HelpFormatter.DEFAULT_LEFT_PAD);
assertNotNull(helpFormatter1);

helpFormatter1.setLongOptPrefix("arg");
assertFalse(helpFormatter1.equals((Object)helpFormatter0));
assertEquals("\n", helpFormatter1.getNewLine());
assertEquals("usage: ", helpFormatter1.getSyntaxPrefix());
assertEquals(3, helpFormatter1.getDescPadding());
assertEquals("arg", helpFormatter1.getLongOptPrefix());
assertEquals(" ", helpFormatter1.getLongOptSeparator());
assertEquals("-", helpFormatter1.getOptPrefix());
assertEquals(1, helpFormatter1.getLeftPadding());
assertEquals(74, helpFormatter1.getWidth());
assertEquals("arg", helpFormatter1.getArgName());
assertEquals(1, helpFormatter1.defaultLeftPad);
assertEquals(74, helpFormatter1.defaultWidth);
assertEquals(3, helpFormatter1.defaultDescPad);
assertEquals(74, HelpFormatter.DEFAULT_WIDTH);
assertEquals(3, HelpFormatter.DEFAULT_DESC_PAD);
assertEquals(1, HelpFormatter.DEFAULT_LEFT_PAD);
assertNotSame(helpFormatter1, helpFormatter0);

HelpFormatter helpFormatter2 = new HelpFormatter();
assertFalse(helpFormatter2.equals((Object)helpFormatter1));
assertFalse(helpFormatter2.equals((Object)helpFormatter0));
assertEquals("-", helpFormatter2.getOptPrefix());
assertEquals(1, helpFormatter2.getLeftPadding());
assertEquals(" ", helpFormatter2.getLongOptSeparator());
assertEquals("\n", helpFormatter2.getNewLine());
assertEquals(3, helpFormatter2.getDescPadding());
assertEquals("arg", helpFormatter2.getArgName());
assertEquals("usage: ", helpFormatter2.getSyntaxPrefix());
assertEquals("--", helpFormatter2.getLongOptPrefix());
assertEquals(74, helpFormatter2.getWidth());
assertEquals(74, helpFormatter2.defaultWidth);
assertEquals(1, helpFormatter2.defaultLeftPad);
assertEquals(74, HelpFormatter.DEFAULT_WIDTH);
assertEquals(3, HelpFormatter.DEFAULT_DESC_PAD);
assertEquals(3, helpFormatter2.defaultDescPad);
assertEquals(1, HelpFormatter.DEFAULT_LEFT_PAD);
assertNotNull(helpFormatter2);

HelpFormatter helpFormatter3 = new HelpFormatter();
assertFalse(helpFormatter3.equals((Object)helpFormatter1));
assertFalse(helpFormatter3.equals((Object)helpFormatter2));
assertFalse(helpFormatter3.equals((Object)helpFormatter0));
assertEquals("-", helpFormatter3.getOptPrefix());
assertEquals("--", helpFormatter3.getLongOptPrefix());
assertEquals(1, helpFormatter3.getLeftPadding());
assertEquals(74, helpFormatter3.getWidth());
assertEquals("arg", helpFormatter3.getArgName());
assertEquals("\n", helpFormatter3.getNewLine());
assertEquals(" ", helpFormatter3.getLongOptSeparator());
assertEquals(3, helpFormatter3.getDescPadding());
assertEquals("usage: ", helpFormatter3.getSyntaxPrefix());
assertEquals(74, helpFormatter3.defaultWidth);
assertEquals(1, helpFormatter3.defaultLeftPad);
assertEquals(1, HelpFormatter.DEFAULT_LEFT_PAD);
assertEquals(3, helpFormatter3.defaultDescPad);
assertEquals(74, HelpFormatter.DEFAULT_WIDTH);
assertEquals(3, HelpFormatter.DEFAULT_DESC_PAD);
assertNotNull(helpFormatter3);

int int0 = helpFormatter3.getDescPadding();
assertFalse(helpFormatter3.equals((Object)helpFormatter1));
assertFalse(helpFormatter3.equals((Object)helpFormatter2));
assertFalse(helpFormatter3.equals((Object)helpFormatter0));
assertEquals("-", helpFormatter3.getOptPrefix());
assertEquals("--", helpFormatter3.getLongOptPrefix());
assertEquals(1, helpFormatter3.getLeftPadding());
assertEquals(74, helpFormatter3.getWidth());
assertEquals("arg", helpFormatter3.getArgName());
assertEquals("\n", helpFormatter3.getNewLine());
assertEquals(" ", helpFormatter3.getLongOptSeparator());
assertEquals(3, helpFormatter3.getDescPadding());
assertEquals("usage: ", helpFormatter3.getSyntaxPrefix());
assertEquals(3, int0);
assertEquals(74, helpFormatter3.defaultWidth);
assertEquals(1, helpFormatter3.defaultLeftPad);
assertEquals(1, HelpFormatter.DEFAULT_LEFT_PAD);
assertEquals(3, helpFormatter3.defaultDescPad);
assertEquals(74, HelpFormatter.DEFAULT_WIDTH);
assertEquals(3, HelpFormatter.DEFAULT_DESC_PAD);
assertNotSame(helpFormatter3, helpFormatter1);
assertNotSame(helpFormatter3, helpFormatter2);
assertNotSame(helpFormatter3, helpFormatter0);

String string0 = helpFormatter2.getLongOptPrefix();
assertFalse(helpFormatter2.equals((Object)helpFormatter1));
assertFalse(helpFormatter2.equals((Object)helpFormatter0));
assertFalse(helpFormatter2.equals((Object)helpFormatter3));
assertEquals("-", helpFormatter2.getOptPrefix());
assertEquals(1, helpFormatter2.getLeftPadding());
assertEquals(" ", helpFormatter2.getLongOptSeparator());
assertEquals("\n", helpFormatter2.getNewLine());
assertEquals(3, helpFormatter2.getDescPadding());
assertEquals("arg", helpFormatter2.getArgName());
assertEquals("usage: ", helpFormatter2.getSyntaxPrefix());
assertEquals("--", helpFormatter2.getLongOptPrefix());
assertEquals(74, helpFormatter2.getWidth());
assertEquals("--", string0);
assertEquals(74, helpFormatter2.defaultWidth);
assertEquals(1, helpFormatter2.defaultLeftPad);
assertEquals(74, HelpFormatter.DEFAULT_WIDTH);
assertEquals(3, HelpFormatter.DEFAULT_DESC_PAD);
assertEquals(3, helpFormatter2.defaultDescPad);
assertEquals(1, HelpFormatter.DEFAULT_LEFT_PAD);
assertNotSame(helpFormatter2, helpFormatter1);
assertNotSame(helpFormatter2, helpFormatter0);
assertNotSame(helpFormatter2, helpFormatter3);
assertNotNull(string0);

HelpFormatter helpFormatter4 = new HelpFormatter();
assertFalse(helpFormatter4.equals((Object)helpFormatter1));
assertFalse(helpFormatter4.equals((Object)helpFormatter2));
assertFalse(helpFormatter4.equals((Object)helpFormatter3));
assertFalse(helpFormatter4.equals((Object)helpFormatter0));
assertEquals("--", helpFormatter4.getLongOptPrefix());
assertEquals("-", helpFormatter4.getOptPrefix());
assertEquals(1, helpFormatter4.getLeftPadding());
assertEquals(74, helpFormatter4.getWidth());
assertEquals("arg", helpFormatter4.getArgName());
assertEquals("\n", helpFormatter4.getNewLine());
assertEquals("usage: ", helpFormatter4.getSyntaxPrefix());
assertEquals(" ", helpFormatter4.getLongOptSeparator());
assertEquals(3, helpFormatter4.getDescPadding());
assertEquals(74, HelpFormatter.DEFAULT_WIDTH);
assertEquals(74, helpFormatter4.defaultWidth);
assertEquals(1, HelpFormatter.DEFAULT_LEFT_PAD);
assertEquals(3, helpFormatter4.defaultDescPad);
assertEquals(1, helpFormatter4.defaultLeftPad);
assertEquals(3, HelpFormatter.DEFAULT_DESC_PAD);
assertNotNull(helpFormatter4);

helpFormatter4.printHelp(74, "org.apache.commons.cli.ParseException", "--", options0, "arg", true);
assertFalse(helpFormatter4.equals((Object)helpFormatter1));
assertFalse(helpFormatter4.equals((Object)helpFormatter2));
assertFalse(helpFormatter4.equals((Object)helpFormatter3));
assertFalse(helpFormatter4.equals((Object)helpFormatter0));
assertEquals("--", helpFormatter4.getLongOptPrefix());
assertEquals("-", helpFormatter4.getOptPrefix());
assertEquals(1, helpFormatter4.getLeftPadding());
assertEquals(74, helpFormatter4.getWidth());
assertEquals("arg", helpFormatter4.getArgName());
assertEquals("\n", helpFormatter4.getNewLine());
assertEquals("usage: ", helpFormatter4.getSyntaxPrefix());
assertEquals(" ", helpFormatter4.getLongOptSeparator());
assertEquals(3, helpFormatter4.getDescPadding());
assertEquals(74, HelpFormatter.DEFAULT_WIDTH);
assertEquals(74, helpFormatter4.defaultWidth);
assertEquals(1, HelpFormatter.DEFAULT_LEFT_PAD);
assertEquals(3, helpFormatter4.defaultDescPad);
assertEquals(1, helpFormatter4.defaultLeftPad);
assertEquals(3, HelpFormatter.DEFAULT_DESC_PAD);
assertNotSame(helpFormatter4, helpFormatter1);
assertNotSame(helpFormatter4, helpFormatter2);
assertNotSame(helpFormatter4, helpFormatter3);
assertNotSame(helpFormatter4, helpFormatter0);

FileDescriptor fileDescriptor0 = new FileDescriptor();
assertFalse(fileDescriptor0.valid());
assertNotNull(fileDescriptor0);

MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(fileDescriptor0);
assertNotNull(mockFileOutputStream0);

MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0);
assertNotNull(mockPrintWriter0);

helpFormatter3.printUsage((PrintWriter) mockPrintWriter0, (-1050), "-", options0);

[MASTER] 18:02:02.555 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.lang.RuntimePermission" "writeFileDescriptor")
java.lang.Thread.getStackTrace(Thread.java:1559)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkWrite(SecurityManager.java:954)
java.io.FileOutputStream.<init>(FileOutputStream.java:245)
org.evosuite.runtime.mock.java.io.MockFileOutputStream.<init>(MockFileOutputStream.java:114)
org.apache.commons.cli.HelpFormatter_217_tmp__ESTest.test0(HelpFormatter_217_tmp__ESTest.java:53)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:498)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:288)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:282)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:748)

[MASTER] 18:02:02.556 [logback-1] WARN  JUnitAnalyzer - Failing test:
 HelpFormatter helpFormatter0 = new HelpFormatter();
assertEquals(3, helpFormatter0.getDescPadding());
assertEquals(74, helpFormatter0.getWidth());
assertEquals("arg", helpFormatter0.getArgName());
assertEquals("--", helpFormatter0.getLongOptPrefix());
assertEquals("usage: ", helpFormatter0.getSyntaxPrefix());
assertEquals(1, helpFormatter0.getLeftPadding());
assertEquals(" ", helpFormatter0.getLongOptSeparator());
assertEquals("-", helpFormatter0.getOptPrefix());
assertEquals("\n", helpFormatter0.getNewLine());
assertEquals(3, HelpFormatter.DEFAULT_DESC_PAD);
assertEquals(3, helpFormatter0.defaultDescPad);
assertEquals(1, helpFormatter0.defaultLeftPad);
assertEquals(74, HelpFormatter.DEFAULT_WIDTH);
assertEquals(1, HelpFormatter.DEFAULT_LEFT_PAD);
assertEquals(74, helpFormatter0.defaultWidth);
assertNotNull(helpFormatter0);

String string0 = "q/eC\"f3bqR9X\"t";
EvoSuiteFile evoSuiteFile0 = null;
byte[] byteArray0 = new byte[7];
byte byte0 = (byte)9;
FileDescriptor fileDescriptor0 = new FileDescriptor();
assertFalse(fileDescriptor0.valid());
assertNotNull(fileDescriptor0);

MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(fileDescriptor0);
assertNotNull(mockFileOutputStream0);

MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0, false);
assertNotNull(mockPrintWriter0);

helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 48, (-4471), "d}@8^.;@}Pp,u\"");
assertEquals(3, helpFormatter0.getDescPadding());
assertEquals(74, helpFormatter0.getWidth());
assertEquals("arg", helpFormatter0.getArgName());
assertEquals("--", helpFormatter0.getLongOptPrefix());
assertEquals("usage: ", helpFormatter0.getSyntaxPrefix());
assertEquals(1, helpFormatter0.getLeftPadding());
assertEquals(" ", helpFormatter0.getLongOptSeparator());
assertEquals("-", helpFormatter0.getOptPrefix());
assertEquals("\n", helpFormatter0.getNewLine());
assertFalse(fileDescriptor0.valid());
assertEquals(3, HelpFormatter.DEFAULT_DESC_PAD);
assertEquals(3, helpFormatter0.defaultDescPad);
assertEquals(1, helpFormatter0.defaultLeftPad);
assertEquals(74, HelpFormatter.DEFAULT_WIDTH);
assertEquals(1, HelpFormatter.DEFAULT_LEFT_PAD);
assertEquals(74, helpFormatter0.defaultWidth);

MockFile mockFile0 = new MockFile("X$_o(peYa&tVkjmyI");
assertNotNull(mockFile0);

MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockFile0);
assertFalse(mockPrintWriter1.equals((Object)mockPrintWriter0));
assertNotNull(mockPrintWriter1);

helpFormatter0.printWrapped((PrintWriter) mockPrintWriter1, (-511), (-511), "X$_o(peYa&tVkjmyI");

[MASTER] 18:02:15.508 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing tests to file
* Writing JUnit test case 'HelpFormatter_ESTest' to results/Cli-33/org.apache.commons.cli.HelpFormatter/BBC-F0-opt-30/tests/7
* Done!

* Computation finished
