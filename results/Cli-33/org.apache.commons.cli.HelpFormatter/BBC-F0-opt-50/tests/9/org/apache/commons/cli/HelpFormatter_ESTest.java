/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 07 18:03:28 GMT 2021
 */

package org.apache.commons.cli;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.io.UnsupportedEncodingException;
import java.io.Writer;
import java.net.URI;
import java.util.Collection;
import java.util.Comparator;
import java.util.Locale;
import org.apache.commons.cli.HelpFormatter;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.OptionGroup;
import org.apache.commons.cli.Options;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class HelpFormatter_ESTest extends HelpFormatter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
      Options options0 = new Options();
      FileSystemHandling.shouldAllThrowIOExceptions();
      helpFormatter0.defaultWidth = (-1207);
      helpFormatter0.findWrapPos("[ARG...]", 1988, 74);
      helpFormatter0.createPadding(74);
      String string0 = " ";
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(" ", options0, false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      String string0 = "";
      helpFormatter1.defaultLongOptPrefix = "";
      helpFormatter1.rtrim("usage: ");
      helpFormatter1.getNewLine();
      helpFormatter1.getLongOptPrefix();
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter((Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Writer", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.setLeftPadding((-45));
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(8, "arg", "arg", options0, "arg");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getNewLine();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) " ");
      // Undeclared exception!
      helpFormatter0.renderWrappedText(stringBuffer0, 0, 936, "\n");
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      options0.getOption("--");
      options0.addOption("arg", true, (String) null);
      helpFormatter0.printHelp(110, "!\"w3W=", "!\"w3W=", options0, "!\"w3W=");
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(61, "TL 7S", "org.apache.commons.cli.Util", (Options) null, "TL 7S", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((-2), "V<uh", "V<uh", (Options) null, " ", false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      String string0 = "t=m<ce.5iHX!_w!";
      int int0 = 1;
      Options options0 = new Options();
      Options options1 = options0.addOption("", "t=m<ce.5iHX!_w!", true, "Syq");
      // Undeclared exception!
      helpFormatter0.printOptions(mockPrintWriter0, 1, options1, 1, 105);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "";
      helpFormatter0.findWrapPos("", 1520, 1520);
      String string1 = "";
      helpFormatter0.defaultLongOptPrefix = "";
      helpFormatter0.defaultOptPrefix = "";
      helpFormatter0.setSyntaxPrefix("");
      helpFormatter0.setArgName(".#>zx,GSz[ikzLC%M%W");
      helpFormatter0.findWrapPos("", (-1), (-3461));
      helpFormatter0.setDescPadding(77);
      int int0 = 20;
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      helpFormatter0.printHelp(20, "[ Options: [ short ", "", options1, "[ Options: [ short ");
      helpFormatter0.getSyntaxPrefix();
      String string2 = "Wh0x@7e;&Fu";
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter("-", "Wh0x@7e;&Fu");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // Wh0x@7e;&Fu
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = (-2851);
      helpFormatter0.setWidth((-2851));
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.getNewLine();
      String string0 = "h";
      helpFormatter0.rtrim("h");
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("h", options0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.rtrim("");
      helpFormatter0.defaultOptPrefix = "A=i";
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped((PrintWriter) null, 10, "BXVIklCVq");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      URI uRI0 = MockURI.aFileURI;
      URI uRI1 = MockURI.normalize(uRI0);
      MockFile mockFile0 = new MockFile(uRI1);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 32, "'", "", (Options) null, 8, 13, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
      Options options0 = null;
      String string0 = "0O[rjp_#F";
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("lAdjtK9H9E", "lAdjtK9H9E", (Options) null, "0O[rjp_#F");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Option option0 = new Option((String) null, "usage: ", false, "~85mgo\"YRDM=$,URE.");
      helpFormatter0.defaultDescPad = (-1);
      Options options0 = null;
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("FJG^C}yo\"+lC7)lx~", "FJG^C}yo\"+lC7)lx~", (Options) null, "tm6*-qD8f%y)O", false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "usage: ");
      // Undeclared exception!
      try { 
        helpFormatter0.renderOptions(stringBuffer0, 2248, (Options) null, 2033, 2248);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option((String) null, false, "\n");
      optionGroup0.addOption(option0);
      options0.addOptionGroup(optionGroup0);
      Object object0 = new Object();
      MockFile mockFile0 = new MockFile("\n");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockFile0);
      Locale locale0 = Locale.CHINESE;
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter1, (-1), "H@*Q|rmx|FWLv?Un;9", options0);
      helpFormatter0.setLeftPadding((-1));
      helpFormatter0.getNewLine();
      helpFormatter0.getLeftPadding();
      helpFormatter0.getDescPadding();
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      helpFormatter0.getOptionComparator();
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 2, 2, "&{i.6WvhWD:");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 2, ".94#K", "WY%RS2_LK'ea0o44b", options0, (-1863), 2, "-");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = options0.addOption("", true, "arg");
      Option option0 = new Option((String) null, "--", true, "");
      helpFormatter0.printHelp("\n", "\n", options0, "", true);
      helpFormatter0.printHelp(" ", options1);
      // Undeclared exception!
      try { 
        helpFormatter0.renderOptions((StringBuffer) null, (-2), options1, 13, 842);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)74;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)21;
      byteArray0[3] = (byte)53;
      byteArray0[4] = (byte)10;
      byteArray0[5] = (byte)124;
      byteArray0[6] = (byte)9;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      helpFormatter0.setNewLine("*/I.K2%gJcDqX");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      helpFormatter0.defaultArgName = "";
      helpFormatter0.getLeftPadding();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "usage: ");
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.getLongOptSeparator();
      helpFormatter0.defaultNewLine = " ";
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        helpFormatter0.findWrapPos((String) null, 2010, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = options0.addOption("", true, "arg");
      Option option0 = new Option((String) null, "--", true, "");
      options1.addOption(option0);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage((PrintWriter) null, (-1543), "PF'", options0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultNewLine = ",L&16:CelyqK.o";
      int int0 = HelpFormatter.DEFAULT_DESC_PAD;
      Options options0 = new Options();
      Option option0 = new Option((String) null, "Cannot add value, list full.");
      Options options1 = options0.addOption(option0);
      Object object0 = new Object();
      option0.getValues();
      OptionGroup optionGroup0 = new OptionGroup();
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      optionGroup1.setRequired(true);
      Options options2 = options1.addOptionGroup(optionGroup1);
      helpFormatter0.printHelp("HU 1\"smsa=BI_&m=?", ",L&16:CelyqK.o", options2, "z|{?f+>\"kuc@Bb");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.printHelp(3, "-", "t=m<ce.5iHX!_w!", options0, ",L&16:CelyqK.o");
      HelpFormatter helpFormatter2 = new HelpFormatter();
      helpFormatter2.createPadding(3);
      // Undeclared exception!
      try { 
        helpFormatter2.printHelp((PrintWriter) null, 1815, "arg", ")nN?3;f]_Rq!{UaH@5", options1, 74, 3, "usage: ", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
      Options options0 = new Options();
      FileSystemHandling.shouldAllThrowIOExceptions();
      helpFormatter0.defaultWidth = (-1207);
      helpFormatter0.findWrapPos("[ARG...]", 1988, 74);
      helpFormatter0.createPadding(74);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(" ", "d*ioP2~zIIxq07L09", options0, "S");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultNewLine = helpFormatter0.defaultNewLine;
      int int0 = HelpFormatter.DEFAULT_DESC_PAD;
      String string0 = "Cannot add value, list full.";
      Options options0 = new Options();
      Option option0 = new Option((String) null, "Cannot add value, list full.");
      Object object0 = new Object();
      int int1 = 74;
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.printHelp(3, "-", "t=m<ce.5iHX!_w!", options0, "\n");
      option0.setArgs(3);
      HelpFormatter helpFormatter2 = new HelpFormatter();
      String string1 = helpFormatter0.defaultSyntaxPrefix;
      File file0 = null;
      String string2 = helpFormatter2.defaultOptPrefix;
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "-");
      // Undeclared exception!
      helpFormatter2.renderWrappedText(stringBuffer0, 1, 2, "arg");
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.rtrim("");
      helpFormatter0.defaultOptPrefix = "";
      helpFormatter0.getLeftPadding();
      helpFormatter0.getOptPrefix();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockFile mockFile0 = new MockFile("DB#2G~@k6Ms?LOOwr~", "]\"A`8I%$Gcq|SvTo");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) "]\"A`8I%$Gcq|SvTo";
      objectArray0[1] = (Object) "DB#2G~@k6Ms?LOOwr~";
      objectArray0[2] = (Object) mockFile0;
      objectArray0[3] = (Object) mockFile0;
      objectArray0[4] = (Object) "]\"A`8I%$Gcq|SvTo";
      objectArray0[5] = (Object) mockPrintWriter0;
      objectArray0[6] = (Object) "";
      objectArray0[7] = (Object) "DB#2G~@k6Ms?LOOwr~";
      objectArray0[8] = (Object) mockFile0;
      PrintWriter printWriter0 = mockPrintWriter0.printf("", objectArray0);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(printWriter0, (-4030), "DB#2G~@k6Ms?LOOwr~", (String) null, (Options) null, (-4030), 541, " ]");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      Options options1 = options0.addOption("", true, "arg");
      String string0 = "org.apache.commons.cli.HelpFormatter$OptionComparator";
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.printHelp(" ", options1);
      helpFormatter0.setLeftPadding(3);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
      // Undeclared exception!
      try { 
        helpFormatter1.printWrapped((PrintWriter) mockPrintWriter0, 3, (-231), ")>d(");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = options0.addOption("", true, "arg");
      Option option0 = new Option((String) null, "org.apache.commons.cli.HelpFormatter$OptionComparator", true, "");
      Options options2 = options1.addOption(option0);
      helpFormatter0.printHelp("\n", "\n", options2, "", true);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.printHelp(" ", options1);
      helpFormatter0.setLeftPadding(3);
      helpFormatter0.findWrapPos("\n", 2184, (-1441));
      helpFormatter1.getLongOptSeparator();
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultNewLine = helpFormatter0.defaultNewLine;
      int int0 = HelpFormatter.DEFAULT_DESC_PAD;
      Options options0 = new Options();
      Option option0 = new Option((String) null, "Cannot add value, list full.");
      Object object0 = new Object();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("cyrL\"1f4Fs814h(I");
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) "org.apache.commons.cli.HelpFormatter$1";
      Object object1 = new Object();
      objectArray0[1] = object1;
      objectArray0[2] = (Object) "t=m<ce.5iHX!_w!";
      objectArray0[3] = (Object) mockPrintWriter0;
      Object object2 = new Object();
      objectArray0[4] = object2;
      objectArray0[5] = (Object) options0;
      objectArray0[6] = (Object) "cyrL\"1f4Fs814h(I";
      StringBuffer stringBuffer0 = new StringBuffer(760);
      // Undeclared exception!
      try { 
        helpFormatter1.renderOptions(stringBuffer0, 2643, options0, 74, (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = options0.addOption("", true, "arg");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.printHelp(" ", options1);
      helpFormatter0.setLeftPadding(3);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "org.apache.commons.cli.HelpFormatter$OptionComparator");
      // Undeclared exception!
      helpFormatter0.renderOptions(stringBuffer0, 1, options1, 1086, 1);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultNewLine = helpFormatter0.defaultNewLine;
      int int0 = HelpFormatter.DEFAULT_DESC_PAD;
      Options options0 = new Options();
      Option option0 = new Option((String) null, "Cannot add value, list full.");
      Object object0 = new Object();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("cyrL\"1f4F814h(IS");
      String string0 = "org.apache.commons.cli.HelpFormatter$1";
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) "org.apache.commons.cli.HelpFormatter$1";
      Object object1 = new Object();
      objectArray0[1] = object1;
      objectArray0[2] = (Object) "t=m<ce.5iHX!_w!";
      objectArray0[3] = (Object) mockPrintWriter0;
      Object object2 = new Object();
      objectArray0[4] = object2;
      objectArray0[5] = (Object) options0;
      objectArray0[6] = (Object) "cyrL\"1f4F814h(IS";
      PrintWriter printWriter0 = mockPrintWriter0.printf("org.apache.commons.cli.HelpFormatter$1", objectArray0);
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage(printWriter0, (-2), "\n", options0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getSyntaxPrefix();
      helpFormatter0.getArgName();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(fileDescriptor0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0, false);
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 930, (-597), "usage: ");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(930, "usage: ", "dQcy|$w@&)GB!(F-@", (Options) null, "A CloneNotSupportedException was thrown: ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultNewLine = ",L&16:CelyqK.o";
      int int0 = HelpFormatter.DEFAULT_DESC_PAD;
      String string0 = "Cannot add value, list full.";
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printOptions((PrintWriter) null, 3, options0, 3, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultNewLine = ",L&16:CelyqK.o";
      int int0 = HelpFormatter.DEFAULT_DESC_PAD;
      Options options0 = new Options();
      Option option0 = new Option((String) null, "Cannot add value, list full.");
      Options options1 = options0.addOption(option0);
      Object object0 = new Object();
      option0.clearValues();
      OptionGroup optionGroup0 = new OptionGroup();
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      Options options2 = options1.addOptionGroup(optionGroup1);
      helpFormatter0.printHelp("HU 1\"smsa=BI_&m=?", ",L&16:CelyqK.o", options2, "z|{?f+>\"kuc@Bb");
      int int1 = 74;
      HelpFormatter helpFormatter1 = new HelpFormatter();
      OptionGroup optionGroup2 = new OptionGroup();
      Options options3 = options2.addOptionGroup(optionGroup2);
      // Undeclared exception!
      try { 
        helpFormatter1.printHelp("", options3, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setOptPrefix("usage: ");
      Options options0 = new Options();
      helpFormatter0.printHelp("\n", "arg", options0, "arg");
      helpFormatter0.getOptionComparator();
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage((PrintWriter) null, 39, " ", options0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "";
      helpFormatter0.setOptPrefix("");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ");
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, (-337), "");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setOptPrefix("");
      Options options0 = new Options();
      Options options1 = options0.addOption("", (String) null, false, (String) null);
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option((String) null, false, "-");
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      Options options2 = options1.addOptionGroup(optionGroup1);
      Options options3 = options2.addOption("arg", true, "erP-5");
      options3.addOptionGroup(optionGroup1);
      Options options4 = options1.addOption("", true, "Ye&jm?22vv2VMs6roK_");
      Option option1 = new Option("arg", true, "usage: ");
      Options options5 = options4.addOption(option1);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      // Undeclared exception!
      try { 
        helpFormatter1.printHelp("org.apache.commons.cli.HelpFormatter$1", options5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter$OptionComparator", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.findWrapPos("C", 1995, 45);
      helpFormatter0.printHelp(1995, "QxeOG8uc|Xd)Yw?jL", "C", options0, "");
      Option option0 = new Option("C", false, "usage: ");
      Options options1 = options0.addOption(option0);
      OptionGroup optionGroup0 = new OptionGroup();
      Options options2 = options1.addOptionGroup(optionGroup0);
      Options options3 = options2.addOption("arg", "rPcU(1hi^]9+Hm,y", false, "[");
      helpFormatter0.printHelp(1995, "[", (String) null, options3, "rMv3xJe@v", true);
      helpFormatter0.getSyntaxPrefix();
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultNewLine = ",L&16:CelyqK.o";
      int int0 = HelpFormatter.DEFAULT_DESC_PAD;
      Options options0 = new Options();
      Option option0 = new Option((String) null, "Cannot add value, list full.");
      Options options1 = options0.addOption(option0);
      Object object0 = new Object();
      OptionGroup optionGroup0 = new OptionGroup();
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      Options options2 = options1.addOptionGroup(optionGroup1);
      helpFormatter0.printHelp("HU 1\"smsa=BI_&m=?", ",L&16:CelyqK.o", options2, "z|{?f+>\"kuc@Bb");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter0.getOptionComparator();
      options0.hasLongOption((String) null);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Y{Gv8.MH#64m;1KcNC");
      Locale locale0 = Locale.ENGLISH;
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) options0;
      objectArray0[1] = (Object) helpFormatter1;
      objectArray0[2] = (Object) options2;
      objectArray0[3] = (Object) "z|{?f+>\"kuc@Bb";
      objectArray0[4] = (Object) "Y{Gv8.MH#64m;1KcNC";
      objectArray0[5] = (Object) optionGroup1;
      objectArray0[6] = (Object) "Y{Gv8.MH#64m;1KcNC";
      objectArray0[7] = (Object) options1;
      objectArray0[8] = (Object) "HU 1\"smsa=BI_&m=?";
      PrintWriter printWriter0 = mockPrintWriter0.printf(locale0, "", objectArray0);
      Options options3 = options0.addOptionGroup(optionGroup0);
      helpFormatter1.printUsage(printWriter0, 74, "", options3);
      helpFormatter0.printHelp("-", "6u1H?c:YmEN-G", options1, "--");
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOption("", true, "arg");
      Option option0 = new Option((String) null, "org.apache.commons.cli.HelpFormatter$OptionComparator", true, "");
      option0.getValues();
      Options options2 = options1.addOption(option0);
      helpFormatter0.printHelp("]", "]", options2, "", true);
      helpFormatter0.rtrim((String) null);
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter("");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      Options options0 = new Options();
      options0.getOptionGroups();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.getOptionComparator();
      options0.hasLongOption("arg");
      helpFormatter1.printUsage((PrintWriter) mockPrintWriter0, 3, "'oG4se{a:b|(U", options0);
      HelpFormatter helpFormatter2 = new HelpFormatter();
      helpFormatter2.printWrapped((PrintWriter) mockPrintWriter0, 74, 74, "iD'[");
      helpFormatter2.printHelp("-", options0);
      helpFormatter0.setLeftPadding(32);
      helpFormatter2.renderOptions((StringBuffer) null, 1, options0, 3, 3);
      // Undeclared exception!
      try { 
        helpFormatter1.renderWrappedText((StringBuffer) null, 628, 74, " ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
      Options options0 = new Options();
      Options options1 = new Options();
      options1.hasLongOption("%7YkFE2B};`{q2L");
      options0.getOptionGroups();
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) "--");
      helpFormatter0.printHelp(printWriter0, 631, "%7YkFE2B};`{q2L", (String) null, options0, 59, 39, "", false);
      String string0 = helpFormatter0.defaultSyntaxPrefix;
      helpFormatter0.printHelp(printWriter0, 631, "[", "O<MZ&1\"Q#BB,cWOOI_E", options0, 870, 39, "06[bog`T", false);
      helpFormatter0.printHelp("org.apache.commons.cli.AlreadySelectedException", (String) null, options1, (String) null);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
      Options options0 = new Options();
      options0.getOptionGroups();
      boolean boolean0 = true;
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0, true);
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) options0;
      Object object0 = new Object();
      objectArray0[1] = object0;
      objectArray0[2] = (Object) options0;
      objectArray0[3] = (Object) "--";
      PrintWriter printWriter0 = mockPrintWriter1.format("--", objectArray0);
      int int0 = 1;
      String string0 = "J6fTEt";
      // Undeclared exception!
      helpFormatter0.printWrapped(printWriter0, 1, 1, "J6fTEt");
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      options0.getOptions();
      options0.getOption("N-M02C{zNa");
      helpFormatter0.printHelp(" ", " ", options0, " ", true);
      helpFormatter0.setNewLine("arg");
      helpFormatter0.getLeftPadding();
      helpFormatter0.setLongOptPrefix((String) null);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "arg");
      stringBuffer0.append((-11.2566F));
      String string0 = "org.apache.commons.cli.HelpFormatter$OptionComparator";
      Option option0 = new Option("", "pYx>Q.mq(b", true, (String) null);
      Options options1 = options0.addOption(option0);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      // Undeclared exception!
      try { 
        helpFormatter1.printHelp((String) null, " ", options1, "C9", true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/experiment");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "[|U._^2p%B");
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      FileSystemHandling.shouldAllThrowIOExceptions();
      helpFormatter0.defaultNewLine = "";
      options0.getOptionGroups();
      StringBuffer stringBuffer0 = new StringBuffer(74);
      helpFormatter0.renderWrappedText(stringBuffer0, 74, 2113, "");
      helpFormatter0.getOptionComparator();
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      Options options0 = new Options();
      options0.getOptionGroups();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      Object object0 = new Object();
      helpFormatter1.printUsage((PrintWriter) mockPrintWriter0, 20, "usage: ");
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = object0;
      objectArray0[1] = (Object) helpFormatter0;
      PrintWriter printWriter0 = mockPrintWriter0.format("--", objectArray0);
      helpFormatter1.printWrapped((PrintWriter) mockPrintWriter0, 74, 1, "\n");
      helpFormatter0.printHelp(printWriter0, 420, "-", "\n", options0, 3, 22, ":<");
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      Options options0 = new Options();
      options0.getOptionGroups();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.getOptionComparator();
      Options options1 = new Options();
      options0.hasLongOption(" ");
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 3, "-", options1);
      // Undeclared exception!
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 1, "usage: ", "4qac", options0, (-627), 34, ">");
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultNewLine = ",L&16:CelyqK.o";
      int int0 = HelpFormatter.DEFAULT_DESC_PAD;
      Options options0 = new Options();
      Option option0 = new Option((String) null, "Cannot add value, list full.");
      Options options1 = options0.addOption(option0);
      Object object0 = new Object();
      MockFile mockFile0 = new MockFile("!A-ss+gp>I_", "Dl9p]w!K");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("arg");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("--");
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) "usage: ";
      objectArray0[1] = (Object) "org.apache.commons.cli.Options";
      mockPrintWriter0.format("org.apache.commons.cli.Options", objectArray0);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) null, (-230), (String) null, "", options1, (-416), (-5222), "q0H", true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "";
      helpFormatter0.defaultLeftPad = (-2073);
      helpFormatter0.defaultNewLine = "";
      helpFormatter0.findWrapPos("", (-2073), (-2073));
      helpFormatter0.getWidth();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String string1 = "~w8\\j`c2@j\"1H";
      Options options0 = new Options();
      helpFormatter0.defaultNewLine = "";
      String string2 = "7wMr^7M>Wa";
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("~w8j`c2@j\"1H", "", options0, "7wMr^7M>Wa");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "";
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(574, "", "", options0, "", true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultNewLine = ",L&16:CelyqK.o";
      int int0 = HelpFormatter.DEFAULT_DESC_PAD;
      Options options0 = new Options();
      Option option0 = new Option((String) null, "Cannot add value, list full.");
      Options options1 = options0.addOption(option0);
      Object object0 = new Object();
      options1.hasLongOption("Y,Sw3");
      options1.getOptionGroups();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("z|{?f+>\"kuc@Bb");
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) null;
      objectArray0[1] = (Object) option0;
      objectArray0[2] = (Object) options0;
      objectArray0[3] = (Object) "z|{?f+>\"kuc@Bb";
      mockPrintWriter0.format(",L&16:CelyqK.o", objectArray0);
      int int1 = 0;
      String string0 = "Km";
      // Undeclared exception!
      helpFormatter0.printHelp(0, "Y,Sw3", "Km", options1, "^UMTI3)kQf", true);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setOptPrefix(" ");
      Options options0 = new Options();
      helpFormatter0.printHelp(" ", "0DpLlv*9v?{$.9%", options0, " ");
      Option option0 = new Option("", true, " ");
      Options options1 = options0.addOption(option0);
      options1.hasOption("\n");
      OptionGroup optionGroup0 = new OptionGroup();
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      Options options2 = options1.addOptionGroup(optionGroup1);
      helpFormatter0.printHelp(74, "0DpLlv*9v?{$.9%", "", options2, "0DpLlv*9v?{$.9%");
      // Undeclared exception!
      try { 
        helpFormatter0.createPadding((-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultNewLine = ",L&16:CelyqK.o";
      int int0 = HelpFormatter.DEFAULT_DESC_PAD;
      Options options0 = new Options();
      Option option0 = new Option((String) null, "Cannot add value, list full.");
      Options options1 = options0.addOption(option0);
      Object object0 = new Object();
      OptionGroup optionGroup0 = new OptionGroup();
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      Options options2 = options1.addOptionGroup(optionGroup1);
      helpFormatter0.printHelp("HU 1\"smsa=BI_&m=?", ",L&16:CelyqK.o", options2, "z|{?f+>\"kuc@Bb");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.printHelp(3, "-", "t=m<ce.5iHX!_w!", options0, ",L&16:CelyqK.o");
      HelpFormatter helpFormatter2 = new HelpFormatter();
      helpFormatter2.createPadding(74);
      helpFormatter1.rtrim("");
      // Undeclared exception!
      try { 
        helpFormatter2.printHelp((PrintWriter) null, 1815, "arg", ")nN?3;f]_Rq!{UaH@5", options1, 74, 3, "usage: ", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      options0.getOptions();
      String string0 = "N-M02C{zNa";
      options0.getOption("N-M02C{zNa");
      boolean boolean0 = true;
      helpFormatter0.printHelp(" ", " ", options0, " ", true);
      String string1 = "|K\"h!$o-H~UDg<P";
      helpFormatter0.setNewLine("|K\"h!$o-H~UDg<P");
      helpFormatter0.getLeftPadding();
      helpFormatter0.setLongOptPrefix((String) null);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "|K\"h!$o-H~UDg<P");
      int int0 = (-2091);
      stringBuffer0.append((-11.2566F));
      boolean boolean1 = true;
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) null, 2480, "", "", options0, (-2), (-1913), " ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setSyntaxPrefix("zGH:|TNEl<#U");
      helpFormatter0.getOptPrefix();
      helpFormatter0.getNewLine();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      helpFormatter0.setDescPadding((-2590));
      helpFormatter0.findWrapPos("zGH:|TNEl<#U", (-2590), (-2023));
      helpFormatter0.getLongOptPrefix();
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
      Options options0 = new Options();
      Options options1 = new Options();
      options1.hasLongOption("%7YkFE2B};`{q2L");
      String string0 = null;
      options0.getOptionGroups();
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) "--");
      helpFormatter0.printHelp(printWriter0, 631, "%7YkFE2B};`{q2L", (String) null, options0, 59, 39, "", false);
      helpFormatter0.getOptionComparator();
      // Undeclared exception!
      helpFormatter0.printUsage(printWriter0, 0, " ", options0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
      Options options0 = new Options();
      options0.getOptionGroups();
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0, false);
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) options0;
      Object object0 = new Object();
      objectArray0[1] = object0;
      objectArray0[2] = (Object) options0;
      objectArray0[3] = (Object) "\n";
      HelpFormatter helpFormatter1 = new HelpFormatter();
      // Undeclared exception!
      try { 
        helpFormatter1.printHelp("", options0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setOptPrefix("0DpLlv*9v?{$.9%");
      Options options0 = new Options();
      Collection collection0 = options0.getOptionGroups();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) "0DpLlv*9v?{$.9%";
      objectArray0[1] = (Object) "0DpLlv*9v?{$.9%";
      objectArray0[2] = (Object) collection0;
      objectArray0[3] = (Object) collection0;
      options0.getOption((String) null);
      objectArray0[4] = (Object) options0;
      objectArray0[5] = (Object) collection0;
      objectArray0[6] = (Object) "0DpLlv*9v?{$.9%";
      Object object0 = new Object();
      objectArray0[7] = object0;
      objectArray0[8] = (Object) collection0;
      PrintWriter printWriter0 = mockPrintWriter0.format("--", objectArray0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(printWriter0);
      int int0 = (-690);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 9, "'[DNjPm2mwGd", "qJyo>\"", options0, (-690), (-690), "%", false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultNewLine = ",L&16:CelyqK.o";
      int int0 = HelpFormatter.DEFAULT_DESC_PAD;
      Options options0 = new Options();
      Option option0 = new Option((String) null, "Cannot add value, list full.");
      Options options1 = options0.addOption(option0);
      Object object0 = new Object();
      String string0 = "Y,Sw3";
      options1.hasLongOption("Y,Sw3");
      option0.setRequired(false);
      option0.clearValues();
      helpFormatter0.printHelp(",L&16:CelyqK.o", "", options1, "[ option: ");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(74, (String) null, "Cannot add value, list full.", options0, "-n6V ;@Z>:Hg$V7,w^d");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultNewLine = ",L&16:CelyqK.o";
      int int0 = HelpFormatter.DEFAULT_DESC_PAD;
      Options options0 = new Options();
      Option option0 = new Option((String) null, "Cannot add value, list full.");
      Options options1 = options0.addOption(option0);
      Object object0 = new Object();
      options1.hasLongOption("Y,Sw3");
      Collection collection0 = options1.getOptionGroups();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Y[_XZ06Os");
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) null;
      objectArray0[1] = (Object) option0;
      objectArray0[2] = (Object) options0;
      objectArray0[3] = (Object) "z|{?f+>\"kuc@Bb";
      objectArray0[4] = (Object) "Y[_XZ06Os";
      objectArray0[5] = (Object) collection0;
      PrintWriter printWriter0 = mockPrintWriter0.format(",L&16:CelyqK.o", objectArray0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(printWriter0);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter1, 3, ":", "z|{?f+>\"kuc@Bb", options1, 3, (-805), "#s\"wEvp0;Q2YT!Q3|", false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "0DpLlv*9v?{$.9%";
      helpFormatter0.setOptPrefix("0DpLlv*9v?{$.9%");
      String string1 = "org.apache.commons.cli.HelpFormatter$OptionComparator";
      Options options0 = new Options();
      helpFormatter0.printHelp("\n", "org.apache.commons.cli.HelpFormatter$OptionComparator", options0, "org.apache.commons.cli.HelpFormatter$OptionComparator");
      int int0 = 74;
      OptionGroup optionGroup0 = new OptionGroup();
      options0.addOptionGroup(optionGroup0);
      helpFormatter0.getSyntaxPrefix();
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter("The option '", "0DpLlv*9v?{$.9%");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // 0DpLlv*9v?{$.9%
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.setOptPrefix("-");
      Options options1 = new Options();
      helpFormatter1.printHelp("usage: ", "", options1, "-");
      helpFormatter0.printHelp(74, "1kT)@|", "org.apache.commons.cli.HelpFormatter$OptionComparator", options1, "htrSW./bOS;$bK?bLVh");
      helpFormatter1.createPadding(3);
      helpFormatter1.rtrim("");
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      Options options2 = options1.addOption("", true, "arg");
      Option option0 = new Option("arg", "org.apache.commons.cli.HelpFormatter", true, "");
      options2.addOption(option0);
      helpFormatter0.printHelp("org.apache.commons.cli.HelpFormatter$1", options1);
      helpFormatter0.setLeftPadding((-1668));
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("-");
      Options options0 = new Options();
      FileSystemHandling.shouldAllThrowIOExceptions();
      mockPrintWriter0.println((Object) helpFormatter0);
      options0.getOptionGroups();
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 71, "qbp%Bq[", (String) null, options0, 71, 0, (String) null, true);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.getOptionComparator();
      HelpFormatter helpFormatter2 = new HelpFormatter();
      helpFormatter2.printUsage((PrintWriter) mockPrintWriter0, 74, "--", options0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "org.apache.commons.cli.HelpFormatter";
      File file0 = MockFile.createTempFile("usage: ", "PkEf'5Wi*:");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, (-250), "");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultNewLine = "L&16:CelyqK.";
      int int0 = HelpFormatter.DEFAULT_DESC_PAD;
      Options options0 = new Options();
      Option option0 = new Option((String) null, "Cannot add value, list full.");
      Options options1 = options0.addOption(option0);
      Object object0 = new Object();
      MockFile mockFile0 = new MockFile("lozg2:<&F~}6_", "z|{?f+>\"kuc@Bb");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, false);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0);
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) "lozg2:<&F~}6_";
      objectArray0[1] = (Object) null;
      objectArray0[2] = (Object) null;
      objectArray0[3] = (Object) null;
      objectArray0[4] = (Object) options1;
      objectArray0[5] = (Object) option0;
      PrintWriter printWriter0 = mockPrintWriter0.format("tBE-[=i", objectArray0);
      // Undeclared exception!
      helpFormatter0.printHelp(printWriter0, 0, "Cannot add value, list full.", (String) null, options1, (-2), 2, (String) null, false);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultNewLine = ",L&16:CelyqK.o";
      int int0 = HelpFormatter.DEFAULT_DESC_PAD;
      Options options0 = new Options();
      Option option0 = new Option((String) null, "Cannot add value, list full.");
      Options options1 = options0.addOption(option0);
      Object object0 = new Object();
      MockFile mockFile0 = new MockFile("lozg2:<&F~}6_", "z|{?f+>\"kuc@Bb");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, false);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0);
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) "lozg2:<&F~}6_";
      objectArray0[1] = (Object) null;
      objectArray0[2] = (Object) null;
      objectArray0[3] = (Object) null;
      objectArray0[4] = (Object) options1;
      objectArray0[5] = (Object) option0;
      PrintWriter printWriter0 = mockPrintWriter0.format("tBE-[=i", objectArray0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0, false);
      mockPrintWriter1.append('[');
      HelpFormatter helpFormatter1 = new HelpFormatter();
      // Undeclared exception!
      try { 
        helpFormatter1.printUsage(printWriter0, (-1391), "~B=u..p2z 8B!t0", options1);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultNewLine = ",L&16:CelyqK.o";
      int int0 = HelpFormatter.DEFAULT_DESC_PAD;
      Options options0 = new Options();
      Option option0 = new Option((String) null, "Cannot add value, list full.");
      Options options1 = options0.addOption(option0);
      Object object0 = new Object();
      MockFile mockFile0 = new MockFile("lozg2:<&F~}6_", "z|{?f+>\"kuc@Bb");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, false);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0);
      // Undeclared exception!
      try { 
        helpFormatter0.printOptions(mockPrintWriter0, 0, options1, 3, (-2));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultNewLine = ",L&16:CelyqK.o";
      int int0 = HelpFormatter.DEFAULT_DESC_PAD;
      Options options0 = new Options();
      Option option0 = new Option((String) null, "Cannot add value, list full.");
      Options options1 = options0.addOption(option0);
      Object object0 = new Object();
      MockFile mockFile0 = new MockFile("lozg2:<&F~}6_", "z|{?f+>\"kuc@Bb");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, false);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0);
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) "lozg2:<&F~}6_";
      objectArray0[1] = (Object) null;
      objectArray0[2] = (Object) null;
      objectArray0[3] = (Object) null;
      objectArray0[4] = (Object) options1;
      objectArray0[5] = (Object) option0;
      mockPrintWriter0.format("tBE-[=i", objectArray0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0, true);
      int int1 = 0;
      // Undeclared exception!
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter1, 0, "");
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      PrintWriter printWriter0 = null;
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("ftMqsQoZ?R^iX.F%-", (Options) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
      Options options0 = new Options();
      options0.hasLongOption("arg");
      options0.getOptionGroups();
      Locale locale0 = Locale.KOREAN;
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(fileDescriptor0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockFileOutputStream0, false);
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) options0;
      objectArray0[1] = (Object) mockPrintWriter1;
      objectArray0[2] = (Object) locale0;
      objectArray0[3] = (Object) locale0;
      objectArray0[4] = (Object) options0;
      objectArray0[5] = (Object) helpFormatter0;
      objectArray0[6] = (Object) null;
      objectArray0[7] = (Object) mockPrintWriter0;
      Object object0 = new Object();
      objectArray0[8] = object0;
      mockPrintWriter1.printf(locale0, "usage: ", objectArray0);
      StringWriter stringWriter0 = new StringWriter();
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter(stringWriter0);
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter1, 0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
      Options options0 = new Options();
      Option option0 = new Option("", "");
      Options options1 = options0.addOption(option0);
      Object object0 = new Object();
      MockFile mockFile0 = new MockFile("qc9L5?C@R", "lozg2:<&F~}6_");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, true);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockFileOutputStream0);
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) "qc9L5?C@R";
      objectArray0[1] = (Object) mockFileOutputStream0;
      objectArray0[2] = object0;
      objectArray0[3] = (Object) null;
      objectArray0[4] = (Object) "lozg2:<&F~}6_";
      objectArray0[5] = (Object) options1;
      objectArray0[6] = object0;
      mockPrintWriter1.format("--", objectArray0);
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter(mockPrintWriter1, true);
      mockPrintWriter1.append('[');
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 1216, (-35), "");
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setOptPrefix("0DpLlv*9v?{$.9%");
      Options options0 = new Options();
      helpFormatter0.printHelp("\n", "org.apache.commons.cli.HelpFormatter$OptionComparator", options0, "org.apache.commons.cli.HelpFormatter$OptionComparator");
      int int0 = (-268);
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        helpFormatter0.renderWrappedText(stringBuffer0, (-268), 2443, "0DpLlv*9v?{$.9%");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setOptPrefix("0DpLlv*9v?{$.9%");
      Options options0 = new Options();
      helpFormatter0.printHelp(">K%!Bb@3B", "org.apache.commons.cli.HelpFormatter$OptionComparator", options0, "org.apache.commons.cli.HelpFormatter$OptionComparator");
      helpFormatter0.setLeftPadding((-268));
      helpFormatter0.createPadding(74);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(fileDescriptor0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0);
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) fileDescriptor0;
      objectArray0[1] = (Object) "                                                                          ";
      Object object0 = new Object();
      objectArray0[2] = object0;
      objectArray0[3] = (Object) "0DpLlv*9v?{$.9%";
      objectArray0[4] = (Object) fileDescriptor0;
      Object object1 = new Object();
      objectArray0[5] = object1;
      PrintWriter printWriter0 = mockPrintWriter0.format("--", objectArray0);
      helpFormatter0.printUsage(printWriter0, 9, "", options0);
      helpFormatter0.printUsage(printWriter0, 32, "0DpLlv*9v?{$.9%");
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      Options options0 = new Options();
      options0.hasLongOption("line.separator");
      options0.getOptionGroups();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("+[S~&mW3ci\"f6w");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockFileOutputStream0, false);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter1, (-522), "6&)", " :: ", options0, 1284, 1284, "+[S~&mW3ci\"f6w", true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(fileDescriptor0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0);
      Object object0 = new Object();
      Object object1 = new Object();
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) fileDescriptor0;
      objectArray0[1] = object1;
      Object object2 = new Object();
      objectArray0[4] = object2;
      Object object3 = new Object();
      objectArray0[3] = object3;
      objectArray0[4] = object0;
      objectArray0[5] = (Object) mockPrintWriter0;
      objectArray0[6] = (Object) mockPrintWriter0;
      objectArray0[7] = object0;
      objectArray0[8] = (Object) helpFormatter0;
      PrintWriter printWriter0 = mockPrintWriter0.format("usage: ", objectArray0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(printWriter0, true);
      helpFormatter0.setWidth(31);
      helpFormatter0.getLeftPadding();
      helpFormatter0.getLongOptPrefix();
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setOptPrefix("0DpLlv*9v?{$.9%");
      Options options0 = new Options();
      helpFormatter0.printHelp("\n", "org.apache.commons.cli.HelpFormatter$OptionComparator", options0, "org.apache.commons.cli.HelpFormatter$OptionComparator");
      options0.helpOptions();
      helpFormatter0.setLeftPadding((-268));
      int int0 = 74;
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(74, "", "0DpLlv*9v?{$.9%", options0, "org.apache.commons.cli.HelpFormatter$OptionComparator");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultNewLine = ",L&16:CelyqK.o";
      int int0 = HelpFormatter.DEFAULT_DESC_PAD;
      Options options0 = new Options();
      Option option0 = new Option((String) null, "Cannot add value, list full.");
      Options options1 = options0.addOption(option0);
      Object object0 = new Object();
      MockFile mockFile0 = new MockFile("lozg2:<&F~}6_", "z|{?f+>\"kuc@Bb");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, false);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0);
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) "lozg2:<&F~}6_";
      objectArray0[1] = (Object) null;
      objectArray0[2] = (Object) null;
      objectArray0[3] = (Object) null;
      objectArray0[4] = (Object) options1;
      objectArray0[5] = (Object) option0;
      mockPrintWriter0.format("tBE-[=i", objectArray0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0, true);
      mockPrintWriter1.append('[');
      // Undeclared exception!
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter1, 1, 437, "\nof;d-+d*'n?NZ%l");
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
      String string0 = "";
      Options options0 = new Options();
      options0.getOptionGroups();
      int int0 = (-616);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 3166, "", "6&)", options0, 3166, (-616), "", false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
      Options options0 = new Options();
      options0.hasLongOption("arg");
      options0.getOptionGroups();
      helpFormatter0.printHelp("~}", options0, false);
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 3, "6&)", "", options0, 0, 0, (String) null, false);
      helpFormatter0.getOptionComparator();
      // Undeclared exception!
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 0, "<", options0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
      Options options0 = new Options();
      options0.getOptionGroups();
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 4328, "6&)", "", options0, 0, 0, (String) null, false);
      helpFormatter0.getOptionComparator();
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 4388, "4*T>s{gf}[3ji'*J", options0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
      Options options0 = new Options();
      options0.getOptionGroups();
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 4328, "6&)", "", options0, 0, 0, (String) null, false);
      helpFormatter0.getOptionComparator();
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, (-1933), (String) null, options0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setOptPrefix("0DpLlv*9v?{$.9%");
      Options options0 = new Options();
      helpFormatter0.printHelp("\n", "org.apache.commons.cli.HelpFormatter$OptionComparator", options0, "org.apache.commons.cli.HelpFormatter$OptionComparator");
      helpFormatter0.setLeftPadding((-268));
      helpFormatter0.rtrim("org.apache.commons.cli.HelpFormatter$OptionComparator");
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      Object[] objectArray0 = new Object[6];
      objectArray0[1] = (Object) "org.apache.commons.cli.HelpFormatter$OptionComparator";
      Object object0 = new Object();
      Object object1 = new Object();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      // Undeclared exception!
      try { 
        helpFormatter1.printWrapped((PrintWriter) null, 63, 31, "--");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("-");
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) mockPrintWriter0;
      objectArray0[1] = (Object) mockPrintWriter0;
      objectArray0[2] = (Object) helpFormatter0;
      objectArray0[3] = (Object) helpFormatter0;
      objectArray0[4] = (Object) helpFormatter0;
      Object object0 = new Object();
      objectArray0[5] = object0;
      Object object1 = new Object();
      objectArray0[6] = object1;
      PrintWriter printWriter0 = mockPrintWriter0.printf("usage: ", objectArray0);
      helpFormatter0.printWrapped(printWriter0, 10, "' contains an illegal character : '");
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLongOptSeparator("");
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
      Options options0 = new Options();
      options0.hasLongOption("arg");
      options0.getOptionGroups();
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 3, "6&)", "", options0, 0, 0, (String) null, false);
      helpFormatter0.getOptionComparator();
      // Undeclared exception!
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 0, "<", options0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultNewLine = ",L&16:CelyqK.o";
      helpFormatter0.setWidth(0);
      helpFormatter0.getDescPadding();
      Options options0 = new Options();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ",L&16:CelyqK.o");
      Option option0 = new Option((String) null, "Cannot add value, list full.");
      Options options1 = options0.addOption(option0);
      helpFormatter0.getWidth();
      // Undeclared exception!
      helpFormatter0.printHelp(0, ",L&16:CelyqK.o", "Cannot add value, list full.", options1, "");
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.rtrim("org.apache.commons.cli.OptionGroup");
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getOptionComparator();
      String string0 = ")Pz)";
      StringBuffer stringBuffer0 = new StringBuffer(")Pz)");
      int int0 = 3533;
      Options options0 = new Options();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "~#BWN,jJRx`");
      String string1 = null;
      helpFormatter0.findWrapPos("8pdcpLbA/Q", 0, 0);
      options0.addOption((String) null, "5HA2ZanYqjQ6", false, "arg");
      Option option0 = null;
      try {
        option0 = new Option("--", "-", false, " ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The option '--' contains an illegal character : '-'
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
      int int0 = 4328;
      String string0 = "";
      Options options0 = new Options();
      int int1 = 0;
      options0.hasLongOption("arg");
      String string1 = null;
      options0.getOptionGroups();
      boolean boolean0 = false;
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 4328, "6&)", "", options0, 0, 0, (String) null, false);
      helpFormatter0.getOptionComparator();
      String string2 = "<";
      // Undeclared exception!
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 0, "<", options0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getWidth();
      String string0 = "has already been selected: '";
      helpFormatter0.setNewLine("has already been selected: '");
      String string1 = "";
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter("");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLongOptSeparator();
      String string0 = "T?{>M";
      MockFile mockFile0 = new MockFile("--", "T?{>M");
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter(mockFile0, "usage: ");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // usage: 
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      PrintWriter printWriter0 = null;
      String string0 = "B#s5|pb3e[R9'a1@&4m";
      helpFormatter0.defaultArgName = "B#s5|pb3e[R9'a1@&4m";
      int int0 = 3;
      Options options0 = null;
      String string1 = "($vkP2?j";
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("B#s5|pb3e[R9'a1@&4m", "B#s5|pb3e[R9'a1@&4m", (Options) null, "($vkP2?j", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultNewLine = ",L&16:CelyqK.o";
      int int0 = HelpFormatter.DEFAULT_DESC_PAD;
      helpFormatter0.setOptionComparator((Comparator) null);
      MockFile mockFile0 = new MockFile(",L&16:CelyqK.o");
      Locale locale0 = Locale.KOREAN;
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "arg");
      StringWriter stringWriter2 = stringWriter1.append('Z');
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter2, false);
      PrintWriter printWriter0 = mockPrintWriter0.printf(locale0, "", (Object[]) null);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.printUsage(printWriter0, 3, ",L&16:CelyqK.o");
      helpFormatter1.getNewLine();
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultSyntaxPrefix = "%8F++&D[hZ!p1u@iki";
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.setOptionComparator(comparator0);
      String string0 = "V/'7ftCMtZIZjj@\"W!M";
      MockFile mockFile0 = new MockFile("V/'7ftCMtZIZjj@\"W!M");
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter(mockFile0, "");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // 
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "0DpLlv*9v?{$.9%";
      helpFormatter0.setOptPrefix("0DpLlv*9v?{$.9%");
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("", "org.apache.commons.cli.HelpFormatter$OptionComparator", options0, "org.apache.commons.cli.HelpFormatter$OptionComparator");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultNewLine = ",L&16:CelyqK.o";
      helpFormatter0.setWidth(0);
      helpFormatter0.getDescPadding();
      Options options0 = new Options();
      Option option0 = new Option((String) null, "Cannot add value, list full.");
      Options options1 = options0.addOption(option0);
      // Undeclared exception!
      helpFormatter0.printHelp(0, ",L&16:CelyqK.o", "Cannot add value, list full.", options1, "");
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLongOptPrefix(" ]");
      StringBuffer stringBuffer0 = new StringBuffer("-");
      StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 2626, 2626, "");
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      StringBuffer stringBuffer2 = helpFormatter0.renderOptions(stringBuffer1, 2626, options1, 2626, 2626);
      // Undeclared exception!
      try { 
        helpFormatter0.renderWrappedText(stringBuffer2, 0, (-2707), ">&J|>>iEn(C!y@~");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      Options options2 = options1.addOption("", true, "arg");
      Option option0 = new Option((String) null, "org.apache.commons.cli.HelpFormatter$OptionComparator", true, "");
      Options options3 = options2.addOption(option0);
      helpFormatter0.printHelp("]", "]", options3, "", true);
      int int0 = 74;
      MockFileOutputStream mockFileOutputStream0 = null;
      try {
        mockFileOutputStream0 = new MockFileOutputStream((FileDescriptor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.FileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      options0.getOptions();
      String string0 = "N-M02C{zNa";
      options0.getOption("N-M02C{zNa");
      boolean boolean0 = true;
      helpFormatter0.printHelp(" ", " ", options0, " ", true);
      String string1 = "|K\"h!$o-H~UDg<P";
      helpFormatter0.setNewLine("|K\"h!$o-H~UDg<P");
      helpFormatter0.getLeftPadding();
      helpFormatter0.setLongOptPrefix((String) null);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "|K\"h!$o-H~UDg<P");
      int int0 = (-2091);
      // Undeclared exception!
      try { 
        options0.addOption(" ", (String) null, true, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal option name ' '
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "V=i%0xCM8mC-";
      MockFile mockFile0 = new MockFile("org.apache.commons.cli.Option");
      File file0 = MockFile.createTempFile("V=i%0xCM8mC-", " ", (File) mockFile0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
      Options options0 = null;
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 9, "V=i%0xCM8mC-", "V=i%0xCM8mC-", (Options) null, 9, 9, "org.apache.commons.cli.Option", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName((String) null);
      helpFormatter0.getNewLine();
      helpFormatter0.setSyntaxPrefix((String) null);
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter((Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Writer", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer();
      int int0 = (-1140);
      Options options0 = new Options();
      helpFormatter0.setNewLine("-");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((-1140), "`c`:25L!0O;kk", "g8VK", options0, (String) null);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "--";
      Options options0 = new Options();
      String string1 = "\\cBHs{!p3u}";
      String string2 = ",\\BfO<PfC~WJCW>M,w";
      options0.getMatchingOptions(",BfO<PfC~WJCW>M,w");
      options0.helpOptions();
      boolean boolean0 = true;
      helpFormatter0.printHelp("L$~T", "--", options0, "cBHs{!p3u}", true);
      String string3 = " ";
      helpFormatter0.setLongOptPrefix(" ");
      helpFormatter0.setOptPrefix("cBHs{!p3u}");
      int int0 = 0;
      options0.toString();
      helpFormatter0.setWidth(0);
      helpFormatter0.createPadding(0);
      // Undeclared exception!
      helpFormatter0.printHelp("'Vm<%e%R~X|,H,^ ", "L$~T", options0, "--", true);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setSyntaxPrefix("");
      helpFormatter0.setOptPrefix("");
      String string0 = "";
      String string1 = "5l]wQ@%-J>V\\*V";
      Options options0 = new Options();
      boolean boolean0 = false;
      Options options1 = options0.addOption("arg", false, "S+b}");
      // Undeclared exception!
      try { 
        options1.addOption("Fd?/N", "LB, FBO<\"or1c5|c", false, "5l]wQ@%-J>V*V");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The option 'Fd?/N' contains an illegal character : '?'
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer(3);
      Options options0 = new Options();
      helpFormatter0.renderOptions(stringBuffer0, 31, options0, 31, 31);
      assertEquals(" ", helpFormatter0.getLongOptSeparator());
      assertEquals("usage: ", helpFormatter0.getSyntaxPrefix());
      assertEquals(1, helpFormatter0.defaultLeftPad);
      assertEquals(74, helpFormatter0.defaultWidth);
      assertEquals(3, helpFormatter0.defaultDescPad);
      assertEquals("arg", helpFormatter0.getArgName());
      assertEquals("-", helpFormatter0.getOptPrefix());
      assertEquals("--", helpFormatter0.getLongOptPrefix());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getOptPrefix();
      StringBuffer stringBuffer0 = null;
      int int0 = 10;
      Options options0 = new Options();
      Option option0 = null;
      try {
        option0 = new Option(" ", " ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal option name ' '
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringWriter stringWriter0 = new StringWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
      Object[] objectArray0 = new Object[0];
      PrintWriter printWriter0 = mockPrintWriter0.printf("--", objectArray0);
      Options options0 = new Options();
      helpFormatter0.printOptions(printWriter0, 57, options0, 57, 45);
      String string0 = helpFormatter0.getOptPrefix();
      assertEquals(3, helpFormatter0.defaultDescPad);
      assertEquals("arg", helpFormatter0.getArgName());
      assertEquals("usage: ", helpFormatter0.getSyntaxPrefix());
      assertEquals(74, helpFormatter0.defaultWidth);
      assertEquals("--", helpFormatter0.getLongOptPrefix());
      assertEquals("-", string0);
      assertEquals(" ", helpFormatter0.getLongOptSeparator());
      assertEquals(1, helpFormatter0.defaultLeftPad);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = (-45);
      helpFormatter0.setDescPadding((-45));
      helpFormatter0.getArgName();
      StringBuffer stringBuffer0 = new StringBuffer(" ");
      Options options0 = new Options();
      boolean boolean0 = false;
      Option option0 = null;
      try {
        option0 = new Option("-", "-", false, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal option name '-'
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "org.apache.commons.cli.ParseException";
      int int0 = 1;
      helpFormatter0.setWidth(1);
      StringBuffer stringBuffer0 = new StringBuffer("ky'6h4)f,b+*MWR,5");
      stringBuffer0.setLength(3);
      Options options0 = new Options();
      helpFormatter0.renderOptions(stringBuffer0, 0, options0, 0, 0);
      helpFormatter0.defaultNewLine = "org.apache.commons.cli.ParseException";
      String string1 = " ]";
      helpFormatter0.setLongOptPrefix(" ]");
      helpFormatter0.getOptionComparator();
      // Undeclared exception!
      try { 
        helpFormatter0.findWrapPos("ky'6h4)f,b+*MWR,5", 0, (-1566));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.printHelp("Zp)`=iqus,ux@", options0);
      helpFormatter0.setLeftPadding((-1668));
      assertEquals((-1668), helpFormatter0.defaultLeftPad);
  }
}
