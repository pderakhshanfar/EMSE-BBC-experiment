* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-70
* Going to generate test cases for class: org.apache.commons.cli.HelpFormatter
* Starting Client-0
* Connecting to master process on port 14136
* Analyzing classpath: 
  - subjects/buggy-versions/Cli-33/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.cli.HelpFormatter
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1103
* Using seed 4016599822
* Starting evolution
bbc usage percentage is: 70%
* Initial Number of Goals in DynaMOSA = 400 / 1103
[MASTER] 17:48:43.517 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 602s and 104 generations, 48234 statements, best individual has fitness: 122.0
* Minimizing test suite
[MASTER] 18:00:02.323 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 201
* Number of covered goals: 200
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 93%
* Total number of goals: 149
* Number of covered goals: 139
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 56
* Number of covered goals: 56
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 478
* Number of covered goals: 442
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 61%
* Total number of goals: 46
* Number of covered goals: 28
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 98%
* Total number of goals: 40
* Number of covered goals: 39
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 40
* Number of covered goals: 39
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 93%
* Total number of goals: 149
* Number of covered goals: 139
* Generated 134 tests with total length 1844
* Resulting test suite's coverage: 86% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 18:01:09.982 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Resulting test suite's mutation score: 1%
* Compiling and checking tests
[MASTER] 18:01:36.800 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:01:36.892 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:01:38.929 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:01:38.992 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:01:41.045 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:01:41.138 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:01:41.193 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:01:49.188 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.lang.RuntimePermission" "writeFileDescriptor")
java.lang.Thread.getStackTrace(Thread.java:1559)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkWrite(SecurityManager.java:954)
java.io.FileOutputStream.<init>(FileOutputStream.java:245)
org.evosuite.runtime.mock.java.io.MockFileOutputStream.<init>(MockFileOutputStream.java:114)
org.apache.commons.cli.HelpFormatter_191_tmp__ESTest.test0(HelpFormatter_191_tmp__ESTest.java:35)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:498)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:288)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:282)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:748)

[MASTER] 18:01:49.188 [logback-1] WARN  JUnitAnalyzer - Failing test:
 HelpFormatter helpFormatter0 = new HelpFormatter();
FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "arg");
helpFormatter0.defaultDescPad = 10;
helpFormatter0.getLongOptSeparator();
FileDescriptor fileDescriptor0 = new FileDescriptor();
MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(fileDescriptor0);
MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0);
Options options0 = new Options();
mockPrintWriter0.println((Object) "--");
Options options1 = options0.addOption("", "-", false, "p:@vZG!Y!9I:-\"w6bc=");
OptionGroup optionGroup0 = new OptionGroup();
Options options2 = options1.addOptionGroup(optionGroup0);
options1.getMatchingOptions("iyB");
Option option0 = new Option("", "arg", true, " ");
Options options3 = options2.addOption(option0);
optionGroup0.addOption(option0);
Options options4 = options3.addOption("", true, "$2Li|F2~[%nl5oa");
helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, (-1359), "-", options4);

[MASTER] 18:01:55.458 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.lang.RuntimePermission" "writeFileDescriptor")
java.lang.Thread.getStackTrace(Thread.java:1559)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkWrite(SecurityManager.java:954)
java.io.FileOutputStream.<init>(FileOutputStream.java:245)
org.evosuite.runtime.mock.java.io.MockFileOutputStream.<init>(MockFileOutputStream.java:114)
org.apache.commons.cli.HelpFormatter_205_tmp__ESTest.test0(HelpFormatter_205_tmp__ESTest.java:34)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:498)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:288)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:282)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:748)

[MASTER] 18:01:55.458 [logback-1] WARN  JUnitAnalyzer - Failing test:
 HelpFormatter helpFormatter0 = new HelpFormatter();
FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "arg");
helpFormatter0.defaultDescPad = 10;
helpFormatter0.getLongOptSeparator();
FileDescriptor fileDescriptor0 = new FileDescriptor();
MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(fileDescriptor0);
MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0);
Options options0 = new Options();
mockPrintWriter0.println((Object) "--");
Options options1 = options0.addOption("", "-", false, "p:@vZG!Y!9I:-\"w6bc=");
OptionGroup optionGroup0 = new OptionGroup();
Options options2 = options1.addOptionGroup(optionGroup0);
options1.getMatchingOptions("iyB");
Option option0 = new Option("iyB", " ", true, "usage: ");
options1.addOption(option0);
optionGroup0.addOption(option0);
options2.addOption("", true, "G");
helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 53, "", options1);
helpFormatter0.getNewLine();

[MASTER] 18:01:58.622 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.lang.RuntimePermission" "writeFileDescriptor")
java.lang.Thread.getStackTrace(Thread.java:1559)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkWrite(SecurityManager.java:954)
java.io.FileOutputStream.<init>(FileOutputStream.java:245)
org.evosuite.runtime.mock.java.io.MockFileOutputStream.<init>(MockFileOutputStream.java:114)
org.apache.commons.cli.HelpFormatter_208_tmp__ESTest.test0(HelpFormatter_208_tmp__ESTest.java:34)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:498)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:288)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:282)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:748)

[MASTER] 18:01:58.622 [logback-1] WARN  JUnitAnalyzer - Failing test:
 HelpFormatter helpFormatter0 = new HelpFormatter();
FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "arg");
helpFormatter0.defaultDescPad = 10;
helpFormatter0.getLongOptSeparator();
FileDescriptor fileDescriptor0 = new FileDescriptor();
MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(fileDescriptor0);
MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0);
Options options0 = new Options();
mockPrintWriter0.close();
mockPrintWriter0.println((Object) "--");
Options options1 = options0.addOption("", "-", false, "p:@vZG!Y!9I:-\"w6bc=");
OptionGroup optionGroup0 = new OptionGroup();
Options options2 = options1.addOptionGroup(optionGroup0);
options1.getMatchingOptions("iyB");
Option option0 = new Option("2", "*>B&p{~", true, "-");
options0.addOption(option0);
optionGroup0.addOption(option0);
Options options3 = options2.addOption("8qCGr", false, "   ");
helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 34, "8qCGr", options3);
helpFormatter0.getNewLine();

[MASTER] 18:02:02.473 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.lang.RuntimePermission" "writeFileDescriptor")
java.lang.Thread.getStackTrace(Thread.java:1559)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkWrite(SecurityManager.java:954)
java.io.FileOutputStream.<init>(FileOutputStream.java:245)
org.evosuite.runtime.mock.java.io.MockFileOutputStream.<init>(MockFileOutputStream.java:114)
org.apache.commons.cli.HelpFormatter_220_tmp__ESTest.test0(HelpFormatter_220_tmp__ESTest.java:34)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:498)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:288)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:282)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:748)

[MASTER] 18:02:02.474 [logback-1] WARN  JUnitAnalyzer - Failing test:
 HelpFormatter helpFormatter0 = new HelpFormatter();
FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "arg");
helpFormatter0.defaultDescPad = 10;
helpFormatter0.getLongOptSeparator();
FileDescriptor fileDescriptor0 = new FileDescriptor();
MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(fileDescriptor0);
MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0);
Options options0 = new Options();
mockPrintWriter0.println((Object) "--");
Options options1 = options0.addOption("", "-", false, "p:@vZG!Y!9I:-\"w6bc=");
OptionGroup optionGroup0 = new OptionGroup();
options1.addOptionGroup(optionGroup0);
options1.getMatchingOptions("iyB");
HelpFormatter helpFormatter1 = new HelpFormatter();
helpFormatter0.printHelp("-", "--", options1, "_le", false);
helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 13, (String) null);

[MASTER] 18:02:08.092 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 4
* Writing tests to file
* Writing JUnit test case 'HelpFormatter_ESTest' to results/Cli-33/org.apache.commons.cli.HelpFormatter/BBC-F0-opt-70/tests/6
* Done!

* Computation finished
