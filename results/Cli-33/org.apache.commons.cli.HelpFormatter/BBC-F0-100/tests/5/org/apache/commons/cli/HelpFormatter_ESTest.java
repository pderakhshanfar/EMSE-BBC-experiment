/*
 * This file was automatically generated by EvoSuite
 * Mon Mar 01 22:04:41 GMT 2021
 */

package org.apache.commons.cli;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FilterOutputStream;
import java.io.IOException;
import java.io.PrintStream;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.io.UnsupportedEncodingException;
import java.util.Comparator;
import java.util.Locale;
import org.apache.commons.cli.HelpFormatter;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.OptionGroup;
import org.apache.commons.cli.Options;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class HelpFormatter_ESTest extends HelpFormatter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Option option0 = new Option("arg", "\n");
      OptionGroup optionGroup0 = new OptionGroup();
      OptionGroup optionGroup1 = new OptionGroup();
      optionGroup1.addOption(option0);
      Options options1 = options0.addOptionGroup(optionGroup1);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer(74);
      // Undeclared exception!
      try { 
        helpFormatter1.renderOptions(stringBuffer0, (-2), options1, 359, 40);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HelpFormatter helpFormatter0 = new HelpFormatter();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "arg");
      helpFormatter0.setOptPrefix("");
      helpFormatter0.setArgName("");
      helpFormatter0.getArgName();
      helpFormatter0.getWidth();
      helpFormatter0.getNewLine();
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter("cmdLineSyntax not provided", "cmdLineSyntax not provided");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getOptionComparator();
      helpFormatter0.defaultDescPad = (-3201);
      helpFormatter0.getOptPrefix();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "--");
      helpFormatter0.createPadding(1);
      helpFormatter0.findWrapPos("-", 0, 0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName("usage: ");
      helpFormatter0.rtrim("-");
      helpFormatter0.getLongOptPrefix();
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('s');
      StringWriter stringWriter2 = new StringWriter(1);
      stringWriter1.getBuffer();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      MockFile mockFile0 = new MockFile("org.apache.commons.cli.HelpFormatter$OptionComparator");
      options0.getMatchingOptions("--");
      options0.getOptionGroups();
      options0.getMatchingOptions("");
      helpFormatter0.printHelp(7, "\n", (String) null, options1, (String) null, true);
      helpFormatter0.getOptPrefix();
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HelpFormatter helpFormatter0 = new HelpFormatter();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "0Ek");
      helpFormatter0.defaultNewLine = "0Ek";
      String string0 = "0$<?dg[IZ,";
      Options options0 = new Options();
      helpFormatter0.printHelp("0$<?dg[IZ,", options0);
      helpFormatter0.setOptPrefix("0Ek");
      helpFormatter0.setOptPrefix("0Ek");
      helpFormatter0.getLongOptPrefix();
      int int0 = 387;
      helpFormatter0.createPadding(387);
      helpFormatter0.getNewLine();
      helpFormatter0.createPadding(1708);
      helpFormatter0.setLongOptPrefix((String) null);
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.getLeftPadding();
      StringBuffer stringBuffer0 = null;
      try {
        stringBuffer0 = new StringBuffer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      options0.hasShortOption(" :: ");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      HelpFormatter helpFormatter2 = new HelpFormatter();
      helpFormatter2.printHelp(2, "-", "arg", options0, "\"3t>W/:}m^8DHaSkj");
      helpFormatter1.defaultDescPad = (-1642);
      helpFormatter2.printHelp("[ Options: [ short ", ">", options0, " :: ", false);
      int int0 = helpFormatter1.defaultWidth;
      helpFormatter0.getLeftPadding();
      helpFormatter1.getDescPadding();
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "arg");
      int int0 = (-524);
      Options options0 = null;
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("y97l#//ls", (Options) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.rtrim("a%O.4)!:");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) null, (-2), "--", "--", options0, 5688, 1, "");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Option option0 = new Option("9_", "9_");
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      Option option1 = new Option("", true, "-tQ{1.DHy`[ctm=]M");
      optionGroup0.addOption(option1);
      optionGroup1.toString();
      options0.addOptionGroup(optionGroup1);
      helpFormatter0.printHelp("usage: ", options0, true);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)116;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte) (-23);
      byteArray0[3] = (byte)9;
      byteArray0[4] = (byte)32;
      byteArray0[5] = (byte)26;
      byteArray0[6] = (byte) (-91);
      byteArray0[7] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      HelpFormatter helpFormatter0 = new HelpFormatter();
      PrintWriter printWriter0 = null;
      // Undeclared exception!
      helpFormatter0.printUsage((PrintWriter) null, (int) (byte)0, "");
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.rtrim(" ");
      helpFormatter0.setNewLine("");
      helpFormatter0.getNewLine();
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter("U[y-*VGz\r|4\"LDx_", "usage: ");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // usage: 
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      options0.getOptionGroups();
      helpFormatter0.printHelp(7, "n&ZV![<sw", "-", options0, "--");
      helpFormatter0.createPadding(0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("bXfH38?lae~", "bXfH38?lae~", (Options) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      Options options0 = new Options();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("--");
      PrintWriter printWriter0 = mockPrintWriter0.append('-');
      // Undeclared exception!
      helpFormatter1.printHelp(printWriter0, 1, "--", "usage: ", options0, 15, 31, (String) null);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      options0.addOption((String) null, "arg", true, "-");
      int int0 = 3;
      String string0 = "x";
      options0.addOption("x", "S$^%6e&_", true, "PKGo/stbdzpo0");
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage((PrintWriter) null, 3, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.setWidth((-1480));
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("A/z]?lD", options0, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setDescPadding((-687));
      helpFormatter0.defaultLeftPad = (-687);
      helpFormatter0.setNewLine("q9:gk4q8`");
      helpFormatter0.setOptPrefix((String) null);
      helpFormatter0.getOptionComparator();
      helpFormatter0.rtrim((String) null);
      helpFormatter0.rtrim("' was specified but an option from this group ");
      helpFormatter0.getArgName();
      helpFormatter0.getLongOptSeparator();
      helpFormatter0.getOptPrefix();
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringWriter stringWriter0 = new StringWriter();
      Options options0 = new Options();
      helpFormatter0.printHelp(47, "\n", "6|sR$WMW,pn<I=H", options0, "The oPtion '");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("NO_ARGS_ALLOWED");
      Object[] objectArray0 = new Object[7];
      objectArray0[1] = (Object) helpFormatter1;
      objectArray0[2] = (Object) options0;
      objectArray0[3] = (Object) helpFormatter1;
      objectArray0[0] = (Object) helpFormatter1;
      mockPrintWriter0.format(" ", objectArray0);
      HelpFormatter helpFormatter2 = new HelpFormatter();
      Option option0 = new Option((String) null, "", true, (String) null);
      Options options1 = options0.addOption(option0);
      helpFormatter2.printHelp("arg", options1, true);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = options0.addOption("", false, " ");
      String string0 = " | ";
      Options options2 = options1.addOption("arg", " | ", false, "H.%] r|VhP'R:");
      Option option0 = new Option("arg", "a[b0&/wTlF>~wbKDe");
      Options options3 = options2.addOption(option0);
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage((PrintWriter) null, 10, "\n", options3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = helpFormatter0.defaultSyntaxPrefix;
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      options0.addOption("arg", "r+_KbA%515pu;{NP;", false, (String) null);
      helpFormatter0.printHelp(12, "usage: ", "kL836>RaXm5js", options0, "usage: ");
      helpFormatter0.getOptionComparator();
      helpFormatter0.getLongOptSeparator();
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter0.setDescPadding(0);
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = new StringBuffer();
      OptionGroup optionGroup0 = new OptionGroup();
      helpFormatter0.getDescPadding();
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = new Options();
      helpFormatter0.printHelp(12, " [ARG", " [ARG", options0, "");
      helpFormatter0.rtrim(" [ARG");
      StringWriter stringWriter0 = new StringWriter(686);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) " ");
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) "--", 1, 1);
      StringBuffer stringBuffer0 = stringWriter2.getBuffer();
      // Undeclared exception!
      try { 
        helpFormatter0.renderWrappedText(stringBuffer0, 12, (-1184), "NO_ARGS_ALLOWED");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.findWrapPos("line.separator", 3, 3);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      options0.addOption((String) null, true, ", ");
      options0.hasLongOption("");
      helpFormatter0.printHelp(23, "FEn1vWFAFzn:W_{!Y", "@{=m^9d{8Q<f\"\"U", options0, "FEn1vWFAFzn:W_{!Y");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      StringWriter stringWriter0 = new StringWriter(402);
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      stringBuffer0.append(false);
      // Undeclared exception!
      helpFormatter1.renderOptions(stringBuffer0, 1, options0, 74, 1091);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      options0.getOption("usage: ");
      options0.helpOptions();
      options0.hasLongOption("arg");
      String string0 = null;
      helpFormatter0.printHelp("P0Qe;\"YSey?{oU-c", "P0Qe;\"YSey?{oU-c", options0, (String) null);
      options0.addOption("", false, "");
      helpFormatter0.printHelp("P0Qe;\"YSey?{oU-c", options0);
      helpFormatter0.getLeftPadding();
      helpFormatter0.setLeftPadding((-2));
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("r/.G?''0X2_+qB", options0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("x}-N# 7lHMQeT>.FNen%");
      Options options1 = options0.addOption("arg", true, "--");
      helpFormatter0.printHelp("-", options0, true);
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option((String) null, "-", true, "");
      optionGroup0.addOption(option0);
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      options0.addOptionGroup(optionGroup1);
      OptionGroup optionGroup2 = new OptionGroup();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      HelpFormatter helpFormatter2 = new HelpFormatter();
      helpFormatter2.printHelp("usage: ", options0, false);
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 1347, "$U&", "w]gd4tcW2xI3", options1, 563, 74, "w3", false);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getOptPrefix();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("-`*}kMj,");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 74, "", ">+hh3WCEX.RE<L2", options0, 74, (-3307), "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0, 1);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(bufferedOutputStream0, false);
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) " ");
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      helpFormatter0.printUsage(printWriter0, 97, (String) null, options1);
      helpFormatter0.setLeftPadding(32);
      helpFormatter0.defaultSyntaxPrefix = null;
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.getSyntaxPrefix();
      helpFormatter0.getLongOptPrefix();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setSyntaxPrefix("org.apache.commons.cli.HelpFormatter$OptionComparator");
      helpFormatter0.defaultLeftPad = (-1500);
      helpFormatter0.setOptPrefix("&PTNF=E/C");
      helpFormatter0.setWidth(64);
      helpFormatter0.setSyntaxPrefix("org.apache.commons.cli.HelpFormatter$OptionComparator");
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.setOptionComparator(comparator0);
      helpFormatter0.setSyntaxPrefix("&PTNF=E/C");
      helpFormatter0.getOptPrefix();
      helpFormatter0.getLeftPadding();
      helpFormatter0.getDescPadding();
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.getSyntaxPrefix();
      helpFormatter0.getNewLine();
      helpFormatter0.getSyntaxPrefix();
      String string0 = "|";
      boolean boolean0 = true;
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("|", true);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0, true);
      // Undeclared exception!
      try { 
        mockFileOutputStream0.write((byte[]) null, (-1500), 74);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.vfs.VFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      options0.hasShortOption("7<!");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter0.setSyntaxPrefix("");
      Options options1 = new Options();
      helpFormatter1.printHelp(3, "7<!", "--", options0, "usage: ");
      helpFormatter0.printHelp("\n", "\n", options0, "\n", false);
      helpFormatter0.getSyntaxPrefix();
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Option option0 = new Option("", "arg");
      Options options1 = options0.addOption(option0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("x}-N 7lHMQeT>.FNen%");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 63, "", options1);
      helpFormatter0.getSyntaxPrefix();
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Option option0 = new Option((String) null, "=yt%e.f5%n}");
      OptionGroup optionGroup0 = new OptionGroup();
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      optionGroup1.addOption(option0);
      options0.addOptionGroup(optionGroup1);
      optionGroup1.addOption(option0);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage((PrintWriter) null, (-2), "sBH5RGo[\"g", options0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.printHelp(74, "--", "arg", options0, "--");
      helpFormatter1.renderOptions((StringBuffer) null, 1, options0, 715, 13);
      StringWriter stringWriter0 = new StringWriter(3);
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      helpFormatter1.renderOptions(stringBuffer0, 1, options0, 19, 1423);
      helpFormatter0.getLongOptPrefix();
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultWidth = (-4803);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Options options0 = new Options();
      helpFormatter0.rtrim("");
      helpFormatter0.getWidth();
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Option option0 = new Option("", "arg");
      options0.addOption(option0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("x}-N 7lHMQeT>.FNen%");
      options0.addOption("arg", true, "--");
      helpFormatter0.printHelp("tS<k?", options0, true);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("has already beeselected: '", "", (Options) null, "has already beeselected: '", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      options0.addOption("arg", true, "--");
      options0.getOption("arg");
      helpFormatter0.setDescPadding((-78));
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("tS<k?", options0, true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      options0.getOptionGroups();
      options0.hasLongOption("");
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(13);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 7, (-1605), "@{=m^9d{8Q<f\"\"U");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultWidth = (-1675);
      Options options0 = new Options();
      options0.getOption("");
      helpFormatter0.printHelp(23, "FEn1vWFAFzn:W_{!Y", "c&#~|Xz*V4y$T4/", options0, "gW23sV7[Oo2Fq);");
      OptionGroup optionGroup0 = new OptionGroup();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("gW23sV7[Oo2Fq);", "%AtB<=~y!|Fg", options0, "", false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLongOptSeparator();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) null, 75, "' contains an illegal character : '", "Cannot add value, list full.", options0, 75, 75, "<P94=}y*WSPG,EMy*/");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "O;mq$]3P86~";
      StringWriter stringWriter0 = new StringWriter();
      Options options0 = new Options();
      helpFormatter0.printHelp(31, "\n", "6|sR$WMW,pn<I=H", options0, "The oPtion '");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      HelpFormatter helpFormatter2 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
      // Undeclared exception!
      try { 
        helpFormatter2.printHelp((PrintWriter) mockPrintWriter0, 32, " ", "6w%\"", options0, 74, (-310), "arg");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('U');
      StringBuffer stringBuffer0 = stringWriter1.getBuffer();
      StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 13, 13, "");
      // Undeclared exception!
      try { 
        helpFormatter0.renderOptions(stringBuffer1, 13, (Options) null, 10, 83);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      options0.hasLongOption("");
      helpFormatter0.printHelp(23, "FEn1vWFAFzn:W_{!Y", "@{=m^9d{8Q<f\"\"U", options0, "FEn1vWFAFzn:W_{!Y");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      StringWriter stringWriter0 = new StringWriter(402);
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      helpFormatter1.renderOptions(stringBuffer0, 566, options0, 74, 1091);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0, false);
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 3, "--", "", options0, 1, 44, " ", false);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLongOptSeparator();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Option option0 = new Option("7", "7");
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      Options options1 = options0.addOptionGroup(optionGroup1);
      optionGroup1.addOption(option0);
      optionGroup0.setRequired(true);
      helpFormatter0.printHelp(12, "-", "", options1, "", true);
      MockFile mockFile0 = new MockFile("'>]B=", "K=>`4");
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage((PrintWriter) null, 3396, "[", options0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("arg", "$r", true, "");
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      options0.addOptionGroup(optionGroup1);
      OptionGroup optionGroup2 = optionGroup1.addOption(option0);
      optionGroup2.setRequired(true);
      helpFormatter0.printHelp(190, "$r", "$r", options0, "$r", true);
      helpFormatter0.printHelp(" 6^e664obL`):", options0, false);
      helpFormatter0.getArgName();
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName("O;mq$]3P86~");
      StringWriter stringWriter0 = new StringWriter();
      Options options0 = new Options();
      helpFormatter0.printHelp(31, "6|sR$WMW,pn<I=H", "6|sR$WMW,pn<I=H", options0, "O;mq$]3P86~");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      HelpFormatter helpFormatter2 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("--");
      Options options1 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter1.printHelp((PrintWriter) mockPrintWriter0, (-541), "'", "O;mq$]3P86~", options1, 74, 3324, "   ", false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      options0.hasLongOption("");
      helpFormatter0.printHelp(23, "FEn1vWFAFzn:W_{!Y", "@{=m^9d{8Q<f\"\"U", options0, "FEn1vWFAFzn:W_{!Y");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      StringWriter stringWriter0 = new StringWriter(402);
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      int int0 = 566;
      StringBuffer stringBuffer1 = helpFormatter1.renderOptions(stringBuffer0, 566, options0, 74, 1091);
      // Undeclared exception!
      helpFormatter1.renderWrappedText(stringBuffer1, 1, 64, "The option '");
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName("O;mq$]3P86~");
      StringWriter stringWriter0 = new StringWriter();
      Options options0 = new Options();
      helpFormatter0.printHelp(31, "\n", "6|sR$WMW,pn<I=H", options0, "The option '");
      MockFile mockFile0 = new MockFile("O;mq$]3P86~", "arg");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("O;mq$]3P86~");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      HelpFormatter helpFormatter2 = new HelpFormatter();
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("NO_ARGS_ALLOWED");
      helpFormatter1.printHelp((PrintWriter) mockPrintWriter0, 3, "BpfvRS}Z+G;", "-", options0, 74, 628, "", false);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLongOptSeparator();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Option option0 = new Option("7", "7");
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      Options options1 = options0.addOptionGroup(optionGroup1);
      optionGroup1.addOption(option0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(",0z`B!ox) A`Nbk/#[I");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, (-18), (String) null, "", options1, 66, (-1), (String) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      String string0 = "FEn1vWFAFzn:W_{!Y";
      String string1 = "@{=m^9d{8Q<f\"\"U";
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Ub8`8CDq7(UcC$OAU^");
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, (-12), "FEn1vWFAFzn:W_{!Y");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      String string0 = "-";
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("-");
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, (-3467), (String) null, options0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      options0.hasShortOption("7<!");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      Options options1 = new Options();
      helpFormatter1.printHelp(3, "7<!", "--", options0, "usage: ");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("--");
      helpFormatter1.printUsage((PrintWriter) mockPrintWriter0, 3, "--", options0);
      helpFormatter0.printHelp("-", options1, false);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName("O;mq$]3P86~");
      helpFormatter0.rtrim("-");
      helpFormatter0.getLongOptPrefix();
      StringWriter stringWriter0 = new StringWriter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      options1.addOption("", true, " ");
      helpFormatter0.printHelp("8ZW_lB~9IHvh5',", options1, true);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = options0.addOption("arg", "(uTM ^]~_1", false, "?");
      OptionGroup optionGroup0 = new OptionGroup();
      options1.addOptionGroup(optionGroup0);
      Option option0 = new Option("?", "h8DXr\u0001", false, "<");
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      optionGroup1.setRequired(false);
      helpFormatter0.printHelp(234, "ofQ8ZN|Z\"!,N{", "", options1, "", false);
      helpFormatter0.printHelp("h8DXr\u0001", options1, true);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "tS<k?";
      Options options0 = new Options();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("x}-N 7lHMQeT>.FNen%");
      // Undeclared exception!
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 1, "x}-N 7lHMQeT>.FNen%", options0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.rtrim("/](d\".");
      helpFormatter0.getLongOptPrefix();
      StringWriter stringWriter0 = new StringWriter();
      Options options0 = new Options();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      HelpFormatter helpFormatter2 = new HelpFormatter();
      Options options1 = new Options();
      Options options2 = options1.addOption("", "-", false, "Illegal option name '");
      helpFormatter0.printHelp(101, "<", "org.apache.commons.cli.AlreadySelectedException", options2, "-");
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      MockFile mockFile0 = new MockFile("\n", "5CAJIAxTyZ&CqL[/");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      HelpFormatter helpFormatter2 = new HelpFormatter();
      HelpFormatter helpFormatter3 = new HelpFormatter();
      Options options0 = new Options();
      boolean boolean0 = true;
      HelpFormatter helpFormatter4 = new HelpFormatter();
      // Undeclared exception!
      helpFormatter4.printHelp((PrintWriter) mockPrintWriter0, 1, "z=Yk}d%", "-", options0, 580, 1, "V2'/_c+6jb)A;WR.NUo", true);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = 3226;
      Options options0 = new Options();
      options0.hasShortOption("--");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.setDescPadding(1257);
      Options options1 = new Options();
      String string0 = "dLNpTwZ*T_?";
      helpFormatter1.printHelp(3226, "dLNpTwZ*T_?", "--", options0, "arg");
      HelpFormatter helpFormatter2 = new HelpFormatter();
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        helpFormatter2.printHelp("", "-", options1, ".%xI)Cu7", true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName("O;mq$]3P86~");
      helpFormatter0.rtrim("-");
      helpFormatter0.getLongOptPrefix();
      StringWriter stringWriter0 = new StringWriter();
      Options options0 = new Options();
      helpFormatter0.printHelp(74, "\"", "--", options0, "The option '");
      MockFile mockFile0 = new MockFile((String) null, "-");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("--");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 91, " ", (String) null, options0, 74, 3, (String) null, false);
      helpFormatter1.setWidth(3474);
      Comparator<Option> comparator0 = (Comparator<Option>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter1.setOptionComparator(comparator0);
      helpFormatter0.getDescPadding();
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      Options options0 = new Options();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)109;
      byteArrayOutputStream0.write(byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "-");
      // Undeclared exception!
      try { 
        helpFormatter1.printWrapped((PrintWriter) mockPrintWriter0, 74, 1, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName("O;mq$]3P86~");
      helpFormatter0.rtrim("-");
      helpFormatter0.getLongOptPrefix();
      StringWriter stringWriter0 = new StringWriter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      Options options2 = options1.addOption("", true, " ");
      helpFormatter0.printHelp(403, "8ZW_lB~9IHvh5',", "", options2, "@{=m^9d{8Q<f\"\"U");
      OptionGroup optionGroup1 = new OptionGroup();
      Options options3 = options1.addOptionGroup(optionGroup0);
      helpFormatter0.printHelp(1110, "-", "", options3, "");
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.rtrim("/](d\".");
      helpFormatter0.getLongOptPrefix();
      StringWriter stringWriter0 = new StringWriter();
      Options options0 = new Options();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.printHelp(3, "-", "", options0, "");
      MockFile mockFile0 = new MockFile("arg", "arg");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      HelpFormatter helpFormatter2 = new HelpFormatter();
      HelpFormatter helpFormatter3 = new HelpFormatter();
      Options options1 = new Options();
      helpFormatter3.printHelp((PrintWriter) mockPrintWriter0, 1800, "MS'4t", "0q|Hu^V4Oenq", options1, 74, 119, "-", true);
      Comparator<OptionGroup> comparator0 = (Comparator<OptionGroup>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter1.setOptionComparator(comparator0);
      HelpFormatter helpFormatter4 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "arg");
      StringBuffer stringBuffer1 = helpFormatter4.renderOptions(stringBuffer0, 32, options0, 3, 1);
      StringBuffer stringBuffer2 = helpFormatter4.renderWrappedText(stringBuffer1, 3, 34, "");
      helpFormatter0.renderWrappedText(stringBuffer2, 3, 74, "arg");
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      options0.hasShortOption("s$|C");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      Options options1 = new Options();
      helpFormatter1.printHelp(3, "\n", "t[[", options0, "");
      helpFormatter0.printHelp("-", "has already been selected: '", options0, "", false);
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter("arg", "usage: ");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // usage: 
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      options0.hasShortOption("s$|C");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      Options options1 = new Options();
      helpFormatter1.printHelp(3, "\n", "t[[", options0, "F");
      HelpFormatter helpFormatter2 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("F");
      // Undeclared exception!
      try { 
        helpFormatter2.printHelp((PrintWriter) mockPrintWriter0, 3, "<", "o-Cn{Q@pt,I:dNH", options0, 34, (-372), "qj*_R>7c", false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName("");
      helpFormatter0.rtrim("I2/WTeBROZc%Dxgp");
      helpFormatter0.getLongOptPrefix();
      StringWriter stringWriter0 = new StringWriter();
      Options options0 = new Options();
      helpFormatter0.printHelp(3, "org.apache.commons.cli.AlreadySelectedException", "I2/WTeBROZc%Dxgp", options0, "org.apache.commons.cli.AlreadySelectedException");
      MockFile mockFile0 = new MockFile("8D.[( Fu_D!x%T{>fAk", "org.apache.commons.cli.AlreadySelectedException");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("I2/WTeBROZc%Dxgp");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 1, "", "-)+Nm M;%G_}VS}f/", options0, (-1), 44, "Z17[0'#$NSX4FYe!CS", false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.printHelp(44, "$?xNXM>", "--", options0, "-", true);
      options0.getOptionGroups();
      FileSystemHandling.shouldAllThrowIOExceptions();
      helpFormatter0.printHelp("$?xNXM>", "YsP:gYyI", options0, "-");
      helpFormatter0.printHelp("\n", options0, true);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("EEbXC/;B_^Hf9-");
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, (-1936), 60, "\"");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      String string0 = "I2/WTeBROZc%Dxgp";
      String string1 = "";
      HelpFormatter helpFormatter0 = new HelpFormatter();
      EvoSuiteFile evoSuiteFile0 = null;
      String string2 = "1&70P*0!=#dy";
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, false);
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) null;
      PrintWriter printWriter0 = mockPrintWriter0.format((Locale) null, "-", objectArray0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(printWriter0, false);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter1, 47, "zw[qc2S", "&y,Zb$N$5N%nx?bB", (Options) null, 47, 47, "", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.printHelp(44, "$?xNXM>", "--", options0, "-", true);
      options0.getOptionGroups();
      FileSystemHandling.shouldAllThrowIOExceptions();
      helpFormatter0.printHelp("$?xNXM>", "YsP:gYyI", options0, "-");
      helpFormatter0.printHelp("\n", options0, true);
      helpFormatter0.printHelp(34, "[", "$?xNXM>", options0, "$?xNXM>");
      helpFormatter0.createPadding(2);
      helpFormatter0.getArgName();
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLongOptSeparator();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Option option0 = new Option("7", "7");
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      Options options1 = options0.addOptionGroup(optionGroup1);
      optionGroup1.addOption(option0);
      optionGroup0.setRequired(true);
      helpFormatter0.printHelp(12, "-", "", options1, "", true);
      Options options2 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((-710), "7", " ", options0, "", true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLongOptSeparator();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      options0.hasShortOption("qCtl2");
      Option option0 = new Option("", "Vn");
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      options0.addOptionGroup(optionGroup1);
      optionGroup0.addOption(option0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("--");
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, (-1998), "");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLongOptSeparator();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      options0.hasShortOption("qCtl2");
      Option option0 = new Option("7", "7");
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      options0.addOptionGroup(optionGroup1);
      optionGroup1.addOption(option0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("^C0C)$B*qyYq5S");
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, (-1), "");
      helpFormatter0.getOptPrefix();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "qCtl2");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.renderOptions(stringBuffer0, 2, options0, 3661, 34);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      options0.hasShortOption(" ");
      Option option0 = new Option((String) null, "org.apache.commons.cli.HelpFormatter$OptionComparator");
      OptionGroup optionGroup0 = new OptionGroup();
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      boolean boolean0 = false;
      Options options1 = options0.addOption((String) null, "", false, "-");
      options1.addOptionGroup(optionGroup0);
      optionGroup1.addOption(option0);
      String string0 = "";
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((-1), "7", ">", options0, "qCtl2", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter$OptionComparator", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(74);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, (-1), (-1), "");
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      int int0 = 44;
      options0.getOptionGroups();
      FileSystemHandling.shouldAllThrowIOExceptions();
      helpFormatter1.printHelp("@Us%2gX'", "YsP:gYyI", options0, "");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("--", (Options) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName("O;mq$]3P86~");
      helpFormatter0.rtrim("-");
      helpFormatter0.getLongOptPrefix();
      StringWriter stringWriter0 = new StringWriter();
      Options options0 = new Options();
      helpFormatter0.printHelp(74, "\"", "--", options0, "The option '");
      MockFile mockFile0 = new MockFile((String) null, "-");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("--");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      HelpFormatter helpFormatter2 = new HelpFormatter();
      helpFormatter2.printHelp(74, "O;mq$]3P86~", ";G//af3JwlFK", options1, "--", true);
      helpFormatter1.getOptPrefix();
      helpFormatter1.printHelp((PrintWriter) mockPrintWriter0, 12, "p|x!M#%MLjj&O#WmV", (String) null, options1, 1, 3, "-");
      helpFormatter0.getLongOptPrefix();
      helpFormatter1.findWrapPos("", 106, 106);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName("O;mq$]3P86~");
      helpFormatter0.rtrim("-");
      helpFormatter0.getLongOptPrefix();
      StringWriter stringWriter0 = new StringWriter();
      Options options0 = new Options();
      helpFormatter0.printHelp(74, "\"", "--", options0, "The option '");
      MockFile mockFile0 = new MockFile((String) null, "-");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("--");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 63, "-", "usage: ", options0, 44, 341, "N]E=6uTK", false);
      helpFormatter0.getWidth();
      helpFormatter1.printHelp("qy0W", options0, true);
      helpFormatter1.printWrapped((PrintWriter) mockPrintWriter0, 2559, "qy0W");
      helpFormatter0.getOptPrefix();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "--");
      // Undeclared exception!
      try { 
        helpFormatter1.renderOptions(stringBuffer0, (-2554), options0, (-852), (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((-1295), "y$^FAbtWha[E", "", options0, "");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)74;
      byte byte0 = (byte) (-99);
      byteArray0[1] = (byte) (-99);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getDescPadding();
      String string0 = "org.apache.commons.cli.HelpFormatter";
      String string1 = "[5Y)tn6v=?SuFc\"";
      Options options0 = null;
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(48, "org.apache.commons.cli.HelpFormatter", "[5Y)tn6v=?SuFc\"", (Options) null, "[5Y)tn6v=?SuFc\"");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append('^');
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "-");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      stringWriter0.append((CharSequence) "\n");
      StringBuffer stringBuffer0 = stringWriter1.getBuffer();
      helpFormatter0.renderWrappedText(stringBuffer0, 101, 101, " ");
      helpFormatter0.getDescPadding();
      helpFormatter0.getLongOptSeparator();
      StringBuffer stringBuffer1 = new StringBuffer((CharSequence) "--");
      helpFormatter0.renderWrappedText(stringBuffer1, 101, 10, " ");
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "nr;H|6%>";
      helpFormatter0.defaultOptPrefix = "nr;H|6%>";
      helpFormatter0.setLeftPadding((-966));
      Options options0 = new Options();
      int int0 = 17;
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(17, "nr;H|6%>", "W>~L0iw_5y@^#D>TZ9,", options0, ".4u7(Vt=x");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLongOptSeparator();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      options0.hasShortOption("qCtl2");
      Option option0 = new Option("7", "7");
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      Options options1 = options0.addOptionGroup(optionGroup1);
      // Undeclared exception!
      helpFormatter0.printHelp(0, "-", "", options1, "", true);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Option option0 = new Option("", "arg");
      Options options1 = options0.addOption(option0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("x}-N 7lHMQeT>.FNen%");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      // Undeclared exception!
      try { 
        helpFormatter1.printOptions(mockPrintWriter0, 1, options1, (-1758), 0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName(", ");
      helpFormatter0.rtrim((String) null);
      helpFormatter0.getLongOptPrefix();
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter(74);
      stringWriter0.append('J');
      stringWriter1.getBuffer();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      MockFile mockFile0 = new MockFile("-");
      options1.getMatchingOptions((String) null);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        helpFormatter1.printHelp(3, "", "usage: ", options1, "--", false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.printHelp((-1), "I2/WTeBROZc%Dxgp", "", options0, "");
      helpFormatter0.printHelp("-", options0, true);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.setOptionComparator(comparator0);
      helpFormatter0.findWrapPos("=( [I0iSJWL", (-1), (-1));
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getNewLine();
      helpFormatter0.getLongOptSeparator();
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldAllThrowIOExceptions();
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(" ", true);
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(mockFileOutputStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(filterOutputStream0, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = "";
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 1625, "");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)22;
      byteArray0[1] = (byte) (-33);
      byteArray0[2] = (byte) (-37);
      byteArray0[3] = (byte)109;
      byteArray0[4] = (byte)73;
      byteArray0[5] = (byte)33;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)74;
      byteArray0[8] = (byte)64;
      try { 
        mockFileOutputStream0.write(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.printHelp("Oa[", options0, true);
      Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(comparator0).toString();
      helpFormatter0.setOptionComparator(comparator0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) mockPrintWriter1;
      objectArray0[1] = (Object) mockPrintWriter1;
      Object object0 = new Object();
      objectArray0[2] = object0;
      objectArray0[3] = (Object) mockPrintWriter1;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Object object1 = new Object();
      objectArray0[4] = object1;
      PrintWriter printWriter0 = mockPrintWriter1.format("-", objectArray0);
      helpFormatter0.printOptions(printWriter0, 2947, options0, 2947, 22);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      String string0 = "";
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      String string1 = "";
      // Undeclared exception!
      helpFormatter0.printHelp(1, "I2/WTeBROZc%Dxgp", "", options0, "");
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultOptPrefix = "nr;H|6%>";
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(10, "", "$?xNXM>", options0, "$?xNXM>", false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.printHelp(44, "$?xNXM>", "--", options0, "-", true);
      options0.getOptionGroups();
      helpFormatter0.printHelp("$?xNXM>", "YsP:gYyI", options0, "-");
      HelpFormatter helpFormatter2 = new HelpFormatter();
      helpFormatter2.printHelp("/av(V", options0);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((-1266), " | ", "", options0, "$?xNXM>", true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName("O;mq$]3P86~");
      helpFormatter0.rtrim("-");
      helpFormatter0.getLongOptPrefix();
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append('s');
      StringWriter stringWriter1 = new StringWriter(1);
      StringWriter stringWriter2 = stringWriter1.append('B');
      stringWriter2.getBuffer();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      MockFile mockFile0 = new MockFile("org.apache.commons.cli.HelpFormatter$OptionComparator");
      options0.getMatchingOptions("--");
      helpFormatter0.printHelp(7, "O;mq$]3P86~", (String) null, options1, (String) null, true);
      helpFormatter0.getOptPrefix();
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultOptPrefix = "nr;H|6%>";
      Options options0 = new Options();
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      helpFormatter0.renderOptions(stringBuffer0, 10, options0, 1, 3);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultOptPrefix = "nr;H|6%>";
      Options options0 = new Options();
      StringBuffer stringBuffer0 = new StringBuffer();
      helpFormatter0.renderWrappedText(stringBuffer0, 1575, (-512), "");
      helpFormatter0.getOptPrefix();
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.printHelp((-1), "I2/WTeBROZc%Dxgp", "", options0, "");
      MockFile mockFile0 = new MockFile("\n", "");
      helpFormatter0.rtrim("uvVsage: ");
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.getOptPrefix();
      // Undeclared exception!
      try { 
        helpFormatter0.findWrapPos("org.apache.commons.cli.HelpFormatter", 1, (-1));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName("O;mq$]3P86~");
      helpFormatter0.rtrim("-");
      helpFormatter0.getLongOptPrefix();
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter(588);
      stringWriter0.append('W');
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      Options options0 = new Options();
      Option option0 = new Option("O", "-", false, "-");
      options0.addOption(option0);
      helpFormatter0.getLongOptSeparator();
      // Undeclared exception!
      try { 
        helpFormatter0.renderOptions(stringBuffer0, 34, options0, 190, (-2));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.rtrim("");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      MockPrintStream mockPrintStream0 = new MockPrintStream("--");
      Object[] objectArray0 = new Object[5];
      Object object0 = new Object();
      objectArray0[1] = object0;
      objectArray0[2] = (Object) mockPrintStream0;
      mockPrintStream0.println((Object) helpFormatter0);
      objectArray0[3] = (Object) helpFormatter0;
      mockPrintStream0.format("usage: ", objectArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(103, ";S", "usage: ", (Options) null, "", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(74, (String) null, "arg", options0, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintStream mockPrintStream0 = new MockPrintStream("usage: ");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0, false);
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) null;
      objectArray0[1] = (Object) mockPrintWriter0;
      objectArray0[2] = (Object) "";
      objectArray0[3] = (Object) mockPrintWriter0;
      PrintWriter printWriter0 = mockPrintWriter0.printf("", objectArray0);
      helpFormatter0.printUsage(printWriter0, 28, "");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      helpFormatter0.setLongOptSeparator("xrF(");
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLongOptPrefix("bDO<ko/J-");
      helpFormatter0.setLeftPadding(1845);
      helpFormatter0.createPadding(79);
      helpFormatter0.getLongOptSeparator();
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultNewLine = null;
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.setOptionComparator(comparator0);
      helpFormatter0.defaultLeftPad = (-3104);
      helpFormatter0.setSyntaxPrefix("org.apache.commons.cli.ParseException");
      helpFormatter0.setLongOptPrefix((String) null);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.printHelp("--", options0, false);
      helpFormatter0.rtrim("NO_ARGS_ALLOWED");
      helpFormatter0.getOptionComparator();
      helpFormatter0.getSyntaxPrefix();
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getSyntaxPrefix();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter1.setOptionComparator(comparator0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.rtrim("377 5WgB.5:vx^");
      helpFormatter0.setSyntaxPrefix("");
      helpFormatter0.createPadding(119);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      String string0 = "";
      helpFormatter0.printHelp((-1), "I2/WTeBROZc%Dxgp", "", options0, "");
      MockFile mockFile0 = new MockFile("\n", "");
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter(mockFile0, "");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // 
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.rtrim("I2/WTeBROZc%Dxgp");
      helpFormatter0.setSyntaxPrefix("");
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.rtrim("");
      MockPrintStream mockPrintStream0 = new MockPrintStream("--");
      String string0 = "<tQRCZeKwB";
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) mockPrintStream0;
      Object object0 = new Object();
      objectArray0[1] = object0;
      objectArray0[2] = (Object) mockPrintStream0;
      mockPrintStream0.println((Object) helpFormatter0);
      objectArray0[3] = (Object) helpFormatter0;
      objectArray0[4] = (Object) helpFormatter0;
      PrintStream printStream0 = mockPrintStream0.format("<tQRCZeKwB", objectArray0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(printStream0, false);
      int int0 = 1809;
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 1809, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setOptPrefix("[ option: ");
      helpFormatter0.setLeftPadding(10);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLeftPadding();
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getDescPadding();
      String string0 = "";
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      boolean boolean0 = false;
      Option option0 = null;
      try {
        option0 = new Option(" ", false, "arg");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal option name ' '
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "]w$i)=AQj.A!l{=hu";
      // Undeclared exception!
      try { 
        helpFormatter0.renderWrappedText((StringBuffer) null, (-512), (-512), "]w$i)=AQj.A!l{=hu");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = (-338);
      // Undeclared exception!
      try { 
        helpFormatter0.findWrapPos((String) null, (-338), 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLongOptSeparator();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      options0.hasShortOption("qCtl2");
      Option option0 = new Option("7", "7");
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      Options options1 = options0.addOptionGroup(optionGroup1);
      optionGroup1.addOption(option0);
      helpFormatter0.printHelp(" ", options1, true);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(74);
      MockFile mockFile0 = new MockFile("\n");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      // Undeclared exception!
      try { 
        mockPrintStream0.append((CharSequence) "\n", 10, 71);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultOptPrefix = "nr;H|6%>";
      Options options0 = new Options();
      helpFormatter0.printHelp(10, "org.apache.commons.cli.HelpFormatter", (String) null, options0, "NU", false);
      options0.getOptionGroups();
      helpFormatter0.printHelp("j'R1PPsw0l1VV", "' was specified but an option from this group ", options0, "cELDhRA [rEl60C*S");
      helpFormatter0.printHelp("org.apache.commons.cli.HelpFormatter", options0);
      helpFormatter0.setDescPadding(8);
      helpFormatter0.getDescPadding();
      MockFile mockFile0 = new MockFile("--", "org.apache.commons.cli.HelpFormatter$OptionComparator");
      String string0 = "CU";
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter(mockFile0, "");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // 
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.printHelp(44, "$?xNXM>", "--", options0, "-", true);
      options0.getOptionGroups();
      FileSystemHandling.shouldAllThrowIOExceptions();
      helpFormatter0.printHelp("$?xNXM>", "YsP:gYyI", options0, "-");
      helpFormatter1.printHelp("\n", options0, false);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2877);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
      // Undeclared exception!
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 1, 1, "arg");
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("", options0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.printHelp("e", options0, false);
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.setOptionComparator(comparator0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultArgName = null;
      helpFormatter0.defaultOptPrefix = ">MOwNe}N2g'm<";
      helpFormatter0.getLongOptSeparator();
      helpFormatter0.getWidth();
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer("-");
      // Undeclared exception!
      try { 
        helpFormatter0.renderWrappedText(stringBuffer0, 985, 985, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName("-");
      helpFormatter0.rtrim("");
      helpFormatter0.getLongOptPrefix();
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('B');
      stringWriter1.getBuffer();
      int int0 = 0;
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      options0.addOptionGroup(optionGroup0);
      Option option0 = null;
      try {
        option0 = new Option("--", "'(", false, "arg");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The option '--' contains an illegal character : '-'
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = null;
      helpFormatter0.setNewLine((String) null);
      int int0 = 0;
      helpFormatter0.setWidth(0);
      int int1 = (-1776);
      // Undeclared exception!
      try { 
        helpFormatter0.createPadding((-1776));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultOptPrefix = "nr;H|6%>";
      Options options0 = new Options();
      int int0 = 17;
      helpFormatter0.printHelp(17, "$?xNXM>", "$?xNXM>", options0, "nr;H|6%>", true);
      options0.getOptionGroups();
      helpFormatter0.printHelp("Bt", "d0c$fTB[r97n", options0, "%hdE6GRnorPju");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("", options0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setOptionComparator((Comparator) null);
      File file0 = null;
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultLeftPad = (-3104);
      Options options0 = null;
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((String) null, (String) null, (Options) null, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLongOptSeparator();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      String string0 = "qCtl2";
      options0.hasShortOption("qCtl2");
      String string1 = "7";
      Option option0 = new Option("7", "7");
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      Options options1 = options0.addOptionGroup(optionGroup1);
      String string2 = "O^=Z!#3hM8rm*<0Pz}(";
      String string3 = "";
      Options options2 = options1.addOption("", "", false, "--");
      String string4 = "Tds<:EKGwu";
      // Undeclared exception!
      helpFormatter0.printHelp(0, " ", "'", options2, "Tds<:EKGwu");
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultOptPrefix = "nr;H|6%>";
      Options options0 = new Options();
      int int0 = 10;
      helpFormatter0.printHelp(10, "nr;H|6%>", "<2={\"]R0Pi", options0, "$?xNXM>", false);
      options0.getOptionGroups();
      helpFormatter0.printHelp("nr;H|6%>", (String) null, options0, "d0c$fTB[r97n");
      helpFormatter0.printHelp("d0c$fTB[r97n", options0);
      helpFormatter0.setDescPadding(1);
      helpFormatter0.getDescPadding();
      MockFile mockFile0 = new MockFile("<Zf7OUbBb4{/jW6", "[ARG...]");
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter(mockFile0, "CU");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // CU
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultDescPad = 3;
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.setOptionComparator(comparator0);
      String string0 = null;
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((String) null, options0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultOptPrefix = "?20ORU#)& N9nmJ:O";
      helpFormatter0.setNewLine("");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('8');
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter1, true);
      Locale locale0 = Locale.US;
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) stringWriter1;
      objectArray0[1] = (Object) "?20ORU#)& N9nmJ:O";
      objectArray0[2] = (Object) locale0;
      objectArray0[3] = (Object) "";
      mockPrintWriter0.printf(locale0, "org.apache.commons.cli.HelpFormatter$OptionComparator", objectArray0);
      int int0 = 0;
      Options options0 = new Options();
      String string0 = "O;3";
      Option option0 = null;
      try {
        option0 = new Option(" [ARG]", true, "O;3");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The option ' [ARG]' contains an illegal character : ' '
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setSyntaxPrefix("A CloneNotSupportedException was thrown: ");
      assertEquals("A CloneNotSupportedException was thrown: ", helpFormatter0.getSyntaxPrefix());
  }
}
