/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 13 14:48:48 GMT 2021
 */

package org.apache.commons.cli;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.OutputStream;
import java.io.PipedOutputStream;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.net.URISyntaxException;
import java.util.Comparator;
import org.apache.commons.cli.HelpFormatter;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.OptionGroup;
import org.apache.commons.cli.Options;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class HelpFormatter_ESTest extends HelpFormatter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setSyntaxPrefix("");
      Options options0 = new Options();
      helpFormatter0.printHelp(3, "arg", "arg", options0, "arg");
      helpFormatter0.getSyntaxPrefix();
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setOptPrefix("");
      helpFormatter0.createPadding(1);
      helpFormatter0.getOptPrefix();
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Option option0 = new Option("arg", "pRDJ.2");
      Options options1 = options0.addOption(option0);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(32, "", "4t KOu", options1, "yiM6Q?1", false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Options options0 = new Options();
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getArgName();
      helpFormatter0.renderOptions((StringBuffer) null, 1607, options0, 0, 2361);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLeftPadding();
      helpFormatter0.findWrapPos("K]Eek(", 3, 1);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      PrintWriter printWriter0 = mockPrintWriter0.append('_');
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage(printWriter0, (-344), (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = options0.addOption("", "usage: ", false, "Y\"Kq x].6AS(C,BU;");
      Options options2 = options1.addOption("", "arg", false, "-");
      Option option0 = new Option("", true, "");
      options1.addOption(option0);
      option0.setArgName("");
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage((PrintWriter) null, (-2679), "usage: ", options2);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = helpFormatter0.defaultNewLine;
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      Options options2 = options1.addOption("", "", false, "\n");
      Option option0 = new Option("", true, "-");
      options2.addOption(option0);
      option0.setArgName("");
      helpFormatter0.printHelp((-1), "\n", "D6>~$yXQ!?s_]", options2, (String) null);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = helpFormatter0.defaultNewLine;
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Options options2 = options1.addOption("", "", true, "\n");
      options2.getOptions();
      Option option0 = new Option("", true, "-");
      options2.addOption(option0);
      option0.setArgName("\n");
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage((PrintWriter) null, (-751), "", options0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = helpFormatter0.defaultNewLine;
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Options options2 = options1.addOption("", "", true, "\n");
      Option option0 = new Option("", true, "-");
      Options options3 = options2.addOption(option0);
      option0.setArgName("\n");
      Options options4 = options3.addOption("arg", true, "\n");
      helpFormatter0.printHelp(63, "]", "]", options4, "arg");
      helpFormatter0.getArgName();
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setDescPadding(11);
      helpFormatter0.rtrim("A;,y7p|nU=H");
      helpFormatter0.getWidth();
      StringWriter stringWriter0 = new StringWriter(11);
      StringWriter stringWriter1 = stringWriter0.append('?');
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter1);
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      Options options2 = options1.addOption((String) null, "A;,y7p|nU=H", true, (String) null);
      Option option0 = new Option("FbSKc", " ");
      Options options3 = options2.addOption(option0);
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 919, (String) null, options3);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options0 = new Options();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      Option option0 = new Option("", "");
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      Options options1 = options0.addOptionGroup(optionGroup0);
      options1.getOptions();
      options1.addOptionGroup(optionGroup1);
      option0.toString();
      PrintWriter printWriter0 = null;
      // Undeclared exception!
      helpFormatter1.printHelp((PrintWriter) null, 1, ",<:=FtUrc", "", options1, (-2), (-1), "f9Ouil0JwmOCYXSi>Yh", false);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLeftPadding();
      Options options0 = new Options();
      String string0 = "";
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((String) null, options0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options0 = new Options();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      options0.getOptionGroups();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(dataOutputStream0, false);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, (-350), "");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options0 = new Options();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter0.defaultOptPrefix = "-";
      options0.addOptionGroup(optionGroup0);
      options0.helpOptions();
      helpFormatter1.defaultDescPad = (-617);
      // Undeclared exception!
      try { 
        helpFormatter1.printHelp(3, "--", "f':0T,", options0, "P");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options0 = new Options();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter0.findWrapPos("[ARG...]", (-1), 1);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("", false, (String) null);
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      Options options1 = options0.addOptionGroup(optionGroup1);
      helpFormatter0.printHelp("w", options1, false);
      helpFormatter0.getDescPadding();
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLeftPadding();
      Options options0 = new Options();
      Options options1 = options0.addOption("", "arg", true, "");
      Option option0 = new Option("arg", "-Y<lJhNM[r*;/-^");
      options1.addOption(option0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      helpFormatter0.printHelp("b=~pMsq5`", "", options1, "", true);
      helpFormatter0.getLeftPadding();
      helpFormatter0.getArgName();
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("cmdLineSyntax not provided", "cmdLineSyntax not provided", (Options) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options0 = new Options();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      options0.getOptions();
      Option option0 = new Option((String) null, "");
      OptionGroup optionGroup1 = new OptionGroup();
      optionGroup1.toString();
      optionGroup1.setRequired(true);
      OptionGroup optionGroup2 = optionGroup1.addOption(option0);
      options0.addOptionGroup(optionGroup2);
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage((PrintWriter) null, 74, "-", options0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultSyntaxPrefix = " jdc9ei+";
      helpFormatter0.setNewLine((String) null);
      helpFormatter0.setOptPrefix("-");
      helpFormatter0.getNewLine();
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getNewLine();
      Options options0 = new Options();
      Option option0 = new Option("", " ", true, "usage: ");
      Options options1 = options0.addOption(option0);
      Options options2 = options1.addOption("", true, "--");
      String string0 = "<";
      Options options3 = options2.addOption("", "usage: ", false, "<");
      OptionGroup optionGroup0 = new OptionGroup();
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      Options options4 = options3.addOptionGroup(optionGroup1);
      helpFormatter0.printHelp("\n", options4, true);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
      mockPrintWriter0.append('w');
      PrintWriter printWriter0 = mockPrintWriter0.append('$');
      options4.getOption("arg");
      mockPrintWriter0.print(3560.6984254306);
      helpFormatter0.printOptions(printWriter0, (-1), options4, 34, 34);
      helpFormatter0.getArgName();
      helpFormatter0.getWidth();
      helpFormatter0.printHelp((-1), "#wX", "", options4, "", true);
      helpFormatter0.getWidth();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("", options3, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options0 = new Options();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      String string0 = "[";
      options0.getMatchingOptions("--");
      // Undeclared exception!
      try { 
        helpFormatter0.printOptions((PrintWriter) null, 74, options0, 3, 1005);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = null;
      String string0 = " ";
      int int0 = 112;
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(" ", (Options) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLeftPadding();
      Options options0 = new Options();
      Options options1 = new Options();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      // Undeclared exception!
      helpFormatter0.printHelp(0, "\n", "t4,JXlVgInlzPl_", options0, "t4,JXlVgInlzPl_");
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.rtrim("tm");
      Options options0 = new Options();
      Option option0 = new Option("arg", "");
      Options options1 = options0.addOption(option0);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((-31), "arg", "", options1, "", false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLeftPadding();
      Options options0 = new Options();
      String string0 = "";
      String string1 = "";
      options0.addOption("", "arg", true, "");
      options0.getOptions();
      String string2 = "b=~pM\\sq5`";
      StringBuffer stringBuffer0 = new StringBuffer("-");
      // Undeclared exception!
      helpFormatter0.renderOptions(stringBuffer0, 0, options0, 1, 111);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("4V`Vwd(uAo.");
      PrintWriter printWriter0 = mockPrintWriter0.printf("--", (Object[]) null);
      Options options0 = new Options();
      StringBuffer stringBuffer0 = new StringBuffer("-");
      helpFormatter0.printHelp(printWriter0, 13, "org.apache.commons.cli.HelpFormatter$OptionComparator", (String) null, options0, 72, 13, "4V`Vwd(uAo.", false);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
      MockFile mockFile0 = new MockFile("-", "--");
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Options options0 = new Options();
      StringBuffer stringBuffer0 = new StringBuffer("-");
      helpFormatter0.renderWrappedText(stringBuffer0, 10, 94, "");
      // Undeclared exception!
      try { 
        helpFormatter0.createPadding((-206));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer(1);
      helpFormatter1.renderWrappedText(stringBuffer0, 3, 1, "Ne'?B_@?NoN$!Q");
      helpFormatter0.setNewLine("--");
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("", "Cannot add value, list full.");
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      options0.addOptionGroup(optionGroup1);
      Options options1 = null;
      // Undeclared exception!
      try { 
        helpFormatter1.printHelp((PrintWriter) mockPrintWriter0, 3, "m%3I,|(*xS^v4c^5|", "%)#IfPIm", (Options) null, 74, 74, "A CloneNotSupportedException was thrown: ", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "";
      Options options0 = null;
      int int0 = 2;
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("", "", (Options) null, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLongOptPrefix();
      OptionGroup optionGroup0 = new OptionGroup();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = options0.addOption("NO_ARGS_ALLOWED", "-", false, "S(}j\"'2vDqLR0,Q\u0002N");
      Option option0 = new Option("z", "L)z7]5A", false, "--");
      Options options2 = options1.addOption(option0);
      // Undeclared exception!
      try { 
        helpFormatter1.renderOptions((StringBuffer) null, (-682), options2, 74, 90);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer(1);
      helpFormatter1.renderWrappedText(stringBuffer0, 3, 1, "Ne'?B_@NojNi$!.Q");
      helpFormatter0.getOptionComparator();
      helpFormatter0.setNewLine("--");
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("", "Cannot add value, list full.");
      optionGroup0.addOption(option0);
      Options options1 = options0.addOption(option0);
      helpFormatter1.printUsage((PrintWriter) mockPrintWriter0, (-1), "", options1);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer(1);
      helpFormatter1.renderWrappedText(stringBuffer0, 3, 1, "Ne'?B_@NojNi$!.Q");
      helpFormatter0.getOptionComparator();
      helpFormatter0.setNewLine("--");
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("", "Cannot add value, list full.");
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      Options options1 = options0.addOptionGroup(optionGroup1);
      helpFormatter1.printUsage((PrintWriter) mockPrintWriter0, (-1), "", options1);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("4,Ns}%&} $9skw}4w");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer(14);
      helpFormatter1.renderWrappedText(stringBuffer0, 502, 3, "");
      helpFormatter0.getOptionComparator();
      helpFormatter1.createPadding(502);
      helpFormatter1.getOptionComparator();
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "arg");
      // Undeclared exception!
      try { 
        helpFormatter1.renderOptions(stringBuffer0, (-1142), (Options) null, 2345, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLongOptPrefix();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("UYfQ,S|>*`0I:W");
      Options options0 = new Options();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, (-3624), "dY~5&J0YFSgU", "\n", options0, 0, 0, " K@b$U$#vGkt", false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultLeftPad = 944;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("UYfQ,S|>*`0I:W");
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 45, 45, "UYfQ,S|>*`0I:W");
      helpFormatter0.setOptPrefix((String) null);
      helpFormatter0.getOptPrefix();
      String string0 = HelpFormatter.DEFAULT_OPT_PREFIX;
      Options options0 = new Options();
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 71, " ", options0);
      // Undeclared exception!
      try { 
        helpFormatter0.findWrapPos((String) null, (-999), 48);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = null;
      HelpFormatter helpFormatter1 = new HelpFormatter();
      Options options1 = new Options();
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "usage: ");
      StringBuffer stringBuffer0 = stringWriter1.getBuffer();
      StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, 44, options1, 44, 3);
      int int0 = 74;
      helpFormatter1.renderOptions(stringBuffer1, 1, options1, 74, 3);
      // Undeclared exception!
      try { 
        options1.addOption("--", " ", false, "   ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The option '--' contains an illegal character : '-'
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLongOptPrefix();
      OptionGroup optionGroup0 = new OptionGroup();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = options0.addOption("NO_ARGS_ALLOWED", "-", true, "S(}j\"'2vDqLR0,Q\u0002N");
      Option option0 = new Option("", "L)z7]5A", true, "--");
      Options options2 = options1.addOption(option0);
      // Undeclared exception!
      try { 
        helpFormatter1.renderOptions((StringBuffer) null, (-665), options2, 74, 90);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      options0.addOption("arg", "\n", true, "");
      OptionGroup optionGroup0 = new OptionGroup();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "arg");
      options0.addOptionGroup(optionGroup0);
      Option option0 = new Option("arg", true, ", ");
      Options options1 = options0.addOption(option0);
      Options options2 = options1.addOptionGroup(optionGroup0);
      options2.getMatchingOptions("s5j");
      helpFormatter0.printHelp("s5j", "w5w/U^(M:Rp_X", options0, "/\"a", true);
      helpFormatter0.getLeftPadding();
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintStream mockPrintStream0 = new MockPrintStream("-");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.getLongOptPrefix();
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("-");
      OptionGroup optionGroup0 = new OptionGroup();
      Options options0 = new Options();
      HelpFormatter helpFormatter2 = new HelpFormatter();
      helpFormatter2.printHelp(3, "--", " ", options0, "E(c,lze&");
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultLeftPad = 944;
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.getLongOptPrefix();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
      OptionGroup optionGroup0 = new OptionGroup();
      Options options0 = new Options();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "arg");
      helpFormatter0.printHelp(74, " ] [ long ", "48z`e'e=dzanedn", options0, "-");
      helpFormatter1.findWrapPos("-", 3, 74);
      helpFormatter1.printWrapped((PrintWriter) mockPrintWriter0, 52, "-");
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      String string0 = "j\"~0\"<";
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("j\"~0\"<");
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string1 = "k?-75?";
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 9, 34, "k?-75?");
      helpFormatter0.setOptPrefix("k?-75?");
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.getLongOptPrefix();
      Options options0 = new Options();
      int int0 = (-2);
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, (-2), "5#{<YmAb(VyVa^:4a>", options0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultLeftPad = 944;
      helpFormatter0.getLongOptPrefix();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("UYfQ,S|>*`0I:W");
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) "--";
      mockPrintWriter0.printf("", objectArray0);
      Options options0 = new Options();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 43, "usage: ", ",+\"KP@U(M;j@;>B", options0, 74, 1, (String) null, true);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultLeftPad = 944;
      helpFormatter0.getLongOptPrefix();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("UYfQ,S|>*`0I:W");
      OptionGroup optionGroup0 = new OptionGroup();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(comparator0).toString();
      helpFormatter0.optionComparator = comparator0;
      Options options0 = new Options();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.getLongOptPrefix();
      helpFormatter0.getArgName();
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 74, "arg", "arg", options0, 3, 97, "E&", false);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("Md", "Md", (Options) null, (String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultWidth = (-1140);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("-");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0);
      mockPrintWriter0.append('C');
      char[] charArray0 = new char[3];
      charArray0[0] = 'C';
      charArray0[1] = 'C';
      charArray0[2] = 'C';
      mockPrintWriter0.write(charArray0);
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 1621, (-1), "-");
      helpFormatter0.setOptPrefix("a5*DG");
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.getOptionComparator();
      Options options0 = new Options();
      Options options1 = options0.addOption("arg", "usage: ", false, "--");
      // Undeclared exception!
      try { 
        helpFormatter0.printOptions(mockPrintWriter0, (-1140), options1, 4, (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = options0.addOption("arg", "U[q4upI S*2m", false, "Lp");
      OptionGroup optionGroup0 = new OptionGroup();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "j,x!/,Ux9D,{E6k+");
      options0.addOptionGroup(optionGroup0);
      options0.getMatchingOptions("--");
      helpFormatter0.printHelp("+V7o@*:@J|aJ]lRiDM", "+V7o@*:@J|aJ]lRiDM", options1, " ] [ long ", false);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("T%?m{Osmisqk0TA~his");
      helpFormatter0.printHelp("fR'K[IK5dB$6Hy", options1);
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 5385, "j,x!/,Ux9D,{E6k+", "", options0, 5385, 1713, "", false);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLongOptPrefix();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) "--";
      mockPrintWriter0.printf("", objectArray0);
      Options options0 = new Options();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 74, "arg", "", options0, (-280), (-170), "", false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockFile mockFile0 = new MockFile("", "--");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0, false);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.setOptionComparator(comparator0);
      helpFormatter0.getOptPrefix();
      Comparator<Option> comparator1 = (Comparator<Option>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(comparator1).toString();
      helpFormatter0.setOptionComparator(comparator1);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockFile0);
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter1, 64, "-", "", options0, 13, (-785), "-", true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      // Undeclared exception!
      helpFormatter0.printHelp(1, "HeF++K", "0dCK`MGhI)_Ltm?>3z", options0, "0dCK`MGhI)_Ltm?>3z", false);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLongOptPrefix();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("--");
      OptionGroup optionGroup0 = new OptionGroup();
      Options options0 = new Options();
      options0.toString();
      helpFormatter0.printHelp(74, "-", "2a 8v?d~%{=", options0, "--");
      helpFormatter0.getLongOptSeparator();
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLongOptSeparator();
      Options options0 = new Options();
      String string0 = "";
      Options options1 = options0.addOption("", "", false, "\n");
      options1.hasLongOption("arg");
      // Undeclared exception!
      helpFormatter0.printHelp(0, " ", " ", options1, " ", false);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = HelpFormatter.DEFAULT_DESC_PAD;
      Options options0 = new Options();
      Options options1 = new Options();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      HelpFormatter helpFormatter2 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
      PrintWriter printWriter0 = mockPrintWriter0.append('B');
      // Undeclared exception!
      try { 
        helpFormatter2.printHelp(printWriter0, (-1741), "hikga,dL", "-", options1, 74, 1687, "X{UGV");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockFile mockFile0 = new MockFile("", "--");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0, false);
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) "oz&_IX[ZY";
      objectArray0[1] = (Object) "";
      objectArray0[2] = (Object) mockFileOutputStream0;
      objectArray0[3] = (Object) mockFileOutputStream0;
      objectArray0[4] = (Object) "oz&_IX[ZY";
      objectArray0[5] = (Object) "oz&_IX[ZY";
      objectArray0[6] = (Object) mockFileOutputStream0;
      objectArray0[7] = (Object) "";
      OptionGroup optionGroup0 = new OptionGroup();
      Options options0 = new Options();
      int int0 = (-838);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((-838), "oz&_IX[ZY", "kOI$Ts5)wR6z&", options0, "");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLeftPadding();
      MockPrintStream mockPrintStream0 = new MockPrintStream("-");
      Options options0 = new Options();
      options0.addOption("", "", true, "");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
      char[] charArray0 = new char[7];
      charArray0[0] = '[';
      charArray0[1] = 'c';
      charArray0[2] = '\\';
      charArray0[3] = '-';
      charArray0[4] = 'J';
      charArray0[5] = '~';
      charArray0[6] = ']';
      mockPrintWriter0.write(charArray0);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      // Undeclared exception!
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 1, 1, "y3Ql");
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("CsJm|<=KP#l?[RL");
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setOptPrefix("arg");
      helpFormatter0.setOptPrefix("CsJm|<=KP#l?[RL");
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.getLongOptPrefix();
      Options options0 = new Options();
      helpFormatter0.printHelp("CsJm|<=KP#l?[RL", options0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("-");
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 944, (-1840), "[");
      helpFormatter0.setOptPrefix("' was specified but an option from this group ");
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.getLongOptPrefix();
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage((PrintWriter) null, 3441, "h\"V<NkQ8# 8sOu<F>p ", options0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLeftPadding();
      Options options0 = new Options();
      Options options1 = options0.addOption("", "arg", true, "");
      options0.getOptions();
      helpFormatter0.printHelp("b=~pMsq5`", "(Vr2", options1, "", true);
      StringWriter stringWriter0 = null;
      try {
        stringWriter0 = new StringWriter((-1679));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative buffer size
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-99);
      byteArray0[1] = (byte)43;
      byteArray0[2] = (byte)35;
      byteArray0[3] = (byte)64;
      byteArray0[4] = (byte)13;
      byteArray0[5] = (byte)61;
      byteArray0[6] = (byte)88;
      byteArray0[7] = (byte)9;
      byteArray0[8] = (byte)56;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      helpFormatter0.getLeftPadding();
      MockPrintStream mockPrintStream0 = new MockPrintStream("-");
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option((String) null, ")yZpKKnN");
      optionGroup0.addOption(option0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Options options1 = options0.addOptionGroup(optionGroup0);
      options1.getMatchingOptions(" ");
      helpFormatter0.printHelp("[ARG...]", "E W<", options0, "[ARG...]", true);
      helpFormatter0.getLeftPadding();
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(726, "g&E~;KU[yUA0", "usage: ", (Options) null, "<", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "rt+p";
      helpFormatter0.setLongOptSeparator("rt+p");
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.getLongOptPrefix();
      String string1 = "1AF;P%wZw`B^gTYya";
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      boolean boolean0 = false;
      Option option0 = null;
      try {
        option0 = new Option("\n", false, "g^g9C?->=q");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal option name '
         // '
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLeftPadding();
      MockPrintStream mockPrintStream0 = new MockPrintStream("-");
      Options options0 = new Options();
      Options options1 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      options0.addOptionGroup(optionGroup0);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(1143, "", (String) null, options0, "org.apache.commons.cli.HelpFormatter");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockFile mockFile0 = new MockFile("", "--");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0, false);
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) "oz&_IX[ZY";
      objectArray0[1] = (Object) "";
      objectArray0[2] = (Object) mockFileOutputStream0;
      objectArray0[3] = (Object) mockFileOutputStream0;
      objectArray0[5] = (Object) "oz&_IX[ZY";
      objectArray0[6] = (Object) mockFileOutputStream0;
      objectArray0[7] = (Object) "";
      mockPrintWriter0.printf("oz&_IX[ZY", objectArray0);
      Options options0 = new Options();
      Option option0 = new Option("", "arg", false, "org.apache.commons.cli.HelpFormatter$1");
      options0.addOption(option0);
      Options options1 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 103, (String) null, "`3q", options1, (-2), 983, "mq:E8JuMb^", false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultLeftPad = 944;
      helpFormatter0.getLongOptPrefix();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("UYfQ,S|>*`0I:W");
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) "--";
      objectArray0[1] = (Object) "UYfQ,S|>*`0I:W";
      char[] charArray0 = new char[5];
      charArray0[0] = '2';
      charArray0[1] = 'R';
      charArray0[2] = 'r';
      charArray0[3] = '@';
      charArray0[4] = 'H';
      mockPrintWriter0.write(charArray0);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.printWrapped((PrintWriter) mockPrintWriter0, 537, 944, "o$cD#pD0/ Gvl<O{FoS");
      helpFormatter1.setOptPrefix("");
      helpFormatter1.getLongOptPrefix();
      helpFormatter1.getLongOptPrefix();
      Options options0 = new Options();
      // Undeclared exception!
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 1, "--", options0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintStream mockPrintStream0 = new MockPrintStream("--");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
      mockPrintWriter0.append('C');
      char[] charArray0 = new char[5];
      charArray0[0] = 'C';
      charArray0[1] = 'C';
      charArray0[2] = 'C';
      charArray0[3] = 'C';
      charArray0[4] = 'C';
      mockPrintWriter0.write(charArray0);
      helpFormatter0.setNewLine("a5*DG");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.findWrapPos("-", 1, 1517);
      helpFormatter1.getOptPrefix();
      helpFormatter0.setSyntaxPrefix("");
      helpFormatter0.rtrim((String) null);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "$");
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getOptPrefix();
      Comparator<Option> comparator0 = (Comparator<Option>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      Options options0 = new Options();
      File file0 = MockFile.createTempFile("Z[![}3\"Fd", "S]zwu<o ;0pa");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 559, 598, ")M:QT>");
      options0.toString();
      helpFormatter0.printHelp("$", options0, false);
      helpFormatter0.setOptionComparator(comparator0);
      helpFormatter0.defaultDescPad = (-1309);
      helpFormatter0.getLeftPadding();
      helpFormatter0.getDescPadding();
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultLeftPad = 944;
      helpFormatter0.getLongOptPrefix();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("UYfQ,S|>*`0I:W");
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) "--";
      objectArray0[1] = (Object) "UYfQ,S|>*`0I:W";
      mockPrintWriter0.append((CharSequence) "usage: ");
      objectArray0[2] = (Object) "--";
      mockPrintWriter0.printf("arg", objectArray0);
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(23, "--", "--", (Options) null, "UYfQ,S|>*`0I:W");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLeftPadding();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = new Options();
      // Undeclared exception!
      helpFormatter0.printHelp(1, "{CjW", "{CjW", options0, ")bKg0nRRSh&pHRK");
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLeftPadding();
      MockPrintStream mockPrintStream0 = new MockPrintStream("-");
      Options options0 = new Options();
      Options options1 = options0.addOption("", "", true, "");
      options1.getOptions();
      helpFormatter0.printHelp("NI(jkz5=uC$~", "|d]8]]\"Q4g:>3", options1, (String) null, true);
      StringWriter stringWriter0 = new StringWriter(3);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultWidth = (-1140);
      Options options0 = new Options();
      options0.addOption((String) null, "--", true, "--");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("=ZV_%*S42*),'v", (String) null, options0, "", true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintStream mockPrintStream0 = new MockPrintStream("--");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
      char char0 = 'C';
      PrintWriter printWriter0 = mockPrintWriter0.append('C');
      int int0 = (-2003);
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped(printWriter0, (-2003), (-2003), "%C");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultWidth = (-1140);
      Options options0 = new Options();
      StringWriter stringWriter0 = new StringWriter(2924);
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      // Undeclared exception!
      try { 
        helpFormatter0.renderWrappedText(stringBuffer0, 1195, 2241, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLeftPadding();
      MockPrintStream mockPrintStream0 = new MockPrintStream("-");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
      mockPrintWriter0.append('B');
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 32, 32, "\n");
      helpFormatter0.setOptPrefix("%C");
      helpFormatter0.getLongOptPrefix();
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintStream mockPrintStream0 = new MockPrintStream("--");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
      mockPrintWriter0.append('C');
      char[] charArray0 = new char[5];
      charArray0[0] = 'C';
      charArray0[1] = 'C';
      charArray0[2] = 'C';
      charArray0[3] = 'C';
      charArray0[4] = 'C';
      mockPrintWriter0.write(charArray0);
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 71, (-1), "a5*DG");
      helpFormatter0.setOptPrefix("4<1&bMnj.sv;PVBeANj");
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.getLongOptPrefix();
      Options options0 = new Options();
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 111, "org.apache.commons.cli.HelpFormatter", options0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLeftPadding();
      MockPrintStream mockPrintStream0 = new MockPrintStream("-");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("-");
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) "TJ?1=w?c NNIxO=";
      objectArray0[1] = (Object) mockPrintWriter0;
      objectArray0[2] = (Object) "TJ?1=w?c NNIxO=";
      objectArray0[3] = (Object) helpFormatter0;
      mockPrintWriter0.printf("TJ?1=w?c NNIxO=", objectArray0);
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter1, 9, "TJ?1=w?c NNIxO=", (String) null, options0, (-873), 0, "k4<x_=+j.SN.2c|C'");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLeftPadding();
      MockPrintStream mockPrintStream0 = new MockPrintStream("-");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
      mockPrintWriter0.append('C');
      helpFormatter0.getArgName();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "arg");
      // Undeclared exception!
      helpFormatter0.renderWrappedText(stringBuffer0, 1, 1513, "fHVT/-");
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) " ");
      stringWriter1.getBuffer();
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped((PrintWriter) null, 12, 2539, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.createPadding(2102);
      helpFormatter0.setArgName("");
      PrintWriter printWriter0 = null;
      int int0 = (-136);
      String string0 = "org.apache.commons.cli.OptionGroup";
      String string1 = "4*qskCAq";
      Options options0 = new Options();
      helpFormatter0.printHelp("]", "", options0, "4*qskCAq");
      int int1 = 0;
      helpFormatter0.setNewLine("}");
      // Undeclared exception!
      try { 
        helpFormatter0.findWrapPos("ScaU", 0, (-136));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultLeftPad = 944;
      helpFormatter0.getLongOptPrefix();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("UYfQ,S|>*`0I:W");
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) "--";
      StringWriter stringWriter0 = new StringWriter(74);
      stringWriter0.append((CharSequence) "arg");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(stringWriter0);
      PrintWriter printWriter0 = mockPrintWriter1.append((CharSequence) "-");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.printUsage((PrintWriter) mockPrintWriter0, 64, "usage: ");
      helpFormatter1.rtrim("'hQ `_il4ZIg=*dO+%");
      HelpFormatter helpFormatter2 = new HelpFormatter();
      int int0 = (-1817);
      // Undeclared exception!
      try { 
        helpFormatter2.printUsage(printWriter0, (-1817), "--");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLongOptPrefix();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("--");
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) mockPrintWriter0;
      objectArray0[0] = (Object) "A CloneNotSupportedException was thrown: ";
      PrintWriter printWriter0 = mockPrintWriter0.printf("A CloneNotSupportedException was thrown: ", objectArray0);
      Options options0 = new Options();
      helpFormatter0.printHelp(printWriter0, 944, "s#+Z!A0+", "A CloneNotSupportedException was thrown: ", options0, 944, 944, "oF%tF&hs");
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLeftPadding();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      helpFormatter0.printHelp(2246, "{CjW", "{CjW", options1, "{CjW");
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setDescPadding(2772);
      helpFormatter0.setSyntaxPrefix("");
      helpFormatter0.rtrim("mB41*");
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) " ");
      helpFormatter0.defaultArgName = ",(I8+OR%le/yL";
      StringBuffer stringBuffer0 = stringWriter1.getBuffer();
      helpFormatter0.defaultOptPrefix = "!n{d'm)mrejiq";
      stringBuffer0.ensureCapacity((-3142));
      helpFormatter0.renderWrappedText(stringBuffer0, 1513, 1513, "org.apache.commons.cli.Options");
      helpFormatter0.getSyntaxPrefix();
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = null;
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("li{[b1.{T:J>", (Options) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "7d[l|ZB77TDNz";
      int int0 = (-382);
      helpFormatter0.findWrapPos("7d[l|ZB77TDNz", (-382), (-353));
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "\n");
      // Undeclared exception!
      try { 
        helpFormatter0.renderWrappedText(stringBuffer0, 3, (-353), "oG}8`GfueCy");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "+V7o\\@*:@J|aJ]lRiDM";
      Options options0 = new Options();
      options0.getOptions();
      String string1 = "U[q4up\\I S*2m";
      boolean boolean0 = false;
      Options options1 = options0.addOption("arg", "U[q4upI S*2m", false, "Lp");
      OptionGroup optionGroup0 = new OptionGroup();
      options0.addOptionGroup(optionGroup0);
      options0.getMatchingOptions("--");
      String string2 = " ] [ long ";
      helpFormatter0.printHelp("+V7o@*:@J|aJ]lRiDM", "+V7o@*:@J|aJ]lRiDM", options1, " ] [ long ", false);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("", (Options) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) " ");
      StringBuffer stringBuffer0 = stringWriter1.getBuffer();
      helpFormatter0.defaultOptPrefix = "!n{d'm)mrejiq";
      helpFormatter0.renderWrappedText(stringBuffer0, 1513, 1513, "org.apache.commons.cli.Options");
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultSyntaxPrefix = "aTx4Z^N@";
      helpFormatter0.getOptionComparator();
      helpFormatter0.getOptPrefix();
      StringBuffer stringBuffer0 = new StringBuffer();
      int int0 = 74;
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        options0.addOption((Option) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.Options", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setOptPrefix("-");
      helpFormatter0.getNewLine();
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setOptPrefix("");
      helpFormatter0.setArgName((String) null);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.optionComparator = comparator0;
      helpFormatter0.setOptPrefix("");
      helpFormatter0.defaultLongOptPrefix = "fjAw&@;\u0007u|)";
      helpFormatter0.setLeftPadding((-3780));
      helpFormatter0.getNewLine();
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream("", " ] [ long ");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getOptPrefix();
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "7d[l|ZB77TDNz";
      int int0 = (-382);
      helpFormatter0.findWrapPos("7d[l|ZB77TDNz", (-382), (-353));
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "\n");
      // Undeclared exception!
      try { 
        helpFormatter0.renderWrappedText(stringBuffer0, (-70), (-353), "oG}8`GfueCy");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "\n");
      stringBuffer0.append((-3638.11286854056));
      String string0 = "X>i[#";
      helpFormatter0.renderWrappedText(stringBuffer0, 2, 2, "X>i[#");
      helpFormatter0.setOptionComparator((Comparator) null);
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter((OutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Writer", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultNewLine = "R@z'meGR&X-='";
      String string0 = "Cannot add value, list full.";
      helpFormatter0.setLongOptPrefix("Cannot add value, list full.");
      helpFormatter0.setOptPrefix("");
      helpFormatter0.setOptPrefix("");
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter("");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = " ";
      helpFormatter0.setLongOptPrefix(" ");
      Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.setOptionComparator(comparator0);
      PrintWriter printWriter0 = null;
      int int0 = 0;
      Options options0 = new Options();
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        options0.addOption("usage: ", false, " ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The option 'usage: ' contains an illegal character : ':'
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setNewLine("");
      helpFormatter0.createPadding(385);
      String string0 = "\\om{h-O";
      Options options0 = new Options();
      boolean boolean0 = false;
      String string1 = "";
      // Undeclared exception!
      try { 
        options0.addOption("MV$]", (String) null, false, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The option 'MV$]' contains an illegal character : ']'
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setDescPadding(2772);
      helpFormatter0.defaultOptPrefix = "";
      helpFormatter0.setSyntaxPrefix("cmdLineSyntax not provided");
      helpFormatter0.rtrim("");
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setSyntaxPrefix(";i6RV)tj<:U2[nY");
      helpFormatter0.setLeftPadding(31);
      helpFormatter0.setOptPrefix(";i6RV)tj<:U2[nY");
      helpFormatter0.getDescPadding();
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getWidth();
      StringWriter stringWriter0 = new StringWriter(711);
      StringWriter stringWriter1 = stringWriter0.append('~');
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter1);
      int int0 = 0;
      Options options0 = new Options();
      boolean boolean0 = true;
      String string0 = "uj-V";
      // Undeclared exception!
      try { 
        options0.addOption("-", true, "uj-V");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal option name '-'
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultWidth = (-1140);
      String string0 = null;
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("=ZV_%*S42*),'v", (String) null, options0, "", true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultLeftPad = 944;
      helpFormatter0.getLongOptPrefix();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("UYfQ,S|>*`0I:W");
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) "--";
      objectArray0[1] = (Object) "UYfQ,S|>*`0I:W";
      objectArray0[2] = (Object) "--";
      PrintWriter printWriter0 = mockPrintWriter0.printf("arg", objectArray0);
      Options options0 = new Options();
      // Undeclared exception!
      helpFormatter0.printHelp(printWriter0, 0, "UYfQ,S|>*`0I:W", "--", options0, 944, 944, (String) null);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLeftPadding();
      MockPrintStream mockPrintStream0 = new MockPrintStream("-");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
      PrintWriter printWriter0 = mockPrintWriter0.append('C');
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped(printWriter0, 1, (-1), "a5*DG");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = 2246;
      String string0 = "zgGS}v4iY(O{Uq}wBX'";
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped((PrintWriter) null, 2246, "zgGS}v4iY(O{Uq}wBX'");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setWidth(0);
      helpFormatter0.setDescPadding(0);
      String string0 = "zow?Z}y#a& =]@";
      Options options0 = new Options();
      Option option0 = null;
      try {
        option0 = new Option("-", "org.apache.commons.cli.ParseException");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal option name '-'
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer();
      Options options0 = new Options();
      StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, 0, options0, 0, 0);
      options0.getOption("");
      // Undeclared exception!
      try { 
        helpFormatter0.renderOptions(stringBuffer1, 3, options0, (-1), 1923);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("", "", (Options) null, "\n", false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLeftPadding();
      MockPrintStream mockPrintStream0 = new MockPrintStream("-");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
      PrintWriter printWriter0 = mockPrintWriter0.append('C');
      Object[] objectArray0 = new Object[3];
      Object object0 = new Object();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) printWriter0;
      Object object1 = new Object();
      mockPrintWriter0.printf(" ", objectArray0);
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) null, 9, (String) null, "nCq8Md[M<]", options0, 0, 9, "nCq8Md[M<]");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockFile mockFile0 = new MockFile("", "--");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0, false);
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) "oz&_IX[ZY";
      objectArray0[1] = (Object) "";
      objectArray0[2] = (Object) mockFileOutputStream0;
      objectArray0[3] = (Object) mockFileOutputStream0;
      objectArray0[4] = (Object) "oz&_IX[ZY";
      objectArray0[5] = (Object) "oz&_IX[ZY";
      objectArray0[6] = (Object) mockFileOutputStream0;
      objectArray0[7] = (Object) "";
      PrintWriter printWriter0 = mockPrintWriter0.printf("oz&_IX[ZY", objectArray0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(printWriter0);
      Options options0 = new Options();
      Option option0 = new Option("", "org.apache.commons.cli.AlreadySelectedException", false, "usage: ");
      Options options1 = options0.addOption(option0);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter1, (-1929), "", "L?]=bC7}%`2Yu2dXZ!G", options1, 0, (-1), "", false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "[ option: ";
      try { 
        MockURI.URI("[ option: ");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Illegal character in scheme name at index 0: [ option: 
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.createPadding(2102);
      helpFormatter0.setArgName("");
      PrintWriter printWriter0 = null;
      int int0 = (-136);
      String string0 = "org.apache.commons.cli.OptionGroup";
      String string1 = "4*qskCAq";
      Options options0 = new Options();
      OptionGroup optionGroup0 = null;
      helpFormatter0.printHelp("]", "", options0, "4*qskCAq");
      // Undeclared exception!
      try { 
        options0.addOptionGroup((OptionGroup) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.Options", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = null;
      int int0 = 0;
      String string0 = "";
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("", "", (Options) null, "`Cr*8S{NtQA|d}", false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }
}
