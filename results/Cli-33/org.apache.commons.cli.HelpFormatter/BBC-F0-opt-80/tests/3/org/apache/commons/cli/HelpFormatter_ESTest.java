/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 08 08:39:42 GMT 2021
 */

package org.apache.commons.cli;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FilterOutputStream;
import java.io.OutputStream;
import java.io.PrintStream;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.io.UnsupportedEncodingException;
import java.io.Writer;
import java.util.Comparator;
import java.util.Locale;
import org.apache.commons.cli.HelpFormatter;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.OptionGroup;
import org.apache.commons.cli.Options;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class HelpFormatter_ESTest extends HelpFormatter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getOptPrefix();
      int int0 = (-1);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("arg");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0);
      PrintWriter printWriter0 = mockPrintWriter0.append('`');
      Options options0 = null;
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(printWriter0, (-1), "-", "-", (Options) null, (-1), 68, "0nU1PiZ.\"45hKB");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("arg", (String) null, true, " ");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-49);
      byteArray0[1] = (byte)14;
      byteArray0[2] = (byte)24;
      optionGroup0.setRequired(true);
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte) (-15);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      Options options2 = options1.addOptionGroup(optionGroup1);
      // Undeclared exception!
      helpFormatter0.printHelp(1, "?", "?", options2, "hjbcQW>s;#", true);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = null;
      HelpFormatter helpFormatter1 = new HelpFormatter();
      // Undeclared exception!
      try { 
        helpFormatter1.printHelp("\n", (Options) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName(" ");
      helpFormatter0.findWrapPos(" ", 11, 2);
      helpFormatter0.defaultDescPad = (-2624);
      Options options0 = new Options();
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(" $AVDG", options0, false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter0.setDescPadding((-1715));
      Options options0 = new Options();
      Options options1 = options0.addOption("arg", " ", true, "usage: ");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("arg", "\n", false, "hWjbcQW>s;#");
      optionGroup0.addOption(option0);
      optionGroup0.toString();
      options1.addOptionGroup(optionGroup0);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((-1), " ", "r]peC>mYk", options1, "arg", true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultDescPad = (-719);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(74, "_aZ&:*Qaf=|A[667W", "_aZ&:*Qaf=|A[667W", (Options) null, "[");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = options0.addOption("arg", " ", true, "usage: ");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("arg", "\n", false, "hWjbcQW>s;#");
      optionGroup0.addOption(option0);
      optionGroup0.toString();
      options1.addOptionGroup(optionGroup0);
      MockFile mockFile0 = new MockFile((File) null, "usage: ");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      Locale locale0 = Locale.ITALY;
      Object[] objectArray0 = new Object[0];
      PrintWriter printWriter0 = mockPrintWriter0.printf(locale0, "", objectArray0);
      helpFormatter1.printUsage(printWriter0, 3920, "<", options0);
      // Undeclared exception!
      helpFormatter1.printHelp(1, "[-arg hWjbcQW>s;#]", " ", options0, "");
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(">", (Options) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = 0;
      Options options0 = null;
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage((PrintWriter) null, 0, "ca|\"LoaVbni]y2[", (Options) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      HelpFormatter helpFormatter2 = new HelpFormatter();
      Options options0 = new Options();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Options options1 = options0.addOption("arg", "", true, "usage: ");
      FileSystemHandling.shouldAllThrowIOExceptions();
      helpFormatter1.printHelp(3094, "9&y/+kqK'", "", options1, "-");
      OptionGroup optionGroup0 = new OptionGroup();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) "\n");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      options0.hasOption("-");
      helpFormatter0.printHelp(printWriter0, 74, "4{bXfL4v/`  CkT", "--", options0, 74, 115, (String) null, true);
      helpFormatter2.getWidth();
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("arg");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, true);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      HelpFormatter helpFormatter2 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = options0.addOption("arg", "", true, "usage: ");
      options1.hasShortOption("-");
      helpFormatter1.printHelp(3094, "9&y/+kqK'", "", options1, "-");
      OptionGroup optionGroup0 = new OptionGroup();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
      mockPrintWriter0.append((CharSequence) "\n");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      options1.getMatchingOptions("]");
      options1.addOption("", "org.apache.commons.cli.Util", false, "   ");
      helpFormatter2.printUsage((PrintWriter) mockPrintWriter1, 32, "usage: ", options1);
      helpFormatter1.printHelp(2538, "-", "_M-", options0, "MbJYr>aYYk/TXE.V6},", false);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "5a@yfZigic8_");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      HelpFormatter helpFormatter2 = new HelpFormatter();
      Options options0 = new Options();
      String string0 = "";
      Options options1 = options0.addOption("arg", "", true, "usage: ");
      options1.hasShortOption("-");
      helpFormatter1.printHelp(3094, "9&y/+kqK'", "", options1, "-");
      OptionGroup optionGroup0 = new OptionGroup();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) "\n");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      options1.getMatchingOptions("]");
      String string1 = "";
      // Undeclared exception!
      helpFormatter0.printUsage(printWriter0, 1, "", options0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = null;
      int int0 = (-2);
      String string0 = "ZHG1TI5xm~v=tW_0Xd$";
      String string1 = " q $BQX]N}maC";
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((String) null, (Options) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockFile mockFile0 = new MockFile("", "){IB=ty'tg");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      Locale locale0 = Locale.KOREAN;
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      options1.hasOption("[");
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter1, 3, "usage: ", "arg", options1, 74, 1, "-", false);
      helpFormatter0.printHelp(74, "--", "--", options1, "usage: ");
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter1, (-965), "[", options0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer("usage: ");
      helpFormatter0.defaultLeftPad = 0;
      stringBuffer0.reverse();
      // Undeclared exception!
      helpFormatter0.renderWrappedText(stringBuffer0, 0, 13, "\n");
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultSyntaxPrefix = "";
      helpFormatter0.getSyntaxPrefix();
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockFile mockFile0 = new MockFile("", "){IB=ty'tg");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      Locale locale0 = Locale.KOREAN;
      Options options0 = new Options();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      Options options1 = new Options();
      helpFormatter1.renderOptions((StringBuffer) null, 74, options1, 1, 1);
      OptionGroup optionGroup0 = new OptionGroup();
      options1.addOptionGroup(optionGroup0);
      int int0 = 26;
      // Undeclared exception!
      try { 
        helpFormatter1.renderWrappedText((StringBuffer) null, 34, 26, "`w`u5Qn9%;Ny6JVM");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockFile mockFile0 = new MockFile("){IB=ty'tg", "l4cR#");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      Locale locale0 = Locale.KOREAN;
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      options0.addOptionGroup(optionGroup0);
      options0.hasOption("arg");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(byteArrayOutputStream0);
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter(filterOutputStream0, false);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter2, 94, " | ", "[", options0, (-2011), 3622, "7x99ot1", false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "\n");
      // Undeclared exception!
      try { 
        helpFormatter0.renderOptions(stringBuffer0, 0, (Options) null, 7, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.setLongOptSeparator((String) null);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(74);
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      // Undeclared exception!
      try { 
        helpFormatter1.renderWrappedText(stringBuffer0, 1, (-1), "uS0R4#;yIO@qy{-");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      StringBuffer stringBuffer1 = stringBuffer0.reverse();
      helpFormatter1.renderWrappedText(stringBuffer1, 74, 1, "-");
      helpFormatter1.getDescPadding();
      // Undeclared exception!
      try { 
        helpFormatter1.findWrapPos((String) null, 1, 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      HelpFormatter helpFormatter2 = new HelpFormatter();
      Options options0 = new Options();
      options0.addOption("arg", " ", true, "usage: ");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      OptionGroup optionGroup0 = new OptionGroup();
      OptionGroup optionGroup1 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup1);
      options0.hasOption((String) null);
      HelpFormatter helpFormatter3 = new HelpFormatter();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, false);
      // Undeclared exception!
      try { 
        helpFormatter2.printHelp((PrintWriter) mockPrintWriter0, (-366), ":W'u UkVd8)8=NouR", "arg", options1, 3172, 74, "", false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      HelpFormatter helpFormatter2 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = options0.addOption("arg", " ", true, "usage: ");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option((String) null, "\n", true, "hWjbcQW>s;#");
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      options1.addOptionGroup(optionGroup1);
      helpFormatter0.printHelp(933, "usage: ", "[", options0, "usage: ");
      OptionGroup optionGroup2 = new OptionGroup();
      helpFormatter1.printHelp(1111, "usage: ", "[", options1, "usage: ", true);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "9TIbcaB3:tZjDV&";
      helpFormatter0.defaultNewLine = "9TIbcaB3:tZjDV&";
      helpFormatter0.getLongOptPrefix();
      PrintWriter printWriter0 = null;
      int int0 = 35;
      Options options0 = new Options();
      options0.getOption("");
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      int int1 = 171;
      int int2 = 1532;
      String string1 = "?8*0ef6d>6[tS[@\\PEc";
      boolean boolean0 = true;
      int int3 = (-3524);
      options1.toString();
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped((PrintWriter) null, (-3524), "9TIbcaB3:tZjDV&");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      Options options0 = new Options();
      options0.addOption((String) null, "--", false, "arg");
      Options options1 = options0.addOption("", true, (String) null);
      helpFormatter1.printHelp(74, "-`0", "", options1, "");
      OptionGroup optionGroup0 = new OptionGroup();
      optionGroup0.setRequired(true);
      helpFormatter1.setArgName("usage: ");
      HelpFormatter helpFormatter2 = new HelpFormatter();
      HelpFormatter helpFormatter3 = new HelpFormatter();
      helpFormatter3.printHelp(49, "\n", "", options1, "ZVrj8e(8");
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getOptPrefix();
      StringBuffer stringBuffer0 = new StringBuffer(1);
      int int0 = (-1);
      helpFormatter0.renderWrappedText(stringBuffer0, (-1), 6, "");
      helpFormatter0.getLongOptSeparator();
      // Undeclared exception!
      try { 
        helpFormatter0.renderWrappedText(stringBuffer0, (-1021), 6, "-");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      HelpFormatter helpFormatter2 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = options0.addOption("", "--", true, "-`0");
      options1.addOption((String) null, "-", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
      helpFormatter2.printHelp(3, "arg", "", options1, "arg");
      OptionGroup optionGroup0 = new OptionGroup();
      optionGroup0.setRequired(true);
      helpFormatter2.printHelp(44, "^7wBgQ{l8(tbn]o\"yw", "", options0, "\n", true);
      helpFormatter2.rtrim("usage: ");
      String string0 = HelpFormatter.DEFAULT_SYNTAX_PREFIX;
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(5);
      MockPrintStream mockPrintStream0 = new MockPrintStream("usage: ");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("-");
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 5, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockFile mockFile0 = new MockFile("", "){IB=ty'tg");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      Locale locale0 = Locale.KOREAN;
      Object object0 = new Object();
      Object object1 = new Object();
      Object[] objectArray0 = new Object[0];
      mockPrintWriter0.format(locale0, "", objectArray0);
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      options1.hasOption("[");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.printHelp((PrintWriter) mockPrintWriter1, 3, "usage: ", "arg", options1, 74, 1, "arg", false);
      // Undeclared exception!
      try { 
        helpFormatter1.printHelp((-433), "", "usage: ", options1, " ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.rtrim("^7wBgQ{l8(tbn]o\"yw");
      String string0 = HelpFormatter.DEFAULT_SYNTAX_PREFIX;
      helpFormatter0.getLongOptSeparator();
      Options options0 = new Options();
      Options options1 = options0.addOption("", true, "^7wBgQ{l8(tbn]o\"yw");
      helpFormatter0.printHelp(7, "[ARG...]", "", options1, "^v'04@0{<q6hwM", false);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = options0.addOption((String) null, "+U>|$w(m](h$l{q'", true, "");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)74;
      byteArray0[1] = (byte)34;
      byteArray0[2] = (byte) (-69);
      byteArray0[3] = (byte)103;
      byteArray0[4] = (byte)24;
      byteArray0[5] = (byte)34;
      byteArray0[6] = (byte) (-46);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      helpFormatter1.printHelp(3, "ZfJp!rLt78h", ":(Qo:_a,I7?/L", options1, "-");
      OptionGroup optionGroup0 = new OptionGroup();
      optionGroup0.setRequired(true);
      helpFormatter1.printHelp(74, "arg", "", options0, "_|;s", true);
      helpFormatter1.rtrim("");
      String string0 = HelpFormatter.DEFAULT_SYNTAX_PREFIX;
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "bOLC6/@r#v:~.";
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("o[;1O7AuZN", "o[;1O7AuZN", (Options) null, "bOLC6/@r#v:~.");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      File file0 = MockFile.createTempFile("org.apache.commons.cli.Util", "-");
      MockPrintStream mockPrintStream0 = new MockPrintStream(file0);
      MockPrintStream mockPrintStream1 = new MockPrintStream(mockPrintStream0);
      Object object0 = new Object();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream1);
      String string0 = null;
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 58, "A CloneNotSupportedException was thrown: ", (String) null, (Options) null, 58, 58, "org.apache.commons.cli.Util", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.rtrim((String) null);
      helpFormatter0.rtrim("--");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " :: ");
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      helpFormatter0.printHelp("OhYagW*C<`!*o", "OhYagW*C<`!*o", options1, "OhYagW*C<`!*o");
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockFile mockFile0 = new MockFile("\n", "-");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      Locale locale0 = Locale.KOREAN;
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) mockPrintWriter1;
      Object object0 = new Object();
      objectArray0[1] = object0;
      objectArray0[2] = (Object) "-";
      objectArray0[3] = (Object) locale0;
      objectArray0[4] = (Object) locale0;
      objectArray0[5] = (Object) mockPrintWriter1;
      Object object1 = new Object();
      objectArray0[6] = object1;
      objectArray0[7] = (Object) locale0;
      mockPrintWriter1.format(locale0, "", objectArray0);
      String string0 = " ]";
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      options0.addOptionGroup(optionGroup0);
      options0.addOptionGroup(optionGroup0);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter1, (-1503), " ]", "", options0, 2303, 1445, "");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      HelpFormatter helpFormatter2 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = options0.addOption("", "--", true, "-`0");
      helpFormatter2.printHelp(3, "arg", "", options1, "arg");
      OptionGroup optionGroup0 = new OptionGroup();
      optionGroup0.setRequired(true);
      helpFormatter2.printHelp(44, "^7wBgQ{l8(tbn]o\"yw", "", options0, "\n", true);
      helpFormatter2.rtrim("usage: ");
      String string0 = HelpFormatter.DEFAULT_SYNTAX_PREFIX;
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockFile mockFile0 = new MockFile("\n", "-");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      Locale locale0 = Locale.KOREAN;
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) mockPrintWriter1;
      Object object0 = new Object();
      objectArray0[1] = object0;
      objectArray0[2] = (Object) "-";
      objectArray0[3] = (Object) locale0;
      objectArray0[4] = (Object) locale0;
      objectArray0[5] = (Object) mockPrintWriter1;
      Object object1 = new Object();
      objectArray0[6] = object1;
      objectArray0[7] = (Object) locale0;
      PrintWriter printWriter0 = mockPrintWriter1.format(locale0, "", objectArray0);
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      helpFormatter0.printHelp(printWriter0, 996, " ]", " ", options1, 996, 45, "", true);
      helpFormatter0.printWrapped(printWriter0, 15, 15, "Bql]|)\"%!");
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = new Options();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Options options2 = options1.addOption("", "arg", false, "");
      helpFormatter0.defaultLongOptPrefix = "=k";
      Options options3 = options2.addOption("E9M2p", false, "=k");
      helpFormatter0.getNewLine();
      helpFormatter0.getSyntaxPrefix();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
      Options options4 = options0.addOption("", "", true, "");
      OptionGroup optionGroup0 = new OptionGroup();
      options4.addOptionGroup(optionGroup0);
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 42, "(\"`i}|/RM<0 xI", "", options4, 42, 42, "usage: ");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((String) null, "", options3, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("v\"o]kV1X9vc", true);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0);
      String string0 = "org.apache.commons.cli.HelpFormatter$1";
      mockPrintWriter0.println("org.apache.commons.cli.HelpFormatter$1");
      // Undeclared exception!
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 1, "org.apache.commons.cli.HelpFormatter$1", "org.apache.commons.cli.HelpFormatter$1", (Options) null, 13, 1, "org.apache.commons.cli.HelpFormatter$1", false);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
      MockPrintStream mockPrintStream0 = new MockPrintStream("-");
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, (-2686), "");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = new Options();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      options1.addOption("", "arg", false, "");
      helpFormatter0.defaultLongOptPrefix = "=k";
      options0.addOption((String) null, "s5.'$xn:;v#803r&R7", true, "");
      helpFormatter0.printHelp(288, "[u*%}gq+ G}IrN$p[", "", options0, (String) null);
      OptionGroup optionGroup0 = new OptionGroup();
      String string0 = "5-7";
      Option option0 = null;
      try {
        option0 = new Option("5-7", false, "Zw&]");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The option '5-7' contains an illegal character : '-'
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLongOptSeparator();
      Options options0 = new Options();
      Option option0 = new Option("n", "arg");
      Options options1 = options0.addOption(option0);
      Options options2 = options1.addOption("arg", "-", true, "usage: ");
      OptionGroup optionGroup0 = new OptionGroup();
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      Options options3 = options2.addOptionGroup(optionGroup1);
      Options options4 = options3.addOption("arg", false, "--");
      helpFormatter0.printHelp(1837, "XzQ", "XzQ", options4, "n");
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      HelpFormatter helpFormatter2 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = options0.addOption("", "--", false, "-`0");
      helpFormatter2.printHelp(3, "arg", "", options1, "arg");
      OptionGroup optionGroup0 = new OptionGroup();
      optionGroup0.setRequired(false);
      helpFormatter2.printHelp(44, "^7wBgQ{l8(tbn]o\"yw", "", options0, "\n", true);
      helpFormatter2.rtrim("usage: ");
      helpFormatter2.printHelp(18, "\n", "FvZb#rI-IIz>x", options1, (String) null, true);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "";
      int int0 = 2757;
      String string1 = "X*\\0($=EL(";
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(2757, "X*\u0000($=EL(", "", (Options) null, "", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(74, "[ Options: [ short ", "", (Options) null, "[ Options: [ short ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = new Options();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Options options2 = options1.addOption("", (String) null, false, "");
      helpFormatter0.setLeftPadding(3036);
      helpFormatter0.defaultLongOptPrefix = "=k";
      Options options3 = options2.addOption("E9M2p", false, "=k");
      helpFormatter0.getNewLine();
      helpFormatter0.getSyntaxPrefix();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
      options3.addOption("", "usage: ", true, "m4QG f!.oZL!D q=");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 42, "", "E9M2p", options1, 42, 62, "CZakS{K-2Z_Rvb/ATY");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.optionComparator = comparator0;
      helpFormatter0.getArgName();
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      // Undeclared exception!
      helpFormatter0.renderWrappedText(stringBuffer0, 0, 0, ":Jx\"lW 3K");
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(74);
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) byteArrayOutputStream0;
      helpFormatter0.defaultLeftPad = 63;
      objectArray0[1] = (Object) "arg";
      Object object0 = new Object();
      objectArray0[2] = object0;
      mockPrintStream0.printf("arg", objectArray0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
      int int0 = 58;
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 58, "0O|>=W=!*Wc:}is,", "]", (Options) null, 41, 41, "0O|>=W=!*Wc:}is,", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) byteArrayOutputStream0;
      objectArray0[2] = (Object) byteArrayOutputStream0;
      objectArray0[3] = (Object) "";
      objectArray0[4] = (Object) "";
      objectArray0[5] = (Object) "";
      objectArray0[6] = (Object) helpFormatter0;
      objectArray0[7] = (Object) mockPrintStream0;
      objectArray0[8] = (Object) byteArrayOutputStream0;
      PrintStream printStream0 = mockPrintStream0.printf("", objectArray0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(printStream0);
      helpFormatter0.getLeftPadding();
      helpFormatter0.rtrim("f9?:|?&6");
      helpFormatter0.getLongOptSeparator();
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, (-3484), 1, "f9?:|?&6");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
      MockPrintStream mockPrintStream0 = new MockPrintStream("-");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0, true);
      String string0 = "Gb@ZVKs";
      int int0 = 32;
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 1990, "Gb@ZVKs", "", (Options) null, 74, 32, "$(jF5P(1Y]\"e[}*lDD", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = new Options();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Options options2 = options1.addOption("", (String) null, false, "");
      helpFormatter0.defaultLongOptPrefix = "=k";
      options2.addOption("E9M2p", false, "=k");
      helpFormatter0.getNewLine();
      helpFormatter0.getSyntaxPrefix();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
      Options options3 = options0.addOption("", "", true, "");
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 42, "(\"`i}|/RM<0 xI", "", options3, 42, 42, "");
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "]2v7CS%erQ D;j2;TW");
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "usage: ");
      Options options0 = new Options();
      Options options1 = options0.addOption("arg", "usage: ", false, "_\"r3R*/9 {%");
      options0.helpOptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      helpFormatter0.renderOptions(stringBuffer0, 44, options1, 74, 97);
      Options options2 = new Options();
      options2.hasOption("--");
      options2.toString();
      options2.hasShortOption("lTO9,@lEn?y`}MF");
      helpFormatter0.printHelp("E$", options2);
      helpFormatter0.getWidth();
      helpFormatter0.printHelp("]2v7CS%erQ D;j2;TW", options0);
      OptionGroup optionGroup0 = new OptionGroup();
      Options options3 = options1.addOptionGroup(optionGroup0);
      helpFormatter0.printHelp(")[q.s=U~C1#ET+ZJ<0[", options3, false);
      optionGroup0.setRequired(false);
      helpFormatter0.printHelp(3, ")[q.s=U~C1#ET+ZJ<0[", "]2v7CS%erQ D;j2;TW", options3, "1@nCUC>I", true);
      helpFormatter0.rtrim("i@)3");
      helpFormatter0.getNewLine();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("-");
      Locale locale0 = Locale.CHINESE;
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) "[ Options: [ short java.util.HashMap@0000000007 ] [ long {} ]";
      objectArray0[1] = (Object) "i@)3";
      objectArray0[2] = (Object) null;
      objectArray0[3] = (Object) "]2v7CS%erQ D;j2;TW";
      Object object0 = new Object();
      objectArray0[4] = object0;
      objectArray0[5] = (Object) "]2v7CS%erQ D;j2;TW";
      PrintWriter printWriter0 = mockPrintWriter0.printf(locale0, "rMUN(\"V", objectArray0);
      helpFormatter0.printUsage(printWriter0, 97, "wdL$Jb*5DId@j*[R6", options0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      HelpFormatter helpFormatter2 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = options0.addOption("", "--", false, "-`0");
      helpFormatter2.printHelp(3, "arg", "", options1, "arg");
      OptionGroup optionGroup0 = new OptionGroup();
      optionGroup0.setRequired(false);
      helpFormatter2.printHelp(44, "^7wBgQ{l8(tbn]o\"yw", "", options0, "\n", true);
      helpFormatter2.rtrim("");
      helpFormatter0.getNewLine();
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "]2v7CS%erQ D;j2;TW");
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "usage: ");
      Options options0 = new Options();
      Options options1 = options0.addOption("arg", "usage: ", false, "_\"r3R*/9 {%");
      options0.helpOptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      helpFormatter0.renderOptions(stringBuffer0, 44, options1, 1523, 97);
      Options options2 = new Options();
      options2.hasOption("--");
      options2.toString();
      options2.hasShortOption("lTO9,@lEn?y`}MF");
      helpFormatter0.printHelp("E$", options2);
      helpFormatter0.getWidth();
      helpFormatter0.printHelp("]2v7CS%erQ D;j2;TW", options0);
      OptionGroup optionGroup0 = new OptionGroup();
      Options options3 = options1.addOptionGroup(optionGroup0);
      helpFormatter0.printHelp(")[q.s=U~C1#ET+ZJ<0[", options3, false);
      optionGroup0.setRequired(false);
      StringBuffer stringBuffer1 = new StringBuffer("NO_ARGS_ALLOWED");
      helpFormatter0.setDescPadding(44);
      // Undeclared exception!
      helpFormatter0.renderWrappedText(stringBuffer0, 0, 74, "BzE9>$*P!R;u7Rj");
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = new Options();
      options1.addOption("", (String) null, false, "q");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.getLongOptPrefix();
      helpFormatter1.createPadding(74);
      helpFormatter1.getDescPadding();
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) byteArrayOutputStream0;
      objectArray0[1] = (Object) "";
      objectArray0[2] = (Object) byteArrayOutputStream0;
      objectArray0[3] = (Object) "";
      objectArray0[4] = (Object) "";
      objectArray0[5] = (Object) "";
      objectArray0[6] = (Object) helpFormatter0;
      objectArray0[7] = (Object) mockPrintStream0;
      objectArray0[8] = (Object) byteArrayOutputStream0;
      PrintStream printStream0 = mockPrintStream0.printf("", objectArray0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(printStream0);
      int int0 = 1645;
      Options options0 = null;
      int int1 = 74;
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 1645, "", "", (Options) null, 74, 1645, "", true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      Options options2 = options1.addOption("", (String) null, false, "");
      Options options3 = options2.addOption("E9M2p", false, "=k");
      helpFormatter0.printHelp("4:168 u#W", "", options3, "", false);
      helpFormatter0.getNewLine();
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockFile mockFile0 = new MockFile("", "");
      MockFile mockFile1 = new MockFile(mockFile0, "usage: ");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile1);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0, false);
      mockFile0.setReadable(true, false);
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 26, (String) null, "", options0, 26, 26, "R", true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      options0.toString();
      options0.hasShortOption("");
      helpFormatter0.printHelp("cmdLineSyntax not provided", options0);
      helpFormatter0.getWidth();
      helpFormatter0.printHelp("lTO9,@lEn?y`}MF", options0);
      OptionGroup optionGroup0 = new OptionGroup();
      OptionGroup optionGroup1 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup1);
      helpFormatter0.printHelp("m:=a~_\u0003v]R7", options0, false);
      optionGroup1.setRequired(false);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)125;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte) (-67);
      byteArray0[3] = (byte)10;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((-600), "[ Options: [ short java.util.HashMap@0000000004 ] [ long {} ]", "lTO9,@lEn?y`}MF", options1, "1@nCUC>I", false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "]2v7CS%erQ D;j2;TW");
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "usage: ");
      Options options0 = new Options();
      Options options1 = options0.addOption("arg", "usage: ", false, "_\"r3R*/9 {%");
      options0.helpOptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      helpFormatter0.renderOptions(stringBuffer0, 44, options1, 1523, 97);
      Options options2 = new Options();
      options2.hasOption("--");
      helpFormatter0.setWidth(1578);
      int int0 = (-59);
      helpFormatter0.renderWrappedText(stringBuffer0, 97, (-59), "p'[69B");
      String string0 = null;
      String string1 = "[ Options: [ short ";
      MockFile mockFile0 = new MockFile("--", "[ Options: [ short ");
      // Undeclared exception!
      try { 
        MockFile.createTempFile((String) null, "arg", (File) mockFile0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = new Options();
      String string0 = "";
      Options options2 = options1.addOption("", (String) null, false, "");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((String) null, "", options2, "3Jqf]Z:#q", false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "4:168 u#W";
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = new Options();
      Options options2 = new Options();
      options2.addOption("", ">.wV+^8Yy7", true, "4:168 u#W");
      options0.addOption("", true, "~:{}){<HLPYy-)");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("", "", options2, "", true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "]2v7CS%erQ D;j2;TW");
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "usage: ");
      helpFormatter0.setLongOptPrefix("<i>qt4/nrI&zIl9nxtC");
      helpFormatter0.createPadding(13);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.getLeftPadding();
      helpFormatter0.getLongOptSeparator();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
      ByteArrayOutputStream byteArrayOutputStream1 = new ByteArrayOutputStream(307);
      byteArrayOutputStream1.write(6);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream1, false);
      mockPrintWriter0.print(211.8916F);
      mockPrintWriter0.append('w');
      // Undeclared exception!
      try { 
        helpFormatter1.printWrapped((PrintWriter) mockPrintWriter0, 1, (-2), "]2v7CS%erQ D;j2;TW");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLongOptSeparator("");
      helpFormatter0.setLongOptSeparator("");
      StringBuffer stringBuffer0 = new StringBuffer();
      Options options0 = new Options();
      helpFormatter0.renderOptions(stringBuffer0, 807, options0, 255, 807);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      HelpFormatter helpFormatter2 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = options0.addOption("", "--", false, "-`0");
      helpFormatter2.printHelp(3, "arg", "", options1, "arg");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("kn+P&Y", "", (Options) null, "usage: ", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.findWrapPos("org.apache.commons.cli.OptionGroup", 3, 3);
      helpFormatter0.setNewLine("org.apache.commons.cli.OptionGroup");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)18;
      byteArray0[1] = (byte) (-57);
      byteArray0[2] = (byte) (-2);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((-113), "org.apache.commons.cli.OptionGroup", "", options0, "4` Ok*$");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "]2v7CS%erQ D;j2;TW");
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "usage: ");
      Options options0 = new Options();
      Options options1 = options0.addOption("arg", "usage: ", false, "_\"r3R*/9 {%");
      options0.helpOptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      helpFormatter0.renderOptions(stringBuffer0, 44, options1, 1523, 97);
      Options options2 = new Options();
      options2.hasOption("--");
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(44);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, false);
      helpFormatter0.printOptions(mockPrintWriter0, 1280, options2, 44, 2190);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "";
      helpFormatter0.setLongOptSeparator("");
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1161);
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(byteArrayOutputStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(filterOutputStream0);
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 1161, "y3^SV");
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.getLongOptSeparator();
      String string1 = "9R8;m_~qkrU`qu[";
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("arg", "--", false, "'J.E>w~)y32P(,");
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      Options options1 = options0.addOptionGroup(optionGroup1);
      // Undeclared exception!
      try { 
        options1.addOption("usage: ", "M^^#8<uL3>K-Sa", true, "xkp%\"&b'42g8");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The option 'usage: ' contains an illegal character : ':'
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setNewLine("(ohC)+6*$5IgB");
      helpFormatter0.setLongOptPrefix("");
      helpFormatter0.createPadding(13);
      helpFormatter0.defaultOptPrefix = "FM";
      helpFormatter0.getLeftPadding();
      helpFormatter0.getLongOptSeparator();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
      byteArrayOutputStream0.write(1);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, false);
      mockPrintWriter0.print(0.0F);
      PrintWriter printWriter0 = mockPrintWriter0.append('w');
      helpFormatter0.printWrapped(printWriter0, 13, 1, "_<}Tp$5y>XL[");
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.createPadding(1);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "]2v7CS%erQ D;j2;TW");
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "usage: ");
      Options options0 = new Options();
      Options options1 = options0.addOption("arg", "usage: ", false, "_\"r3R*/9 {%");
      options0.helpOptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      helpFormatter0.renderOptions(stringBuffer0, 44, options1, 1523, 97);
      Options options2 = new Options();
      options2.hasOption("--");
      options2.toString();
      options2.hasShortOption("lTO9,@lEn?y`}MF");
      helpFormatter0.printHelp("E$", options2);
      helpFormatter0.getWidth();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
      byteArrayOutputStream0.close();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, true);
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 97, "WDgiP2");
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLongOptSeparator("");
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1161);
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(byteArrayOutputStream0);
      helpFormatter0.findWrapPos("O1YP,j=ee2uyM(\"}", 2, 39);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Q(64'K%");
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "usage: ");
      Options options0 = new Options();
      options0.addOption("arg", "usage: ", false, "_\"r3R*/9 {%");
      options0.helpOptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(88);
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(byteArrayOutputStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(filterOutputStream0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(byteArrayOutputStream0);
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter1, 4626, "E$");
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "]2v7CS%erQ D;j2;TW");
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "usage: ");
      Options options0 = new Options();
      Options options1 = options0.addOption("arg", "usage: ", false, "_\"r3R*/9 {%");
      options0.helpOptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      helpFormatter0.renderOptions(stringBuffer0, 44, options1, 1523, 97);
      Options options2 = new Options();
      options2.hasOption("--");
      options2.toString();
      options2.hasShortOption("lTO9,@lEn?y`}MF");
      helpFormatter0.printHelp("E$", options2);
      helpFormatter0.getWidth();
      helpFormatter0.printHelp("]2v7CS%erQ D;j2;TW", options0);
      OptionGroup optionGroup0 = new OptionGroup();
      Options options3 = options1.addOptionGroup(optionGroup0);
      helpFormatter0.printHelp(")[q.s=U~C1#ET+ZJ<0[", options3, false);
      optionGroup0.setRequired(false);
      // Undeclared exception!
      helpFormatter0.printHelp(0, ")[q.s=U~C1#ET+ZJ<0[", "]2v7CS%erQ D;j2;TW", options3, "1@nCUC>I", true);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setNewLine("(ohC)+6*$5IgB");
      helpFormatter0.setLongOptPrefix("");
      helpFormatter0.createPadding(13);
      helpFormatter0.defaultOptPrefix = "FM";
      helpFormatter0.getLeftPadding();
      helpFormatter0.getLongOptSeparator();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
      byteArrayOutputStream0.write(1);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, false);
      mockPrintWriter0.print(0.0F);
      PrintWriter printWriter0 = mockPrintWriter0.append('w');
      helpFormatter0.printWrapped(printWriter0, 63, "             ");
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = 1880;
      String string0 = "";
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(1880, "", "", (Options) null, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      Options options2 = options1.addOption("", (String) null, false, "");
      Options options3 = options2.addOption("E9M2p", false, "=k");
      helpFormatter0.printHelp("4:168 u#W", "", options3, "", false);
      Option option0 = new Option("arg", false, "D'h>,~|P<~K7V4");
      Options options4 = options3.addOption(option0);
      Options options5 = options4.addOption("", "=k", false, "Mtj");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(0, "", "[", options5, "=k", false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLongOptSeparator("");
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1161);
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(byteArrayOutputStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(filterOutputStream0);
      // Undeclared exception!
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 1, "\n");
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.findWrapPos("org.apache.commons.cli.OptionGroup", 3, 3);
      helpFormatter0.setNewLine("org.apache.commons.cli.OptionGroup");
      helpFormatter0.setWidth(3281);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1865);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, true);
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped((PrintWriter) null, 44, ")c]@)%UTio1+5fFSe");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLeftPadding();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("+uR47f1UB", "[ Options: [ short ", (Options) null, "NO_ARGS_ALLOWED", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = 1968;
      helpFormatter0.defaultLeftPad = 1968;
      String string0 = "";
      helpFormatter0.setNewLine("");
      StringBuffer stringBuffer0 = new StringBuffer("");
      helpFormatter0.renderWrappedText(stringBuffer0, 967, (-1803), "");
      helpFormatter0.setDescPadding((-1127));
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter((Writer) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Writer", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.createPadding(0);
      helpFormatter0.getLongOptPrefix();
      String string0 = "vF;0q=V+";
      String string1 = "$p'ylg\"Gov7]j";
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        options0.addOption((Option) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.Options", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "AN";
      helpFormatter0.setNewLine("AN");
      String string1 = "I\\06Am2uQ";
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("I\u0006Am2uQ");
      Object object0 = new Object();
      char[] charArray0 = new char[3];
      mockPrintWriter0.println();
      charArray0[0] = '{';
      charArray0[1] = 'K';
      charArray0[2] = 'V';
      mockPrintWriter0.write(charArray0);
      mockPrintWriter0.print(object0);
      mockPrintWriter0.println((float) 74);
      int int0 = 0;
      Options options0 = null;
      int int1 = 31;
      // Undeclared exception!
      try { 
        helpFormatter0.printOptions(mockPrintWriter0, 0, (Options) null, 31, 31);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setNewLine("(ohC)+6*$5IgB");
      helpFormatter0.setLongOptPrefix("");
      helpFormatter0.createPadding(13);
      helpFormatter0.defaultOptPrefix = "FM";
      helpFormatter0.getLeftPadding();
      helpFormatter0.getLongOptSeparator();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
      byteArrayOutputStream0.write(1);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, false);
      mockPrintWriter0.print(0.0F);
      PrintWriter printWriter0 = mockPrintWriter0.append('w');
      // Undeclared exception!
      helpFormatter0.printWrapped(printWriter0, 0, 1, " ]");
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "63@@]BuLmgL34p";
      helpFormatter0.setLongOptPrefix("63@@]BuLmgL34p");
      helpFormatter0.setWidth(3168);
      helpFormatter0.getLongOptPrefix();
      String string1 = "";
      helpFormatter0.setArgName("");
      helpFormatter0.setLongOptSeparator("*,L%:Z?b");
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream("", "--");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.optionComparator = comparator0;
      helpFormatter0.setWidth(3808);
      helpFormatter0.defaultSyntaxPrefix = "bjo\u0005pd>Q{W%CRL-Nt";
      helpFormatter0.getSyntaxPrefix();
      MockFile mockFile0 = new MockFile("xoE4;U~$OJIoX34}", "wNl,/gI~x");
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter(mockFile0, "\n");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer("");
      Options options0 = new Options();
      String string0 = "HH^2lPn^8FDh,";
      stringBuffer0.chars();
      Option option0 = new Option("", false, "HH^2lPn^8FDh,");
      Options options1 = options0.addOption(option0);
      Options options2 = options1.addOption("arg", false, "-");
      // Undeclared exception!
      try { 
        helpFormatter0.renderOptions(stringBuffer0, (-1132), options2, (-1132), 576);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      // Undeclared exception!
      helpFormatter0.printHelp(0, "$@W29Gzi'\"e`Xs", "o[;1O7AuZN", (Options) null, "$@W29Gzi'\"e`Xs");
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = 3;
      helpFormatter0.findWrapPos("org.apache.commons.cli.OptionGroup", 3, 3);
      helpFormatter0.setNewLine("org.apache.commons.cli.OptionGroup");
      PrintWriter printWriter0 = null;
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped((PrintWriter) null, 3, 6, "[");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = 0;
      int int1 = 3281;
      // Undeclared exception!
      try { 
        helpFormatter0.renderWrappedText((StringBuffer) null, 3281, 0, "\"83-E-S/,O2~9SH1Qi");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getOptPrefix();
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = 1880;
      helpFormatter0.setOptPrefix("");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(1880, "", "", (Options) null, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLongOptSeparator("");
      // Undeclared exception!
      try { 
        helpFormatter0.findWrapPos("", 0, (-128));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = null;
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.setOptionComparator(comparator0);
      helpFormatter0.setOptPrefix((String) null);
      String string1 = "-";
      helpFormatter0.setLongOptSeparator("-");
      helpFormatter0.defaultWidth = 0;
      helpFormatter0.defaultSyntaxPrefix = "has already been selected: '";
      int int0 = 1;
      helpFormatter0.defaultDescPad = 1;
      helpFormatter0.defaultSyntaxPrefix = "-";
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter((String) null, "");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // 
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultSyntaxPrefix = "-";
      helpFormatter0.defaultWidth = 31;
      helpFormatter0.setNewLine("-");
      helpFormatter0.setSyntaxPrefix("-");
      helpFormatter0.setLongOptPrefix("_ :Abp");
      assertEquals("_ :Abp", helpFormatter0.getLongOptPrefix());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName("NWU@r\"Jyp~R]U$I");
      helpFormatter0.getOptionComparator();
      Options options0 = new Options();
      helpFormatter0.printHelp("NWU@r\"Jyp~R]U$I", "[ Options: [ short ", options0, "NWU@r\"Jyp~R]U$I", true);
      helpFormatter0.findWrapPos("NWU@r\"Jyp~R]U$I", 1, 1);
      boolean boolean0 = false;
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream((OutputStream) null, false, "-");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null output stream
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getSyntaxPrefix();
      helpFormatter0.setOptionComparator((Comparator) null);
      helpFormatter0.setLeftPadding((-3822));
      // Undeclared exception!
      try { 
        helpFormatter0.createPadding((-2));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLongOptPrefix();
      Options options0 = new Options();
      String string0 = "{VfoCvHA(`{k";
      boolean boolean0 = false;
      Option option0 = null;
      try {
        option0 = new Option("{VfoCvHA(`{k", false, "BW");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The option '{VfoCvHA(`{k' contains an illegal character : '{'
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = 0;
      helpFormatter0.defaultWidth = 0;
      String string0 = "The option '";
      helpFormatter0.setArgName("The option '");
      StringBuffer stringBuffer0 = null;
      int int1 = (-3614);
      int int2 = 0;
      String string1 = " +7o59t*S UY{)`";
      Options options0 = new Options();
      OptionGroup optionGroup0 = null;
      // Undeclared exception!
      try { 
        options0.addOptionGroup((OptionGroup) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.Options", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getArgName();
      Options options0 = new Options();
      Options options1 = options0.addOption("arg", true, "arg");
      boolean boolean0 = false;
      String string0 = "b_";
      Option option0 = new Option("arg", false, "b_");
      Options options2 = options1.addOption(option0);
      // Undeclared exception!
      try { 
        options2.addOption("]", true, "$3FR~0DZ87");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal option name ']'
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Comparator<String> comparator0 = null;
      helpFormatter0.setOptionComparator((Comparator) null);
      File file0 = null;
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter((File) null, "");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // 
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getSyntaxPrefix();
      helpFormatter0.rtrim("usage: ");
      helpFormatter0.getLeftPadding();
      String string0 = "]";
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter("usage: ", "]");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // ]
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
      int int0 = 1;
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        options0.addOption("-", false, "--");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal option name '-'
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }
}
