/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 21 04:25:42 GMT 2021
 */

package org.apache.commons.cli;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.DataOutputStream;
import java.io.PrintStream;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.io.UnsupportedEncodingException;
import java.util.Comparator;
import java.util.Locale;
import org.apache.commons.cli.HelpFormatter;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.OptionGroup;
import org.apache.commons.cli.Options;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class HelpFormatter_ESTest extends HelpFormatter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultArgName = "";
      helpFormatter0.getArgName();
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      String string0 = null;
      helpFormatter0.setSyntaxPrefix((String) null);
      StringBuffer stringBuffer0 = new StringBuffer(74);
      Options options1 = options0.addOption((String) null, true, "-");
      // Undeclared exception!
      helpFormatter0.renderOptions(stringBuffer0, 0, options1, 0, 0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultWidth = 0;
      StringBuffer stringBuffer0 = new StringBuffer();
      helpFormatter0.renderWrappedText(stringBuffer0, 1, 1, "\n");
      helpFormatter0.getWidth();
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("NO_ARGS_ALLOWED", "", (Options) null, "9(nMRWd8lo4w", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      options0.addOption("arg", true, " ");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("-");
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 74, "usage: ", options0);
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        helpFormatter0.renderOptions(stringBuffer0, (-3746), options0, 2641, 9);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Option option0 = new Option("", "Tna}I*KKK", true, "-");
      Options options0 = new Options();
      Options options1 = options0.addOption(option0);
      OptionGroup optionGroup0 = new OptionGroup();
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      optionGroup1.setRequired(true);
      options1.addOptionGroup(optionGroup1);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ");
      Locale locale0 = Locale.forLanguageTag("org.apache.commons.cli.OptionGroup");
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) options1;
      objectArray0[1] = (Object) "org.apache.commons.cli.OptionGroup";
      objectArray0[2] = (Object) "org.apache.commons.cli.Option";
      objectArray0[3] = (Object) null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "]");
      objectArray0[4] = (Object) "Tna}I*KKK";
      objectArray0[5] = (Object) "Tna}I*KKK";
      PrintWriter printWriter0 = mockPrintWriter0.format(locale0, "org.apache.commons.cli.Option", objectArray0);
      // Undeclared exception!
      helpFormatter0.printUsage(printWriter0, 1, "org.apache.commons.cli.Option", options1);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultLeftPad = (-106);
      String string0 = "M^0@C7Fi<yJ&5=ym";
      Options options0 = new Options();
      boolean boolean0 = false;
      options0.hasOption("/Vkyx,:]lo?tUi!rsyQ");
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.optionComparator = comparator0;
      Options options1 = options0.addOption("arg", false, "usage: ");
      options1.toString();
      helpFormatter0.getNewLine();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("/Vkyx,:]lo?tUi!rsyQ", "M^0@C7Fi<yJ&5=ym", options1, "-", false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("\n");
      Options options0 = new Options();
      Option option0 = new Option((String) null, "\n", false, (String) null);
      options0.addOption(option0);
      OptionGroup optionGroup0 = new OptionGroup();
      optionGroup0.addOption(option0);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.setOptPrefix("tL0mJVe");
      helpFormatter1.printHelp(102, "\n", "--", options0, "", true);
      helpFormatter1.printHelp("-", options0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setWidth((-295));
      helpFormatter0.getArgName();
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("arg", options0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("\n");
      Options options0 = new Options();
      Option option0 = new Option((String) null, "\n", false, (String) null);
      options0.addOption(option0);
      OptionGroup optionGroup0 = new OptionGroup();
      optionGroup0.addOption(option0);
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 6, (String) null, options0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(13, "org.apache.commons.cli.Util", "org.apache.commons.cli.Util", (Options) null, "org.apache.commons.cli.HelpFormatter$1");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer(1);
      StringBuffer stringBuffer1 = helpFormatter1.renderWrappedText(stringBuffer0, 2349, 1, "-");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      helpFormatter1.renderWrappedText(stringBuffer1, 1702, 1814, "-");
      // Undeclared exception!
      try { 
        helpFormatter1.findWrapPos("F2", 11, (-1814));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("\n");
      Options options0 = new Options();
      Option option0 = new Option((String) null, "\n", false, (String) null);
      Options options1 = options0.addOption(option0);
      OptionGroup optionGroup0 = new OptionGroup();
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      options1.addOptionGroup(optionGroup1);
      Options options2 = options0.addOption(option0);
      helpFormatter0.printHelp("8ebNz", (String) null, options2, (String) null);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("\n");
      Options options0 = new Options();
      Option option0 = new Option((String) null, "\n", false, (String) null);
      Options options1 = options0.addOption(option0);
      OptionGroup optionGroup0 = new OptionGroup();
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      Options options2 = options1.addOptionGroup(optionGroup1);
      String string0 = "VFJ:Z4:'Y-[Ejz";
      Options options3 = options2.addOption("", "VFJ:Z4:'Y-[Ejz", false, "-");
      // Undeclared exception!
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 0, " ] [ long ", options3);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("A}Pvv6M#");
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 21, "' was specified but an option from this group ", options0);
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 73, "A}Pvv6M#", "[>}Gbo4q~ND?BX", options0, 74, 1193, (String) null, false);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("-");
      String string0 = "--";
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 1818, "--", options0);
      // Undeclared exception!
      try { 
        helpFormatter0.printOptions(mockPrintWriter0, (-1936), options0, 1818, (-1936));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("-");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      MockPrintStream mockPrintStream0 = new MockPrintStream("\n");
      PrintStream printStream0 = mockPrintStream0.append('3');
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(printStream0);
      Option option0 = new Option((String) null, true, "org.apache.commons.cli.OptionValidator");
      Options options1 = options0.addOption(option0);
      // Undeclared exception!
      helpFormatter1.printUsage((PrintWriter) mockPrintWriter1, 1, "--", options1);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer(1);
      Options options0 = new Options();
      Options options1 = options0.addOption("arg", "c1h/N$RNR\"^3WTWk", true, "usage: ");
      helpFormatter0.printHelp("-A<Y7dy/;/s]", (String) null, options1, "s24y;s{|FK=`/>-y-h");
      helpFormatter0.getArgName();
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLeftPadding();
      Options options0 = new Options();
      helpFormatter0.printHelp("--", options0, true);
      int int0 = 2993;
      helpFormatter0.defaultWidth = 2993;
      helpFormatter0.setNewLine("org.apache.commons.cli.HelpFormatter");
      Options options1 = null;
      String string0 = "_;af?@";
      // Undeclared exception!
      helpFormatter0.printHelp(1, "org.apache.commons.cli.HelpFormatter", "has already been selected: '", (Options) null, "_;af?@");
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      FileSystemHandling.shouldAllThrowIOExceptions();
      helpFormatter0.defaultArgName = "=I @>?Cw/>7Tk123";
      helpFormatter0.setLeftPadding((-2627));
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.getLeftPadding();
      MockPrintStream mockPrintStream0 = new MockPrintStream("\n");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(dataOutputStream0);
      Options options0 = new Options();
      Option option0 = new Option("", "q(}#G031b7}3\"", true, (String) null);
      Options options1 = options0.addOption(option0);
      Options options2 = options1.addOption((String) null, true, "8&zk{h|D2^C6");
      Options options3 = options2.addOption("", "--", true, " ");
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 3280, (String) null, options3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter$OptionComparator", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((-180), "org.apache.commons.cli.HelpFormatter$1", "org.apache.commons.cli.HelpFormatter$1", options1, "' was specified but an option from this group ", false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      int int0 = (-1840);
      helpFormatter0.setWidth((-1840));
      helpFormatter0.getWidth();
      String string0 = "The option '";
      helpFormatter0.defaultNewLine = "The option '";
      helpFormatter0.getLeftPadding();
      String string1 = "";
      Options options0 = new Options();
      String string2 = "7E]<MZW}fXu#^2Mq";
      Option option0 = null;
      try {
        option0 = new Option("usage: ", "7E]<MZW}fXu#^2Mq");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The option 'usage: ' contains an illegal character : ':'
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setSyntaxPrefix("\n");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("b3KX9J0)jt");
      PrintWriter printWriter0 = mockPrintWriter0.append(' ');
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(printWriter0, 12, "b3KX9J0)jt", "b3KX9J0)jt", options1, (-1581), (-7241), "");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.setSyntaxPrefix("usage: ");
      Options options0 = new Options();
      options0.addOption("arg", true, "7t&u");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Options options1 = new Options();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("-", true);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0);
      Options options2 = options0.addOption("", false, "0*[gS/h1w+");
      // Undeclared exception!
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 1, " ", options2);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ", ");
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getNewLine();
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        helpFormatter0.renderOptions(stringBuffer0, 2415, (Options) null, 2415, 2415);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.rtrim((String) null);
      MockFile mockFile0 = new MockFile("usage: ");
      MockFile mockFile1 = new MockFile(mockFile0, "-");
      String string0 = "%:''`1;P3";
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter(mockFile1, "%:''`1;P3");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // %:''`1;P3
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter0.setSyntaxPrefix((String) null);
      Options options0 = new Options();
      String string0 = " #sTC`IPP?b2~k$n";
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(" #sTC`IPP?b2~k$n", "", options0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.setSyntaxPrefix("usage: ");
      Options options0 = new Options();
      Options options1 = options0.addOption("arg", true, "7t&u");
      helpFormatter0.setOptPrefix("]");
      Option option0 = new Option("", true, " ");
      options1.addOption(option0);
      OptionGroup optionGroup0 = new OptionGroup();
      helpFormatter0.printHelp("--", "arg", options0, "");
      helpFormatter1.getDescPadding();
      // Undeclared exception!
      helpFormatter1.printHelp(1, ":Ryq_sX{[ci%J~YVM", "--", options1, "", false);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultWidth = 6050;
      helpFormatter0.defaultLongOptPrefix = "rtw}A<BS|}:xU@rk[";
      helpFormatter0.getLeftPadding();
      Options options0 = new Options();
      Option option0 = new Option("", "");
      Options options1 = options0.addOption(option0);
      Options options2 = new Options();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("NO_ARGS_ALLOWED");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      option0.setRequired(true);
      // Undeclared exception!
      try { 
        helpFormatter1.printUsage((PrintWriter) mockPrintWriter0, (-2433), "8vMrgKe)3o", options1);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultWidth = 6050;
      helpFormatter0.defaultLongOptPrefix = "rtw}A<BS|}:xU@rk[";
      helpFormatter0.getLeftPadding();
      Options options0 = new Options();
      Option option0 = new Option((String) null, (String) null);
      Options options1 = options0.addOption(option0);
      Options options2 = new Options();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("E,u[ri:^^,(Ew[");
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 6050, "NO_ARGS_ALLOWED", options1);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultDescPad = 0;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("tB]?R_!94B");
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 0, 0, "");
      helpFormatter0.defaultNewLine = "tB]?R_!94B";
      helpFormatter0.setNewLine("--");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("--");
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter(mockPrintWriter1, false);
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter2, 2, "tB]?R_!94B");
      helpFormatter0.getDescPadding();
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLeftPadding();
      Options options0 = new Options();
      String string0 = "=oQV}1<$Q";
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, 1, options0, 1, 1);
      String string1 = "86'Zg.h)cfAJJTd.";
      // Undeclared exception!
      try { 
        helpFormatter0.renderWrappedText(stringBuffer1, 1, (-1201), "86'Zg.h)cfAJJTd.");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "tB]?R_!94B";
      helpFormatter0.defaultDescPad = 0;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("tB]?R_!94B");
      // Undeclared exception!
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 0, 0, " ");
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.setSyntaxPrefix("usage: ");
      Options options0 = new Options();
      byte[] byteArray0 = new byte[4];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)124;
      byteArray0[2] = (byte)113;
      byteArray0[3] = (byte)13;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Options options1 = options0.addOption("", true, "--");
      options0.getOption("");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("~.f4JA*TAtAIGBxz");
      // Undeclared exception!
      helpFormatter1.printUsage((PrintWriter) mockPrintWriter0, 1, "E|XzelV(zr~x[Xg0*P", options1);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultDescPad = 0;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("tB]?R_!94B");
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 0, 0, "");
      helpFormatter0.defaultSyntaxPrefix = "tB]?R_!94B";
      Options options0 = new Options();
      Option option0 = new Option((String) null, true, "J>dL^");
      Options options1 = options0.addOption(option0);
      helpFormatter0.printHelp("-", options1);
      helpFormatter0.createPadding(3267);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = options0.addOption("arg", true, "usage: ");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "-");
      helpFormatter0.renderWrappedText(stringBuffer0, 18, 18, "");
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, (-3311), "", "", options1, 9, 13, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultWidth = 1;
      helpFormatter0.defaultLongOptPrefix = "rtw}A<BS|}:xU@rk[";
      HelpFormatter helpFormatter1 = new HelpFormatter();
      MockPrintStream mockPrintStream0 = new MockPrintStream("usage: ");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 3, (-1249), "~pw0]n}tGa?");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultWidth = 3;
      helpFormatter0.defaultLongOptPrefix = "rtw}A<BS|}:xU@rk[";
      Options options0 = new Options();
      Option option0 = new Option("", "");
      helpFormatter0.setSyntaxPrefix("J");
      helpFormatter0.setDescPadding((-2));
      Options options1 = new Options();
      options1.addOption("", true, "\n");
      options1.addOption("", (String) null, true, "rtw}A<BS|}:xU@rk[");
      Option option1 = new Option((String) null, " ", true, "usage: ");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.printHelp("rtw}A<BS|}:xU@rk[", "k[", options1, "[ option: ");
      helpFormatter0.getDescPadding();
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLeftPadding();
      Options options0 = new Options();
      options0.helpOptions();
      Option option0 = new Option("", "E{VoaVkmY");
      Options options1 = options0.addOption(option0);
      OptionGroup optionGroup0 = new OptionGroup();
      options1.addOptionGroup(optionGroup0);
      helpFormatter0.createPadding(1358);
      StringBuffer stringBuffer0 = new StringBuffer(1);
      helpFormatter0.renderWrappedText(stringBuffer0, 1358, (-2), "");
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "--");
      helpFormatter1.renderWrappedText(stringBuffer0, 1, 3, "");
      // Undeclared exception!
      try { 
        helpFormatter1.printHelp("TBzRn~m5hLsE7n'a", (Options) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setWidth((-427));
      helpFormatter0.setArgName(" ]");
      helpFormatter0.setLongOptSeparator("k!{=k0'R");
      MockFile mockFile0 = new MockFile("usage: ");
      MockFile mockFile1 = new MockFile("");
      mockFile1.getAbsolutePath();
      StringBuffer stringBuffer0 = new StringBuffer(63);
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("3scu", "", options0, (String) null);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultWidth = 6050;
      helpFormatter0.defaultLongOptPrefix = "rtw}A<BS|}:xU@rk[";
      helpFormatter0.getLeftPadding();
      Options options0 = new Options();
      Option option0 = new Option("", "");
      Options options1 = options0.addOption(option0);
      Options options2 = new Options();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("NO_ARGS_ALLOWED");
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, (-2), "NO_ARGS_ALLOWED", options1);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "rtw}A<BS|}:xU@rk[";
      helpFormatter0.getLeftPadding();
      Options options0 = new Options();
      String string1 = "E{VoaVkmY";
      HelpFormatter helpFormatter1 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer(637);
      helpFormatter1.renderWrappedText(stringBuffer0, 11, 47, "-");
      helpFormatter1.setLeftPadding(74);
      Options options1 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter1.printOptions((PrintWriter) null, 47, options0, 0, 637);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultOptPrefix = "";
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ");
      mockPrintWriter0.append((CharSequence) "--");
      Options options0 = new Options();
      options0.helpOptions();
      int int0 = (-3862);
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, (-1), "line.separator", "i7Z{Sd", options0, 0, 1487, "", true);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("", options0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultDescPad = 0;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("tB]?R_!94B");
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 0, 0, "");
      helpFormatter0.defaultSyntaxPrefix = "tB]?R_!94B";
      int int0 = 2;
      Options options0 = new Options();
      options0.helpOptions();
      String string0 = null;
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 64, "", "tB]?R_!94B", options0, 0, 0, (String) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultDescPad = 0;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("tB]?R_!94B");
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 0, 0, "");
      helpFormatter0.defaultSyntaxPrefix = "tB]?R_!94B";
      Options options0 = new Options();
      Options options1 = options0.addOption("arg", true, "12+-;C>&mu7e/X_g)[5");
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 66, "tB]?R_!94B", (String) null, options1, 0, 25, "12+-;C>&mu7e/X_g)[5", false);
      Options options2 = new Options();
      helpFormatter0.printHelp("i7Z{Sd", options2, true);
      helpFormatter0.getWidth();
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuffer stringBuffer1 = new StringBuffer();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter0.createPadding(1);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultOptPrefix = "";
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ");
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) "--");
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(119);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(byteArrayOutputStream0);
      Options options0 = new Options();
      Options options1 = new Options();
      helpFormatter0.printUsage(printWriter0, 1805, (String) null, options1);
      helpFormatter0.getOptPrefix();
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("-");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)84;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)36;
      byteArray0[3] = (byte)21;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)99;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) helpFormatter0;
      mockPrintWriter0.flush();
      PrintWriter printWriter0 = mockPrintWriter0.printf("-", objectArray0);
      // Undeclared exception!
      helpFormatter0.printWrapped(printWriter0, 0, "p%w]<f'_w3<l");
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "--";
      MockPrintStream mockPrintStream0 = new MockPrintStream("--");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0, false);
      Object[] objectArray0 = new Object[1];
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte) (-111);
      byteArray0[3] = (byte) (-82);
      byteArray0[4] = (byte)64;
      byteArray0[5] = (byte)1;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byte[] byteArray1 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      objectArray0[0] = (Object) "--";
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      PrintWriter printWriter0 = mockPrintWriter0.printf("-", objectArray0);
      boolean boolean0 = true;
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(printWriter0, true);
      Locale locale0 = Locale.UK;
      PrintWriter printWriter1 = mockPrintWriter1.format(locale0, "-", objectArray0);
      int int0 = 4019;
      String string1 = "";
      mockPrintStream0.printf("0U#<piD[m3Q5I", objectArray0);
      Options options0 = null;
      String string2 = "p";
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(printWriter1, 4019, "--", "", (Options) null, 3511, 3511, "p");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = 0;
      helpFormatter0.defaultDescPad = 0;
      helpFormatter0.defaultOptPrefix = "tB]?R_!94B";
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped((PrintWriter) null, 0, 0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultOptPrefix = "";
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ");
      mockPrintWriter0.append((CharSequence) "--");
      Options options0 = new Options();
      options0.helpOptions();
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 1966, "line.separator", "", options0, (-3862), 13, "i7Z{Sd", true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      helpFormatter0.setSyntaxPrefix("");
      helpFormatter0.setDescPadding(2);
      Options options0 = new Options();
      options0.getOption("-");
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(74);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, false);
      byteArrayOutputStream0.write(74);
      PrintWriter printWriter0 = mockPrintWriter0.append('B');
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(printWriter0, false);
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage(printWriter0, (-189), (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultOptPrefix = "#";
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ");
      mockPrintWriter0.append((CharSequence) "--");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "usage: ");
      String string0 = "";
      StringBuffer stringBuffer1 = new StringBuffer((CharSequence) "--");
      // Undeclared exception!
      helpFormatter0.renderWrappedText(stringBuffer1, 0, 0, "#");
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.printHelp("arg", options0, true);
      helpFormatter0.getWidth();
      helpFormatter0.setLeftPadding(74);
      helpFormatter0.getArgName();
      helpFormatter0.defaultLeftPad = (-109);
      String string0 = "q";
      helpFormatter0.getLongOptSeparator();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(74, "has already been selected: '", "q", options0, "arg");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = 23;
      helpFormatter0.setWidth(23);
      helpFormatter0.setArgName("\n");
      helpFormatter0.setLongOptSeparator("KznK%CBOM]Mll{[fY");
      boolean boolean0 = true;
      String string0 = "^Oip";
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) null, 23, "^Oip", "KznK%CBOM]Mll{[fY", options0, 23, 23, (String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultOptPrefix = "#";
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ");
      mockPrintWriter0.append((CharSequence) "--");
      int int0 = 0;
      Options options0 = new Options();
      options0.helpOptions();
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 1966, "line.separator", "#", options0, (-3862), 13, "i7Z{Sd", true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultDescPad = 0;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("tB]?R_!94B");
      helpFormatter0.setLongOptPrefix("-");
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 0, 0, "");
      helpFormatter0.defaultOptPrefix = "tB]?R_!94B";
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.getArgName();
      StringBuffer stringBuffer0 = new StringBuffer("--");
      StringBuffer stringBuffer1 = stringBuffer0.insert(0, true);
      helpFormatter0.renderWrappedText(stringBuffer1, 2, 0, "");
      helpFormatter0.setLeftPadding(64);
      helpFormatter0.setNewLine("-");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("usage: ");
      mockPrintWriter0.append('7');
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter(mockPrintWriter0, false);
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter1, 2, "tB]?R_!94B");
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter1, (-1210), "9Ea88mHN6tVuVhdf");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultWidth = 6050;
      helpFormatter0.defaultLongOptPrefix = "rtw}A<BS|}:xU@rk[";
      helpFormatter0.getLeftPadding();
      Options options0 = new Options();
      Option option0 = new Option("", "");
      options0.addOption(option0);
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = new Options();
      options1.helpOptions();
      helpFormatter0.printHelp(6050, "rtw}A<BS|}:xU@rk[", "NO_ARGS_ALLOWED", options1, "");
      int int0 = HelpFormatter.DEFAULT_LEFT_PAD;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("rtw}A<BS|}:xU@rk[");
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) "--");
      Options options2 = options0.addOption("arg", true, "rtw}A<BS|}:xU@rk[");
      helpFormatter0.printHelp(printWriter0, (-1), "rtw}A<BS|}:xU@rk[", "", options2, 1741, 1741, "rtw}A<BS|}:xU@rk[");
      helpFormatter0.getSyntaxPrefix();
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setWidth(1660);
      helpFormatter0.setArgName("A CloneNotSupportedException was thrown: ");
      helpFormatter0.rtrim("LCqo:2ee#");
      helpFormatter0.setLongOptSeparator("A CloneNotSupportedException was thrown: ");
      MockFile mockFile0 = new MockFile("LCqo:2ee#");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("Fz1jv7!~A#KIU");
      mockPrintWriter1.append('B');
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter(mockPrintWriter0, false);
      PrintWriter printWriter0 = null;
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage((PrintWriter) null, (-4112), "");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultWidth = 1;
      helpFormatter0.defaultLongOptPrefix = "rtw}A<BS|}:xU@rk[";
      helpFormatter0.getLeftPadding();
      Options options0 = new Options();
      String string0 = "";
      Option option0 = new Option("", "");
      Options options1 = options0.addOption(option0);
      OptionGroup optionGroup0 = new OptionGroup();
      Options options2 = options0.addOption(option0);
      options1.getOption("arg");
      options2.hasLongOption("bobT-C#");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      // Undeclared exception!
      helpFormatter0.printHelp("--", "arg", options0, "");
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setSyntaxPrefix("DipoR-M^WLJ2EUv]k");
      helpFormatter0.setDescPadding((-2));
      Options options0 = new Options();
      options0.getOption("\n");
      helpFormatter0.rtrim("");
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultWidth = 6050;
      helpFormatter0.defaultLongOptPrefix = "rtw}A<BS|}:xU@rk[";
      helpFormatter0.getLeftPadding();
      Options options0 = new Options();
      Option option0 = new Option("", "");
      Options options1 = options0.addOption(option0);
      OptionGroup optionGroup0 = new OptionGroup();
      Options options2 = options1.addOptionGroup(optionGroup0);
      options2.helpOptions();
      helpFormatter0.printHelp(6050, "rtw}A<BS|}:xU@rk[", "NO_ARGS_ALLOWED", options2, "");
      int int0 = HelpFormatter.DEFAULT_LEFT_PAD;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("rtw}A<BS|}:xU@rk[");
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) "--");
      Options options3 = options0.addOption("arg", true, "rtw}A<BS|}:xU@rk[");
      helpFormatter0.printHelp(printWriter0, (-1), "rtw}A<BS|}:xU@rk[", "", options3, 1741, 1741, "rtw}A<BS|}:xU@rk[");
      helpFormatter0.getSyntaxPrefix();
      helpFormatter0.findWrapPos("Fd,g<>#ilR5ysL", 6050, 1);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      helpFormatter0.setOptPrefix("<");
      Options options0 = new Options();
      options0.toString();
      helpFormatter0.printHelp("{(T9]RQTR", "(CW", options0, "{(T9]RQTR", false);
      helpFormatter0.defaultLeftPad = 0;
      helpFormatter0.setOptPrefix("FApQ,%!ExC<3u3=M");
      helpFormatter0.getSyntaxPrefix();
      helpFormatter0.setArgName("");
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.setArgName("");
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(comparator0).toString();
      helpFormatter0.setOptionComparator(comparator0);
      helpFormatter0.renderOptions((StringBuffer) null, 3, options0, 3, 3);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultWidth = 6050;
      helpFormatter0.defaultLongOptPrefix = "rtw}A<BS|}:xU@rk[";
      helpFormatter0.getLeftPadding();
      Options options0 = new Options();
      Option option0 = new Option("", "");
      Options options1 = options0.addOption(option0);
      OptionGroup optionGroup0 = new OptionGroup();
      Options options2 = options1.addOptionGroup(optionGroup0);
      options2.helpOptions();
      helpFormatter0.printHelp(6050, "rtw}A<BS|}:xU@rk[", "NO_ARGS_ALLOWED", options2, "");
      int int0 = HelpFormatter.DEFAULT_LEFT_PAD;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("rtw}A<BS|}:xU@rk[");
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) "--");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(printWriter0, (-2), " | ", (String) null, options1, 1, 6050, "");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultWidth = 6050;
      helpFormatter0.defaultLongOptPrefix = "rtw}A<BS|}:xU@rk[";
      helpFormatter0.getLeftPadding();
      Options options0 = new Options();
      Option option0 = new Option("", "");
      Options options1 = options0.addOption(option0);
      OptionGroup optionGroup0 = new OptionGroup();
      Options options2 = options1.addOptionGroup(optionGroup0);
      options2.helpOptions();
      helpFormatter0.printHelp(6050, "rtw}A<BS|}:xU@rk[", "NO_ARGS_ALLOWED", options2, "");
      int int0 = HelpFormatter.DEFAULT_LEFT_PAD;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("rtw}A<BS|}:xU@rk[");
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) "--");
      helpFormatter0.printHelp("arg", "wi5':", options0, "wi5':");
      helpFormatter0.setArgName((String) null);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(printWriter0, (-1), (String) null, "&6mtJi9lf`0>s#6W)", options1, 1, (-2), "   ", true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setSyntaxPrefix("DipoR-M^WLJ2EUv]k");
      helpFormatter0.setDescPadding((-2));
      Options options0 = new Options();
      options0.getOption("\n");
      helpFormatter0.setArgName("+V('.$f%d?01rDp>cw");
      helpFormatter0.findWrapPos("+V('.$f%d?01rDp>cw", (-2), 6);
      helpFormatter0.getSyntaxPrefix();
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setOptPrefix("");
      // Undeclared exception!
      try { 
        helpFormatter0.findWrapPos((String) null, (-2513), (-2513));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "\\#";
      helpFormatter0.defaultOptPrefix = "#";
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("usage: ");
      int int0 = (-3);
      Options options0 = new Options();
      int int1 = 1966;
      boolean boolean0 = true;
      options0.helpOptions();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter1, (-3), "#", "#", options0, 1966, 1966, "#", true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setSyntaxPrefix("DipoR-M^WLJ2EUv]k");
      helpFormatter0.setDescPadding((-2));
      Options options0 = new Options();
      options0.getOption("\n");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.printHelp("\n", "", options0, "DipoR-M^WLJ2EUv]k");
      // Undeclared exception!
      try { 
        helpFormatter1.createPadding((-3235));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setWidth(23);
      helpFormatter0.setArgName("DipoR-M^WLJ2EUv]k");
      helpFormatter0.setLongOptSeparator("KznK%CBOM]Mll{[fY");
      String string0 = "NSDN/,5t<Qamkd&bP,R";
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped((PrintWriter) null, 23, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultOptPrefix = "#";
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      mockPrintWriter0.append((CharSequence) "--");
      Options options0 = new Options();
      Options options1 = new Options();
      options1.toString();
      Options options2 = new Options();
      Option option0 = new Option("arg", ";6>=\"-1QKL");
      options1.addOption(option0);
      OptionGroup optionGroup0 = new OptionGroup();
      options0.addOptionGroup(optionGroup0);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((-307), "gL8(]&@UX", "gL8(]&@UX", options1, "Kt.c/m_E,G1|IAi");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLeftPadding(1786);
      helpFormatter0.setArgName("!b*z~Lq");
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.rtrim("");
      helpFormatter0.getOptionComparator();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      Option option0 = new Option("arg", " ");
      Options options2 = options1.addOption(option0);
      Options options3 = options2.addOption("", true, "#.46v[^ 14D`g");
      helpFormatter0.printHelp(1786, "A,$#+>3tZ-", "[ Options: [ short ", options3, "Ec5$$P]'&}>", false);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultLeftPad = 6050;
      helpFormatter0.defaultLongOptPrefix = "rtw}A<BS|}:xU@rk[";
      helpFormatter0.getLeftPadding();
      Options options0 = new Options();
      Option option0 = new Option("", "");
      Options options1 = options0.addOption(option0);
      OptionGroup optionGroup0 = new OptionGroup();
      Options options2 = options1.addOptionGroup(optionGroup0);
      helpFormatter0.printHelp(6050, "rtw}A<BS|}:xU@rk[", "N_ARGS_ALLOWED", options2, "");
      helpFormatter0.getWidth();
      helpFormatter0.setArgName("-");
      Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.setOptionComparator(comparator0);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("", "", options1, "org.apache.commons.cli.HelpFormatter$OptionComparator");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultWidth = 1;
      helpFormatter0.defaultLongOptPrefix = "rtw}A<BS|}:xU@rk[";
      helpFormatter0.getLeftPadding();
      Options options0 = new Options();
      Option option0 = new Option("", "");
      options0.addOption(option0);
      Option option1 = new Option("", "\n");
      Options options1 = options0.addOption(option1);
      OptionGroup optionGroup0 = new OptionGroup();
      options0.addOptionGroup(optionGroup0);
      helpFormatter0.setArgName("");
      helpFormatter0.printHelp(25, "rtw}A<BS|}:xU@rk[", (String) null, options1, "");
      helpFormatter0.getWidth();
      helpFormatter0.setArgName("Cannot add value, list full.");
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultDescPad = 0;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("tB]?R_!94B");
      helpFormatter0.setLongOptPrefix("-");
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 0, 0, "");
      helpFormatter0.defaultOptPrefix = "tB]?R_!94B";
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.getArgName();
      StringBuffer stringBuffer0 = new StringBuffer("--");
      StringBuffer stringBuffer1 = stringBuffer0.insert(0, true);
      helpFormatter0.renderWrappedText(stringBuffer1, 2, 0, "");
      helpFormatter0.setLeftPadding(64);
      Options options0 = new Options();
      helpFormatter0.printOptions(mockPrintWriter0, 64, options0, 0, 2);
      helpFormatter0.setNewLine("-");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("-");
      PrintWriter printWriter0 = mockPrintWriter1.append('B');
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter(printWriter0, true);
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter2, 2, "-");
      helpFormatter0.printWrapped(printWriter0, 3, "X:km bHP-Qo^j%!");
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer("+swwIUZm");
      int int0 = 496;
      helpFormatter0.renderWrappedText(stringBuffer0, 496, 496, "+swwIUZm");
      Options options0 = new Options();
      String string0 = ":cE ,)X7:]j&Op]`~^";
      // Undeclared exception!
      try { 
        options0.addOption("--", " ", true, ":cE ,)X7:]j&Op]`~^");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The option '--' contains an illegal character : '-'
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "tB]?R_!94B";
      helpFormatter0.defaultDescPad = 0;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("tB]?R_!94B");
      helpFormatter0.setLongOptPrefix("-");
      String string1 = "";
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, (-1), (-1), "");
      helpFormatter0.defaultOptPrefix = "tB]?R_!94B";
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.getLongOptSeparator();
      Options options0 = new Options();
      options0.toString();
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, (-1271), "jA?7K\"_ M~[", options0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultDescPad = 0;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("t8hMpfM");
      helpFormatter0.setLongOptPrefix("-");
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, (-1), (-1), "");
      helpFormatter0.defaultOptPrefix = "t8hMpfM";
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.getLongOptSeparator();
      Options options0 = new Options();
      options0.toString();
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 264, "", options0);
      helpFormatter0.printHelp("&", "", options0, "");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.createPadding(1);
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 1, "");
      helpFormatter0.getWidth();
      helpFormatter0.getOptionComparator();
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultOptPrefix = "#";
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      mockPrintWriter0.append((CharSequence) "--");
      Options options0 = new Options();
      helpFormatter0.printHelp("#", options0);
      helpFormatter0.setArgName("Illegal option name '");
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setSyntaxPrefix("line.separator");
      helpFormatter0.setDescPadding(1660);
      Options options0 = new Options();
      options0.getOption("\n");
      helpFormatter0.printHelp("83FI&;(", "", options0, "r");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.printHelp("usage: ", "-", options0, "--");
      // Undeclared exception!
      try { 
        helpFormatter0.createPadding((-756));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setWidth(23);
      helpFormatter0.setArgName("DipoR-M^WLJ2EUv]k");
      helpFormatter0.setLongOptSeparator("KznK%CBOM]Mll{[fY");
      MockFile mockFile0 = new MockFile("NSDN/,5t<Qamkd&bP,R");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      mockFile0.getAbsolutePath();
      StringBuffer stringBuffer0 = new StringBuffer(38);
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) stringBuffer0);
      Options options0 = new Options();
      // Undeclared exception!
      helpFormatter0.printUsage(printWriter0, 1, "-", options0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "\\#";
      helpFormatter0.defaultOptPrefix = "#";
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) "--");
      int int0 = 0;
      Options options0 = new Options();
      int int1 = 1966;
      boolean boolean0 = true;
      options0.helpOptions();
      // Undeclared exception!
      helpFormatter0.printHelp(printWriter0, 0, "#", "#", options0, 1966, 1966, "#", false);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultDescPad = 0;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("t8hMpfM");
      helpFormatter0.setLongOptPrefix("-");
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, (-1), (-1), "");
      helpFormatter0.defaultOptPrefix = "t8hMpfM";
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.getLongOptSeparator();
      Options options0 = new Options();
      Locale locale0 = Locale.FRENCH;
      Object[] objectArray0 = new Object[9];
      Object object0 = new Object();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) mockPrintWriter0;
      objectArray0[2] = (Object) options0;
      objectArray0[3] = (Object) " ";
      objectArray0[4] = (Object) "-";
      objectArray0[5] = (Object) mockPrintWriter0;
      objectArray0[6] = (Object) "-";
      Object object1 = new Object();
      objectArray0[7] = object1;
      objectArray0[8] = (Object) "R?Gg.<-U4j@?i,b+tr";
      mockPrintWriter0.printf(locale0, "", objectArray0);
      options0.toString();
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, (-1), "R?Gg.<-U4j@?i,b+tr", options0);
      helpFormatter0.defaultLongOptPrefix = "t8hMpfM";
      helpFormatter0.printHelp(" ", "[ Options: [ short java.util.HashMap@0000000004 ] [ long {} ]", options0, "org.apache.commons.cli.Options");
      helpFormatter0.createPadding(74);
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 1114, "", options0);
      helpFormatter0.printHelp(1114, "[ Options: [ short java.util.HashMap@0000000004 ] [ long {} ]", "LxV!P87", options0, "org.apache.commons.cli.Options", true);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("[ARG...]");
      int int0 = (-1);
      String string0 = "+lrS=5hFQT";
      helpFormatter0.setLongOptPrefix("+lrS=5hFQT");
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, (-467), 64, "--");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "rtw}A<BS|}:xU@rk[";
      helpFormatter0.defaultWidth = 6050;
      helpFormatter0.defaultLongOptPrefix = "rtw}A<BS|}:xU@rk[";
      helpFormatter0.getLeftPadding();
      Options options0 = new Options();
      Option option0 = new Option("", "");
      String string1 = "[ option: ";
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((String) null, "", options0, "[ option: ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultWidth = 6050;
      helpFormatter0.defaultLongOptPrefix = "rtw}A<BS|}:xU@rk[";
      helpFormatter0.getLeftPadding();
      Options options0 = new Options();
      Option option0 = new Option("", "");
      Options options1 = options0.addOption(option0);
      OptionGroup optionGroup0 = new OptionGroup();
      Options options2 = options1.addOptionGroup(optionGroup0);
      options2.helpOptions();
      helpFormatter0.printHelp(6050, "rtw}A<BS|}:xU@rk[", "NO_ARGS_ALLOWED", options2, "");
      int int0 = HelpFormatter.DEFAULT_LEFT_PAD;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("rtw}A<BS|}:xU@rk[");
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) "--");
      // Undeclared exception!
      helpFormatter0.printHelp(printWriter0, 1, "NO_ARGS_ALLOWED", "rtw}A<BS|}:xU@rk[", options0, 1, (-2), "org.apache.commons.cli.ParseException");
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultDescPad = 0;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("t8hMpfM");
      helpFormatter0.setLongOptPrefix("-");
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, (-1), (-1), "");
      helpFormatter0.defaultOptPrefix = "t8hMpfM";
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.getLongOptSeparator();
      Options options0 = new Options();
      options0.toString();
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, (-1), "R?Gg.<-U4j@?i,b+tr", options0);
      helpFormatter0.defaultLongOptPrefix = "t8hMpfM";
      helpFormatter0.printHelp(" ", "[ Options: [ short java.util.HashMap@0000000004 ] [ long {} ]", options0, "org.apache.commons.cli.Options");
      helpFormatter0.createPadding(3501);
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 1, " ");
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultWidth = 6050;
      helpFormatter0.defaultLongOptPrefix = "rtw}A<BS|}:xU@rk[";
      helpFormatter0.getLeftPadding();
      Option option0 = new Option("", "");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("+z4q@]?l=$PvD)G");
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) "NO_ARGS_ALLOWED";
      objectArray0[1] = (Object) "rtw}A<BS|}:xU@rk[";
      objectArray0[2] = (Object) "+z4q@]?l=$PvD)G";
      PrintWriter printWriter0 = mockPrintWriter0.printf("rtw}A<BS|}:xU@rk[", objectArray0);
      // Undeclared exception!
      helpFormatter0.printUsage(printWriter0, 0, "hCg89hI'tR7Idd2t)9");
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultWidth = 6050;
      helpFormatter0.defaultLongOptPrefix = "rtw}A<BS|}:xU@rk[";
      helpFormatter0.getLeftPadding();
      Options options0 = new Options();
      Option option0 = new Option("", "");
      options0.addOption(option0);
      helpFormatter0.setArgName("gqBE?bDL+gI LNv");
      helpFormatter0.setLongOptSeparator("]");
      // Undeclared exception!
      try { 
        helpFormatter0.createPadding((-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultWidth = 6050;
      helpFormatter0.defaultLongOptPrefix = "rtw}A<BS|}:xU@rk[";
      helpFormatter0.getLeftPadding();
      Options options0 = new Options();
      Option option0 = new Option("", "");
      Options options1 = options0.addOption(option0);
      OptionGroup optionGroup0 = new OptionGroup();
      Options options2 = options1.addOptionGroup(optionGroup0);
      helpFormatter0.printHelp(6050, "rtw}A<BS|}:xU@rk[", "NO_ARGS_ALLOWED", options2, "");
      helpFormatter0.getWidth();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "usage: ");
      // Undeclared exception!
      try { 
        helpFormatter0.renderWrappedText(stringBuffer0, (-2), 2093, "7eL_ZfOQ)QP&kDt");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setSyntaxPrefix("");
      helpFormatter0.setDescPadding(2);
      Options options0 = new Options();
      options0.getOption("-");
      String string0 = "";
      String string1 = ";Bd/&Hn.SJB6~ADV";
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("", ";Bd/&Hn.SJB6~ADV", options0, "", true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = 0;
      helpFormatter0.setWidth(0);
      helpFormatter0.createPadding(0);
      MockFile mockFile0 = new MockFile(" ");
      String string0 = "~Z#}v";
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter(mockFile0, "~Z#}v");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // ~Z#}v
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultLeftPad = (-106);
      int int0 = (-2474);
      Options options0 = new Options();
      String string0 = "/Vkyx,:]lo?tUi!rsyQ";
      options0.hasOption("/Vkyx,:]lo?tUi!rsyQ");
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.optionComparator = comparator0;
      Options options1 = options0.addOption("arg", false, "usage: ");
      options1.toString();
      options1.toString();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("M^0@C7Fi<yJ&5=ym", options1, false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultOptPrefix = "#";
      int int0 = 0;
      Options options0 = new Options();
      options0.helpOptions();
      helpFormatter0.printHelp("$/Q7|EQ]/LZ[C]_6(", options0, true);
      helpFormatter0.getWidth();
      helpFormatter0.setLeftPadding(0);
      helpFormatter0.getOptionComparator();
      Options options1 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(108, "", "$/Q7|EQ]/LZ[C]_6(", options1, "$/Q7|EQ]/LZ[C]_6(", false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = options0.addOption((String) null, true, (String) null);
      String string0 = null;
      Options options2 = options1.addOption((String) null, "-", true, (String) null);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((-1), (String) null, (String) null, options2, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "fz KC";
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("", (Options) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = 179;
      String string0 = "";
      Options options0 = new Options();
      String string1 = "";
      boolean boolean0 = true;
      String string2 = "[ option: ";
      helpFormatter0.defaultWidth = 179;
      options0.hasShortOption("[ option: ");
      Option option0 = new Option("", "", true, "");
      option0.clearValues();
      Options options1 = options0.addOption(option0);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(179, "", "+#)$Nzi8%E8x$W?%a", options1, "+#)$Nzi8%E8x$W?%a", true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(2236, "ks)O/4jLOd", "ks)O/4jLOd", (Options) null, "Q?>es)9O", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "n>";
      int int0 = 0;
      helpFormatter0.defaultSyntaxPrefix = "n>";
      helpFormatter0.setDescPadding(0);
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage((PrintWriter) null, 0, "Dt6qKroB", (Options) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "A CloneNotSupportedException was thrown: ";
      helpFormatter0.setArgName("A CloneNotSupportedException was thrown: ");
      helpFormatter0.getNewLine();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      options0.toString();
      options1.getOptions();
      // Undeclared exception!
      try { 
        options1.addOption("usage: ", false, "(}uy=77'b^jI^T");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The option 'usage: ' contains an illegal character : ':'
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultWidth = 6050;
      helpFormatter0.defaultLongOptPrefix = "rtw}A<BS|}:xU@rk[";
      helpFormatter0.getLeftPadding();
      Options options0 = new Options();
      Option option0 = new Option("", "");
      Options options1 = options0.addOption(option0);
      OptionGroup optionGroup0 = new OptionGroup();
      Options options2 = options1.addOptionGroup(optionGroup0);
      helpFormatter0.printHelp(6050, "rtw}A<BS|}:xU@rk[", "NO_ARGS_ALLOWED", options2, "");
      helpFormatter0.getWidth();
      helpFormatter0.setArgName("-");
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getArgName();
      String string0 = "";
      Options options0 = new Options();
      String string1 = "-oX/>a@GOj";
      boolean boolean0 = false;
      String string2 = "[ Options: [ short ";
      options0.getMatchingOptions("");
      // Undeclared exception!
      try { 
        options0.addOption("-oX/>a@GOj", false, "[ Options: [ short ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The option '-oX/>a@GOj' contains an illegal character : '-'
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getWidth();
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer("-");
      int int0 = (-4842);
      Options options0 = new Options();
      stringBuffer0.chars();
      // Undeclared exception!
      try { 
        helpFormatter0.renderOptions(stringBuffer0, (-4842), options0, (-4842), (-4842));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setOptPrefix("<");
      Options options0 = new Options();
      options0.toString();
      boolean boolean0 = false;
      helpFormatter0.printHelp("{(T9]RQTR", "(CW", options0, "{(T9]RQTR", false);
      String string0 = "FApQ,%!ExC<3u3=M";
      helpFormatter0.defaultLeftPad = 0;
      helpFormatter0.setOptPrefix("FApQ,%!ExC<3u3=M");
      helpFormatter0.getSyntaxPrefix();
      helpFormatter0.setArgName("");
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.setArgName("");
      String string1 = "G,nr8\";kWjg";
      // Undeclared exception!
      try { 
        helpFormatter0.renderWrappedText((StringBuffer) null, 0, 0, "G,nr8\";kWjg");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultDescPad = 0;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("tB]?R_!94B");
      helpFormatter0.setLongOptPrefix("-");
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, (-1), (-1), "");
      helpFormatter0.defaultOptPrefix = "tB]?R_!94B";
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.getArgName();
      StringBuffer stringBuffer0 = new StringBuffer("[");
      StringBuffer stringBuffer1 = stringBuffer0.insert(0, true);
      helpFormatter0.renderWrappedText(stringBuffer1, 2, 0, "");
      helpFormatter0.setLeftPadding(64);
      Options options0 = new Options();
      helpFormatter0.printOptions(mockPrintWriter0, 64, options0, 0, 2);
      helpFormatter0.setNewLine("[");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("-");
      PrintWriter printWriter0 = mockPrintWriter1.append('B');
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter(printWriter0, true);
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter2, 2, "-");
      helpFormatter0.printWrapped(printWriter0, (-1), "X:km bHP-Qo^j%!");
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.setOptionComparator(comparator0);
      String string0 = "";
      helpFormatter0.defaultArgName = "";
      helpFormatter0.defaultOptPrefix = "$HEL;W)-R}\"7bvK,N";
      helpFormatter0.setLeftPadding(932);
      String string1 = "4})B`4,\"EhF2Ag+WT";
      helpFormatter0.defaultSyntaxPrefix = "4})B`4,\"EhF2Ag+WT";
      helpFormatter0.setWidth(932);
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.setNewLine("");
      Options options0 = new Options();
      boolean boolean0 = false;
      options0.getOptionGroups();
      // Undeclared exception!
      try { 
        options0.addOption(" ", false, "GqWF+R(BmHc");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal option name ' '
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getDescPadding();
      StringBuffer stringBuffer0 = new StringBuffer("arg");
      int int0 = 3187;
      stringBuffer0.ensureCapacity(3187);
      Options options0 = new Options();
      StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, 3187, options0, 3187, 3187);
      int int1 = (-1351);
      String string0 = "<";
      // Undeclared exception!
      try { 
        stringBuffer1.setLength((-1));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "@]";
      String string1 = "org.apache.commons.cli.HelpFormatter";
      Options options0 = new Options();
      options0.getOptionGroups();
      OptionGroup optionGroup0 = new OptionGroup();
      String string2 = "+NqzH";
      boolean boolean0 = false;
      helpFormatter0.setNewLine((String) null);
      Option option0 = null;
      try {
        option0 = new Option("+NqzH", "--", false, " ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The option '+NqzH' contains an illegal character : '+'
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "fz KC";
      Options options0 = null;
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("fz KC", (Options) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setSyntaxPrefix("\n");
      helpFormatter0.setOptionComparator((Comparator) null);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.setOptionComparator(comparator0);
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        stringWriter0.append((CharSequence) "--", 3, 74);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Comparator comparator0 = helpFormatter0.getOptionComparator();
      helpFormatter0.getLongOptSeparator();
      helpFormatter0.getOptionComparator();
      helpFormatter0.getLongOptSeparator();
      helpFormatter0.getSyntaxPrefix();
      StringWriter stringWriter0 = new StringWriter(3);
      helpFormatter0.setOptionComparator(comparator0);
      StringWriter stringWriter1 = stringWriter0.append('?');
      StringBuffer stringBuffer0 = stringWriter1.getBuffer();
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.renderOptions(stringBuffer0, 31, options0, (-1363), (-1363));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setSyntaxPrefix("g");
      helpFormatter0.setDescPadding((-2));
      Options options0 = new Options();
      options0.getOption("ezo(hZ+");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("g", "j", options0, "");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = 0;
      helpFormatter0.defaultDescPad = 0;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("t8hMpfM");
      int int1 = (-1);
      helpFormatter0.setLongOptPrefix("+lrS=5hFQT");
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, (-1), (-1), "");
      helpFormatter0.defaultOptPrefix = "t8hMpfM";
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 4262, "");
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.getLongOptSeparator();
      String string0 = "R?Gg.<-U4j@?i,b+tr";
      Options options0 = new Options();
      options0.toString();
      // Undeclared exception!
      try { 
        options0.addOption(" ", false, "R?Gg.<-U4j@?i,b+tr");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal option name ' '
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "\\?c]T%pL% VGk";
      Options options0 = new Options();
      String string1 = "NULb%pOfZVDxAG>Th";
      options0.hasOption("NULb%pOfZVDxAG>Th");
      boolean boolean0 = false;
      helpFormatter0.printHelp("?c]T%pL% VGk", options0, false);
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream("--", "--");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // --
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultDescPad = 460;
      helpFormatter0.getOptPrefix();
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "\\#";
      helpFormatter0.defaultOptPrefix = "#";
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) "--");
      int int0 = 0;
      Options options0 = new Options();
      int int1 = 1966;
      boolean boolean0 = true;
      options0.helpOptions();
      // Undeclared exception!
      helpFormatter0.printHelp(printWriter0, 0, "#", "#", options0, 1966, 1966, "#", true);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setWidth(1660);
      helpFormatter0.setArgName("A CloneNotSupportedException was thrown: ");
      helpFormatter0.rtrim("LCqo:2ee#");
      helpFormatter0.setLongOptSeparator("A CloneNotSupportedException was thrown: ");
      MockFile mockFile0 = new MockFile("LCqo:2ee#");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) "\n");
      Options options0 = new Options();
      helpFormatter0.printUsage(printWriter0, 1660, "V+5Odz97&EwB]npQ&", options0);
      assertEquals(1660, helpFormatter0.defaultWidth);
  }
}
