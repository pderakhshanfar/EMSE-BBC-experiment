/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 07 18:01:52 GMT 2021
 */

package org.apache.commons.cli;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FilterOutputStream;
import java.io.ObjectOutputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.io.UnsupportedEncodingException;
import java.net.URI;
import java.util.Collection;
import java.util.Comparator;
import java.util.LinkedList;
import java.util.Locale;
import org.apache.commons.cli.HelpFormatter;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.OptionGroup;
import org.apache.commons.cli.Options;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class HelpFormatter_ESTest extends HelpFormatter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getNewLine();
      helpFormatter0.setLongOptSeparator("");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Options options0 = new Options();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, (-1), "\n", options0);
      helpFormatter0.getLongOptSeparator();
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("|Ld#_]qpa%#1", (Options) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setOptPrefix("T");
      Options options0 = new Options();
      Option option0 = new Option("arg", "`~)0.U^y\"Y_34l", true, "\n");
      option0.setArgName("");
      options0.addOption(option0);
      OptionGroup optionGroup0 = new OptionGroup();
      Option option1 = new Option("T", "vmvTOmm[3d");
      OptionGroup optionGroup1 = optionGroup0.addOption(option1);
      Option option2 = new Option("", "k", true, "usage: ");
      optionGroup1.addOption(option2);
      options0.addOptionGroup(optionGroup1);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("@b");
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, (-1), "Ok:krTt=ng8h^XD>", options0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      int int0 = 0;
      // Undeclared exception!
      helpFormatter0.printHelp((PrintWriter) null, 0, "]", "]", options0, 0, 0, "]");
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = 2229;
      helpFormatter0.createPadding(1394);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "H]@");
      helpFormatter0.defaultOptPrefix = "";
      helpFormatter0.setArgName((String) null);
      helpFormatter0.defaultWidth = 2229;
      helpFormatter0.getLeftPadding();
      helpFormatter0.rtrim("line.separator");
      helpFormatter0.getNewLine();
      String string0 = "--";
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Options options0 = null;
      helpFormatter0.getArgName();
      helpFormatter0.defaultLeftPad = (-3541);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) null, 2229, "line.separator", "line.separator", (Options) null, 2229, 1, "H]@");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLongOptSeparator((String) null);
      Options options0 = new Options();
      helpFormatter0.getLongOptSeparator();
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Options options0 = new Options();
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLongOptSeparator();
      helpFormatter0.setLongOptPrefix(" ");
      helpFormatter0.findWrapPos("/1''x", 2, 0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setOptPrefix("9");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("+TYf");
      mockPrintWriter0.append('v');
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 0, (-547), "PYn#~y([p/zqzF");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getNewLine();
      Options options0 = new Options();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("usage: ");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(dataOutputStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(filterOutputStream0);
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) "\n");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(printWriter0, 2562, "\n", "\n", options0, (-1), (-1), "\n");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setOptPrefix("T");
      Options options0 = new Options();
      boolean boolean0 = true;
      Option option0 = new Option("arg", "`~)0.U^y\"Y_34l", true, "\n");
      option0.setArgName("");
      options0.addOption(option0);
      helpFormatter0.defaultWidth = (-1);
      helpFormatter0.rtrim("`~)0.U^y\"Y_34l");
      helpFormatter0.setSyntaxPrefix("--");
      helpFormatter0.getNewLine();
      String string0 = "L";
      helpFormatter0.getWidth();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((-3911), "", "L", options0, "2X`l5;~G3ex[M)A|");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setOptPrefix("T");
      Options options0 = new Options();
      Option option0 = new Option("arg", "`~)0.U^y\"Y_34l", true, "\n");
      option0.setArgName("");
      Options options1 = options0.addOption(option0);
      OptionGroup optionGroup0 = new OptionGroup();
      Option option1 = new Option("T", "vmvTOmm[3d");
      OptionGroup optionGroup1 = optionGroup0.addOption(option1);
      optionGroup1.setRequired(true);
      options1.addOptionGroup(optionGroup1);
      helpFormatter0.rtrim("@");
      helpFormatter0.getNewLine();
      helpFormatter0.printHelp((-1), "--", "@", options1, "]", true);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      int int0 = 0;
      MockFile mockFile0 = new MockFile("arg");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      // Undeclared exception!
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 0, "k.]FK7Ps6bO`^in");
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Option option0 = new Option("", "]!,B6J,RJkY8-JpY", false, "`~)0.U^y\"Y_34l");
      Option option1 = new Option("", " ", false, "-^");
      option1.setArgName("-^");
      Options options1 = options0.addOption("wIO8", "-", false, "--");
      OptionGroup optionGroup0 = new OptionGroup();
      OptionGroup optionGroup1 = optionGroup0.addOption(option1);
      options1.addOptionGroup(optionGroup1);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("ox?M");
      // Undeclared exception!
      try { 
        helpFormatter1.printUsage((PrintWriter) mockPrintWriter0, (-529), "fF9PG.gbGvPE5", options1);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Option option0 = new Option("", "]!,B6J,RJkY8-JpY", false, "`~)0.U^y\"Y_34l");
      Option option1 = new Option("", " ", false, "-^");
      option1.setArgName("-^");
      Options options1 = options0.addOption("wIO8", "-", false, "--");
      OptionGroup optionGroup0 = new OptionGroup();
      OptionGroup optionGroup1 = optionGroup0.addOption(option1);
      Options options2 = options1.addOptionGroup(optionGroup1);
      Options options3 = options2.addOption(option0);
      helpFormatter0.getNewLine();
      helpFormatter0.printHelp(4030, "WQ/;,s8Vu&_ql", "", options3, "a&", true);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.flush();
      helpFormatter0.setLongOptPrefix((String) null);
      options0.hasLongOption("org.apache.commons.cli.Util");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 3, "usage: ", "\n", options0, 1, 74, (String) null, false);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "";
      int int0 = 1305;
      helpFormatter0.findWrapPos("", 9, 1305);
      helpFormatter0.getLongOptPrefix();
      String string1 = "3a+|ya!Hd";
      String string2 = " ]";
      String string3 = "";
      Options options0 = null;
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(" ]", "", (Options) null, "", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setOptPrefix("T");
      Options options0 = new Options();
      Option option0 = new Option("arg", "`~)0.U^y\"Y_34l", true, "\n");
      option0.setArgName("");
      Options options1 = options0.addOption(option0);
      helpFormatter0.rtrim("RD8x&Jxw5");
      helpFormatter0.getNewLine();
      helpFormatter0.printHelp((-1), "--", "RD8x&Jxw5", options1, "", true);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer("org.apache.commons.cli.Options");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      stringBuffer0.append(false);
      String string0 = " ";
      helpFormatter0.renderWrappedText(stringBuffer0, 48, 48, " ");
      helpFormatter0.setDescPadding((-389));
      helpFormatter0.getArgName();
      helpFormatter0.getLongOptSeparator();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      helpFormatter0.getArgName();
      helpFormatter0.findWrapPos("--", 3262, 3262);
      helpFormatter0.findWrapPos(" ", (-1), 3262);
      helpFormatter0.getWidth();
      helpFormatter0.getArgName();
      helpFormatter0.rtrim(" ");
      Options options0 = new Options();
      Options options1 = options0.addOption("arg", false, "");
      String string1 = null;
      MockPrintStream mockPrintStream0 = new MockPrintStream("has already been selected: '");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0, false);
      // Undeclared exception!
      try { 
        helpFormatter0.printOptions(mockPrintWriter0, (-389), options1, 1, 74);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setOptPrefix((String) null);
      Options options0 = new Options();
      Option option0 = new Option("", (String) null, true, "");
      option0.setArgName("_utM\"N");
      options0.addOption(option0);
      helpFormatter0.printHelp((-1), " cPy2fFBPtE\">3", "", options0, "", true);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("", "", options0, " | ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultLeftPad = (-2584);
      Options options0 = new Options();
      String string0 = "";
      String string1 = "<VHdhs";
      options0.hasLongOption("<VHdhs");
      Option option0 = new Option("", "-", true, "");
      options0.addOption(option0);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((-1), " cPy2fFBPtE\">3", "", options0, "", true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Option option0 = new Option("", "-", true, "");
      option0.setRequired(true);
      options0.addOption(option0);
      helpFormatter0.printHelp((-1), " cPyfFBPtE\">3", "", options0, "", true);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("-");
      helpFormatter0.setDescPadding((-1));
      Options options0 = new Options();
      helpFormatter0.setLongOptSeparator("");
      helpFormatter0.defaultLeftPad = 3;
      Options options1 = options0.addOption("arg", "", false, "wt9Ed9Ic");
      OptionGroup optionGroup0 = new OptionGroup();
      Options options2 = options1.addOptionGroup(optionGroup0);
      options1.getOptions();
      String string0 = "%NSzF:0VawY]p>DXW.";
      options1.hasOption("%NSzF:0VawY]p>DXW.");
      helpFormatter0.printOptions(mockPrintWriter0, 74, options2, 0, 0);
      helpFormatter0.setOptPrefix("cmdLineSyntax not provided");
      helpFormatter0.setLongOptSeparator("wt9Ed9Ic");
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, (-1), 0, "");
      helpFormatter0.getLongOptPrefix();
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        helpFormatter0.renderWrappedText(stringBuffer0, 7, (-1574), "u%VN!_uG;E|-3");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      int int0 = 0;
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) null, 0, "", "", options0, 0, 0, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLeftPadding(3);
      Options options0 = new Options();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      PrintWriter printWriter0 = null;
      String string0 = "~k{ekBOndL!R PBQ";
      // Undeclared exception!
      try { 
        helpFormatter1.printOptions((PrintWriter) null, 13, options0, 3, 74);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("-");
      int int0 = 74;
      helpFormatter0.setDescPadding((-1));
      Options options0 = new Options();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("-");
      FileSystemHandling.createFolder(evoSuiteFile0);
      helpFormatter0.setLongOptSeparator("");
      helpFormatter0.defaultLeftPad = 74;
      Options options1 = options0.addOption("arg", "", false, "wt9Ed9Ic");
      OptionGroup optionGroup0 = new OptionGroup();
      Options options2 = options1.addOptionGroup(optionGroup0);
      optionGroup0.setRequired(false);
      options2.hasOption(" ");
      options1.getOptions();
      options1.getMatchingOptions("--");
      options1.hasOption("%NSzF:0VawY]p>DXW.");
      int int1 = 0;
      helpFormatter0.printOptions(mockPrintWriter0, 74, options2, 0, 0);
      helpFormatter0.setOptPrefix("cmdLineSyntax not provided");
      helpFormatter0.setLongOptSeparator("wt9Ed9Ic");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("p[r`B+qg", options0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "usage: ");
      int int0 = (-2);
      MockFile mockFile0 = new MockFile("", "--");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0, false);
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter1, (-2), "org.apache.commons.cli.HelpFormatter$1");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      StringBuffer stringBuffer0 = new StringBuffer(57);
      stringBuffer0.ensureCapacity(2);
      // Undeclared exception!
      helpFormatter0.renderWrappedText(stringBuffer0, 0, 74, "AYN87^;cC*,&OC2.BP");
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        helpFormatter0.renderWrappedText(stringBuffer0, 0, 60, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLeftPadding(3);
      Options options0 = new Options();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      Options options1 = options0.addOption("arg", "--", true, "org.apache.commons.cli.OptionGroup");
      HelpFormatter helpFormatter2 = new HelpFormatter();
      Options options2 = options1.addOption("", false, "");
      // Undeclared exception!
      try { 
        helpFormatter2.printUsage((PrintWriter) null, 34, "org.apache.commons.cli.OptionGroup", options2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer();
      helpFormatter0.renderWrappedText(stringBuffer0, 60, 60, "");
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      File file0 = MockFile.createTempFile("org.apache.commons.cli.HelpFormatter$OptionComparator", "arg");
      MockPrintStream mockPrintStream0 = new MockPrintStream(file0);
      PrintStream printStream0 = mockPrintStream0.append((CharSequence) "usage: ", 1, 1);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(printStream0);
      options0.getOptionGroups();
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 426, "org.apache.commons.cli.HelpFormatter$OptionComparator", "f4V]4\"Y@Mf0+J6H /;", options0, 1394, 1394, "", false);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getNewLine();
      Options options0 = new Options();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockFile mockFile0 = new MockFile("arg", "M$p!{z<Y#");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
      boolean boolean0 = true;
      Collection collection0 = new LinkedList<Object>();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      String string0 = "XX-j+tuw]";
      // Undeclared exception!
      try { 
        helpFormatter1.printHelp("", options0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer(3);
      Options options0 = new Options();
      MockFile mockFile0 = new MockFile("usage: ");
      MockFile mockFile1 = new MockFile(mockFile0, "arg");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile1);
      PrintWriter printWriter0 = mockPrintWriter0.append(';');
      helpFormatter0.printHelp(printWriter0, 426, "]", (String) null, options0, 57, 57, "org.apache.commons.cli.OptionGroup", false);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("-");
      helpFormatter0.setDescPadding((-1));
      Options options0 = new Options();
      String string0 = "wt9Ed9Ic";
      helpFormatter0.setLongOptSeparator("");
      helpFormatter0.defaultLeftPad = 74;
      Options options1 = options0.addOption("arg", "", false, "wt9Ed9Ic");
      OptionGroup optionGroup0 = new OptionGroup();
      Options options2 = options1.addOptionGroup(optionGroup0);
      optionGroup0.setRequired(false);
      options2.hasOption(" ");
      options1.getOptions();
      options1.hasOption("%NSzF:0VawY]p>DXW.");
      int int0 = 0;
      // Undeclared exception!
      helpFormatter0.printOptions(mockPrintWriter0, 1, options2, 0, 0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = 2229;
      helpFormatter0.createPadding(1394);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "H]@");
      helpFormatter0.defaultOptPrefix = "";
      helpFormatter0.setArgName((String) null);
      helpFormatter0.defaultWidth = 2229;
      helpFormatter0.getLeftPadding();
      helpFormatter0.rtrim("line.separator");
      helpFormatter0.getNewLine();
      String string0 = "--";
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Options options0 = null;
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) null, 2229, "line.separator", "line.separator", (Options) null, 2229, 1, "H]@");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("-");
      int int0 = 74;
      helpFormatter0.setDescPadding((-1));
      Options options0 = new Options();
      helpFormatter0.setLongOptSeparator("");
      helpFormatter0.defaultLeftPad = 74;
      Options options1 = options0.addOption("arg", "", false, "wt9Ed9Ic");
      OptionGroup optionGroup0 = new OptionGroup();
      Options options2 = options1.addOptionGroup(optionGroup0);
      optionGroup0.setRequired(false);
      options2.hasOption(" ");
      options1.getOptions();
      options1.getMatchingOptions("--");
      options1.hasOption("%NSzF:0VawY]p>DXW.");
      helpFormatter0.printOptions(mockPrintWriter0, 74, options2, 0, 0);
      helpFormatter0.setOptPrefix("cmdLineSyntax not provided");
      helpFormatter0.setLongOptSeparator("wt9Ed9Ic");
      helpFormatter0.getDescPadding();
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, (-2282), 0, "");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = HelpFormatter.DEFAULT_OPT_PREFIX;
      Options options0 = new Options();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0);
      options0.getOptionGroups();
      helpFormatter0.printHelp("-", "", options0, "");
      Options options1 = new Options();
      helpFormatter0.renderOptions((StringBuffer) null, 1193, options1, 5, 600);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getNewLine();
      Options options0 = new Options();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0);
      options0.getOptionGroups();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 3, "\n", "%9tGAk", options0, (-1908), 3, "\n", false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getNewLine();
      String string0 = " | ";
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      options0.addOptionGroup(optionGroup0);
      helpFormatter0.printHelp(63, "{Mf]&XX}$", (String) null, options0, " ] [ long ", false);
      helpFormatter0.getWidth();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.setSyntaxPrefix((String) null);
      // Undeclared exception!
      try { 
        helpFormatter1.printHelp(74, "*Y#(s>6", "--", options0, "-", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = new Options();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0);
      String string0 = "]";
      String string1 = "<";
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, (-1054), "<", "]", options1, 983, 1, "]", true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getNewLine();
      Options options0 = new Options();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0);
      options0.getOptionGroups();
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 57, "%#=bw\"nW]Z", "org.apache.commons.cli.OptionGroup", options0, 1394, 426, "]", true);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      options0.hasShortOption("-");
      Options options1 = options0.addOptionGroup(optionGroup0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("-");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0, false);
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 62, "x*N,`iq*E9]", options1);
      helpFormatter0.getDescPadding();
      StringBuffer stringBuffer0 = new StringBuffer(" ");
      helpFormatter0.renderOptions(stringBuffer0, 62, options0, 62, 62);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      options0.hasShortOption("");
      Options options1 = new Options();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 74, "Nk", "]", options1, (-1054), 1394, "]", true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getNewLine();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      helpFormatter0.setArgName(" | ");
      helpFormatter0.printHelp(10, "\n", " | ", options1, (String) null, false);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) null, 1, "", "^oYO>3b9@", options1, 10, 1, "cmdLineSyntax not provided", true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      PrintWriter printWriter0 = null;
      Options options1 = options0.addOption((String) null, true, "&kJCNz,4, 8TX@");
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage((PrintWriter) null, 20, "", options1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = options0.addOption("0", false, "R38edBeQh8~`\u0003\"<^");
      OptionGroup optionGroup0 = new OptionGroup();
      Options options2 = options1.addOptionGroup(optionGroup0);
      options2.getOptions();
      Option option0 = new Option("arg", false, "--");
      options1.addOption(option0);
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte)83;
      byteArray0[4] = (byte)83;
      byteArray0[5] = (byte)83;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0);
      // Undeclared exception!
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, (int) (byte)0, "]", "", options2, (-1054), (int) (byte)83, "Nk", true);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getNewLine();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      helpFormatter0.setArgName(" | ");
      helpFormatter0.printHelp(10, "\n", " | ", options1, (String) null, false);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-113);
      byteArray0[1] = (byte)113;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, (int) (byte)113, (String) null, " | ", options0, (int) (byte) (-113), (-1054), "' contains an illegal character : '", false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("", options0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = options0.addOption("0", false, "R38edBeQh8~`\u0003\"<^");
      OptionGroup optionGroup0 = new OptionGroup();
      Options options2 = options1.addOptionGroup(optionGroup0);
      options2.getOptions();
      Option option0 = new Option("arg", false, "--");
      options1.addOption(option0);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)64;
      byteArray0[1] = (byte)83;
      byteArray0[2] = (byte)64;
      byteArray0[3] = (byte)64;
      byteArray0[4] = (byte)83;
      byteArray0[5] = (byte)83;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, (int) (byte)64, "]", "", options2, (-1054), (int) (byte)83, "Nk", true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = options0.addOption("w", false, "R38edBeQh8~`\u0003\"<^");
      OptionGroup optionGroup0 = new OptionGroup();
      Options options2 = options1.addOptionGroup(optionGroup0);
      options2.getOptions();
      Option option0 = new Option("arg", false, "f&");
      Options options3 = options1.addOption(option0);
      Option option1 = new Option("arg", "tTdU*");
      options2.addOption(option1);
      helpFormatter0.printHelp("f&", "f&", options3, "has already been selected: '");
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      OptionGroup optionGroup1 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup1);
      String string0 = "";
      helpFormatter0.setArgName("");
      Options options2 = options1.addOptionGroup(optionGroup0);
      boolean boolean0 = false;
      // Undeclared exception!
      helpFormatter0.printHelp(0, " ", " ", options2, "", false);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLongOptPrefix();
      MockFile mockFile0 = new MockFile("--", "MaU!h8n\"o+");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) null);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)120;
      byteArray0[1] = (byte) (-19);
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte) (-83);
      byteArray0[5] = (byte)64;
      byteArray0[6] = (byte)83;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(printWriter0, (-3266), "MaU!h8n\"o+", "The option '", (Options) null, 313, (-403), "The option '", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLeftPadding(3);
      helpFormatter0.rtrim(" ");
      helpFormatter0.getOptPrefix();
      helpFormatter0.getOptPrefix();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      helpFormatter0.defaultWidth = (-6171);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("7nT.@<3", "' contains an illegal character : '", options0, " ");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      options0.hasOption("-");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      helpFormatter0.printHelp(568, "0", "line.separator", options0, "line.separator");
      helpFormatter0.getWidth();
      helpFormatter0.setOptionComparator((Comparator) null);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      options0.addOption("0", false, "R38edBeQh8~`\u0003\"<^");
      OptionGroup optionGroup0 = new OptionGroup();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.setWidth((-2587));
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage((PrintWriter) null, (-2587), "arg", options0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      // Undeclared exception!
      helpFormatter1.printUsage((PrintWriter) null, 1, "%C=%`c_]SHK", options0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLeftPadding(2140);
      helpFormatter0.defaultNewLine = "";
      helpFormatter0.rtrim("");
      Comparator comparator0 = helpFormatter0.getOptionComparator();
      helpFormatter0.getOptPrefix();
      helpFormatter0.setOptionComparator(comparator0);
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("", true, "");
      options0.hasLongOption("");
      Options options1 = options0.addOption("", "-", true, "JvpP,D?RbANbfLk");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      options0.toString();
      helpFormatter0.printHelp(1487, "JvpP,D?RbANbfLk", "", options0, "-", true);
      options0.addOption("", true, "@]Q~bSgiwsCwCe");
      Options options2 = options1.addOption(option0);
      helpFormatter0.printHelp("JvpP,D?RbANbfLk", "@]Q~bSgiwsCwCe", options2, "");
      helpFormatter0.getNewLine();
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = options0.addOption("0", false, "");
      OptionGroup optionGroup0 = new OptionGroup();
      Options options2 = options1.addOptionGroup(optionGroup0);
      options2.getOptions();
      Option option0 = new Option("arg", false, "f&");
      File file0 = MockFile.createTempFile("YRQ(E?U<JgpL1?K2^&W", "--");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) "";
      objectArray0[1] = (Object) "f&";
      PrintWriter printWriter0 = mockPrintWriter1.format("0", objectArray0);
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage(printWriter0, (-2), "={\"Y");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Options options0 = new Options();
      HelpFormatter helpFormatter0 = new HelpFormatter();
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage((PrintWriter) null, (-2), "", options0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage((PrintWriter) null, 3863, "", (Options) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer("org.apache.commons.cli.Options");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      stringBuffer0.append(false);
      helpFormatter0.renderWrappedText(stringBuffer0, 48, 48, " ");
      helpFormatter0.setDescPadding((-389));
      helpFormatter0.getArgName();
      helpFormatter0.getLongOptSeparator();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      helpFormatter0.getArgName();
      helpFormatter0.findWrapPos("--", 3262, 3262);
      helpFormatter0.findWrapPos(" ", (-1), 3262);
      helpFormatter0.getWidth();
      helpFormatter0.getArgName();
      helpFormatter0.rtrim(" ");
      Options options0 = new Options();
      Options options1 = options0.addOption("arg", false, "");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(" ", "arg", options1, (String) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLeftPadding(2140);
      helpFormatter0.getOptPrefix();
      Comparator comparator0 = helpFormatter0.getOptionComparator();
      helpFormatter0.setOptionComparator(comparator0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) mockPrintWriter0;
      Object object0 = new Object();
      objectArray0[1] = object0;
      objectArray0[2] = (Object) comparator0;
      objectArray0[3] = (Object) "-";
      objectArray0[4] = (Object) "-";
      PrintWriter printWriter0 = mockPrintWriter0.format("!", objectArray0);
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped(printWriter0, 2140, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLeftPadding(10);
      String string0 = "";
      helpFormatter0.rtrim((String) null);
      Comparator comparator0 = helpFormatter0.getOptionComparator();
      helpFormatter0.getOptPrefix();
      helpFormatter0.findWrapPos("-", 2140, 2140);
      helpFormatter0.setOptionComparator(comparator0);
      Options options0 = new Options();
      Option option0 = null;
      try {
        option0 = new Option("-", false, "-");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal option name '-'
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = options0.addOption("0", false, "");
      OptionGroup optionGroup0 = new OptionGroup();
      Options options2 = options1.addOptionGroup(optionGroup0);
      options2.getOptions();
      Option option0 = new Option("arg", false, "f&");
      options1.addOption(option0);
      Option option1 = new Option("arg", "tTdU*");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "usage: ");
      Options options3 = options2.addOption(option1);
      helpFormatter0.printHelp("CbGU'", "@p%]MC`d#)t2 Dq", options3, (String) null);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Vo2.#{$I`u");
      HelpFormatter helpFormatter0 = new HelpFormatter();
      FileSystemHandling.shouldAllThrowIOExceptions();
      helpFormatter0.setLongOptPrefix("Vo2.#{$I`u");
      Options options0 = new Options();
      options0.hasShortOption("[?t2Gnu:HWW");
      options0.getOption("");
      options0.hasOption("V}");
      helpFormatter0.printHelp("Vo2.#{$I`u", "Vo2.#{$I`u", options0, "Vo2.#{$I`u");
      helpFormatter0.defaultOptPrefix = "";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      helpFormatter0.defaultDescPad = 69;
      helpFormatter0.findWrapPos("org.apache.commons.cli.Option", 2446, 68);
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.getOptPrefix();
      helpFormatter0.setOptPrefix("V}");
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.getSyntaxPrefix();
      helpFormatter0.getNewLine();
      helpFormatter0.getWidth();
      helpFormatter0.getNewLine();
      helpFormatter0.getNewLine();
      helpFormatter0.getSyntaxPrefix();
      helpFormatter0.getDescPadding();
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setSyntaxPrefix("");
      helpFormatter0.createPadding(0);
      helpFormatter0.getSyntaxPrefix();
      helpFormatter0.getDescPadding();
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLeftPadding(2140);
      helpFormatter0.defaultNewLine = "usage: ";
      helpFormatter0.rtrim("");
      helpFormatter0.getOptPrefix();
      Comparator comparator0 = helpFormatter0.getOptionComparator();
      helpFormatter0.getOptPrefix();
      helpFormatter0.setOptionComparator(comparator0);
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      String string0 = "{\"\\uI9._~sbk021.";
      helpFormatter0.printHelp(13, "Cannot add value, list full.", string0, options0, "YaNL6OC5N7ML&V]b>dA");
      helpFormatter0.getWidth();
      helpFormatter0.printHelp(",|HyW^?", options0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLeftPadding(2140);
      helpFormatter0.defaultNewLine = "";
      helpFormatter0.rtrim("");
      helpFormatter0.getOptPrefix();
      Comparator comparator0 = helpFormatter0.getOptionComparator();
      helpFormatter0.getOptPrefix();
      helpFormatter0.setOptionComparator(comparator0);
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("", true, "");
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockPrintStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(objectOutputStream0, true);
      options0.addOption("", "-", true, "JvpP,D?RbANbfLk");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      helpFormatter0.printHelp(1487, "JvpP,D?RbANbfLk", "", options0, "-", true);
      Options options1 = options0.addOption("", true, "@]Q~bSgiwsCwCe");
      helpFormatter0.printHelp("d'", "-", options1, "org.apache.commons.cli.Util");
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLeftPadding(2140);
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      String string0 = "XekIC|:k)0Nf";
      helpFormatter0.setArgName("XekIC|:k)0Nf");
      helpFormatter0.printHelp(2140, "A(pqRA", "jr*$13l`a9<;H'", options1, "", false);
      helpFormatter0.setLongOptSeparator("");
      StringWriter stringWriter0 = new StringWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
      stringWriter0.write(" bK5`B9=");
      int int0 = 1;
      helpFormatter0.printOptions(mockPrintWriter0, 1, options1, 0, 1);
      boolean boolean0 = true;
      helpFormatter0.printHelp("A CloneNotSupportedException was thrown: ", " bK5`B9=", options0, " bK5`B9=", true);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.getWidth();
      helpFormatter1.printUsage((PrintWriter) mockPrintWriter0, 2, "jr*$13l`a9<;H'");
      // Undeclared exception!
      try { 
        options1.addOption("\n", false, "usage: ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal option name '
         // '
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage((PrintWriter) null, 47, "={\"Y");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLeftPadding(2140);
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      String string0 = "%N+xRMfM\"hE'9'EbXw3";
      helpFormatter0.setArgName("%N+xRMfM\"hE'9'EbXw3");
      helpFormatter0.printHelp(65, ":12J9U<B@", "2", options1, "2", true);
      helpFormatter0.setLongOptSeparator("");
      StringWriter stringWriter0 = new StringWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
      stringWriter0.write("usage: ");
      // Undeclared exception!
      try { 
        helpFormatter0.printOptions(mockPrintWriter0, 2, options1, (-2), 2140);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLeftPadding(2140);
      helpFormatter0.rtrim(" ");
      helpFormatter0.getOptPrefix();
      Comparator comparator0 = helpFormatter0.getOptionComparator();
      helpFormatter0.getOptPrefix();
      helpFormatter0.setOptionComparator(comparator0);
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      // Undeclared exception!
      helpFormatter1.printHelp(1, ">", "usage: ", options0, "-");
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLeftPadding(2140);
      helpFormatter0.rtrim(" ");
      helpFormatter0.getOptPrefix();
      Comparator comparator0 = helpFormatter0.getOptionComparator();
      helpFormatter0.getOptPrefix();
      helpFormatter0.setOptionComparator(comparator0);
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      helpFormatter0.printHelp(13, "7nT.@<3", "-", options0, "Cannot add value, list full.");
      helpFormatter0.getWidth();
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getNewLine();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      helpFormatter0.setArgName(" | ");
      helpFormatter0.getOptPrefix();
      helpFormatter0.findWrapPos(";|3\"sOT0_d%$)", (-2), 5195);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter1.setOptionComparator(comparator0);
      Options options2 = new Options();
      OptionGroup optionGroup1 = new OptionGroup();
      HelpFormatter helpFormatter2 = new HelpFormatter();
      // Undeclared exception!
      helpFormatter2.printHelp(1, "arg", "", options1, "--");
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getNewLine();
      Options options0 = new Options();
      Options options1 = new Options();
      helpFormatter0.printHelp(90, "\n", " -Te^{nOaW*<q3hq", options1, " | ");
      helpFormatter0.getWidth();
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("-");
      helpFormatter0.setDescPadding((-1));
      Options options0 = new Options();
      helpFormatter0.setLongOptSeparator("");
      helpFormatter0.defaultLeftPad = 74;
      Options options1 = options0.addOption("arg", "", false, "wt9Ed9Ic");
      OptionGroup optionGroup0 = new OptionGroup();
      Options options2 = options1.addOptionGroup(optionGroup0);
      optionGroup0.setRequired(false);
      options2.hasOption(" ");
      options1.getOptions();
      options1.hasOption("%NSzF:0VawY]p>DXW.");
      helpFormatter0.printOptions(mockPrintWriter0, 74, options2, 0, 0);
      helpFormatter0.setOptPrefix("cmdLineSyntax not provided");
      helpFormatter0.setLongOptSeparator("wt9Ed9Ic");
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, (-1), 0, "");
      helpFormatter0.getLongOptPrefix();
      StringBuffer stringBuffer0 = new StringBuffer();
      helpFormatter0.renderWrappedText(stringBuffer0, 7, (-1574), " 4");
      helpFormatter0.getSyntaxPrefix();
      helpFormatter0.setOptPrefix("--");
      helpFormatter0.getOptPrefix();
      helpFormatter0.getLongOptSeparator();
      helpFormatter0.findWrapPos("--", (-2371), 74);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLeftPadding(2140);
      helpFormatter0.createPadding(2698);
      StringBuffer stringBuffer0 = new StringBuffer(3);
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      String string0 = "";
      Option option0 = new Option((String) null, "");
      options1.helpOptions();
      options1.addOption(option0);
      // Undeclared exception!
      try { 
        helpFormatter0.renderOptions(stringBuffer0, (-2), options1, 30, 1355);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultLongOptPrefix = null;
      helpFormatter0.createPadding(0);
      StringBuffer stringBuffer0 = new StringBuffer(1);
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      Option option0 = new Option("arg", (String) null);
      options1.helpOptions();
      helpFormatter0.renderOptions(stringBuffer0, (-1), options0, 0, 1706);
      options1.toString();
      int int0 = 1;
      // Undeclared exception!
      try { 
        helpFormatter0.renderOptions(stringBuffer0, 1, options0, 64, (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLeftPadding(2140);
      helpFormatter0.defaultNewLine = "";
      helpFormatter0.rtrim("");
      helpFormatter0.getOptPrefix();
      helpFormatter0.getOptionComparator();
      helpFormatter0.getOptPrefix();
      // Undeclared exception!
      try { 
        helpFormatter0.findWrapPos((String) null, 2140, 2140);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLeftPadding(2140);
      helpFormatter0.defaultNewLine = "";
      helpFormatter0.rtrim("");
      helpFormatter0.getOptPrefix();
      Comparator comparator0 = helpFormatter0.getOptionComparator();
      helpFormatter0.getOptPrefix();
      helpFormatter0.findWrapPos("d'", 2140, 2140);
      helpFormatter0.setOptionComparator(comparator0);
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("", true, "");
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockPrintStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(objectOutputStream0, true);
      Options options1 = options0.addOption("", "-", true, "JvpP,D?RbANbfLk");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      helpFormatter0.printOptions(mockPrintWriter0, 1487, options1, 31, 173);
      helpFormatter0.printHelp(1487, "JvpP,D?RbANbfLk", "", options0, "-", true);
      Options options2 = options0.addOption("", true, "@]Q~bSgiwsCwCe");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("", "-", options2, "org.apache.commons.cli.Util");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLeftPadding(2140);
      helpFormatter0.defaultNewLine = "";
      helpFormatter0.rtrim("");
      helpFormatter0.getOptPrefix();
      Comparator comparator0 = helpFormatter0.getOptionComparator();
      helpFormatter0.getOptPrefix();
      helpFormatter0.findWrapPos("", 2140, 2140);
      helpFormatter0.setOptionComparator(comparator0);
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("", true, "");
      OptionGroup optionGroup1 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup1);
      helpFormatter0.printHelp(4372, "|+G%|}%OgR1Zy?u", "783[-K&ZDRBrI<ZJX", options1, "", true);
      helpFormatter0.getDescPadding();
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLeftPadding(2140);
      helpFormatter0.defaultNewLine = "";
      helpFormatter0.rtrim("");
      helpFormatter0.getOptPrefix();
      Comparator comparator0 = helpFormatter0.getOptionComparator();
      helpFormatter0.getOptPrefix();
      helpFormatter0.findWrapPos("d'", 2140, 2140);
      helpFormatter0.setOptionComparator(comparator0);
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("", true, "");
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockPrintStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(objectOutputStream0, true);
      Options options1 = options0.addOption("", "-", true, "JvpP,D?RbANbfLk");
      helpFormatter0.printOptions(mockPrintWriter0, 1487, options1, 31, 173);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("", "-W", options0, "", true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer();
      helpFormatter0.renderWrappedText(stringBuffer0, 3132, 781, "' was specified but an option from this group ");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("-");
      helpFormatter0.setDescPadding((-1));
      Options options0 = new Options();
      helpFormatter0.setLongOptSeparator("");
      Options options1 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((-1), "wt9Ed9Ic", "=0^4Mhrm", options1, "xU!");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("-");
      int int0 = 74;
      helpFormatter0.setDescPadding((-1));
      Options options0 = new Options();
      helpFormatter0.setLongOptSeparator("");
      helpFormatter0.defaultLeftPad = 74;
      Options options1 = options0.addOption("arg", "", false, "wt9Ed9Ic");
      OptionGroup optionGroup0 = new OptionGroup();
      Options options2 = options1.addOptionGroup(optionGroup0);
      optionGroup0.setRequired(false);
      options2.hasOption(" ");
      options1.getOptions();
      options1.hasOption("%NSzF:0VawY]p>DXW.");
      helpFormatter0.printOptions(mockPrintWriter0, 74, options2, 0, 0);
      helpFormatter0.setOptPrefix("cmdLineSyntax not provided");
      helpFormatter0.setLongOptSeparator("wt9Ed9Ic");
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, (-2282), 0, "");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLeftPadding(2140);
      helpFormatter0.defaultNewLine = "";
      helpFormatter0.rtrim("");
      helpFormatter0.getOptPrefix();
      Comparator comparator0 = helpFormatter0.getOptionComparator();
      helpFormatter0.getOptPrefix();
      helpFormatter0.findWrapPos("", 2140, 2140);
      helpFormatter0.setOptionComparator(comparator0);
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      String string0 = "{\"\\uI9._~sbk021.";
      helpFormatter0.printHelp(13, "Cannot add value, list full.", string0, options0, "YaNL6OC5N7ML&V]b>dA");
      helpFormatter0.getWidth();
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = 2140;
      helpFormatter0.setLeftPadding(2140);
      helpFormatter0.rtrim("ft)@");
      helpFormatter0.getOptPrefix();
      helpFormatter0.getOptionComparator();
      helpFormatter0.createPadding(74);
      // Undeclared exception!
      try { 
        helpFormatter0.findWrapPos("-", 79, (-2209));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer(3);
      Options options0 = new Options();
      helpFormatter0.printHelp(568, " ", " ", options0, "CI8poN,da;8UX@I)I@z");
      helpFormatter0.getWidth();
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.rtrim("");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "");
      StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 764, 1164, "Z[G%JZP16RKR:");
      // Undeclared exception!
      try { 
        helpFormatter0.renderOptions(stringBuffer1, 764, (Options) null, 1164, 1164);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer();
      helpFormatter0.renderWrappedText(stringBuffer0, 1172, 38, "A CloneNotSupportedException was thrown: ");
      // Undeclared exception!
      try { 
        helpFormatter0.renderOptions(stringBuffer0, 42, (Options) null, 49, 1604);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.setOptionComparator(comparator0);
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      options0.addOptionGroup(optionGroup0);
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.setOptPrefix((String) null);
      helpFormatter0.getOptPrefix();
      helpFormatter0.getLongOptSeparator();
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultLongOptPrefix = null;
      helpFormatter0.createPadding(0);
      StringBuffer stringBuffer0 = new StringBuffer(1);
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      Option option0 = new Option("arg", (String) null);
      options1.helpOptions();
      Options options2 = options1.addOption(option0);
      helpFormatter0.renderOptions(stringBuffer0, (-1), options0, 0, 1706);
      options2.toString();
      int int0 = 1;
      // Undeclared exception!
      try { 
        helpFormatter0.renderOptions(stringBuffer0, 1, options0, 64, (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultLongOptPrefix = null;
      Options options0 = new Options();
      helpFormatter0.printHelp("rx53pp)#9bP%X|p?^1", options0, false);
      int int0 = 0;
      helpFormatter0.createPadding(0);
      int int1 = 13;
      StringBuffer stringBuffer0 = new StringBuffer(13);
      Options options1 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options2 = options1.addOptionGroup(optionGroup0);
      Option option0 = new Option("arg", (String) null);
      options2.helpOptions();
      Options options3 = options2.addOption(option0);
      // Undeclared exception!
      try { 
        helpFormatter0.renderOptions(stringBuffer0, (-1), options3, (-1490), (-2));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getDescPadding();
      String string0 = "|(7x/aP[<o*X|gZGk~";
      String string1 = "";
      Options options0 = new Options();
      String string2 = "";
      Options options1 = options0.addOption("", "", false, "-");
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        options1.addOption("--", false, "|(7x/aP[<o*X|gZGk~");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The option '--' contains an illegal character : '-'
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLeftPadding(2140);
      helpFormatter0.defaultNewLine = "";
      helpFormatter0.rtrim("");
      Comparator comparator0 = helpFormatter0.getOptionComparator();
      helpFormatter0.getOptPrefix();
      helpFormatter0.findWrapPos("--", 2140, 2140);
      helpFormatter0.setOptionComparator(comparator0);
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("", true, "");
      options0.hasLongOption("");
      Options options1 = options0.addOption("", "-", true, "JvpP,D?RbANbfLk");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      helpFormatter0.printHelp(74, "JvpP,D?RbANbfLk", "", options0, "-", true);
      options0.addOption("", true, "@]Q~bSgiwsCwCe");
      Options options2 = options1.addOption(option0);
      helpFormatter0.printHelp("JvpP,D?RbANbfLk", "@]Q~bSgiwsCwCe", options2, "");
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        helpFormatter0.renderWrappedText(stringBuffer0, (-2), 2140, "");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer(3);
      int int0 = (-1802);
      // Undeclared exception!
      try { 
        helpFormatter0.renderWrappedText(stringBuffer0, (-352), (-1802), "A CloneNotSupportedException was thrown: ");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = null;
      helpFormatter0.setOptPrefix("");
      Options options0 = null;
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('&');
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter1);
      int int0 = 857;
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 857, 857, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getNewLine();
      int int0 = (-2);
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      helpFormatter0.setArgName(" | ");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((-2), "\n", " | ", options1, (String) null, false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "";
      helpFormatter0.setArgName("");
      String string1 = "";
      int int0 = (-154);
      helpFormatter0.setLeftPadding((-154));
      helpFormatter0.findWrapPos("", 2412, 2412);
      String string2 = "'";
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("'");
      String string3 = " ";
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      // Undeclared exception!
      try { 
        options1.addOption("\"rFR>f1amc7aSp@I^yG", true, "arg");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The option '\"rFR>f1amc7aSp@I^yG' contains an illegal character : '\"'
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultNewLine = "uFI1og80JoXLHi_3lbd";
      helpFormatter0.setNewLine("5;6{[aw'EB+8`wMTO");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      Locale locale0 = Locale.GERMANY;
      Object[] objectArray0 = new Object[6];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      mockPrintWriter0.print(1);
      objectArray0[2] = (Object) "   ";
      objectArray0[3] = (Object) "5;6{[aw'EB+8`wMTO";
      Object object2 = new Object();
      Locale locale1 = Locale.CHINESE;
      locale0.getDisplayName(locale1);
      Locale locale2 = Locale.CANADA;
      Locale.setDefault(locale2);
      objectArray0[4] = object2;
      objectArray0[5] = (Object) "5;6{[aw'EB+8`wMTO";
      mockPrintWriter0.format(locale0, "usage: ", objectArray0);
      mockPrintWriter0.print(1L);
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 1558, "5;6{[aw'EB+8`wMTO");
      helpFormatter0.getDescPadding();
      helpFormatter0.setLongOptPrefix((String) null);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "";
      helpFormatter0.setLongOptPrefix("");
      helpFormatter0.setNewLine((String) null);
      helpFormatter0.defaultNewLine = "";
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.setOptionComparator(comparator0);
      helpFormatter0.getOptPrefix();
      Options options0 = new Options();
      boolean boolean0 = true;
      Options options1 = options0.addOption("", true, "");
      OptionGroup optionGroup0 = new OptionGroup();
      Options options2 = options1.addOptionGroup(optionGroup0);
      // Undeclared exception!
      try { 
        options2.addOption((Option) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.Options", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLeftPadding(2140);
      helpFormatter0.rtrim("");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(48, "n`", "arg", (Options) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockFile mockFile0 = new MockFile("-", "--");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      mockPrintWriter0.close();
      Locale locale0 = new Locale("The option '", "Vxy*9d=W1X{");
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) mockFile0;
      objectArray0[1] = (Object) helpFormatter0;
      objectArray0[2] = (Object) "The option '";
      objectArray0[3] = (Object) mockPrintWriter0;
      objectArray0[4] = (Object) "The option '";
      objectArray0[5] = (Object) "Vxy*9d=W1X{";
      Object object0 = new Object();
      objectArray0[6] = object0;
      objectArray0[7] = (Object) mockFile0;
      objectArray0[8] = (Object) locale0;
      mockPrintWriter0.printf(locale0, "The option '", objectArray0);
      mockPrintWriter0.print('O');
      // Undeclared exception!
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 0, "T:WZ_f5z_?R#(=j\"B");
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getArgName();
      Options options0 = new Options();
      helpFormatter0.printHelp(",@AV@;:1TT$TG", "arg", options0, "E)6", true);
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      Options options1 = new Options();
      mockPrintWriter0.print((double) 3);
      OptionGroup optionGroup0 = new OptionGroup();
      options1.getOption("-");
      options1.addOption("arg", false, "TV<<1:x{_d-4$dO");
      Options options2 = options1.addOptionGroup(optionGroup0);
      options1.toString();
      mockPrintWriter0.print(false);
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 9, "7v8;", "[", options2, 9, 1534, "kUYb");
      mockPrintWriter0.append('M');
      helpFormatter0.createPadding(0);
      String string0 = helpFormatter0.getLongOptSeparator();
      assertEquals(" ", string0);
      
      helpFormatter0.setWidth(31);
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 31, "kUYb");
      helpFormatter0.setArgName("gOvhF6z{");
      assertEquals(" ", helpFormatter0.getLongOptSeparator());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = 1481;
      helpFormatter0.defaultLongOptPrefix = "lNw1\"Wc";
      String string0 = "@,Y2l8%?~T^`";
      helpFormatter0.setLongOptSeparator("");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(1481, "lNw1\"Wc", "@,Y2l8%?~T^`", (Options) null, "lNw1\"Wc");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultLongOptPrefix = "ga/5Cl_^dk ";
      helpFormatter0.setLeftPadding(0);
      helpFormatter0.setNewLine("ga/5Cl_^dk ");
      MockFileOutputStream mockFileOutputStream0 = null;
      try {
        mockFileOutputStream0 = new MockFileOutputStream("", false);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "   ";
      helpFormatter0.defaultNewLine = "uFI1og80JoXLHi_3lbd";
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("uFI1og80JoXLHi_3lbd", "   ", (Options) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "";
      String string1 = "ykOU";
      Options options0 = null;
      String string2 = "";
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("", "ykOU", (Options) null, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      assertEquals("-", helpFormatter0.getOptPrefix());
      
      helpFormatter0.defaultOptPrefix = "";
      String string0 = helpFormatter0.getArgName();
      assertEquals("arg", string0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "The option '";
      helpFormatter0.defaultLongOptPrefix = "The option '";
      helpFormatter0.getOptPrefix();
      helpFormatter0.getLeftPadding();
      int int0 = 1053;
      String string1 = null;
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        options0.addOption("-", " ", false, "-");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal option name '-'
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Option option0 = new Option("arg", true, "-");
      Options options1 = options0.addOption(option0);
      option0.setRequired(true);
      String string0 = "S'.olA)&J";
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((-3487), (String) null, (String) null, options1, "S'.olA)&J");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("-");
      helpFormatter0.setDescPadding((-1));
      Options options0 = new Options();
      helpFormatter0.setLongOptSeparator("");
      Options options1 = options0.addOption("arg", "", false, "wt9Ed9Ic");
      OptionGroup optionGroup0 = new OptionGroup();
      Options options2 = options1.addOptionGroup(optionGroup0);
      optionGroup0.setRequired(false);
      options2.hasOption(" ");
      options1.getOptions();
      options1.hasOption("%NSzF:0VawY]p>DXW.");
      helpFormatter0.printOptions(mockPrintWriter0, 74, options2, 0, 0);
      helpFormatter0.setOptPrefix("cmdLineSyntax not provided");
      helpFormatter0.setLongOptSeparator("wt9Ed9Ic");
      String string0 = ", ";
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((-1963), "6b2D81", ", ", options1, "");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultLongOptPrefix = null;
      int int0 = 0;
      helpFormatter0.createPadding(0);
      int int1 = 13;
      StringBuffer stringBuffer0 = new StringBuffer(13);
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      Option option0 = new Option("arg", (String) null);
      options1.helpOptions();
      Options options2 = options1.addOption(option0);
      // Undeclared exception!
      try { 
        helpFormatter0.renderOptions(stringBuffer0, 13, options2, (-1), (-2));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLongOptPrefix();
      // Undeclared exception!
      try { 
        helpFormatter0.createPadding((-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getSyntaxPrefix();
      helpFormatter0.getOptPrefix();
      helpFormatter0.setWidth((-3495));
      assertEquals((-3495), helpFormatter0.defaultWidth);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "L<g2Us?";
      int int0 = 0;
      String string1 = " [ARG]";
      helpFormatter0.setSyntaxPrefix(" [ARG]");
      File file0 = MockFile.createTempFile("arg", "-");
      MockFile mockFile0 = new MockFile(file0, " [ARG]");
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter(mockFile0, "arg");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // arg
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = helpFormatter0.rtrim("]i HT-c~F&@");
      assertEquals(" ", helpFormatter0.getLongOptSeparator());
      assertEquals("usage: ", helpFormatter0.getSyntaxPrefix());
      assertEquals("arg", helpFormatter0.getArgName());
      assertEquals(1, helpFormatter0.defaultLeftPad);
      assertEquals(3, helpFormatter0.defaultDescPad);
      assertEquals(74, helpFormatter0.defaultWidth);
      assertEquals("--", helpFormatter0.getLongOptPrefix());
      assertEquals("-", helpFormatter0.getOptPrefix());
      assertEquals("]i HT-c~F&@", string0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLeftPadding(2140);
      helpFormatter0.defaultNewLine = "";
      helpFormatter0.rtrim("");
      helpFormatter0.getOptPrefix();
      Comparator comparator0 = helpFormatter0.getOptionComparator();
      helpFormatter0.getOptPrefix();
      helpFormatter0.findWrapPos("", 2140, 2140);
      helpFormatter0.setOptionComparator(comparator0);
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("", true, "");
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      Options options1 = options0.addOptionGroup(optionGroup1);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(10, "", "", options1, "Kp1ah^9^2H*GS[ t", true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = helpFormatter0.createPadding(0);
      assertEquals("--", helpFormatter0.getLongOptPrefix());
      assertEquals("-", helpFormatter0.getOptPrefix());
      assertEquals("arg", helpFormatter0.getArgName());
      assertEquals(74, helpFormatter0.defaultWidth);
      assertEquals(3, helpFormatter0.defaultDescPad);
      assertEquals("usage: ", helpFormatter0.getSyntaxPrefix());
      assertEquals(" ", helpFormatter0.getLongOptSeparator());
      assertEquals("", string0);
      assertEquals(1, helpFormatter0.defaultLeftPad);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "";
      helpFormatter0.setLongOptSeparator("");
      String string1 = null;
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }
}
