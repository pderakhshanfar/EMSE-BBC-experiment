/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 07 18:01:23 GMT 2021
 */

package org.apache.commons.cli;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.IOException;
import java.io.PrintStream;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.io.UnsupportedEncodingException;
import java.net.URI;
import java.util.Comparator;
import java.util.Locale;
import org.apache.commons.cli.HelpFormatter;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.OptionGroup;
import org.apache.commons.cli.Options;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class HelpFormatter_ESTest extends HelpFormatter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      helpFormatter0.printHelp(3, "9vjy=>\u0006A7eV,", "arg", options0, "-", false);
      helpFormatter0.renderOptions((StringBuffer) null, 3218, options0, 3218, 3218);
      // Undeclared exception!
      try { 
        helpFormatter0.renderWrappedText((StringBuffer) null, 101, 10, "!:Hl>]wJ#l?%PP;D2]");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultLeftPad = (-1054);
      helpFormatter0.defaultLongOptPrefix = "R:hPA5GVlm";
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(3, "-", "\n", options0, "\n");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultDescPad = (-770);
      helpFormatter0.defaultWidth = (-1828);
      helpFormatter0.rtrim("");
      helpFormatter0.getWidth();
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Option option0 = new Option((String) null, " ", false, "i3YWW=vN>_1jxtH");
      optionGroup0.addOption(option0);
      Option option1 = new Option("arg", false, " ");
      optionGroup0.addOption(option1);
      Options options1 = options0.addOptionGroup(optionGroup0);
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage((PrintWriter) null, 3, "usage: ", options1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      PrintWriter printWriter0 = null;
      int int0 = 28;
      Option option0 = new Option("arg", true, "E");
      Options options1 = options0.addOption(option0);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("", options1, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Options options0 = new Options();
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setSyntaxPrefix("");
      helpFormatter0.rtrim("arg");
      helpFormatter0.getSyntaxPrefix();
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printOptions((PrintWriter) null, 11, options0, 1814, 11);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "3vu:m(tU/[w!r 6[x";
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("3vu:m(tU/[w!r 6[x", "", (Options) null, "org.apache.commons.cli.HelpFormatter$OptionComparator");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ");
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) mockPrintWriter0;
      objectArray0[1] = (Object) helpFormatter0;
      mockPrintWriter0.format("-", objectArray0);
      // Undeclared exception!
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 0, "\n");
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "";
      helpFormatter0.defaultNewLine = "";
      helpFormatter0.rtrim("");
      Options options0 = new Options();
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        helpFormatter0.renderWrappedText(stringBuffer0, 10, (-2895), "ie#9ntzHPob5Xo");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("arg", true, "gAR(s");
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      OptionGroup optionGroup2 = optionGroup1.addOption(option0);
      Options options2 = options0.addOption("Ol", true, "");
      Options options3 = options2.addOptionGroup(optionGroup2);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ");
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) options1;
      objectArray0[1] = (Object) "gAR(s";
      objectArray0[2] = (Object) options0;
      objectArray0[3] = (Object) optionGroup0;
      objectArray0[4] = (Object) options3;
      objectArray0[5] = (Object) optionGroup2;
      objectArray0[6] = (Object) optionGroup1;
      PrintWriter printWriter0 = mockPrintWriter0.printf("-", objectArray0);
      helpFormatter0.printUsage(printWriter0, (-1), "org.apache.commons.cli.OptionValidator", options2);
      helpFormatter0.getLongOptSeparator();
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultArgName = "";
      helpFormatter0.getArgName();
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.rtrim((String) null);
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option((String) null, true, "--");
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      Options options1 = options0.addOptionGroup(optionGroup1);
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage((PrintWriter) null, 9, (String) null, options1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ");
      int int0 = 0;
      Options options0 = new Options();
      mockPrintWriter0.append((CharSequence) "usage: ");
      Options options1 = options0.addOption("arg", "arg", true, " ");
      // Undeclared exception!
      try { 
        helpFormatter0.printOptions(mockPrintWriter0, (-2391), options1, (-2391), (-3957));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ");
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(63, "URv", (String) null, (Options) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setOptPrefix("");
      helpFormatter0.defaultNewLine = "";
      helpFormatter0.setNewLine("I6+/7q");
      helpFormatter0.getLongOptPrefix();
      String string0 = "";
      helpFormatter0.defaultOptPrefix = "";
      helpFormatter0.getWidth();
      helpFormatter0.getOptionComparator();
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.getOptionComparator();
      helpFormatter0.getOptPrefix();
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter("", "Vc5OVHtc7|}c5;b\"{");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // Vc5OVHtc7|}c5;b\"{
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = options0.addOption("", "arg", false, "arg");
      helpFormatter0.printHelp(3, "3vu:m(tU/[w!r 6[x", "usage: ", options0, "", false);
      String string0 = helpFormatter0.defaultSyntaxPrefix;
      helpFormatter0.printHelp(108, " | ", "", options1, (String) null);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("-");
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) "usage: ");
      // Undeclared exception!
      helpFormatter0.printHelp(printWriter0, 0, "<", "org.apache.commons.cli.Options", options1, 1, 1, " ");
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ");
      Options options0 = new Options();
      String string0 = "";
      HelpFormatter helpFormatter1 = new HelpFormatter();
      // Undeclared exception!
      helpFormatter1.printHelp(1, "usage: ", " ", options0, "usage: ");
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      options0.addOption("", "", false, "");
      options0.addOption("", false, "--");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.getSyntaxPrefix();
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      // Undeclared exception!
      helpFormatter1.renderOptions(stringBuffer0, 1, options0, 2, 2);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockFile mockFile0 = new MockFile(" ");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("", "I*pf}a", true, "6^(");
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      Options options1 = options0.addOptionGroup(optionGroup1);
      Options options2 = options1.addOption("", "-", true, "");
      options2.addOption("", false, "arg");
      helpFormatter0.printHelp((-1), "   ", "arg", options1, "", true);
      helpFormatter0.getSyntaxPrefix();
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLeftPadding((-441));
      String string0 = "";
      helpFormatter0.setArgName("");
      int int0 = 10;
      helpFormatter0.defaultNewLine = "";
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage((PrintWriter) null, 10, "[ Options: [ short ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockFile mockFile0 = new MockFile("arg");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      Options options0 = new Options();
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 3, "z", (String) null, options0, 3, 606, "org.apache.commons.cli.ParseException", false);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ");
      Object object0 = new Object();
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) helpFormatter0;
      objectArray0[1] = object0;
      objectArray0[2] = (Object) helpFormatter0;
      objectArray0[3] = (Object) mockPrintWriter0;
      PrintWriter printWriter0 = mockPrintWriter0.printf("--", objectArray0);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      int int0 = 34;
      Options options0 = new Options();
      helpFormatter1.printUsage(printWriter0, 34, "S;ncz|", options0);
      helpFormatter0.printUsage(printWriter0, 3, "usage: ");
      // Undeclared exception!
      helpFormatter1.printUsage((PrintWriter) mockPrintWriter0, 1, "--");
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter0.setLeftPadding((-2382));
      options0.addOption((String) null, "\n", true, "-");
      Options options1 = options0.addOption("", false, "--");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(3, "--", "--", options1, "\n", true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      options0.addOption((String) null, "\n", true, "-");
      Options options1 = options0.addOption("", false, "--");
      options1.addOption((String) null, false, "--");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(3, "--", "--", options1, "\n", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter$OptionComparator", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-28);
      byteArray0[1] = (byte) (-1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[2] = (byte)119;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[3] = (byte)74;
      byteArray0[4] = (byte) (-121);
      byteArray0[5] = (byte)13;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte) (-7);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      HelpFormatter helpFormatter0 = new HelpFormatter();
      FileSystemHandling.shouldAllThrowIOExceptions();
      helpFormatter0.defaultDescPad = (-2600);
      helpFormatter0.setWidth((byte) (-1));
      helpFormatter0.defaultOptPrefix = "k;Tg";
      helpFormatter0.getArgName();
      helpFormatter0.getSyntaxPrefix();
      helpFormatter0.getDescPadding();
      helpFormatter0.getOptPrefix();
      helpFormatter0.getSyntaxPrefix();
      helpFormatter0.getArgName();
      helpFormatter0.getLeftPadding();
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.createPadding(0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockFile mockFile0 = new MockFile("z");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((-304), ".", "|:<db-Y'KWg", options0, "--", false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ");
      helpFormatter0.setOptPrefix("   ");
      StringBuffer stringBuffer0 = new StringBuffer();
      helpFormatter0.renderWrappedText(stringBuffer0, 16, (-3316), "   ");
      Options options0 = new Options();
      Options options1 = options0.addOption((String) null, true, "arg");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(16, (String) null, (String) null, options1, "org.apache.commons.cli.Options", false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ");
      Options options0 = new Options();
      Locale locale0 = Locale.ITALIAN;
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) options0;
      objectArray0[1] = (Object) "Illegal option name '";
      objectArray0[2] = (Object) "line.separator";
      objectArray0[3] = (Object) "line.separator";
      objectArray0[4] = (Object) options0;
      objectArray0[5] = (Object) mockPrintWriter0;
      objectArray0[6] = (Object) options0;
      objectArray0[7] = (Object) helpFormatter0;
      PrintWriter printWriter0 = mockPrintWriter0.format(locale0, "usage: ", objectArray0);
      helpFormatter0.printHelp(printWriter0, 9, "line.separator", "]", options0, 9, 9, (String) null, false);
      helpFormatter0.getLeftPadding();
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Options options0 = new Options();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)64;
      byteArray0[1] = (byte)64;
      byteArray0[2] = (byte)64;
      byteArray0[3] = (byte)31;
      byteArray0[4] = (byte)64;
      byteArray0[5] = (byte)64;
      byteArray0[7] = (byte)64;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Options options1 = new Options();
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLongOptSeparator("");
      helpFormatter0.getLongOptSeparator();
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ");
      helpFormatter0.setOptPrefix("   ");
      StringBuffer stringBuffer0 = new StringBuffer();
      helpFormatter0.renderWrappedText(stringBuffer0, 16, (-3316), "   ");
      helpFormatter0.getLongOptPrefix();
      // Undeclared exception!
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 0, "--");
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "a5j%dNCV2N16*9<C";
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) " ");
      // Undeclared exception!
      try { 
        helpFormatter0.renderOptions(stringBuffer0, (-1615), (Options) null, (-1615), (-1615));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName(";3 \"X N*];a@C<\"v:?");
      MockFile mockFile0 = new MockFile("-", "-");
      MockFile mockFile1 = new MockFile(mockFile0, ";3 \"X N*];a@C<\"v:?");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile1);
      Options options0 = new Options();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ";3 \"X N*];a@C<\"v:?");
      // Undeclared exception!
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 1, ";3 \"X N*];a@C<\"v:?", options0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-2);
      byteArray0[1] = (byte)44;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte) (-55);
      byteArray0[4] = (byte) (-90);
      byteArray0[5] = (byte) (-107);
      byteArray0[6] = (byte)62;
      byteArray0[7] = (byte)85;
      byteArray0[8] = (byte)64;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Options options0 = new Options();
      Options options1 = options0.addOption("", "", true, "arg");
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage((PrintWriter) null, 65, ")ghfWWG_vqVo}Z;>_%", options1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "a5j%dNCV2N16*9<C";
      helpFormatter0.setArgName("a5j%dNCV2N16*9<C");
      Options options0 = new Options();
      helpFormatter0.defaultDescPad = 38;
      options0.addOption("", "XM#xhen", true, "\n");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("XM#xhen", (String) null, (Options) null, (String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      Options options1 = options0.addOption((String) null, "\n", true, "-");
      helpFormatter1.defaultOptPrefix = "usage: ";
      helpFormatter1.defaultLeftPad = 74;
      helpFormatter1.printHelp("u V+tY(/8yZbl[", " ", options1, "U#N:Xyg#lqk", true);
      int int0 = HelpFormatter.DEFAULT_LEFT_PAD;
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      String string0 = "h";
      PrintWriter printWriter0 = null;
      String string1 = "L_\"s3W^mRveC<l4a";
      int int0 = 19;
      String string2 = "*/*QOEd#P";
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage((PrintWriter) null, (-2), "Y<", options0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      Options options1 = options0.addOption((String) null, "\n", true, "-");
      Option option0 = new Option("", "b", true, " | ");
      options1.addOption(option0);
      helpFormatter1.printHelp("u V+tY(/8yZbl[", " ", options1, "--", true);
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped((PrintWriter) null, (-2377), "--");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HelpFormatter helpFormatter0 = new HelpFormatter();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-33);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      helpFormatter0.setDescPadding((byte) (-1));
      helpFormatter0.defaultDescPad = (-659);
      helpFormatter0.getOptPrefix();
      helpFormatter0.getNewLine();
      helpFormatter0.getLeftPadding();
      helpFormatter0.rtrim("-");
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("a5j%dNCV2N16*9<C");
      MockFile mockFile0 = new MockFile("", "--");
      MockFile mockFile1 = new MockFile(mockFile0, "-");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockFile1);
      Options options0 = new Options();
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter(mockPrintWriter0, false);
      PrintWriter printWriter0 = mockPrintWriter2.append('n');
      helpFormatter0.printHelp(printWriter0, 74, "line.separator", "/V698", options0, 1, 1, "Illegal option name '", false);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName(";3 \"X N*];a@C<\":?");
      MockFile mockFile0 = new MockFile("usage: ");
      MockFile mockFile1 = new MockFile(mockFile0, "i*Md");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile1);
      Options options0 = new Options();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("usage: ");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "org.apache.commons.cli.HelpFormatter$1");
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 1858, "i*Md", "i*Md", options0, 3, 1858, "", false);
      helpFormatter0.getOptionComparator();
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 44, "org.apache.commons.cli.HelpFormatter$1", options0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("a5j%dNCV2N16*9<C");
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 5, "a5j%dNCV2N16*9<C");
      helpFormatter0.getDescPadding();
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setOptPrefix("d");
      helpFormatter0.defaultNewLine = "d";
      helpFormatter0.setNewLine("I6+/7q");
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.defaultOptPrefix = "";
      helpFormatter0.getWidth();
      helpFormatter0.getOptionComparator();
      helpFormatter0.getLongOptPrefix();
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      PrintWriter printWriter0 = null;
      String string0 = "L_\"s3W^mRveC<l4a";
      int int0 = (-2);
      String string1 = "line.separator";
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) null, 44, "line.separator", "L_\"s3W^mRveC<l4a", options0, 15, (-248), "", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName(";3 \"X N*];a@C<\":?");
      MockFile mockFile0 = new MockFile("-", "-");
      MockFile mockFile1 = new MockFile(mockFile0, "YT+V");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile1);
      Options options0 = new Options();
      Options options1 = options0.addOption("Rm", true, (String) null);
      Options options2 = options1.addOption((String) null, "-", true, (String) null);
      helpFormatter0.printHelp(";3 \"X N*];a@C<\":?", options2);
      helpFormatter0.printHelp(31, "' was specified but an option from this group ", "nl", options1, "Rm");
      helpFormatter0.printHelp("YT+V", "Jqg6-7w:nQPY>0FYC", options0, "org.apache.commons.cli.Options", true);
      MockFile mockFile2 = new MockFile(";3 \"X N*];a@C<\":?");
      helpFormatter0.setLongOptPrefix(" ] [ long ");
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("a5j%dNCV2N16*9<C");
      Options options0 = new Options();
      // Undeclared exception!
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 0, "K|u</VUS{X", "", options0, 2, 2, "", true);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "--");
      FileSystemHandling.shouldAllThrowIOExceptions();
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringWriter stringWriter0 = new StringWriter(3);
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      helpFormatter0.renderWrappedText(stringBuffer0, 3, 44, "2|nK*##/C5H");
      stringBuffer0.delete(3, 44);
      stringBuffer0.append((Object) "--");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0, true);
      PrintWriter printWriter0 = mockPrintWriter0.append('(');
      helpFormatter0.printWrapped(printWriter0, 44, (-2480), "--");
      // Undeclared exception!
      try { 
        stringBuffer0.insert((-2480), (double) 1);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2480
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Option option0 = new Option("", "arg");
      options0.addOption(option0);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      Options options1 = options0.addOption((String) null, "\n", true, "-");
      helpFormatter1.printHelp("u V+tY(/8yZbl[", " ", options1, "U#N:Xyg#lqk", true);
      helpFormatter0.printHelp("\n", "   ", options1, "");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName("-");
      MockFile mockFile0 = new MockFile("\n", "");
      MockFile mockFile1 = new MockFile(mockFile0, "arg");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile1);
      Options options0 = new Options();
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 3, "*", "", options0, 3, 1451, "", false);
      helpFormatter0.getSyntaxPrefix();
      helpFormatter0.getNewLine();
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 3, "*", "org.apache.commons.cli.OptionGroup", options0, 3, 3, (String) null);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer("-");
      Options options0 = new Options();
      Options options1 = options0.addOption("arg", "", false, "");
      Options options2 = options1.addOption((String) null, false, "N`qbyLKDwa=Wh#");
      Option option0 = new Option("", "--", false, "");
      Options options3 = options2.addOption(option0);
      // Undeclared exception!
      try { 
        helpFormatter0.renderOptions(stringBuffer0, 821, options3, 821, 821);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "a5j%dNCV2N16*9<C";
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("a5j%dNCV2N16*9<C");
      Options options0 = new Options();
      Options options1 = options0.addOption("B", true, "\n");
      options1.helpOptions();
      helpFormatter0.printHelp("B", options1);
      int int0 = 0;
      // Undeclared exception!
      try { 
        mockPrintWriter0.append((CharSequence) "arg", 0, 7);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName(";3 \"X N*];a@C<\":?");
      MockFile mockFile0 = new MockFile("-", "-");
      MockFile mockFile1 = new MockFile(mockFile0, "YT+V");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile1);
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.findWrapPos((String) null, (-1), 1881);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("a5j%dNCV2N16*9<C");
      Options options0 = new Options();
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 72, "a5j%dNCV2N16*9<C", "4X\"i-nh", options0, 72, 72, "line.separator");
      helpFormatter0.getSyntaxPrefix();
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.findWrapPos("-", (-121), 2273);
      Options options0 = new Options();
      HelpFormatter helpFormatter2 = new HelpFormatter();
      helpFormatter2.getLongOptPrefix();
      StringWriter stringWriter0 = new StringWriter(2);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "--");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter1);
      Locale locale0 = Locale.FRENCH;
      Object[] objectArray0 = new Object[0];
      PrintWriter printWriter0 = mockPrintWriter0.printf(locale0, "hfk", objectArray0);
      helpFormatter2.printOptions(printWriter0, 3, options0, 846, 74);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      String string0 = "";
      int int0 = (-2);
      PrintWriter printWriter0 = null;
      String string1 = "L_\"s3W^mRveC<l4a";
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage((PrintWriter) null, 19, "*/*QOEd#P", options0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.printHelp("8Ykw", ",oW3`&*IB3Z ", options0, "8Ykw", false);
      helpFormatter0.printHelp("8Ykw", "BH\"DYit%Bo98[", options0, ",oW3`&*IB3Z ");
      helpFormatter0.findWrapPos("12nc{kKn1b", 1964, 1964);
      helpFormatter0.printHelp(1964, "8Ykw", "j}Rq0D@vDj|?'ay'W?", options0, "&i,S#@jCFV^!6R;");
      helpFormatter0.printHelp("org.apache.commons.cli.Options", "j}Rq0D@vDj|?'ay'W?", options0, "", false);
      MockFile mockFile0 = new MockFile("8Ykw");
      helpFormatter0.setLongOptPrefix((String) null);
      helpFormatter0.printHelp((-1), ",oW3`&*IB3Z ", "&i,S#@jCFV^!6R;", options0, "12nc{kKn1b", true);
      // Undeclared exception!
      try { 
        helpFormatter0.createPadding((-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName(";3 \"X N*];a@C<\":?");
      MockFile mockFile0 = new MockFile("-", "-");
      MockFile mockFile1 = new MockFile(mockFile0, "YT+V");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile1);
      Options options0 = new Options();
      Options options1 = options0.addOption("Rm", true, (String) null);
      Options options2 = options1.addOption((String) null, "-", true, (String) null);
      helpFormatter0.printHelp(";3 \"X N*];a@C<\":?", options2);
      Option option0 = null;
      try {
        option0 = new Option("ZF{", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The option 'ZF{' contains an illegal character : '{'
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName("-");
      MockFile mockFile0 = new MockFile("\n", "");
      MockFile mockFile1 = new MockFile(mockFile0, "arg");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile1);
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, (-1), "*", "org.apache.commons.cli.OptionGroup", options0, 3, (-1), (String) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.setLongOptPrefix("/6I-1]76S;!Qbz/TRv");
      options0.hasOption("9zWTe^*IGe]");
      StringBuffer stringBuffer0 = new StringBuffer("The option '");
      helpFormatter0.renderOptions(stringBuffer0, 1, options0, 2671, 64);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Option option0 = new Option("arg", "org.apache.commons.cli.OptionGroup");
      Options options1 = options0.addOption(option0);
      helpFormatter0.printHelp("8Ykw", ",oW3`&*IB3Z ", options0, "8Ykw", true);
      helpFormatter0.printHelp("8Ykw", "BH\"DYit%Bo98[", options0, ",oW3`&*IB3Z ");
      helpFormatter0.findWrapPos("12nc{kKn1b", 1964, 1964);
      MockFile mockFile0 = new MockFile(",oW3`&*IB3Z ", ">!bE+jqtWVYZx");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0, false);
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) helpFormatter0;
      objectArray0[1] = (Object) "org.apache.commons.cli.OptionGroup";
      objectArray0[2] = (Object) options1;
      PrintWriter printWriter0 = mockPrintWriter0.format("W4oM6Xj!`W}]-h", objectArray0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(printWriter0);
      Locale locale0 = Locale.CANADA;
      PrintWriter printWriter1 = mockPrintWriter1.format(locale0, ",oW3`&*IB3Z ", objectArray0);
      helpFormatter0.printWrapped(printWriter1, 33, "k)8M:cuK3(6R=)kJ");
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage((PrintWriter) null, (-2), "=lz");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      options0.hasLongOption("arg");
      helpFormatter0.printHelp("8Ykw", ",oW3`&*IB3Z ", options0, "8Ykw", false);
      helpFormatter0.printHelp("8Ykw", "BH\"DYit%Bo98[", options0, ",oW3`&*IB3Z ");
      helpFormatter0.findWrapPos("12nc{kKn1b", (-1), (-1));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(">x\"2X%PHM~<eQ$");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.printWrapped((PrintWriter) mockPrintWriter0, 3, "12nc{kKn1b");
      helpFormatter0.getOptPrefix();
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName("s`rIj$XnuZE6,q08co}");
      MockFile mockFile0 = new MockFile("\n", "s`rIj$XnuZE6,q08co}");
      MockFile mockFile1 = new MockFile(mockFile0, "s`rIj$XnuZE6,q08co}");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile1);
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, (-121), "The option '", (String) null, options0, 1, (-121), "org.apache.commons.cli.OptionValidator", false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName(";3 \"X N*];a@C<\":?");
      helpFormatter0.setOptPrefix(";3 \"X N*];a@C<\":?");
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) null, 3, "A>:R6Jv", "", options0, (-2), (-2), ";3 \"X N*];a@C<\":?");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = ",oW3`&*IB3Z ";
      Options options0 = new Options();
      helpFormatter0.printHelp("8Ykw", ",oW3`&*IB3Z ", options0, "8Ykw", false);
      helpFormatter0.printHelp("8Ykw", "BH\"DYit%Bo98[", options0, ",oW3`&*IB3Z ");
      int int0 = 1964;
      helpFormatter0.findWrapPos("12nc{kKn1b", 1964, 1964);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      String string1 = ".ha_3#DLo^=(C&0](";
      // Undeclared exception!
      try { 
        helpFormatter0.findWrapPos("usage: ", 1, (-1));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName(";3 \"X N*];a@C<\":?");
      MockFile mockFile0 = new MockFile("usage: ");
      MockFile mockFile1 = new MockFile(mockFile0, "");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile1);
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, (-1), (String) null, "", options0, (-2), (-1), (String) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Option option0 = new Option("arg", "org.apache.commons.cli.OptionGroup");
      options0.addOption(option0);
      helpFormatter0.printHelp("8Ykw", ",oW3`&*IB3Z ", options0, "8Ykw", true);
      helpFormatter0.printHelp("8Ykw", "BH\"DYit%Bo98[", options0, ",oW3`&*IB3Z ");
      String string0 = "12nc{kKn1b";
      helpFormatter0.findWrapPos("12nc{kKn1b", 1964, 1964);
      String string1 = "F\"F\"$S?e";
      // Undeclared exception!
      try { 
        MockFile.createTempFile("--", "/");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName("-");
      MockFile mockFile0 = new MockFile("\n", "");
      MockFile mockFile1 = new MockFile(mockFile0, "arg");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile1);
      Options options0 = new Options();
      int int0 = (-1);
      String string0 = "*";
      int int1 = (-1);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, (-1), "*", "", options0, (-1), 1451, "", false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName(";3 \"X N*];a@C<\":?");
      MockFile mockFile0 = new MockFile("usage: ");
      MockFile mockFile1 = new MockFile(mockFile0, "i*Md");
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.setOptionComparator(comparator0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile1);
      Options options0 = new Options();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("usage: ");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "org.apache.commons.cli.HelpFormatter$1");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 1881, "i*Md", "i*Md", options0, (-1), 1881, "", false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = 44;
      String string0 = "";
      Options options0 = new Options();
      helpFormatter0.printHelp(44, "a5j%dNCV2N16*9<C", "", options0, "pt");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("", "org.apache.commons.cli.Options", options0, (String) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.createPadding(34);
      helpFormatter0.setLongOptPrefix("");
      helpFormatter0.rtrim("");
      helpFormatter0.getSyntaxPrefix();
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName(";3 \"X N*];a@C<\":?");
      MockFile mockFile0 = new MockFile("-", "-");
      MockFile mockFile1 = new MockFile(mockFile0, "YT+V");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile1);
      Options options0 = new Options();
      // Undeclared exception!
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 1, "line.separator", (String) null, options0, 1, 1881, "Illegal option name '", false);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLongOptSeparator();
      helpFormatter0.defaultWidth = (-829);
      helpFormatter0.getOptPrefix();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      helpFormatter0.getArgName();
      helpFormatter0.getNewLine();
      FileSystemHandling.shouldAllThrowIOExceptions();
      helpFormatter0.getOptionComparator();
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLongOptPrefix("line.separator");
      helpFormatter0.getOptionComparator();
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "8Ykw";
      String string1 = ",oW3`&*IB3Z ";
      Options options0 = new Options();
      Option option0 = new Option("", "--");
      Options options1 = options0.addOption(option0);
      helpFormatter0.printHelp("8Ykw", ",oW3`&*IB3Z ", options0, "8Ykw", false);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((-2), "8Ykw", ",oW3`&*IB3Z ", options1, " | ");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      String string0 = ",oW3`&*IB3Z ";
      Options options0 = new Options();
      Option option0 = new Option("8Ykw", ",oW3`&*IB3Z ");
      options0.addOption(option0);
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string1 = "5=})p\"";
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("", "*v)^(R~-]'s", options0, "5=})p\"", false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName(";3 \"X N*];a@C<\":?");
      helpFormatter0.setOptPrefix(";3 \"X N*];a@C<\":?");
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) null, (-1942), "+/+z", "A>:R6Jv", options0, 0, (-1466), "+/+z");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = 0;
      Options options0 = new Options();
      Options options1 = options0.addOption("", "Ju1)IV|6Bs{$n@pvPw", false, "Ju1)IV|6Bs{$n@pvPw");
      OptionGroup optionGroup0 = new OptionGroup();
      Options options2 = options1.addOptionGroup(optionGroup0);
      Options options3 = options2.addOption("", false, "");
      // Undeclared exception!
      helpFormatter0.printHelp(0, "3vuB:m(tU/[w!r^ 6[x", "", options3, "", false);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintStream mockPrintStream0 = new MockPrintStream("\n");
      Locale locale0 = Locale.US;
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) "I0/Ko]$'*N&~og{Br";
      objectArray0[1] = (Object) helpFormatter0;
      objectArray0[2] = (Object) locale0;
      objectArray0[3] = (Object) helpFormatter0;
      objectArray0[4] = (Object) helpFormatter0;
      objectArray0[5] = (Object) mockPrintStream0;
      objectArray0[6] = (Object) helpFormatter0;
      PrintStream printStream0 = mockPrintStream0.format(locale0, "I0/Ko]$'*N&~og{Br", objectArray0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(printStream0);
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, (-1085), (-1085), "I0/Ko]$'*N&~og{Br");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Option option0 = new Option("", "--");
      options0.addOption(option0);
      helpFormatter0.printHelp("8Ykw", ",oW3`&*IB3Z ", options0, "8Ykw", false);
      helpFormatter0.printHelp("8Ykw", "BH\"DYit%Bo98[", options0, ",oW3`&*IB3Z ");
      helpFormatter0.findWrapPos("12nc{kKn1b", 1964, 1964);
      File file0 = MockFile.createTempFile("DsA36(b7Q=Y.8I1Dvb", "#P#d1>m7vf)|");
      MockFile mockFile0 = new MockFile(file0, "+-Bya$|O818");
      helpFormatter0.setOptPrefix("");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.createPadding(10);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("a5j%dNCV2N16*9<C");
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, (-1138), "a5j%dNCV2N16*9<C");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "8Ykw";
      helpFormatter0.setWidth((-3626));
      String string1 = ",oW3`&*IB3Z ";
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("8Ykw", ",oW3`&*IB3Z ", options0, "8Ykw", false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      String string0 = "--";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "--");
      FileSystemHandling.shouldAllThrowIOExceptions();
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringWriter stringWriter0 = new StringWriter(3);
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      int int0 = 0;
      String string1 = "2|nK*##/C5H";
      // Undeclared exception!
      helpFormatter0.renderWrappedText(stringBuffer0, 0, 44, "2|nK*##/C5H");
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("]");
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 31, "");
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.printHelp("8Ykw", ",oW3`&*IB3Z ", options0, "8Ykw", false);
      helpFormatter0.printHelp("8Ykw", "BH\"DYit%Bo98[", options0, ",oW3`&*IB3Z ");
      helpFormatter0.findWrapPos("12nc{kKn1b", 1964, 1964);
      helpFormatter0.printHelp(1964, "8Ykw", "j}Rq0D@vDj|?'ay'W?", options0, "&i,S#@jCFV^!6R;");
      helpFormatter0.printHelp("org.apache.commons.cli.Options", "j}Rq0D@vDj|?'ay'W?", options0, "", false);
      MockFile mockFile0 = new MockFile("8Ykw");
      URI uRI0 = MockURI.aHttpURI;
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.setDescPadding(3);
      // Undeclared exception!
      try { 
        helpFormatter1.printHelp((PrintWriter) null, (-2), "", "", options0, (-2), 74, "org.apache.commons.cli.HelpFormatter$1");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Options options0 = null;
      helpFormatter0.defaultSyntaxPrefix = "|WEQG1d\"x\"(3";
      int int0 = 0;
      helpFormatter0.setDescPadding(0);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.setOptionComparator(comparator0);
      helpFormatter0.setLeftPadding(0);
      Options options1 = new Options();
      options1.addOption("", true, "'");
      options1.getMatchingOptions("arg");
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.setArgName("' was specified but an option from this group ");
      helpFormatter0.setLongOptPrefix("[=&J@%i:pdjn");
      helpFormatter0.setArgName("");
      helpFormatter0.getLongOptPrefix();
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter("<>Fo~DI", "r73j4/(pbKSM");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // r73j4/(pbKSM
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.printHelp("8Ykw", ",oW3`&*IB3Z ", options0, "8Ykw", false);
      helpFormatter0.printHelp("8Ykw", "BH\"DYit%Bo98[", options0, ",oW3`&*IB3Z ");
      helpFormatter0.findWrapPos("12nc{kKn1b", 1964, 1964);
      helpFormatter0.printHelp(1964, "8Ykw", "j}Rq0D@vDj|?'ay'W?", options0, "&i,S#@jCFV^!6R;");
      boolean boolean0 = false;
      helpFormatter0.printHelp("org.apache.commons.cli.Options", "j}Rq0D@vDj|?'ay'W?", options0, "", false);
      String string0 = null;
      MockFile mockFile0 = new MockFile("8Ykw");
      URI uRI0 = MockURI.aHttpURI;
      URI uRI1 = MockURI.relativize(uRI0, uRI0);
      MockFile mockFile1 = null;
      try {
        mockFile1 = new MockFile(uRI1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // URI is not absolute
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Option option0 = new Option("", "--");
      options0.addOption(option0);
      helpFormatter0.printHelp("8Ykw", ",oW3`&*IB3Z ", options0, "8Ykw", false);
      helpFormatter0.printHelp("8Ykw", "BH\"DYit%Bo98[", options0, ",oW3`&*IB3Z ");
      helpFormatter0.findWrapPos("12nc{kKn1b", 1964, 1964);
      File file0 = MockFile.createTempFile("DsA36(b7Q=Y.8I1Dvb", "#P#d1>m7vf)|");
      MockFile mockFile0 = new MockFile(file0, "+-Bya$|O818");
      helpFormatter0.setOptPrefix("");
      helpFormatter0.findWrapPos("p8'SN@]d", (-1), (-1));
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setOptPrefix(";3 \"X N*];a@C<\":?");
      helpFormatter0.findWrapPos(";3 \"X N*];a@C<\":?", 3, 3);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName(";3 \"X N*];a@C<\":?");
      MockFile mockFile0 = new MockFile("usage: ");
      MockFile mockFile1 = new MockFile(mockFile0, "");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile1);
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 1881, "", "", options0, (-1), 1881, "", false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer();
      String string0 = "usage: ";
      stringBuffer0.setLength(74);
      helpFormatter0.renderWrappedText(stringBuffer0, 74, 74, "usage: ");
      helpFormatter0.getArgName();
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter("W#H/SS/[s", "arg");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // arg
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "a5j%dNCV2N16*9<C";
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("a5j%dNCV2N16*9<C");
      Options options0 = new Options();
      Options options1 = options0.addOption("", true, "\n");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("", options1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLongOptPrefix("");
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("a5j%dNCV2N16*9<C");
      // Undeclared exception!
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 0, "a5j%dNCV2N16*9<C");
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "";
      Options options0 = new Options();
      boolean boolean0 = false;
      Options options1 = options0.addOption((String) null, false, "qij=~P}#VV2^RV#)zH");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("", "", options1, "qij=~P}#VV2^RV#)zH");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = 0;
      helpFormatter0.setSyntaxPrefix("B_1rDXJY!-k");
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped((PrintWriter) null, 0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer();
      int int0 = (-2);
      String string0 = "usage: ";
      // Undeclared exception!
      try { 
        helpFormatter0.renderWrappedText(stringBuffer0, (-2), (-2), "usage: ");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "s`rIj$XnuZE6,q08co}";
      Options options0 = new Options();
      Option option0 = new Option((String) null, "\n", true, "-");
      options0.addOption(option0);
      helpFormatter0.printHelp("s`rIj$XnuZE6,q08co}", options0);
      option0.setArgs(3);
      helpFormatter0.getLongOptPrefix();
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.optionComparator = comparator0;
      helpFormatter0.getWidth();
      String string0 = "--";
      helpFormatter0.setLongOptSeparator("--");
      Options options0 = new Options();
      boolean boolean0 = true;
      String string1 = "V/K8F2&9*rY*Wu;uA";
      // Undeclared exception!
      try { 
        options0.addOption("/z8/7roHKaW5!6MyOR2", "", true, "V/K8F2&9*rY*Wu;uA");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The option '/z8/7roHKaW5!6MyOR2' contains an illegal character : '/'
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter0.setLongOptSeparator("--");
      helpFormatter1.getOptionComparator();
      helpFormatter0.getDescPadding();
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.printHelp("8Ykw", ",oW3`&*IB3Z ", options0, "8Ykw", false);
      helpFormatter0.printHelp("8Ykw", "BH\"DYit%Bo98[", options0, ",oW3`&*IB3Z ");
      helpFormatter0.findWrapPos("12nc{kKn1b", 1964, 1964);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("--");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0, false);
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter1, (-1), "b?f1!g~X;|Fv)%\";");
      helpFormatter0.getWidth();
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setWidth(32);
      helpFormatter0.getOptPrefix();
      helpFormatter0.getLongOptSeparator();
      Options options0 = new Options();
      options0.getMatchingOptions("");
      options0.hasOption("-");
      StringBuffer stringBuffer0 = new StringBuffer();
      options0.hasLongOption("MSy{LK1jAz-c483f.X>");
      options0.hasOption("-");
      stringBuffer0.codePoints();
      helpFormatter0.renderOptions(stringBuffer0, (-3337), options0, 386, 32);
      helpFormatter0.printHelp(" ", (String) null, options0, (String) null);
      helpFormatter0.setLeftPadding((-3337));
      helpFormatter0.rtrim((String) null);
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter("\n", "org.apache.commons.cli.HelpFormatter$1");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // org.apache.commons.cli.HelpFormatter$1
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      options0.addOption((String) null, "\n", true, "-");
      Options options1 = options0.addOption("", false, "U#N:XQg#lqk");
      helpFormatter0.printHelp(3, "--", "--", options1, "\n", true);
      helpFormatter1.getSyntaxPrefix();
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "-");
      stringBuffer0.append((StringBuffer) null);
      helpFormatter0.setLeftPadding(0);
      // Undeclared exception!
      helpFormatter0.renderWrappedText(stringBuffer0, 0, 0, " ^jd>rK6=<+}|#@>`}");
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "--");
      FileSystemHandling.shouldAllThrowIOExceptions();
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringWriter stringWriter0 = new StringWriter(3);
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      String string0 = "2|nK*##/C5H";
      helpFormatter0.renderWrappedText(stringBuffer0, 3, 44, "2|nK*##/C5H");
      stringBuffer0.append((Object) "--");
      // Undeclared exception!
      try { 
        stringBuffer0.insert((-2480), (double) 1);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2480
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
      String string0 = "En1=a7DE(9Y92";
      Object[] objectArray0 = new Object[2];
      String string1 = "l}J;";
      helpFormatter0.defaultOptPrefix = "l}J;";
      objectArray0[0] = (Object) "En1=a7DE(9Y92";
      objectArray0[1] = (Object) helpFormatter0;
      PrintWriter printWriter0 = mockPrintWriter0.printf("En1=a7DE(9Y92", objectArray0);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.setOptionComparator(comparator0);
      int int0 = 0;
      // Undeclared exception!
      helpFormatter0.printWrapped(printWriter0, 0, 0, "]WK*6O{kh");
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = 0;
      helpFormatter0.setWidth(0);
      String string0 = "org.apache.commons.cli.HelpFormatter$OptionComparator";
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter("_&/Hr", "org.apache.commons.cli.HelpFormatter$OptionComparator");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // org.apache.commons.cli.HelpFormatter$OptionComparator
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      boolean boolean0 = false;
      helpFormatter0.printHelp("8Ykw", ",oW3`&*IB3Z ", options0, "8Ykw", false);
      String string0 = "BH\"DYit%Bo98[";
      helpFormatter0.printHelp("8Ykw", "BH\"DYit%Bo98[", options0, ",oW3`&*IB3Z ");
      helpFormatter0.findWrapPos("12nc{kKn1b", 1964, 1964);
      String string1 = "j}Rq0D@vDj|?'ay'W?";
      File file0 = MockFile.createTempFile("DsA36(b7Q=Y.8I1Dvb", "#P#d1>m7vf)|");
      MockFile mockFile0 = new MockFile(file0, "+-Bya$|O818");
      try { 
        MockFile.createTempFile("&i,S#@jCFV^!6R;", "j}Rq0D@vDj|?'ay'W?", (File) mockFile0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      boolean boolean0 = true;
      helpFormatter0.printHelp("8Ykw", ",oW3`&*IB3Z ", options0, "8Ykw", true);
      String string0 = "BH\"DYit%Bo98[";
      helpFormatter0.printHelp("8Ykw", "BH\"DYit%Bo98[", options0, ",oW3`&*IB3Z ");
      helpFormatter0.findWrapPos("12nc{kKn1b", 1964, 1964);
      String string1 = "j}Rq0D@vDj|?'ay'W?";
      File file0 = MockFile.createTempFile("DsA36(b7Q=Y.8I1Dvb", "#P#d1>m7vf)|");
      MockFile mockFile0 = new MockFile(file0, "+-Bya$|O818");
      try { 
        MockFile.createTempFile("&i,S#@jCFV^!6R;", "j}Rq0D@vDj|?'ay'W?", (File) mockFile0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = null;
      helpFormatter0.defaultSyntaxPrefix = "|WEQG1d\"x\"(3";
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("|WEQG1d\"x\"(3", (Options) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "";
      Options options0 = new Options();
      options0.helpOptions();
      helpFormatter0.printHelp("mpIOf54Yy$&;", options0, false);
      Option option0 = null;
      try {
        option0 = new Option(" ", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal option name ' '
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      // Undeclared exception!
      try { 
        helpFormatter0.createPadding((-1328));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName(";3 \"X N*];a@C<\":?");
      helpFormatter0.setOptPrefix(";3 \"X N*];a@C<\":?");
      int int0 = helpFormatter0.findWrapPos(";3 \"X N*];a@C<\":?", 0, 0);
      assertEquals(";3 \"X N*];a@C<\":?", helpFormatter0.getArgName());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setSyntaxPrefix(" :: ");
      helpFormatter0.getOptPrefix();
      helpFormatter0.setOptionComparator((Comparator) null);
      int int0 = 1508;
      String string0 = "@W";
      String string1 = "[";
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        options0.addOption("-", true, "[");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal option name '-'
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      Locale locale0 = Locale.TAIWAN;
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) mockPrintWriter0;
      objectArray0[1] = (Object) helpFormatter0;
      objectArray0[2] = (Object) helpFormatter0;
      objectArray0[3] = (Object) helpFormatter0;
      objectArray0[4] = (Object) helpFormatter0;
      objectArray0[5] = (Object) helpFormatter0;
      objectArray0[6] = (Object) mockPrintWriter0;
      objectArray0[7] = (Object) locale0;
      mockPrintWriter0.format(locale0, "arg", objectArray0);
      helpFormatter0.setSyntaxPrefix("");
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 416, (-3038), (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getSyntaxPrefix();
      int int0 = 2916;
      helpFormatter0.setLeftPadding(2916);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "usage: ");
      int int1 = (-310);
      // Undeclared exception!
      try { 
        stringBuffer0.insert(74, "usage: ");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 74
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      // Undeclared exception!
      try { 
        helpFormatter0.renderWrappedText((StringBuffer) null, 13, (-3694), "cmdLineSyntax not provided");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "org.apache.commons.cli.Options";
      helpFormatter0.setSyntaxPrefix("org.apache.commons.cli.Options");
      helpFormatter0.defaultNewLine = "org.apache.commons.cli.Options";
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      optionGroup0.setRequired(true);
      Option option0 = new Option("arg", " ", false, "w*aI");
      Options options2 = options1.addOption(option0);
      // Undeclared exception!
      try { 
        options2.addOption("}?&X{EUS5e.A_&w&", false, "arg");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The option '}?&X{EUS5e.A_&w&' contains an illegal character : '}'
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = (-1866);
      int int1 = (-1867);
      helpFormatter0.defaultLeftPad = (-1867);
      String string0 = "";
      Options options0 = null;
      String string1 = "";
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((-1866), "", "", (Options) null, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = " :: ";
      helpFormatter0.setOptPrefix(" :: ");
      helpFormatter0.getLeftPadding();
      Options options0 = new Options();
      boolean boolean0 = false;
      String string1 = "";
      Options options1 = options0.addOption("arg", false, "");
      String string2 = "}&Ft?~XO}+E";
      // Undeclared exception!
      try { 
        options1.addOption("usage: ", "}&Ft?~XO}+E", false, " ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The option 'usage: ' contains an illegal character : ':'
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLongOptSeparator();
      int int0 = 0;
      Options options0 = new Options();
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        options0.addOption("--", "<", true, "usage: ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The option '--' contains an illegal character : '-'
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }
}
