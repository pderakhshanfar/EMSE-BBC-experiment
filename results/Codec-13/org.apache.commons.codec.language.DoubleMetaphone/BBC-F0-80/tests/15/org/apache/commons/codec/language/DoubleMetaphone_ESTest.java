/*
 * This file was automatically generated by EvoSuite
 * Mon Mar 08 00:12:02 GMT 2021
 */

package org.apache.commons.codec.language;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.codec.language.DoubleMetaphone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DoubleMetaphone_ESTest extends DoubleMetaphone_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("1AghJqDq]k,%*-");
      assertEquals("KJKT", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("PSAGHJXDQ]K>%;-");
      assertEquals("SKJK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("ZP:y*~hD=oGHE%,Mk", false);
      assertEquals("SPTK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("VAN ");
      assertFalse(string1.equals((Object)string0));
      assertEquals("FN", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("ZP:y*~hD=oGHE%,Mk");
      assertFalse(string2.equals((Object)string1));
      assertTrue(string2.equals((Object)string0));
      assertEquals("SPTK", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("VS_C Gmj&A#:h<");
      assertEquals("FSKM", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("G.NGIER", true);
      assertEquals("KNJR", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string0 = doubleMetaphone1.doubleMetaphone("KN5CHAE");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals("NK", string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string0);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "NK";
      stringArray0[1] = "NK";
      stringArray0[2] = "InIiUV~.Z8;.LBvMo";
      stringArray0[3] = "NK";
      stringArray0[4] = "*a`zLUcpylc({x";
      stringArray0[5] = "KN5CHAE";
      stringArray0[6] = "NK";
      stringArray0[7] = "KNIACH";
      boolean boolean0 = DoubleMetaphone.contains("KNIACH", (-3789), (-3789), stringArray0);
      assertFalse(boolean0);
      assertEquals(8, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("");
      assertEquals("", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("X", "KNCHAE", true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("iAuCH");
      assertFalse(string1.equals((Object)string0));
      assertEquals("AK", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("sCHAE");
      assertEquals("X", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("X", true);
      assertFalse(string1.equals((Object)string0));
      assertEquals("S", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("PSHEIM");
      assertEquals("SM", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("WtRMACHR");
      assertEquals("TRMK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) "?PNP[hIER");
      assertEquals("PNP", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      
      String string0 = doubleMetaphone0.encode("org.apache.commons.codec.EncoderException");
      assertFalse(string0.equals((Object)object0));
      assertEquals("ARKP", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("?PNP[hIER");
      assertFalse(string1.equals((Object)string0));
      assertTrue(string1.equals((Object)object0));
      assertEquals("PNP", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string2 = doubleMetaphone1.doubleMetaphone("W95ZZiH");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)object0));
      assertEquals("S", string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string2);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("GN7G84@RE8S1WW", false);
      assertEquals("NKRS", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("MA", "SIO");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("SIO", false);
      assertFalse(string1.equals((Object)string0));
      assertEquals("S", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      
      String string2 = doubleMetaphone0.encode("HOLM");
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("HLM", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      
      Object object0 = doubleMetaphone0.encode((Object) "S");
      assertFalse(object0.equals((Object)string2));
      assertFalse(object0.equals((Object)string0));
      assertTrue(object0.equals((Object)string1));
      assertEquals("S", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "SCH");
      assertFalse(object1.equals((Object)string1));
      assertFalse(object1.equals((Object)string2));
      assertFalse(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string0));
      assertEquals("X", object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object1);
      
      Object object2 = doubleMetaphone0.encode((Object) "SCH");
      assertFalse(object2.equals((Object)string2));
      assertFalse(object2.equals((Object)string0));
      assertFalse(object2.equals((Object)object0));
      assertTrue(object2.equals((Object)object1));
      assertFalse(object2.equals((Object)string1));
      assertEquals("X", object2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object2);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("/Q-legYM3r", "0F]I:~a=<#$a{!8");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("-", false);
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)object0));
      assertFalse(string3.equals((Object)object2));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)object1));
      assertFalse(string3.equals((Object)string0));
      assertEquals("", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string3);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "S";
      stringArray0[1] = "0F]I:~a=<#$a{!8";
      stringArray0[2] = "SCH";
      stringArray0[3] = ".X^";
      stringArray0[4] = "KN";
      boolean boolean2 = DoubleMetaphone.contains("KN", 4, 0, stringArray0);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(5, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string0 = doubleMetaphone1.doubleMetaphone("YGHC");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals("AKK", string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("YGHC", true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(string1.equals((Object)string0));
      assertEquals("AKK", string1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("KNDTBRVEGLM5R6 `]$9", false);
      assertEquals("NTPR", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "NTPR";
      stringArray0[1] = "KNDTBRVEGLM5R6 `]$9";
      stringArray0[2] = "ZA";
      stringArray0[3] = "NTPR";
      stringArray0[4] = "KNDTBRVEGLM5R6 `]$9";
      stringArray0[5] = "NTPR";
      stringArray0[6] = "KNDTBRVEGLM5R6 `]$9";
      boolean boolean0 = DoubleMetaphone.contains("KNDTBRVEGLM5R6 `]$9", 79, 0, stringArray0);
      assertFalse(boolean0);
      assertEquals(7, stringArray0.length);
      
      boolean boolean1 = DoubleMetaphone.contains("ZA", (-490), 0, stringArray0);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(7, stringArray0.length);
      
      String string1 = doubleMetaphone0.doubleMetaphone("KNDTBRVEGLM5R6 `]$9", false);
      assertTrue(string1.equals((Object)string0));
      assertEquals("NTPR", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("geS", "TPRF");
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean3 = DoubleMetaphone.contains("KNDTBRVEGLM5R6 `]$9", 0, 1224, stringArray0);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3);
      assertEquals(7, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("v_UJaM+f.=", "U");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("GN+LJOSE");
      assertEquals("NLJS", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("NLJS", "o'hEaux");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) "IchS");
      assertEquals("AKS", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("uGNOR");
      assertFalse(string0.equals((Object)object0));
      assertEquals("AKNR", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("PNWITZ", "O!'fw");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "CZ");
      assertEquals("S", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("j0rr+MNiQp'G");
      assertEquals("JRMN", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("HU", "VAN ");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("T_wiraos");
      assertFalse(string1.equals((Object)string0));
      assertEquals("TRS", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("GND IJB4#AMEE(", "JRMN", false);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.encode("Kd2HfZgnk;Ixu_m");
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("KTFS", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("KTFS", "zu>eJaIp");
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.encode("j0rr+MNiQp'G");
      assertTrue(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertEquals("JRMN", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string3);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("CHRE");
      assertEquals("KR", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("zeIJO~5c", (String) null, true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("WRWROS", "");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("mCH", "q'?8\"xnn&1");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("KNACH", "HEM", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("K){8wS(5S,y", "K){8wS(5S,y", false);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual(" Q", "X)WL=iU");
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("#6%OoUvV Dge3d{z/j", "MANGER");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "#6%OoUvV Dge3d{z/j");
      assertEquals("FJTS", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("jYKKol&", "jYKKol&");
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("X", false);
      assertEquals("S", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("Ba=5gNe(k|9DpS^n", "SH");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("PSCIA", "PSCIA");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("IER");
      assertEquals("A", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("CHOR", true);
      assertFalse(string1.equals((Object)string0));
      assertEquals("KR", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("PRJR", "PRJR");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("GNORE", "uGNORE");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("gKfMH4M>$");
      assertEquals("KKFM", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('!');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("!", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("!", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      try { 
        doubleMetaphone0.encode((Object) doubleMetaphone_DoubleMetaphoneResult0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("Fc*'vVGt-mMz-z5=&", true);
      assertEquals("FKFK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("s9 p{}ec5VsDS9QZ'", "gHX<|<asq#/gU9#oSI");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("GNPSILLA");
      assertEquals("NPSL", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("V", "S");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      String string1 = doubleMetaphone2.doubleMetaphone((String) null, false);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNull(string1);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("V", "GNPSILLA");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      boolean boolean0 = doubleMetaphone2.isDoubleMetaphoneEqual("GH", "GH");
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertTrue(boolean0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult((-1));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) "c>{AjP");
      assertEquals("KJP", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("\"{sCQut:", "c>{AjP");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("CY", (String) null);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("cCh^3_rK?Omdz_", "cCh^3_rK?Omdz_");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("OGG");
      assertEquals("AK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("),.", "k]6");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("gyqh", "WRV");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("gHX<|asq#/gU9#oSI", "WRJOSE", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen((-2398));
      assertEquals((-2398), doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("W", (String) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("WRJOSE", "WRJOSE", false);
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen((-2398));
      assertEquals((-2398), doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("PWgH#");
      assertEquals("PK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      String string1 = "CHIA";
      String string2 = "";
      String string3 = doubleMetaphone0.doubleMetaphone("", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string3);
      
      Object object0 = doubleMetaphone0.encode((Object) "PWgH#");
      assertFalse(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string2));
      assertTrue(object0.equals((Object)string0));
      assertEquals("PK", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      
      String string4 = doubleMetaphone0.doubleMetaphone("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string4);
      
      String string5 = "KLSS";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("CHIA", "KLSS");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string6 = null;
      String[] stringArray0 = new String[5];
      stringArray0[0] = "KLSS";
      stringArray0[1] = "CHIA";
      stringArray0[2] = "CHIA";
      stringArray0[3] = "KLSS";
      stringArray0[4] = "KLSS";
      // Undeclared exception!
      try { 
        DoubleMetaphone.contains((String) null, 71, 82, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("IE");
      assertEquals("A", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("A", true);
      assertTrue(string1.equals((Object)string0));
      assertEquals("A", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("RANGER", (String) null, true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("IE");
      assertEquals("A", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("wwA", "d;Oj/]2gyF)Chy");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("Q");
      assertEquals("K", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("GNGN", "GNGN");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string1 = doubleMetaphone1.doubleMetaphone("V", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals("F", string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string1);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("F", "V");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string2 = doubleMetaphone1.doubleMetaphone("s9 p{}ec5VsDS9QZ'", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("SPKF", string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string2);
      
      boolean boolean2 = doubleMetaphone1.isDoubleMetaphoneEqual("DD", "F");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen((-1810));
      assertEquals((-1810), doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      assertEquals("ARKP", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("ZhgR)", "CH");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "z*' hJTwfNS");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(1088);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("JOSE", "JOSE");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("TCH", "TCH");
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", true);
      assertEquals("ARKP", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "JOSE");
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("I*LLA", "org.apache.commons.codec.EncoderException", false);
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("kEdRkKRu]9<");
      assertEquals("KTRK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      Object object0 = doubleMetaphone0.encode((Object) "PSD IJB4#AMEE(");
      assertFalse(object0.equals((Object)string0));
      assertEquals("STPM", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "STPM");
      assertTrue(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string0));
      assertEquals("STPM", object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("kEdRkKRu]9<", "STPM");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object2 = doubleMetaphone0.encode((Object) "SC");
      assertFalse(object2.equals((Object)object1));
      assertFalse(object2.equals((Object)object0));
      assertFalse(object2.equals((Object)string0));
      assertEquals("SK", object2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object2);
      
      String string1 = doubleMetaphone0.doubleMetaphone("PSTCH", true);
      assertFalse(string1.equals((Object)object2));
      assertFalse(string1.equals((Object)object1));
      assertFalse(string1.equals((Object)object0));
      assertFalse(string1.equals((Object)string0));
      assertEquals("SX", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("{>#", "CHORE");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("kEdRkKRu]9<");
      assertEquals("KTRK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("KTRK");
      assertTrue(string1.equals((Object)string0));
      assertEquals("KTRK", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      
      Object object0 = doubleMetaphone0.encode((Object) "KTRK");
      assertTrue(object0.equals((Object)string0));
      assertTrue(object0.equals((Object)string1));
      assertEquals("KTRK", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      
      String string2 = doubleMetaphone0.doubleMetaphone("S-7~", false);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)object0));
      assertEquals("S", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      
      doubleMetaphone0.setMaxCodeLen(1);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("kAkx", "org.apache.commons.codec.EncoderException");
      assertFalse(boolean0);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("S-7~", "n5pCz");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[0];
      boolean boolean2 = DoubleMetaphone.contains("S", 1, 83, stringArray0);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("CCYW", false);
      assertEquals("K", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("CCYW", "CCYW", false);
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode(")C;AslId#Ek&oA");
      assertFalse(string1.equals((Object)string0));
      assertEquals("KSLT", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("EWSKY", "Q\u0005(", true);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("CCYW", "CCYW", true);
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "org.apache.commons.codec.EncoderException");
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("CCYW", false);
      assertTrue(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("K", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      
      boolean boolean4 = DoubleMetaphone.contains("PN", (-1075), 542, (String[]) null);
      assertFalse(boolean4 == boolean0);
      assertFalse(boolean4 == boolean3);
      assertFalse(boolean4 == boolean2);
      assertTrue(boolean4 == boolean1);
      assertFalse(boolean4);
      
      String string3 = doubleMetaphone0.doubleMetaphone("PN", true);
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertEquals("N", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string3);
      
      boolean boolean5 = DoubleMetaphone.contains("E", 542, 542, (String[]) null);
      assertFalse(boolean5 == boolean2);
      assertFalse(boolean5 == boolean0);
      assertFalse(boolean5 == boolean3);
      assertTrue(boolean5 == boolean1);
      assertTrue(boolean5 == boolean4);
      assertFalse(boolean5);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(542);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("1LfCyI");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("1LfCyI", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean6 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean6 == boolean1);
      assertTrue(boolean6 == boolean5);
      assertTrue(boolean6 == boolean4);
      assertFalse(boolean6 == boolean0);
      assertFalse(boolean6 == boolean3);
      assertFalse(boolean6 == boolean2);
      assertFalse(boolean6);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("1LfCyI", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      Object object0 = doubleMetaphone0.encode((Object) "org.apache.commons.codec.EncoderException");
      assertFalse(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string3));
      assertFalse(object0.equals((Object)string2));
      assertFalse(object0.equals((Object)string1));
      assertEquals("ARKP", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('n');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("1LfCyIn", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("K");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("1LfCyInK", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean7 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean7 == boolean5);
      assertTrue(boolean7 == boolean1);
      assertFalse(boolean7 == boolean3);
      assertTrue(boolean7 == boolean6);
      assertFalse(boolean7 == boolean0);
      assertFalse(boolean7 == boolean2);
      assertTrue(boolean7 == boolean4);
      assertFalse(boolean7);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("1LfCyInK", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string4 = doubleMetaphone0.doubleMetaphone("", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string4);
      
      boolean boolean8 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean8 == boolean6);
      assertFalse(boolean8 == boolean2);
      assertTrue(boolean8 == boolean1);
      assertTrue(boolean8 == boolean7);
      assertFalse(boolean8 == boolean0);
      assertTrue(boolean8 == boolean4);
      assertTrue(boolean8 == boolean5);
      assertFalse(boolean8 == boolean3);
      assertFalse(boolean8);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("1LfCyInK", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string5 = doubleMetaphone0.doubleMetaphone("PN", true);
      assertTrue(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)object0));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string2));
      assertEquals("N", string5);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string5);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) "df~e'8;pd");
      assertEquals("TFPT", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "TFPT");
      assertTrue(object1.equals((Object)object0));
      assertEquals("TFPT", object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "df~e'8;pd", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("65=iS|Skr#F^)T0", "zk*[E|UqMg_3");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      doubleMetaphone1.setMaxCodeLen(1243);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(1243, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone1.doubleMetaphone("rfFL$5g'[LJf", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string0.equals((Object)object0));
      assertFalse(string0.equals((Object)object1));
      assertEquals("RFLKLF", string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(1243, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      Object object2 = doubleMetaphone0.encode((Object) "RFLKLF");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(object2.equals((Object)object1));
      assertFalse(object2.equals((Object)string0));
      assertFalse(object2.equals((Object)object0));
      assertEquals("RFLK", object2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object2);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "F";
      stringArray0[1] = "@4K>Jn~ZZmD";
      boolean boolean0 = DoubleMetaphone.contains("F", 70, 82, stringArray0);
      assertFalse(boolean0);
      assertEquals(2, stringArray0.length);
      
      String string0 = doubleMetaphone0.doubleMetaphone(".", false);
      assertEquals("", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("@4K>Jn~ZZmD", "org.apache.commons.codec.EncoderException");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("J)K", true);
      assertFalse(string1.equals((Object)string0));
      assertEquals("AK", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("F", "fE,Fp:");
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      int int0 = 0;
      String string0 = doubleMetaphone0.doubleMetaphone("RRKP", true);
      assertEquals("RKP", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone((String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("WITZ");
      assertFalse(string2.equals((Object)string0));
      assertEquals("ATS", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      
      doubleMetaphone0.setMaxCodeLen(0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = "org.apache.commons.codec.EncoderException";
      Object object0 = doubleMetaphone0.encode((Object) "org.apache.commons.codec.EncoderException");
      assertFalse(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string3));
      assertFalse(object0.equals((Object)string2));
      assertEquals("", object0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      
      int int1 = 73;
      String[] stringArray0 = null;
      // Undeclared exception!
      try { 
        DoubleMetaphone.contains((String) null, 73, 0, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("\"cr(q+(b", "GN7");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("b+~-ukr_3NDbZ =", true);
      assertEquals("PKRN", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("WRCG", 2174);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("\"cr(q+(b", "PKRN");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone1.doubleMetaphone("PNCH", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals("NX", string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string1);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(991);
      assertEquals(991, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(991);
      assertEquals(991, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "PSCH";
      String string1 = doubleMetaphone0.doubleMetaphone("PSCH", true);
      assertFalse(string1.equals((Object)string0));
      assertEquals("X", string1);
      assertEquals(991, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      
      doubleMetaphone0.setMaxCodeLen((-2791));
      assertEquals((-2791), doubleMetaphone0.getMaxCodeLen());
      
      String string2 = "IB";
      // Undeclared exception!
      try { 
        doubleMetaphone0.encode((Object) "IB");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode(";la$o#lo");
      assertEquals("LL", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string1 = doubleMetaphone1.doubleMetaphone("e1,FgoX.uj6H9nV", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals("AFKK", string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("CH", "F2H^8t");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("CHIA", "", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone1.isDoubleMetaphoneEqual("F2H^8t", "KKKaEHb");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, int0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) "AS");
      assertEquals("AS", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "AS");
      assertTrue(object1.equals((Object)object0));
      assertEquals("AS", object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("PNILLA", "AS");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("AS", false);
      assertTrue(string0.equals((Object)object1));
      assertTrue(string0.equals((Object)object0));
      assertEquals("AS", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, int0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      char char0 = doubleMetaphone1.charAt("ED", (-5037));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals('\u0000', char0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertNotNull(doubleMetaphone3);
      
      boolean boolean1 = doubleMetaphone3.isDoubleMetaphoneEqual("AS", "H");
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      String string1 = doubleMetaphone2.doubleMetaphone("cCywxf VTV]bn@", true);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone3));
      assertFalse(string1.equals((Object)object1));
      assertFalse(string1.equals((Object)object0));
      assertFalse(string1.equals((Object)string0));
      assertEquals("KKSF", string1);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone3);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(string1);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("9^z", "3#VqM6SIw-");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone1.doubleMetaphone("9^z", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals("S", string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string0);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("cA@V#bBj(&", "O");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("\"n3!", "ILLA", false);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Object object1 = new Object();
      assertFalse(object1.equals((Object)object0));
      assertNotNull(object1);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "zf,enKt4@|_e ";
      boolean boolean0 = DoubleMetaphone.contains("zf,enKt4@|_e ", (-59432204), (-59432204), stringArray0);
      assertFalse(boolean0);
      assertEquals(1, stringArray0.length);
      
      String string0 = doubleMetaphone0.doubleMetaphone("WRXRJ=6AMSE,<G.S5DW", false);
      assertEquals("RKSR", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      doubleMetaphone0.setMaxCodeLen((-59432204));
      assertEquals((-59432204), doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string1 = doubleMetaphone1.doubleMetaphone((String) null, true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNull(string1);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.encode((Object) "{FSaaE=_2%o");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("AS", "5");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("UMB", "Z");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone((String) null, true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      boolean boolean2 = doubleMetaphone2.isDoubleMetaphoneEqual("W^Fs>~PHDf,^1q}8", (String) null);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      boolean boolean3 = doubleMetaphone2.isDoubleMetaphoneEqual("c>{AjP", (String) null);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("AS", "5");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("UMB", "Z");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone((String) null, true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string1 = doubleMetaphone1.doubleMetaphone("KNSIO", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals("NS", string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone2.new DoubleMetaphoneResult(1258);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean2 = doubleMetaphone2.isDoubleMetaphoneEqual("P", "CAESAR");
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("Fcq$Mr__cb_g-");
      assertEquals("FKMR", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("FKMR");
      assertTrue(string1.equals((Object)string0));
      assertEquals("FKMR", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("O,ow|]utZ).", true);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("ATS", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      
      doubleMetaphone0.setMaxCodeLen(0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("KS", false);
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertEquals("", string3);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string3);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("KNUMB", "KS");
      assertTrue(boolean0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("kEdRkKRu]9<");
      assertEquals("KTRK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("5", "SIO");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("Z", "&VvOyXE&R?$%dSjSn^K");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("UMB", true);
      assertFalse(string1.equals((Object)string0));
      assertEquals("AM", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("Z", "&VvOyXE&R?$%dSjSn^K");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("ZA", true);
      assertEquals("S", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("cSo>5!c!(", "ZA");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen((-634));
      assertEquals((-634), doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('E');
      assertEquals((-634), doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('c', 'E');
      assertEquals((-634), doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals((-634), doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('E', 'O');
      assertEquals((-634), doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("", "ZA");
      assertEquals((-634), doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals((-634), int0);
      assertEquals((-634), doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("");
      assertEquals((-634), doubleMetaphone0.getMaxCodeLen());
      assertNull(string1);
      
      String string2 = "TTH";
      // Undeclared exception!
      try { 
        doubleMetaphone0.doubleMetaphone("TTH", true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("PV", false);
      assertEquals("PF", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("HEIM", "RANGER");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("PF");
      assertTrue(string1.equals((Object)string0));
      assertEquals("PF", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "HEIM", true);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("~gFW", "Zt'zYe6'tP");
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("E ^!wT'^wr!", "PF", false);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "K*Gw\"kYIRE%QI.^/)");
      assertFalse(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string1));
      assertEquals("KKKR", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "KKKR");
      assertFalse(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string0));
      assertFalse(object1.equals((Object)string1));
      assertEquals("KKR", object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object1);
      
      Object object2 = doubleMetaphone0.encode((Object) "Zt'zYe6'tP");
      assertFalse(object2.equals((Object)string1));
      assertFalse(object2.equals((Object)string0));
      assertFalse(object2.equals((Object)object1));
      assertFalse(object2.equals((Object)object0));
      assertEquals("STST", object2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object2);
      
      Object object3 = new Object();
      assertNotNull(object3);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("kEdRkKRu]9<");
      assertEquals("KTRK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "KTRK";
      stringArray0[1] = "KTRK";
      boolean boolean0 = DoubleMetaphone.contains("KTRK", (-177), 2, stringArray0);
      assertFalse(boolean0);
      assertEquals(2, stringArray0.length);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string1 = doubleMetaphone1.doubleMetaphone("TH", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals("0", string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string1);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("j;", "");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("j;", false);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("J", string2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = "JOSE";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("JOSE", "JOSE");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("Fcq$Mr__cb_g-");
      assertEquals("FKMR", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      Object object0 = doubleMetaphone0.encode((Object) "Fcq$Mr__cb_g-");
      assertTrue(object0.equals((Object)string0));
      assertEquals("FKMR", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "FKMR");
      assertTrue(object1.equals((Object)string0));
      assertTrue(object1.equals((Object)object0));
      assertEquals("FKMR", object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object1);
      
      String string1 = doubleMetaphone0.doubleMetaphone("Fcq$Mr__cb_g-", false);
      assertTrue(string1.equals((Object)string0));
      assertTrue(string1.equals((Object)object1));
      assertTrue(string1.equals((Object)object0));
      assertEquals("FKMR", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("OGGI");
      assertFalse(string2.equals((Object)object1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)object0));
      assertEquals("AJ", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("AJ", "FKMR", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "HARAC");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("AS", "5");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("UMB", "Z");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone((String) null, true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone2.new DoubleMetaphoneResult(1258);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean2 = doubleMetaphone2.isDoubleMetaphoneEqual("P", "CAESAR");
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("kEdRkKRu]9<");
      assertEquals("KTRK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      Object object0 = doubleMetaphone0.encode((Object) "SIA");
      assertFalse(object0.equals((Object)string0));
      assertEquals("S", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "S");
      assertFalse(object1.equals((Object)string0));
      assertTrue(object1.equals((Object)object0));
      assertEquals("S", object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("kEdRkKRu]9<", "S");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("b+~-ukr_3NDbZ =", false);
      assertFalse(string1.equals((Object)object1));
      assertFalse(string1.equals((Object)object0));
      assertFalse(string1.equals((Object)string0));
      assertEquals("PKRN", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("cCywxf VTV]bn@", 2174);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("gTs", (String) null);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string2 = doubleMetaphone1.doubleMetaphone("SC", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)object0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)object1));
      assertFalse(string2.equals((Object)string1));
      assertEquals("SK", string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string2);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "S}";
      stringArray0[1] = "3#VqM6SIw-";
      stringArray0[2] = "t&A8$p(^3afE";
      stringArray0[3] = "t&A8$p(^3afE";
      stringArray0[4] = "S}";
      stringArray0[5] = "t&A8$p(^3afE";
      stringArray0[6] = "t&A8$p(^3afE";
      stringArray0[7] = "3#VqM6SIw-";
      stringArray0[8] = "S}";
      boolean boolean0 = DoubleMetaphone.contains("t&A8$p(^3afE", 2184, 448, stringArray0);
      assertFalse(boolean0);
      assertEquals(9, stringArray0.length);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      String string0 = doubleMetaphone0.doubleMetaphone("WICZ", true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals("FKTS", string0);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      boolean boolean1 = doubleMetaphone2.isDoubleMetaphoneEqual("3#VqM6SIw-", "Jn7h02(4_l/P0ejI*");
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone1.isDoubleMetaphoneEqual("FKTS", "t&A8$p(^3afE");
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(boolean2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("2jc:&NnMyfP HL", true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertEquals("JKNM", string1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      
      boolean boolean3 = DoubleMetaphone.contains("p=$0{4C", (-3200), 2184, stringArray0);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3);
      assertEquals(9, stringArray0.length);
      
      boolean boolean4 = doubleMetaphone1.isDoubleMetaphoneEqual("CC", "h8d.<");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertTrue(boolean4 == boolean3);
      assertTrue(boolean4 == boolean0);
      assertTrue(boolean4 == boolean1);
      assertTrue(boolean4 == boolean2);
      assertFalse(boolean4);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone(":Je&");
      assertEquals("J", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      Object object0 = doubleMetaphone1.encode((Object) "SIA");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(object0.equals((Object)string0));
      assertEquals("S", object0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(object0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      Object object1 = doubleMetaphone2.encode((Object) "SIA");
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertTrue(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string0));
      assertEquals("S", object1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(object1);
      
      boolean boolean0 = doubleMetaphone2.isDoubleMetaphoneEqual("kEdRkKRu]9<", "SIA");
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string1 = doubleMetaphone2.doubleMetaphone("CZ", false);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertTrue(string1.equals((Object)object0));
      assertFalse(string1.equals((Object)string0));
      assertTrue(string1.equals((Object)object1));
      assertEquals("S", string1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(string1);
      
      String string2 = doubleMetaphone2.doubleMetaphone((String) null, false);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNull(string2);
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertEquals(4, int0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("WS71", 4);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals('\u0000', char0);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("A=Pi'h\"9U\";iJDtbOI", false);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string3.equals((Object)object0));
      assertFalse(string3.equals((Object)object1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertEquals("APJT", string3);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string3);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException");
      assertEquals("ARKP", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("CSh-", true);
      assertFalse(string2.equals((Object)string0));
      assertEquals("KX", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      
      doubleMetaphone0.setMaxCodeLen(0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult", false);
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertEquals("", string3);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string3);
      
      Object object0 = doubleMetaphone0.encode((Object) "KL");
      assertFalse(object0.equals((Object)string0));
      assertTrue(object0.equals((Object)string3));
      assertFalse(object0.equals((Object)string2));
      assertEquals("", object0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      
      String string4 = doubleMetaphone0.doubleMetaphone("ARKP", false);
      assertTrue(string4.equals((Object)object0));
      assertFalse(string4.equals((Object)string0));
      assertTrue(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string2));
      assertEquals("", string4);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string4);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "S}";
      boolean boolean0 = DoubleMetaphone.contains("m$+-Id`si$yE", 7, 1, stringArray0);
      assertFalse(boolean0);
      assertEquals(1, stringArray0.length);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string0 = doubleMetaphone1.doubleMetaphone("Ywj3Y$oZ7w", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals("AJTS", string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string0);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("CH", "8A&,{sn]z9Hr}#Xj");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("EAU", "p=$0{4C");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean3 = doubleMetaphone1.isDoubleMetaphoneEqual("8A&,{sn]z9Hr}#Xj", "?I");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      String string1 = doubleMetaphone0.doubleMetaphone("ARCHIT", false);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertEquals("ARKT", string1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("p=$0{4C", true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("PK", string2);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode(";la$o#lo");
      assertEquals("LL", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string1 = doubleMetaphone1.doubleMetaphone("e1,FgoX.uj6H9nV", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals("AFKK", string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string1);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("e1,FgoX.uj6H9nV", "", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      boolean boolean1 = doubleMetaphone2.isDoubleMetaphoneEqual("D iJb4#AMeE(", "&&rXpp/~H #9", false);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertNotNull(doubleMetaphone3);
      
      String string2 = doubleMetaphone0.doubleMetaphone("D iJb4#AMeE(", true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("TPM", string2);
      assertNotSame(doubleMetaphone0, doubleMetaphone3);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      
      DoubleMetaphone doubleMetaphone4 = new DoubleMetaphone();
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      assertNotNull(doubleMetaphone4);
      
      DoubleMetaphone doubleMetaphone5 = new DoubleMetaphone();
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone4));
      assertEquals(4, doubleMetaphone5.getMaxCodeLen());
      assertNotNull(doubleMetaphone5);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "D iJb4#AMeE(");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("9^z", "3#VqM6SIw-");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone1.doubleMetaphone("9^z", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals("S", string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("VAN ", "cA@V#bBj(&", true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("3#VqM6SIw-", "D iJb4#AMeE(", false);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      String string1 = doubleMetaphone2.doubleMetaphone("cA@V#bBj(&", true);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertEquals("KFPJ", string1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(string1);
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertNotNull(doubleMetaphone3);
      
      DoubleMetaphone doubleMetaphone4 = new DoubleMetaphone();
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      assertNotNull(doubleMetaphone4);
      
      boolean boolean3 = doubleMetaphone3.isDoubleMetaphoneEqual("3#VqM6SIw-", "WRZV'EHB&O D\"+GS_KY");
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone4));
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone4);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      String string2 = doubleMetaphone1.doubleMetaphone("C", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("K", string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone4);
      assertNotSame(doubleMetaphone1, doubleMetaphone3);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string2);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("org.apache.commons.codec.EncoderException");
      assertEquals("ARKP", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("PS", "org.apache.commons.codec.EncoderException", true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("<|^DJI+42444 ");
      assertFalse(string1.equals((Object)string0));
      assertEquals("TJ", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      
      char char0 = doubleMetaphone0.charAt("<|^DJI+42444 ", 10);
      assertEquals('4', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", ".+QQ0yt8d.Q-g");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string2 = doubleMetaphone1.doubleMetaphone(".+QQ0yt8d.Q-g", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("KTTK", string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string2);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("l!hqaF$y{yrV5u,");
      assertEquals("LKFR", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("LKFR");
      assertTrue(string1.equals((Object)string0));
      assertEquals("LKFR", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "PSJ_[P~]2W");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      String string2 = doubleMetaphone0.encode("LKFR");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      assertEquals("LKFR", string2);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      
      int int0 = doubleMetaphone2.getMaxCodeLen();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, int0);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(9);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('G', '4');
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("4", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("G", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone2.new DoubleMetaphoneResult(4);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      String string3 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertEquals("G", string3);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("4", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("G", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(string3);
      
      String string4 = doubleMetaphone2.doubleMetaphone("B", true);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertEquals("P", string4);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(string4);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone(">BAj?a");
      assertEquals("PJ", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      boolean boolean0 = DoubleMetaphone.contains("", 0, 4, (String[]) null);
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      String string1 = doubleMetaphone2.doubleMetaphone("PB+!rA)N`-3)", true);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertEquals("PRN", string1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(string1);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("oad?HYm/MAR", "org.apache.commons.codec.EncoderException");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "S}";
      boolean boolean0 = DoubleMetaphone.contains("m$+-Id`si$yE", 7, 1, stringArray0);
      assertFalse(boolean0);
      assertEquals(1, stringArray0.length);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string0 = doubleMetaphone1.doubleMetaphone("Ywj3Y$oZ7w", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals("AJTS", string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string0);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("CH", "8A&,{sn]z9Hr}#Xj");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("EAU", "p=$0{4C");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("Ywj3Y$oZ7w", true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(string1.equals((Object)string0));
      assertEquals("AJTS", string1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      
      String[] stringArray1 = new String[7];
      assertFalse(stringArray1.equals((Object)stringArray0));
      
      stringArray1[0] = "E";
      stringArray1[1] = "Ywj3Y$oZ7w";
      stringArray1[2] = "AJTS";
      stringArray1[3] = "EAU";
      stringArray1[4] = "AJTS";
      stringArray1[5] = "Ywj3Y$oZ7w";
      stringArray1[6] = "AJTS";
      boolean boolean3 = DoubleMetaphone.contains("S}", 1, 7, stringArray1);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertFalse(stringArray1.equals((Object)stringArray0));
      assertFalse(boolean3);
      assertNotSame(stringArray1, stringArray0);
      assertEquals(7, stringArray1.length);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode(";la$o#lo");
      assertEquals("LL", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string1 = doubleMetaphone1.doubleMetaphone("e1,FgoX.uj6H9nV", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals("AFKK", string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string1);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("LL", "YTA!XFcg0", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string2 = doubleMetaphone1.doubleMetaphone("WREY", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("R", string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string2);
      
      doubleMetaphone1.setMaxCodeLen(2014);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(2014, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("CIO", ";la$o#lo");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("(A", true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertEquals("", string3);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string3);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "F";
      boolean boolean0 = DoubleMetaphone.contains("F", 739, 739, stringArray0);
      assertFalse(boolean0);
      assertEquals(1, stringArray0.length);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string0 = doubleMetaphone0.doubleMetaphone("F", false);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals("F", string0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("sgN3jJU0X", "Ou\"aAzL|Ty~ ");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone1.doubleMetaphone("", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNull(string1);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      String string0 = null;
      String[] stringArray0 = new String[3];
      stringArray0[1] = null;
      boolean boolean0 = DoubleMetaphone.contains((String) null, (-3454), (-3454), stringArray0);
      assertFalse(boolean0);
      assertEquals(3, stringArray0.length);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("Z?P:W*~4DhoGHfjk", true);
      assertEquals("SPTF", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual(stringArray0[1], "SPTF", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone((String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("7-jjL}MQ");
      assertEquals("JLMK", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("T7+m\"6IuD?84]ag~%", ";p[}DS-1W$5wZ");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string2 = doubleMetaphone0.encode(">BAj?a");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string1));
      assertEquals("PJ", string2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, int0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult((-1));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      Object object0 = doubleMetaphone2.encode((Object) "PJ");
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertTrue(object0.equals((Object)string2));
      assertFalse(object0.equals((Object)string1));
      assertEquals("PJ", object0);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone1.encode((Object) "PJ");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string1));
      assertTrue(object1.equals((Object)string2));
      assertEquals("PJ", object1);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(object1);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('u', 'u');
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone1.new DoubleMetaphoneResult((-1));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append("PJ", "JLMK");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("TS");
      assertEquals("TS", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("SCH");
      assertFalse(string1.equals((Object)string0));
      assertEquals("X", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone((String) null, false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string2);
      
      doubleMetaphone0.setMaxCodeLen(917);
      assertEquals(917, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", true);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertEquals("ARKPKKMNSKTKNKTRKSPXN", string3);
      assertEquals(917, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string3);
      
      Object object0 = doubleMetaphone0.encode((Object) "TS");
      assertFalse(object0.equals((Object)string1));
      assertTrue(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string3));
      assertEquals("TS", object0);
      assertEquals(917, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      
      String string4 = doubleMetaphone0.doubleMetaphone("$'&B0IR", true);
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)object0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertEquals("PR", string4);
      assertEquals(917, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string4);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("SC", false);
      assertEquals("SK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = DoubleMetaphone.contains("A=Pi'h\"9U\";iJDtbOI", (-1076), 3426, (String[]) null);
      assertFalse(boolean0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("N", false);
      assertFalse(string1.equals((Object)string0));
      assertEquals("N", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("kEdRkKRu]9<", false);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("KTRK", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("+VwUDJx", "");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("+VwUDJx", "OE}NaQv|7GZ5", false);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("+~?3aH]#", "eo9Rhn", true);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "O;ey3|D2*3P@PFfYEk(";
      stringArray0[2] = "OE}NaQv|7GZ5";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "eo9Rhn";
      stringArray0[6] = "OE}NaQv|7GZ5";
      stringArray0[7] = "+~?3aH]#";
      boolean boolean3 = DoubleMetaphone.contains("+VwUDJx", (-26587893), (-26587893), stringArray0);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3);
      assertEquals(8, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone((String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("7-jjL}MQ");
      assertEquals("JLMK", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("T7+m\"6IuD?84]ag~%", ";p[}DS-1W$5wZ");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string2 = doubleMetaphone0.encode(">BAj?a");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string1));
      assertEquals("PJ", string2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, int0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult((-1));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('u', 'u');
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone1.new DoubleMetaphoneResult((-1));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      String string3 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertEquals("", string3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(string3);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("AS", "5");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("UMB", "Z");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone((String) null, true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      boolean boolean2 = doubleMetaphone2.isDoubleMetaphoneEqual("c>{AjP", (String) null);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      String string0 = ">BAj?a";
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("kfCPGg", false);
      assertFalse(string1.equals((Object)string0));
      assertEquals("KFKP", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("Ao:A-d");
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("AT", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      
      String string3 = null;
      // Undeclared exception!
      try { 
        doubleMetaphone0.charAt((String) null, 74);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("kEdRkKRu]9<");
      assertEquals("KTRK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      Object object0 = doubleMetaphone0.encode((Object) "SIA");
      assertFalse(object0.equals((Object)string0));
      assertEquals("S", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "S");
      assertTrue(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string0));
      assertEquals("S", object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("kEdRkKRu]9<", "S");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("E8jhlmheh_.}tVn", "E8jhlmheh_.}tVn");
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("CK", true);
      assertFalse(string1.equals((Object)object1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)object0));
      assertEquals("K", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("S", 2);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("b:w'Od0MtR2[+", ":H;1$");
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone((String) null, false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string2);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "RLT ";
      char char0 = doubleMetaphone0.charAt("RLT ", (-4978));
      assertEquals('\u0000', char0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) "IER");
      assertEquals("A", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "A");
      assertTrue(object1.equals((Object)object0));
      assertEquals("A", object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object1);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = DoubleMetaphone.contains("Z", 55, 55, (String[]) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) "df~e'8;pd");
      assertEquals("TFPT", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "TFPT");
      assertTrue(object1.equals((Object)object0));
      assertEquals("TFPT", object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("V6ll{lf&iZ^?bdaF@'n", "df~e'8;pd", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("65=iS|Skr#F^)T0", "zk*[E|UqMg_3");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("L=^pQuteNm}");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "zf,enKt4@|_e ";
      boolean boolean0 = DoubleMetaphone.contains("zf,enKt4@|_e ", (-59432204), (-59432204), stringArray0);
      assertFalse(boolean0);
      assertEquals(1, stringArray0.length);
      
      String string0 = doubleMetaphone0.doubleMetaphone("WRXRJ=6AMSE,<G.S5DW", false);
      assertEquals("RKSR", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("DG", "J=6A");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string1 = doubleMetaphone1.doubleMetaphone("B", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals("P", string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string1);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String[] stringArray0 = new String[0];
      boolean boolean0 = DoubleMetaphone.contains((String) null, (-3454), (-3454), stringArray0);
      assertFalse(boolean0);
      assertEquals(0, stringArray0.length);
      
      String string0 = doubleMetaphone0.doubleMetaphone((String) null, false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("fE,Fp:", "fE,Fp:");
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("fE,Fp:", false);
      assertEquals("FFP", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("FFP", (String) null);
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[1] = null;
      boolean boolean0 = DoubleMetaphone.contains((String) null, (-3454), (-3454), stringArray0);
      assertFalse(boolean0);
      assertEquals(3, stringArray0.length);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) "]S*V|Rs0Y.T?4Ka");
      assertEquals("SFRS", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "SFRS");
      assertTrue(object1.equals((Object)object0));
      assertEquals("SFRS", object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object1);
      
      String string0 = doubleMetaphone0.doubleMetaphone("]S*V|Rs0Y.T?4Ka", false);
      assertTrue(string0.equals((Object)object1));
      assertTrue(string0.equals((Object)object0));
      assertEquals("SFRS", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("HARIS", "HARIS");
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("WRWRARKP", false);
      assertFalse(string1.equals((Object)object0));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)object1));
      assertEquals("RRRK", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      
      Object object2 = new Object();
      assertNotNull(object2);
      
      try { 
        doubleMetaphone0.encode(object2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[1] = null;
      boolean boolean0 = DoubleMetaphone.contains((String) null, (-3454), (-3454), stringArray0);
      assertFalse(boolean0);
      assertEquals(3, stringArray0.length);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = "]S*V|Rs0Y.T?4Ka";
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("PSSIA", "]S*V|Rs0Y.T?4Ka");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("]S*V|Rs0Y.T?4Ka", false);
      assertFalse(string1.equals((Object)string0));
      assertEquals("SFRS", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("kEdRkKRu]9<");
      assertEquals("KTRK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      Object object0 = doubleMetaphone0.encode((Object) "SIA");
      assertFalse(object0.equals((Object)string0));
      assertEquals("S", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "S");
      assertTrue(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string0));
      assertEquals("S", object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("kEdRkKRu]9<", "S");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("SC", false);
      assertFalse(string1.equals((Object)object0));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)object1));
      assertEquals("SK", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("A=Pi'h\"9U\";iJDtbOI", (-1079924597));
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("BACHER", "nMNU");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("nMNU", false);
      assertFalse(string2.equals((Object)object0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)object1));
      assertEquals("NMN", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("kEdRkKRu]9<");
      assertEquals("KTRK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      Object object0 = doubleMetaphone0.encode((Object) "SIA");
      assertFalse(object0.equals((Object)string0));
      assertEquals("S", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "S");
      assertTrue(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string0));
      assertEquals("S", object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("RGY", "a", true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("SIA");
      assertTrue(string1.equals((Object)object1));
      assertTrue(string1.equals((Object)object0));
      assertFalse(string1.equals((Object)string0));
      assertEquals("S", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append(':');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("SIA", "");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "KTRK", true);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("a", "RGY");
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "S";
      String string2 = doubleMetaphone0.doubleMetaphone("", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string2);
      
      stringArray0[2] = "kEdRkKRu]9<";
      stringArray0[3] = "KTRK";
      stringArray0[4] = "KTRK";
      stringArray0[5] = "org.apache.commons.codec.EncoderException";
      stringArray0[6] = "S";
      boolean boolean3 = DoubleMetaphone.contains("org.apache.commons.codec.EncoderException", 0, 0, stringArray0);
      assertFalse(boolean3 == boolean0);
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean3 == boolean2);
      assertTrue(boolean3);
      assertEquals(7, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("v#Cdd", "AM");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("SK", "PV");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string0 = doubleMetaphone1.doubleMetaphone("5TDoNTFB\n[bw2<{~", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals("TNTF", string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string0);
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, int0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt((String) null, (-1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals('\u0000', char0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("AM", "TIA");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone1.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals("ARKP", string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string1);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "[";
      stringArray0[1] = "[";
      stringArray0[2] = "[";
      stringArray0[3] = "[";
      stringArray0[4] = "[";
      stringArray0[5] = "[";
      stringArray0[6] = "[";
      stringArray0[7] = "[";
      boolean boolean0 = DoubleMetaphone.contains("[", 18, 0, stringArray0);
      assertFalse(boolean0);
      assertEquals(8, stringArray0.length);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("9ZGi7[y_`ELQX:.ZNI>", true);
      assertEquals("SKLK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("+/MbEjs.'nflw", "[");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("[", "SKLK");
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("9ZGi7[y_`ELQX:.ZNI>", "SKLK");
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("[", false);
      assertFalse(string1.equals((Object)string0));
      assertEquals("", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("lo~", false);
      assertEquals("L", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("pU1ys~lf0e%m", "0Szdg/#n=&#&-(a+L!");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("AS", "5");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("UMB", "Z");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone((String) null, true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("5", 4);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("m9,z+^WD&SVcLT", "HOEK");
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone((String) null, true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string1);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("WR", true);
      assertEquals("R", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.encode("R");
      assertTrue(string1.equals((Object)string0));
      assertEquals("R", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "ZA", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(3970);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string2 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("", string2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(string2);
      
      doubleMetaphone1.setMaxCodeLen(3970);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(3970, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone1.new DoubleMetaphoneResult(3970);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(3970, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone_DoubleMetaphoneResult1.append("ZA");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(3970, doubleMetaphone1.getMaxCodeLen());
      assertEquals("ZA", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("ZA", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      
      String string3 = doubleMetaphone1.doubleMetaphone("B0", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertEquals("P", string3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(3970, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string3);
      
      String string4 = doubleMetaphone1.doubleMetaphone((String) null, false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(3970, doubleMetaphone1.getMaxCodeLen());
      assertNull(string4);
      
      String string5 = doubleMetaphone1.doubleMetaphone("PVjHj{'y:^P:5&=Y#", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string3));
      assertEquals("PFJJP", string5);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(3970, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string5);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('-');
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("-", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("-", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("c-!+o+/'ShOU]kf1k", "fXNFcAaW'Ul%~@");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("-c-!+o+/'ShOU]kf1k", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("-fXNFcAaW'Ul%~@", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string6 = doubleMetaphone1.doubleMetaphone("R");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string2));
      assertFalse(string6.equals((Object)string3));
      assertTrue(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string5));
      assertEquals("R", string6);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(3970, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string6);
      
      Object object0 = doubleMetaphone1.encode((Object) "R");
      assertTrue(object0.equals((Object)string1));
      assertTrue(object0.equals((Object)string6));
      assertTrue(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string2));
      assertFalse(object0.equals((Object)string3));
      assertFalse(object0.equals((Object)string5));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals("R", object0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(3970, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(object0);
      
      char char0 = doubleMetaphone0.charAt("R", 1742);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals('\u0000', char0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean1 == boolean0);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("-c-!+o+/'ShOU]kf1k", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("-fXNFcAaW'Ul%~@", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "K";
      boolean boolean0 = DoubleMetaphone.contains("K", (-54393061), 0, stringArray0);
      assertFalse(boolean0);
      assertEquals(1, stringArray0.length);
      
      boolean boolean1 = DoubleMetaphone.contains("K", 80, 0, stringArray0);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(1, stringArray0.length);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      // Undeclared exception!
      try { 
        DoubleMetaphone.contains("G", 3156, (-54393061), stringArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual(")", (String) null, true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "PS";
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("/Ov{8sn/%Cxj", "PS");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("SUGAR", "PS", true);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      try { 
        doubleMetaphone0.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode(";la$o#lo");
      assertEquals("LL", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "e1,FgoX.uj6H9nV";
      stringArray0[1] = ";la$o#lo";
      stringArray0[2] = ";la$o#lo";
      stringArray0[3] = "LL";
      stringArray0[4] = "LL";
      boolean boolean0 = DoubleMetaphone.contains("LL", 831, 68, stringArray0);
      assertFalse(boolean0);
      assertEquals(5, stringArray0.length);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string1 = doubleMetaphone0.doubleMetaphone(">S?1Hn)FVB", false);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertEquals("SNFF", string1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("LL", ">S?1Hn)FVB");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string2 = doubleMetaphone1.doubleMetaphone("ER", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("AR", string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string2);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) "df~e'8;pd");
      assertEquals("TFPT", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "TFPT");
      assertTrue(object1.equals((Object)object0));
      assertEquals("TFPT", object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("df~e'8;pd", (String) null);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string0 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertFalse(string0.equals((Object)object0));
      assertFalse(string0.equals((Object)object1));
      assertEquals("", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(string0);
      
      doubleMetaphone0.setMaxCodeLen((-4360));
      assertEquals((-4360), doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("");
      assertEquals((-4360), doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string1 = doubleMetaphone0.doubleMetaphone("", false);
      assertEquals((-4360), doubleMetaphone0.getMaxCodeLen());
      assertNull(string1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string2 = doubleMetaphone1.doubleMetaphone("Hr%O!->J-afSU", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)object1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)object0));
      assertEquals("RJFS", string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string2);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('A');
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals((-4360), doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("GK&`=(541 1S/&", "OWSKI");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals((-4360), doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals((-4360), doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("SlS:'cO&8", "U R!h/&/Q4");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals((-4360), doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      char char0 = doubleMetaphone1.charAt("RJFS", 0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals('R', char0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "Hr%O!->J-afSU");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) "df~e'8;pd");
      assertEquals("TFPT", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "TFPT");
      assertTrue(object1.equals((Object)object0));
      assertEquals("TFPT", object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "df~e'8;pd", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("65=iS|Skr#F^)T0", "zk*[E|UqMg_3");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("df~e'8;pd", "Xv}Xd|ew($I,>a>", true);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object2 = doubleMetaphone0.encode((Object) "65=iS|Skr#F^)T0");
      assertFalse(object2.equals((Object)object0));
      assertFalse(object2.equals((Object)object1));
      assertEquals("SSKR", object2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object2);
      
      Object object3 = new Object();
      assertNotNull(object3);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      String string0 = "K";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "K";
      boolean boolean0 = DoubleMetaphone.contains("K", (-54393061), 0, stringArray0);
      assertFalse(boolean0);
      assertEquals(1, stringArray0.length);
      
      int int0 = 80;
      boolean boolean1 = DoubleMetaphone.contains("K", 80, 0, stringArray0);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(1, stringArray0.length);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string1 = doubleMetaphone0.encode("K");
      assertTrue(string1.equals((Object)string0));
      assertEquals("K", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      
      String string2 = "NJEZs";
      String string3 = doubleMetaphone0.encode("`8cIS[Zrfe,<");
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertEquals("SSSR", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string3);
      
      String string4 = doubleMetaphone0.doubleMetaphone("NJEZs");
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertEquals("NJSS", string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string4);
      
      String string5 = null;
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "K");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(3970);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("B0jFKC`0R$'VP%go${");
      assertEquals("PJFK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      String string1 = doubleMetaphone0.doubleMetaphone("l", true);
      assertFalse(string1.equals((Object)string0));
      assertEquals("L", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      
      doubleMetaphone_DoubleMetaphoneResult1.append("");
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult1.isComplete();
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertTrue(boolean0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("^", "(.ISLGVZG2]\"r-RU_", true);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("dTBrveglm5r6 `]$9", "B0jFKC`0R$'VP%go${");
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "B0jFKC`0R$'VP%go${");
      assertTrue(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string1));
      assertEquals("PJFK", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "B0jFKC`0R$'VP%go${");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("+VwUDJx", "");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("+VwUDJx", "OE}NaQv|7GZ5", false);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("+VwUDJx");
      assertEquals("FTJK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("0m^");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('*', '+');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string1 = doubleMetaphone1.doubleMetaphone("", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNull(string1);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('7', '*');
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('*', '2');
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone1.new DoubleMetaphoneResult(2315);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      String string2 = doubleMetaphone_DoubleMetaphoneResult1.getAlternate();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(string2.equals((Object)string0));
      assertEquals("", string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotNull(string2);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult2 = doubleMetaphone1.new DoubleMetaphoneResult(0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult2);
      
      String string3 = doubleMetaphone_DoubleMetaphoneResult2.getAlternate();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(string3.equals((Object)string0));
      assertTrue(string3.equals((Object)string2));
      assertEquals("", string3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertNotNull(string3);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("nf", "1d^s/hJb-]`");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult1.appendAlternate("OE}NaQv|7GZ5");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("OE}NaQv|7GZ5", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String[] stringArray0 = new String[0];
      boolean boolean0 = DoubleMetaphone.contains((String) null, (-3454), (-3454), stringArray0);
      assertFalse(boolean0);
      assertEquals(0, stringArray0.length);
      
      String string0 = doubleMetaphone0.doubleMetaphone((String) null, false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("N", "fE,Fp:");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("SM<F7", false);
      assertEquals("SMF", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("E", "dz+@Hl", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(72);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = "";
      String string1 = doubleMetaphone0.encode(";la$o#lo");
      assertFalse(string1.equals((Object)string0));
      assertEquals("LL", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual(";la$o#lo", "", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("LL", (String) null);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = 84;
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(84);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('d');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("d", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("d", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string2 = "p5";
      doubleMetaphone_DoubleMetaphoneResult0.append("RrHLu|~Fvs", "p5");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("dRrHLu|~Fvs", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("dp5", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('v', 'J');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("dRrHLu|~Fvsv", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("dp5J", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("dRrHLu|~Fvsv", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("dp5J", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      char char0 = '~';
      doubleMetaphone_DoubleMetaphoneResult0.append('d', '~');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("dRrHLu|~Fvsvd", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("dp5J~", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append((String) null, "HIA");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(3970);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string0 = "B0jFKC`0R$'VP%go${";
      String string1 = doubleMetaphone0.doubleMetaphone("B0jFKC`0R$'VP%go${");
      assertFalse(string1.equals((Object)string0));
      assertEquals("PJFK", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone0.setMaxCodeLen((-1117));
      assertEquals((-1117), doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      assertEquals((-1117), doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean0);
      assertEquals((-1117), doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('l');
      assertEquals((-1117), doubleMetaphone0.getMaxCodeLen());
      assertEquals("l", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("", "");
      assertEquals((-1117), doubleMetaphone0.getMaxCodeLen());
      assertEquals("l", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("cKcOkn0Vf= Z+?");
      assertEquals((-1117), doubleMetaphone0.getMaxCodeLen());
      assertEquals("l", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("cKcOkn0Vf= Z+?", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.doubleMetaphone("C!", false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("ZA", true);
      assertEquals("S", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.encode("S");
      assertTrue(string1.equals((Object)string0));
      assertEquals("S", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("S", "MACHER", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string2 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("", string2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(string2);
      
      doubleMetaphone0.setMaxCodeLen(0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("PVjHj{'y:^P:5&=Y#");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string3 = doubleMetaphone1.doubleMetaphone("GNRGY", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertEquals("NRK", string3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string3);
      
      String string4 = doubleMetaphone0.doubleMetaphone("A", false);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string4.equals((Object)string0));
      assertTrue(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertEquals("", string4);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string4);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('-');
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("WRRGY", "");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string5 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(string5.equals((Object)string2));
      assertTrue(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string1));
      assertEquals("", string5);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string5);
      
      Object object0 = doubleMetaphone1.encode((Object) "A");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(object0.equals((Object)string5));
      assertFalse(object0.equals((Object)string4));
      assertFalse(object0.equals((Object)string3));
      assertFalse(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string2));
      assertFalse(object0.equals((Object)string1));
      assertEquals("A", object0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(object0);
      
      char char0 = doubleMetaphone1.charAt("org.apache.commons.codec.EncoderException", 1742);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals('\u0000', char0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("y+NyuR>>1(", "", true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("b@}}#I?NWb|WQ=I:-Pc");
      assertEquals("PNPK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      Object object0 = doubleMetaphone0.encode((Object) "GNOM");
      assertFalse(object0.equals((Object)string0));
      assertEquals("NM", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "NM");
      assertTrue(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string0));
      assertEquals("NM", object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(90);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("Fy$-)B)r>mXGh", "[SS/;Bs^ NBy**C.");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("Fy$-)B)r>mXGh", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("[SS/;Bs^ NBy**C.", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("YUDJ");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("[SS/;Bs^ NBy**C.YUDJ", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("Fy$-)B)r>mXGhYUDJ", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("sbsYjW72l", "y+NyuR>>1(");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(88);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string0 = "z{-hg#";
      String string1 = doubleMetaphone0.doubleMetaphone("z{-hg#");
      assertFalse(string1.equals((Object)string0));
      assertEquals("SK", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.appendPrimary((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = "org.apache.commons.codec.EncoderException";
      String string1 = doubleMetaphone0.encode("org.apache.commons.codec.EncoderException");
      assertFalse(string1.equals((Object)string0));
      assertEquals("ARKP", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      
      String string2 = "ED";
      doubleMetaphone0.setMaxCodeLen(2930);
      assertEquals(2930, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException");
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertEquals("ARKPXKMNSKTKNKTRKSPXN", string3);
      assertEquals(2930, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string3);
      
      String string4 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", true);
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertEquals("ARKPKKMNSKTKNKTRKSPXN", string4);
      assertEquals(2930, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string4);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-4182052));
      assertEquals(2930, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean0);
      assertEquals(2930, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('4');
      assertEquals(2930, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(87);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(2930, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone_DoubleMetaphoneResult1.append('q', '4');
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(2930, doubleMetaphone0.getMaxCodeLen());
      assertEquals("q", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("4", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      String string5 = doubleMetaphone0.doubleMetaphone("ARKP", true);
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string4));
      assertTrue(string5.equals((Object)string1));
      assertEquals("ARKP", string5);
      assertEquals(2930, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string5);
      
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append("CG");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = null;
      stringArray0[4] = null;
      stringArray0[5] = null;
      stringArray0[6] = null;
      stringArray0[7] = null;
      stringArray0[8] = null;
      // Undeclared exception!
      try { 
        DoubleMetaphone.contains((String) null, 0, 520, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("UCCEE", (String) null, false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("org.apache.commons.codec.EncoderException");
      assertEquals("ARKP", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("PS", ")", true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("Zt'zYe6'tP", "Zt'zYe6'tP");
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "org.apache.commons.codec.EncoderException", false);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1920);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("ARKP");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKP", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string1 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertTrue(string1.equals((Object)string0));
      assertEquals("ARKP", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKP", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string2);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = null;
      boolean boolean0 = DoubleMetaphone.contains((String) null, (-3454), (-3454), stringArray0);
      assertFalse(boolean0);
      assertEquals(3, stringArray0.length);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = ">S?1Hn)FVB";
      String string1 = doubleMetaphone0.doubleMetaphone(">S?1Hn)FVB", false);
      assertFalse(string1.equals((Object)string0));
      assertEquals("SNFF", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("EWSKY", false);
      assertEquals("ASK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = "TIA";
      String string1 = doubleMetaphone0.doubleMetaphone("TIA");
      assertFalse(string1.equals((Object)string0));
      assertEquals("X", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      
      int int0 = 0;
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("X", "DM6eW +X,,ibw@OEW", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertTrue(int1 == int0);
      assertEquals(0, int1);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone0.setMaxCodeLen((-1));
      assertEquals((-1), doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('5');
      assertEquals((-1), doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string2 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("", string2);
      assertEquals((-1), doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(string2);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("X");
      assertEquals((-1), doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      char char0 = 'H';
      doubleMetaphone_DoubleMetaphoneResult0.append('H');
      assertEquals((-1), doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("k:*>");
      assertEquals((-1), doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals((-1), doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("en0hG8+dL|4Bv43JB-,", "I(T'&QMp2?m%;CLN[");
      assertEquals((-1), doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('1');
      assertEquals((-1), doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("IGp*%2,~s\"ifmpT=6%");
      assertEquals((-1), doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("en0hG8+dL|4Bv43JB-,", "YSL", false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("L", "}(XH'P2O%DW");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("#");
      assertEquals("", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(65);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('n');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("n", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('\\');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("n", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("\\", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone0.setMaxCodeLen((-1));
      assertEquals((-1), doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("#", "org.apache.commons.codec.EncoderException", false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException");
      assertEquals("ARKP", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException");
      assertTrue(string1.equals((Object)string0));
      assertEquals("ARKP", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      
      char char0 = doubleMetaphone0.charAt("ARKP", (-628));
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("", "ARKP");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone0.setMaxCodeLen(0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("ARKP");
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('#');
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("ARKP", "uS");
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("", "V1P{$/n^h'cF2E");
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('o');
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      char char1 = doubleMetaphone0.charAt("ARKP", 0);
      assertFalse(char1 == char0);
      assertEquals('A', char1);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "ARKP";
      stringArray0[1] = "ARKP";
      stringArray0[2] = "ARKP";
      stringArray0[3] = "ARKP";
      stringArray0[4] = "ARKP";
      stringArray0[5] = "org.apache.commons.codec.EncoderException";
      boolean boolean1 = DoubleMetaphone.contains("<c", 3934, (-628), stringArray0);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(6, stringArray0.length);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "ARKP");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = "v#Cdd";
      Object object0 = doubleMetaphone0.encode((Object) ">BAj?a");
      assertFalse(object0.equals((Object)string0));
      assertEquals("PJ", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      
      String string1 = doubleMetaphone0.doubleMetaphone(">BAj?a");
      assertFalse(string1.equals((Object)string0));
      assertTrue(string1.equals((Object)object0));
      assertEquals("PJ", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "3#VqM6SIw-");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = "df~e'8;pd";
      Object object0 = doubleMetaphone0.encode((Object) "df~e'8;pd");
      assertFalse(object0.equals((Object)string0));
      assertEquals("TFPT", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "TFPT");
      assertFalse(object1.equals((Object)string0));
      assertTrue(object1.equals((Object)object0));
      assertEquals("TFPT", object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object1);
      
      int int0 = (-964);
      try { 
        doubleMetaphone0.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone("ZA", true);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      char char0 = 'E';
      doubleMetaphone0.isDoubleMetaphoneEqual("cSo>5!c!(", "ZA");
      doubleMetaphone_DoubleMetaphoneResult0.append('E');
      doubleMetaphone_DoubleMetaphoneResult0.append("cSo>5!c!(", "ZA");
      char char1 = 'c';
      doubleMetaphone_DoubleMetaphoneResult0.append('c', 'E');
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone_DoubleMetaphoneResult0.append('E', 'O');
      doubleMetaphone_DoubleMetaphoneResult0.append("", "ZA");
      doubleMetaphone0.getMaxCodeLen();
      doubleMetaphone0.encode("M");
      doubleMetaphone0.encode((Object) "TTH");
      try { 
        doubleMetaphone0.encode((Object) doubleMetaphone_DoubleMetaphoneResult0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      int int0 = (-642);
      doubleMetaphone0.setMaxCodeLen((-642));
      // Undeclared exception!
      try { 
        doubleMetaphone0.encode("TS");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.isDoubleMetaphoneEqual("4|+6", "");
      doubleMetaphone0.doubleMetaphone("");
      doubleMetaphone0.charAt("4|+6", 0);
      doubleMetaphone0.getMaxCodeLen();
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(4);
      String string0 = "";
      doubleMetaphone1.doubleMetaphone("", false);
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone1.isDoubleMetaphoneEqual("(.ISLGVZG2]\"r-RU_", "", false);
      // Undeclared exception!
      try { 
        doubleMetaphone1.isDoubleMetaphoneEqual((String) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode("");
      doubleMetaphone0.doubleMetaphone("L!6v-FCm1Mg0n-");
      int int0 = 1906;
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1906);
      doubleMetaphone_DoubleMetaphoneResult0.append("");
      doubleMetaphone_DoubleMetaphoneResult0.append('m', 'm');
      Object object0 = new Object();
      doubleMetaphone0.doubleMetaphone("OO");
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = doubleMetaphone0.doubleMetaphone("kEdRkKRu]9<");
      assertEquals("KTRK", string0);
      
      doubleMetaphone0.encode((Object) "SIA");
      Object object0 = doubleMetaphone0.encode((Object) "S");
      assertEquals("S", object0);
      
      doubleMetaphone0.isDoubleMetaphoneEqual("RGY", "a", true);
      doubleMetaphone0.doubleMetaphone((String) null);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.append(':');
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("SIA", "");
      doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      String string1 = doubleMetaphone0.encode("");
      assertNull(string1);
      
      Object object1 = doubleMetaphone0.encode((Object) "RGY");
      assertEquals("RJ", object1);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("\"7");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode("\"");
      doubleMetaphone0.encode((Object) "\"");
      boolean boolean0 = false;
      doubleMetaphone0.doubleMetaphone("\"", false);
      doubleMetaphone0.setMaxCodeLen((-1661));
      String string0 = "'2;zM.$A+O9)";
      String string1 = " Q";
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "org.apache.commons.codec.EncoderException", false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.isDoubleMetaphoneEqual("+VwUDJx", "");
      doubleMetaphone0.isDoubleMetaphoneEqual("+VwUDJx", "OE}NaQv|7GZ5", false);
      doubleMetaphone0.doubleMetaphone("+VwUDJx");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("0m^");
      doubleMetaphone_DoubleMetaphoneResult0.append('*', '+');
      doubleMetaphone_DoubleMetaphoneResult0.append('*');
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("OM");
      doubleMetaphone_DoubleMetaphoneResult0.append("Ay\")g^X.-i|Z", "m@6L*zpayb");
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("0@>wpU");
      doubleMetaphone_DoubleMetaphoneResult0.append(" ", "Ay\")g^X.-i|Z");
      doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      String string0 = doubleMetaphone0.doubleMetaphone("+VwUDJx");
      assertEquals("FTJK", string0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('?');
      doubleMetaphone_DoubleMetaphoneResult0.append('+', '6');
      doubleMetaphone0.getMaxCodeLen();
      doubleMetaphone_DoubleMetaphoneResult0.append("~#dAM9", "0m^");
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('+');
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("I", "OM");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode("org.apache.commons.codec.EncoderException");
      doubleMetaphone0.setMaxCodeLen(2930);
      doubleMetaphone0.charAt("ED", 2930);
      doubleMetaphone0.encode("");
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "XRJ=6aMsE,<G.S5dw", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", true);
      int int0 = 0;
      doubleMetaphone0.doubleMetaphone("", true);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone0.encode((Object) "org.apache.commons.codec.EncoderException");
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('z');
      String string0 = "K1UN8mVb";
      doubleMetaphone0.doubleMetaphone("YSL");
      doubleMetaphone_DoubleMetaphoneResult0.append("K1UN8mVb");
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("X-&");
      String string1 = "";
      doubleMetaphone_DoubleMetaphoneResult0.append('z');
      doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "", true);
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "X-&", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.isDoubleMetaphoneEqual("y+NyuR>>1(", "", false);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-2079));
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1977));
      doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('M');
      doubleMetaphone_DoubleMetaphoneResult0.append('M');
      doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      String string0 = "UY";
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append("UY");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-3142));
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("org.apache.commons.codec.EncoderException");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      boolean boolean0 = false;
      doubleMetaphone0.isDoubleMetaphoneEqual("WH", "WH", false);
      doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      String string0 = "";
      boolean boolean1 = true;
      String string1 = "org.apache.commons.codec.EncoderException";
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "org.apache.commons.codec.EncoderException", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(3970);
      doubleMetaphone0.doubleMetaphone("B0jFKC`0R$'VP%go${");
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      doubleMetaphone0.setMaxCodeLen((-1117));
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('l');
      doubleMetaphone_DoubleMetaphoneResult0.append("", "");
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("cKcOkn0Vf= Z+?");
      doubleMetaphone_DoubleMetaphoneResult0.append("cKcOkn0Vf= Z+?", "cKcOkn0Vf= Z+?");
      assertEquals((-1117), doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      int int0 = 0;
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      String string0 = "";
      doubleMetaphone0.encode((Object) "");
      try { 
        doubleMetaphone0.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "SM<f75ga4Y<");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode(";la$o#lo");
      doubleMetaphone0.isDoubleMetaphoneEqual(";la$o#lo", "", false);
      doubleMetaphone0.doubleMetaphone((String) null);
      doubleMetaphone0.doubleMetaphone((String) null);
      doubleMetaphone0.setMaxCodeLen(6);
      doubleMetaphone0.getMaxCodeLen();
      doubleMetaphone0.setMaxCodeLen(1195);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-227));
      String string0 = "@";
      String string1 = "";
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append("LL", "]{XSyfgX7");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "";
      doubleMetaphone0.encode("");
      doubleMetaphone0.doubleMetaphone("");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      doubleMetaphone0.doubleMetaphone("W}xW{E`,N");
      String string1 = "";
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "2$A}L1N>6", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = null;
      doubleMetaphone0.doubleMetaphone((String) null, true);
      String string1 = "org.apache.commons.codec.EncoderException";
      int int0 = 0;
      doubleMetaphone0.charAt("org.apache.commons.codec.EncoderException", 0);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      char char0 = '%';
      doubleMetaphone_DoubleMetaphoneResult0.append('%', 'o');
      doubleMetaphone_DoubleMetaphoneResult0.append('o');
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      try { 
        doubleMetaphone0.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }
}
