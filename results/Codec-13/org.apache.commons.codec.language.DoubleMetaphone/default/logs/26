* EvoSuite 1.1.1-SNAPSHOT
* Configuration: default
* Going to generate test cases for class: org.apache.commons.codec.language.DoubleMetaphone
* Starting Client-0
* Connecting to master process on port 2938
* Analyzing classpath: 
  - subjects/buggy-versions/Codec-13/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.codec.language.DoubleMetaphone
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 2131
* Using seed 779453901
* Starting evolution
* Initial Number of Goals in DynaMOSA = 343 / 2131
Number of times BBC is called in total: 0
* Search finished after 602s and 1725 generations, 556796 statements, best individual has fitness: 205.0
* Minimizing test suite
[MASTER] 20:52:36.323 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 96%
* Total number of goals: 404
* Number of covered goals: 386
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 91%
* Total number of goals: 498
* Number of covered goals: 451
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 17
* Number of covered goals: 17
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 93%
* Total number of goals: 662
* Number of covered goals: 613
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 91%
* Total number of goals: 498
* Number of covered goals: 451
* Generated 302 tests with total length 2195
* Resulting test suite's coverage: 77% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 20:53:20.494 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6684% of time used, but only 60/302 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 18%
* Compiling and checking tests
[MASTER] 20:54:12.059 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 20:54:12.060 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
assertEquals(4, doubleMetaphone0.getMaxCodeLen());
assertNotNull(doubleMetaphone0);

boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("Ghf>;JF*P BnQHpC>8O", "=Y,JSQ763FQ1ie\"Fn]", false);
assertEquals(4, doubleMetaphone0.getMaxCodeLen());
assertFalse(boolean0);

doubleMetaphone0.setMaxCodeLen(2147483645);
assertEquals(2147483645, doubleMetaphone0.getMaxCodeLen());

doubleMetaphone0.encode("Ghf>;JF*P BnQHpC>8O");

[MASTER] 20:54:13.937 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 20:54:13.938 [logback-1] WARN  JUnitAnalyzer - Failing test:
 String string0 = "AI";
int int0 = 75;
String[] stringArray0 = null;
boolean boolean0 = DoubleMetaphone.contains("AI", 75, 75, (String[]) null);
assertFalse(boolean0);

int int1 = 337;
boolean boolean1 = DoubleMetaphone.contains("AI", (-126), (-126), (String[]) null);
assertTrue(boolean1 == boolean0);
assertFalse(boolean1);

boolean boolean2 = DoubleMetaphone.contains("AI", (-126), (-126), (String[]) null);
assertTrue(boolean2 == boolean0);
assertTrue(boolean2 == boolean1);
assertFalse(boolean2);

DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
assertEquals(4, doubleMetaphone0.getMaxCodeLen());
assertNotNull(doubleMetaphone0);

doubleMetaphone0.setMaxCodeLen(2147483645);
assertEquals(2147483645, doubleMetaphone0.getMaxCodeLen());

String string1 = "WR";
String string2 = "";
doubleMetaphone0.isDoubleMetaphoneEqual("WR", "v_/IG");

[MASTER] 20:54:15.314 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 20:54:15.314 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
assertEquals(4, doubleMetaphone0.getMaxCodeLen());
assertNotNull(doubleMetaphone0);

doubleMetaphone0.setMaxCodeLen(2147483645);
assertEquals(2147483645, doubleMetaphone0.getMaxCodeLen());

doubleMetaphone0.doubleMetaphone("OO", false);

[MASTER] 20:54:16.407 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 20:54:16.407 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
assertEquals(4, doubleMetaphone0.getMaxCodeLen());
assertNotNull(doubleMetaphone0);

doubleMetaphone0.setMaxCodeLen(2147483645);
assertEquals(2147483645, doubleMetaphone0.getMaxCodeLen());

doubleMetaphone0.doubleMetaphone("SIA");

[MASTER] 20:54:17.467 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 20:54:17.468 [logback-1] WARN  JUnitAnalyzer - Failing test:
 String string0 = "ABI";
int int0 = 75;
String[] stringArray0 = null;
boolean boolean0 = DoubleMetaphone.contains("ABI", 75, 75, (String[]) null);
assertFalse(boolean0);

int int1 = 337;
boolean boolean1 = DoubleMetaphone.contains("ABI", (-126), (-126), (String[]) null);
assertTrue(boolean1 == boolean0);
assertFalse(boolean1);

boolean boolean2 = DoubleMetaphone.contains("ABI", (-126), (-126), (String[]) null);
assertTrue(boolean2 == boolean1);
assertTrue(boolean2 == boolean0);
assertFalse(boolean2);

DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
assertEquals(4, doubleMetaphone0.getMaxCodeLen());
assertNotNull(doubleMetaphone0);

doubleMetaphone0.setMaxCodeLen(2147483645);
assertEquals(2147483645, doubleMetaphone0.getMaxCodeLen());

String string1 = "WR";
String string2 = "tZ";
doubleMetaphone0.encode((Object) "WR");

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing tests to file
* Writing JUnit test case 'DoubleMetaphone_ESTest' to results/Codec-13/org.apache.commons.codec.language.DoubleMetaphone/default/tests/26
* Done!

* Computation finished
