* EvoSuite 1.1.1-SNAPSHOT
* Configuration: default
* Going to generate test cases for class: org.apache.commons.codec.language.DoubleMetaphone
* Starting Client-0
* Connecting to master process on port 9670
* Analyzing classpath: 
  - subjects/buggy-versions/Codec-13/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.codec.language.DoubleMetaphone
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 2131
* Using seed 3150189734
* Starting evolution
* Initial Number of Goals in DynaMOSA = 343 / 2131
* Search finished after 304s and 527 generations, 183738 statements, best individual has fitness: 241.0
* Minimizing test suite
[MASTER] 03:12:39.714 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 404
* Number of covered goals: 382
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 88%
* Total number of goals: 498
* Number of covered goals: 439
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 91%
* Total number of goals: 662
* Number of covered goals: 604
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 88%
* Total number of goals: 498
* Number of covered goals: 439
* Generated 266 tests with total length 2161
* Resulting test suite's coverage: 76% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 03:13:25.011 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6757% of time used, but only 40/266 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 17%
* Compiling and checking tests
[MASTER] 03:13:54.223 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 03:13:54.224 [logback-1] WARN  JUnitAnalyzer - Failing test:
 String[] stringArray0 = new String[2];
stringArray0[0] = "CI";
stringArray0[1] = "CI";
boolean boolean0 = DoubleMetaphone.contains("CI", 2526, 2526, stringArray0);
assertEquals(2, stringArray0.length);
assertFalse(boolean0);

DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
assertEquals(4, doubleMetaphone0.getMaxCodeLen());
assertNotNull(doubleMetaphone0);

doubleMetaphone0.setMaxCodeLen(2526);
assertEquals(2526, doubleMetaphone0.getMaxCodeLen());

String string0 = doubleMetaphone0.doubleMetaphone("HEIM", false);
assertEquals(2526, doubleMetaphone0.getMaxCodeLen());
assertNotNull(string0);
assertEquals("HM", string0);

boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("Q", "CI", false);
assertTrue(boolean1 == boolean0);
assertEquals(2526, doubleMetaphone0.getMaxCodeLen());
assertFalse(boolean1);

String string1 = doubleMetaphone0.encode("Tnn\"-K21@q");
assertFalse(string1.equals((Object)string0));
assertEquals(2526, doubleMetaphone0.getMaxCodeLen());
assertNotNull(string1);
assertEquals("TNKK", string1);

String string2 = "";
doubleMetaphone0.setMaxCodeLen(3);
assertEquals(3, doubleMetaphone0.getMaxCodeLen());

doubleMetaphone0.setMaxCodeLen(2147483645);
assertEquals(2147483645, doubleMetaphone0.getMaxCodeLen());

String string3 = "CZ";
doubleMetaphone0.isDoubleMetaphoneEqual("CZ", "", false);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing tests to file
* Writing JUnit test case 'DoubleMetaphone_ESTest' to results/Codec-13/org.apache.commons.codec.language.DoubleMetaphone/default/tests/26
* Done!

* Computation finished
