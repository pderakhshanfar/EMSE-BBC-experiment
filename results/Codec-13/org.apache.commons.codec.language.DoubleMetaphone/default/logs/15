* EvoSuite 1.1.1-SNAPSHOT
* Configuration: default
* Going to generate test cases for class: org.apache.commons.codec.language.DoubleMetaphone
* Starting Client-0
* Connecting to master process on port 9841
* Analyzing classpath: 
  - subjects/buggy-versions/Codec-13/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.codec.language.DoubleMetaphone
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 2131
* Using seed 1962539008
* Starting evolution
* Initial Number of Goals in DynaMOSA = 343 / 2131
Number of times BBC is called in total: 0
* Search finished after 605s and 1796 generations, 583341 statements, best individual has fitness: 198.0
* Minimizing test suite
[MASTER] 20:51:57.164 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 96%
* Total number of goals: 404
* Number of covered goals: 388
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 92%
* Total number of goals: 498
* Number of covered goals: 456
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 16
* Number of covered goals: 16
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 662
* Number of covered goals: 607
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 92%
* Total number of goals: 498
* Number of covered goals: 456
* Generated 291 tests with total length 2058
* Resulting test suite's coverage: 78% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 20:52:41.799 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6674666666666667% of time used, but only 38/291 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 14%
* Compiling and checking tests
[MASTER] 20:53:40.431 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 20:53:40.432 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
assertNotNull(doubleMetaphone0);
assertEquals(4, doubleMetaphone0.getMaxCodeLen());

boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("-0-.(HOj58G", "MWKiE+9NtS5smT{$", false);
assertFalse(boolean0);
assertEquals(4, doubleMetaphone0.getMaxCodeLen());

doubleMetaphone0.setMaxCodeLen(1337);
assertEquals(1337, doubleMetaphone0.getMaxCodeLen());

boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("']IB9c", "org.apache.commons.codec.EncoderException");
assertFalse(boolean1);
assertTrue(boolean1 == boolean0);
assertEquals(1337, doubleMetaphone0.getMaxCodeLen());

boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("PNUCCEE", "'QHFyI&!9;J8)Mf", false);
assertFalse(boolean2);
assertTrue(boolean2 == boolean1);
assertTrue(boolean2 == boolean0);
assertEquals(1337, doubleMetaphone0.getMaxCodeLen());

char char0 = doubleMetaphone0.charAt("']IB9c", 6);
assertEquals('\u0000', char0);
assertEquals(1337, doubleMetaphone0.getMaxCodeLen());

doubleMetaphone0.setMaxCodeLen(2147483645);
assertEquals(2147483645, doubleMetaphone0.getMaxCodeLen());

doubleMetaphone0.doubleMetaphone("']IB9c", true);

[MASTER] 20:53:42.691 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 20:53:42.691 [logback-1] WARN  JUnitAnalyzer - Failing test:
 String string0 = "Z4'\"koc<";
DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
assertNotNull(doubleMetaphone0);
assertEquals(4, doubleMetaphone0.getMaxCodeLen());

doubleMetaphone0.setMaxCodeLen(2147483645);
assertEquals(2147483645, doubleMetaphone0.getMaxCodeLen());

doubleMetaphone0.doubleMetaphone("Z4'\"koc<", true);

[MASTER] 20:53:47.363 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing tests to file
* Writing JUnit test case 'DoubleMetaphone_ESTest' to results/Codec-13/org.apache.commons.codec.language.DoubleMetaphone/default/tests/15
* Done!

* Computation finished
