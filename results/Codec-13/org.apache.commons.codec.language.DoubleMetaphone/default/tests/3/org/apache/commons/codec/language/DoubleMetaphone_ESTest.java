/*
 * This file was automatically generated by EvoSuite
 * Thu Feb 25 19:15:24 GMT 2021
 */

package org.apache.commons.codec.language;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.codec.language.DoubleMetaphone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DoubleMetaphone_ESTest extends DoubleMetaphone_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      String string0 = "GNKNJOSE";
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string1);
      
      doubleMetaphone0.setMaxCodeLen(2147483645);
      assertEquals(2147483645, doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      doubleMetaphone0.isDoubleMetaphoneEqual("@nv", "GNKNJOSE", false);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual(";].O_iGH_#B;F", "xT`%-5aA^=qn{1>");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone(" 1Q", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("K", string0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("/agHI");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("K", string0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "/agHI";
      stringArray0[1] = "K";
      stringArray0[2] = null;
      stringArray0[3] = null;
      stringArray0[4] = "/agHI";
      boolean boolean0 = DoubleMetaphone.contains((String) null, (-1101), 2631, stringArray0);
      assertFalse(boolean0);
      assertEquals(5, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("gHI");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("J", string0);
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "gHI";
      stringArray0[1] = "J";
      stringArray0[2] = "J";
      stringArray0[3] = "J";
      stringArray0[4] = "5G7nKB#LFC";
      stringArray0[5] = "gHI";
      stringArray0[6] = "C";
      boolean boolean0 = DoubleMetaphone.contains("C", 73, 73, stringArray0);
      assertFalse(boolean0);
      assertEquals(7, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone(".SzqO$*YgHY?<");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("SKK", string0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = ".SzqO$*YgHY?<";
      stringArray0[1] = ".SzqO$*YgHY?<";
      stringArray0[2] = ".SzqO$*YgHY?<";
      stringArray0[3] = "SKK";
      stringArray0[4] = "SKK";
      String string1 = doubleMetaphone0.doubleMetaphone("GNDG");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("NTK", string1);
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode(".S(O$*YgHY?<");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("SK", string0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone(".S(O$*YgHY?<");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("SK", string0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = ".S(O$*YgHY?<";
      stringArray0[1] = ".S(O$*YgHY?<";
      stringArray0[2] = ".S(O$*YgHY?<";
      stringArray0[3] = "SK";
      stringArray0[4] = "SK";
      boolean boolean0 = DoubleMetaphone.contains("SK", (-4805), (-504), stringArray0);
      assertFalse(boolean0);
      assertEquals(5, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("J)GLi3U#Xhsh");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("JKLK", string0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("%wnOvVgO//[}RB&@Vd", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("NFKR", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("QS%ipiJA3M^f%sC", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("KSPH", string1);
      assertFalse(string1.equals((Object)string0));
      
      char char0 = doubleMetaphone0.charAt("IER", (-3709));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      String string2 = doubleMetaphone0.doubleMetaphone("IER", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("A", string2);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      
      boolean boolean0 = DoubleMetaphone.contains("%wnOvVgO//[}RB&@Vd", (-161207507), 36, (String[]) null);
      assertFalse(boolean0);
      
      String string3 = doubleMetaphone0.doubleMetaphone("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string3);
      
      char char1 = doubleMetaphone0.charAt("Y", (-3709));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char1);
      assertTrue(char1 == char0);
      
      String string4 = doubleMetaphone0.doubleMetaphone("CE", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string4);
      assertEquals("S", string4);
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      
      boolean boolean1 = DoubleMetaphone.contains("L^", (-161207507), 36, (String[]) null);
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      String string5 = doubleMetaphone0.doubleMetaphone("", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string5);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      String string0 = "ZYjb{AW&O9n}=i(ZYFJ";
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("ZYjb{AW&O9n}=i(ZYFJ", "O2ijAm}AlVM", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string0 = doubleMetaphone1.encode("b7>Ro[");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("PR", string0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("TCH", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("X", string1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("=i/$Yimc Ci@m3", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("MKM", string2);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(2147483645);
      assertEquals(2147483645, doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      doubleMetaphone0.doubleMetaphone("=CCE");
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("][`Z<*GUL^#}kaE");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("SKLK", string0);
      
      String string1 = doubleMetaphone0.encode("DGILL(Y(g!mH)A");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("JLKM", string1);
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("iDGy$erl-`gxfD6");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("AJRL", string0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("aGNK|", "aGNK|", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string0 = doubleMetaphone0.encode("aGNK|");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("AKNK", string0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      String string0 = "IER";
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      int int0 = 2147483645;
      doubleMetaphone0.setMaxCodeLen(2147483645);
      assertEquals(2147483645, doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      doubleMetaphone0.encode("IER");
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("GNAGHE");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("NK", string0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("{z^nf8", "{z^nf8", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("X|_:f0MO_8J'=%=aH1x", "gX7w");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean1 == boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string0 = doubleMetaphone1.encode("GNAGHE");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("NK", string0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string0 = doubleMetaphone0.encode("NCHAE");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("NK", string0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("KNCHAE", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("NK", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("WR");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("R", string1);
      assertFalse(string1.equals((Object)string0));
      
      String string2 = "rUfi*";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("rUfi*", "rUfi*");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("yr86iQsp}A#=OCZt l@", "rUfi*", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
      
      char char0 = doubleMetaphone0.charAt("rUfi*", 178);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("GNCHAE");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("NK", string0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("GhbG");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KPK", string0);
      
      char char0 = doubleMetaphone0.charAt("KPK", 0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('K', char0);
      
      char char1 = doubleMetaphone0.charAt("W]5/.}Q@gHW~}yaNzW~", 0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('W', char1);
      assertFalse(char1 == char0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("aGN|");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("AKN", string0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string0 = doubleMetaphone1.encode("CHOR");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KR", string0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("*33h0ZvV+D", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("SFT", string0);
      
      String string1 = doubleMetaphone0.encode("GNR-S");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("NRS", string1);
      assertFalse(string1.equals((Object)string0));
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "8^q0>.S5#mnVOd";
      stringArray0[1] = "GNR-S";
      boolean boolean0 = DoubleMetaphone.contains("8^q0>.S5#mnVOd", 84, 6, stringArray0);
      assertFalse(boolean0);
      assertEquals(2, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("Gy4a0fNRiq}");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KFNR", string0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("GhpQ=bBBIA", "GhpQ=bBBIA");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("GhpQ=bBBIA", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KPKP", string0);
      
      char char0 = doubleMetaphone0.charAt("KPKP", 0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('K', char0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = "PSK";
      String string1 = doubleMetaphone0.encode("PSK");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("SK", string1);
      assertFalse(string1.equals((Object)string0));
      
      String string2 = doubleMetaphone0.doubleMetaphone("PSK", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("SK", string2);
      assertFalse(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      
      doubleMetaphone0.setMaxCodeLen(2147483645);
      assertEquals(2147483645, doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      doubleMetaphone0.doubleMetaphone("PSK", false);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("agHE");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("AK", string0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("<CCH_iAnm7a4");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("XNM", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("K`_k", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("KK", string1);
      assertFalse(string1.equals((Object)string0));
      
      char char0 = doubleMetaphone0.charAt("Y72b([[# d:>", 1937);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string0 = doubleMetaphone1.encode("woa1?cHT=p '#R :");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("AKTP", string0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("CHs");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KS", string0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("MA", "AS");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.encode("PSBACH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("SPK", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("PSBACH", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("SPK", string1);
      assertTrue(string1.equals((Object)string0));
      
      String string2 = doubleMetaphone0.doubleMetaphone("", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string2);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("AS");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("AS", string0);
      
      boolean boolean0 = DoubleMetaphone.contains("AS", 1, 4, (String[]) null);
      assertFalse(boolean0);
      
      char char0 = doubleMetaphone0.charAt("e7nHhqFUC`b:)NP", 1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('7', char0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "WR?GN|");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("PSAGNK|");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("SKNK", string0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("6Ell");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("L", string0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string0 = doubleMetaphone1.doubleMetaphone("H*z`fFF%KYBou)yfo4", false);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("SFFK", string0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string1 = doubleMetaphone1.encode("j^gETvT");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("JKTF", string1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string2 = doubleMetaphone1.doubleMetaphone("Sj", true);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("S ", string2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string3 = doubleMetaphone0.doubleMetaphone("j^gETvT", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string3);
      assertEquals("AKTF", string3);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("H*z`fFF%KYBou)yfo4", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("SFFK", string0);
      
      String string1 = doubleMetaphone0.encode("j^gETvT");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("JKTF", string1);
      assertFalse(string1.equals((Object)string0));
      
      String string2 = doubleMetaphone0.doubleMetaphone("H*z`fFF%KYBou)yfo4", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("TSFF", string2);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      int int0 = 0;
      String[] stringArray0 = new String[5];
      stringArray0[0] = "org.apache.commons.codec.EncoderException";
      stringArray0[1] = "WRWITZ";
      stringArray0[2] = "org.apache.commons.codec.EncoderException";
      stringArray0[3] = "org.apache.commons.codec.EncoderException";
      stringArray0[4] = "org.apache.commons.codec.EncoderException";
      boolean boolean0 = DoubleMetaphone.contains("org.apache.commons.codec.EncoderException", 0, 0, stringArray0);
      assertFalse(boolean0);
      assertEquals(5, stringArray0.length);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("ARKP", string0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1);
      assertFalse(boolean1 == boolean0);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("I]m8]P3\\", "org.apache.commons.codec.EncoderException", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      
      Object object0 = doubleMetaphone0.encode((Object) "WRWITZ");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("RTS", object0);
      assertFalse(object0.equals((Object)string0));
      
      doubleMetaphone0.setMaxCodeLen(0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      Object object1 = doubleMetaphone0.encode((Object) "WRWITZ");
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object1);
      assertEquals("", object1);
      assertFalse(object1.equals((Object)string0));
      assertFalse(object1.equals((Object)object0));
      
      int int1 = 69;
      char char0 = doubleMetaphone0.charAt("org.apache.commons.codec.EncoderException", 69);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      String string1 = "=NX";
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("PSWITZ");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("STS", string0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) "BACHER");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("PKR", object0);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "Wq");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("GhpQ=bBBIA", (String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("PSHOLM", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("SLM", string0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("WRPSHOLM", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("RPSL", string0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("KNSIA");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("NS", string0);
      
      String string1 = doubleMetaphone0.encode("zl<pk`X,6");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("SLPK", string1);
      assertFalse(string1.equals((Object)string0));
      
      String[] stringArray0 = new String[0];
      boolean boolean0 = DoubleMetaphone.contains("org.apache.commons.codec.EncoderException", (-2108), (-1074), stringArray0);
      assertFalse(boolean0);
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("PSCY");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("S", string0);
      
      char char0 = doubleMetaphone0.charAt("PSCY", 1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('S', char0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("PSCY");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("S", string0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string0 = doubleMetaphone1.doubleMetaphone("agHE");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("AK", string0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("-(ZBd](p6 z6Mw", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("TSPT", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("B", "GhpQ=bBBIA");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("G", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("K", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("CAESAR", "Z");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string1 = doubleMetaphone0.encode("JOTHSE");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("J0S", string1);
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("CAESAR");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("SSR", string0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("V(ebqTcN9SEnv^DbX", ",y", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("EWSKI");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("ASK", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("GiB>");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("KP", string1);
      assertFalse(string1.equals((Object)string0));
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("GNJ7!_F", "GNJ7!_F");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1);
      assertFalse(boolean1 == boolean0);
      
      char char0 = doubleMetaphone0.charAt("ASK", 969);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("SIO", (String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("Gyuq)&B");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KKP", string0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("GeRk5");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KRK", string0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("IER");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("A", string0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      boolean boolean0 = DoubleMetaphone.contains("", 3324, 3324, stringArray0);
      assertFalse(boolean0);
      assertEquals(6, stringArray0.length);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(3324);
      assertEquals(3324, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("");
      assertEquals(3324, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("", false);
      assertEquals(3324, doubleMetaphone0.getMaxCodeLen());
      assertNull(string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("", false);
      assertEquals(3324, doubleMetaphone0.getMaxCodeLen());
      assertNull(string2);
      
      String string3 = doubleMetaphone0.doubleMetaphone("");
      assertEquals(3324, doubleMetaphone0.getMaxCodeLen());
      assertNull(string3);
      
      String string4 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      assertEquals(3324, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string4);
      assertEquals("ARKPXKMNSKTKNKTRKSPXN", string4);
      
      String string5 = doubleMetaphone0.doubleMetaphone("CHORE", true);
      assertEquals(3324, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string5);
      assertEquals("XR", string5);
      assertFalse(string5.equals((Object)string4));
      
      char char0 = doubleMetaphone0.charAt("=Foh~$=aOZsYwgLXw", (-194));
      assertEquals(3324, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      String string6 = doubleMetaphone0.doubleMetaphone("<C", true);
      assertEquals(3324, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string6);
      assertEquals("K", string6);
      assertFalse(string6.equals((Object)string4));
      assertFalse(string6.equals((Object)string5));
      
      char char1 = doubleMetaphone0.charAt("K[SU%u1y='x.4}&}", 3324);
      assertEquals(3324, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char1);
      assertTrue(char1 == char0);
      
      String string7 = doubleMetaphone0.doubleMetaphone("", false);
      assertEquals(3324, doubleMetaphone0.getMaxCodeLen());
      assertNull(string7);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("CHORE");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("XR", string0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("bYfq%_#cv4", "bYfq%_#cv4");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("(qsr\"7$igyq[tk!1+R", "rkHdX2");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = "rkHdX2";
      stringArray0[3] = null;
      stringArray0[4] = null;
      stringArray0[5] = "bYfq%_#cv4";
      stringArray0[6] = null;
      stringArray0[7] = null;
      stringArray0[8] = "rkHdX2";
      // Undeclared exception!
      try { 
        DoubleMetaphone.contains((String) null, 1, 1, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("KNL/EGY_@CCC");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("NLJK", string0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("WICZ");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("AKS", string0);
      
      String string1 = doubleMetaphone0.encode("DSc[JC='Fa{;S @s@+");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("TSKJ", string1);
      assertFalse(string1.equals((Object)string0));
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      
      boolean boolean0 = doubleMetaphone2.isDoubleMetaphoneEqual("PSES", "ARKP");
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(boolean0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("[;G", "F9gBA.7C{xt#B)(N");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("@Ll]", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("L", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("[;G", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("K", string1);
      assertFalse(string1.equals((Object)string0));
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("B{<:|@sqoDqqlr/u2", "DD", true);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      
      String string2 = doubleMetaphone2.doubleMetaphone("B{<:|@sqoDqqlr/u2", true);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("PSKT", string2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("WRIRLLO");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("RRL", string0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("<CCH_Anm7a4");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("XNM", string0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("PSUCCEE");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("SKS", string0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("ga(gm@kF.;PFGuy", ".-!uJrOJ;OT#", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("SLDQwQqozDX9", "CCEE", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string0 = doubleMetaphone1.doubleMetaphone("SK", false);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("SK", string0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("OWSKY");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("ASK", string0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string0 = doubleMetaphone1.doubleMetaphone("Wq", false);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("K", string0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string1 = doubleMetaphone1.doubleMetaphone("Wq", false);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("K", string1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(string1.equals((Object)string0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("Wq", "{4&y]`", false);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string2 = doubleMetaphone1.doubleMetaphone("WRJOSE", false);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("RJS", string2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("mJOSE", "mJOSE");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("WR", "WR");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertTrue(boolean0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string0 = doubleMetaphone1.encode("UCCEE");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("AKS", string0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("ARKP", string1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String string2 = doubleMetaphone1.encode("WH");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("A", string2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      char char0 = doubleMetaphone0.charAt((String) null, (-418));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "(%g>SC");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      char char0 = doubleMetaphone0.charAt("kk~#9", (-1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("kk~#9", "CHIA");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("CHIA");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("K", string0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string0 = doubleMetaphone0.encode("Of*&U");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("AF", string0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("z5CzDfu4*", "?.|", false);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("z5CzDfu4*", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("SXTF", string1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String string2 = doubleMetaphone0.encode("AF");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("AF", string2);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string0 = doubleMetaphone0.encode("Of*&U");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("AF", string0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("z5CzDfu4*", "Of*&U", false);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("Of*&U", "AF");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(boolean1 == boolean0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String string1 = doubleMetaphone1.doubleMetaphone("DSc[JC='Fa{;S @s@+", true);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("TSKJ", string1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      char char0 = doubleMetaphone1.charAt(")<LvS*$*xv}G", 2013);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals('\u0000', char0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      String string0 = "OS";
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen((-3714));
      assertEquals((-3714), doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.encode((Object) "OS");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("}?C^!&UGQ3Gh3`N*pwx");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KKKK", string0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(214);
      assertEquals(214, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string0 = doubleMetaphone1.encode("Ph`L");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("FL", string0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = true;
      String string0 = "";
      String string1 = "3?jiGn%Q3A&Q)04y08n";
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "3?jiGn%Q3A&Q)04y08n");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string0 = doubleMetaphone1.encode("WRILLO");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("RL", string0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("U?l&+*^n/0Q", "P_<LB255@EX^vx.=");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("WRBACHJER");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("RPKJ", string0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("PSCH", "PSCH");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertTrue(boolean0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("CY", "CY");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean1 == boolean0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      String string0 = doubleMetaphone0.encode(".\"GSx");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KSKS", string0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("PSCH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("X", string0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("R");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("R", string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1595);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('<');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("<", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("<", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('e');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("<", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("<e", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("z7GL_WrTV:U_", "E/_");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      doubleMetaphone0.setMaxCodeLen(1595);
      assertEquals(1595, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("E/_", "[d-");
      assertEquals(1595, doubleMetaphone0.getMaxCodeLen());
      assertEquals("<eE/_", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("<[d-", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult((-5646));
      assertEquals(1595, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      doubleMetaphone_DoubleMetaphoneResult1.appendPrimary('W');
      assertEquals(1595, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      String string1 = doubleMetaphone0.encode("ET");
      assertEquals(1595, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("AT", string1);
      assertFalse(string1.equals((Object)string0));
      
      String string2 = doubleMetaphone0.doubleMetaphone("D ", false);
      assertEquals(1595, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("T", string2);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(1595, doubleMetaphone0.getMaxCodeLen());
      assertEquals(1595, int0);
      
      String string3 = doubleMetaphone0.encode("d6z");
      assertEquals(1595, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string3);
      assertEquals("TS", string3);
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("`7;%(e3K6^Z", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KS", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("5J/6=-IY{_@wud{", "KS");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("RAaM4T,%QQz$DL/=", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("RMTK", string1);
      assertFalse(string1.equals((Object)string0));
      
      char char0 = doubleMetaphone0.charAt("5J/6=-IY{_@wud{", 3759);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("o%:5-\"?/u3", "%:5\"?/u3");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("%:5\"?/u3", "ORCHID", false);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("ER", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("AR", string0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("<D1+\";", ",E|a!GIZpfo");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "<D1+\";";
      stringArray0[1] = "o%:5-\"?/u3";
      stringArray0[2] = "<D1+\";";
      boolean boolean3 = DoubleMetaphone.contains(",E|a!GIZpfo", (-3676), (-2689), stringArray0);
      assertFalse(boolean3);
      assertEquals(3, stringArray0.length);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      
      char char0 = doubleMetaphone1.charAt("ER", (-2689));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals('\u0000', char0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("ARCHIT", "ARCHIT");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen((-1434));
      assertEquals((-1434), doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.doubleMetaphone("r!r2DgAAo`&)@>");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("K(AgR449#|3^4(Y)|", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KKR", string0);
      
      String string1 = doubleMetaphone0.encode("K(AgR449#|3^4(Y)|");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("KKR", string1);
      assertTrue(string1.equals((Object)string0));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2684);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string2 = doubleMetaphone0.encode("RGY");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("RJ", string2);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(2684);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      String string3 = doubleMetaphone0.doubleMetaphone("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string3);
      
      doubleMetaphone_DoubleMetaphoneResult1.appendPrimary('/');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("/", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("KKR", "", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string4 = doubleMetaphone0.encode("RJ");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string4);
      assertEquals("RJ", string4);
      assertTrue(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      
      String string5 = doubleMetaphone0.doubleMetaphone("HR9F=W5N}b[", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string5);
      assertEquals("RFNP", string5);
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string2));
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = null;
      stringArray0[1] = "RJ";
      stringArray0[2] = "KKR";
      stringArray0[3] = null;
      boolean boolean1 = DoubleMetaphone.contains("RGY", 2684, (-503), stringArray0);
      assertFalse(boolean1);
      assertEquals(4, stringArray0.length);
      assertTrue(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("OGY");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("AJ", string0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("I", "?GN|");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("+iA&3v}gN");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("FN", string0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("?GN|");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("N", string0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "~-9h(%XsI1VTwkDke", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      
      doubleMetaphone1.setMaxCodeLen(69);
      assertEquals(69, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      
      String string0 = doubleMetaphone1.doubleMetaphone("TZ", false);
      assertEquals(69, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("TS", string0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertNotNull(doubleMetaphone3);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      
      String string1 = doubleMetaphone0.doubleMetaphone("e&xGnvnq3(c+n6Z", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("AKSN", string1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertNotSame(doubleMetaphone0, doubleMetaphone3);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string0 = doubleMetaphone1.doubleMetaphone("*S*-f");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("SF", string0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "YqMGIS");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String string1 = doubleMetaphone0.doubleMetaphone("MANGER", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("MNKR", string1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      Object object0 = new Object();
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(1041);
      assertEquals(1041, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode(">G>,6Y;Bj-vo^2*");
      assertEquals(1041, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KPJF", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("KPJF", "`7;%(e3K6^Z");
      assertEquals(1041, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("OGGI", false);
      assertEquals(1041, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("AJ", string1);
      assertFalse(string1.equals((Object)string0));
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(1041, doubleMetaphone0.getMaxCodeLen());
      assertEquals(1041, int0);
      
      Object object0 = new Object();
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "j9R,NgY^EV.xTJ", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("UD_gY6gLgeiH!m)J%,\"");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("ATKK", string0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string0 = doubleMetaphone1.doubleMetaphone("I_Ij62", true);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("AJ", string0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string1 = doubleMetaphone1.doubleMetaphone("I_Ij62");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("AJ", string1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(string1.equals((Object)string0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("AJ", "Chl,A.dZ#Mk4KuN");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual(")!", ")!", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(boolean1 == boolean0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String string2 = doubleMetaphone1.doubleMetaphone((String) null, false);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNull(string2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = "fCQG";
      stringArray0[3] = "AJ";
      stringArray0[4] = null;
      stringArray0[5] = "AJ";
      boolean boolean2 = DoubleMetaphone.contains("I_Ij62", 209, 209, stringArray0);
      assertFalse(boolean2);
      assertEquals(6, stringArray0.length);
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("CHRE");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KR", string0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("AGGI");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("AJ", string0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      // Undeclared exception!
      try { 
        DoubleMetaphone.contains("TK", 1, (-1), (String[]) null);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("5MeA//;cZS5v]1");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("MSSF", string0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("RANGER");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("RNJR", string0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("MAGER");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("MKR", string0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("K(AgR449#|3^4(Y)|", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KKR", string0);
      
      String string1 = doubleMetaphone0.encode("K(AgR449#|3^4(Y)|");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("KKR", string1);
      assertTrue(string1.equals((Object)string0));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2684);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string2 = doubleMetaphone0.doubleMetaphone("KNSH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("NX", string2);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('~');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("~", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("KKR", "org.apache.commons.codec.EncoderException", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string3 = doubleMetaphone0.encode("CH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string3);
      assertEquals("K", string3);
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      
      String string4 = doubleMetaphone0.doubleMetaphone("KNZA", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string4);
      assertEquals("NTS", string4);
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(1041);
      assertEquals(1041, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode(">G>,6Y;Bj-vo^2*");
      assertEquals(1041, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KPJF", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("`7;%(e3K6^Z");
      assertEquals(1041, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("KS", string1);
      assertFalse(string1.equals((Object)string0));
      
      String string2 = doubleMetaphone0.doubleMetaphone("x$PGE/_h!");
      assertEquals(1041, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("SPJ", string2);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      
      String string3 = doubleMetaphone0.doubleMetaphone("Z'XgGD=vY1uA4", true);
      assertEquals(1041, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string3);
      assertEquals("SKSKTF", string3);
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("@Ggj&pC-[O");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KJPK", string0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("J)GLi3U#hsh");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("JKLX", string0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("zl<pk`X,6");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("SLPK", string0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) "YSL");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("AL", object0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("YSL", "");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('\\');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("\\", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("\\", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('\\', 'z');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("z", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("\\", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("z", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("\\", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertTrue(boolean2);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("Zw'|!5edxixz", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("STKS", string0);
      assertFalse(string0.equals((Object)object0));
      
      String string1 = doubleMetaphone0.doubleMetaphone((String) null, false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string1);
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "YSL";
      stringArray0[1] = "WRWRK";
      stringArray0[2] = null;
      stringArray0[3] = null;
      stringArray0[4] = null;
      stringArray0[5] = null;
      boolean boolean3 = DoubleMetaphone.contains("YSL", 1, 1, stringArray0);
      assertFalse(boolean3);
      assertEquals(6, stringArray0.length);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3 == boolean2);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("x}DWP*|,C.S", "$7o6dkzZa5+X<G");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "org.apache.commons.codec.EncoderException", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string0 = doubleMetaphone1.doubleMetaphone("org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("ARKP", string0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string1 = doubleMetaphone0.encode("ARKP");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("ARKP", string1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(string1.equals((Object)string0));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("ChAp.dZ#Mk\"4KuN", ")!");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(boolean1 == boolean0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      
      boolean boolean2 = doubleMetaphone1.isDoubleMetaphoneEqual("WUn", "?.|", true);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string2 = doubleMetaphone2.doubleMetaphone("ARKP", true);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("ARKP", string2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertTrue(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(214);
      assertEquals(214, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string0 = doubleMetaphone1.encode((String) null);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNull(string0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("SUGAR", false);
      assertEquals(214, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("XKR", string1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      doubleMetaphone1.setMaxCodeLen(2405);
      assertEquals(2405, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string2 = doubleMetaphone0.doubleMetaphone("OM", false);
      assertEquals(214, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("AM", string2);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string1));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone2.new DoubleMetaphoneResult((-3291));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertTrue(boolean0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      
      String string3 = doubleMetaphone2.doubleMetaphone("e:m A_a(:", false);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(string3);
      assertEquals("AM", string3);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string1));
      assertTrue(string3.equals((Object)string2));
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("SUGAR");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("XKR", string0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      String string0 = "OYJN@6t<A";
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen((-1251));
      assertEquals((-1251), doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("OYJN@6t<A", "OYJN@6t<A", false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("#ChWn8_2", ")7B9vAR");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("D5wKZ-?St<q[T(V", "%`iLYK{&,olF");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertTrue(boolean2);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("WH2=");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("A", string0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("U3,$rRtvlCo#!P");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("ARTF", string0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      int int0 = 214;
      doubleMetaphone0.setMaxCodeLen(214);
      assertEquals(214, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("?.|");
      assertEquals(214, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("", string0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(214);
      assertEquals(214, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("?.|");
      assertEquals(214, doubleMetaphone0.getMaxCodeLen());
      assertEquals("?.|", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("?.|", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string1 = doubleMetaphone0.doubleMetaphone("?.|", false);
      assertEquals(214, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("", string1);
      assertTrue(string1.equals((Object)string0));
      
      String string2 = doubleMetaphone0.doubleMetaphone("5T_1gX^Cg(|@JjL?t", false);
      assertEquals(214, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("TKKSKJLT", string2);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      
      doubleMetaphone_DoubleMetaphoneResult0.append('S');
      assertEquals(214, doubleMetaphone0.getMaxCodeLen());
      assertEquals("?.|S", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("?.|S", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('S');
      assertEquals(214, doubleMetaphone0.getMaxCodeLen());
      assertEquals("?.|SS", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("?.|S", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('J');
      assertEquals(214, doubleMetaphone0.getMaxCodeLen());
      assertEquals("?.|SSJ", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("?.|SJ", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('S');
      assertEquals(214, doubleMetaphone0.getMaxCodeLen());
      assertEquals("?.|SSJ", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("?.|SJS", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string3 = null;
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("D", "?.|");
      assertEquals(214, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      doubleMetaphone0.setMaxCodeLen(214);
      assertEquals(214, doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append((String) null, "PS1=N>N4~Y9PAT}?");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("f`>!jj43zo-");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("FJS", string0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("|0JPPLQdjdSM", "CC", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("D>.", "ES");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("SJZ@", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("SS", string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals(4, int0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Object object1 = new Object();
      assertNotNull(object1);
      assertFalse(object1.equals((Object)object0));
      
      try { 
        doubleMetaphone0.encode(object1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("dPbwrY:V", "dPbwrY:V");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("CH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("K", string0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("K(AgR449#|3^4(Y)|", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KKR", string0);
      
      String string1 = doubleMetaphone0.encode("K(AgR449#|3^4(Y)|");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("KKR", string1);
      assertTrue(string1.equals((Object)string0));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2684);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('~');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("~", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string2 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("~", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(string2);
      assertEquals("~", string2);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("KKR", "org.apache.commons.codec.EncoderException", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('^', '^');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("~^", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("^", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("@");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("^@", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("~^@", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone0.setMaxCodeLen(2684);
      assertEquals(2684, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone((String) null, true);
      assertEquals(2684, doubleMetaphone0.getMaxCodeLen());
      assertNull(string3);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('S');
      assertEquals(2684, doubleMetaphone0.getMaxCodeLen());
      assertEquals("~^@S", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("^@S", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone0.setMaxCodeLen(5);
      assertEquals(5, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('S');
      assertEquals(5, doubleMetaphone0.getMaxCodeLen());
      assertEquals("~^@S", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("^@SS", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('<');
      assertEquals(5, doubleMetaphone0.getMaxCodeLen());
      assertEquals("~^@S<", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("^@SS<", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("K(AgR449#|3^4(Y)|", "Z21rDzZc1N!l");
      assertEquals(5, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      String string4 = doubleMetaphone0.doubleMetaphone("KKR", false);
      assertEquals(5, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string4);
      assertEquals("KR", string4);
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode(":f{2 gQ*VZyASt{f4");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("FKKF", string0);
      
      String string1 = doubleMetaphone0.encode(":f{2 gQ*VZyASt{f4");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("FKKF", string1);
      assertTrue(string1.equals((Object)string0));
      
      String string2 = doubleMetaphone0.doubleMetaphone(":f{2 gQ*VZyASt{f4", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("FKKF", string2);
      assertTrue(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      doubleMetaphone1.setMaxCodeLen(2405);
      assertEquals(2405, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string3 = doubleMetaphone1.doubleMetaphone("fIb2ZqsoV*kfFXBf$r0", true);
      assertEquals(2405, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string3);
      assertEquals("FPTSKSFKFKSPFR", string3);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(77);
      assertEquals(2405, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(2405, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(boolean0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string4 = doubleMetaphone0.doubleMetaphone("E-~|V68TL6h0SSC$uS", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string4);
      assertEquals("AFTL", string4);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      int int0 = 2501;
      String string0 = doubleMetaphone0.encode("JOSE");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("HS", string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2501);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("ZR].7%?*<", "YSL", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "Q");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "7iu*hh*@-N\"ge");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("Kk8SZ7xp");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KSKS", string0);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("kEj,Z:YOJw?&");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KJSJ", string0);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("4]L-p/(gPh{0P?8\"");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("LPKF", string0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(214);
      assertEquals(214, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string0 = doubleMetaphone1.doubleMetaphone("uOQ;.V\u0006XKoKMJf!DN", false);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("AKFK", string0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("SIO", "34|Rk:$+>S^L|{}G:");
      assertEquals(214, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String string1 = doubleMetaphone0.encode("34|Rk:$+>S^L|{}G:");
      assertEquals(214, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("RKSLK", string1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("3MbL)< R(>CY");
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("", string0);
      
      String string1 = doubleMetaphone0.encode("F");
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("", string1);
      assertTrue(string1.equals((Object)string0));
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual(";,SiWFo%DO", "qy{*,fy{", true);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("CC", "TIA", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("TIA", ">uL]dlx2rf$BS\u0003WX^4");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      String string0 = "OS";
      String string1 = doubleMetaphone0.doubleMetaphone("OS");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("AS", string1);
      assertFalse(string1.equals((Object)string0));
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", (String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("TIA");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("X", string0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "org.apache.commons.codec.EncoderException";
      stringArray0[1] = "org.apache.commons.codec.EncoderException";
      stringArray0[2] = "org.apache.commons.codec.EncoderException";
      stringArray0[3] = "org.apache.commons.codec.EncoderException";
      stringArray0[4] = "org.apache.commons.codec.EncoderException";
      stringArray0[5] = "org.apache.commons.codec.EncoderException";
      stringArray0[6] = "org.apache.commons.codec.EncoderException";
      boolean boolean0 = DoubleMetaphone.contains("org.apache.commons.codec.EncoderException", 4, 4, stringArray0);
      assertFalse(boolean0);
      assertEquals(7, stringArray0.length);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual(" }1<KxA@e^w)4^)Dlt", "", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("P>/Y%[dZ_[8t:e\"1", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("PTST", string0);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "org.apache.commons.codec.EncoderException", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string0 = doubleMetaphone0.encode("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("fIb2ZqsoV*kfFXBf$r0", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("FPSK", string1);
      
      doubleMetaphone0.setMaxCodeLen(2405);
      assertEquals(2405, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(397);
      assertEquals(2405, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("[{HyCgK", (String) null);
      assertEquals(2405, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
      
      String string2 = doubleMetaphone0.doubleMetaphone("th]!}a-");
      assertEquals(2405, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("0", string2);
      assertFalse(string2.equals((Object)string1));
      
      char char0 = doubleMetaphone0.charAt("th]!}a-", 76);
      assertEquals(2405, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      char char1 = doubleMetaphone1.charAt("VAN ", 2405);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals('\u0000', char1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(char1 == char0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("SCH", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("S", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("bYq%_#]v4", "bYq%_#]v4");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string1 = doubleMetaphone0.encode("1=N>n4~y9pAT}?");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("NNPT", string1);
      assertFalse(string1.equals((Object)string0));
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("bYq%_#]v4", "_R` W3+N>u,dh", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
      
      String string2 = doubleMetaphone0.doubleMetaphone("3;$a@ajmpAWw", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("MP", string2);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      
      char char0 = doubleMetaphone0.charAt("1=N>n4~y9pAT}?", 1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('=', char0);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("SCH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("X", string0);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen((-1060));
      assertEquals((-1060), doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.doubleMetaphone("^avWIYtG(;o", false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone(">G>,6Y;Bj-vo^2*", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KPJF", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("b}p)-Olk.UvT:BDQrx", "b}p)-Olk.UvT:BDQrx");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2817);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string1 = doubleMetaphone1.doubleMetaphone("b}p)-Olk.UvT:BDQrx");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("PPLK", string1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("Z", "CIA");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean2);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String string2 = doubleMetaphone0.encode("KPJF");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("KPJF", string2);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string1));
      assertTrue(string2.equals((Object)string0));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String string3 = doubleMetaphone0.doubleMetaphone((String) null, true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string3);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("?.|");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("", string0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string1 = doubleMetaphone1.doubleMetaphone("CE", false);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("S", string1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("CIE");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("S", string0);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("CY");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("S", string0);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("TMFFSL");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("TMFS", string0);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("i2#]mJ");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("AMJ", string0);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = ">G>,6Y;Bj-vo^2*";
      String string1 = "ALLE";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual(">G>,6Y;Bj-vo^2*", "ALLE");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2817);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(boolean2);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      
      char char0 = '/';
      doubleMetaphone_DoubleMetaphoneResult0.append('a', '/');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("/", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("a", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate(">G>,6Y;Bj-vo^2*");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("/>G>,6Y;Bj-vo^2*", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("a", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone0.setMaxCodeLen((-268));
      assertEquals((-268), doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = null;
      try {
        doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(2382);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("WRILLO");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("RL", string0);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "org.apache.commons.codec.EncoderException", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string0 = doubleMetaphone0.encode("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("fIb2ZqsoV*kfFXBf$r0", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("FPSK", string1);
      
      doubleMetaphone0.setMaxCodeLen(2405);
      assertEquals(2405, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      assertEquals(2405, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("ARKPXKMNSKTKNKTRKSPXN", string2);
      assertFalse(string2.equals((Object)string1));
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "%eHZzI$^txSk)");
      assertEquals(2405, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object1);
      assertEquals("STKSSK", object1);
      assertFalse(object1.equals((Object)string2));
      assertFalse(object1.equals((Object)string1));
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(214);
      assertEquals(214, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone((String) null);
      assertEquals(214, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      String string1 = doubleMetaphone0.encode("?.|");
      assertEquals(214, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("", string1);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      String string2 = doubleMetaphone0.doubleMetaphone("zz0V)3`0_", true);
      assertEquals(214, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("SF", string2);
      assertFalse(string2.equals((Object)string1));
      
      String string3 = doubleMetaphone0.encode("SF");
      assertEquals(214, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string3);
      assertEquals("SF", string3);
      assertTrue(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      
      Object object1 = doubleMetaphone0.encode((Object) "");
      assertEquals(214, doubleMetaphone0.getMaxCodeLen());
      assertNull(object1);
      
      String string4 = doubleMetaphone0.doubleMetaphone("KN");
      assertEquals(214, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string4);
      assertEquals("N", string4);
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string2));
      
      char char0 = doubleMetaphone0.charAt("b2A", 67);
      assertEquals(214, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("nzZ[]Y7Lg(ZFZ|S", "nzZ[]Y7Lg(ZFZ|S");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("q-:", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("K", string0);
      
      String string1 = doubleMetaphone0.encode("MC");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("MK", string1);
      assertFalse(string1.equals((Object)string0));
      
      Object object0 = doubleMetaphone0.encode((Object) "MC");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("MK", object0);
      assertFalse(object0.equals((Object)string0));
      assertTrue(object0.equals((Object)string1));
      
      Object object1 = doubleMetaphone0.encode((Object) "MK");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object1);
      assertEquals("MK", object1);
      assertTrue(object1.equals((Object)string1));
      assertTrue(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string0));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1320);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("MC", "ad%e");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("MC", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("ad%e", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("PS");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("MC", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("ad%ePS", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("q-:", "c?)");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ad%ePSc?)", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("MCq-:", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ad%ePSc?)", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("MCq-:", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(boolean0);
      
      String string2 = doubleMetaphone0.doubleMetaphone("WI", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("A", string2);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)object0));
      assertFalse(string2.equals((Object)object1));
      
      char char0 = doubleMetaphone0.charAt("ad%e", 451);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      String string3 = doubleMetaphone0.doubleMetaphone("MK", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string3);
      assertEquals("MK", string3);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertTrue(string3.equals((Object)object0));
      assertTrue(string3.equals((Object)string1));
      assertTrue(string3.equals((Object)object1));
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("G");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("K", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("WITZ");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("ATS", string1);
      assertFalse(string1.equals((Object)string0));
      
      String string2 = doubleMetaphone0.encode("<sUjF38Lsxhp#'#f{");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("SJFL", string2);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      
      String string3 = doubleMetaphone0.doubleMetaphone("G");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string3);
      assertEquals("K", string3);
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertTrue(string3.equals((Object)string0));
      
      int int0 = 2;
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2818);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "G");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone(">G>,6Y;Bj-vo^2*", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KPJF", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("b}p)-Olk.UvT:BDQrx", "b}p)-Olk.UvT:BDQrx");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2817);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(boolean2);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('a', 'a');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("a", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("a", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate(">G>,6Y;Bj-vo^2*");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("a", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("a>G>,6Y;Bj-vo^2*", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone0.setMaxCodeLen(34);
      assertEquals(34, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(34);
      assertEquals(34, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      boolean boolean3 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(34, doubleMetaphone0.getMaxCodeLen());
      assertEquals("a", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("a>G>,6Y;Bj-vo^2*", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(boolean3);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3 == boolean0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      
      boolean boolean4 = doubleMetaphone0.isDoubleMetaphoneEqual("+Yg+FO){hv99yw", "w$[\"X");
      assertEquals(34, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean4);
      assertTrue(boolean4 == boolean3);
      assertTrue(boolean4 == boolean1);
      assertTrue(boolean4 == boolean2);
      assertFalse(boolean4 == boolean0);
      
      boolean boolean5 = doubleMetaphone0.isDoubleMetaphoneEqual("w$[\"X", ">G>,6Y;Bj-vo^2*", false);
      assertEquals(34, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean5);
      assertTrue(boolean5 == boolean3);
      assertTrue(boolean5 == boolean2);
      assertTrue(boolean5 == boolean4);
      assertFalse(boolean5 == boolean0);
      assertTrue(boolean5 == boolean1);
      
      doubleMetaphone0.setMaxCodeLen(209);
      assertEquals(209, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult2 = doubleMetaphone0.new DoubleMetaphoneResult((-158));
      assertEquals(209, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult2);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      
      doubleMetaphone_DoubleMetaphoneResult1.append("ER");
      assertEquals(209, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ER", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("ER", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult2);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult3 = doubleMetaphone0.new DoubleMetaphoneResult((-3645));
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult3.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult3.getAlternate());
      assertEquals(209, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult3);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      doubleMetaphone_DoubleMetaphoneResult3.append('K', 'H');
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult3.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult3.getAlternate());
      assertEquals(209, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult3, doubleMetaphone_DoubleMetaphoneResult2);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult3, doubleMetaphone_DoubleMetaphoneResult1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult3, doubleMetaphone_DoubleMetaphoneResult0);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "org.apache.commons.codec.EncoderException", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string0 = doubleMetaphone0.doubleMetaphone("AGGI", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("AK", string0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "org.apache.commons.codec.EncoderException");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("DD");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("T", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("T", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("T", string1);
      assertTrue(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("x1`,zsE{Vs,!w0");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("SSSF", string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(3202);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('-');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("-", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("-", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("-", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("-", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(boolean0);
      
      doubleMetaphone0.setMaxCodeLen((-1037));
      assertEquals((-1037), doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals((-1037), doubleMetaphone0.getMaxCodeLen());
      assertEquals("-", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("-", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals((-1037), doubleMetaphone0.getMaxCodeLen());
      assertEquals("-", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("-", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(boolean2);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      
      char char0 = doubleMetaphone0.charAt("x1`,zsE{Vs,!w0", (-1037));
      assertEquals((-1037), doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals((-1037), doubleMetaphone0.getMaxCodeLen());
      assertEquals((-1037), int0);
      
      boolean boolean3 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals((-1037), doubleMetaphone0.getMaxCodeLen());
      assertEquals("-", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("-", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(boolean3);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("*_lJD*f{~s\"V$c", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("LTFS", string0);
      
      String string1 = null;
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("3]{AauD", (String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(76);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(boolean2);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      
      char char0 = 'a';
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(76);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      doubleMetaphone_DoubleMetaphoneResult0.append('u');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("u", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("u", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone_DoubleMetaphoneResult1.append('a', 'a');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("a", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("a", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      int int0 = (-2464);
      doubleMetaphone0.setMaxCodeLen((-2464));
      assertEquals((-2464), doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.encode("LTFS");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("4HW6>u0SJ-Y");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("S", string0);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      String[] stringArray0 = new String[0];
      boolean boolean0 = DoubleMetaphone.contains("org.apache.commons.codec.EncoderException", 3830, 3830, stringArray0);
      assertFalse(boolean0);
      assertEquals(0, stringArray0.length);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("i>'bYW~)");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("AP", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("i>'bYW~)");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("AP", string1);
      assertTrue(string1.equals((Object)string0));
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(4);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('A');
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("A", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      doubleMetaphone1.setMaxCodeLen(3830);
      assertEquals(3830, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("AP");
      assertEquals(3830, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("AAP", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('9');
      assertEquals(3830, doubleMetaphone1.getMaxCodeLen());
      assertEquals("9", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("AAP", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(3830, doubleMetaphone1.getMaxCodeLen());
      assertEquals("9", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("AAP", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(boolean1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      int int1 = doubleMetaphone1.getMaxCodeLen();
      assertEquals(3830, doubleMetaphone1.getMaxCodeLen());
      assertEquals(3830, int1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(int1 == int0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string2 = doubleMetaphone1.doubleMetaphone("org.apache.commons.codec.EncoderException");
      assertEquals(3830, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("ARKPXKMNSKTKNKTRKSPXN", string2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String[] stringArray1 = new String[1];
      assertFalse(stringArray1.equals((Object)stringArray0));
      
      Object object0 = doubleMetaphone1.encode((Object) "i>'bYW~)");
      assertEquals(3830, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("AP", object0);
      assertTrue(object0.equals((Object)string1));
      assertTrue(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      stringArray1[0] = "IB";
      boolean boolean2 = DoubleMetaphone.contains("GNB}P)-OLK.UVT:BDQRX", 3830, (-180), stringArray1);
      assertFalse(boolean2);
      assertEquals(1, stringArray1.length);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(stringArray1.equals((Object)stringArray0));
      assertNotSame(stringArray1, stringArray0);
      
      String string3 = doubleMetaphone1.doubleMetaphone("PN>G>,6Y;BJ-VO^2*", false);
      assertEquals(3830, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string3);
      assertEquals("NKPJF", string3);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)object0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      int int2 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int2);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(int2 == int1);
      assertTrue(int2 == int0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      boolean boolean3 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(3830, doubleMetaphone1.getMaxCodeLen());
      assertEquals("9", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("AAP", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(boolean3);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      char char0 = doubleMetaphone1.charAt("OP%h0gic8", (-728));
      assertEquals(3830, doubleMetaphone1.getMaxCodeLen());
      assertEquals('\u0000', char0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone(">G>,6Y;Bj-vo^2*", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KPJF", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("b}p)-Olk.UvT:BDQrx", "b}p)-Olk.UvT:BDQrx");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2817);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(boolean2);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('a', 'a');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("a", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("a", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone0.setMaxCodeLen(34);
      assertEquals(34, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("b}p)-Olk.UvT:BDQrx");
      assertEquals(34, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("PPLKFTPTKRKS", string1);
      assertFalse(string1.equals((Object)string0));
      
      String string2 = doubleMetaphone0.doubleMetaphone("", false);
      assertEquals(34, doubleMetaphone0.getMaxCodeLen());
      assertNull(string2);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('p');
      assertEquals(34, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ap", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("ap", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean3 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(34, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ap", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("ap", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(boolean3);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      
      doubleMetaphone0.setMaxCodeLen(88);
      assertEquals(88, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean4 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(88, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ap", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("ap", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(boolean4);
      assertTrue(boolean4 == boolean2);
      assertTrue(boolean4 == boolean1);
      assertFalse(boolean4 == boolean0);
      assertTrue(boolean4 == boolean3);
      
      boolean boolean5 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(88, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ap", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("ap", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(boolean5);
      assertTrue(boolean5 == boolean1);
      assertTrue(boolean5 == boolean4);
      assertFalse(boolean5 == boolean0);
      assertTrue(boolean5 == boolean2);
      assertTrue(boolean5 == boolean3);
      
      char char0 = doubleMetaphone0.charAt("b}p)-Olk.UvT:BDQrx", 2817);
      assertEquals(88, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(88, doubleMetaphone0.getMaxCodeLen());
      assertEquals(88, int0);
      
      boolean boolean6 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(88, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ap", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("ap", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(boolean6);
      assertTrue(boolean6 == boolean2);
      assertTrue(boolean6 == boolean1);
      assertTrue(boolean6 == boolean4);
      assertFalse(boolean6 == boolean0);
      assertTrue(boolean6 == boolean3);
      assertTrue(boolean6 == boolean5);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("x1`,zsE{Vs,!w0");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("SSSF", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("x1`,zsE{Vs,!w0", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("SSSF", string1);
      assertTrue(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("bYq%_#]v4", "bYq%_#]v4");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string0 = doubleMetaphone0.encode("1=N>n4~y9pAT}?");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("NNPT", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("NNPT", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("NPT", string1);
      assertFalse(string1.equals((Object)string0));
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("1=N>n4~y9pAT}?", "hKu P5a.i70{4", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
      
      String string2 = doubleMetaphone0.doubleMetaphone("K", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("K", string2);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.encode("R");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("R", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("fIb2ZqsoV*kfFXBf$r0", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("FPSK", string1);
      assertFalse(string1.equals((Object)string0));
      
      doubleMetaphone0.setMaxCodeLen(2405);
      assertEquals(2405, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("FPSK");
      assertEquals(2405, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("FPSK", string2);
      assertFalse(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      int int0 = 0;
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertTrue(boolean1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean1 == boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertTrue(boolean2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string3 = "";
      String string4 = "outh_%3&L9b`M,Ht";
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("KN$BDKX%_DE^IAXF`KF", "");
      assertEquals(2405, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean3);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = null;
      stringArray0[1] = "R";
      // Undeclared exception!
      try { 
        DoubleMetaphone.contains((String) null, 65, 2405, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("GNRG.A");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("NRK", string0);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string0 = doubleMetaphone1.doubleMetaphone("VOo6Ss8@h<@");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("FS", string0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone2.new DoubleMetaphoneResult(2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("I", "e%/h@d9Jw");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('9');
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("9", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('9', 'h');
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("9h", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("9", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      
      char char0 = doubleMetaphone1.charAt("HOLM", 81);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals('\u0000', char0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(81);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult1.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertFalse(boolean1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertTrue(boolean1 == boolean0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("HOLM");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("HLM", string1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(string1.equals((Object)string0));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      
      char char1 = doubleMetaphone2.charAt("HOLM", 0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals('H', char1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(char1 == char0);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertNotNull(doubleMetaphone3);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      
      char char2 = doubleMetaphone3.charAt("org.apache.commons.codec.EncoderException", 1);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertEquals('r', char2);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(char2 == char0);
      assertFalse(char2 == char1);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("HOLM");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("HLM", string0);
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(214);
      assertEquals(214, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("?.|");
      assertEquals(214, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("", string0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult((-1));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertTrue(boolean0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("R", false);
      assertEquals(214, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("R", string1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.encode("R");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("R", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("fIb2ZqsoV*kfFXBf$r0", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("FPSK", string1);
      assertFalse(string1.equals((Object)string0));
      
      doubleMetaphone0.setMaxCodeLen(2405);
      assertEquals(2405, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      assertEquals(2405, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("ARKPXKMNSKTKNKTRKSPXN", string2);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      int int0 = 0;
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertTrue(boolean1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean1 == boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertTrue(boolean2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string3 = "";
      String string4 = "outh_%3&L9b`M,Ht";
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("aWQ9 c]O", "aWQ9 c]O");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      doubleMetaphone0.setMaxCodeLen(84);
      assertEquals(84, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "#;)hP6");
      assertEquals(84, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("N}=RhnLfM9n", false);
      assertEquals(84, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("NRNLFMN", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("#;)hP6", false);
      assertEquals(84, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("P", string1);
      assertFalse(string1.equals((Object)string0));
      
      doubleMetaphone0.setMaxCodeLen((-597));
      assertEquals((-597), doubleMetaphone0.getMaxCodeLen());
      
      String string2 = "";
      String string3 = ":<i";
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = null;
      try {
        doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-113));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("OWSKI", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("AFSK", string0);
      
      char char0 = doubleMetaphone0.charAt("kk~#9", 70);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      String string1 = doubleMetaphone0.encode("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string1);
      
      char char1 = doubleMetaphone0.charAt("", 70);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char1);
      assertTrue(char1 == char0);
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("LSned@wu", "/>;rtdOx8/}4Ej");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "Uw", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("Uw");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("A", string0);
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone((String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("ARKP", string1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-3991));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('G', 'G');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult((-3991));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      doubleMetaphone_DoubleMetaphoneResult1.append('l');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('Q', 'W');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertTrue(boolean0);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("W");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("UCCEE");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("AKS", string0);
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("CC");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("K", string0);
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(214);
      assertEquals(214, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone((String) null);
      assertEquals(214, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      String string1 = doubleMetaphone0.encode("?.|");
      assertEquals(214, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("", string1);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      String string2 = "/;rtdOx\\u}4E9";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("jY^", (String) null);
      assertEquals(214, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      // Undeclared exception!
      try { 
        doubleMetaphone1.isDoubleMetaphoneEqual((String) null, string2, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string0 = doubleMetaphone1.doubleMetaphone("VOo6Ss8@h<@");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("FS", string0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone2.new DoubleMetaphoneResult(2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("I", "e%/h@d9Jw");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('9');
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("9", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('9', 'h');
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("9h", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("9", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      
      char char0 = doubleMetaphone1.charAt("HOLM", 81);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals('\u0000', char0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(81);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult1.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertFalse(boolean1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertTrue(boolean1 == boolean0);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult2 = doubleMetaphone1.new DoubleMetaphoneResult(705);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      
      doubleMetaphone_DoubleMetaphoneResult2.append("(+H)#F<&Cpdg", "FS");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("(+H)#F<&Cpdg", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertEquals("FS", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone1.setMaxCodeLen((-4331));
      assertEquals((-4331), doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("9h", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("9", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult2);
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("*0.7q _q~+w");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KK", string0);
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      int int0 = 214;
      doubleMetaphone0.setMaxCodeLen(214);
      assertEquals(214, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone((String) null);
      assertEquals(214, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      String string1 = "?.|";
      String string2 = doubleMetaphone0.encode("?.|");
      assertEquals(214, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("", string2);
      assertFalse(string2.equals((Object)string1));
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      String string3 = "x7";
      String string4 = doubleMetaphone0.doubleMetaphone("x7", true);
      assertEquals(214, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string4);
      assertEquals("S", string4);
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("GNVOO6SS8@H<@");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("NFS", string0);
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "=*Ss8uv");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("org.apache.commons.codec.EncoderException", "");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('A');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertTrue(boolean1);
      assertFalse(boolean1 == boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('#', 'A');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "%";
      stringArray0[1] = "org.apache.commons.codec.EncoderException";
      stringArray0[2] = "org.apache.commons.codec.EncoderException";
      stringArray0[3] = "=*Ss8uv";
      stringArray0[4] = "org.apache.commons.codec.EncoderException";
      stringArray0[5] = "=*Ss8uv";
      stringArray0[6] = "org.apache.commons.codec.EncoderException";
      stringArray0[7] = "";
      stringArray0[8] = "";
      boolean boolean2 = DoubleMetaphone.contains("", 0, 0, stringArray0);
      assertTrue(boolean2);
      assertEquals(9, stringArray0.length);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      
      doubleMetaphone0.setMaxCodeLen(0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen((-1499));
      assertEquals((-1499), doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.encode("SIO");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      String string1 = "pFRO)o%U8:e^p";
      String string2 = doubleMetaphone0.doubleMetaphone("pFRO)o%U8:e^p", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("PFRP", string2);
      assertFalse(string2.equals((Object)string1));
      
      Object object0 = doubleMetaphone0.encode((Object) "");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(object1);
      
      String string3 = doubleMetaphone0.encode("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string3);
      
      doubleMetaphone0.setMaxCodeLen(0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      String string4 = doubleMetaphone0.encode("\u0002A~:");
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string4);
      assertEquals("", string4);
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("\u0002A~:", "", true);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-5091));
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      char char0 = '*';
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = "1n\\\"Fm";
      String string1 = "";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("1n\"Fm", "");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-2105));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string2 = doubleMetaphone0.encode("1n\"Fm");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("NFM", string2);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      
      doubleMetaphone_DoubleMetaphoneResult0.append('=');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string3 = null;
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "t2QqNZhXYhXv", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      int int0 = (-1692);
      Object object0 = doubleMetaphone0.encode((Object) "");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(object0);
      
      try { 
        doubleMetaphone0.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("@hYb!]NN|");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("PN", string0);
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("aWQ9 c]O", "aWQ9 c]O");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "#;)hP6");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("N}=RhnLfM9n", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("NRNL", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("#;)hP6", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("P", string1);
      assertFalse(string1.equals((Object)string0));
      
      doubleMetaphone0.setMaxCodeLen((-597));
      assertEquals((-597), doubleMetaphone0.getMaxCodeLen());
      
      String string2 = "";
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual(":<i", "");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.charAt((String) null, 2476);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) "[Tah|%wQS0");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("TKS", object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "TKS");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object1);
      assertEquals("TKS", object1);
      assertTrue(object1.equals((Object)object0));
      
      String string0 = doubleMetaphone0.doubleMetaphone((String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      int int0 = 4482;
      // Undeclared exception!
      try { 
        doubleMetaphone0.charAt((String) null, 4482);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.encode("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("fIb2ZqsoV*kfFXBf$r0", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("FPSK", string1);
      
      doubleMetaphone0.setMaxCodeLen(2405);
      assertEquals(2405, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      assertEquals(2405, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("ARKPXKMNSKTKNKTRKSPXN", string2);
      assertFalse(string2.equals((Object)string1));
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      int int0 = 0;
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertTrue(boolean1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean1 == boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertTrue(boolean2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string3 = "";
      String string4 = "outh_%3&L9b`M,Ht";
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("EWSKI");
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("", string0);
      
      String string1 = doubleMetaphone0.encode("o'<EIG");
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("", string1);
      assertTrue(string1.equals((Object)string0));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2806);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('N');
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("N", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("N", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('N', 'N');
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NN", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("NN", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('?');
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NN?", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("NN", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('n');
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NN?", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("NNn", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("<7hy4+oEm*g{,T2i");
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NN?<7hy4+oEm*g{,T2i", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("NNn", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string2 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NN?<7hy4+oEm*g{,T2i", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("NNn", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(string2);
      assertEquals("NNn", string2);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      
      String string3 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NN?<7hy4+oEm*g{,T2i", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("NNn", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(string3);
      assertEquals("NN?<7hy4+oEm*g{,T2i", string3);
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("DG");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("TK", string0);
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      char char0 = doubleMetaphone0.charAt("", 83);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("DG", "D5wKZ-?St<q[T(V");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(83);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('<', 'l');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("l", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("<", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('Q');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("lQ", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("<Q", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('\u0000', '\u0000');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("<Q\u0000", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("lQ\u0000", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("<Q\u0000", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("lQ\u0000", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      // Undeclared exception!
      try { 
        DoubleMetaphone.contains("PNJOSE", 1, 1, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone((String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("ARKP", string1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-3991));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('a', '`');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "5v{u-+:5G4cH6D";
      stringArray0[1] = "5v{u-+:5G4cH6D";
      stringArray0[2] = "5v{u-+:5G4cH6D";
      stringArray0[3] = "5v{u-+:5G4cH6D";
      stringArray0[4] = "5v{u-+:5G4cH6D";
      boolean boolean0 = DoubleMetaphone.contains("5v{u-+:5G4cH6D", 0, 3582, stringArray0);
      assertFalse(boolean0);
      assertEquals(5, stringArray0.length);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual(",!", "9e. HQ`)", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('_');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen((-661));
      assertEquals((-661), doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual(".-!uJrOJB;OT#", ".-!uJrOJB;OT#");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("SzW", "~YBJg38E=aOb`2e");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.encode("~YBJg38E=aOb`2e");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("PJKP", string0);
      
      int int0 = 315;
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(315);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("~YBJg38E=aOb`2e", "org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string1 = "org.apache.commons.codec.EncoderException";
      String string2 = doubleMetaphone1.doubleMetaphone("org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("ARKP", string2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      // Undeclared exception!
      try { 
        doubleMetaphone1.isDoubleMetaphoneEqual("", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) "DG");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("TK", object0);
      
      String string0 = doubleMetaphone0.encode("DG");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("TK", string0);
      assertTrue(string0.equals((Object)object0));
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = "SL<%-cRm";
      String string1 = doubleMetaphone0.encode("SL<%-cRm");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("SLKR", string1);
      assertFalse(string1.equals((Object)string0));
      
      Object object0 = doubleMetaphone0.encode((Object) "SL<%-cRm");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("SLKR", object0);
      assertTrue(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string0));
      
      Object object1 = doubleMetaphone0.encode((Object) "SLKR");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object1);
      assertEquals("SLKR", object1);
      assertFalse(object1.equals((Object)string0));
      assertTrue(object1.equals((Object)object0));
      assertTrue(object1.equals((Object)string1));
      
      Object object2 = doubleMetaphone0.encode((Object) "SLKR");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object2);
      assertEquals("SLKR", object2);
      assertFalse(object2.equals((Object)string0));
      assertTrue(object2.equals((Object)object0));
      assertTrue(object2.equals((Object)string1));
      assertTrue(object2.equals((Object)object1));
      
      String string2 = doubleMetaphone0.doubleMetaphone("SL<%-cRm", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("SLKR", string2);
      assertTrue(string2.equals((Object)object0));
      assertFalse(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      assertTrue(string2.equals((Object)object1));
      assertTrue(string2.equals((Object)object2));
      
      String string3 = doubleMetaphone0.encode("SLKR");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string3);
      assertEquals("SLKR", string3);
      assertFalse(string3.equals((Object)string0));
      assertTrue(string3.equals((Object)object2));
      assertTrue(string3.equals((Object)string2));
      assertTrue(string3.equals((Object)string1));
      assertTrue(string3.equals((Object)object1));
      assertTrue(string3.equals((Object)object0));
      
      String string4 = "";
      String string5 = doubleMetaphone0.doubleMetaphone("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string5);
      
      Object object3 = doubleMetaphone0.encode((Object) "SLKR");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object3);
      assertEquals("SLKR", object3);
      assertFalse(object3.equals((Object)string4));
      assertTrue(object3.equals((Object)object1));
      assertTrue(object3.equals((Object)string3));
      assertTrue(object3.equals((Object)object2));
      assertTrue(object3.equals((Object)string1));
      assertFalse(object3.equals((Object)string0));
      assertTrue(object3.equals((Object)string2));
      assertTrue(object3.equals((Object)object0));
      
      String string6 = doubleMetaphone0.encode("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string6);
      
      String string7 = doubleMetaphone0.doubleMetaphone("", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string7);
      
      int int0 = (-1);
      doubleMetaphone0.setMaxCodeLen((-1));
      assertEquals((-1), doubleMetaphone0.getMaxCodeLen());
      
      String string8 = "";
      String[] stringArray0 = new String[1];
      String string9 = "CY";
      stringArray0[0] = "CY";
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("SL<%-cRm", (String) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("sn0JC.xAc'$i;S~2");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("SNJK", string0);
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone(">G>,6Y;Bj-vo^2*", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KPJF", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("b}p)-Olk.UvT:BDQrx", "b}p)-Olk.UvT:BDQrx");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2817);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      char char0 = doubleMetaphone1.charAt("", (-1214));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals('\u0000', char0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("SJ", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("SJ", string1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("dqB%o`/EJoz_f6");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("TKPJ", string0);
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("GN.-!UJROJ;OT#");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("NJRJ", string0);
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("wgj+rjScWn:t");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KJRS", string0);
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("JOSE", "JOSE");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = null;
      String string1 = doubleMetaphone0.doubleMetaphone((String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string1);
      
      String string2 = doubleMetaphone0.encode("`7;%(e3K6^Z");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("KS", string2);
      
      String string3 = doubleMetaphone0.doubleMetaphone((String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string3);
      
      int int0 = 2;
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "TTH");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("JOTHSE", "JOTHSE");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("TTH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("0", string0);
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(68);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("dz");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("dz", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = null;
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.appendAlternate((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone(">G>,6Y;Bj-vo^2*", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KPJF", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone(">G>,6Y;Bj-vo^2*", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("KPJF", string1);
      assertTrue(string1.equals((Object)string0));
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("WH,|", "");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string2 = doubleMetaphone0.encode("RR77M7APP.'UZ");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("RMPS", string2);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      
      String string3 = doubleMetaphone0.doubleMetaphone(";_kvJ", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string3);
      assertEquals("KF ", string3);
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("Wq");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("K", string0);
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("GzjP[r");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KSJP", string0);
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("WITZ");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("ATS", string0);
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = "";
      String string1 = doubleMetaphone0.encode("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string1);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      String string0 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode(">G>,6Y;Bj-vo^2*");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KPJF", string0);
      
      Object object0 = doubleMetaphone0.encode((Object) "S");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("S", object0);
      assertFalse(object0.equals((Object)string0));
      
      String string1 = doubleMetaphone0.doubleMetaphone("S");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("S", string1);
      assertFalse(string1.equals((Object)string0));
      assertTrue(string1.equals((Object)object0));
      
      String string2 = doubleMetaphone0.encode("ZA");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("S", string2);
      assertFalse(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      assertTrue(string2.equals((Object)object0));
      
      Object object1 = new Object();
      assertNotNull(object1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual(">Sjz@{ia\"qt N(Zj1}$", "6$");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual(">G>,6Y;Bj-vo^2*", "SH", false);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      
      boolean boolean2 = doubleMetaphone2.isDoubleMetaphoneEqual("?.|", "KPJF", false);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(boolean2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertNotNull(doubleMetaphone3);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("NKK");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("NK", string0);
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1613);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("_`?`*", "$BdKx%_dE^iAXF`KF");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("_`?`*", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("$BdKx%_dE^iAXF`KF", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('w');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("_`?`*w", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("$BdKx%_dE^iAXF`KF", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("}|8Pz\"y\"]kzKJCOu7");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("_`?`*w", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("$BdKx%_dE^iAXF`KF}|8Pz\"y\"]kzKJCOu7", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("7byJ,psd2x2x", "$BdKx%_dE^iAXF`KF");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("$BdKx%_dE^iAXF`KF}|8Pz\"y\"]kzKJCOu7$BdKx%_dE^iAXF`KF", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("_`?`*w7byJ,psd2x2x", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("7byJ,psd2x2x", (String) null, false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("`-=o|:iK");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("_`?`*w7byJ,psd2x2x`-=o|:iK", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("$BdKx%_dE^iAXF`KF}|8Pz\"y\"]kzKJCOu7$BdKx%_dE^iAXF`KF`-=o|:iK", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string0 = doubleMetaphone0.doubleMetaphone("`r;'nec", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("RNK", string0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('w');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("_`?`*w7byJ,psd2x2x`-=o|:iKw", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("$BdKx%_dE^iAXF`KF}|8Pz\"y\"]kzKJCOu7$BdKx%_dE^iAXF`KF`-=o|:iKw", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("_`?`*w7byJ,psd2x2x`-=o|:iKw", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("$BdKx%_dE^iAXF`KF}|8Pz\"y\"]kzKJCOu7$BdKx%_dE^iAXF`KF`-=o|:iKw", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string1 = doubleMetaphone0.doubleMetaphone("}|8Pz\"y\"]kzKJCOu7", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("PTSK", string1);
      assertFalse(string1.equals((Object)string0));
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "$BdKx%_dE^iAXF`KF");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("q@vp>w##BjoN]XPQ pc6");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KFPP", string0);
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("K(AgR449#|3^4(Y)|", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KKR", string0);
      
      String string1 = doubleMetaphone0.encode("K(AgR449#|3^4(Y)|");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("KKR", string1);
      assertTrue(string1.equals((Object)string0));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2684);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('~');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("~", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string2 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("~", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(string2);
      assertEquals("~", string2);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("KKR", "org.apache.commons.codec.EncoderException", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('^', '^');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("^", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("~^", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("@");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("~^@", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("^@", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string3 = doubleMetaphone0.doubleMetaphone((String) null, true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string3);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('S');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("~^@S", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("^@S", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('S');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("~^@S", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("^@SS", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('<');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("~^@S<", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("^@SS<", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('<');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("~^@S<<", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("^@SS<", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", (String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      doubleMetaphone0.setMaxCodeLen(2684);
      assertEquals(2684, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("QVu8k&H1}0i?Bbx0", "KKR");
      assertEquals(2684, doubleMetaphone0.getMaxCodeLen());
      assertEquals("~^@S<<QVu8k&H1}0i?Bbx0", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("^@SS<KKR", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('S');
      assertEquals(2684, doubleMetaphone0.getMaxCodeLen());
      assertEquals("~^@S<<QVu8k&H1}0i?Bbx0S", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("^@SS<KKR", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string4 = doubleMetaphone0.encode("QVu8k&H1}0i?Bbx0");
      assertEquals(2684, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string4);
      assertEquals("KFKPKS", string4);
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('^');
      assertEquals(2684, doubleMetaphone0.getMaxCodeLen());
      assertEquals("~^@S<<QVu8k&H1}0i?Bbx0S^", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("^@SS<KKR", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('X');
      assertEquals(2684, doubleMetaphone0.getMaxCodeLen());
      assertEquals("~^@S<<QVu8k&H1}0i?Bbx0S^X", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("^@SS<KKR", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string5 = doubleMetaphone0.doubleMetaphone("S;0x]");
      assertEquals(2684, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string5);
      assertEquals("SKS", string5);
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string2));
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("org.apache.commons.codec.EncoderException", "org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("o", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("o", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string0 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("o", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("o", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(string0);
      assertEquals("o", string0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append(':');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("o", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("o", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("3MbL)< R(>CY", true);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("", string0);
      
      String string1 = doubleMetaphone0.encode("3MbL)< R(>CY");
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("", string1);
      assertTrue(string1.equals((Object)string0));
      
      String string2 = doubleMetaphone0.encode("F");
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("", string2);
      assertTrue(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual(";,SiWFo%DO", "qy{*,fy{", true);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = null;
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      int int0 = (-704);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-704));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      try { 
        doubleMetaphone0.encode((Object) doubleMetaphone_DoubleMetaphoneResult0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "fNyu";
      boolean boolean0 = DoubleMetaphone.contains("", 0, 0, stringArray0);
      assertTrue(boolean0);
      assertEquals(3, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "org.apache.commons.codec.EncoderException", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string0 = doubleMetaphone0.doubleMetaphone("MANGER");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("MNJR", string0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      
      String string1 = doubleMetaphone2.encode("org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("ARKP", string1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("CG", "z5CzDfu4*");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(boolean1 == boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertNotNull(doubleMetaphone3);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "?.|", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone3);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      
      String string2 = doubleMetaphone3.doubleMetaphone("OR", true);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("AR", string2);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("Fw%ekgu/R");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("FKKR", string0);
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("CK");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("K", string0);
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("BACHE");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("PX", string0);
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("ACH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("AK", string0);
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("WRJ)GLI3U#HSH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("RJKL", string0);
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("BACHER");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("PKR", string0);
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("G");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("K", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("WITZ");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("ATS", string1);
      assertFalse(string1.equals((Object)string0));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('<');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('T', '<');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string0 = doubleMetaphone1.doubleMetaphone("VOo6Ss8@h<@");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("FS", string0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone2.new DoubleMetaphoneResult(2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("I", "I");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('9');
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("9", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('9', 'h');
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("9", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("9h", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      
      char char0 = doubleMetaphone1.charAt("HOLM", 81);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals('\u0000', char0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(81);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult1.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(boolean1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(boolean1 == boolean0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult2 = doubleMetaphone1.new DoubleMetaphoneResult(705);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("HOLM", "'z ", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      
      doubleMetaphone_DoubleMetaphoneResult2.append("(+H)#F<&Cpdg", "FS");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("FS", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertEquals("(+H)#F<&Cpdg", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone1.setMaxCodeLen((-4331));
      assertEquals((-4331), doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("9", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("9h", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult2);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("d?BAHBQJ=\"9j@", "d?BAHBQJ=\"9j@");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("ARKP", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("ARKP", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("ARKP", string1);
      assertTrue(string1.equals((Object)string0));
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("d?BAHBQJ=\"9j@", "org.apache.commons.codec.EncoderException", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
      
      String string2 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("ARKP", string2);
      assertTrue(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("}?C^!&UGQ3Gh3`N*pwx", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KKKK", string0);
      
      char char0 = doubleMetaphone0.charAt("KKKK", 4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("{r^~aecX");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("RKKS", string0);
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("ES", "ES");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string0 = doubleMetaphone0.encode("CH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("K", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("K", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("K", string1);
      assertTrue(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone(">G>,6Y;Bj-vo^2*", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KPJF", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("b}p)-Olk.UvT:BDQrx", "b}p)-Olk.UvT:BDQrx");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2817);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(2817);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult1.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(boolean1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(boolean1 == boolean0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("hPh:<!+{5l`%`X1i3{k", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("FLKS", string1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("Z5");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("S", string0);
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      char char0 = doubleMetaphone0.charAt("CC", (-935));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("CC", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("K", string0);
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(214);
      assertEquals(214, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string0 = doubleMetaphone1.doubleMetaphone("orG.apachM.commons.codec.EncoderE]cxpt<on");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("ARKP", string0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string1 = doubleMetaphone0.encode("orG.apachM.commons.codec.EncoderE]cxpt<on");
      assertEquals(214, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("ARKPKMKMNSKTKNKTRKKSPTN", string1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      char char0 = doubleMetaphone1.charAt("orG.apachM.commons.codec.EncoderE]cxpt<on", 214);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals('\u0000', char0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "org.apache.commons.codec.EncoderException", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string0 = doubleMetaphone0.encode("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("fIb2ZqsoV*kfFXBf$r0", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("FPSK", string1);
      
      doubleMetaphone0.setMaxCodeLen(2405);
      assertEquals(2405, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      assertEquals(2405, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("ARKPXKMNSKTKNKTRKSPXN", string2);
      assertFalse(string2.equals((Object)string1));
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "fIb2ZqsoV*kfFXBf$r0");
      assertEquals(2405, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(boolean1 == boolean0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("ARKPXKMNSKTKNKTRKSPXN", (String) null, true);
      assertEquals(2405, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertNotNull(doubleMetaphone3);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("H~kwaH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("K", string0);
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("TION");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("XN", string0);
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("x$PGE/_h!");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("SPJ", string0);
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("DD", "DD");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("Je6|R^mMqb7J@/");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("JRMK", string0);
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("CHAE");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("X", string0);
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("KcH6%g*)3");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KXK", string0);
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("!.eUy#MqQ8x\"&&jp`");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("MKKS", string0);
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("bGs>_MA7Epe,^q", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("PKSM", string0);
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("UMB");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("AM", string0);
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = "TYM`;[";
      doubleMetaphone0.setMaxCodeLen(2701);
      assertEquals(2701, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("TYM`;[");
      assertEquals(2701, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("TM", string1);
      assertFalse(string1.equals((Object)string0));
      
      String string2 = "org.apache.commons.codec.EncoderException";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("5T#:HG#7cg", "org.apache.commons.codec.EncoderException", true);
      assertEquals(2701, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "<y%o;ddxe!ZE");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("GNXCEBL>4{");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("NKSP", string0);
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "ES", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("8s");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("S", string0);
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = doubleMetaphone0.doubleMetaphone("qtD3y>'+@d/.,GA/s");
      assertEquals("KTTK", string0);
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = doubleMetaphone0.encode("McZkLlkdG}3[hk;");
      assertEquals("MSKL", string0);
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = doubleMetaphone0.doubleMetaphone("S9");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S", string0);
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = doubleMetaphone0.doubleMetaphone("f64cVVw{-");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKF", string0);
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      doubleMetaphone1.isDoubleMetaphoneEqual("IER", (String) null);
      doubleMetaphone1.doubleMetaphone((String) null, true);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.isDoubleMetaphoneEqual("SIO", "SIO");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = doubleMetaphone0.doubleMetaphone("hM#i+NET4\"p`ohq$Z[!");
      assertEquals("MNTP", string0);
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = doubleMetaphone0.doubleMetaphone("*0.q _'q~+w");
      assertNotNull(string0);
      assertEquals("KK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.isDoubleMetaphoneEqual("ISL", "ISL");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = doubleMetaphone0.encode("!!-+'=$YQqH=UT?hr");
      assertEquals("KTR", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode((String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.isDoubleMetaphoneEqual("LSned@wu", "/>;rtdOx8/}4Ej");
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = doubleMetaphone0.doubleMetaphone("zHC\"#zWR*T");
      assertEquals("JKSR", string0);
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = doubleMetaphone0.doubleMetaphone(":shd7m7Xmu4cCun");
      assertNotNull(string0);
      assertEquals("XTMK", string0);
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.append('+');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("<kjux|>pAOi\"dF");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = doubleMetaphone0.doubleMetaphone("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = doubleMetaphone0.encode("xMP=GE/_!");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SMPJ", string0);
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(858);
      doubleMetaphone_DoubleMetaphoneResult0.append('x', 'x');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('x');
      assertEquals("xx", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone0.doubleMetaphone("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = doubleMetaphone0.doubleMetaphone("#)kz");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KS", string0);
  }
}
