/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 06 01:09:38 GMT 2021
 */

package org.apache.commons.codec.language;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.codec.language.DoubleMetaphone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DoubleMetaphone_ESTest extends DoubleMetaphone_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("MCci3A*#");
      assertEquals("MKS", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("l|WV-F)nv7");
      assertEquals("LFFN", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("&CCES");
      assertEquals("XS", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode(";x4S1&,S");
      assertEquals("KSSS", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "i^oUGh~");
      assertEquals("AK", object0);
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(object0.equals((Object)string0));
      
      String string1 = doubleMetaphone0.encode("S4GT ,Ikh+]RVI/^+");
      assertEquals("SKTK", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)object0));
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("ZZIBVS#on10V#|k");
      assertEquals("SPFS", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("X");
      assertEquals("S", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("KNYGH|AK7 ]$]IY", (String) null, true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("Ygh|aK7 ]$]Iy");
      assertEquals("AKK", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("G?RGIER");
      assertEquals("KRJ", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("Ygh|aK7 ]$]Iy");
      assertEquals("AKK", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("M<eYrFOIS");
      assertEquals("MRF", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "+GfqY=:n");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("nbn1S!.Y_)Rih+1E", 72);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("}~");
      assertEquals("", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(72);
      assertEquals(72, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("K_a$+8c\"vUyZRo", true);
      assertEquals("KKFTSR", string1);
      assertNotNull(string1);
      assertEquals(72, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      
      char char1 = doubleMetaphone0.charAt("", 72);
      assertEquals('\u0000', char1);
      assertEquals(72, doubleMetaphone0.getMaxCodeLen());
      assertTrue(char1 == char0);
      
      String string2 = doubleMetaphone0.doubleMetaphone("WRPSHOLZ", true);
      assertEquals("RPSLTS", string2);
      assertNotNull(string2);
      assertEquals(72, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      
      String[] stringArray0 = new String[0];
      boolean boolean1 = DoubleMetaphone.contains("CIE", (-2027), 890, stringArray0);
      assertFalse(boolean1);
      assertEquals(0, stringArray0.length);
      assertTrue(boolean1 == boolean0);
      
      String string3 = doubleMetaphone0.encode("+GfqY=:n");
      assertEquals("KFKN", string3);
      assertNotNull(string3);
      assertEquals(72, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      
      char char2 = doubleMetaphone0.charAt("7USWIi0|qQ+Vb^n6", (-2027));
      assertEquals('\u0000', char2);
      assertEquals(72, doubleMetaphone0.getMaxCodeLen());
      assertTrue(char2 == char1);
      assertTrue(char2 == char0);
      
      String string4 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      assertEquals("ARKPXKMNSKTKNKTRKSPXN", string4);
      assertNotNull(string4);
      assertEquals(72, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      
      char char3 = doubleMetaphone0.charAt("HLS", (-2027));
      assertEquals('\u0000', char3);
      assertEquals(72, doubleMetaphone0.getMaxCodeLen());
      assertTrue(char3 == char1);
      assertTrue(char3 == char0);
      assertTrue(char3 == char2);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("YGN~67k[#h");
      assertEquals("AKNK", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "MCC.c(");
      assertEquals("MKK", object0);
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("MCC.c(");
      assertEquals("MKK", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string0.equals((Object)object0));
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("WACHI+");
      assertEquals("AX", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      String string0 = "PSBACHER";
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("SCHE", "PSBACHER", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "$~gLQDGe";
      stringArray0[1] = "$~gLQDGe";
      stringArray0[2] = "i{";
      stringArray0[3] = "$~gLQDGe";
      stringArray0[4] = "$~gLQDGe";
      boolean boolean0 = DoubleMetaphone.contains("$~gLQDGe", 694, 75, stringArray0);
      assertFalse(boolean0);
      assertEquals(5, stringArray0.length);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("i{", 75);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("WR0CLLO", false);
      assertEquals("RKL", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("ZO", false);
      assertEquals("S", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      
      String string2 = doubleMetaphone0.doubleMetaphone("$~gLQDGe");
      assertEquals("KLKJ", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      
      char char1 = doubleMetaphone0.charAt("r", 694);
      assertEquals('\u0000', char1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(char1 == char0);
      
      String[] stringArray1 = new String[7];
      assertFalse(stringArray1.equals((Object)stringArray0));
      
      stringArray1[0] = "i{";
      stringArray1[1] = "1v@\"GF[Yhx+Ip\"";
      stringArray1[2] = "VAN ";
      stringArray1[3] = "r";
      stringArray1[4] = "$~gLQDGe";
      String string3 = "(\\ug_vy0jCvib/";
      stringArray1[5] = string3;
      stringArray1[6] = "$~gLQDGe";
      boolean boolean1 = DoubleMetaphone.contains("S", 474, 474, stringArray1);
      assertFalse(boolean1);
      assertNotSame(stringArray1, stringArray0);
      assertEquals(7, stringArray1.length);
      assertTrue(boolean1 == boolean0);
      assertFalse(stringArray1.equals((Object)stringArray0));
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "3PNu0iI-*7iRRWA!");
      assertEquals("PNR", object0);
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("geT@'Y", false);
      assertEquals("KT", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string0.equals((Object)object0));
      
      String string1 = doubleMetaphone0.doubleMetaphone("KT", false);
      assertEquals("KT", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)object0));
      
      String string2 = doubleMetaphone0.doubleMetaphone("G QJ", false);
      assertEquals("KKJ", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)object0));
      assertFalse(string2.equals((Object)string0));
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "G QJ";
      stringArray0[1] = "G QJ";
      stringArray0[2] = "KT";
      stringArray0[3] = "3PNu0iI-*7iRRWA!";
      stringArray0[4] = "3PNu0iI-*7iRRWA!";
      stringArray0[5] = "KT";
      stringArray0[6] = "3PNu0iI-*7iRRWA!";
      boolean boolean0 = DoubleMetaphone.contains("geT@'Y", (-3019), 76, stringArray0);
      assertFalse(boolean0);
      assertEquals(7, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("WRPS3/8IGHJJQKG3|", "WRSCHER", true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("WRSCHER");
      assertEquals("RXR", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("RXR", false);
      assertEquals("RKSR", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      
      String string2 = doubleMetaphone0.doubleMetaphone("UpxX )G+MVZE)Q", true);
      assertEquals("APKS", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("1 j#y,tLe");
      assertEquals("JTL", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("GiNUMB*u&Wj5S#WG|", "GiNUMB*u&Wj5S#WG|", false);
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("GiNUMB*u&Wj5S#WG|");
      assertEquals("KNMP", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("IGN#hD", "IGN#hD", true);
      assertTrue(boolean0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      char char0 = doubleMetaphone0.charAt("IGN#hD", (-2137));
      assertEquals('\u0000', char0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      String string0 = doubleMetaphone0.doubleMetaphone("IGN#hD", true);
      assertEquals("ANT", string0);
      assertNotNull(string0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("PSCHER", "", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("X6YHq>80(zdG");
      assertEquals("SKST", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("CG", true);
      assertEquals("K", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("MCHER");
      assertEquals("MKR", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string0 = doubleMetaphone1.doubleMetaphone("PS3/8IGHJJQKG3|");
      assertEquals("SJKK", string0);
      assertNotNull(string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(1);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "");
      assertNull(object0);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("");
      assertNull(string0);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(1);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1769);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('@');
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertEquals("@", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("@", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string1 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertEquals("@", string1);
      assertNotNull(string1);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertEquals("@", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("@", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String[] stringArray0 = new String[0];
      boolean boolean0 = DoubleMetaphone.contains("", 1, 414, stringArray0);
      assertFalse(boolean0);
      assertEquals(0, stringArray0.length);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('\"');
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertEquals("@\"", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("@\"", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string2 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string2);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("%1&?Z,zi&");
      assertEquals("S", string3);
      assertNotNull(string3);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string3.equals((Object)string1));
      
      doubleMetaphone_DoubleMetaphoneResult0.append(")Ov'1", "");
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertEquals("@\")Ov'1", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("@\"", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean1);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertEquals("@\")Ov'1", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("@\"", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertTrue(boolean1 == boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('@', '@');
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertEquals("@\"@", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("@\")Ov'1@", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string4 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertEquals("@\"@", string4);
      assertNotNull(string4);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertEquals("@\"@", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("@\")Ov'1@", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(1, int0);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("3/8IgHJjqkg3|", "", true);
      assertFalse(boolean2);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      
      char char0 = doubleMetaphone0.charAt("", (-414));
      assertEquals('\u0000', char0);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("S");
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertEquals("@\"@S", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("@\")Ov'1@S", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("GAgHKJOS");
      assertEquals("KKKS", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("zCCES");
      assertEquals("SXS", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("OIGY");
      assertEquals("AJ", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("?mpSCet|=N\"iU-u5");
      assertEquals("MPST", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("GHNPSIER");
      assertEquals("KNPS", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("Yn0C QcFF@E0>Zg", false);
      assertEquals("ANKK", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("whNs", "whNs", true);
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("koQ>:ShZ");
      assertEquals("KKXS", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("GNGNCHAE", true);
      assertEquals("NKNX", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("J<f\"h)*(I$FR|^2");
      assertEquals("JFFR", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("@Jr<IcHs)");
      assertEquals("JRKS", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("ghE@8|TJ", "ghE@8|TJ", false);
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("KNDANGER");
      assertEquals("NTNK", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string0 = doubleMetaphone1.doubleMetaphone("Lh`<c(zC<Yic9\"");
      assertEquals("LKSK", string0);
      assertNotNull(string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string1 = doubleMetaphone1.doubleMetaphone("GNCHAE", true);
      assertEquals("NX", string1);
      assertNotNull(string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      
      String string2 = doubleMetaphone0.doubleMetaphone("x_", true);
      assertEquals("S", string2);
      assertNotNull(string2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("EP", "CHrAE", true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("CHrAE");
      assertEquals("KR", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "KR";
      stringArray0[1] = "CHrAE";
      stringArray0[2] = "KR";
      stringArray0[3] = "KR";
      boolean boolean1 = DoubleMetaphone.contains("CHrAE", (-87218620), 88, stringArray0);
      assertFalse(boolean1);
      assertEquals(4, stringArray0.length);
      assertTrue(boolean1 == boolean0);
      
      // Undeclared exception!
      try { 
        DoubleMetaphone.contains("EP", 88, (-87218620), stringArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("oq^yJwu*AcHwq8|", "oq^yJwu*AcHwq8|");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string0 = doubleMetaphone1.doubleMetaphone("DANGER");
      assertEquals("TNJR", string0);
      assertNotNull(string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("GNKNJOSE", "PNILL!AKO");
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("EP", "&|Er@M0'e=", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("CHOR");
      assertEquals("KR", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("l#");
      assertEquals("L", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("Q", "OGY", true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("u*-93y?[W");
      assertEquals("A", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("P", true);
      assertEquals("P", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("uvVCH`y(:P2gO", true);
      assertEquals("AFKP", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      
      doubleMetaphone0.setMaxCodeLen(199);
      assertEquals(199, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("uvVCH`y(:P2gO");
      assertEquals("AFXPK", string2);
      assertNotNull(string2);
      assertEquals(199, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      
      Object object0 = doubleMetaphone0.encode((Object) "AFXPK");
      assertEquals("AFKSPK", object0);
      assertNotNull(object0);
      assertEquals(199, doubleMetaphone0.getMaxCodeLen());
      assertFalse(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string2));
      
      Object object1 = doubleMetaphone0.encode((Object) "AFKSPK");
      assertEquals("AFKSPK", object1);
      assertNotNull(object1);
      assertEquals(199, doubleMetaphone0.getMaxCodeLen());
      assertTrue(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string0));
      assertFalse(object1.equals((Object)string1));
      assertFalse(object1.equals((Object)string2));
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("ALLE", "AFXPK", false);
      assertFalse(boolean0);
      assertEquals(199, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("KRnO%(>m7{_p`Ri1^!n", "KRnO%(>m7{_p`Ri1^!n");
      assertTrue(boolean1);
      assertEquals(199, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1 == boolean0);
      
      char char0 = doubleMetaphone0.charAt("uvVCH`y(:P2gO", 0);
      assertEquals('u', char0);
      assertEquals(199, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[0];
      boolean boolean2 = DoubleMetaphone.contains("uvVCH`y(:P2gO", 75, 4, stringArray0);
      assertFalse(boolean2);
      assertEquals(0, stringArray0.length);
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      
      boolean boolean3 = DoubleMetaphone.contains("", 0, 199, (String[]) null);
      assertFalse(boolean3);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      
      char char1 = doubleMetaphone0.charAt("JOSE", 199);
      assertEquals('\u0000', char1);
      assertEquals(199, doubleMetaphone0.getMaxCodeLen());
      assertFalse(char1 == char0);
      
      char char2 = doubleMetaphone0.charAt("=vG@", 4059);
      assertEquals('\u0000', char2);
      assertEquals(199, doubleMetaphone0.getMaxCodeLen());
      assertFalse(char2 == char0);
      assertTrue(char2 == char1);
      
      String string3 = doubleMetaphone0.doubleMetaphone("", false);
      assertNull(string3);
      assertEquals(199, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("SH");
      assertEquals("X", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("WR)[RO:\"IGLI|");
      assertEquals("RRKL", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "GNWRZ*");
      assertEquals("NRS", object0);
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("GNWRZ*");
      assertEquals("NRS", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string0.equals((Object)object0));
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("%^dMwb^/5rv'cJI2", "KNC", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("GNWRZ*", 32);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("GNWRZ*", true);
      assertEquals("NRTS", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)object0));
      assertFalse(string1.equals((Object)string0));
      
      String string2 = doubleMetaphone0.doubleMetaphone("CHORE", true);
      assertEquals("XR", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)object0));
      assertFalse(string2.equals((Object)string1));
      
      String string3 = doubleMetaphone0.doubleMetaphone("CHORE", true);
      assertEquals("XR", string3);
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string3.equals((Object)object0));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertTrue(string3.equals((Object)string2));
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "GNWRZ*";
      boolean boolean1 = DoubleMetaphone.contains("NRTS", 32, 32, stringArray0);
      assertFalse(boolean1);
      assertEquals(1, stringArray0.length);
      assertTrue(boolean1 == boolean0);
      
      boolean boolean2 = DoubleMetaphone.contains("KNIN", 1, 1, stringArray0);
      assertFalse(boolean2);
      assertEquals(1, stringArray0.length);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      
      boolean boolean3 = DoubleMetaphone.contains("7/8vk'p~x0>", 1286, 2272, stringArray0);
      assertFalse(boolean3);
      assertEquals(1, stringArray0.length);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      
      char char1 = doubleMetaphone0.charAt("%^dMwb^/5rv'cJI2", 3);
      assertEquals('M', char1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(char1 == char0);
      
      char char2 = doubleMetaphone0.charAt("NRTS", 1);
      assertEquals('R', char2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(char2 == char1);
      assertFalse(char2 == char0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("u*-493yg#{W", "u*-493yg#{W");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "u*-493yg#{W";
      stringArray0[1] = "u*-493yg#{W";
      stringArray0[2] = "u*-493yg#{W";
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("pvbiJO&oH30{>B1", "pvbiJO&oH30{>B1", true);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      
      stringArray0[3] = "u*-493yg#{W";
      boolean boolean2 = DoubleMetaphone.contains("u*-493yg#{W", 70, 75, stringArray0);
      assertFalse(boolean2);
      assertEquals(4, stringArray0.length);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      
      char char0 = doubleMetaphone0.charAt("org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult", 70);
      assertEquals('t', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("PNUCCEE", "umbu*3W85g|");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("WICZ", "WICZ");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual(")[ro:\"IglI|", "", false);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1 == boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("", true);
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("AM", (-2107));
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("", true);
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("WICZ");
      assertEquals("AKS", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("C", 88);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("Gy<i1V+/gI{CBH Kgp", true);
      assertEquals("JFKK", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("bVw!rbX");
      assertEquals("PFRP", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "umbu*3W85g|");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("TCH");
      assertEquals("X", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("PN;D!", "PN;D!", true);
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual(".L)msF", "PNWICZ");
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = ":&MmcPnT";
      stringArray0[1] = ":&MmcPnT";
      stringArray0[2] = ":&MmcPnT";
      stringArray0[3] = ":&MmcPnT";
      boolean boolean0 = DoubleMetaphone.contains(":&MmcPnT", (-1137), 77, stringArray0);
      assertFalse(boolean0);
      assertEquals(4, stringArray0.length);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual(":&MmcPnT", ":&MmcPnT", false);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1 == boolean0);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual(":&MmcPnT", ":&MmcPnT", false);
      assertTrue(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone(":&MmcPnT");
      assertEquals("MKPN", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(77);
      assertEquals(77, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("gL ~Yr", "CAESAR", false);
      assertFalse(boolean3);
      assertEquals(77, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3 == boolean2);
      assertFalse(boolean3 == boolean1);
      
      doubleMetaphone0.setMaxCodeLen(96);
      assertEquals(96, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone((String) null, false);
      assertNull(string1);
      assertEquals(96, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean4 = DoubleMetaphone.contains("KNILL!`KO", 70, 70, stringArray0);
      assertFalse(boolean4);
      assertEquals(4, stringArray0.length);
      assertFalse(boolean4 == boolean1);
      assertTrue(boolean4 == boolean0);
      assertFalse(boolean4 == boolean2);
      assertTrue(boolean4 == boolean3);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "org.apache.commons.codec.EncoderException");
      assertEquals("ARKP", object0);
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("KNSIO", false);
      assertEquals("NS", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string0.equals((Object)object0));
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string0 = doubleMetaphone1.doubleMetaphone("CHAE", true);
      assertEquals("X", string0);
      assertNotNull(string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("PMF", "DG");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("PMF", "((LL");
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      String[] stringArray0 = new String[1];
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(725);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('p');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("p", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('1');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("p", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("1", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('@');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("p@", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("1", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone0.setMaxCodeLen(725);
      assertEquals(725, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(725, int0);
      assertEquals(725, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode(string0);
      assertNull(string1);
      assertEquals(725, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("NJ", true);
      assertEquals("N ", string2);
      assertNotNull(string2);
      assertEquals(725, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt(":[V|PH", 725);
      assertEquals('\u0000', char0);
      assertEquals(725, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone(":[V|PH", true);
      assertEquals("FF", string3);
      assertNotNull(string3);
      assertEquals(725, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string3.equals((Object)string2));
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("WR_GNCH", "WR_GNCH");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("WR_GNCH", "WR_GNCH", true);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      
      char char0 = doubleMetaphone0.charAt("WICZ", 2420);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("{4 -GY", "WICZ");
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "SCH");
      assertEquals("X", object0);
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      doubleMetaphone0.setMaxCodeLen(11);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(11, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("X", "cS", true);
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(11, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      String string0 = doubleMetaphone1.encode("X");
      assertEquals("S", string0);
      assertNotNull(string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string0.equals((Object)object0));
      
      String string1 = doubleMetaphone0.encode("_GNCH");
      assertEquals("NX", string1);
      assertNotNull(string1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(11, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)object0));
      
      String string2 = doubleMetaphone1.doubleMetaphone("X", true);
      assertEquals("S", string2);
      assertNotNull(string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)object0));
      assertFalse(string2.equals((Object)string1));
      assertTrue(string2.equals((Object)string0));
      
      String string3 = doubleMetaphone0.doubleMetaphone("SCH", false);
      assertEquals("X", string3);
      assertNotNull(string3);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(11, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertTrue(string3.equals((Object)object0));
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "X";
      stringArray0[1] = "X";
      stringArray0[2] = "cS";
      stringArray0[3] = "NX";
      stringArray0[4] = "SCH";
      stringArray0[5] = "_GNCH";
      boolean boolean1 = DoubleMetaphone.contains("cS", 3051, 1252, stringArray0);
      assertFalse(boolean1);
      assertEquals(6, stringArray0.length);
      assertTrue(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      
      boolean boolean0 = doubleMetaphone2.isDoubleMetaphoneEqual("N4", "ER", true);
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone3);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone3));
      
      String string0 = doubleMetaphone0.encode("9UOOejAt=Y-j/U$;|'?");
      assertEquals("JTJ", string0);
      assertNotNull(string0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone3));
      
      DoubleMetaphone doubleMetaphone4 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone4);
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      
      String string1 = doubleMetaphone4.encode("ED");
      assertEquals("AT", string1);
      assertNotNull(string1);
      assertNotSame(doubleMetaphone4, doubleMetaphone0);
      assertNotSame(doubleMetaphone4, doubleMetaphone3);
      assertNotSame(doubleMetaphone4, doubleMetaphone2);
      assertNotSame(doubleMetaphone4, doubleMetaphone1);
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "]S: hAn");
      assertEquals("SN", object0);
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object1 = doubleMetaphone0.encode((Object) "SN");
      assertEquals("SN", object1);
      assertNotNull(object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(object1.equals((Object)object0));
      
      Object object2 = doubleMetaphone0.encode((Object) "SN");
      assertEquals("SN", object2);
      assertNotNull(object2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(object2.equals((Object)object1));
      assertTrue(object2.equals((Object)object0));
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string0 = doubleMetaphone1.doubleMetaphone("K");
      assertEquals("K", string0);
      assertNotNull(string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string0.equals((Object)object1));
      assertFalse(string0.equals((Object)object0));
      assertFalse(string0.equals((Object)object2));
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("p+", "PSIER");
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string1 = doubleMetaphone1.doubleMetaphone("HEIM", false);
      assertEquals("HM", string1);
      assertNotNull(string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)object2));
      assertFalse(string1.equals((Object)object1));
      assertFalse(string1.equals((Object)object0));
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      
      doubleMetaphone3.setMaxCodeLen(617);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertEquals(617, doubleMetaphone3.getMaxCodeLen());
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      
      boolean boolean0 = doubleMetaphone3.isDoubleMetaphoneEqual("|NGNSqH", (String) null, true);
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertEquals(617, doubleMetaphone3.getMaxCodeLen());
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      
      String string0 = doubleMetaphone0.encode((String) null);
      assertNull(string0);
      assertNotSame(doubleMetaphone0, doubleMetaphone3);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      
      String string1 = doubleMetaphone2.encode("_GNCH");
      assertEquals("NX", string1);
      assertNotNull(string1);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone3);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone3));
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("LxkrMbQj<XTvHe", "'+2t*t^d\"cz-?");
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      char char0 = doubleMetaphone0.charAt("LxkrMbQj<XTvHe", 2198);
      assertEquals('\u0000', char0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("KNACH");
      assertEquals("NK", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("KNACH", true);
      assertEquals("NK", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string1.equals((Object)string0));
      
      String string2 = doubleMetaphone0.encode("NK");
      assertEquals("NK", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      
      String string3 = doubleMetaphone0.doubleMetaphone("NK", false);
      assertEquals("NK", string3);
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string3.equals((Object)string0));
      assertTrue(string3.equals((Object)string1));
      assertTrue(string3.equals((Object)string2));
      
      String string4 = doubleMetaphone0.doubleMetaphone("KNACH", false);
      assertEquals("NK", string4);
      assertNotNull(string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string4.equals((Object)string0));
      assertTrue(string4.equals((Object)string2));
      assertTrue(string4.equals((Object)string1));
      assertTrue(string4.equals((Object)string3));
      
      String string5 = doubleMetaphone0.doubleMetaphone("AJ", false);
      assertEquals("AJ", string5);
      assertNotNull(string5);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string3));
      
      char char0 = doubleMetaphone0.charAt("NK", 0);
      assertEquals('N', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("rreU4%I[c9", "dxO }I5\" } ?c6", false);
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      
      int int0 = doubleMetaphone2.getMaxCodeLen();
      assertEquals(4, int0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone3);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string0 = doubleMetaphone1.doubleMetaphone("dfx");
      assertEquals("TFKS", string0);
      assertNotNull(string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      
      String string1 = doubleMetaphone0.doubleMetaphone("EILLA");
      assertEquals("AL", string1);
      assertNotNull(string1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("ex?<a*-#fZHLk@T");
      assertEquals("AKSF", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("5Zze<k:c&lTb9}(/", true);
      assertEquals("TSKK", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      
      String string2 = doubleMetaphone0.doubleMetaphone("&(\":!5lVYwnN", false);
      assertEquals("LFN", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("wD", true);
      assertEquals("", string0);
      assertNotNull(string0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(0, int0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "wD";
      stringArray0[1] = "HARAC";
      stringArray0[2] = "HARAC";
      String string1 = doubleMetaphone0.encode("");
      assertNull(string1);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      stringArray0[3] = "";
      boolean boolean0 = DoubleMetaphone.contains("HARAC", (-287), (-287), stringArray0);
      assertFalse(boolean0);
      assertEquals(4, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string0 = doubleMetaphone0.encode("dfx");
      assertEquals("TFKS", string0);
      assertNotNull(string0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      
      String string1 = doubleMetaphone0.doubleMetaphone("ILLA");
      assertEquals("AL", string1);
      assertNotNull(string1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      
      String string2 = doubleMetaphone3.doubleMetaphone("WH");
      assertEquals("A", string2);
      assertNotNull(string2);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertEquals(4, int0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string0 = doubleMetaphone1.encode("");
      assertNull(string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string1 = doubleMetaphone1.encode("F$SZSI5Y%DvJr/9}");
      assertEquals("FSST", string1);
      assertNotNull(string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      
      String string2 = doubleMetaphone1.doubleMetaphone("SUGAR", true);
      assertEquals("SKR", string2);
      assertNotNull(string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(string2.equals((Object)string1));
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("SUGAR", "08m", false);
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      
      doubleMetaphone1.setMaxCodeLen(1295);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertEquals(1295, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      
      String string3 = doubleMetaphone0.doubleMetaphone("SUGAR", false);
      assertEquals("XKR", string3);
      assertNotNull(string3);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(90);
      assertEquals(90, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("dk@]X6zYc6lKgMNO@)", true);
      assertEquals("TKKSTSKLKKMN", string0);
      assertNotNull(string0);
      assertEquals(90, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("TKKSTSKLKKMN", "KNJOSE", true);
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(90, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      String string1 = doubleMetaphone1.doubleMetaphone("KNJOSE");
      assertEquals("NJS", string1);
      assertNotNull(string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      
      char char0 = doubleMetaphone0.charAt(")O!v*r',N'Tf'", 90);
      assertEquals('\u0000', char0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(90, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      
      int int0 = doubleMetaphone2.getMaxCodeLen();
      assertEquals(4, int0);
      assertNotSame(doubleMetaphone2, doubleMetaphone3);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("0pM\"'AmGsL");
      assertEquals("PMMK", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone(" G", false);
      assertEquals("K", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual(" G", " G");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual(" G", "KS", true);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1 == boolean0);
      
      doubleMetaphone0.setMaxCodeLen(356);
      assertEquals(356, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt(" G", (-1462));
      assertEquals('\u0000', char0);
      assertEquals(356, doubleMetaphone0.getMaxCodeLen());
      
      char char1 = doubleMetaphone0.charAt(" G", (-1462));
      assertEquals('\u0000', char1);
      assertEquals(356, doubleMetaphone0.getMaxCodeLen());
      assertTrue(char1 == char0);
      
      String string2 = doubleMetaphone0.doubleMetaphone("pDu7$i#ig+e", false);
      assertEquals("PTK", string2);
      assertNotNull(string2);
      assertEquals(356, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      
      char char2 = doubleMetaphone0.charAt("PTK", (-3590));
      assertEquals('\u0000', char2);
      assertEquals(356, doubleMetaphone0.getMaxCodeLen());
      assertTrue(char2 == char1);
      assertTrue(char2 == char0);
      
      char char3 = doubleMetaphone0.charAt("%-eF", 2650);
      assertEquals('\u0000', char3);
      assertEquals(356, doubleMetaphone0.getMaxCodeLen());
      assertTrue(char3 == char0);
      assertTrue(char3 == char2);
      assertTrue(char3 == char1);
      
      char char4 = doubleMetaphone0.charAt("", 2650);
      assertEquals('\u0000', char4);
      assertEquals(356, doubleMetaphone0.getMaxCodeLen());
      assertTrue(char4 == char3);
      assertTrue(char4 == char1);
      assertTrue(char4 == char2);
      assertTrue(char4 == char0);
      
      String string3 = doubleMetaphone0.doubleMetaphone("ILL!", true);
      assertEquals("AL", string3);
      assertNotNull(string3);
      assertEquals(356, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      
      char char5 = doubleMetaphone0.charAt("ILL!", 79);
      assertEquals('\u0000', char5);
      assertEquals(356, doubleMetaphone0.getMaxCodeLen());
      assertTrue(char5 == char3);
      assertTrue(char5 == char0);
      assertTrue(char5 == char2);
      assertTrue(char5 == char4);
      assertTrue(char5 == char1);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(356, int0);
      assertEquals(356, doubleMetaphone0.getMaxCodeLen());
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(356, int1);
      assertEquals(356, doubleMetaphone0.getMaxCodeLen());
      assertTrue(int1 == int0);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "0pM\"'AmGsL";
      stringArray0[1] = "PMMK";
      stringArray0[2] = "KS";
      stringArray0[3] = "KS";
      stringArray0[4] = "pDu7$i#ig+e";
      stringArray0[5] = "K";
      stringArray0[6] = "KS";
      stringArray0[7] = "ILL!";
      boolean boolean2 = DoubleMetaphone.contains("ILL!", (-3590), 5, stringArray0);
      assertFalse(boolean2);
      assertEquals(8, stringArray0.length);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      
      String string0 = doubleMetaphone2.doubleMetaphone("#*=bMF:&Z#cU'$)L", true);
      assertEquals("PMFS", string0);
      assertNotNull(string0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      
      boolean boolean0 = doubleMetaphone3.isDoubleMetaphoneEqual("CH", "SIO", true);
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      
      String string1 = doubleMetaphone0.doubleMetaphone("CH");
      assertEquals("K", string1);
      assertNotNull(string1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone3));
      assertFalse(string1.equals((Object)string0));
      
      char char0 = doubleMetaphone0.charAt("CH", 2118);
      assertEquals('\u0000', char0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone3));
      
      DoubleMetaphone doubleMetaphone4 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone4);
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      
      DoubleMetaphone doubleMetaphone5 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone5);
      assertEquals(4, doubleMetaphone5.getMaxCodeLen());
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone4));
      
      int int0 = doubleMetaphone5.getMaxCodeLen();
      assertEquals(4, int0);
      assertNotSame(doubleMetaphone5, doubleMetaphone1);
      assertNotSame(doubleMetaphone5, doubleMetaphone2);
      assertNotSame(doubleMetaphone5, doubleMetaphone0);
      assertNotSame(doubleMetaphone5, doubleMetaphone3);
      assertNotSame(doubleMetaphone5, doubleMetaphone4);
      assertEquals(4, doubleMetaphone5.getMaxCodeLen());
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone4));
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("DG", "p,UssXyZC,w8Y:");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("PS+`TZFCAB*# 8KOEY", true);
      assertEquals("STSF", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = DoubleMetaphone.contains(",[o$|yt)ZDoUY9SO^", 3702, 3702, (String[]) null);
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(90);
      assertEquals(90, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("dk@]X6zYc6lKgMNO@)", true);
      assertEquals("TKKSTSKLKKMN", string0);
      assertNotNull(string0);
      assertEquals(90, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("TKKSTSKLKKMN", 987);
      assertEquals('\u0000', char0);
      assertEquals(90, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(90, int0);
      assertEquals(90, doubleMetaphone0.getMaxCodeLen());
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(90, int1);
      assertEquals(90, doubleMetaphone0.getMaxCodeLen());
      assertTrue(int1 == int0);
      
      char char1 = doubleMetaphone0.charAt("dk@]X6zYc6lKgMNO@)", 90);
      assertEquals('\u0000', char1);
      assertEquals(90, doubleMetaphone0.getMaxCodeLen());
      assertTrue(char1 == char0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("n-n^E6f;A[_^2wr", "v~_YCFwh4ut8Rv");
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      int int2 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(90, int2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(90, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(int2 == int1);
      assertTrue(int2 == int0);
      
      int int3 = doubleMetaphone1.getMaxCodeLen();
      assertEquals(4, int3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(int3 == int0);
      assertFalse(int3 == int1);
      assertFalse(int3 == int2);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(1);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("P&U,+;d;g]pah2nK", "P&U,+;d;g]pah2nK");
      assertTrue(boolean0);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(1, int0);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("ER", 1);
      assertEquals('R', char0);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("fvpZ[)Ch]vw7u", "OR", true);
      assertFalse(boolean1);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1 == boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      
      doubleMetaphone2.setMaxCodeLen('R');
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertEquals(82, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      
      String string0 = doubleMetaphone1.doubleMetaphone("ILL!`kO", false);
      assertEquals("ALK", string0);
      assertNotNull(string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      
      int int1 = doubleMetaphone2.getMaxCodeLen();
      assertEquals(82, int1);
      assertNotSame(doubleMetaphone2, doubleMetaphone3);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertEquals(82, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1951));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("WICZ", 2420);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char1 = doubleMetaphone0.charAt("WICZ", 2420);
      assertEquals('\u0000', char1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(char1 == char0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("WICZ", "GNKSMK", true);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1 == boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string0 = doubleMetaphone0.doubleMetaphone("?$NQ({ow", true);
      assertEquals("NKF", string0);
      assertNotNull(string0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      String string1 = doubleMetaphone0.doubleMetaphone("&],pf?n`}g", true);
      assertEquals("PFNK", string1);
      assertNotNull(string1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[1] = "PSPSL";
      stringArray0[2] = "PSPSL";
      stringArray0[3] = "!";
      stringArray0[4] = "Wv]ra_";
      boolean boolean0 = DoubleMetaphone.contains("PSPSL", 86, 86, stringArray0);
      assertFalse(boolean0);
      assertEquals(5, stringArray0.length);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("J`I1I+;D)s7hA^");
      assertEquals("JTS", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("J`I1I+;D)s7hA^", "DPcPVsRM};a?Mk", false);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("VzeQPD~VSC_fm)W\"", "DPcPVsRM};a?Mk");
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      
      doubleMetaphone0.setMaxCodeLen(86);
      assertEquals(86, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("cuftJGg?r}4@6~3", false);
      assertEquals("KFTJKR", string1);
      assertNotNull(string1);
      assertEquals(86, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("UMB", "PSPSL");
      assertFalse(boolean3);
      assertEquals(86, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      
      char char0 = doubleMetaphone0.charAt("nIXocL*/", 86);
      assertEquals('\u0000', char0);
      assertEquals(86, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(86, int0);
      assertEquals(86, doubleMetaphone0.getMaxCodeLen());
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(86, int1);
      assertEquals(86, doubleMetaphone0.getMaxCodeLen());
      assertTrue(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("vX!");
      assertEquals("FKS", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen((-268));
      assertEquals((-268), doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("=r!3S2E6", "");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(1);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string0 = doubleMetaphone0.encode("PSIER");
      assertEquals("S", string0);
      assertNotNull(string0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      char char0 = doubleMetaphone0.charAt("A", 1);
      assertEquals('\u0000', char0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      String string1 = doubleMetaphone0.doubleMetaphone("TTH", true);
      assertEquals("T", string1);
      assertNotNull(string1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      
      char char1 = doubleMetaphone0.charAt("PSIER", (-812));
      assertEquals('\u0000', char1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(char1 == char0);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("?!:in*lU{R%~bRc8", "HEI!", true);
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      
      String string2 = doubleMetaphone0.doubleMetaphone("T", false);
      assertEquals("T", string2);
      assertNotNull(string2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "PSPSL";
      stringArray0[1] = "PSPSL";
      stringArray0[2] = "PSPSL";
      stringArray0[3] = "!";
      stringArray0[4] = "Wv]ra_";
      boolean boolean0 = DoubleMetaphone.contains("PSPSL", 86, 86, stringArray0);
      assertFalse(boolean0);
      assertEquals(5, stringArray0.length);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("J`I1I+;D)s7hA^");
      assertEquals("JTS", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("J`I1I+;D)s7hA^", "DPcPVsRM};a?Mk", false);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("VzeQPD~VSC_fm)W\"", "DPcPVsRM};a?Mk");
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      
      doubleMetaphone0.setMaxCodeLen(86);
      assertEquals(86, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode((String) null);
      assertNull(string1);
      assertEquals(86, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("UMB", "PSPSL");
      assertFalse(boolean3);
      assertEquals(86, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      
      char char0 = doubleMetaphone0.charAt("nIXocL*/", 86);
      assertEquals('\u0000', char0);
      assertEquals(86, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(86, int0);
      assertEquals(86, doubleMetaphone0.getMaxCodeLen());
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(86, int1);
      assertEquals(86, doubleMetaphone0.getMaxCodeLen());
      assertTrue(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("}yJ6MXaw75L", "dk@]X6zYc6lKgMNO@)");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("}yJ6MXaw75L", "dk@]X6zYc6lKgMNO@)", false);
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertEquals(4, int0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string0 = doubleMetaphone1.doubleMetaphone("DIiXQqAfG", true);
      assertEquals("TKSK", string0);
      assertNotNull(string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      char char0 = doubleMetaphone0.charAt("org.apache.commons.codec.EncoderException", 90);
      assertEquals('\u0000', char0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      String string1 = doubleMetaphone1.doubleMetaphone("org.apache.commons.codec.EncoderException", true);
      assertEquals("ARKP", string1);
      assertNotNull(string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      
      char char1 = doubleMetaphone1.charAt("8Gz38h&uj~H14'9&`H", (-796));
      assertEquals('\u0000', char1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(char1 == char0);
      
      boolean boolean2 = doubleMetaphone1.isDoubleMetaphoneEqual("Qnet_?i", "ARKP", false);
      assertFalse(boolean2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(90);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string2 = doubleMetaphone0.doubleMetaphone("UCCEE", false);
      assertEquals("AKS", string2);
      assertNotNull(string2);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      
      char char2 = doubleMetaphone1.charAt("ARKP", 1174);
      assertEquals('\u0000', char2);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(char2 == char1);
      assertTrue(char2 == char0);
      
      char char3 = doubleMetaphone2.charAt("aO!", 71);
      assertEquals('\u0000', char3);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertTrue(char3 == char0);
      assertTrue(char3 == char2);
      assertTrue(char3 == char1);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("CX", true);
      assertEquals("KKS", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("org.apache.commons.codec.EncoderException");
      assertEquals("ARKP", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      
      String string2 = doubleMetaphone0.doubleMetaphone("+");
      assertEquals("", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      
      char char0 = doubleMetaphone0.charAt("org.apache.commons.codec.EncoderException", 1);
      assertEquals('r', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string3 = doubleMetaphone1.doubleMetaphone("");
      assertNull(string3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.language.DoubleMetaphone", "JOSE", true);
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone2.new DoubleMetaphoneResult(88);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("I6FdOGC", "I6FdOGC", true);
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string0 = doubleMetaphone0.doubleMetaphone("!xZ9u4m%d`% *", true);
      assertEquals("KSSM", string0);
      assertNotNull(string0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      char char0 = doubleMetaphone0.charAt("I,qth |,~h'K?*Md*", (-839));
      assertEquals('\u0000', char0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      String string1 = doubleMetaphone1.doubleMetaphone("DW2", false);
      assertEquals("T", string1);
      assertNotNull(string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      
      char char1 = doubleMetaphone0.charAt("T", (-839));
      assertEquals('\u0000', char1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(char1 == char0);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("N9E,+7BISRcz8Bs%m.", "KSSM", true);
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean1 == boolean0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      
      String string2 = doubleMetaphone0.doubleMetaphone("x", true);
      assertEquals("S", string2);
      assertNotNull(string2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("wB4h%IZ_ K8");
      assertEquals("PSK", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("&(\":!5lVYwnN", "wB4h%IZ_ K8", true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("SC", true);
      assertEquals("SK", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      
      char char0 = doubleMetaphone0.charAt("Qnet_?i", 4);
      assertEquals('_', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("Qnet_?i", true);
      assertEquals("KNT", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      
      char char1 = doubleMetaphone0.charAt("SK", (-796));
      assertEquals('\u0000', char1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(char1 == char0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("&(\":!5lVYwnN", "org.apache.commons.codec.EncoderException", false);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string3 = doubleMetaphone0.doubleMetaphone("PSQQ3>", false);
      assertEquals("SK", string3);
      assertNotNull(string3);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("VAN ");
      assertEquals("FN", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("FN", "qQ3>", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("SH", "qQ3>", true);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      char char0 = doubleMetaphone0.charAt("PSL", 65);
      assertEquals('\u0000', char0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2966);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      String string1 = doubleMetaphone1.encode("VAN ");
      assertEquals("FN", string1);
      assertNotNull(string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(string1.equals((Object)string0));
      
      doubleMetaphone_DoubleMetaphoneResult0.append("SH", "PSL");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PSL", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("SH", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone1.new DoubleMetaphoneResult((-1719));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult2 = doubleMetaphone1.new DoubleMetaphoneResult((-2560));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("{<5}bdU1t3A t\"')", true);
      assertEquals("PTTT", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("SIO", "{<5}bdU1t3A t\"')", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("PTTT", "", true);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string1 = doubleMetaphone1.doubleMetaphone("{<5}bdU1t3A t\"')");
      assertEquals("PTTT", string1);
      assertNotNull(string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(string1.equals((Object)string0));
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(3080);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone1.new DoubleMetaphoneResult(3080);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("I6FdOGC", "I6FdOGC", true);
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string0 = doubleMetaphone1.encode("I6FdOGC");
      assertEquals("AFTK", string0);
      assertNotNull(string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("F$SZSI5Y%DvJr/9}", "I6FdOGC", true);
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean1 == boolean0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      
      doubleMetaphone2.setMaxCodeLen((-46734970));
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertEquals((-46734970), doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      
      int int0 = doubleMetaphone2.getMaxCodeLen();
      assertEquals((-46734970), int0);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertEquals((-46734970), doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      
      // Undeclared exception!
      try { 
        doubleMetaphone2.doubleMetaphone("rkGSX;zsxbZ>6{hQ/5", true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "{4 -GyRB";
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("{4 -GyRB");
      assertEquals("KRP", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(6);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("M\"/-H]*@r?f^Bx8o[Iu", "K=<Pr40>_w1_C;+qN", true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("9Bxif@!7~e", "*gQ!oL JLL~e", true);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string1 = doubleMetaphone0.doubleMetaphone("M\"/-H]*@r?f^Bx8o[Iu");
      assertEquals("MRFP", string1);
      assertNotNull(string1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      
      String string2 = doubleMetaphone1.doubleMetaphone("9Bxif@!7~e");
      assertEquals("PKSF", string2);
      assertNotNull(string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(69);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult2 = doubleMetaphone1.new DoubleMetaphoneResult((-185));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(1);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "R2Q*3>";
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("R2Q*3>", "R2Q*3>", true);
      assertTrue(boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      
      boolean boolean1 = doubleMetaphone2.isDoubleMetaphoneEqual("SZ{]yF\"b=5'", "a_DJ[rX4un5Y\">qV9", false);
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(boolean1 == boolean0);
      
      String string1 = ",/M^h3*";
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("R2Q*3>", "M", true);
      assertFalse(boolean2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-635));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult((-1001));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult1.append("org.apache.commons.codec.EncoderException", (String) null);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "PSPSL";
      stringArray0[1] = "PSPSL";
      stringArray0[2] = "PSPSL";
      stringArray0[3] = "!";
      stringArray0[4] = "Wv]ra_";
      boolean boolean0 = DoubleMetaphone.contains("PSPSL", 86, 86, stringArray0);
      assertFalse(boolean0);
      assertEquals(5, stringArray0.length);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("TJlV^Rav[\"N\"DQ@*", true);
      assertEquals("TLFR", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = DoubleMetaphone.contains("DoubleMetaphone encode parameter is not of type String", 86, 86, stringArray0);
      assertFalse(boolean1);
      assertEquals(5, stringArray0.length);
      assertTrue(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("VAN ");
      assertEquals("FN", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("FN", "R2Q3>", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("SH", ",/M^h3*", false);
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(1);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      doubleMetaphone_DoubleMetaphoneResult0.append("GNGNSCH", "GNGNSCH");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("G", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("G", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('_');
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("G", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("G", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      doubleMetaphone0.setMaxCodeLen((-2405));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals((-2405), doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      doubleMetaphone_DoubleMetaphoneResult0.append("VAN ", "~s,XXWu:YFh2$");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("G", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("G", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string1 = doubleMetaphone1.doubleMetaphone("aGEJv]Fs+vN9oq{x", false);
      assertEquals("AJJF", string1);
      assertNotNull(string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("GN");
      assertEquals("N", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "UIaUe8 pi");
      assertEquals("AP", object0);
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(object0.equals((Object)string0));
      
      char char0 = doubleMetaphone0.charAt("bDtLF=ri=tBbs8", 69);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("UIaUe8 pi");
      assertEquals("AP", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertTrue(string1.equals((Object)object0));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(69);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('>', '.');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(">", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals(".", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('.');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(">.", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals(".", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string2 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertEquals(">.", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(">.", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals(".", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)object0));
      assertFalse(string2.equals((Object)string1));
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual(";+C~I8SK", "N");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.encode("W");
      assertEquals("", string3);
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)object0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      
      String string4 = doubleMetaphone0.encode("jWT^{");
      assertEquals("JT", string4);
      assertNotNull(string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)object0));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      
      doubleMetaphone0.setMaxCodeLen(69);
      assertEquals(69, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult((-3843));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(69, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult1.append("8W^`X[;TXML~U~");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("wB4h%IZ_ K8");
      assertEquals("PSK", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string1 = doubleMetaphone1.doubleMetaphone("#ld^uj", true);
      assertEquals("LT ", string1);
      assertNotNull(string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      
      char char0 = doubleMetaphone0.charAt("JQHJT)", 84);
      assertEquals('\u0000', char0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      String string2 = doubleMetaphone1.doubleMetaphone("wB4h%IZ_ K8", true);
      assertEquals("PTSK", string2);
      assertNotNull(string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      
      String string3 = doubleMetaphone2.doubleMetaphone("HOEK");
      assertEquals("HK", string3);
      assertNotNull(string3);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      
      boolean boolean0 = doubleMetaphone2.isDoubleMetaphoneEqual("JQHJT)", "Dwy<", true);
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      
      String string4 = doubleMetaphone0.doubleMetaphone("?iT#jXH>FXW*", true);
      assertEquals("TJKS", string4);
      assertNotNull(string4);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "PSPSL";
      stringArray0[1] = "PSPSL";
      stringArray0[2] = "PSPSL";
      stringArray0[3] = "!";
      stringArray0[4] = "Wv]ra_";
      boolean boolean0 = DoubleMetaphone.contains("PSPSL", 86, 86, stringArray0);
      assertFalse(boolean0);
      assertEquals(5, stringArray0.length);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("J`I1I+;D)s7hA^");
      assertEquals("JTS", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("J`I1I+;D)s7hA^", "DPcPVsRM};a?Mk", false);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("VzeQPD~VSC_fm)W\"", "DPcPVsRM};a?Mk");
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("Wv]ra_", (String) null, false);
      assertFalse(boolean3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      
      doubleMetaphone0.setMaxCodeLen(86);
      assertEquals(86, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone((String) null, false);
      assertNull(string1);
      assertEquals(86, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.encode("\"xm36C");
      assertEquals("KSMK", string2);
      assertNotNull(string2);
      assertEquals(86, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string0));
      
      boolean boolean4 = doubleMetaphone0.isDoubleMetaphoneEqual("UMB", "KSMK");
      assertFalse(boolean4);
      assertEquals(86, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean4 == boolean0);
      assertTrue(boolean4 == boolean1);
      assertTrue(boolean4 == boolean3);
      assertTrue(boolean4 == boolean2);
      
      char char0 = doubleMetaphone0.charAt("nIXocL*/", 86);
      assertEquals('\u0000', char0);
      assertEquals(86, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(86, int0);
      assertEquals(86, doubleMetaphone0.getMaxCodeLen());
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(86, int1);
      assertEquals(86, doubleMetaphone0.getMaxCodeLen());
      assertTrue(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "I6FdOGC";
      String string1 = "$X:Us9^-";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("I6FdOGC", "I6FdOGC", true);
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = 2966;
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2966);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("$X:Us9^-", "I,qth |,~h'K?*Md*");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("I,qth |,~h'K?*Md*", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("$X:Us9^-", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      int int1 = (-1);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult((-1));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      doubleMetaphone_DoubleMetaphoneResult1.appendAlternate('M');
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      doubleMetaphone0.setMaxCodeLen((-2511));
      assertEquals((-2511), doubleMetaphone0.getMaxCodeLen());
      
      String string2 = "X";
      doubleMetaphone_DoubleMetaphoneResult0.append("X", "Za.=$598mJ?(aZ~5");
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals((-2511), doubleMetaphone0.getMaxCodeLen());
      assertEquals("I,qth |,~h'K?*Md*Za.=$598mJ?(aZ~5", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("$X:Us9^-X", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      
      String string3 = "PN9?<I!,\\POQP5NNQ";
      // Undeclared exception!
      try { 
        doubleMetaphone0.encode("PN9?<I!,POQP5NNQ");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1951));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("WICZ", 2420);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char1 = doubleMetaphone0.charAt("MM/6v/C", 2420);
      assertEquals('\u0000', char1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(char1 == char0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("R2Q3>", "WICZ", false);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1 == boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(4);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult2 = doubleMetaphone0.new DoubleMetaphoneResult(2147483645);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      
      String string0 = doubleMetaphone_DoubleMetaphoneResult1.getPrimary();
      assertEquals("", string0);
      assertNotNull(string0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      
      doubleMetaphone_DoubleMetaphoneResult1.append('\\', 'j');
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("j", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("\\", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult3 = doubleMetaphone0.new DoubleMetaphoneResult(2420);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult3.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult3.getPrimary());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append("D");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "PSIER";
      stringArray0[1] = " [oZQ+j&*k";
      stringArray0[2] = " [oZQ+j&*k";
      stringArray0[3] = " [oZQ+j&*k";
      stringArray0[4] = "Y";
      stringArray0[5] = "Y";
      stringArray0[6] = " [oZQ+j&*k";
      boolean boolean0 = DoubleMetaphone.contains(" [oZQ+j&*k", 285, 285, stringArray0);
      assertFalse(boolean0);
      assertEquals(7, stringArray0.length);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "Y");
      assertEquals("A", object0);
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("PSIER", false);
      assertEquals("S", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string0.equals((Object)object0));
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.charAt((String) null, 69);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(1650);
      assertEquals(1650, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "y-r");
      assertEquals("AR", object0);
      assertNotNull(object0);
      assertEquals(1650, doubleMetaphone0.getMaxCodeLen());
      
      Object object1 = doubleMetaphone0.encode((Object) "AR");
      assertEquals("AR", object1);
      assertNotNull(object1);
      assertEquals(1650, doubleMetaphone0.getMaxCodeLen());
      assertTrue(object1.equals((Object)object0));
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("KL", "E*q", true);
      assertFalse(boolean0);
      assertEquals(1650, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("y-r", false);
      assertEquals("AR", string0);
      assertNotNull(string0);
      assertEquals(1650, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string0.equals((Object)object0));
      assertTrue(string0.equals((Object)object1));
      
      String string1 = doubleMetaphone0.encode("y-r");
      assertEquals("AR", string1);
      assertNotNull(string1);
      assertEquals(1650, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string1.equals((Object)string0));
      assertTrue(string1.equals((Object)object1));
      assertTrue(string1.equals((Object)object0));
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(1650, int0);
      assertEquals(1650, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(10);
      assertEquals(10, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("TH", 1650);
      assertEquals('\u0000', char0);
      assertEquals(10, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[0];
      boolean boolean1 = DoubleMetaphone.contains("y-r", 85, 10, stringArray0);
      assertFalse(boolean1);
      assertEquals(0, stringArray0.length);
      assertTrue(boolean1 == boolean0);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("E*q", "TH", true);
      assertFalse(boolean2);
      assertEquals(10, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      
      char char1 = doubleMetaphone0.charAt("=m@oWyp", 1);
      assertEquals('m', char1);
      assertEquals(10, doubleMetaphone0.getMaxCodeLen());
      assertFalse(char1 == char0);
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(10, int1);
      assertEquals(10, doubleMetaphone0.getMaxCodeLen());
      assertFalse(int1 == int0);
      
      String string2 = doubleMetaphone0.doubleMetaphone("KL", true);
      assertEquals("KL", string2);
      assertNotNull(string2);
      assertEquals(10, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)object1));
      assertFalse(string2.equals((Object)object0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      
      String string3 = doubleMetaphone0.doubleMetaphone("g[;A\"[!Fap27%Sy55");
      assertEquals("KFPS", string3);
      assertNotNull(string3);
      assertEquals(10, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)object1));
      assertFalse(string3.equals((Object)object0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      
      int int2 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(10, int2);
      assertEquals(10, doubleMetaphone0.getMaxCodeLen());
      assertTrue(int2 == int1);
      assertFalse(int2 == int0);
      
      int int3 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(10, int3);
      assertEquals(10, doubleMetaphone0.getMaxCodeLen());
      assertTrue(int3 == int1);
      assertTrue(int3 == int2);
      assertFalse(int3 == int0);
      
      String string4 = doubleMetaphone0.doubleMetaphone("IER", false);
      assertEquals("A", string4);
      assertNotNull(string4);
      assertEquals(10, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)object1));
      assertFalse(string4.equals((Object)object0));
      assertFalse(string4.equals((Object)string0));
      
      String[] stringArray1 = new String[0];
      assertFalse(stringArray1.equals((Object)stringArray0));
      
      boolean boolean3 = DoubleMetaphone.contains("kmM!i}&e4_D]~`aFbm", 10, 705, stringArray1);
      assertFalse(boolean3);
      assertNotSame(stringArray1, stringArray0);
      assertEquals(0, stringArray1.length);
      assertFalse(stringArray1.equals((Object)stringArray0));
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      
      int int4 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(10, int4);
      assertEquals(10, doubleMetaphone0.getMaxCodeLen());
      assertFalse(int4 == int0);
      assertTrue(int4 == int3);
      assertTrue(int4 == int1);
      assertTrue(int4 == int2);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1460);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("$X:Us9^-");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("$X:Us9^-", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("$X:Us9^-", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("I6FdOGC", "I6FdOGC", true);
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(6);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      doubleMetaphone_DoubleMetaphoneResult1.appendAlternate('>');
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(">", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("xxNf/MST5=sL(xXONc", 4);
      assertEquals('/', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char1 = doubleMetaphone0.charAt("J$", 508);
      assertEquals('\u0000', char1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(char1 == char0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("J$", ":lpjW9ib", true);
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean1 == boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult2 = doubleMetaphone1.new DoubleMetaphoneResult(4);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult3 = doubleMetaphone1.new DoubleMetaphoneResult(6);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult3);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult3.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult3.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult4 = doubleMetaphone0.new DoubleMetaphoneResult(8);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult4.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult4.getPrimary());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult4.equals((Object)doubleMetaphone_DoubleMetaphoneResult3));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult4.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult4.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult4.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      String string0 = doubleMetaphone_DoubleMetaphoneResult4.getPrimary();
      assertEquals("", string0);
      assertNotNull(string0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult4, doubleMetaphone_DoubleMetaphoneResult3);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult4, doubleMetaphone_DoubleMetaphoneResult1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult4, doubleMetaphone_DoubleMetaphoneResult2);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult4, doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult4.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult4.getPrimary());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult4.equals((Object)doubleMetaphone_DoubleMetaphoneResult3));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult4.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult4.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult4.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult5 = doubleMetaphone0.new DoubleMetaphoneResult(1460);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult5);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult5.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult5.getPrimary());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult5.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult5.equals((Object)doubleMetaphone_DoubleMetaphoneResult4));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult5.equals((Object)doubleMetaphone_DoubleMetaphoneResult3));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult5.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult5.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      doubleMetaphone_DoubleMetaphoneResult0.append("I1`");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult2);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult5);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult4);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("$X:Us9^-I1`", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("$X:Us9^-I1`", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult5));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult4));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult3));
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = ":lpjW9ib";
      stringArray0[1] = ":lpjW9ib";
      stringArray0[2] = "I1`";
      boolean boolean2 = DoubleMetaphone.contains("$X:Us9^-", (-494), 2300, stringArray0);
      assertFalse(boolean2);
      assertEquals(3, stringArray0.length);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      
      boolean boolean3 = DoubleMetaphone.contains("I1`", 1, 1, stringArray0);
      assertFalse(boolean3);
      assertEquals(3, stringArray0.length);
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("wB4h%IZ_ K8", "g>r8Mj{5-l3N*CS");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("ORCHES");
      assertEquals("ARKS", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("KNGX&");
      assertEquals("NKKS", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      
      String string2 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(73);
      assertEquals(73, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.encode("PscvXz:~");
      assertEquals("SKKSS", string3);
      assertNotNull(string3);
      assertEquals(73, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(73, int0);
      assertEquals(73, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("*;%L:&h9gBFiXPjlJ", "", false);
      assertFalse(boolean1);
      assertEquals(73, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      
      String string4 = doubleMetaphone0.doubleMetaphone("NKKS", false);
      assertEquals("NKS", string4);
      assertNotNull(string4);
      assertEquals(73, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      
      char char0 = doubleMetaphone0.charAt("ORCHES", 83);
      assertEquals('\u0000', char0);
      assertEquals(73, doubleMetaphone0.getMaxCodeLen());
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(73, int1);
      assertEquals(73, doubleMetaphone0.getMaxCodeLen());
      assertTrue(int1 == int0);
      
      int int2 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(73, int2);
      assertEquals(73, doubleMetaphone0.getMaxCodeLen());
      assertTrue(int2 == int0);
      assertTrue(int2 == int1);
      
      String string5 = doubleMetaphone0.doubleMetaphone("ORCHES", false);
      assertEquals("ARKS", string5);
      assertNotNull(string5);
      assertEquals(73, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string4));
      assertTrue(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string1));
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "SCH");
      assertEquals("X", object0);
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("OGGI", "ACH", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("gX&");
      assertEquals("KKS", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string0.equals((Object)object0));
      
      String string1 = doubleMetaphone0.doubleMetaphone((String) null, true);
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("", false);
      assertNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("", true);
      assertNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "<l~r>8", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("GN");
      assertEquals("N", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "UIaUe8 pi");
      assertEquals("AP", object0);
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(object0.equals((Object)string0));
      
      char char0 = doubleMetaphone0.charAt("bDtLF=ri=tBbs8", 69);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("UIaUe8 pi");
      assertEquals("AP", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertTrue(string1.equals((Object)object0));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(69);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("AP", "GNGNSCH", true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("jWT^{", "AP");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("jWT^{", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("AP", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('\u0000');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AP\u0000", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("jWT^{", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone0.setMaxCodeLen(69);
      assertEquals(69, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("?8%ZwKLa6_By<.I", "GN");
      assertEquals(69, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AP\u0000GN", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("jWT^{?8%ZwKLa6_By<.I", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string2 = doubleMetaphone0.doubleMetaphone("?8%ZwKLa6_By<.I", true);
      assertEquals("TSKLP", string2);
      assertNotNull(string2);
      assertEquals(69, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)object0));
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(1051);
      assertEquals(1051, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "SCH");
      assertEquals("X", object0);
      assertNotNull(object0);
      assertEquals(1051, doubleMetaphone0.getMaxCodeLen());
      
      Object object1 = doubleMetaphone0.encode((Object) "X");
      assertEquals("S", object1);
      assertNotNull(object1);
      assertEquals(1051, doubleMetaphone0.getMaxCodeLen());
      assertFalse(object1.equals((Object)object0));
      
      String string0 = doubleMetaphone0.doubleMetaphone("CHIA");
      assertEquals("K", string0);
      assertNotNull(string0);
      assertEquals(1051, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string0.equals((Object)object0));
      assertFalse(string0.equals((Object)object1));
      
      String string1 = doubleMetaphone0.doubleMetaphone("K", true);
      assertEquals("K", string1);
      assertNotNull(string1);
      assertEquals(1051, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)object0));
      assertTrue(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)object1));
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("K", (String) null, true);
      assertFalse(boolean0);
      assertEquals(1051, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("2af7Uwv06q%1%\"", true);
      assertEquals("FFK", string2);
      assertNotNull(string2);
      assertEquals(1051, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)object1));
      assertFalse(string2.equals((Object)object0));
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("}yJ6MXaw75L", "dk@]X6zYc6lKgMNO@)");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(90);
      assertEquals(90, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("}yJ6MXaw75L");
      assertEquals("JMKSL", string0);
      assertNotNull(string0);
      assertEquals(90, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("dk@]X6zYc6lKgMNO@)", true);
      assertEquals("TKKSTSKLKKMN", string1);
      assertNotNull(string1);
      assertEquals(90, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      
      char char0 = doubleMetaphone0.charAt("TKKSTSKLKKMN", 987);
      assertEquals('\u0000', char0);
      assertEquals(90, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(90, int0);
      assertEquals(90, doubleMetaphone0.getMaxCodeLen());
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(90, int1);
      assertEquals(90, doubleMetaphone0.getMaxCodeLen());
      assertTrue(int1 == int0);
      
      String string2 = doubleMetaphone0.doubleMetaphone("EN", true);
      assertEquals("AN", string2);
      assertNotNull(string2);
      assertEquals(90, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      
      int int2 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(90, int2);
      assertEquals(90, doubleMetaphone0.getMaxCodeLen());
      assertTrue(int2 == int1);
      assertTrue(int2 == int0);
      
      char char1 = doubleMetaphone0.charAt("EN", 90);
      assertEquals('\u0000', char1);
      assertEquals(90, doubleMetaphone0.getMaxCodeLen());
      assertTrue(char1 == char0);
      
      String string3 = doubleMetaphone0.doubleMetaphone((String) null, true);
      assertNull(string3);
      assertEquals(90, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "WICZ";
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = "AN";
      stringArray0[4] = "EN";
      stringArray0[5] = "AN";
      String string4 = doubleMetaphone0.doubleMetaphone(">&Syo)X$pBcMX9t", false);
      assertEquals("SKSPKMKST", string4);
      assertNotNull(string4);
      assertEquals(90, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("C6", 32);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("C6", "CIA", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "5-Bow|N[v@";
      String string1 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("5-Bow|N[v@", true);
      assertEquals("PNF", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string0));
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(int1 == int0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("MC", "CIA", true);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      
      int int2 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(int2 == int0);
      assertTrue(int2 == int1);
      
      int int3 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(int3 == int0);
      assertTrue(int3 == int1);
      assertTrue(int3 == int2);
      
      String string3 = "rXXnJ3y7ZxxD1";
      Object object0 = new Object();
      assertNotNull(object0);
      
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("}yJ6MXaw75L", "dk@]X6zYc6lKgMNO@)");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(90);
      assertEquals(90, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("}yJ6MXaw75L", false);
      assertEquals("JMKSL", string0);
      assertNotNull(string0);
      assertEquals(90, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("dk@]X6zYc6lKgMNO@)", true);
      assertEquals("TKKSTSKLKKMN", string1);
      assertNotNull(string1);
      assertEquals(90, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      
      char char0 = doubleMetaphone0.charAt("TKKSTSKLKKMN", 987);
      assertEquals('\u0000', char0);
      assertEquals(90, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(90, int0);
      assertEquals(90, doubleMetaphone0.getMaxCodeLen());
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(90, int1);
      assertEquals(90, doubleMetaphone0.getMaxCodeLen());
      assertTrue(int1 == int0);
      
      String string2 = doubleMetaphone0.doubleMetaphone("EN", true);
      assertEquals("AN", string2);
      assertNotNull(string2);
      assertEquals(90, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      
      int int2 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(90, int2);
      assertEquals(90, doubleMetaphone0.getMaxCodeLen());
      assertTrue(int2 == int1);
      assertTrue(int2 == int0);
      
      char char1 = doubleMetaphone0.charAt("EN", 90);
      assertEquals('\u0000', char1);
      assertEquals(90, doubleMetaphone0.getMaxCodeLen());
      assertTrue(char1 == char0);
      
      String string3 = doubleMetaphone0.doubleMetaphone((String) null, true);
      assertNull(string3);
      assertEquals(90, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "WICZ";
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = "AN";
      stringArray0[4] = "EN";
      stringArray0[5] = "AN";
      boolean boolean1 = DoubleMetaphone.contains("WR", (-215), (-1), stringArray0);
      assertFalse(boolean1);
      assertEquals(6, stringArray0.length);
      assertTrue(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1446);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("$X:Us9^-");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("$X:Us9^-", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("$X:Us9^-", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("H8<T&-fLt");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("$X:Us9^-", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("$X:Us9^-H8<T&-fLt", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("$X:Us9^-", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("$X:Us9^-H8<T&-fLt", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("I6FdOGC", 4);
      assertEquals('O', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char1 = doubleMetaphone0.charAt("", 4);
      assertEquals('\u0000', char1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(char1 == char0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("?\">w`[]QZ:5FL>[", "?\">w`[]QZ:5FL>[", false);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1 == boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(589);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      char char2 = doubleMetaphone0.charAt("*}@&WE)^A7", 589);
      assertEquals('\u0000', char2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(char2 == char0);
      assertTrue(char2 == char1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      int int1 = doubleMetaphone1.getMaxCodeLen();
      assertEquals(4, int1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(int1 == int0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("+`Tzfcab*# 8kOEy", false);
      assertEquals("TSFK", string0);
      assertNotNull(string0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("dBUCkoXbnaHDLOc", "5rnz<]!2Sw=J0");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("dBUCkoXbnaHDLOc", "5rnz<]!2Sw=J0");
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      
      String string0 = doubleMetaphone0.encode("MANGER");
      assertEquals("MNJR", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("MNJR", "dBUCkoXbnaHDLOc", true);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('@');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("dBUCkoXbnaHDLOc", 0);
      assertEquals('d', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char1 = doubleMetaphone0.charAt("BJ8gh,[l@ccRvh7", 4);
      assertEquals('h', char1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(char1 == char0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      boolean boolean3 = doubleMetaphone1.isDoubleMetaphoneEqual("!_yS", "BJ8gh,[l@ccRvh7", false);
      assertFalse(boolean3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      
      String string1 = doubleMetaphone0.doubleMetaphone("dBUCkoXbnaHDLOc", true);
      assertEquals("TPKK", string1);
      assertNotNull(string1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      
      char char2 = doubleMetaphone0.charAt("TTH", 76);
      assertEquals('\u0000', char2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(char2 == char1);
      assertFalse(char2 == char0);
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(int1 == int0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      
      int int2 = doubleMetaphone2.getMaxCodeLen();
      assertEquals(4, int2);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertTrue(int2 == int0);
      assertTrue(int2 == int1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      
      String string2 = doubleMetaphone0.doubleMetaphone("TPKK", false);
      assertEquals("TPK", string2);
      assertNotNull(string2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("wB4h%IZ_ K8");
      assertEquals("PSK", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("&(\":!5lVYwnN", "wB4h%IZ_ K8", true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("zpKp8>wMVo", true);
      assertEquals("SPKP", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      
      String string2 = doubleMetaphone0.doubleMetaphone("SC", true);
      assertEquals("SK", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      
      char char0 = doubleMetaphone0.charAt("Qnet_?i", 4);
      assertEquals('_', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("Qnet_?i", true);
      assertEquals("KNT", string3);
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      
      char char1 = doubleMetaphone0.charAt("SK", (-796));
      assertEquals('\u0000', char1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(char1 == char0);
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(int1 == int0);
      
      int int2 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(int2 == int1);
      assertTrue(int2 == int0);
      
      String string4 = doubleMetaphone0.doubleMetaphone("6", true);
      assertEquals("", string4);
      assertNotNull(string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("VAN ");
      assertEquals("FN", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("FN", "R2Q3>", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("SH", "R2Q3>", true);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      char char0 = doubleMetaphone0.charAt("PSL", 65);
      assertEquals('\u0000', char0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      Object object0 = doubleMetaphone0.encode((Object) "CC");
      assertEquals("K", object0);
      assertNotNull(object0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(object0.equals((Object)string0));
      
      String string1 = doubleMetaphone0.doubleMetaphone("Z", false);
      assertEquals("S", string1);
      assertNotNull(string1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)object0));
      assertFalse(string1.equals((Object)string0));
      
      char char1 = doubleMetaphone1.charAt("Z", 69);
      assertEquals('\u0000', char1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(char1 == char0);
      
      String string2 = doubleMetaphone0.doubleMetaphone("GN", false);
      assertEquals("N", string2);
      assertNotNull(string2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)object0));
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.charAt((String) null, 76);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("dBUCkoXbnaHDLOc", "5rnz<]!2Sw=J<0");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("dBUCkoXbnaHDLOc", "5rnz<]!2Sw=J<0");
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      
      String string0 = doubleMetaphone0.encode("MANGER");
      assertEquals("MNJR", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("MNJR", "dBUCkoXbnaHDLOc", true);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('@');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('j');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("9?<i!,POqP5NnQ", "dBUCkoXbnaHDLOc", true);
      assertFalse(boolean3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string1 = doubleMetaphone0.doubleMetaphone("MANGER");
      assertEquals("MNJR", string1);
      assertNotNull(string1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(string1.equals((Object)string0));
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      
      String string2 = doubleMetaphone2.doubleMetaphone("5rnz<]!2Sw=J<0");
      assertEquals("RNSS", string2);
      assertNotNull(string2);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      
      char char0 = doubleMetaphone1.charAt("E#,", (-2622));
      assertEquals('\u0000', char0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      
      int int0 = doubleMetaphone3.getMaxCodeLen();
      assertEquals(4, int0);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      
      boolean boolean4 = doubleMetaphone3.isDoubleMetaphoneEqual("dBUCkoXbnaHDLOc", "ISL");
      assertFalse(boolean4);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertTrue(boolean4 == boolean2);
      assertTrue(boolean4 == boolean1);
      assertTrue(boolean4 == boolean0);
      assertTrue(boolean4 == boolean3);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      
      String string3 = doubleMetaphone3.doubleMetaphone("})'`NQ9Sj[*@!Ex", true);
      assertEquals("NKSK", string3);
      assertNotNull(string3);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1460);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("$X:Us9^-");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("$X:Us9^-", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("$X:Us9^-", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("I6FdOGC", "I6FdOGC", true);
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("H8&-fLt");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("$X:Us9^-H8&-fLt", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("$X:Us9^-", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("$X:Us9^-H8&-fLt", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("$X:Us9^-", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(boolean1 == boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string0 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertEquals("$X:Us9^-", string0);
      assertNotNull(string0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("$X:Us9^-H8&-fLt", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("$X:Us9^-", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertEquals(4, int0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual(".z|jJ%P~Yxkj", "$X:Us9^-", true);
      assertFalse(boolean2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      
      char char0 = doubleMetaphone0.charAt("$X:Us9^-", 1460);
      assertEquals('\u0000', char0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      
      String string1 = doubleMetaphone2.doubleMetaphone("?\"", true);
      assertEquals("", string1);
      assertNotNull(string1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      
      // Undeclared exception!
      try { 
        doubleMetaphone1.charAt((String) null, 4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "{4 -GyRB";
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("{4 -GyRB");
      assertEquals("KRP", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(6);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("{4 -GyRB", 2420);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char1 = doubleMetaphone0.charAt("1mFcM{niKfE=4)!", 4);
      assertEquals('M', char1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(char1 == char0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("nJ`Dtl!hh0'&Hq; ", "ILLO", true);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(34);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult2 = doubleMetaphone1.new DoubleMetaphoneResult((-2054));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      
      String string1 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertEquals("", string1);
      assertNotNull(string1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult2);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(string1.equals((Object)string0));
      
      doubleMetaphone_DoubleMetaphoneResult2.append('\u0000', '\'');
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult3 = doubleMetaphone2.new DoubleMetaphoneResult(66);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult3);
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult3.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult3.getAlternate());
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult2.append(";x1");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("wB4h%IZ_ K8");
      assertEquals("PSK", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("&(\":!5lVYwnN", "wB4h%IZ_ K8", true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("zpKp8>wMVo", true);
      assertEquals("SPKP", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "SPKP";
      stringArray0[1] = "PSK";
      stringArray0[2] = "&(\":!5lVYwnN";
      stringArray0[3] = "wB4h%IZ_ K8";
      stringArray0[4] = "zpKp8>wMVo";
      stringArray0[5] = "SPKP";
      stringArray0[6] = "KN";
      stringArray0[7] = "qDvba}\"uUoaIV&]m";
      boolean boolean1 = DoubleMetaphone.contains("&(\":!5lVYwnN", (-2436), 4, stringArray0);
      assertFalse(boolean1);
      assertEquals(8, stringArray0.length);
      assertTrue(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1460);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("$X:Us9^-");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("$X:Us9^-", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("$X:Us9^-", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("I6FdOGC", "I6FdOGC", true);
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("H8<T&-fLt");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("$X:Us9^-", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("$X:Us9^-H8<T&-fLt", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("$X:Us9^-", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("$X:Us9^-H8<T&-fLt", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(boolean1 == boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('M');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("$X:Us9^-M", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("$X:Us9^-H8<T&-fLt", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("I,qth |,~h'K?*Md*", "I6FdOGC", false);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string0 = doubleMetaphone0.doubleMetaphone("I6FdOGC");
      assertEquals("AFTK", string0);
      assertNotNull(string0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      
      char char0 = doubleMetaphone0.charAt("AFTK", 1);
      assertEquals('F', char0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertEquals(4, int0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string1 = doubleMetaphone3.doubleMetaphone("U", false);
      assertEquals("A", string1);
      assertNotNull(string1);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("dBUCkoXbnaHDLOc", "5rnz<]!2Sw=J0");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("dBUCkoXbnaHDLOc", "5rnz<]!2Sw=J0");
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      
      String string0 = doubleMetaphone0.encode("MANGER");
      assertEquals("MNJR", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("MNJR", "dBUCkoXbnaHDLOc", true);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('@');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("dBUCkoXbnaHDLOc", 0);
      assertEquals('d', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char1 = doubleMetaphone0.charAt("BJ8gh,[l@ccRvh7", 4);
      assertEquals('h', char1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(char1 == char0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      boolean boolean3 = doubleMetaphone1.isDoubleMetaphoneEqual("!_yS", "BJ8gh,[l@ccRvh7", false);
      assertFalse(boolean3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone1.new DoubleMetaphoneResult((-2086));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult2 = doubleMetaphone1.new DoubleMetaphoneResult(0);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      
      String string1 = doubleMetaphone_DoubleMetaphoneResult2.getPrimary();
      assertEquals("", string1);
      assertNotNull(string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(string1.equals((Object)string0));
      
      doubleMetaphone_DoubleMetaphoneResult2.appendPrimary('l');
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult3 = doubleMetaphone0.new DoubleMetaphoneResult(93);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult3);
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult3.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult3.getAlternate());
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      doubleMetaphone_DoubleMetaphoneResult2.append("PSK");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult3);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult3));
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(1051);
      assertEquals(1051, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("ARCHIT", false);
      assertEquals("ARKT", string0);
      assertNotNull(string0);
      assertEquals(1051, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "ARKT";
      boolean boolean0 = DoubleMetaphone.contains("ARCHIT", (-2436), 1051, stringArray0);
      assertFalse(boolean0);
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("wB4h%IZ_ K8");
      assertEquals("PSK", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("&(\":!5lVYwnN", "wB4h%IZ_ K8", true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("&(\":!5lVYwnN", false);
      assertEquals("LFN", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(int1 == int0);
      
      char char0 = doubleMetaphone0.charAt("&]", 4);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "O";
      stringArray0[1] = "&(\":!5lVYwnN";
      stringArray0[2] = "LFN";
      stringArray0[3] = "&]";
      stringArray0[4] = "KN";
      boolean boolean1 = DoubleMetaphone.contains("", 77, 77, stringArray0);
      assertFalse(boolean1);
      assertEquals(5, stringArray0.length);
      assertTrue(boolean1 == boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      int int2 = doubleMetaphone1.getMaxCodeLen();
      assertEquals(4, int2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(int2 == int0);
      assertTrue(int2 == int1);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "{4 -GyRB";
      boolean boolean0 = DoubleMetaphone.contains("{4 -GyRB", 725, 725, stringArray0);
      assertFalse(boolean0);
      assertEquals(1, stringArray0.length);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("{4 -GyRB", "{4 -GyRB", true);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1 == boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(725);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('p');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("p", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('1');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("p", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("1", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('@');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("p@", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("1", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("Yb4S1aO|Q@@FI[Z#7", "^_&pr+K", true);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      
      doubleMetaphone0.setMaxCodeLen(725);
      assertEquals(725, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string1 = doubleMetaphone1.encode("{4 -GyRB");
      assertEquals("KRP", string1);
      assertNotNull(string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertEquals(4, int0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string2 = doubleMetaphone1.encode("{4 -GyRB");
      assertEquals("KRP", string2);
      assertNotNull(string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(string2.equals((Object)string1));
      
      String string3 = doubleMetaphone0.doubleMetaphone("NJ", true);
      assertEquals("N ", string3);
      assertNotNull(string3);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(725, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      boolean boolean3 = doubleMetaphone1.isDoubleMetaphoneEqual("{4 -GyRB", "AU", false);
      assertFalse(boolean3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      char char0 = doubleMetaphone1.charAt(":[V|PH", 4);
      assertEquals('P', char0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string4 = doubleMetaphone0.doubleMetaphone(":[V|PH", true);
      assertEquals("FF", string4);
      assertNotNull(string4);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(725, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(1);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("P&U,+;d;g]pah2nK", "P&U,+;d;g]pah2nK");
      assertTrue(boolean0);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("2r^8 v8WO0YLI");
      assertEquals("R", string0);
      assertNotNull(string0);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(1, int0);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      
      int int1 = 1447;
      int int2 = (-2210);
      Object object0 = doubleMetaphone0.encode((Object) "2r^8 v8WO0YLI");
      assertEquals("R", object0);
      assertNotNull(object0);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertTrue(object0.equals((Object)string0));
      
      boolean boolean1 = true;
      String string1 = doubleMetaphone0.doubleMetaphone("2r^8 v8WO0YLI", true);
      assertEquals("R", string1);
      assertNotNull(string1);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string1.equals((Object)string0));
      assertTrue(string1.equals((Object)object0));
      
      String string2 = "WIL&T8w(lIi";
      String string3 = doubleMetaphone0.encode("WIL&T8w(lIi");
      assertEquals("A", string3);
      assertNotNull(string3);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string3.equals((Object)object0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      
      Object object1 = doubleMetaphone0.encode((Object) "WIL&T8w(lIi");
      assertEquals("A", object1);
      assertNotNull(object1);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertFalse(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string2));
      assertFalse(object1.equals((Object)string0));
      assertFalse(object1.equals((Object)string1));
      assertTrue(object1.equals((Object)string3));
      
      String string4 = "HYM";
      String string5 = doubleMetaphone0.doubleMetaphone("|oVUn/", true);
      assertEquals("F", string5);
      assertNotNull(string5);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)object0));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)object1));
      assertFalse(string5.equals((Object)string1));
      
      String string6 = "!c";
      Object object2 = new Object();
      assertNotNull(object2);
      
      try { 
        doubleMetaphone0.encode(object2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("|Wb{Ah~s", "|Wb{Ah~s");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(int1 == int0);
      
      doubleMetaphone0.setMaxCodeLen(4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(4);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(boolean1 == boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("org.", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      char char0 = doubleMetaphone0.charAt("BdO%", 4);
      assertEquals('%', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("org.", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      
      // Undeclared exception!
      try { 
        DoubleMetaphone.contains("", 2, (-2808), (String[]) null);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone((String) null);
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode((String) null);
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone((String) null);
      assertNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(77);
      assertEquals(77, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.encode("c-TD\" U");
      assertEquals("KT", string3);
      assertNotNull(string3);
      assertEquals(77, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(77, int0);
      assertEquals(77, doubleMetaphone0.getMaxCodeLen());
      
      String string4 = doubleMetaphone0.doubleMetaphone((String) null);
      assertNull(string4);
      assertEquals(77, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual(")c2)uWMyZxh", "org.apache.commons.codec.EncoderException", true);
      assertFalse(boolean0);
      assertEquals(77, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("org.apache.commons.codec.EncoderException", 72);
      assertEquals('\u0000', char0);
      assertEquals(77, doubleMetaphone0.getMaxCodeLen());
      
      String string5 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", true);
      assertEquals("ARKPKKMNSKTKNKTRKSPXN", string5);
      assertNotNull(string5);
      assertEquals(77, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string5.equals((Object)string3));
      
      String string6 = doubleMetaphone0.doubleMetaphone("<V'XUY4JW4ww/@(\"B");
      assertEquals("FKSJP", string6);
      assertNotNull(string6);
      assertEquals(77, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)string3));
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string7 = doubleMetaphone1.encode("PN{4 -GYRB");
      assertEquals("NKRP", string7);
      assertNotNull(string7);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string7.equals((Object)string5));
      assertFalse(string7.equals((Object)string6));
      assertFalse(string7.equals((Object)string3));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(77);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      char char1 = doubleMetaphone0.charAt((String) null, (-2497));
      assertEquals('\u0000', char1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(77, doubleMetaphone0.getMaxCodeLen());
      assertTrue(char1 == char0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      String string8 = doubleMetaphone1.doubleMetaphone(">Ja]N5h", false);
      assertEquals("JN", string8);
      assertNotNull(string8);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(string8.equals((Object)string6));
      assertFalse(string8.equals((Object)string3));
      assertFalse(string8.equals((Object)string5));
      assertFalse(string8.equals((Object)string7));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("OWSKY");
      assertEquals("ASK", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("g>r8Mj{5-l3N*CS", "O", true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("KN", false);
      assertEquals("N", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(int1 == int0);
      
      char char0 = doubleMetaphone0.charAt("ASK", (-2252));
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "N";
      // Undeclared exception!
      try { 
        DoubleMetaphone.contains("F", 4, (-181), stringArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      String[] stringArray0 = new String[1];
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("{");
      assertEquals("", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("DTd~", "", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("G>", true);
      assertEquals("K", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(int1 == int0);
      
      char char0 = doubleMetaphone0.charAt("DTd~", 4);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = DoubleMetaphone.contains("IN", 1097, (-1088), stringArray0);
      assertFalse(boolean1);
      assertEquals(1, stringArray0.length);
      assertTrue(boolean1 == boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      int int2 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(int2 == int1);
      assertTrue(int2 == int0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("dBUCkoXbnaHDLOc", "5rnz<]!2Sw=J0");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("dBUCkoXbnaHDLOc", "5rnz<]!2Sw=J0");
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      
      String string0 = doubleMetaphone0.encode("MANGER");
      assertEquals("MNJR", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("MNJR", "dBUCkoXbnaHDLOc", true);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('@');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('j');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("9?<i!,POqP5NnQ", "dBUCkoXbnaHDLOc", true);
      assertFalse(boolean3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string1 = doubleMetaphone1.doubleMetaphone("", false);
      assertNull(string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      
      char char0 = doubleMetaphone1.charAt("E#,", (-2622));
      assertEquals('\u0000', char0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      
      int int0 = doubleMetaphone3.getMaxCodeLen();
      assertEquals(4, int0);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      
      String string2 = doubleMetaphone3.doubleMetaphone("})'`NQ9Sj[*@!Ex", true);
      assertEquals("NKSK", string2);
      assertNotNull(string2);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("wB4h%IZ_ K8", "g>r8Mj{5-l3N*CS");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-2086));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = ",@";
      stringArray0[1] = "";
      boolean boolean1 = DoubleMetaphone.contains("PNX", (-2086), (-3680), stringArray0);
      assertFalse(boolean1);
      assertEquals(2, stringArray0.length);
      assertTrue(boolean1 == boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('D', '&');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('A');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string0 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertEquals("", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("ax!^v", "");
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      
      String string1 = doubleMetaphone0.encode("");
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.encode("i1`lkch");
      assertEquals("ALKX", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string0));
      
      String[] stringArray1 = new String[1];
      assertFalse(stringArray1.equals((Object)stringArray0));
      
      stringArray1[0] = "ALKX";
      boolean boolean3 = DoubleMetaphone.contains("org.apache.commons.codec.EncoderException", (-2086), (-2086), stringArray1);
      assertFalse(boolean3);
      assertNotSame(stringArray1, stringArray0);
      assertEquals(1, stringArray1.length);
      assertFalse(stringArray1.equals((Object)stringArray0));
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      
      Object object0 = doubleMetaphone0.encode((Object) "org.apache.commons.codec.EncoderException");
      assertEquals("ARKP", object0);
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string2));
      
      String string3 = doubleMetaphone0.doubleMetaphone(",@", false);
      assertEquals("", string3);
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)object0));
      assertTrue(string3.equals((Object)string0));
      
      boolean boolean4 = doubleMetaphone0.isDoubleMetaphoneEqual("ax!^v", "ALKX");
      assertFalse(boolean4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean4 == boolean2);
      assertTrue(boolean4 == boolean1);
      assertTrue(boolean4 == boolean0);
      assertTrue(boolean4 == boolean3);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("OS");
      assertEquals("AS", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = "n+d,CX{,";
      String string2 = doubleMetaphone0.encode("AS");
      assertEquals("AS", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      
      String string3 = doubleMetaphone0.doubleMetaphone("(# (FFcI!zU(P[TP", true);
      assertEquals("FSSP", string3);
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      
      String string4 = "TCH";
      String string5 = doubleMetaphone0.encode("TCH");
      assertEquals("X", string5);
      assertNotNull(string5);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string1));
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string6 = "[WersWSJ5Ln-\"3";
      String string7 = doubleMetaphone1.doubleMetaphone("[WersWSJ5Ln-\"3", true);
      assertEquals("RSSL", string7);
      assertNotNull(string7);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string7.equals((Object)string0));
      assertFalse(string7.equals((Object)string1));
      assertFalse(string7.equals((Object)string3));
      assertFalse(string7.equals((Object)string4));
      assertFalse(string7.equals((Object)string2));
      assertFalse(string7.equals((Object)string5));
      assertFalse(string7.equals((Object)string6));
      
      Object object0 = doubleMetaphone0.encode((Object) "OS");
      assertEquals("AS", object0);
      assertNotNull(object0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(object0.equals((Object)string1));
      assertTrue(object0.equals((Object)string2));
      assertFalse(object0.equals((Object)string4));
      assertFalse(object0.equals((Object)string5));
      assertFalse(object0.equals((Object)string6));
      assertFalse(object0.equals((Object)string7));
      assertTrue(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string3));
      
      try { 
        doubleMetaphone0.encode((Object) doubleMetaphone1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("dBUCkoXbnaHDLOc");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("dB", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("dB", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("dBUCkoXbnaHDLOc", "#[XS^?P/_?#cW+LR", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("I6FdOGC");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("dB", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("dB", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("dB", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("dB", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(boolean1 == boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("dBUCkoXbnaHDLOc", true);
      assertEquals("TPKK", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("#[XS^?P/_?#cW+LR", 0);
      assertEquals('#', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        DoubleMetaphone.contains((String) null, 2, 7, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "{4 -GyRB";
      boolean boolean0 = DoubleMetaphone.contains("{4 -GyRB", 725, 725, stringArray0);
      assertFalse(boolean0);
      assertEquals(1, stringArray0.length);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("{4 -GyRB", "{4 -GyRB", true);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1 == boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("{4 -GyRB");
      assertEquals("KRP", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(725);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('p');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("p", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('@');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("p", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("@", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('k');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("pk", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("@", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("T", "", false);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      
      String string2 = doubleMetaphone0.doubleMetaphone((String) null, false);
      assertNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      char char0 = doubleMetaphone1.charAt("})'`NQ9Sj[*@!Ex", 6);
      assertEquals('9', char0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertEquals(4, int0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string3 = doubleMetaphone0.doubleMetaphone("KRP", false);
      assertEquals("KRP", string3);
      assertNotNull(string3);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string3.equals((Object)string0));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "{4 -GyRB";
      boolean boolean0 = DoubleMetaphone.contains("{4 -GyRB", 725, 725, stringArray0);
      assertFalse(boolean0);
      assertEquals(1, stringArray0.length);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("{4 -GyRB", "{4 -GyRB", true);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1 == boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("{4 -GyRB");
      assertEquals("KRP", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(725);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('p');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("p", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('R');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("p", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("R", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('@');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("p@", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("R", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("Yb4S1aO|Q@@FI[Z#7", "GNPVY", false);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      
      char char0 = doubleMetaphone0.charAt("KRP", (-44236554));
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone((String) null, false);
      assertNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char1 = doubleMetaphone0.charAt("^_&pr+K", 508);
      assertEquals('\u0000', char1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(char1 == char0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(int1 == int0);
      
      String string3 = doubleMetaphone0.doubleMetaphone("GNPVY", false);
      assertEquals("NPF", string3);
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string3.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "{4 -GyRB";
      boolean boolean0 = DoubleMetaphone.contains("{4 -GyRB", 725, 725, stringArray0);
      assertFalse(boolean0);
      assertEquals(1, stringArray0.length);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("{4 -GyRB", "{4 -GyRB", true);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1 == boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("{4 -GyRB");
      assertEquals("KRP", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(725);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('p');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("p", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('R');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("p", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("R", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('@');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("p@", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("R", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("Yb4S1aO|Q@@FI[Z#7", "^_&pr+K", true);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      
      char char0 = doubleMetaphone0.charAt("PSORG.APACHE.COMMONS.CODEC.ENCODEREXCEPTION", (-975));
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("CI", "PSORG.APACHE.COMMONS.CODEC.ENCODEREXCEPTION", false);
      assertFalse(boolean3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(264);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      String string2 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertEquals("p@", string2);
      assertNotNull(string2);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("p@", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("R", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(string2.equals((Object)string0));
      
      doubleMetaphone_DoubleMetaphoneResult1.append("(V95^,i%v}pD-6");
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("(V95^,i%v}pD-6", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("(V95^,i%v}pD-6", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "{4 -GyRB";
      boolean boolean0 = DoubleMetaphone.contains("{4 -GyRB", 725, 725, stringArray0);
      assertFalse(boolean0);
      assertEquals(1, stringArray0.length);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("{4 -GyRB", "{4 -GyRB", true);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1 == boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("{4 -GyRB");
      assertEquals("KRP", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(725);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('p');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("p", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('1');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("p", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("1", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('@');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("1", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("p@", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("Yb4S1aO|Q@@FI[Z#7", "^_&pr+K", true);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('h');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("p@h", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("1h", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone0.setMaxCodeLen(725);
      assertEquals(725, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string2 = doubleMetaphone1.encode("{4 -GyRB");
      assertEquals("KRP", string2);
      assertNotNull(string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(string2.equals((Object)string0));
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertEquals(4, int0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string3 = doubleMetaphone1.encode("{4 -GyRB");
      assertEquals("KRP", string3);
      assertNotNull(string3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertTrue(string3.equals((Object)string2));
      assertTrue(string3.equals((Object)string0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string4 = doubleMetaphone0.doubleMetaphone("NJ", true);
      assertEquals("N ", string4);
      assertNotNull(string4);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(725, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      char char0 = doubleMetaphone1.charAt(":[V|PH", 4);
      assertEquals('P', char0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      String[] stringArray0 = new String[0];
      boolean boolean0 = DoubleMetaphone.contains("[EIb9W", 85, (-1), stringArray0);
      assertFalse(boolean0);
      assertEquals(0, stringArray0.length);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("[EIb9W", (-147));
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(1132);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append(".\":9Q|6OpoaO3t]", ".\":9Q|6OpoaO3t]");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals(".\":9Q|6OpoaO3t]", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals(".\":9Q|6OpoaO3t]", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals(".\":9Q|6OpoaO3t]", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals(".\":9Q|6OpoaO3t]", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      
      char char1 = doubleMetaphone1.charAt("EAU", (-2557));
      assertEquals('\u0000', char1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(char1 == char0);
      
      boolean boolean3 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals(".\":9Q|6OpoaO3t]", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals(".\":9Q|6OpoaO3t]", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      boolean boolean4 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean4);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals(".\":9Q|6OpoaO3t]", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals(".\":9Q|6OpoaO3t]", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean4 == boolean3);
      assertTrue(boolean4 == boolean0);
      assertTrue(boolean4 == boolean2);
      assertTrue(boolean4 == boolean1);
      
      char char2 = doubleMetaphone0.charAt("L.dT3sy>:KJif", 4);
      assertEquals('3', char2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(char2 == char1);
      assertFalse(char2 == char0);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "SIO";
      stringArray0[1] = "SIO";
      stringArray0[2] = "SIO";
      stringArray0[3] = "SIO";
      // Undeclared exception!
      try { 
        DoubleMetaphone.contains("SIO", 65, (-134), stringArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "{4 -GyRB";
      boolean boolean0 = DoubleMetaphone.contains("{4 -GyRB", 725, 725, stringArray0);
      assertFalse(boolean0);
      assertEquals(1, stringArray0.length);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("{4 -GyRB", "{4 -GyRB", true);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1 == boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("{4 -GyRB");
      assertEquals("KRP", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(725);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('p');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("p", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('R');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("p", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("R", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('@');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("p@", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("R", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("Yb4S1aO|Q@@FI[Z#7", "GNPVY", false);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      
      char char0 = doubleMetaphone0.charAt("KRP", (-44236554));
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone((String) null, false);
      assertNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char1 = doubleMetaphone0.charAt("^_&pr+K", 508);
      assertEquals('\u0000', char1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(char1 == char0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(int1 == int0);
      
      String string3 = doubleMetaphone0.doubleMetaphone("Yb4S1aO|Q@@FI[Z#7", false);
      assertEquals("APSK", string3);
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string3.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "EWSKI";
      String string1 = "n+d,CX{,";
      String string2 = doubleMetaphone0.encode("n+d,CX{,");
      assertEquals("NTKK", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      
      Object object0 = doubleMetaphone0.encode((Object) "^'^~'U;.|vV4UUY");
      assertEquals("F", object0);
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string2));
      
      String string3 = doubleMetaphone0.encode("bbS");
      assertEquals("PS", string3);
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)object0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      
      String string4 = doubleMetaphone0.doubleMetaphone("bbS", true);
      assertEquals("PS", string4);
      assertNotNull(string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)object0));
      assertTrue(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      
      try { 
        doubleMetaphone0.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode((String) null);
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("L");
      assertEquals("L", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "L");
      assertEquals("L", object0);
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(object0.equals((Object)string1));
      
      String string2 = doubleMetaphone0.doubleMetaphone("B");
      assertEquals("P", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)object0));
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("B", "B", true);
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(77);
      assertEquals(77, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.encode("c-TD\" U");
      assertEquals("KT", string3);
      assertNotNull(string3);
      assertEquals(77, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string3.equals((Object)object0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(77, int0);
      assertEquals(77, doubleMetaphone0.getMaxCodeLen());
      
      String string4 = doubleMetaphone0.encode("L");
      assertEquals("L", string4);
      assertNotNull(string4);
      assertEquals(77, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string4.equals((Object)string3));
      assertTrue(string4.equals((Object)string1));
      assertTrue(string4.equals((Object)object0));
      assertFalse(string4.equals((Object)string2));
      
      String string5 = doubleMetaphone0.doubleMetaphone("WR", true);
      assertEquals("R", string5);
      assertNotNull(string5);
      assertEquals(77, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)object0));
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("VAN ");
      assertEquals("FN", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("VAN ", "R2Q3>", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual(")c2)uWMyZxh", "PSL", false);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      char char0 = doubleMetaphone1.charAt("2_)l$l|}TzS{g", 72);
      assertEquals('\u0000', char0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string1 = doubleMetaphone1.doubleMetaphone("CC", true);
      assertEquals("K", string1);
      assertNotNull(string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      
      char char1 = doubleMetaphone0.charAt("VAN ", 72);
      assertEquals('\u0000', char1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(char1 == char0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(int1 == int0);
      
      String string2 = doubleMetaphone1.doubleMetaphone("CK", true);
      assertEquals("K", string2);
      assertNotNull(string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("OS");
      assertEquals("AS", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = "n+d,CX{,";
      String string2 = doubleMetaphone0.encode("AS");
      assertEquals("AS", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      
      String string3 = "TCH";
      String string4 = doubleMetaphone0.encode("TCH");
      assertEquals("X", string4);
      assertNotNull(string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string5 = "[WersWSJ5Ln-\"3";
      String string6 = doubleMetaphone1.doubleMetaphone("[WersWSJ5Ln-\"3", true);
      assertEquals("RSSL", string6);
      assertNotNull(string6);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)string4));
      assertFalse(string6.equals((Object)string2));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string3));
      
      Object object0 = doubleMetaphone0.encode((Object) "OS");
      assertEquals("AS", object0);
      assertNotNull(object0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(object0.equals((Object)string3));
      assertTrue(object0.equals((Object)string0));
      assertTrue(object0.equals((Object)string2));
      assertFalse(object0.equals((Object)string5));
      assertFalse(object0.equals((Object)string6));
      assertFalse(object0.equals((Object)string4));
      assertFalse(object0.equals((Object)string1));
      
      try { 
        doubleMetaphone0.encode((Object) doubleMetaphone1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("5rnz<]!2Sw=J0", "5rnz<]!2Sw=J0", false);
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("dBUCkoXbnaHDLOc", "nq");
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1 == boolean0);
      
      String string0 = doubleMetaphone0.encode("MANGER");
      assertEquals("MNJR", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('#', 'M');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("MANGER", "");
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('V');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string1 = doubleMetaphone0.doubleMetaphone("MANGER", true);
      assertEquals("MNKR", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      
      doubleMetaphone_DoubleMetaphoneResult0.append("OO", "OO");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean3 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(boolean3 == boolean2);
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      
      String string2 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('#', '(');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('V', 'Z');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string3 = doubleMetaphone0.doubleMetaphone("", false);
      assertNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean4 = doubleMetaphone0.isDoubleMetaphoneEqual("MNJR", "MANGER");
      assertTrue(boolean4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean4 == boolean1);
      assertTrue(boolean4 == boolean3);
      assertTrue(boolean4 == boolean0);
      assertFalse(boolean4 == boolean2);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('.', 'V');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone0.setMaxCodeLen(3283);
      assertEquals(3283, doubleMetaphone0.getMaxCodeLen());
      
      String string4 = doubleMetaphone0.doubleMetaphone("dBUCkoXbnaHDLOc");
      assertEquals("TPKKSPNTLK", string4);
      assertNotNull(string4);
      assertEquals(3283, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("BACHER");
      assertEquals("PKR", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("BACHER", "R2Q3>", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("$=Bl{_)");
      assertEquals("PL", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append("$=Bl{_)");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode((String) null);
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("L");
      assertEquals("L", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "L");
      assertEquals("L", object0);
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(object0.equals((Object)string1));
      
      String string2 = doubleMetaphone0.doubleMetaphone("B");
      assertEquals("P", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)object0));
      assertFalse(string2.equals((Object)string1));
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("B", "B", true);
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(77);
      assertEquals(77, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.encode("c-TD\" U");
      assertEquals("KT", string3);
      assertNotNull(string3);
      assertEquals(77, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)object0));
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(77, int0);
      assertEquals(77, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual(")c2)uWMyZxh", "org.apache.commons.codec.EncoderException", true);
      assertFalse(boolean1);
      assertEquals(77, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1 == boolean0);
      
      char char0 = doubleMetaphone0.charAt("org.apache.commons.codec.EncoderException", 72);
      assertEquals('\u0000', char0);
      assertEquals(77, doubleMetaphone0.getMaxCodeLen());
      
      String string4 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", true);
      assertEquals("ARKPKKMNSKTKNKTRKSPXN", string4);
      assertNotNull(string4);
      assertEquals(77, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)object0));
      assertFalse(string4.equals((Object)string3));
      
      char char1 = doubleMetaphone0.charAt("KT", 77);
      assertEquals('\u0000', char1);
      assertEquals(77, doubleMetaphone0.getMaxCodeLen());
      assertTrue(char1 == char0);
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(77, int1);
      assertEquals(77, doubleMetaphone0.getMaxCodeLen());
      assertTrue(int1 == int0);
      
      int int2 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(77, int2);
      assertEquals(77, doubleMetaphone0.getMaxCodeLen());
      assertTrue(int2 == int1);
      assertTrue(int2 == int0);
      
      String string5 = doubleMetaphone0.doubleMetaphone("P", true);
      assertEquals("P", string5);
      assertNotNull(string5);
      assertEquals(77, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)object0));
      assertFalse(string5.equals((Object)string3));
      assertTrue(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string4));
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "OS";
      String string1 = doubleMetaphone0.encode("OS");
      assertEquals("AS", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("AS", "WRVAN", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      try { 
        doubleMetaphone0.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("VAN ");
      assertEquals("FN", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("VAN ", "R2Q3>", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("$=Bl{_)");
      assertEquals("PL", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      
      String string2 = doubleMetaphone0.doubleMetaphone("0>F$&JD{*Fr%*~", false);
      assertEquals("FJTF", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("dBUCkoXbnaHDLOc", "nq");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("MANGER");
      assertEquals("MNJR", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('#', 'M');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("MANGER", "");
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('V');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string1 = doubleMetaphone0.doubleMetaphone("MANGER", true);
      assertEquals("MNKR", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      
      doubleMetaphone_DoubleMetaphoneResult0.append("OO", "OO");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('#', '(');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('V', 'Z');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string3 = doubleMetaphone0.doubleMetaphone("", false);
      assertNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("MNJR", "MANGER");
      assertTrue(boolean3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3 == boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('.', 'V');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone0.setMaxCodeLen(3283);
      assertEquals(3283, doubleMetaphone0.getMaxCodeLen());
      
      String string4 = doubleMetaphone0.doubleMetaphone("dBUCkoXbnaHDLOc");
      assertEquals("TPKKSPNTLK", string4);
      assertNotNull(string4);
      assertEquals(3283, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "SCH");
      assertEquals("X", object0);
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("", false);
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone0.setMaxCodeLen(0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean1);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertTrue(boolean1 == boolean0);
      
      char char0 = ']';
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary(']');
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string1 = doubleMetaphone0.doubleMetaphone("H>[6jeF%1JN");
      assertEquals("", string1);
      assertNotNull(string1);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)object0));
      
      doubleMetaphone_DoubleMetaphoneResult0.append("YA{98>f[qg%<sKSW");
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string2 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertEquals("", string2);
      assertNotNull(string2);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertTrue(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)object0));
      
      String[] stringArray0 = new String[2];
      String string3 = "PS";
      stringArray0[0] = "PS";
      stringArray0[1] = ":!c3gD1";
      // Undeclared exception!
      try { 
        DoubleMetaphone.contains((String) null, 0, 6, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "SCH");
      assertEquals("X", object0);
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("", false);
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone0.setMaxCodeLen(0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      char char0 = doubleMetaphone0.charAt("X", 0);
      assertEquals('X', char0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      char char1 = doubleMetaphone0.charAt("SCH", 0);
      assertEquals('S', char1);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertFalse(char1 == char0);
      
      char char2 = doubleMetaphone0.charAt("", 0);
      assertEquals('\u0000', char2);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertFalse(char2 == char0);
      assertFalse(char2 == char1);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("X", "+=x0Qd^l", false);
      assertTrue(boolean1);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(78);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      String string1 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertEquals("", string1);
      assertNotNull(string1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(string1.equals((Object)object0));
      
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult1.append((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(75);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('d');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("d", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone0.setMaxCodeLen(75);
      assertEquals(75, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "iG*%(", false);
      assertFalse(boolean0);
      assertEquals(75, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('d', 'd');
      assertEquals(75, doubleMetaphone0.getMaxCodeLen());
      assertEquals("d", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("dd", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("SH1c}r:!vDp({)pFx1x", "iG*%(");
      assertEquals(75, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ddSH1c}r:!vDp({)pFx1x", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("diG*%(", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('_', 'h');
      assertEquals(75, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ddSH1c}r:!vDp({)pFx1x_", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("diG*%(h", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('~');
      assertEquals(75, doubleMetaphone0.getMaxCodeLen());
      assertEquals("diG*%(h~", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("ddSH1c}r:!vDp({)pFx1x_", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      char char0 = doubleMetaphone0.charAt("", 0);
      assertEquals('\u0000', char0);
      assertEquals(75, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean1);
      assertEquals(75, doubleMetaphone0.getMaxCodeLen());
      assertEquals("diG*%(h~", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("ddSH1c}r:!vDp({)pFx1x_", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertTrue(boolean1 == boolean0);
      
      char char1 = doubleMetaphone0.charAt("SH1c}r:!vDp({)pFx1x", 75);
      assertEquals('\u0000', char1);
      assertEquals(75, doubleMetaphone0.getMaxCodeLen());
      assertTrue(char1 == char0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('d');
      assertEquals(75, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ddSH1c}r:!vDp({)pFx1x_d", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("diG*%(h~d", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      char char2 = doubleMetaphone0.charAt("I:", (-919));
      assertEquals('\u0000', char2);
      assertEquals(75, doubleMetaphone0.getMaxCodeLen());
      assertTrue(char2 == char0);
      assertTrue(char2 == char1);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("#LXV", "#LXV", false);
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "GNSCH";
      String string1 = doubleMetaphone0.doubleMetaphone("GNSCH", true);
      assertEquals("NX", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      
      try { 
        doubleMetaphone0.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("n+d,CX{,");
      assertEquals("NTKK", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("bbS");
      assertEquals("PS", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("NTKK", "org.apache.commons.codec.EncoderException");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("n+d,CX{,", "bbS", false);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1194));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append("CY", "org.apache.commons.codec.EncoderException");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "org.apache.commons.codec.EncoderException", true);
      Object object0 = doubleMetaphone0.encode((Object) "MAfoblg;");
      assertEquals("MFPL", object0);
      
      doubleMetaphone0.encode("TK");
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "MAfoblg;", false);
      assertFalse(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('k');
      doubleMetaphone_DoubleMetaphoneResult0.append("TK", "X{");
      doubleMetaphone_DoubleMetaphoneResult0.append("TK", "VY<1B2{{07`P#~");
      String string0 = doubleMetaphone0.encode("TK");
      assertEquals("TK", string0);
      
      String string1 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertEquals("", string1);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary(":!c3gD1");
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone("");
      doubleMetaphone0.encode("TION");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(77);
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone0.isDoubleMetaphoneEqual("XN", "baRd_of57>s]E");
      doubleMetaphone_DoubleMetaphoneResult0.append("XN");
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("IER");
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('D');
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("1twWzHoM<|c`Xgyf-')");
      // Undeclared exception!
      try { 
        doubleMetaphone0.charAt((String) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone("HIA");
      doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", true);
      doubleMetaphone0.doubleMetaphone("ARKP");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1346);
      doubleMetaphone0.setMaxCodeLen(1346);
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.appendPrimary((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "~O jE'y^";
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-684));
      int int0 = (-1);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult((-1));
      doubleMetaphone_DoubleMetaphoneResult1.isComplete();
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append("~O jE'y^");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone("CK", true);
      doubleMetaphone0.doubleMetaphone("CK");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1346);
      doubleMetaphone0.setMaxCodeLen(1346);
      String string0 = null;
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.appendPrimary((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "ArBSS8'&`<gA^Ms<Ig";
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "ArBSS8'&`<gA^Ms<Ig");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "org.apache.commons.codec.EncoderException";
      stringArray0[1] = "org.apache.commons.codec.EncoderException";
      stringArray0[2] = "org.apache.commons.codec.EncoderException";
      stringArray0[3] = "org.apache.commons.codec.EncoderException";
      stringArray0[4] = "org.apache.commons.codec.EncoderException";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "org.apache.commons.codec.EncoderException";
      DoubleMetaphone.contains("org.apache.commons.codec.EncoderException", (-1060), (-1060), stringArray0);
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1060));
      doubleMetaphone0.encode((Object) "");
      doubleMetaphone_DoubleMetaphoneResult0.append('v', 'v');
      try { 
        doubleMetaphone0.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.isDoubleMetaphoneEqual("dBUCkoXbnaHDLOc", "nq");
      String string0 = "MANGER";
      doubleMetaphone0.encode("MANGER");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.append('#', 'M');
      doubleMetaphone0.isDoubleMetaphoneEqual("MANGER", "");
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("");
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('V');
      doubleMetaphone0.doubleMetaphone("MANGER", true);
      doubleMetaphone_DoubleMetaphoneResult0.append("OO", "OO");
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone0.doubleMetaphone("");
      doubleMetaphone_DoubleMetaphoneResult0.append('#', '(');
      doubleMetaphone_DoubleMetaphoneResult0.append('V', 'Z');
      doubleMetaphone_DoubleMetaphoneResult0.append('M', '#');
      doubleMetaphone0.setMaxCodeLen((-2047));
      // Undeclared exception!
      try { 
        doubleMetaphone0.encode((Object) "MNKR");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "EWSKI";
      String string1 = "n+d,CX{,";
      doubleMetaphone0.encode("n+d,CX{,");
      doubleMetaphone0.encode("bbS");
      doubleMetaphone0.doubleMetaphone("bbS", true);
      try { 
        doubleMetaphone0.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "org.apache.commons.codec.EncoderException";
      doubleMetaphone0.setMaxCodeLen(0);
      doubleMetaphone0.setMaxCodeLen(1505);
      doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException");
      doubleMetaphone0.charAt("org.apache.commons.codec.EncoderException", 0);
      int int0 = (-380);
      doubleMetaphone0.encode("org.apache.commons.codec.EncoderException");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-380));
      doubleMetaphone0.isDoubleMetaphoneEqual("ARKPXKMNSKTKNKTRKSPXN", "", false);
      String string1 = "JmKf|Oe>CT7";
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('o');
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append("HzAW=eNW/7'_[-gt]", "JmKf|Oe>CT7");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = null;
      int int0 = 0;
      // Undeclared exception!
      try { 
        doubleMetaphone0.charAt((String) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = null;
      doubleMetaphone0.doubleMetaphone((String) null);
      doubleMetaphone0.encode("v%1TMs");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1));
      doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "=%/K-V-");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      int int0 = (-4066);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-4066));
      String string0 = "n2iK(7%<yO\\}\"^Qg";
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("n2iK(7%<yO}\"^Qg");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = doubleMetaphone0.encode("org.apache.commons.codec.EncoderException");
      assertEquals("ARKP", string0);
      
      doubleMetaphone0.isDoubleMetaphoneEqual("ED", "ED", true);
      doubleMetaphone0.doubleMetaphone("I");
      doubleMetaphone0.getMaxCodeLen();
      doubleMetaphone0.encode((Object) "ED");
      Object object0 = doubleMetaphone0.encode((Object) "AT");
      assertEquals("AT", object0);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.append("gh85B?Xx", "es5g#f\"Yy$k} ");
      String string0 = doubleMetaphone0.doubleMetaphone("\">W6-P9I}h]p&");
      assertNotNull(string0);
      assertEquals("PP", string0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      String string0 = "}\"u,]]TB~#v{#&hBH";
      doubleMetaphone0.doubleMetaphone("}\"u,]]TB~#v{#&hBH");
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      String string1 = "";
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("VAN ", "R2Q3>", false);
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.encode("$=Bl{_)");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PL", string0);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone("`E", false);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(69);
      doubleMetaphone_DoubleMetaphoneResult0.append('&');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('9');
      doubleMetaphone0.setMaxCodeLen(69);
      doubleMetaphone0.encode("FO0f)#1z<B");
      doubleMetaphone_DoubleMetaphoneResult0.append('b');
      String[] stringArray0 = new String[6];
      stringArray0[0] = "TS";
      stringArray0[1] = "FO0f)#1z<B";
      stringArray0[2] = "`E";
      stringArray0[3] = "`E";
      stringArray0[4] = "";
      stringArray0[5] = "";
      boolean boolean0 = DoubleMetaphone.contains("", (-1682), (-1), stringArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = null;
      String string1 = "Gx-%{.";
      doubleMetaphone0.encode("{");
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "Gx-%{.", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode("");
      try { 
        doubleMetaphone0.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(75);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('d');
      doubleMetaphone0.setMaxCodeLen(75);
      doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "iG*%(", false);
      doubleMetaphone_DoubleMetaphoneResult0.append("SH1c}r:!vDp({)pFx1x", "iG*%(");
      doubleMetaphone_DoubleMetaphoneResult0.append('_', 'h');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('~');
      doubleMetaphone0.charAt("", 0);
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone0.charAt("SH1c}r:!vDp({)pFx1x", 75);
      doubleMetaphone_DoubleMetaphoneResult0.append('d');
      assertEquals("dSH1c}r:!vDp({)pFx1x_d", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.isDoubleMetaphoneEqual("~O jE'y^", "~O jE'y^", false);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("l#kRn=pXG*", (String) null);
      assertFalse(boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('F');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "t|;{_dhr$b{M)j~Ph=";
      doubleMetaphone0.isDoubleMetaphoneEqual("t|;{_dhr$b{M)j~Ph=", "t|;{_dhr$b{M)j~Ph=", true);
      doubleMetaphone0.encode("t|;{_dhr$b{M)j~Ph=");
      String string1 = "bDtLF=ri=tBbs8";
      doubleMetaphone0.charAt("bDtLF=ri=tBbs8", 69);
      doubleMetaphone0.encode("bDtLF=ri=tBbs8");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(69);
      char char0 = '4';
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append("jWT^{", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      String string0 = null;
      char char0 = 'l';
      doubleMetaphone_DoubleMetaphoneResult0.append("!.o|FI=A~><>%%zMiB", "|I^|&6=s;t");
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('l');
      doubleMetaphone_DoubleMetaphoneResult0.append('l', '@');
      String string1 = null;
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      String string0 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException");
      assertEquals("ARKP", string0);
      
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone_DoubleMetaphoneResult0.append('j');
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "org.apache.commons.codec.EncoderException";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "org.apache.commons.codec.EncoderException";
      boolean boolean0 = DoubleMetaphone.contains("", 0, 0, stringArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "org.apache.commons.codec.EncoderException", true);
      doubleMetaphone0.encode((Object) "MAfoblg;");
      String string0 = "TK";
      doubleMetaphone0.encode("TK");
      doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "MAfoblg;", false);
      doubleMetaphone0.setMaxCodeLen((-1723));
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("%\"Aj&xOkj)dqSe+Z|Oh", "org.apache.commons.codec.EncoderException", false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode((Object) "SCH");
      doubleMetaphone0.doubleMetaphone("", false);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone0.setMaxCodeLen(0);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary(']');
      doubleMetaphone_DoubleMetaphoneResult0.append("", ":!c3gD1");
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append((String) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      char char0 = '!';
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "E");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      int int0 = 1;
      doubleMetaphone0.setMaxCodeLen(1);
      String string0 = "";
      doubleMetaphone0.encode((Object) "");
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.isDoubleMetaphoneEqual("g>r8Mj{5-l3N*CS", "", true);
      String string0 = "";
      String string1 = ",@";
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", ",@", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "{4 -GyRB";
      DoubleMetaphone.contains("{4 -GyRB", 725, 725, stringArray0);
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.isDoubleMetaphoneEqual("{4 -GyRB", "{4 -GyRB", true);
      doubleMetaphone0.doubleMetaphone("{4 -GyRB");
      doubleMetaphone0.doubleMetaphone("");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(725);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('p');
      char char0 = '@';
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('@');
      doubleMetaphone0.isDoubleMetaphoneEqual("Yb4S1aO|Q@@FI[Z#7", "^_&pr+K", true);
      doubleMetaphone_DoubleMetaphoneResult0.append('h');
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('9');
      doubleMetaphone0.doubleMetaphone("4GMEm`JH ");
      doubleMetaphone_DoubleMetaphoneResult0.append("[Ys");
      doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      // Undeclared exception!
      try { 
        DoubleMetaphone.contains((String) null, 725, 725, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = null;
      stringArray0[4] = null;
      stringArray0[5] = null;
      stringArray0[6] = null;
      stringArray0[7] = null;
      stringArray0[8] = null;
      // Undeclared exception!
      try { 
        DoubleMetaphone.contains((String) null, 0, 0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone("");
      doubleMetaphone0.encode("TION");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(77);
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone_DoubleMetaphoneResult0.append("XN");
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("IER");
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('D');
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("1twWzHoM<|c`Xgyf-')");
      doubleMetaphone0.encode((String) null);
      doubleMetaphone_DoubleMetaphoneResult0.append('a', 'T');
      doubleMetaphone0.doubleMetaphone("", true);
      doubleMetaphone0.isDoubleMetaphoneEqual("TION", "TION");
      doubleMetaphone_DoubleMetaphoneResult0.append('a', 'T');
      doubleMetaphone0.setMaxCodeLen(77);
      doubleMetaphone0.doubleMetaphone("1twWzHoM<|c`Xgyf-')");
      assertEquals(77, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.setMaxCodeLen(3034);
      doubleMetaphone0.doubleMetaphone("<!co");
      doubleMetaphone0.setMaxCodeLen((-962));
      // Undeclared exception!
      try { 
        doubleMetaphone0.doubleMetaphone("K");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }
}
