/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 06 01:10:45 GMT 2021
 */

package org.apache.commons.codec.language;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.codec.language.DoubleMetaphone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DoubleMetaphone_ESTest extends DoubleMetaphone_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("mCH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("MK", string0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("z&bUGh3*T(YIt%r");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("SPTT", string0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) "j.CH)");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("JX", object0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      doubleMetaphone1.setMaxCodeLen(10);
      assertEquals(10, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string0 = doubleMetaphone1.doubleMetaphone("VY", true);
      assertEquals(10, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string0.equals((Object)object0));
      assertNotNull(string0);
      assertEquals("F", string0);
      
      boolean boolean0 = false;
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("VY", "CgW5I Q", true);
      assertEquals(10, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      
      boolean boolean2 = doubleMetaphone2.isDoubleMetaphoneEqual("iv>Gb&>j&N#[", "F(LlLgJw%)t<UA");
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      
      char char0 = doubleMetaphone1.charAt("j.CH)", 10);
      assertEquals(10, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertEquals('\u0000', char0);
      
      try { 
        doubleMetaphone0.encode((Object) doubleMetaphone2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("LI", "<r#", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("GNUGHV*T(YIT%R");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("NFFT", string0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("UGhv*T(YIt%r");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("AKFT", string0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("?UGh*T(YIt%r");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KTTR", string0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("mcL;idci+", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("MKLT", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("X\"", "mcL;idci+");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("Q(^kX^#sv:8v;uSSF", "mcL;idci+", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      String string1 = doubleMetaphone0.doubleMetaphone("&U^sgetn]P", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("SKTN", string1);
      
      char char0 = doubleMetaphone0.charAt("X\"", 67);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      Object object0 = doubleMetaphone0.encode((Object) "MKLT");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string1));
      assertNotNull(object0);
      assertEquals("MKLT", object0);
      
      String[] stringArray0 = new String[3];
      Object object1 = doubleMetaphone0.encode((Object) "&U^sgetn]P");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(object1.equals((Object)string1));
      assertFalse(object1.equals((Object)string0));
      assertFalse(object1.equals((Object)object0));
      assertNotNull(object1);
      assertEquals("SKTN", object1);
      
      stringArray0[0] = "X\"";
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("X\"", "(d X&<x 4[kW<&");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      
      stringArray0[1] = "Q(^kX^#sv:8v;uSSF";
      doubleMetaphone0.setMaxCodeLen(67);
      assertEquals(67, doubleMetaphone0.getMaxCodeLen());
      
      stringArray0[2] = "mcL;idci+";
      boolean boolean3 = DoubleMetaphone.contains("MKLT", 67, 5661, stringArray0);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertEquals(3, stringArray0.length);
      assertFalse(boolean3);
      
      String string2 = doubleMetaphone0.doubleMetaphone("&U^sgetn]P", false);
      assertEquals(67, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)object1));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)object0));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("SKTNP", string2);
      
      Object object2 = doubleMetaphone0.encode((Object) "SKTNP");
      assertEquals(67, doubleMetaphone0.getMaxCodeLen());
      assertFalse(object2.equals((Object)object0));
      assertFalse(object2.equals((Object)string0));
      assertTrue(object2.equals((Object)string2));
      assertFalse(object2.equals((Object)string1));
      assertFalse(object2.equals((Object)object1));
      assertNotNull(object2);
      assertEquals("SKTNP", object2);
      
      char char1 = doubleMetaphone0.charAt("&U^sgetn]P", 67);
      assertEquals(67, doubleMetaphone0.getMaxCodeLen());
      assertTrue(char1 == char0);
      assertEquals('\u0000', char1);
      
      char char2 = doubleMetaphone0.charAt("mcL;idci+", 67);
      assertEquals(67, doubleMetaphone0.getMaxCodeLen());
      assertTrue(char2 == char1);
      assertTrue(char2 == char0);
      assertEquals('\u0000', char2);
      
      String string3 = doubleMetaphone0.doubleMetaphone("(d X&<x 4[kW<&", true);
      assertEquals(67, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string3.equals((Object)object1));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)object2));
      assertFalse(string3.equals((Object)object0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertNotNull(string3);
      assertEquals("TKSKSK", string3);
      
      boolean boolean4 = DoubleMetaphone.contains("&U^sgetn]P", (-1970), 5661, stringArray0);
      assertTrue(boolean4 == boolean3);
      assertTrue(boolean4 == boolean0);
      assertTrue(boolean4 == boolean1);
      assertTrue(boolean4 == boolean2);
      assertEquals(3, stringArray0.length);
      assertFalse(boolean4);
      
      Object object3 = doubleMetaphone0.encode((Object) "DT");
      assertEquals(67, doubleMetaphone0.getMaxCodeLen());
      assertFalse(object3.equals((Object)string3));
      assertFalse(object3.equals((Object)string0));
      assertFalse(object3.equals((Object)object0));
      assertFalse(object3.equals((Object)string1));
      assertFalse(object3.equals((Object)object2));
      assertFalse(object3.equals((Object)string2));
      assertFalse(object3.equals((Object)object1));
      assertNotNull(object3);
      assertEquals("T", object3);
      
      String string4 = doubleMetaphone0.doubleMetaphone("TKSKSK", true);
      assertEquals(67, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string4.equals((Object)object0));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertTrue(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)object1));
      assertFalse(string4.equals((Object)object3));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)object2));
      assertNotNull(string4);
      assertEquals("TKSKSK", string4);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      String string0 = "PNBACHGER";
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("PNBACHGER");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("NPKK", string1);
      
      doubleMetaphone0.setMaxCodeLen(2147483645);
      assertEquals(2147483645, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = false;
      // Undeclared exception!
      doubleMetaphone0.encode((Object) "PNBACHGER");
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("KNWRCHAE");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("NRK", string0);
      
      String string1 = doubleMetaphone0.encode("jCcT+;JhwsF$zm");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("JKTJ", string1);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("GIB");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KP", string0);
      
      char char0 = doubleMetaphone0.charAt("GNWR", 0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('G', char0);
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "KP";
      stringArray0[1] = "GNWR";
      stringArray0[2] = "KP";
      stringArray0[3] = "";
      stringArray0[4] = "GNWR";
      stringArray0[5] = "KP";
      stringArray0[6] = "KP";
      boolean boolean0 = DoubleMetaphone.contains("GIB", 199, 199, stringArray0);
      assertEquals(7, stringArray0.length);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("WRCHAE");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("RK", string0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      String string0 = "chFm:fcT0,/rZu6j";
      int int0 = 1655;
      String[] stringArray0 = new String[2];
      stringArray0[0] = "chFm:fcT0,/rZu6j";
      stringArray0[1] = "chFm:fcT0,/rZu6j";
      boolean boolean0 = DoubleMetaphone.contains("chFm:fcT0,/rZu6j", (-487), 1655, stringArray0);
      assertEquals(2, stringArray0.length);
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      String string1 = doubleMetaphone0.encode("chFm:fcT0,/rZu6j");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("KFMF", string1);
      
      String string2 = "9yE2i:;:I\\";
      String string3 = doubleMetaphone0.doubleMetaphone("9yE2i:;:I", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertNotNull(string3);
      assertEquals("", string3);
      
      int int1 = 82;
      doubleMetaphone0.setMaxCodeLen(82);
      assertEquals(82, doubleMetaphone0.getMaxCodeLen());
      
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("iGnkyH~Z<;,");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("AKNK", string0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(74);
      assertEquals(74, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = false;
      String string0 = doubleMetaphone0.doubleMetaphone((String) null, false);
      assertEquals(74, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("zrwU^6B", "MANGER");
      assertEquals(74, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      String string1 = "ER";
      doubleMetaphone0.setMaxCodeLen(84);
      assertEquals(84, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("ER", true);
      assertEquals(84, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("AR", string2);
      
      String string3 = "org.apache.commons.codec.EncoderException";
      doubleMetaphone0.setMaxCodeLen(2147483645);
      assertEquals(2147483645, doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      doubleMetaphone0.isDoubleMetaphoneEqual("ER", "org.apache.commons.codec.EncoderException", false);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(2147483645);
      assertEquals(2147483645, doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      doubleMetaphone0.encode("oNM(mK?,in-Z77");
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("PSYDVYGHC>tX8]NVWM");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("STFK", string0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("HEM");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("HM", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("Bb/2p;u.:)#KW", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("PPK", string1);
      
      doubleMetaphone0.setMaxCodeLen(79);
      assertEquals(79, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("TS", true);
      assertEquals(79, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("TS", string2);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("PNT", "TS");
      assertEquals(79, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string3 = doubleMetaphone0.doubleMetaphone("PNT", false);
      assertEquals(79, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertNotNull(string3);
      assertEquals("NT", string3);
      
      String string4 = doubleMetaphone0.doubleMetaphone("${ mBb`", false);
      assertEquals(79, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertNotNull(string4);
      assertEquals("MP", string4);
      
      String string5 = doubleMetaphone0.doubleMetaphone("${ mBb`", false);
      assertEquals(79, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string1));
      assertTrue(string5.equals((Object)string4));
      assertNotNull(string5);
      assertEquals("MP", string5);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "PPK";
      boolean boolean1 = DoubleMetaphone.contains("NT", 79, 79, stringArray0);
      assertTrue(boolean1 == boolean0);
      assertEquals(1, stringArray0.length);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("H1po\".|fV", "PSHOLZ");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("tHf> uAO,!i");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("0F", string0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("N", "DE");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.encode("e?LN^GIER");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("ALNJ", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("e?LN^GIER", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("ALNJ", string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("DE", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("T", string2);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("{W", "faC", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("iGnyH3#/C");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("AKNK", string1);
      
      try { 
        doubleMetaphone0.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("C Q", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("K", string0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      String string0 = doubleMetaphone1.encode("z?UGh3*T(YIt%r");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(string0);
      assertEquals("SKTT", string0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("?p", "_HI", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("_HI", "_HI");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      char char0 = doubleMetaphone0.charAt("KN", (-1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "KN";
      boolean boolean2 = DoubleMetaphone.contains("DE", 80, 80, stringArray0);
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertEquals(1, stringArray0.length);
      assertFalse(boolean2);
      
      String string0 = doubleMetaphone0.encode("ME");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("M", string0);
      
      char char1 = doubleMetaphone0.charAt("DE", (-90));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(char1 == char0);
      assertEquals('\u0000', char1);
      
      char char2 = doubleMetaphone0.charAt("KN", 80);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(char2 == char0);
      assertTrue(char2 == char1);
      assertEquals('\u0000', char2);
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("DE", "_HI", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3);
      
      String string1 = doubleMetaphone0.doubleMetaphone("@v,h)xqqU{#TiC7,", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("FKSK", string1);
      
      boolean boolean4 = DoubleMetaphone.contains("ME", (-90), 72, stringArray0);
      assertTrue(boolean4 == boolean0);
      assertFalse(boolean4 == boolean1);
      assertTrue(boolean4 == boolean2);
      assertTrue(boolean4 == boolean3);
      assertEquals(1, stringArray0.length);
      assertFalse(boolean4);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(2147483645);
      assertEquals(2147483645, doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      doubleMetaphone0.doubleMetaphone("PNBACHGER", false);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "<r";
      stringArray0[1] = "e@+g$_";
      stringArray0[2] = "e@+g$_";
      stringArray0[3] = "e@+g$_";
      stringArray0[4] = "e@+g$_";
      stringArray0[5] = "e@+g$_";
      stringArray0[6] = "e@+g$_";
      stringArray0[7] = "e@+g$_";
      stringArray0[8] = "e@+g$_";
      boolean boolean0 = DoubleMetaphone.contains("e@+g$_", 3, 3, stringArray0);
      assertEquals(9, stringArray0.length);
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("e@+g$_", "e@+g$_", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      doubleMetaphone0.setMaxCodeLen(3);
      assertEquals(3, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("e@+g$_", "e@+g$_");
      assertEquals(3, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2);
      
      String string0 = doubleMetaphone0.doubleMetaphone("DT");
      assertEquals(3, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("T", string0);
      
      char char0 = doubleMetaphone0.charAt("DT", (-1236));
      assertEquals(3, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("e@+g$_", "e@+g$_", true);
      assertEquals(3, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3);
      
      Object object0 = doubleMetaphone0.encode((Object) "3}eE|W0-'h");
      assertEquals(3, doubleMetaphone0.getMaxCodeLen());
      assertFalse(object0.equals((Object)string0));
      assertNotNull(object0);
      assertEquals("", object0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("e@+g$_", false);
      assertEquals(3, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)object0));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("AK", string1);
      
      char char1 = doubleMetaphone0.charAt("e@+g$_", 66);
      assertEquals(3, doubleMetaphone0.getMaxCodeLen());
      assertTrue(char1 == char0);
      assertEquals('\u0000', char1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("", true);
      assertEquals(3, doubleMetaphone0.getMaxCodeLen());
      assertNull(string2);
      
      boolean boolean4 = doubleMetaphone0.isDoubleMetaphoneEqual("A[KGuC9K9B", "e@+g$_", false);
      assertEquals(3, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean4 == boolean1);
      assertFalse(boolean4 == boolean2);
      assertFalse(boolean4 == boolean3);
      assertTrue(boolean4 == boolean0);
      assertFalse(boolean4);
      
      boolean boolean5 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "!oIs", false);
      assertEquals(3, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean5 == boolean2);
      assertFalse(boolean5 == boolean1);
      assertTrue(boolean5 == boolean4);
      assertTrue(boolean5 == boolean0);
      assertFalse(boolean5 == boolean3);
      assertFalse(boolean5);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("umBDK6/@7:9");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("AMPT", string0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("ARKP", string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      String string1 = doubleMetaphone1.encode("]zDGYC`Ek0,f$");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("SJKK", string1);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("1{dpXi`CekGM!sAl`\"~", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("TPKS", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("KN;", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("N", string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string2);
      
      char char0 = doubleMetaphone0.charAt("WR;", 78);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      String string3 = doubleMetaphone0.doubleMetaphone("PS&&", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertNotNull(string3);
      assertEquals("S", string3);
      
      char char1 = doubleMetaphone0.charAt("N", (-995));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(char1 == char0);
      assertEquals('\u0000', char1);
      
      String string4 = doubleMetaphone0.doubleMetaphone("PS&&", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertNotNull(string4);
      assertEquals("S", string4);
      
      char char2 = doubleMetaphone0.charAt("org.apache.commons.codec.EncoderException", (-995));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(char2 == char1);
      assertTrue(char2 == char0);
      assertEquals('\u0000', char2);
      
      String string5 = doubleMetaphone0.doubleMetaphone("3XIGhEEg1ZIPyaK", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string1));
      assertNotNull(string5);
      assertEquals("KSKT", string5);
      
      String string6 = doubleMetaphone0.doubleMetaphone("3XIGhEEg1ZIPyaK", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string4));
      assertTrue(string6.equals((Object)string5));
      assertNotNull(string6);
      assertEquals("KSKT", string6);
      
      String string7 = doubleMetaphone0.doubleMetaphone("i^A}{pX3]wN", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string7.equals((Object)string1));
      assertFalse(string7.equals((Object)string5));
      assertFalse(string7.equals((Object)string0));
      assertFalse(string7.equals((Object)string6));
      assertFalse(string7.equals((Object)string3));
      assertFalse(string7.equals((Object)string4));
      assertNotNull(string7);
      assertEquals("APKS", string7);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(2147483645);
      assertEquals(2147483645, doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      doubleMetaphone0.doubleMetaphone("oNM(mK?,in-77");
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("NcCe$", "L", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("DANGER");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("TNJR", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("gF({3_L;/Sh][");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("KFLX", string1);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("ghV~KiW^");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KFK", string0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("PSWICZ");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("STS", string0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("V");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("F", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("v2Vv]oW2J", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("FF ", string1);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "s&&*Y:;fvYUjO-", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("ZZO91uNlKTq");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("SNLK", string0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "|o2|$0mG+r7E'{f";
      stringArray0[1] = "|o2|$0mG+r7E'{f";
      stringArray0[2] = "|F7U(C*09*I";
      stringArray0[3] = "|o2|$0mG+r7E'{f";
      stringArray0[4] = "|o2|$0mG+r7E'{f";
      stringArray0[5] = "|o2|$0mG+r7E'{f";
      stringArray0[6] = "|o2|$0mG+r7E'{f";
      stringArray0[7] = "|o2|$0mG+r7E'{f";
      boolean boolean0 = DoubleMetaphone.contains("|o2|$0mG+r7E'{f", 88, 88, stringArray0);
      assertEquals(8, stringArray0.length);
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("PN%-62E7IGHP", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("NP", string0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("Gy8c>6|x\"zV5I$7rjI", "Gy8c>6|x\"zV5I$7rjI", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string0 = doubleMetaphone0.encode((String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("ZF2C^>(v>z%xt:m");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("SFKF", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("SFKF", "", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("ZF2C^>(v>z%xt:m", "SFKF", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2645);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("XEkrJ~");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("XEkrJ~", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('Q');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("Q", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("XEkrJ~Q", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      String string1 = doubleMetaphone1.doubleMetaphone("XEkrJ~");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("SKRJ", string1);
      
      boolean boolean2 = doubleMetaphone1.isDoubleMetaphoneEqual("*S='h@B`", ")XaCH]", false);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      
      boolean boolean3 = doubleMetaphone1.isDoubleMetaphoneEqual("4GY>M,DkF@lLv", "sMry.c;b*", false);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3);
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone3);
      
      String string2 = doubleMetaphone3.encode("SKRJ");
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertTrue(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("SKRJ", string2);
      
      DoubleMetaphone doubleMetaphone4 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertNotNull(doubleMetaphone4);
      
      doubleMetaphone4.setMaxCodeLen(73);
      assertEquals(73, doubleMetaphone4.getMaxCodeLen());
      assertNotSame(doubleMetaphone4, doubleMetaphone3);
      assertNotSame(doubleMetaphone4, doubleMetaphone0);
      assertNotSame(doubleMetaphone4, doubleMetaphone1);
      assertNotSame(doubleMetaphone4, doubleMetaphone2);
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      
      doubleMetaphone2.setMaxCodeLen(2645);
      assertEquals(2645, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone4);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone3);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      
      boolean boolean4 = DoubleMetaphone.contains("NGRY$N@CW", 2645, 73, (String[]) null);
      assertTrue(boolean4 == boolean0);
      assertFalse(boolean4 == boolean1);
      assertTrue(boolean4 == boolean3);
      assertTrue(boolean4 == boolean2);
      assertFalse(boolean4);
      
      DoubleMetaphone doubleMetaphone5 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone5.getMaxCodeLen());
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone5);
      
      doubleMetaphone5.setMaxCodeLen((-50553092));
      assertEquals((-50553092), doubleMetaphone5.getMaxCodeLen());
      assertNotSame(doubleMetaphone5, doubleMetaphone3);
      assertNotSame(doubleMetaphone5, doubleMetaphone0);
      assertNotSame(doubleMetaphone5, doubleMetaphone4);
      assertNotSame(doubleMetaphone5, doubleMetaphone2);
      assertNotSame(doubleMetaphone5, doubleMetaphone1);
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone1));
      
      char char0 = doubleMetaphone3.charAt((String) null, (-50553092));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone5);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone4);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone5));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone4));
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) "/f;V>X.1)4|:i\"ej");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("FFKS", object0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("CHIA", "PSJOSE", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("PSJOSE", "60*kKo~QX^");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("lNTe;!R$l~'cN#Q,`p", "BACHCR");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("BACHER");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("PKR", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("PKR", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("PKR", string1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual(")GNL.FyQd7yn{()k>", "ILLA");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = "TH";
      int int0 = (-346);
      String string1 = "_$?*";
      String string2 = doubleMetaphone0.encode("PSCE");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("S", string2);
      
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, (String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("KNNV", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("NF", string0);
      
      String string1 = doubleMetaphone0.encode("KNNV");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("NF", string1);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1203));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('\"');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone0.encode("S:");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("S", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("S", "JOSE");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("3M", "", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.encode("CHOR");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KR", string0);
      
      char char0 = doubleMetaphone0.charAt("", (-761));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("'p4sl4qa\",<D", "WRR;M[ENC}Z*L=YFIBN", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("CC", "CZ", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("c<3<_((hvLlb", "'p4sl4qa\",<D", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("CZ", "!:I\"/iJNb");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3);
      
      String string0 = doubleMetaphone0.doubleMetaphone("?@l5d_2MNos,pVQ");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("LTMN", string0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) "nEFhb");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("NFP", object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "NFP");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(object1.equals((Object)object0));
      assertNotNull(object1);
      assertEquals("NFP", object1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("PSUCCES", (String) null, true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      Object object2 = doubleMetaphone0.encode((Object) "NFP");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(object2.equals((Object)object0));
      assertTrue(object2.equals((Object)object1));
      assertNotNull(object2);
      assertEquals("NFP", object2);
      
      String string0 = doubleMetaphone0.doubleMetaphone((String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      Object object3 = doubleMetaphone0.encode((Object) "NFP");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(object3.equals((Object)object1));
      assertTrue(object3.equals((Object)object0));
      assertTrue(object3.equals((Object)object2));
      assertNotNull(object3);
      assertEquals("NFP", object3);
      
      Object object4 = doubleMetaphone0.encode((Object) "org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(object4.equals((Object)object2));
      assertFalse(object4.equals((Object)object0));
      assertFalse(object4.equals((Object)object3));
      assertFalse(object4.equals((Object)object1));
      assertNotNull(object4);
      assertEquals("ARKP", object4);
      
      doubleMetaphone0.setMaxCodeLen(3216);
      assertEquals(3216, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "org.apache.commons.codec.EncoderException", true);
      assertEquals(3216, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      String string1 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", true);
      assertEquals(3216, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)object2));
      assertFalse(string1.equals((Object)object3));
      assertFalse(string1.equals((Object)object4));
      assertFalse(string1.equals((Object)object0));
      assertFalse(string1.equals((Object)object1));
      assertNotNull(string1);
      assertEquals("ARKPKKMNSKTKNKTRKSPXN", string1);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1299);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("PNPS", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("NPS", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("PNSCH", "AM$-sJ[='d9)??]", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      Object object0 = new Object();
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("CAESAR");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("SSR", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("CAESAR", "ILLO", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      char char0 = doubleMetaphone0.charAt("org.apache.commons.codec.EncoderException", 4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('a', char0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('S');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("S", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('T');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("ST", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("ST", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("}M?kRarAYGl");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S}M?", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("ST", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "^_o", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('T');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S}M?", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("ST", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string0 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("ARKP", string0);
      
      Object object0 = doubleMetaphone0.encode((Object) "org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(object0.equals((Object)string0));
      assertNotNull(object0);
      assertEquals("ARKP", object0);
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S}M?", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("ST", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      
      doubleMetaphone0.setMaxCodeLen(4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char1 = doubleMetaphone0.charAt("org.apache.commons.codec.EncoderException", 4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(char1 == char0);
      assertEquals('a', char1);
      
      boolean boolean3 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S}M?", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("ST", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3);
      
      String string1 = doubleMetaphone0.doubleMetaphone("E}?hvnP>'j]Ijpg{,j", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)object0));
      assertNotNull(string1);
      assertEquals("AFNP", string1);
      
      boolean boolean4 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S}M?", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("ST", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertTrue(boolean4 == boolean1);
      assertTrue(boolean4 == boolean0);
      assertTrue(boolean4 == boolean3);
      assertTrue(boolean4 == boolean2);
      assertFalse(boolean4);
      
      Object object1 = doubleMetaphone0.encode((Object) "^_o");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(object1.equals((Object)string0));
      assertFalse(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string1));
      assertNotNull(object1);
      assertEquals("", object1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("E}?hvnP>'j]Ijpg{,j", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)object0));
      assertFalse(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)object1));
      assertNotNull(string2);
      assertEquals("AFNP", string2);
      
      boolean boolean5 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S}M?", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("ST", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertTrue(boolean5 == boolean0);
      assertTrue(boolean5 == boolean3);
      assertTrue(boolean5 == boolean1);
      assertTrue(boolean5 == boolean4);
      assertTrue(boolean5 == boolean2);
      assertFalse(boolean5);
      
      boolean boolean6 = doubleMetaphone0.isDoubleMetaphoneEqual("AFNP", ",sk=bN07/x%Q", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean6 == boolean3);
      assertTrue(boolean6 == boolean2);
      assertTrue(boolean6 == boolean0);
      assertTrue(boolean6 == boolean5);
      assertTrue(boolean6 == boolean1);
      assertTrue(boolean6 == boolean4);
      assertFalse(boolean6);
      
      try { 
        doubleMetaphone0.encode((Object) doubleMetaphone_DoubleMetaphoneResult0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("d8Q4A>U7l/Hl$w45Yo;");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("TKLL", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("yTOtn9", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("ATTN", string1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("WH", "TH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-899));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("zpu|}");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("WR85PRI~?/6GLIBR");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("RPRK", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("WR85PRI~?/6GLIBR", "ZO");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1665);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('V');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("V", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("V", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("Ig;");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("V", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("VIg;", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("V", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("VIg;", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("V", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("VIg;", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("@", "-", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean3 == boolean2);
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3);
      
      char char0 = doubleMetaphone0.charAt("-", 2177);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      char char1 = doubleMetaphone0.charAt("Ig;", (-3112));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(char1 == char0);
      assertEquals('\u0000', char1);
      
      boolean boolean4 = doubleMetaphone0.isDoubleMetaphoneEqual("Ig;", "Ig;", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean4 == boolean0);
      assertFalse(boolean4 == boolean2);
      assertFalse(boolean4 == boolean1);
      assertTrue(boolean4 == boolean3);
      assertTrue(boolean4);
      
      char char2 = doubleMetaphone0.charAt("@", 1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(char2 == char0);
      assertTrue(char2 == char1);
      assertEquals('\u0000', char2);
      
      boolean boolean5 = doubleMetaphone0.isDoubleMetaphoneEqual("ZO", "Ig;", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean5 == boolean3);
      assertTrue(boolean5 == boolean0);
      assertTrue(boolean5 == boolean2);
      assertFalse(boolean5 == boolean4);
      assertTrue(boolean5 == boolean1);
      assertFalse(boolean5);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1299);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('&');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("&", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('&');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("&&", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('&');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("&&&", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      char char0 = doubleMetaphone1.charAt("?nw,S1gln", 5);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals('1', char0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("ICZq4NUx+&sBO6p$^");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotNull(string0);
      assertEquals("ASKN", string0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      
      try { 
        doubleMetaphone2.encode((Object) doubleMetaphone1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(84);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("SIA", "OGGI", false);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      
      String string0 = doubleMetaphone2.doubleMetaphone("hiGy1!so-");
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(string0);
      assertEquals("HJS", string0);
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone3);
      
      boolean boolean1 = doubleMetaphone3.isDoubleMetaphoneEqual("OGGI", (String) null, true);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      DoubleMetaphone doubleMetaphone4 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone4);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone2.encode((Object) "zFUHkFj>A6^\"} sC");
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone3);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone4);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(object1.equals((Object)string0));
      assertNotNull(object1);
      assertEquals("SFKF", object1);
      
      Object object2 = doubleMetaphone1.encode((Object) "SIA");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone4);
      assertNotSame(doubleMetaphone1, doubleMetaphone3);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone3));
      assertFalse(object2.equals((Object)object1));
      assertFalse(object2.equals((Object)string0));
      assertNotNull(object2);
      assertEquals("S", object2);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("J&;v;+>APfT`qS", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("AFPF", string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1299);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('&');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("&", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone0.setMaxCodeLen(1299);
      assertEquals(1299, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("PNPS");
      assertEquals(1299, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("NPS", string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("PNPS");
      assertEquals(1299, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("NPS", string2);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "PNPS");
      assertEquals(1299, doubleMetaphone0.getMaxCodeLen());
      assertFalse(object1.equals((Object)string0));
      assertTrue(object1.equals((Object)string1));
      assertTrue(object1.equals((Object)string2));
      assertNotNull(object1);
      assertEquals("NPS", object1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("SH", (String) null, false);
      assertEquals(1299, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string3 = doubleMetaphone0.doubleMetaphone("=zz", false);
      assertEquals(1299, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string3.equals((Object)object1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertNotNull(string3);
      assertEquals("S", string3);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("p#mRyoW5", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("PMR", string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual(":GCG`>%kf", "GNWRNPS", false);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("HEIM", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("HM", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("WITZ");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("ATS", string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("W", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("", string2);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      String string3 = doubleMetaphone0.encode("thp=*i\",I53|]SOc");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertNotNull(string3);
      assertEquals("0PSK", string3);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("J", "WH");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("W", "HM", true);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = null;
      String string1 = doubleMetaphone0.encode("<H.}Z }~7caw");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("SK", string1);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "G`{9DFKo#+aG");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1299);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('&');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("&", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      char char0 = doubleMetaphone0.charAt("\"AQno4A$aSY=", (-676));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      String string0 = doubleMetaphone1.doubleMetaphone("PSYRL9QP9BP.MJZ-Y',2K", true);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(string0);
      assertEquals("SRLK", string0);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("xGG_v6", "PSYRL9QP9BP.MJZ-Y',2K", true);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("xGG_v6", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("SKF", string1);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("MANGER", "MUd", true);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) "jvOvz[MqG}[0");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("JFFS", object0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      String string0 = doubleMetaphone1.doubleMetaphone("", false);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNull(string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(72);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone1.new DoubleMetaphoneResult(72);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult1.isComplete();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(boolean0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("JFFS", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)object0));
      assertNotNull(string1);
      assertEquals("JFS", string1);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("TTH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("0", string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      doubleMetaphone0.setMaxCodeLen((-1));
      assertEquals((-1), doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      String string1 = doubleMetaphone1.encode("KN~&");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("N", string1);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("PNALLE", "0", false);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(84);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('b');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("b", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate(']');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("b]", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('W');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("b]W", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("E|a2Gearw|G~FO&");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("b]WE|a2Gearw|G~FO&", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("PSYRL9QP9BP.MJZ-Y',2K");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("b]WE|a2Gearw|G~FO&PSYRL9QP9BP.MJZ-Y',2K", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("PSYRL9QP9BP.MJZ-Y',2K", "d8Q4A>U7l/Hl$w45Yo;");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("PSYRL9QP9BP.MJZ-Y',2K");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("SRLK", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("85PRI~?/6GLIbr", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("PRKL", string1);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1299);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("hiGy1!so-", "zFUHkFj>A6^\"} sC", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone((String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, (String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1299);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('&');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("&", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("Jh0B^)FO?SbQd0cl]T", "CHIA", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("PNPS", "CHIA");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      Object object0 = doubleMetaphone0.encode((Object) "PNPS");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("NPS", object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "NPS");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(object1.equals((Object)object0));
      assertNotNull(object1);
      assertEquals("NPS", object1);
      
      Object object2 = doubleMetaphone0.encode((Object) "NPS");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(object2.equals((Object)object1));
      assertTrue(object2.equals((Object)object0));
      assertNotNull(object2);
      assertEquals("NPS", object2);
      
      String string0 = doubleMetaphone0.doubleMetaphone("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("GNZA", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)object0));
      assertFalse(string1.equals((Object)object1));
      assertFalse(string1.equals((Object)object2));
      assertNotNull(string1);
      assertEquals("NS", string1);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1299);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual(".", ".");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone((String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      String string1 = doubleMetaphone0.doubleMetaphone(".");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotNull(string1);
      assertEquals("", string1);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("M=3H(-<gd*", ".", false);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      Object object0 = doubleMetaphone1.encode((Object) "L}5~dJo0gfK$0");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(object0.equals((Object)string1));
      assertNotNull(object0);
      assertEquals("LTJK", object0);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("-i=gn,9jtiC!Y", "%@#EOIl#oId|", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      
      boolean boolean3 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3 == boolean0);
      assertFalse(boolean3);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1299);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('&');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("&", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("PNPS", "RP");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      char char0 = doubleMetaphone1.charAt("PNPS", 1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals('N', char0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("%sd");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotNull(string0);
      assertEquals("ST", string0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      
      Object object0 = doubleMetaphone2.encode((Object) "mqq?S`8fSROW1MQHM");
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(object0.equals((Object)string0));
      assertNotNull(object0);
      assertEquals("MKSF", object0);
      
      Object object1 = new Object();
      assertNotNull(object1);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1299);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('&');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("&", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('&');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("&&", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(1299);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone_DoubleMetaphoneResult1.appendAlternate('&');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("&", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      doubleMetaphone_DoubleMetaphoneResult1.appendAlternate("Y");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("&Y", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      doubleMetaphone0.setMaxCodeLen(65);
      assertEquals(65, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("CIE", "PSYRL9QP9BP.MJZ-Y',2K", false);
      assertEquals(65, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("PSYRL9QP9BP.MJZ-Y',2K");
      assertEquals(65, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PSYRL9QP9BP.MJZ-Y',2K", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("&&PSYRL9QP9BP.MJZ-Y',2K", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      
      String string0 = doubleMetaphone0.doubleMetaphone("CIE");
      assertEquals(65, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("S", string0);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "r7f/7I*RH\b|Nb,2", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("ALLE");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("AL", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual(".", ".");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      char char0 = doubleMetaphone0.charAt("d8Q4A>U7l/Hl$w45Yo;", 81);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("ALLE");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("AL", string1);
      
      String string2 = doubleMetaphone0.encode("~&");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("", string2);
      
      String string3 = doubleMetaphone0.doubleMetaphone("GNFRH&}6SP#K?&");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertNotNull(string3);
      assertEquals("NFRS", string3);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("ARCHIT", "Pc(bazsUfP~$.>0", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = null;
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("5.@.MogH}/0<:O", (String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string1 = doubleMetaphone0.doubleMetaphone(" Q");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("K", string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone((String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string2);
      
      String string3 = null;
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "W");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("ZF2C^>(yv>z%t:m");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("SFKF", string0);
      
      String string1 = doubleMetaphone0.encode("SFKF");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("SFKF", string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string2);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      
      String string3 = doubleMetaphone2.doubleMetaphone("l", true);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertNotNull(string3);
      assertEquals("L", string3);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("@iUP>nMt`~J-Md[", "U}>6q&0", false);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone3);
      
      String string4 = doubleMetaphone3.doubleMetaphone("PSFKP", true);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertNotNull(string4);
      assertEquals("SFKP", string4);
      
      DoubleMetaphone doubleMetaphone4 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone4);
      
      String string5 = doubleMetaphone2.doubleMetaphone("F@b5GwOAwi~n%", true);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone3);
      assertNotSame(doubleMetaphone2, doubleMetaphone4);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string0));
      assertNotNull(string5);
      assertEquals("FPKN", string5);
      
      String string6 = doubleMetaphone4.doubleMetaphone("CHIA", true);
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      assertNotSame(doubleMetaphone4, doubleMetaphone0);
      assertNotSame(doubleMetaphone4, doubleMetaphone3);
      assertNotSame(doubleMetaphone4, doubleMetaphone2);
      assertNotSame(doubleMetaphone4, doubleMetaphone1);
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string4));
      assertNotNull(string6);
      assertEquals("K", string6);
      
      doubleMetaphone1.setMaxCodeLen(32);
      assertEquals(32, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone3);
      assertNotSame(doubleMetaphone1, doubleMetaphone4);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone4));
      
      String string7 = doubleMetaphone2.doubleMetaphone("l", false);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone3);
      assertNotSame(doubleMetaphone2, doubleMetaphone4);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(string7.equals((Object)string4));
      assertTrue(string7.equals((Object)string3));
      assertFalse(string7.equals((Object)string5));
      assertFalse(string7.equals((Object)string6));
      assertFalse(string7.equals((Object)string0));
      assertFalse(string7.equals((Object)string1));
      assertNotNull(string7);
      assertEquals("L", string7);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("ALLE");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("AL", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual(".", ".");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      char char0 = doubleMetaphone0.charAt("d8Q4A>U7l/Hl$w45Yo;", 81);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("ALLE");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("AL", string1);
      
      String string2 = doubleMetaphone0.encode("~&");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("", string2);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      String string3 = doubleMetaphone0.doubleMetaphone("9s*O]hB=/9", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertNotNull(string3);
      assertEquals("SP", string3);
      
      String string4 = doubleMetaphone1.doubleMetaphone((String) null, false);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNull(string4);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      
      doubleMetaphone2.setMaxCodeLen(81);
      assertEquals(81, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      
      boolean boolean1 = doubleMetaphone2.isDoubleMetaphoneEqual("UMB", "ALLE", true);
      assertEquals(81, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      boolean boolean2 = doubleMetaphone2.isDoubleMetaphoneEqual("PN", "");
      assertEquals(81, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
      
      doubleMetaphone2.setMaxCodeLen((-564));
      assertEquals((-564), doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      
      String string5 = doubleMetaphone0.doubleMetaphone("SP", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string5.equals((Object)string0));
      assertTrue(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string2));
      assertNotNull(string5);
      assertEquals("SP", string5);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual(".", ".");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      char char0 = doubleMetaphone0.charAt("d8Q4A>U7l/Hl$w45Yo;", 81);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      String string0 = doubleMetaphone0.encode("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      doubleMetaphone0.setMaxCodeLen(81);
      assertEquals(81, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("", true);
      assertEquals(81, doubleMetaphone0.getMaxCodeLen());
      assertNull(string1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("ALLE", "", true);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      String string2 = doubleMetaphone1.doubleMetaphone("J*m}LLS*i!F%U7X`R6");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(string2);
      assertEquals("JMLS", string2);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1299);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string0 = doubleMetaphone0.encode("scz%Em6;:dR|");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("SKMT", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string1);
      
      String string2 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("", string2);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      String string3 = doubleMetaphone1.doubleMetaphone("CK", true);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertNotNull(string3);
      assertEquals("K", string3);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "scz%Em6;:dR|";
      stringArray0[1] = "CK";
      stringArray0[2] = "";
      stringArray0[3] = "@pfbG=";
      stringArray0[4] = "SKMT";
      stringArray0[5] = "CK";
      stringArray0[6] = null;
      stringArray0[7] = "K";
      boolean boolean0 = DoubleMetaphone.contains("CK", 1299, 24, stringArray0);
      assertEquals(8, stringArray0.length);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1299);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('&');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("&", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('&');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("&&", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('&');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("&&&", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("?nw,S1gln");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("&&&?nw,S1gln", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("PSYRL9QP9BP.MJZ-Y',2K");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("&&&?nw,S1glnPSYRL9QP9BP.MJZ-Y',2K", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("CHORE", "?nw,S1gln");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("PSYRL9QP9BP.MJZ-Y',2K");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("SRLK", string0);
      
      boolean boolean1 = DoubleMetaphone.contains("PSYRL9QP9BP.MJZ-Y',2K", 1299, 66, (String[]) null);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("JlP#AK<J6]");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("JLPK", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("JlP#AK<J6]", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("ALPK", string1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(70);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone0.setMaxCodeLen(70);
      assertEquals(70, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("ak}j?rRg");
      assertEquals(70, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ak}j?rRg", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string2 = doubleMetaphone0.doubleMetaphone("MMec0u8*O#t<", true);
      assertEquals(70, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("MKT", string2);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('X');
      assertEquals(70, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ak}j?rRgX", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("X", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append(';', ',');
      assertEquals(70, doubleMetaphone0.getMaxCodeLen());
      assertEquals("X,", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("ak}j?rRgX;", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("MMec0u8*O#t<", "MMec0u8*O#t<");
      assertEquals(70, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ak}j?rRgX;MMec0u8*O#t<", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("X,MMec0u8*O#t<", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("MKT");
      assertEquals(70, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ak}j?rRgX;MMec0u8*O#t<", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("X,MMec0u8*O#t<MKT", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("MMec0u8*O#t<", "d2ouYiSHz");
      assertEquals(70, doubleMetaphone0.getMaxCodeLen());
      assertEquals("X,MMec0u8*O#t<MKTd2ouYiSHz", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("ak}j?rRgX;MMec0u8*O#t<MMec0u8*O#t<", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      char char0 = doubleMetaphone0.charAt("", 3480);
      assertEquals(70, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('%');
      assertEquals(70, doubleMetaphone0.getMaxCodeLen());
      assertEquals("X,MMec0u8*O#t<MKTd2ouYiSHz", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("ak}j?rRgX;MMec0u8*O#t<MMec0u8*O#t<%", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone0.setMaxCodeLen(3480);
      assertEquals(3480, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("");
      assertEquals(3480, doubleMetaphone0.getMaxCodeLen());
      assertNull(string3);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("HOLZ", "");
      assertEquals(3480, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("KNSIA", "org.apache.commons.codec.EncoderException", false);
      assertEquals(3480, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "MKT");
      assertEquals(3480, doubleMetaphone0.getMaxCodeLen());
      assertFalse(object1.equals((Object)string0));
      assertTrue(object1.equals((Object)string2));
      assertFalse(object1.equals((Object)string1));
      assertNotNull(object1);
      assertEquals("MKT", object1);
      
      String string4 = doubleMetaphone0.doubleMetaphone("ACH", true);
      assertEquals(3480, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)object1));
      assertFalse(string4.equals((Object)string1));
      assertNotNull(string4);
      assertEquals("AK", string4);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("UCCES");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("AKSS", string0);
      
      Object object0 = doubleMetaphone0.encode((Object) "UCCES");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(object0.equals((Object)string0));
      assertNotNull(object0);
      assertEquals("AKSS", object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "AKSS");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string0));
      assertNotNull(object1);
      assertEquals("AKS", object1);
      
      int int0 = (-3154);
      doubleMetaphone0.setMaxCodeLen((-3154));
      assertEquals((-3154), doubleMetaphone0.getMaxCodeLen());
      
      int int1 = 3131;
      doubleMetaphone0.setMaxCodeLen((-3154));
      assertEquals((-3154), doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.encode("AKS");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("UCCES");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("AKSS", string0);
      
      Object object0 = doubleMetaphone0.encode((Object) "UCCES");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(object0.equals((Object)string0));
      assertNotNull(object0);
      assertEquals("AKSS", object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "AKSS");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string0));
      assertNotNull(object1);
      assertEquals("AKS", object1);
      
      int int0 = (-3154);
      doubleMetaphone0.setMaxCodeLen((-3154));
      assertEquals((-3154), doubleMetaphone0.getMaxCodeLen());
      
      String string1 = "CAESAR";
      doubleMetaphone0.setMaxCodeLen((-3154));
      assertEquals((-3154), doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("L-ZCOeam", "-JFgd|kqf-@%0dU.I");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1299);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('&');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("&", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string0 = "WRBX";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("WRBX", "E", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "KN.");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      String string1 = doubleMetaphone0.doubleMetaphone("OGGI");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("AJ", string1);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("WRBX", "AGGI");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("WRBX", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("&AGGI", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      // Undeclared exception!
      try { 
        DoubleMetaphone.contains("HEM", 89, (-449), (String[]) null);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("ZF2C^>(yv>z%t:m");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("SFKF", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("h!L7&(Whr3c]DUAP", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("LRKT", string1);
      
      char char0 = doubleMetaphone0.charAt("org.apache.commons.codec.EncoderException", 7);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('c', char0);
      
      Object object0 = doubleMetaphone0.encode((Object) "LRKT");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string0));
      assertNotNull(object0);
      assertEquals("LRKT", object0);
      
      String string2 = doubleMetaphone0.doubleMetaphone((String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string2);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "G");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("ET", "IER", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(7);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      
      boolean boolean3 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3);
      
      boolean boolean4 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertTrue(boolean4 == boolean3);
      assertTrue(boolean4 == boolean1);
      assertTrue(boolean4 == boolean2);
      assertTrue(boolean4 == boolean0);
      assertFalse(boolean4);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      doubleMetaphone1.setMaxCodeLen(7);
      assertEquals(7, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      char char1 = doubleMetaphone1.charAt("sV:0*I8n_P}VjDVJQ", 80);
      assertEquals(7, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(char1 == char0);
      assertEquals('\u0000', char1);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("JlP#AK<J6]");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("JLPK", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("JlP#AK<J6]", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("ALPK", string1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(70);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone0.setMaxCodeLen(70);
      assertEquals(70, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("ak}j?rRg");
      assertEquals(70, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ak}j?rRg", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string2 = doubleMetaphone0.doubleMetaphone("MMec0u8*O#t<", true);
      assertEquals(70, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("MKT", string2);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      String string3 = doubleMetaphone1.doubleMetaphone("ak}j?rRg", true);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertNotNull(string3);
      assertEquals("AKJR", string3);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertNotNull(doubleMetaphone3);
      
      String string4 = doubleMetaphone3.doubleMetaphone((String) null);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertNull(string4);
      
      String string5 = doubleMetaphone2.doubleMetaphone((String) null, false);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone3);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNull(string5);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("ak}j?rRg", "|pkHDV6zp?x#!3W!");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone4 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone4);
      
      boolean boolean1 = doubleMetaphone4.isDoubleMetaphoneEqual("l,eJ$S9", "l,eJ$S9");
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      assertNotSame(doubleMetaphone4, doubleMetaphone2);
      assertNotSame(doubleMetaphone4, doubleMetaphone3);
      assertNotSame(doubleMetaphone4, doubleMetaphone0);
      assertNotSame(doubleMetaphone4, doubleMetaphone1);
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      doubleMetaphone3.setMaxCodeLen((-1076344202));
      assertEquals((-1076344202), doubleMetaphone3.getMaxCodeLen());
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone4);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone4));
      
      DoubleMetaphone doubleMetaphone5 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone5.getMaxCodeLen());
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone3));
      assertNotNull(doubleMetaphone5);
      
      String string6 = doubleMetaphone5.encode("AKJR");
      assertEquals(4, doubleMetaphone5.getMaxCodeLen());
      assertNotSame(doubleMetaphone5, doubleMetaphone0);
      assertNotSame(doubleMetaphone5, doubleMetaphone2);
      assertNotSame(doubleMetaphone5, doubleMetaphone4);
      assertNotSame(doubleMetaphone5, doubleMetaphone1);
      assertNotSame(doubleMetaphone5, doubleMetaphone3);
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone3));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string2));
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string0));
      assertNotNull(string6);
      assertEquals("AKR", string6);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(70, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone3);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone4);
      assertNotSame(doubleMetaphone0, doubleMetaphone5);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone5));
      assertEquals(70, int0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("zMr62n@Ag5o k", "u_Geu,|2O0`\"]kQW3{\"");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      String string0 = doubleMetaphone1.doubleMetaphone("zMr62n@Ag5o k");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(string0);
      assertEquals("SMRN", string0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      
      String string1 = doubleMetaphone2.doubleMetaphone("u_Geu,|2O0`\"]kQW3{\"");
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("AJKK", string1);
      
      String string2 = doubleMetaphone2.encode(" u'3-mB");
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("AMP", string2);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("DO'T?P!b`xY]\"u?^O[", "DO'T?P!b`xY]\"u?^O[");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      boolean boolean2 = doubleMetaphone2.isDoubleMetaphoneEqual("AMP", "WICZ");
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2);
      
      String string3 = doubleMetaphone2.doubleMetaphone(">");
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertNotNull(string3);
      assertEquals("", string3);
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone3);
      
      boolean boolean3 = doubleMetaphone3.isDoubleMetaphoneEqual(">", (String) null, true);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3);
      
      String string4 = doubleMetaphone0.encode("Y%_R/W[8PAD4f^^{<");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone3);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertNotNull(string4);
      assertEquals("ARPT", string4);
      
      DoubleMetaphone doubleMetaphone4 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone4);
      
      String string5 = doubleMetaphone4.doubleMetaphone("F");
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      assertNotSame(doubleMetaphone4, doubleMetaphone1);
      assertNotSame(doubleMetaphone4, doubleMetaphone3);
      assertNotSame(doubleMetaphone4, doubleMetaphone2);
      assertNotSame(doubleMetaphone4, doubleMetaphone0);
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string1));
      assertNotNull(string5);
      assertEquals("F", string5);
      
      DoubleMetaphone doubleMetaphone5 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone5.getMaxCodeLen());
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone4));
      assertNotNull(doubleMetaphone5);
      
      DoubleMetaphone doubleMetaphone6 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone6.getMaxCodeLen());
      assertFalse(doubleMetaphone6.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone6.equals((Object)doubleMetaphone5));
      assertFalse(doubleMetaphone6.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone6.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone6.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone6.equals((Object)doubleMetaphone4));
      assertNotNull(doubleMetaphone6);
      
      Object object0 = doubleMetaphone3.encode((Object) "i0+AnK^e9&?r");
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone6);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone5);
      assertNotSame(doubleMetaphone3, doubleMetaphone4);
      assertFalse(object0.equals((Object)string2));
      assertFalse(object0.equals((Object)string3));
      assertFalse(object0.equals((Object)string5));
      assertFalse(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string4));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone6));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone5));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone4));
      assertNotNull(object0);
      assertEquals("ANKR", object0);
      
      String string6 = doubleMetaphone3.encode("m~Vjx/]B>e");
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone6);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone5);
      assertNotSame(doubleMetaphone3, doubleMetaphone4);
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string4));
      assertFalse(string6.equals((Object)string2));
      assertFalse(string6.equals((Object)object0));
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)string3));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone6));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone5));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone4));
      assertNotNull(string6);
      assertEquals("MFJK", string6);
      
      DoubleMetaphone doubleMetaphone7 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone7.getMaxCodeLen());
      assertFalse(doubleMetaphone7.equals((Object)doubleMetaphone6));
      assertFalse(doubleMetaphone7.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone7.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone7.equals((Object)doubleMetaphone5));
      assertFalse(doubleMetaphone7.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone7.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone7.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone7);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone2.new DoubleMetaphoneResult(596);
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone5));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone6));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone7));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean4 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone5);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone4);
      assertNotSame(doubleMetaphone2, doubleMetaphone6);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone3);
      assertNotSame(doubleMetaphone2, doubleMetaphone7);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone5));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone6));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone7));
      assertTrue(boolean4 == boolean3);
      assertTrue(boolean4 == boolean2);
      assertFalse(boolean4 == boolean1);
      assertTrue(boolean4 == boolean0);
      assertFalse(boolean4);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("ALLE");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("AL", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual(".", ".");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      char char0 = doubleMetaphone0.charAt("d8Q4A>U7l/Hl$w45Yo;", 81);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("ALLE");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("AL", string1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(68);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("AL");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AL", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('w');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("ALw", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("DANGER");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("ALwDANGER", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("AL");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("ALwDANGERAL", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string2 = doubleMetaphone0.encode("vCHSr(o?P'mIF*");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("FKSR", string2);
      
      String string3 = doubleMetaphone0.doubleMetaphone("8HF}M", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertNotNull(string3);
      assertEquals("FM", string3);
      
      String string4 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("ALwDANGERAL", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertNotNull(string4);
      assertEquals("ALwDANGERAL", string4);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("vCHSr(o?P'mIF*", "", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      doubleMetaphone1.setMaxCodeLen((-1657));
      assertEquals((-1657), doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      // Undeclared exception!
      try { 
        doubleMetaphone1.doubleMetaphone("AL", false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1299);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('&');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("&", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('&');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("&&", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = false;
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("kzIXztbsc", "kzIXztbsc", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("kzIXztbsc");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("&&kzIXztbsc", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("kzIXztbsc", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      Object object0 = doubleMetaphone0.encode((Object) "kzIXztbsc");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("KSKS", object0);
      
      doubleMetaphone0.setMaxCodeLen(1299);
      assertEquals(1299, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("#");
      assertEquals(1299, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string0.equals((Object)object0));
      assertNotNull(string0);
      assertEquals("", string0);
      
      Object object1 = doubleMetaphone0.encode((Object) "RsuEjj_U^3");
      assertEquals(1299, doubleMetaphone0.getMaxCodeLen());
      assertFalse(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string0));
      assertNotNull(object1);
      assertEquals("RSJ", object1);
      
      Object object2 = new Object();
      assertNotNull(object2);
      
      try { 
        doubleMetaphone0.encode(object2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Object object0 = new Object();
      assertNotNull(object0);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("YSL", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("AL", string0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) "ZF2C^>(v>z%xt:m");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("SFKF", object0);
      
      String string0 = doubleMetaphone0.encode("y%(PL3@~*GP;fBo");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string0.equals((Object)object0));
      assertNotNull(string0);
      assertEquals("APLK", string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      
      String string1 = doubleMetaphone2.doubleMetaphone("RGY", true);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)object0));
      assertNotNull(string1);
      assertEquals("RK", string1);
      
      boolean boolean0 = doubleMetaphone2.isDoubleMetaphoneEqual("RGY", "Ev@43M 3Q}u\"E'Dcrb", true);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("GN\"W)(_WZ;", "RGY");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      boolean boolean2 = doubleMetaphone2.isDoubleMetaphoneEqual("GN\"W)(_WZ;", (String) null, false);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1299);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('&');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("&", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('&');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("&&", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone0.doubleMetaphone((String) null, true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      String string1 = doubleMetaphone1.doubleMetaphone("WITZ");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(string1);
      assertEquals("ATS", string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("H=_iH_ ", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("", string2);
      
      // Undeclared exception!
      try { 
        doubleMetaphone1.isDoubleMetaphoneEqual("", "y@l*j1ax6elW)d0`:t", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) "7,ANGER");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("NKR", object0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("7,ANGER", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string0.equals((Object)object0));
      assertNotNull(string0);
      assertEquals("NKR", string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("3KJ)", "3KJ)", false);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean0);
      
      String string1 = doubleMetaphone1.doubleMetaphone("NKR");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(string1.equals((Object)object0));
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("NKR", string1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("SIA", "CK", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      String string2 = doubleMetaphone2.doubleMetaphone("", true);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNull(string2);
      
      String string3 = doubleMetaphone0.doubleMetaphone("U&`v=&Q", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)object0));
      assertFalse(string3.equals((Object)string1));
      assertNotNull(string3);
      assertEquals("FK", string3);
      
      String string4 = doubleMetaphone2.doubleMetaphone("", true);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNull(string4);
      
      doubleMetaphone0.setMaxCodeLen(73);
      assertEquals(73, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("ALLE");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("AL", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual(".", ".");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      char char0 = doubleMetaphone0.charAt("d8Q4A>U7l/Hl$w45Yo;", 81);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("ALLE");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("AL", string1);
      
      String string2 = doubleMetaphone0.encode("#");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("", string2);
      
      Object object0 = doubleMetaphone0.encode((Object) "d8Q4A>U7l/Hl$w45Yo;");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string2));
      assertFalse(object0.equals((Object)string0));
      assertNotNull(object0);
      assertEquals("TKLL", object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "TKLL");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(object1.equals((Object)string2));
      assertFalse(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string1));
      assertFalse(object1.equals((Object)string0));
      assertNotNull(object1);
      assertEquals("TKL", object1);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "F", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) "7,ANGER");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("NKR", object0);
      
      boolean boolean0 = false;
      String string0 = doubleMetaphone0.doubleMetaphone("7,ANGER", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string0.equals((Object)object0));
      assertNotNull(string0);
      assertEquals("NKR", string0);
      
      String string1 = "CI";
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("CI", "CI");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      // Undeclared exception!
      try { 
        doubleMetaphone1.isDoubleMetaphoneEqual((String) null, "CHEY", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) "7,ANGER");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("NKR", object0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("7,ANGER", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string0.equals((Object)object0));
      assertNotNull(string0);
      assertEquals("NKR", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("NKR", "WRBX", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("CI", "NKR");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      String string1 = doubleMetaphone0.doubleMetaphone("CI");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)object0));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("S", string1);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "NKR";
      stringArray0[1] = "7,ANGER";
      boolean boolean2 = DoubleMetaphone.contains("CIA", (-1026), 2239, stringArray0);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertEquals(2, stringArray0.length);
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(11);
      assertEquals(11, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(11);
      assertEquals(11, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate(';');
      assertEquals(11, doubleMetaphone0.getMaxCodeLen());
      assertEquals(";", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone0.encode("kzIXztbsc");
      assertEquals(11, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KSKSSTPSK", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("KSKSSTPSK", "!9}x:Aem`2b", false);
      assertEquals(11, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("MANGER");
      assertEquals(11, doubleMetaphone0.getMaxCodeLen());
      assertEquals("MANGER", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals(";MANGER", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string1 = doubleMetaphone0.doubleMetaphone("|");
      assertEquals(11, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("", string1);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("KSKSSTPSK", "org.apache.commons.codec.EncoderException", false);
      assertEquals(11, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("g:{'0Jc1J}[p2j", true);
      assertEquals(11, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("KJKJP ", string2);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      String string3 = doubleMetaphone1.doubleMetaphone("MANGER", true);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertNotNull(string3);
      assertEquals("MNKR", string3);
      
      String string4 = doubleMetaphone1.encode("kzIXztbsc");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertNotNull(string4);
      assertEquals("KSKS", string4);
      
      String string5 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertEquals(11, doubleMetaphone0.getMaxCodeLen());
      assertEquals("MANGER", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals(";MANGER", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string1));
      assertNotNull(string5);
      assertEquals(";MANGER", string5);
      
      doubleMetaphone1.setMaxCodeLen((-1004));
      assertEquals((-1004), doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = "UCCES";
      String string1 = doubleMetaphone0.encode("UCCES");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("AKSS", string1);
      
      Object object0 = doubleMetaphone0.encode((Object) "UCCES");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(object0.equals((Object)string0));
      assertTrue(object0.equals((Object)string1));
      assertNotNull(object0);
      assertEquals("AKSS", object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "AKSS");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(object1.equals((Object)string0));
      assertFalse(object1.equals((Object)string1));
      assertFalse(object1.equals((Object)object0));
      assertNotNull(object1);
      assertEquals("AKS", object1);
      
      doubleMetaphone0.setMaxCodeLen((-3154));
      assertEquals((-3154), doubleMetaphone0.getMaxCodeLen());
      
      int int0 = 3131;
      doubleMetaphone0.setMaxCodeLen((-3154));
      assertEquals((-3154), doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.doubleMetaphone("CAESAR");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("_f<R4sgL!pDqzWf!", "_f<R4sgL!pDqzWf!");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("IB", (String) null, false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-836));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2);
      
      String string0 = doubleMetaphone0.encode("CC");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("K", string0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      Object object1 = doubleMetaphone1.encode((Object) "HOEK");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(object1.equals((Object)string0));
      assertNotNull(object1);
      assertEquals("HK", object1);
      
      doubleMetaphone1.setMaxCodeLen(1);
      assertEquals(1, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      
      doubleMetaphone1.setMaxCodeLen(1049);
      assertEquals(1049, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "_f<R4sgL!pDqzWf!";
      stringArray0[1] = "GH*QJ^wf3a(I_-!(2C";
      boolean boolean3 = DoubleMetaphone.contains("HOEK", 1, 82, stringArray0);
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3 == boolean2);
      assertEquals(2, stringArray0.length);
      assertFalse(boolean3);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('7');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('P');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string0 = doubleMetaphone0.encode("kzIXztbsc");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KSKS", string0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('c');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string1 = doubleMetaphone0.doubleMetaphone("CZX|");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("SKS", string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("CZX|");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("SKS", string2);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('P');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone0.setMaxCodeLen(0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals(0, int0);
      
      String string3 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertNotNull(string3);
      assertEquals("", string3);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone1.new DoubleMetaphoneResult(0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone_DoubleMetaphoneResult1.append("", "CZX|");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("ZF2C^>(v>z%xt:m");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("SFKF", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("VG[<P<+", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("FKP", string1);
      
      String string2 = "";
      String string3 = doubleMetaphone0.doubleMetaphone("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string3);
      
      Object object0 = doubleMetaphone0.encode((Object) "SFKF");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(object0.equals((Object)string1));
      assertTrue(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string2));
      assertNotNull(object0);
      assertEquals("SFKF", object0);
      
      String string4 = "L";
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "DG", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(11);
      assertEquals(11, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "MANGER";
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(11);
      assertEquals(11, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate(';');
      assertEquals(11, doubleMetaphone0.getMaxCodeLen());
      assertEquals(";", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      char char0 = 'd';
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('d');
      assertEquals(11, doubleMetaphone0.getMaxCodeLen());
      assertEquals(";d", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string1 = "kzIXztbsc";
      boolean boolean0 = false;
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("bX", "MANGER", false);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone1.new DoubleMetaphoneResult((-963));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      String string2 = "3)>|K";
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult1.append("3)>|K");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1299);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string0 = doubleMetaphone0.encode("SzHz(");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("SS", string0);
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(boolean0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("[&H)C");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("K", string1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("iY15,n4b", "~a}j_;xM", false);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      String string2 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("", string2);
      
      String string3 = doubleMetaphone0.doubleMetaphone("EN", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertNotNull(string3);
      assertEquals("AN", string3);
      
      String string4 = doubleMetaphone1.doubleMetaphone("c%zi,CT]l *;", true);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      assertNotNull(string4);
      assertEquals("KSKT", string4);
      
      doubleMetaphone0.setMaxCodeLen(2243);
      assertEquals(2243, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "[&H)C";
      stringArray0[1] = "c%zi,CT]l *;";
      boolean boolean2 = DoubleMetaphone.contains("EM", 2243, 1674, stringArray0);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertEquals(2, stringArray0.length);
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(11);
      assertEquals(11, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "MANGER");
      assertEquals(11, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("MNJR", object0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("MANGER", false);
      assertEquals(11, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string0.equals((Object)object0));
      assertNotNull(string0);
      assertEquals("MNJR", string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(79);
      assertEquals(11, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(11, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('c');
      assertEquals(11, doubleMetaphone0.getMaxCodeLen());
      assertEquals("c", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("c", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string1 = doubleMetaphone0.doubleMetaphone("oJ}_(YZhoXq!55w/#gk");
      assertEquals(11, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)object0));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("AJJKSKKK", string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("Y");
      assertEquals(11, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)object0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("A", string2);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('c');
      assertEquals(11, doubleMetaphone0.getMaxCodeLen());
      assertEquals("cc", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("c", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone0.setMaxCodeLen(79);
      assertEquals(79, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("EI");
      assertEquals(79, doubleMetaphone0.getMaxCodeLen());
      assertEquals("c", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("ccEI", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('O', 'x');
      assertEquals(79, doubleMetaphone0.getMaxCodeLen());
      assertEquals("cO", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("ccEIx", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(209);
      assertEquals(79, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult1.isComplete();
      assertEquals(79, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      boolean boolean2 = doubleMetaphone1.isDoubleMetaphoneEqual("Y", "E", true);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean2);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      int int0 = 0;
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      int int1 = 71;
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(71);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string0 = "EWSKI";
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("EWSKI");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("EWSKI", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string1 = doubleMetaphone1.encode("EWSKI");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("ASK", string1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(71);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone_DoubleMetaphoneResult1.append('6', '6');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("6", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("6", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      doubleMetaphone_DoubleMetaphoneResult0.append('u');
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("EWSKIu", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("u", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult1.append("ASK", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("S", "S");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("!hl{>o/h~mV%$v");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("LMFF", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("/M~k;S NY0,[>CnMwa^");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("MKSN", string1);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      String string2 = doubleMetaphone0.doubleMetaphone("MKSN", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("MKSN", string2);
      
      Object object0 = doubleMetaphone0.encode((Object) "LMFF");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string2));
      assertNotNull(object0);
      assertEquals("LMF", object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "LMF");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(object1.equals((Object)string2));
      assertFalse(object1.equals((Object)string1));
      assertFalse(object1.equals((Object)string0));
      assertTrue(object1.equals((Object)object0));
      assertNotNull(object1);
      assertEquals("LMF", object1);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("MKSN", "Y", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      Object object2 = doubleMetaphone0.encode((Object) "MKSN");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(object2.equals((Object)string2));
      assertFalse(object2.equals((Object)object1));
      assertFalse(object2.equals((Object)string0));
      assertFalse(object2.equals((Object)object0));
      assertTrue(object2.equals((Object)string1));
      assertNotNull(object2);
      assertEquals("MKSN", object2);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      String string3 = doubleMetaphone1.encode("EWJ/e|.,S(-e3");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)object2));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)object1));
      assertFalse(string3.equals((Object)object0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertNotNull(string3);
      assertEquals("AJS", string3);
      
      String string4 = doubleMetaphone0.encode("LMFF");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)object2));
      assertTrue(string4.equals((Object)object1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertTrue(string4.equals((Object)object0));
      assertFalse(string4.equals((Object)string2));
      assertNotNull(string4);
      assertEquals("LMF", string4);
      
      doubleMetaphone1.setMaxCodeLen(4);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(4);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
      
      boolean boolean3 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean3);
      
      String string5 = doubleMetaphone0.doubleMetaphone("MKSN", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)object1));
      assertTrue(string5.equals((Object)object2));
      assertTrue(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)object0));
      assertNotNull(string5);
      assertEquals("MKSN", string5);
      
      char char0 = doubleMetaphone0.charAt("CI", 8);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals('\u0000', char0);
      
      boolean boolean4 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertTrue(boolean4 == boolean3);
      assertTrue(boolean4 == boolean2);
      assertTrue(boolean4 == boolean1);
      assertFalse(boolean4 == boolean0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean4);
      
      char char1 = doubleMetaphone1.charAt((String) null, (-2126));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertTrue(char1 == char0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals('\u0000', char1);
      
      boolean boolean5 = doubleMetaphone1.isDoubleMetaphoneEqual("hZ)k;", "EWJ/e|.,S(-e3", true);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(boolean5 == boolean0);
      assertTrue(boolean5 == boolean4);
      assertTrue(boolean5 == boolean3);
      assertTrue(boolean5 == boolean2);
      assertTrue(boolean5 == boolean1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean5);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      int int0 = (-12437164);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "TH";
      stringArray0[1] = "TH";
      stringArray0[2] = "TH";
      stringArray0[3] = "TH";
      stringArray0[4] = "TH";
      stringArray0[5] = "TH";
      stringArray0[6] = "TH";
      stringArray0[7] = "TH";
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) "TH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("0", object0);
      
      String string0 = "";
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1039);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string1);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(1039);
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone_DoubleMetaphoneResult1.appendAlternate('S');
      assertEquals("S", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult1.appendAlternate((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("ZF2C^>(v>z%xt:m");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("SFKF", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("SFKF", "", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("ZF2C^>(v>z%xt:m", "SFKF", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2645);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("XEkrJ~");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("XEkrJ~", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('Q');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("XEkrJ~Q", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("Q", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      String string1 = doubleMetaphone1.doubleMetaphone("XEkrJ~");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("SKRJ", string1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      
      boolean boolean2 = doubleMetaphone1.isDoubleMetaphoneEqual("4GY>M,DkF@lLv", "sMry.c;b*", false);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone3);
      
      String string2 = doubleMetaphone3.encode("SKRJ");
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("SKRJ", string2);
      
      DoubleMetaphone doubleMetaphone4 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertNotNull(doubleMetaphone4);
      
      doubleMetaphone4.setMaxCodeLen(73);
      assertEquals(73, doubleMetaphone4.getMaxCodeLen());
      assertNotSame(doubleMetaphone4, doubleMetaphone1);
      assertNotSame(doubleMetaphone4, doubleMetaphone3);
      assertNotSame(doubleMetaphone4, doubleMetaphone0);
      assertNotSame(doubleMetaphone4, doubleMetaphone2);
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      
      doubleMetaphone2.setMaxCodeLen(2645);
      assertEquals(2645, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone4);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone3);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone3));
      
      boolean boolean3 = DoubleMetaphone.contains("NGRY$N@CW", 2645, 73, (String[]) null);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3);
      
      DoubleMetaphone doubleMetaphone5 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone5.getMaxCodeLen());
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone2));
      assertNotNull(doubleMetaphone5);
      
      doubleMetaphone5.setMaxCodeLen((-50553092));
      assertEquals((-50553092), doubleMetaphone5.getMaxCodeLen());
      assertNotSame(doubleMetaphone5, doubleMetaphone0);
      assertNotSame(doubleMetaphone5, doubleMetaphone4);
      assertNotSame(doubleMetaphone5, doubleMetaphone1);
      assertNotSame(doubleMetaphone5, doubleMetaphone3);
      assertNotSame(doubleMetaphone5, doubleMetaphone2);
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone2));
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(11);
      assertEquals(11, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "MANGER");
      assertEquals(11, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("MNJR", object0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("MANGER", false);
      assertEquals(11, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string0.equals((Object)object0));
      assertNotNull(string0);
      assertEquals("MNJR", string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(79);
      assertEquals(11, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(11, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(boolean0);
      
      String string1 = doubleMetaphone0.encode("GH*QJ^wf3a(I_-!(2C");
      assertEquals(11, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)object0));
      assertNotNull(string1);
      assertEquals("KKJFK", string1);
      
      Object object1 = new Object();
      assertNotNull(object1);
      
      Object object2 = doubleMetaphone0.encode((Object) "K");
      assertEquals(11, doubleMetaphone0.getMaxCodeLen());
      assertFalse(object2.equals((Object)string0));
      assertFalse(object2.equals((Object)object0));
      assertFalse(object2.equals((Object)string1));
      assertNotNull(object2);
      assertEquals("K", object2);
      
      doubleMetaphone0.setMaxCodeLen(11);
      assertEquals(11, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      doubleMetaphone1.setMaxCodeLen(1049);
      assertEquals(1049, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "GH*QJ^wf3a(I_-!(2C";
      stringArray0[1] = "GH*QJ^wf3a(I_-!(2C";
      boolean boolean1 = DoubleMetaphone.contains("K", 82, 798, stringArray0);
      assertTrue(boolean1 == boolean0);
      assertEquals(2, stringArray0.length);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) "7,ANGER");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("NKR", object0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("7,ANGER", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string0.equals((Object)object0));
      assertNotNull(string0);
      assertEquals("NKR", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("CI", "NKR");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("SCH", "IAU", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("ZF2C^>(v>z%xt:m");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("SFKF", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("SFKF", "", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("ZF2C^>(v>z%xt:m", "SFKF", false);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      String string1 = doubleMetaphone0.doubleMetaphone("", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNull(string1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2645);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('Q');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("Q", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("Q", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("Q", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("Q", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("iEK;<cAZ{2&K{9yq");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("Q", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("QiEK;<cAZ{2&K{9yq", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      String string2 = doubleMetaphone1.encode("iEK;<cAZ{2&K{9yq");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("AKKS", string2);
      
      String string3 = doubleMetaphone0.encode("AKKS");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertNotNull(string3);
      assertEquals("AKS", string3);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("iEK;<cAZ{2&K{9yq");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("QiEK;<cAZ{2&K{9yq", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("QiEK;<cAZ{2&K{9yq", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone1.new DoubleMetaphoneResult('Q');
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      boolean boolean3 = doubleMetaphone_DoubleMetaphoneResult1.isComplete();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, int0);
      
      doubleMetaphone_DoubleMetaphoneResult1.appendPrimary('Q');
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("Q", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      doubleMetaphone_DoubleMetaphoneResult1.appendPrimary("ZF2C^>(v>z%xt:m");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("QZF2C^>(v>z%xt:m", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      String string4 = doubleMetaphone0.doubleMetaphone("ZF2C^>(v>z%xt:m", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string4.equals((Object)string2));
      assertTrue(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      assertNotNull(string4);
      assertEquals("SFKF", string4);
      
      String string5 = doubleMetaphone0.encode("K<m:dcM^$");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string4));
      assertNotNull(string5);
      assertEquals("KMTK", string5);
      
      doubleMetaphone0.setMaxCodeLen((-2431));
      assertEquals((-2431), doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      String string6 = doubleMetaphone1.doubleMetaphone("AKKS", false);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string6.equals((Object)string2));
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string4));
      assertTrue(string6.equals((Object)string3));
      assertNotNull(string6);
      assertEquals("AKS", string6);
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertEquals((-2431), doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(int1 == int0);
      assertEquals((-2431), int1);
      
      char char0 = doubleMetaphone0.charAt("E", 209);
      assertEquals((-2431), doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('7');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('P');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone0.encode("kzIXztbsc");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KSKS", string0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('c');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string1 = doubleMetaphone0.doubleMetaphone("CZX|");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("SKS", string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("CZX|");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("SKS", string2);
      
      String string3 = doubleMetaphone0.doubleMetaphone("8", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertNotNull(string3);
      assertEquals("", string3);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      String string4 = doubleMetaphone1.encode("Q");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertNotNull(string4);
      assertEquals("K", string4);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      
      doubleMetaphone1.setMaxCodeLen(0);
      assertEquals(0, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      doubleMetaphone1.setMaxCodeLen(0);
      assertEquals(0, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      // Undeclared exception!
      try { 
        DoubleMetaphone.contains("K", 0, 0, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(11);
      assertEquals(11, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "7,ANGER");
      assertEquals(11, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("NKR", object0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("7,ANGER", false);
      assertEquals(11, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string0.equals((Object)object0));
      assertNotNull(string0);
      assertEquals("NKR", string0);
      
      String string1 = "CI";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("CI", "NKR");
      assertEquals(11, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string2 = doubleMetaphone0.encode("K");
      assertEquals(11, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)object0));
      assertNotNull(string2);
      assertEquals("K", string2);
      
      Object object1 = new Object();
      assertNotNull(object1);
      
      try { 
        doubleMetaphone0.encode(object1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1299);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('&');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("&", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('&');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("&&", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone0.encode("kzIXztbsc");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KSKS", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("SGJH~)", "SGJH~)", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("kzIXztbsc");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("&&kzIXztbsc", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("kzIXztbsc", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string1 = doubleMetaphone0.doubleMetaphone("kzIXztbsc");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("KSKS", string1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary(";");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("kzIXztbsc;", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("&&kzIXztbsc", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      String string2 = doubleMetaphone0.doubleMetaphone(";");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("", string2);
      
      Object object0 = doubleMetaphone0.encode((Object) "kzIXztbsc");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string2));
      assertTrue(object0.equals((Object)string0));
      assertNotNull(object0);
      assertEquals("KSKS", object0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("KSKS", (String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      
      doubleMetaphone2.setMaxCodeLen(1299);
      assertEquals(1299, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      
      String string3 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("kzIXztbsc;", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("&&kzIXztbsc", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)object0));
      assertNotNull(string3);
      assertEquals("&&kzIXztbsc", string3);
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone3);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone1.new DoubleMetaphoneResult(1299);
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("yl", "");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("kzIXztbsc;yl", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("&&kzIXztbsc", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone0, doubleMetaphone3);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = "ZF2C^>(v>z%xt:m";
      String string1 = doubleMetaphone0.encode("TCH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("X", string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("TCH", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("X", string2);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      String string3 = doubleMetaphone1.doubleMetaphone("org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertNotNull(string3);
      assertEquals("ARKP", string3);
      
      String string4 = doubleMetaphone1.doubleMetaphone("VG[<P<+");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertNotNull(string4);
      assertEquals("FKP", string4);
      
      Object object0 = doubleMetaphone1.encode((Object) "");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNull(object0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("ZF2C^>(v>z%xt:m", "X");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(boolean0);
      
      Object object1 = new Object();
      assertNotNull(object1);
      
      try { 
        doubleMetaphone0.encode(object1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("u_Geu,|O0`\"]kQW3{\"", "u_Geu,|O0`\"]kQW3{\"");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("u_Geu,|O0`\"]kQW3{\"");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("AJKK", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("u_Geu,|O0`\"]kQW3{\"");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("AJKK", string1);
      
      String string2 = doubleMetaphone0.encode((String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string2);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("AJKK", (String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("u_Geu,|O0`\"]kQW3{\"", "u_Geu,|O0`\"]kQW3{\"");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2);
      
      String string3 = doubleMetaphone0.doubleMetaphone("PNXX@JZA");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertNotNull(string3);
      assertEquals("NKSS", string3);
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("X", "9BuhGHpiL^'ixSPM", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3 == boolean2);
      assertFalse(boolean3);
      
      String string4 = doubleMetaphone0.encode((String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string4);
      
      String string5 = doubleMetaphone0.doubleMetaphone("u_Geu,|O0`\"]kQW3{\"");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string3));
      assertTrue(string5.equals((Object)string0));
      assertNotNull(string5);
      assertEquals("AJKK", string5);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      try { 
        doubleMetaphone1.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("u_Geu,|O0`\"]kQW3{\"", "u_Geu,|O0`\"]kQW3{\"");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("u_Geu,|O0`\"]kQW3{\"");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("AJKK", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("u_Geu,|O0`\"]kQW3{\"");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("AJKK", string1);
      
      String string2 = doubleMetaphone0.encode((String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string2);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("AJKK", (String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("u_Geu,|O0`\"]kQW3{\"", "u_Geu,|O0`\"]kQW3{\"");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      String string3 = doubleMetaphone1.doubleMetaphone("AJKK");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertNotNull(string3);
      assertEquals("AK", string3);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "}={~2(H", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1299);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('&');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("&", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('&');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("&&", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone0.encode("kzIXztbsc");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KSKS", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("SGJH~)", "SGJH~)", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("kzIXztbsc");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("&&kzIXztbsc", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("kzIXztbsc", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string1 = doubleMetaphone0.doubleMetaphone("kzIXztbsc");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("KSKS", string1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "KSKS", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      String string2 = doubleMetaphone1.doubleMetaphone("NRFB}m9Y8q", false);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("NRFP", string2);
      
      String string3 = doubleMetaphone0.doubleMetaphone("z3?ZT?MGP )q", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertNotNull(string3);
      assertEquals("SSTM", string3);
      
      String string4 = doubleMetaphone1.doubleMetaphone((String) null, true);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNull(string4);
      
      doubleMetaphone0.setMaxCodeLen(1);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      char char0 = doubleMetaphone1.charAt("Pz^3Ns{1KiR%$&^Zl!W", 65);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals('\u0000', char0);
      
      Object object0 = doubleMetaphone1.encode((Object) "org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string3));
      assertFalse(object0.equals((Object)string2));
      assertNotNull(object0);
      assertEquals("ARKP", object0);
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertEquals("&&kzIXztbsc", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("kzIXztbsc", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = "_f<R4sgL!pDqzWf!";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("_f<R4sgL!pDqzWf!", "_f<R4sgL!pDqzWf!");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-836));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      
      String string1 = null;
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("IB", (String) null, false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2);
      
      Object object0 = doubleMetaphone0.encode((Object) "ALLE");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(object0.equals((Object)string0));
      assertNotNull(object0);
      assertEquals("AL", object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "IB");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string0));
      assertNotNull(object1);
      assertEquals("AP", object1);
      
      String string2 = "";
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append((String) null, "ALLE");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("ZF2C^>(v>z%xt:m");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("SFKF", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("SFKF", "", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("ZF2C^>(v>z%xt:m", "SFKF", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2645);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("XEkrJ~");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("XEkrJ~", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('Q');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("Q", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("XEkrJ~Q", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      String string1 = doubleMetaphone1.doubleMetaphone("");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNull(string1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      
      boolean boolean2 = doubleMetaphone1.isDoubleMetaphoneEqual("4GY>M,DkF@lLv", "sMry.c;b*", false);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      
      String string2 = doubleMetaphone2.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("ARKP", string2);
      
      String string3 = doubleMetaphone2.doubleMetaphone("ZF2C^>(v>z%xt:m", false);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string2));
      assertTrue(string3.equals((Object)string0));
      assertNotNull(string3);
      assertEquals("SFKF", string3);
      
      String string4 = doubleMetaphone2.doubleMetaphone("S;R9R2l", true);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      assertNotNull(string4);
      assertEquals("SRRL", string4);
      
      doubleMetaphone1.setMaxCodeLen(72);
      assertEquals(72, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      char char0 = doubleMetaphone2.charAt("ZA", 88);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals('\u0000', char0);
      
      try { 
        doubleMetaphone0.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) "xX@jzA");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("SKSS", object0);
      
      String string0 = doubleMetaphone0.encode("BACHER");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string0.equals((Object)object0));
      assertNotNull(string0);
      assertEquals("PKR", string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(16);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      int int0 = 11;
      doubleMetaphone0.setMaxCodeLen(11);
      assertEquals(11, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "MANGER");
      assertEquals(11, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("MNJR", object0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("MANGER", false);
      assertEquals(11, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string0.equals((Object)object0));
      assertNotNull(string0);
      assertEquals("MNJR", string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(11);
      assertEquals(11, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      char char0 = 'l';
      doubleMetaphone_DoubleMetaphoneResult0.append('l', 'l');
      assertEquals(11, doubleMetaphone0.getMaxCodeLen());
      assertEquals("l", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("l", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('l');
      assertEquals(11, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ll", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("ll", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("MANGER");
      assertEquals(11, doubleMetaphone0.getMaxCodeLen());
      assertEquals("llMANGER", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("ll", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string1 = doubleMetaphone0.doubleMetaphone(" %-62e7igHp");
      assertEquals(11, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)object0));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("P", string1);
      
      String string2 = "";
      Object object1 = doubleMetaphone0.encode((Object) "");
      assertEquals(11, doubleMetaphone0.getMaxCodeLen());
      assertNull(object1);
      
      try { 
        doubleMetaphone0.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string1 = doubleMetaphone0.encode("ac:kczX|73");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("AKKS", string1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertTrue(boolean0);
      
      char char0 = 'c';
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult2 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult2);
      
      doubleMetaphone_DoubleMetaphoneResult2.appendAlternate('B');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      
      doubleMetaphone0.setMaxCodeLen(2381);
      assertEquals(2381, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('e', 'd');
      assertEquals(2381, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult2);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      
      String string2 = doubleMetaphone0.encode("");
      assertEquals(2381, doubleMetaphone0.getMaxCodeLen());
      assertNull(string2);
      
      doubleMetaphone0.setMaxCodeLen(0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult1.appendAlternate('.');
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult2);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("YSL");
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult2);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.charAt((String) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen((-1));
      assertEquals((-1), doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "org.apache.commons.codec.EncoderException";
      int int0 = (-3110);
      String string1 = "KN3'G^H2/";
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        doubleMetaphone0.doubleMetaphone("KN3'G^H2/", false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = "_f<R4sgL!pDqzWf!";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("_f<R4sgL!pDqzWf!", "_f<R4sgL!pDqzWf!");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-836));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('\'');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('U');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string1 = doubleMetaphone0.doubleMetaphone("IB");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("AP", string1);
      
      int int0 = 79;
      doubleMetaphone0.setMaxCodeLen(79);
      assertEquals(79, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("x");
      assertEquals(79, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("S", string2);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(74);
      assertEquals(79, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult2 = doubleMetaphone1.new DoubleMetaphoneResult((-836));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult2);
      
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult2.append("", "Q9e");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1299);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('&');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("&", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('&');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("&&", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone0.encode("kzIXztbsc");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KSKS", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("SGJH~)", "SGJH~)", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("kzIXztbsc");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("&&kzIXztbsc", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("kzIXztbsc", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      Object object0 = doubleMetaphone0.encode((Object) "KSKS");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(object0.equals((Object)string0));
      assertNotNull(object0);
      assertEquals("KSKS", object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "kzIXztbsc");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(object1.equals((Object)string0));
      assertTrue(object1.equals((Object)object0));
      assertNotNull(object1);
      assertEquals("KSKS", object1);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("KSKS", "KSKS");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("&&kzIXztbscKSKS", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("kzIXztbscKSKS", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("&&kzIXztbscKSKS", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("kzIXztbscKSKS", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("KSKS");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("kzIXztbscKSKS", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("&&kzIXztbscKSKSKSKS", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('&');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("&&kzIXztbscKSKSKSKS&", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("kzIXztbscKSKS", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("?nw,S1gln");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("&&kzIXztbscKSKSKSKS&?nw,S1gln", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("kzIXztbscKSKS", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("PSYRL9QP9BP.MJZ-Y',2K");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("&&kzIXztbscKSKSKSKS&?nw,S1glnPSYRL9QP9BP.MJZ-Y',2K", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("kzIXztbscKSKS", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string1 = doubleMetaphone0.encode("&2 gt:tmq5y:&N");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)object1));
      assertFalse(string1.equals((Object)object0));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("KTTM", string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("rS;eH", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)object1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)object0));
      assertNotNull(string2);
      assertEquals("RS", string2);
      
      String string3 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("&&kzIXztbscKSKSKSKS&?nw,S1glnPSYRL9QP9BP.MJZ-Y',2K", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("kzIXztbscKSKS", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)object0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)object1));
      assertNotNull(string3);
      assertEquals("&&kzIXztbscKSKSKSKS&?nw,S1glnPSYRL9QP9BP.MJZ-Y',2K", string3);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('J');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("&&kzIXztbscKSKSKSKS&?nw,S1glnPSYRL9QP9BP.MJZ-Y',2KJ", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("kzIXztbscKSKS", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = "#9]@rQ$h!fS48/";
      String string1 = doubleMetaphone0.doubleMetaphone("#9]@rQ$h!fS48/", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("RKFS", string1);
      
      String string2 = "6W_.8VoG[;dDi~z";
      String string3 = "PSRG.A";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("6W_.8VoG[;dDi~z", "PSRG.A", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-3880));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('y');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append((String) null, "PSRG.A");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("ZF2C^>(v>z%xt:m");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("SFKF", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("SFKF", "", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("i*e$", "Q.c:x?bgiK5L /mdVvL", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2);
      
      boolean boolean3 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3);
      
      doubleMetaphone1.setMaxCodeLen(1798);
      assertEquals(1798, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      doubleMetaphone_DoubleMetaphoneResult0.append('/', 'T');
      assertEquals(1798, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      boolean boolean4 = doubleMetaphone0.isDoubleMetaphoneEqual("ZF2C^>(v>z%xt:m", "uW6M*!8pJ#tX%");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean4 == boolean1);
      assertFalse(boolean4 == boolean3);
      assertFalse(boolean4 == boolean2);
      assertTrue(boolean4 == boolean0);
      assertFalse(boolean4);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("");
      assertEquals(1798, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string1 = doubleMetaphone1.doubleMetaphone("}", false);
      assertEquals(1798, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("", string1);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("hz|:8", "");
      assertEquals(1798, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string2 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertEquals(1798, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("", string2);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('f');
      assertEquals(1798, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      boolean boolean5 = doubleMetaphone0.isDoubleMetaphoneEqual("lx/MuN){#Cq", "5_egqOY4f+yk", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(boolean5 == boolean2);
      assertTrue(boolean5 == boolean0);
      assertTrue(boolean5 == boolean4);
      assertTrue(boolean5 == boolean1);
      assertFalse(boolean5 == boolean3);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(boolean5);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "uW6M*!8pJ#tX%", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("JlP#AK<J6]");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("JLPK", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("JlP#AK<J6]", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("ALPK", string1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(70);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone0.setMaxCodeLen(70);
      assertEquals(70, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("ak}j?rRg");
      assertEquals(70, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ak}j?rRg", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string2 = doubleMetaphone0.doubleMetaphone("MMec0u8*O#t<", true);
      assertEquals(70, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("MKT", string2);
      
      doubleMetaphone_DoubleMetaphoneResult0.append(';', ',');
      assertEquals(70, doubleMetaphone0.getMaxCodeLen());
      assertEquals(",", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("ak}j?rRg;", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("MMec0u8*O#t<", "MMec0u8*O#t<");
      assertEquals(70, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ak}j?rRg;MMec0u8*O#t<", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals(",MMec0u8*O#t<", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("MKT");
      assertEquals(70, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ak}j?rRg;MMec0u8*O#t<", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals(",MMec0u8*O#t<MKT", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("MMec0u8*O#t<", "d2ouYiSHz");
      assertEquals(70, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ak}j?rRg;MMec0u8*O#t<MMec0u8*O#t<", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals(",MMec0u8*O#t<MKTd2ouYiSHz", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      char char0 = doubleMetaphone0.charAt("", 3480);
      assertEquals(70, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('%');
      assertEquals(70, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ak}j?rRg;MMec0u8*O#t<MMec0u8*O#t<%", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals(",MMec0u8*O#t<MKTd2ouYiSHz", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone0.setMaxCodeLen(3480);
      assertEquals(3480, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("");
      assertEquals(3480, doubleMetaphone0.getMaxCodeLen());
      assertNull(string3);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("HOLZ", "");
      assertEquals(3480, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("d2ouYiSHz", "ACH", true);
      assertEquals(3480, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      String string4 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertEquals(3480, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ak}j?rRg;MMec0u8*O#t<MMec0u8*O#t<%", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals(",MMec0u8*O#t<MKTd2ouYiSHz", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertNotNull(string4);
      assertEquals(",MMec0u8*O#t<MKTd2ouYiSHz", string4);
      
      String string5 = doubleMetaphone0.doubleMetaphone("MKi>@t>t} ", true);
      assertEquals(3480, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string2));
      assertNotNull(string5);
      assertEquals("MKTT", string5);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("JlP#AK<J6]", "org.apache.commons.codec.EncoderException", true);
      assertEquals(3480, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      
      boolean boolean3 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(3480, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ak}j?rRg;MMec0u8*O#t<MMec0u8*O#t<%", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals(",MMec0u8*O#t<MKTd2ouYiSHz", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3);
      
      boolean boolean4 = doubleMetaphone0.isDoubleMetaphoneEqual(",MMec0u8*O#t<MKTd2ouYiSHz", "W", false);
      assertEquals(3480, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean4 == boolean2);
      assertTrue(boolean4 == boolean3);
      assertTrue(boolean4 == boolean1);
      assertTrue(boolean4 == boolean0);
      assertFalse(boolean4);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("ZF2C^>(v>z%xt:m");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("SFKF", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("SFKF", "", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("ZF2C^>(v>z%xt:m", "SFKF", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      String string1 = doubleMetaphone0.doubleMetaphone("TTH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("0", string1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      String string2 = doubleMetaphone1.doubleMetaphone("KN", false);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("N", string2);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("0", "TTH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("T", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("0", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("ZF2C^>(v>z%xt:m");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("SFKF", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("JT~'9N{nn");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("JTNN", string1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      String string2 = doubleMetaphone1.encode("+");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("", string2);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1299);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('&');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("&", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('&');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("&&", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone0.encode("kzIXztbsc");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KSKS", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("KSKS", "EI");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('c');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("&&c", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("c", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("KSKS");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("&&c", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("cKSKS", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string1 = doubleMetaphone0.doubleMetaphone("E@cHEyr%#(Nb");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("AXRN", string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("E@cHEyr%#(Nb");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("AXRN", string2);
      
      Object object0 = doubleMetaphone0.encode((Object) "EI");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(object0.equals((Object)string2));
      assertFalse(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string0));
      assertNotNull(object0);
      assertEquals("A", object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "A");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(object1.equals((Object)string1));
      assertTrue(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string2));
      assertFalse(object1.equals((Object)string0));
      assertNotNull(object1);
      assertEquals("A", object1);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("kzIXztbsc");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("&&c", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("cKSKSkzIXztbsc", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("WR", "EI");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('c');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("cKSKSkzIXztbsc", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("&&cc", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "org.apache.commons.codec.EncoderException", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2);
      
      String string3 = doubleMetaphone0.doubleMetaphone((String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string3);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult((-411));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("org.apache.commons.codec.EncoderException", "OM");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("&&ccOM", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("cKSKSkzIXztbscorg.apache.commons.codec.EncoderException", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string1 = doubleMetaphone0.encode("ac:kczX|73");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("AKKS", string1);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('6', '6');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('6');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("ac:kczX|73");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string2 = doubleMetaphone0.doubleMetaphone("D9TAKDz*m'rm$2");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("TTKT", string2);
      
      String string3 = doubleMetaphone0.doubleMetaphone("TTKT", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertNotNull(string3);
      assertEquals("TKT", string3);
      
      String string4 = doubleMetaphone0.encode("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string4);
      
      String string5 = doubleMetaphone0.doubleMetaphone("TKT", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string1));
      assertNotNull(string5);
      assertEquals("TKT", string5);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('d');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string6 = doubleMetaphone0.doubleMetaphone("ISL", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string6.equals((Object)string2));
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string1));
      assertNotNull(string6);
      assertEquals("AL", string6);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("TKT", "U\"5!n3S", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1299);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('&');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("&", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('&');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("&&", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone0.encode("kzIXztbsc");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KSKS", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("SGJH~)", "SGJH~)", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("kzIXztbsc");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("kzIXztbsc", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("&&kzIXztbsc", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      Object object0 = doubleMetaphone0.encode((Object) "KSKS");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(object0.equals((Object)string0));
      assertNotNull(object0);
      assertEquals("KSKS", object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "kzIXztbsc");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(object1.equals((Object)object0));
      assertTrue(object1.equals((Object)string0));
      assertNotNull(object1);
      assertEquals("KSKS", object1);
      
      doubleMetaphone0.setMaxCodeLen(79);
      assertEquals(79, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("kzIXztbsc");
      assertEquals(79, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)object1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)object0));
      assertNotNull(string1);
      assertEquals("KSKSSTPSK", string1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(532);
      assertEquals(79, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult2 = doubleMetaphone0.new DoubleMetaphoneResult(79);
      assertEquals(79, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult2);
      
      doubleMetaphone_DoubleMetaphoneResult2.append("SGJH~)", "KSKS");
      assertEquals(79, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SGJH~)", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertEquals("KSKS", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual(">1:E99H\"%#WVN[o8Pc", "SGJH~)", true);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual(">1:E99H\"%#WVN[o8Pc", "3SS+8p&&m,4c<{,tI", false);
      assertEquals(79, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(boolean2);
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(84);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('C');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("C", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("C", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone1.new DoubleMetaphoneResult(84);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone_DoubleMetaphoneResult1.appendPrimary("E@cHEyr%#(Nb");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      String string0 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotNull(string0);
      assertEquals("ARKP", string0);
      
      String string1 = doubleMetaphone1.doubleMetaphone("E@cHEyr%#(Nb");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("AXRN", string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("sv+sWl!>w#9t:7Y$'N", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("SFSL", string2);
      
      String string3 = doubleMetaphone0.encode("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNull(string3);
      
      String string4 = doubleMetaphone1.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertNotNull(string4);
      assertEquals("ARKP", string4);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('l');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("Cl", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("C", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      
      String string5 = doubleMetaphone2.doubleMetaphone("E@cHEyr%#(Nb", false);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertTrue(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string0));
      assertNotNull(string5);
      assertEquals("AXRN", string5);
      
      boolean boolean2 = doubleMetaphone1.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "sv+sWl!>w#9t:7Y$'N", false);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean2);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("EI");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ClEI", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("CEI", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult2 = doubleMetaphone0.new DoubleMetaphoneResult(84);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult2);
      
      boolean boolean3 = doubleMetaphone_DoubleMetaphoneResult2.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3);
      
      boolean boolean4 = doubleMetaphone0.isDoubleMetaphoneEqual("E@cHEyr%#(Nb", "EI", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean4 == boolean3);
      assertTrue(boolean4 == boolean0);
      assertFalse(boolean4 == boolean1);
      assertTrue(boolean4 == boolean2);
      assertFalse(boolean4);
      
      Object object0 = doubleMetaphone2.encode((Object) "AXRN");
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(object0.equals((Object)string4));
      assertFalse(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string5));
      assertFalse(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string2));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(object0);
      assertEquals("AKSR", object0);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("u_Geu,|O0`\"]kQW3{\"", "u_Geu,|O0`\"]kQW3{\"");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("u_Geu,|O0`\"]kQW3{\"");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("AJKK", string0);
      
      String string1 = doubleMetaphone0.encode("AJKK");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("AK", string1);
      
      String string2 = doubleMetaphone0.encode((String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string2);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("u_Geu,|O0`\"]kQW3{\"", "u_Geu,|O0`\"]kQW3{\"");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      
      String string3 = "-yyJA[pgdx:bctZZ";
      String string4 = doubleMetaphone0.doubleMetaphone("-yyJA[pgdx:bctZZ");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertNotNull(string4);
      assertEquals("JPKT", string4);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("_fp(rmRH5^i#[4:");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("FPRM", string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      char char0 = '|';
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('|');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string1 = "";
      String string2 = doubleMetaphone0.doubleMetaphone("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string2);
      
      Object object0 = doubleMetaphone0.encode((Object) "");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(object0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("ZF2C^>(v>z%xt:m");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("SFKF", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("SFKF", "", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("ZF2C^>(v>z%xt:m", "SFKF", false);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2645);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('Q');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("Q", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("Q", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      String string1 = doubleMetaphone1.encode("iEK;<cAZ{2&K{9yq");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("AKKS", string1);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("iEK;<cAZ{2&K{9yq");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("QiEK;<cAZ{2&K{9yq", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("Q", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone1.new DoubleMetaphoneResult('Q');
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult1.isComplete();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, int0);
      
      doubleMetaphone_DoubleMetaphoneResult1.appendPrimary('N');
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("N", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("SFKF");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("QiEK;<cAZ{2&K{9yq", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("QSFKF", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      
      String string2 = doubleMetaphone1.doubleMetaphone("<}JoDcysEN3&{k7f", false);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("JTSS", string2);
      
      String string3 = doubleMetaphone0.encode("iEK;<cAZ{2&K{9yq");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertNotNull(string3);
      assertEquals("AKKS", string3);
      
      doubleMetaphone0.setMaxCodeLen((-1693));
      assertEquals((-1693), doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "z~ ";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "";
      stringArray0[8] = "";
      boolean boolean0 = DoubleMetaphone.contains("z~ ", (-76388999), (-836), stringArray0);
      assertEquals(9, stringArray0.length);
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("WR#Q%AA9E", "", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("ZF2C^>(v>z%xt:m");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("SFKF", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("SFKF", "", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("ZF2C^>(v>z%xt:m", "SFKF", false);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2645);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('Q');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("Q", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("Q", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      String string1 = doubleMetaphone1.encode("iEK;<cAZ{2&K{9yq");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("AKKS", string1);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("iEK;<cAZ{2&K{9yq");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("QiEK;<cAZ{2&K{9yq", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("Q", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone1.new DoubleMetaphoneResult('Q');
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult1.isComplete();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, int0);
      
      doubleMetaphone_DoubleMetaphoneResult1.appendPrimary('N');
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("N", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("SFKF");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("QiEK;<cAZ{2&K{9yq", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("QSFKF", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      
      String string2 = doubleMetaphone1.encode("<}JoDcysEN3&{k7f");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("JTSS", string2);
      
      int int1 = doubleMetaphone1.getMaxCodeLen();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(int1 == int0);
      assertEquals(4, int1);
      
      String string3 = doubleMetaphone1.doubleMetaphone("#Q%aa9E");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(string3);
      assertEquals("K", string3);
      
      char char0 = doubleMetaphone0.charAt("", 1238);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("g%@BbATKd,wkF");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KPTK", string0);
      
      doubleMetaphone0.setMaxCodeLen(51);
      assertEquals(51, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("", 0);
      assertEquals(51, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(51);
      assertEquals(51, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('\u0000');
      assertEquals(51, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("\u0000", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("wD2#$f=<", "wD2#$f=<");
      assertEquals(51, doubleMetaphone0.getMaxCodeLen());
      assertEquals("\u0000wD2#$f=<", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("wD2#$f=<", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("", "");
      assertEquals(51, doubleMetaphone0.getMaxCodeLen());
      assertEquals("\u0000wD2#$f=<", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("wD2#$f=<", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string1 = doubleMetaphone0.doubleMetaphone("zY/^Q!");
      assertEquals(51, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("SK", string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("");
      assertEquals(51, doubleMetaphone0.getMaxCodeLen());
      assertNull(string2);
      
      String string3 = doubleMetaphone0.encode("");
      assertEquals(51, doubleMetaphone0.getMaxCodeLen());
      assertNull(string3);
      
      char char1 = doubleMetaphone0.charAt("jS$ZqH}D7gXZ'T%Y", 51);
      assertEquals(51, doubleMetaphone0.getMaxCodeLen());
      assertTrue(char1 == char0);
      assertEquals('\u0000', char1);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("ZF2C^>(v>z%xt:m");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("SFKF", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("SFKF", "", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("TTH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("0", string1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("RG.A", "RG.A", false);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      String string2 = doubleMetaphone1.doubleMetaphone("krL9QP9bp.mjZ-y',2K", false);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("KRLK", string2);
      
      String string3 = doubleMetaphone1.doubleMetaphone("KRLK", true);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertTrue(string3.equals((Object)string2));
      assertNotNull(string3);
      assertEquals("KRLK", string3);
      
      String string4 = doubleMetaphone0.encode("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNull(string4);
      
      doubleMetaphone1.setMaxCodeLen((-4942));
      assertEquals((-4942), doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(75);
      assertEquals(75, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("DoubleMetaphone encode parameter is not of type String");
      assertEquals(75, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("TPLMTFNNKTPRMTRSNTFTPSTRNK", string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(75);
      assertEquals(75, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('k', '>');
      assertEquals(75, doubleMetaphone0.getMaxCodeLen());
      assertEquals("k", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals(">", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(75, doubleMetaphone0.getMaxCodeLen());
      assertEquals("k", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals(">", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("", "DoubleMetaphone encode parameter is not of type String");
      assertEquals(75, doubleMetaphone0.getMaxCodeLen());
      assertEquals(">DoubleMetaphone encode parameter is not of type String", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("k", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string1 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertEquals(75, doubleMetaphone0.getMaxCodeLen());
      assertEquals(">DoubleMetaphone encode parameter is not of type String", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("k", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("k", string1);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("k");
      assertEquals(75, doubleMetaphone0.getMaxCodeLen());
      assertEquals("k", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals(">DoubleMetaphone encode parameter is not of type Stringk", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "f[ap6=iIaANwPt";
      boolean boolean1 = DoubleMetaphone.contains("", 1363, 8, stringArray0);
      assertTrue(boolean1 == boolean0);
      assertEquals(3, stringArray0.length);
      assertFalse(boolean1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("f[ap6=iIaANwPt");
      assertEquals(75, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("FPNPT", string2);
      
      char char0 = doubleMetaphone0.charAt("", 8);
      assertEquals(75, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("JlP#AK<J6]");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("JLPK", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("JlP#AK<J6]", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("ALPK", string1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(70);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone0.setMaxCodeLen(70);
      assertEquals(70, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("ak}j?rRg");
      assertEquals(70, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ak}j?rRg", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string2 = doubleMetaphone0.doubleMetaphone("MMec0u8*O#t<", true);
      assertEquals(70, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("MKT", string2);
      
      doubleMetaphone_DoubleMetaphoneResult0.append(';', ',');
      assertEquals(70, doubleMetaphone0.getMaxCodeLen());
      assertEquals(",", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("ak}j?rRg;", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("MMec0u8*O#t<", "MMec0u8*O#t<");
      assertEquals(70, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ak}j?rRg;MMec0u8*O#t<", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals(",MMec0u8*O#t<", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("MKT");
      assertEquals(70, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ak}j?rRg;MMec0u8*O#t<", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals(",MMec0u8*O#t<MKT", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("MMec0u8*O#t<", "d2ouYiSHz");
      assertEquals(70, doubleMetaphone0.getMaxCodeLen());
      assertEquals(",MMec0u8*O#t<MKTd2ouYiSHz", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("ak}j?rRg;MMec0u8*O#t<MMec0u8*O#t<", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      char char0 = doubleMetaphone0.charAt("", 3480);
      assertEquals(70, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('%');
      assertEquals(70, doubleMetaphone0.getMaxCodeLen());
      assertEquals(",MMec0u8*O#t<MKTd2ouYiSHz", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("ak}j?rRg;MMec0u8*O#t<MMec0u8*O#t<%", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone0.setMaxCodeLen(3480);
      assertEquals(3480, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("");
      assertEquals(3480, doubleMetaphone0.getMaxCodeLen());
      assertNull(string3);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("JLPK", "d2ouYiSHz", true);
      assertEquals(3480, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("HOLZ", "");
      assertEquals(3480, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      String string4 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertEquals(3480, doubleMetaphone0.getMaxCodeLen());
      assertEquals(",MMec0u8*O#t<MKTd2ouYiSHz", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("ak}j?rRg;MMec0u8*O#t<MMec0u8*O#t<%", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertNotNull(string4);
      assertEquals(",MMec0u8*O#t<MKTd2ouYiSHz", string4);
      
      String string5 = doubleMetaphone0.doubleMetaphone("MKi>@t>t} ", true);
      assertEquals(3480, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string0));
      assertNotNull(string5);
      assertEquals("MKTT", string5);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "]!", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("JlP#AK<J6]");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("JLPK", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("JlP#AK<J6]", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("JLPK", string1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(70);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone0.setMaxCodeLen(70);
      assertEquals(70, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("ak}j?rRg");
      assertEquals(70, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("ak}j?rRg", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('d');
      assertEquals(70, doubleMetaphone0.getMaxCodeLen());
      assertEquals("d", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("ak}j?rRg", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone0.setMaxCodeLen(70);
      assertEquals(70, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('!', 'a');
      assertEquals(70, doubleMetaphone0.getMaxCodeLen());
      assertEquals("da", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("ak}j?rRg!", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      String string2 = doubleMetaphone1.encode("org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("ARKP", string2);
      
      doubleMetaphone0.setMaxCodeLen(59);
      assertEquals(59, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("ak}j?rRg");
      assertEquals(59, doubleMetaphone0.getMaxCodeLen());
      assertEquals("daak}j?rRg", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("ak}j?rRg!", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      char char0 = doubleMetaphone0.charAt("JLPK", 0);
      assertEquals(59, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals('J', char0);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("JLPK", "ak}j?rRg", false);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1299);
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('&');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('&');
      doubleMetaphone0.encode("kzIXztbsc");
      doubleMetaphone0.isDoubleMetaphoneEqual("KSKS", "EI");
      doubleMetaphone_DoubleMetaphoneResult0.append('c');
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("KSKS");
      doubleMetaphone0.doubleMetaphone("E@cHEyr%#(Nb");
      doubleMetaphone0.doubleMetaphone("E@cHEyr%#(Nb");
      doubleMetaphone0.doubleMetaphone("AXRN", false);
      doubleMetaphone0.encode("");
      doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", true);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('d');
      doubleMetaphone0.doubleMetaphone("M", false);
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "M", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode("JlP#AK<J6]");
      doubleMetaphone0.doubleMetaphone("JlP#AK<J6]", true);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(70);
      doubleMetaphone0.setMaxCodeLen(70);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("ak}j?rRg");
      doubleMetaphone0.doubleMetaphone("MMec0u8*O#t<", true);
      doubleMetaphone_DoubleMetaphoneResult0.append(';', ',');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("MKT");
      doubleMetaphone_DoubleMetaphoneResult0.append("MMec0u8*O#t<", "d2ouYiSHz");
      doubleMetaphone0.charAt("", 3480);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('%');
      doubleMetaphone0.setMaxCodeLen(3480);
      doubleMetaphone0.doubleMetaphone("");
      doubleMetaphone0.isDoubleMetaphoneEqual("HOLZ", "");
      doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      doubleMetaphone0.doubleMetaphone("MKi>@t>t} ", true);
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("vdwk)-AhM", "MKT", false);
      assertEquals(3480, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1299);
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('&');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('&');
      doubleMetaphone0.encode("kzIXztbsc");
      doubleMetaphone_DoubleMetaphoneResult0.append('c');
      doubleMetaphone0.doubleMetaphone("E@cHEyr%#(Nb");
      doubleMetaphone0.doubleMetaphone("E@cHEyr%#(Nb");
      doubleMetaphone0.doubleMetaphone("AXRN", true);
      doubleMetaphone0.encode("");
      doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", true);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('d');
      doubleMetaphone0.setMaxCodeLen((-1336));
      boolean boolean0 = DoubleMetaphone.contains("", (-2508), (-1336), (String[]) null);
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("ARKP");
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      boolean boolean1 = DoubleMetaphone.contains("KSKS", (-1336), 9, (String[]) null);
      assertTrue(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      int int0 = 3446;
      String string0 = "R?s?ZC=\"K";
      doubleMetaphone0.encode("R?s?ZC=\"K");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(3446);
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.appendPrimary((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.isDoubleMetaphoneEqual("pn~uB-Q[GK%[wra?`", "pn~uB-Q[GK%[wra?`", false);
      doubleMetaphone0.doubleMetaphone("L3z", true);
      doubleMetaphone0.encode("FvVnHL~,(0(^67]=Gh");
      doubleMetaphone0.getMaxCodeLen();
      doubleMetaphone0.doubleMetaphone((String) null);
      doubleMetaphone0.getMaxCodeLen();
      doubleMetaphone0.doubleMetaphone("FvVnHL~,(0(^67]=Gh");
      doubleMetaphone0.isDoubleMetaphoneEqual("L3z", "Kp&JL71ZZ6rW3T\"");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(370);
      doubleMetaphone_DoubleMetaphoneResult0.append("FvVnHL~,(0(^67]=Gh");
      doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("Kp&JL71ZZ6rW3T\"");
      doubleMetaphone0.encode((Object) "FvVnHL~,(0(^67]=Gh");
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('8');
      doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Kp&JL71ZZ6rW3T\"";
      stringArray0[1] = "pn~uB-Q[GK%[wra?`";
      // Undeclared exception!
      try { 
        DoubleMetaphone.contains("^.ojps4t*@", 4, (-2946), stringArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.append("org.apache.commons.codec.EncoderException");
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.setMaxCodeLen(51);
      doubleMetaphone0.charAt("", 0);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(51);
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('\u0000');
      doubleMetaphone_DoubleMetaphoneResult0.append("wD2#$f=<", "wD2#$f=<");
      doubleMetaphone_DoubleMetaphoneResult0.append("", "");
      doubleMetaphone0.doubleMetaphone("zY/^Q!");
      doubleMetaphone0.doubleMetaphone("");
      doubleMetaphone0.encode("");
      doubleMetaphone0.charAt("jS$ZqH}D7gXZ'T%Y", 51);
      assertEquals(51, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      String string0 = null;
      int int0 = 0;
      String[] stringArray0 = new String[2];
      stringArray0[0] = null;
      stringArray0[1] = null;
      // Undeclared exception!
      try { 
        DoubleMetaphone.contains((String) null, 0, (-2187), stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "_f<R4sgL!pDqzWf!";
      doubleMetaphone0.isDoubleMetaphoneEqual("_f<R4sgL!pDqzWf!", "_f<R4sgL!pDqzWf!");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-836));
      String string1 = "IB";
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append("IB", "IB");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1565);
      doubleMetaphone0.isDoubleMetaphoneEqual("SUGAR", "S\",#@5h(/n");
      doubleMetaphone0.encode("SUGAR");
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('9');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('9');
      doubleMetaphone0.setMaxCodeLen(8);
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('m');
      assertEquals("9m", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.setMaxCodeLen(75);
      doubleMetaphone0.doubleMetaphone("DoubleMetaphone encode parameter is not of type String");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(75);
      doubleMetaphone_DoubleMetaphoneResult0.append('k', '>');
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone_DoubleMetaphoneResult0.append("", "DoubleMetaphone encode parameter is not of type String");
      doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("k");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "f[ap6=iIaANwPt";
      DoubleMetaphone.contains("", 1363, 8, stringArray0);
      doubleMetaphone0.encode("f[ap6=iIaANwPt");
      char char0 = doubleMetaphone0.charAt("", 8);
      assertEquals(75, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.setMaxCodeLen((-1640));
      doubleMetaphone0.charAt("Oq3)c[B *+YT#mwY8", (-1640));
      String string0 = "";
      String string1 = "Z;iwu?Q";
      // Undeclared exception!
      try { 
        doubleMetaphone0.encode((Object) "m0jrS|hxGt'@[");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode((String) null);
      Object object0 = new Object();
      doubleMetaphone0.encode(" G");
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "8";
      doubleMetaphone0.encode("8");
      String string1 = "CG- KN^?#jT}mL";
      String string2 = "";
      doubleMetaphone0.isDoubleMetaphoneEqual("CG- KN^?#jT}mL", "", true);
      try { 
        doubleMetaphone0.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      int int0 = 0;
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      String string0 = "";
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "$LKNSYX?*>O5mw", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.isDoubleMetaphoneEqual("VON ", "`t!Af");
      String string0 = doubleMetaphone0.doubleMetaphone("`t!Af");
      assertEquals("TF", string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("-<48mPg>2lD^up>~@D");
      doubleMetaphone_DoubleMetaphoneResult0.append('5', '1');
      String string1 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", string1);
      
      doubleMetaphone0.encode("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.setMaxCodeLen(5503);
      doubleMetaphone0.isDoubleMetaphoneEqual("pb N]8)@", "", true);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1138));
      doubleMetaphone_DoubleMetaphoneResult0.append('/');
      doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      int int0 = 11;
      doubleMetaphone0.setMaxCodeLen(11);
      doubleMetaphone0.encode((Object) "MANGER");
      doubleMetaphone0.doubleMetaphone("MANGER", false);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(79);
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('c');
      doubleMetaphone0.setMaxCodeLen(79);
      doubleMetaphone_DoubleMetaphoneResult0.append('e', '5');
      doubleMetaphone_DoubleMetaphoneResult0.append('5');
      doubleMetaphone0.encode("MNJR");
      doubleMetaphone0.setMaxCodeLen(0);
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.appendAlternate((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "";
      doubleMetaphone0.doubleMetaphone("", true);
      doubleMetaphone0.setMaxCodeLen(0);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1604));
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      String string1 = "";
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append("", "P0<o+Hgj2^Z;_ [WS+z");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      String string0 = "";
      boolean boolean0 = false;
      doubleMetaphone0.doubleMetaphone("", false);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      doubleMetaphone0.encode("ac:kczX|73");
      char char0 = '6';
      doubleMetaphone_DoubleMetaphoneResult0.append('6', '6');
      doubleMetaphone_DoubleMetaphoneResult0.append('6');
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("ac:kczX|73");
      doubleMetaphone0.doubleMetaphone("D9TAKDz*m'rm$2");
      String string1 = "";
      try { 
        doubleMetaphone0.encode((Object) doubleMetaphone_DoubleMetaphoneResult0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      boolean boolean0 = DoubleMetaphone.contains("", 0, 0, stringArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode("O");
      String string0 = "CH";
      doubleMetaphone0.doubleMetaphone("CH");
      int int0 = 88;
      doubleMetaphone0.encode((Object) "CH");
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "m.C+wF2B=W8z9GDww");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      int int0 = 848;
      String string0 = "EP";
      doubleMetaphone0.isDoubleMetaphoneEqual("EP", "EP");
      Object object0 = new Object();
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.isDoubleMetaphoneEqual("u_Geu,|O0`\"]kQW3{\"", "u_Geu,|O0`\"]kQW3{\"");
      doubleMetaphone0.doubleMetaphone("u_Geu,|O0`\"]kQW3{\"");
      doubleMetaphone0.doubleMetaphone("u_Geu,|O0`\"]kQW3{\"");
      doubleMetaphone0.encode((String) null);
      doubleMetaphone0.isDoubleMetaphoneEqual("u_Geu,|O0`\"]kQW3{\"", "u_Geu,|O0`\"]kQW3{\"");
      doubleMetaphone0.doubleMetaphone("-yyJA[pgdx:bctZZ");
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = doubleMetaphone0.encode("ZF2C^>(v>z%xt:m");
      assertEquals("SFKF", string0);
      assertNotNull(string0);
      
      doubleMetaphone0.isDoubleMetaphoneEqual("SFKF", "", false);
      String string1 = doubleMetaphone0.doubleMetaphone("TTH");
      assertEquals("0", string1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(1);
      doubleMetaphone_DoubleMetaphoneResult0.append("", "");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode((Object) "TK");
      doubleMetaphone0.encode("HOLZ");
      doubleMetaphone0.setMaxCodeLen(2452);
      doubleMetaphone0.setMaxCodeLen(0);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "HLS";
      stringArray0[1] = "eNc0tF_%~[p/+ Yrbs";
      stringArray0[2] = "eNc0tF_%~[p/+ Yrbs";
      boolean boolean0 = DoubleMetaphone.contains("eNc0tF_%~[p/+ Yrbs", 478, 0, stringArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1297));
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('/');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "m%[7WcO+";
      stringArray0[1] = "m%[7WcO+";
      stringArray0[2] = "m%[7WcO+";
      stringArray0[3] = "m%[7WcO+";
      stringArray0[4] = "m%[7WcO+";
      stringArray0[5] = "m%[7WcO+";
      boolean boolean0 = DoubleMetaphone.contains("m%[7WcO+", 81, 81, stringArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('}');
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      char char0 = doubleMetaphone0.charAt("", (-2544));
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      int int0 = (-471);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-471));
      doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      String string0 = "";
      doubleMetaphone0.encode((Object) "3sj@}");
      int int1 = (-2915);
      doubleMetaphone0.setMaxCodeLen((-2915));
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('u');
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "3sj@}", false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone("", true);
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult((-436));
      doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append("+L7eR=N!u", "");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode("JlP#AK<J6]");
      doubleMetaphone0.doubleMetaphone("JlP#AK<J6]", true);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(70);
      doubleMetaphone0.setMaxCodeLen(70);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("ak}j?rRg");
      doubleMetaphone0.doubleMetaphone("MMec0u8*O#t<", true);
      doubleMetaphone_DoubleMetaphoneResult0.append(';', ',');
      doubleMetaphone_DoubleMetaphoneResult0.append("MMec0u8*O#t<", "MMec0u8*O#t<");
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("MKT");
      doubleMetaphone_DoubleMetaphoneResult0.append("MMec0u8*O#t<", "d2ouYiSHz");
      doubleMetaphone0.charAt("", 3480);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('%');
      doubleMetaphone0.setMaxCodeLen(3480);
      doubleMetaphone0.doubleMetaphone("");
      doubleMetaphone0.isDoubleMetaphoneEqual("HOLZ", "");
      doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertEquals(",MMec0u8*O#t<MKTd2ouYiSHz", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string0 = doubleMetaphone0.doubleMetaphone("MKi>@t>t} ", true);
      assertEquals("MKTT", string0);
  }
}
