/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 06 01:12:59 GMT 2021
 */

package org.apache.commons.codec.language;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.codec.language.DoubleMetaphone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DoubleMetaphone_ESTest extends DoubleMetaphone_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("GHIR");
      assertNotNull(string0);
      assertEquals("JR", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("-", (String) null);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("JR", "JR", true);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[0];
      boolean boolean0 = DoubleMetaphone.contains("4H", 6, 6, stringArray0);
      assertFalse(boolean0);
      assertEquals(0, stringArray0.length);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("4H", "}KIgHz7", false);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("jgIER");
      assertNotNull(string0);
      assertEquals("JJ", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("sogH^c2UoqwV3Y/n[v");
      assertNotNull(string0);
      assertEquals("SKKK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("K", "K", true);
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("T");
      assertNotNull(string0);
      assertEquals("T", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("dJ`&<$.", false);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("TJ", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "-_c/WD^68D*eGh?", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("~a2U)jglIYM0*b");
      assertNotNull(string0);
      assertEquals("JKLM", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "JKLM";
      stringArray0[1] = "~a2U)jglIYM0*b";
      stringArray0[2] = "JKLM";
      stringArray0[3] = "~a2U)jglIYM0*b";
      stringArray0[4] = "JKLM";
      stringArray0[5] = "JKLM";
      stringArray0[6] = "~a2U)jglIYM0*b";
      stringArray0[7] = "JKLM";
      stringArray0[8] = "JKLM";
      boolean boolean0 = DoubleMetaphone.contains("JKLM", 0, 0, stringArray0);
      assertFalse(boolean0);
      assertEquals(9, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("~a2W)jglI)0q\"");
      assertNotNull(string0);
      assertEquals("JKLK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen((-484));
      assertEquals((-484), doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.doubleMetaphone("JKLK");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("~a2W)jglI)0q\"");
      assertNotNull(string0);
      assertEquals("JKLK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "G");
      assertNotNull(object0);
      assertFalse(object0.equals((Object)string0));
      assertEquals("K", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("4CCES");
      assertNotNull(string0);
      assertEquals("XS", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("GCHAE");
      assertNotNull(string0);
      assertEquals("KK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("0d?(2", false);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("T", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("GNCHAE", "GNCHAE", false);
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("WICZ");
      assertNotNull(string0);
      assertEquals("AKS", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("ogN^o2UhV3kYnIq");
      assertNotNull(string0);
      assertEquals("AKNF", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("ogN^o2UhV3YnIq");
      assertNotNull(string0);
      assertEquals("AKNF", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("CH-F'E");
      assertNotNull(string0);
      assertEquals("XF", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "ph>");
      assertNotNull(object0);
      assertFalse(object0.equals((Object)string0));
      assertEquals("F", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("GNPEM)^UGH:QGV", "XF", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("[Ql@}ijo<|n");
      assertNotNull(string0);
      assertEquals("KLJN", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("pEP");
      assertNotNull(string0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals("PP", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String string1 = doubleMetaphone0.doubleMetaphone("n-Ujag[{<=R:{^\"eY", false);
      assertNotNull(string1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertEquals("NJKR", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      Object object0 = doubleMetaphone0.encode((Object) "PP");
      assertNotNull(object0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string0));
      assertEquals("P", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      Object object1 = doubleMetaphone0.encode((Object) "P");
      assertNotNull(object1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(object1.equals((Object)string0));
      assertTrue(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string1));
      assertEquals("P", object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      char char0 = doubleMetaphone1.charAt("PP", 9);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone((String) null);
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("gH^o2UhV3Y]Ln7q");
      assertNotNull(string1);
      assertEquals("KFLN", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("gH^o2UhV3Y]Ln7q");
      assertNotNull(string2);
      assertTrue(string2.equals((Object)string1));
      assertEquals("KFLN", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("KFLN", true);
      assertNotNull(string3);
      assertTrue(string3.equals((Object)string2));
      assertTrue(string3.equals((Object)string1));
      assertEquals("KFLN", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("M)^EZugH:qEvt");
      assertNotNull(string0);
      assertEquals("MSKK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("Sez+C GyCe38SItmr`:", true);
      assertNotNull(string0);
      assertEquals("SSKS", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("h,SmOxQk$wFExSm");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("SMKS", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("~4IBQn=dq9Np)#COL6h");
      assertNotNull(string0);
      assertEquals("PKNT", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("CH");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("K", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("KNGPSIAN", "1e50O):V[^S{9aElP|", true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone1.doubleMetaphone("DGi");
      assertNotNull(string0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals("J", string0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("cJOSE");
      assertNotNull(string0);
      assertEquals("KJS", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(1160);
      assertEquals(1160, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("KNDG9PJ@XUMD}5<6XGO", "org.apache.commons.codec.EncoderException", false);
      assertFalse(boolean0);
      assertEquals(1160, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("`U", 1160);
      assertEquals('\u0000', char0);
      assertEquals(1160, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("`U", true);
      assertNotNull(string0);
      assertEquals("", string0);
      assertEquals(1160, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("WRMRPL", "WRMRPL", false);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(1160, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("PSZUMB~:PEQMGET", "a;! ig>G}|6pkI.4>\"", true);
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(1160, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "mrPLFd!_/D+M8";
      Object object0 = doubleMetaphone0.encode((Object) "mrPLFd!_/D+M8");
      assertNotNull(object0);
      assertFalse(object0.equals((Object)string0));
      assertEquals("MRPL", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object1 = doubleMetaphone0.encode((Object) "mrPLFd!_/D+M8");
      assertNotNull(object1);
      assertTrue(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string0));
      assertEquals("MRPL", object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object2 = doubleMetaphone0.encode((Object) "MRPL");
      assertNotNull(object2);
      assertFalse(object2.equals((Object)string0));
      assertTrue(object2.equals((Object)object0));
      assertTrue(object2.equals((Object)object1));
      assertEquals("MRPL", object2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object3 = doubleMetaphone0.encode((Object) "MRPL");
      assertNotNull(object3);
      assertTrue(object3.equals((Object)object0));
      assertTrue(object3.equals((Object)object1));
      assertTrue(object3.equals((Object)object2));
      assertFalse(object3.equals((Object)string0));
      assertEquals("MRPL", object3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = "Zumb~:peQmGEt\\";
      Object object4 = doubleMetaphone0.encode((Object) "Zumb~:peQmGEt");
      assertNotNull(object4);
      assertFalse(object4.equals((Object)object3));
      assertFalse(object4.equals((Object)string0));
      assertFalse(object4.equals((Object)string1));
      assertFalse(object4.equals((Object)object1));
      assertFalse(object4.equals((Object)object2));
      assertFalse(object4.equals((Object)object0));
      assertEquals("SMPP", object4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.encode("");
      assertNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object5 = new Object();
      assertNotNull(object5);
      
      try { 
        doubleMetaphone0.encode(object5);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("i[.eU0");
      assertNotNull(string0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals("A", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("i[.eU0", "", true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String string1 = doubleMetaphone0.doubleMetaphone("<_i>Bb:@z8Fm/5b3^", false);
      assertNotNull(string1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertEquals("PSFM", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("CHOR");
      assertNotNull(string0);
      assertEquals("KR", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("CHOR", "", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "GN7RO@FJSM!$0O*E=HQ";
      stringArray0[1] = "GN7RO@FJSM!$0O*E=HQ";
      stringArray0[2] = "GN7RO@FJSM!$0O*E=HQ";
      stringArray0[3] = "KNQ^VV$A7I|L^8";
      stringArray0[4] = "GN7RO@FJSM!$0O*E=HQ";
      stringArray0[5] = "GN7RO@FJSM!$0O*E=HQ";
      stringArray0[6] = "GN7RO@FJSM!$0O*E=HQ";
      stringArray0[7] = ")YrT{o3Kc_Ca~";
      stringArray0[8] = "WRQ^VV$A7I|L^8";
      boolean boolean0 = DoubleMetaphone.contains("GN7RO@FJSM!$0O*E=HQ", 769, 199, stringArray0);
      assertFalse(boolean0);
      assertEquals(9, stringArray0.length);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) ")YrT{o3Kc_Ca~");
      assertNotNull(object0);
      assertEquals("RTKK", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object1 = doubleMetaphone0.encode((Object) "GN7RO@FJSM!$0O*E=HQ");
      assertNotNull(object1);
      assertFalse(object1.equals((Object)object0));
      assertEquals("NRFS", object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object2 = doubleMetaphone0.encode((Object) "RTKK");
      assertNotNull(object2);
      assertFalse(object2.equals((Object)object1));
      assertFalse(object2.equals((Object)object0));
      assertEquals("RTK", object2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone((String) null, false);
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = DoubleMetaphone.contains("PN7", 199, 199, stringArray0);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(9, stringArray0.length);
      
      boolean boolean2 = true;
      String string1 = doubleMetaphone0.doubleMetaphone("WRQ^VV$A7I|L^8", true);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)object0));
      assertFalse(string1.equals((Object)object1));
      assertFalse(string1.equals((Object)object2));
      assertEquals("RKFL", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object3 = new Object();
      assertNotNull(object3);
      
      try { 
        doubleMetaphone0.encode(object3);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("KNWITZ");
      assertNotNull(string0);
      assertEquals("NTS", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = DoubleMetaphone.contains("u1j_[,MTBGY8xGC]99", 71, (-1), (String[]) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("PNOGH^O2UHV3Y]LN7Q");
      assertNotNull(string0);
      assertEquals("NKFL", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("ogH^o2UhV3Y]Ln7q ");
      assertNotNull(string0);
      assertEquals("AKFL", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("|mD]]vW!EZ=On;", false);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("MTFS", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("PSHOEK");
      assertNotNull(string0);
      assertEquals("SK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone((String) null);
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("qZZa28", "", true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("qZZa28");
      assertNotNull(string1);
      assertEquals("KS", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("Kna'geH|?!It9X", "^R7-dzQO-", false);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("$0j[txvlT", false);
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string1));
      assertEquals("JTKS", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = DoubleMetaphone.contains("^R7-dzQO-", 336, 986, (String[]) null);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("KS", (String) null);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean4 = doubleMetaphone0.isDoubleMetaphoneEqual("TTH", "^R7-dzQO-", false);
      assertTrue(boolean4 == boolean0);
      assertTrue(boolean4 == boolean3);
      assertTrue(boolean4 == boolean2);
      assertTrue(boolean4 == boolean1);
      assertFalse(boolean4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean5 = DoubleMetaphone.contains("g#:hy_DU^", 336, 1214, (String[]) null);
      assertTrue(boolean5 == boolean4);
      assertTrue(boolean5 == boolean2);
      assertTrue(boolean5 == boolean1);
      assertTrue(boolean5 == boolean0);
      assertTrue(boolean5 == boolean3);
      assertFalse(boolean5);
      
      char char0 = doubleMetaphone0.charAt("Dv", 986);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "IgYD`(P<mipHs@cp");
      assertNotNull(object0);
      assertEquals("AJTP", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("PNDG");
      assertNotNull(string0);
      assertFalse(string0.equals((Object)object0));
      assertEquals("NTK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object1 = doubleMetaphone0.encode((Object) "PNDG");
      assertNotNull(object1);
      assertTrue(object1.equals((Object)string0));
      assertFalse(object1.equals((Object)object0));
      assertEquals("NTK", object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "IgYD`(P<mipHs@cp";
      boolean boolean0 = DoubleMetaphone.contains("PNDG", 86, 86, stringArray0);
      assertFalse(boolean0);
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("5BACH[ER");
      assertNotNull(string0);
      assertEquals("PKR", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("HARIS", "OL^V1Bx!");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("BACHFER", true);
      assertNotNull(string0);
      assertEquals("PKFR", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "HARIS", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = 1;
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('v');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("v", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("v", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      char char0 = '\\';
      doubleMetaphone_DoubleMetaphoneResult0.append('\\', '>');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("v", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals(">", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string0 = "GNCK";
      String string1 = null;
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("JjCU:4t0zE.@!");
      assertNotNull(string0);
      assertEquals("JKTS", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("M)^EugH:qEvt");
      assertNotNull(string0);
      assertEquals("MKKF", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(1057);
      assertEquals(1057, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("w8N9g2daOf", "SILL");
      assertFalse(boolean0);
      assertEquals(1057, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("P3|Mx");
      assertNotNull(string0);
      assertEquals("PMKS", string0);
      assertEquals(1057, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("PMKS");
      assertNotNull(string1);
      assertTrue(string1.equals((Object)string0));
      assertEquals("PMKS", string1);
      assertEquals(1057, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "$GgX", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("ORCHID", "UCCEE");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("UCCEE", false);
      assertNotNull(string0);
      assertEquals("AKS", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("UCCEE", "KL", true);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone((String) null);
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("PSCHORE", true);
      assertNotNull(string1);
      assertEquals("XR", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("|mD]]vW!EZ=On;", true);
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string1));
      assertEquals("MTFT", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("ar?7}}w", "KNPSILLO", true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String string0 = doubleMetaphone0.doubleMetaphone("H{esu", true);
      assertNotNull(string0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals("S", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("GN0G%PFUD^", "PSILLUO");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("PN@ZYJE(3HY", true);
      assertNotNull(string0);
      assertEquals("NSJ", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("PN@ZYJE(3HY", "PK", true);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("#~cHSCpf\"c_2IvNS!GY", "L4&k$*@Yweo", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("\"?jMY~_gR{~lARK");
      assertNotNull(string0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals("MKRL", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("PN@ZYJE(3HY", "P", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      char char0 = doubleMetaphone1.charAt(")4Qao*", 86);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("S/Y", "VC,A:7ViA.?gn2");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-381));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "SN";
      stringArray0[1] = "SN";
      stringArray0[2] = "SN";
      stringArray0[3] = "SN";
      boolean boolean2 = DoubleMetaphone.contains("SN", (-381), 90, stringArray0);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(4, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("OGY", "mbP");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("?U>QQS=", false);
      assertNotNull(string0);
      assertEquals("KS", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("?U>QQS=");
      assertNotNull(string1);
      assertTrue(string1.equals((Object)string0));
      assertEquals("KS", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "z1WE>NP", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("EhZHyv_}nZm5^", true);
      assertNotNull(string0);
      assertEquals("AJFN", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("4E7", "eVcGAh&2[E+Icf.", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.charAt((String) null, 4043);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = DoubleMetaphone.contains("GN", (-3470), (-169), (String[]) null);
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone1.doubleMetaphone("(<D");
      assertNotNull(string0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals("T", string0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string1 = doubleMetaphone1.encode("|]JZ(:f[;D\"k^");
      assertNotNull(string1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals("SFTK", string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string2 = doubleMetaphone0.doubleMetaphone("GNACH", false);
      assertNotNull(string2);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("NK", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      int int0 = doubleMetaphone2.getMaxCodeLen();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      
      String string3 = doubleMetaphone1.doubleMetaphone("SFTK", false);
      assertNotNull(string3);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertTrue(string3.equals((Object)string1));
      assertEquals("SFTK", string3);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(4);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("3Apzm?] //6r2ha", "GY", true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("GY");
      assertNotNull(string0);
      assertEquals("K", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string1 = doubleMetaphone1.doubleMetaphone("j)%<8ZAhYdC lB", false);
      assertNotNull(string1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals("JSHT", string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("E8.9", "E8.9");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("E8.9");
      assertNotNull(string0);
      assertEquals("A", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("ar?7}}w", "O`HE", true);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("T", "u~+{kSZ'Yt^/Ij@h0", true);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("/3ETgvJf=", "a`Gy`G!Uz5fp-O2I3");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(73);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = "org.apache.commons.codec.EncoderException";
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.appendAlternate((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(8);
      assertEquals(8, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(8);
      assertEquals(8, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("IER");
      assertNotNull(string0);
      assertEquals("A", string0);
      assertEquals(8, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone(":!A/v", false);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("F", string1);
      assertEquals(8, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("KGNC,4", "", false);
      assertFalse(boolean0);
      assertEquals(8, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone3);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone3.new DoubleMetaphoneResult(0);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("$)F2%");
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("$)F2%");
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      
      String string0 = doubleMetaphone2.encode("AI");
      assertNotNull(string0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone3));
      assertEquals("A", string0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone3);
      
      boolean boolean0 = doubleMetaphone2.isDoubleMetaphoneEqual("$)F2%", "AI", false);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone3));
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone3);
      
      String string1 = doubleMetaphone3.encode("Rte3ll&");
      assertNotNull(string1);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(string1.equals((Object)string0));
      assertEquals("RTL", string1);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      
      DoubleMetaphone doubleMetaphone4 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone4);
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      
      String string2 = doubleMetaphone4.doubleMetaphone("A");
      assertNotNull(string2);
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(string2.equals((Object)string1));
      assertTrue(string2.equals((Object)string0));
      assertEquals("A", string2);
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      assertNotSame(doubleMetaphone4, doubleMetaphone1);
      assertNotSame(doubleMetaphone4, doubleMetaphone0);
      assertNotSame(doubleMetaphone4, doubleMetaphone3);
      assertNotSame(doubleMetaphone4, doubleMetaphone2);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode(" Q");
      assertNotNull(string0);
      assertEquals("K", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("/F;*<%AF7", false);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("FF", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("FF");
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("F", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("ChB8U", "F", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "F");
      assertNotNull(object1);
      assertFalse(object1.equals((Object)string1));
      assertTrue(object1.equals((Object)string2));
      assertFalse(object1.equals((Object)string0));
      assertEquals("F", object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("_5w:9vq", "_5w:9vq");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("_5w:9vq");
      assertNotNull(string0);
      assertEquals("FK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "_5w:9vq");
      assertNotNull(object0);
      assertTrue(object0.equals((Object)string0));
      assertEquals("FK", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      int int0 = (-348);
      doubleMetaphone1.setMaxCodeLen((-348));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals((-348), doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      Object object1 = doubleMetaphone0.encode((Object) "FK");
      assertNotNull(object1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(object1.equals((Object)object0));
      assertTrue(object1.equals((Object)string0));
      assertEquals("FK", object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      // Undeclared exception!
      try { 
        doubleMetaphone1.encode((Object) "FK");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("xFlak.i/ X2g");
      assertNotNull(string0);
      assertEquals("SFLK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string1 = doubleMetaphone1.doubleMetaphone("t", true);
      assertNotNull(string1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals("T", string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string2 = doubleMetaphone1.doubleMetaphone("OGY", false);
      assertNotNull(string2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("AJ", string2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("UMB", "T", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode(" FG9ek");
      assertNotNull(string0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals("FKK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String string1 = doubleMetaphone0.encode("UCCE");
      assertNotNull(string1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertEquals("AX", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      Object object0 = doubleMetaphone1.encode((Object) " FG9ek");
      assertNotNull(object0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string1));
      assertEquals("FKK", object0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("N", "2ec)X0QeN*G-A[q)+x", true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("SC", "C> )zV^.bDk{<=.", true);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("SC", "CZ", false);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string0 = doubleMetaphone2.encode("2ec)X0QeN*G-A[q)+x");
      assertNotNull(string0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals("KKSK", string0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone3);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      String string1 = doubleMetaphone1.doubleMetaphone("CZ", false);
      assertNotNull(string1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(string1.equals((Object)string0));
      assertEquals("S", string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone3);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("T");
      assertNotNull(string0);
      assertEquals("T", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("Ld@Pzq?r= 2", "\"?j)Y~_gR{~lARK");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("T", false);
      assertNotNull(string1);
      assertTrue(string1.equals((Object)string0));
      assertEquals("T", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.encode("T");
      assertNotNull(string2);
      assertTrue(string2.equals((Object)string1));
      assertTrue(string2.equals((Object)string0));
      assertEquals("T", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("z1WE>NP", "\"?j)Y~_gR{~lARK", false);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-206));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('J');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      Object object0 = doubleMetaphone0.encode((Object) "T");
      assertNotNull(object0);
      assertTrue(object0.equals((Object)string1));
      assertTrue(object0.equals((Object)string2));
      assertTrue(object0.equals((Object)string0));
      assertEquals("T", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object1 = new Object();
      assertNotNull(object1);
      
      Object object2 = doubleMetaphone0.encode((Object) "T");
      assertNotNull(object2);
      assertTrue(object2.equals((Object)string2));
      assertTrue(object2.equals((Object)object0));
      assertTrue(object2.equals((Object)string0));
      assertTrue(object2.equals((Object)string1));
      assertEquals("T", object2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object3 = doubleMetaphone0.encode((Object) "T");
      assertNotNull(object3);
      assertTrue(object3.equals((Object)object2));
      assertTrue(object3.equals((Object)string1));
      assertTrue(object3.equals((Object)string2));
      assertTrue(object3.equals((Object)string0));
      assertTrue(object3.equals((Object)object0));
      assertEquals("T", object3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object4 = doubleMetaphone0.encode((Object) "VW!EZ");
      assertNotNull(object4);
      assertFalse(object4.equals((Object)string1));
      assertFalse(object4.equals((Object)string2));
      assertFalse(object4.equals((Object)string0));
      assertFalse(object4.equals((Object)object2));
      assertFalse(object4.equals((Object)object0));
      assertFalse(object4.equals((Object)object3));
      assertEquals("FS", object4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("SIA", "\"?j)Y~_gR{~lARK", false);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("CHIA");
      assertNotNull(string0);
      assertEquals("K", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("AGGI", "K");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string1 = doubleMetaphone1.doubleMetaphone("AGGI", false);
      assertNotNull(string1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals("AJ", string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string2 = doubleMetaphone2.encode("AGGI");
      assertNotNull(string2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertTrue(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("AJ", string2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      char char0 = doubleMetaphone1.charAt("CHIA", 65);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("AJ", "a8p<d", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("WR9*BX", ":rMW OFiiY3J`.");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult1.appendAlternate("org.apache.commons.codec.EncoderException");
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("o", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate(":rMW OFiiY3J`.");
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals(":", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      
      String string0 = doubleMetaphone0.encode("CHORE");
      assertNotNull(string0);
      assertEquals("XR", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("`mS", "org.apache.commons.codec.EncoderException", true);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("PS96Q KU", true);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("SKK", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("PS", "96", false);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      Object object0 = doubleMetaphone1.encode((Object) "WR9*BX");
      assertNotNull(object0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string0));
      assertEquals("RPKS", object0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("}?0[0vD$U|<v,");
      assertNotNull(string0);
      assertEquals("FTF", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("F:]M1qKd$!o~\"O");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("FMKK", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("9");
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "FTF");
      assertNotNull(object0);
      assertFalse(object0.equals((Object)string2));
      assertTrue(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string1));
      assertEquals("FTF", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("SAN ", true);
      assertNotNull(string3);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)object0));
      assertEquals("SN", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string4 = doubleMetaphone0.doubleMetaphone("SAN ", false);
      assertNotNull(string4);
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)object0));
      assertTrue(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string2));
      assertEquals("SN", string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("SN", "", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string5 = doubleMetaphone0.doubleMetaphone("#Sz`s5,?", false);
      assertNotNull(string5);
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)object0));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string1));
      assertEquals("SS", string5);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string6 = doubleMetaphone0.doubleMetaphone("9", false);
      assertNotNull(string6);
      assertFalse(string6.equals((Object)string4));
      assertFalse(string6.equals((Object)object0));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string5));
      assertTrue(string6.equals((Object)string2));
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string0));
      assertEquals("", string6);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string7 = doubleMetaphone0.doubleMetaphone("SN", true);
      assertNotNull(string7);
      assertFalse(string7.equals((Object)string5));
      assertFalse(string7.equals((Object)string4));
      assertFalse(string7.equals((Object)string3));
      assertFalse(string7.equals((Object)string6));
      assertFalse(string7.equals((Object)object0));
      assertFalse(string7.equals((Object)string1));
      assertFalse(string7.equals((Object)string2));
      assertFalse(string7.equals((Object)string0));
      assertEquals("XN", string7);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(439);
      assertEquals(439, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(3221);
      assertEquals(3221, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("", false);
      assertNull(string0);
      assertEquals(3221, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "R");
      assertNotNull(object0);
      assertEquals("R", object0);
      assertEquals(3221, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("0/K?:ML/.M+F2mt", "R", true);
      assertFalse(boolean0);
      assertEquals(3221, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = "R";
      stringArray0[4] = "R";
      stringArray0[5] = "";
      boolean boolean1 = DoubleMetaphone.contains("R", 6, 6, stringArray0);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(6, stringArray0.length);
      
      boolean boolean2 = DoubleMetaphone.contains("_GR{", 0, 0, stringArray0);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2);
      assertEquals(6, stringArray0.length);
      
      String string1 = doubleMetaphone0.doubleMetaphone(string0, false);
      assertNull(string1);
      assertEquals(3221, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone((String) null, true);
      assertNull(string2);
      assertEquals(3221, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("Z", "0/K?:ML/.M+F2mt", false);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3 == boolean2);
      assertFalse(boolean3);
      assertEquals(3221, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("F:]M1qKd$!o~\"O");
      assertNotNull(string0);
      assertEquals("FMKK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("9");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("SAN ", true);
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("SN", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("SAN ", false);
      assertNotNull(string3);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertTrue(string3.equals((Object)string2));
      assertEquals("SN", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1973));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string4 = doubleMetaphone0.doubleMetaphone("", false);
      assertNull(string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('%');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("FMKK", "SH", false);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "AiRHP";
      boolean boolean0 = DoubleMetaphone.contains("AiRHP", 1, 3284, stringArray0);
      assertFalse(boolean0);
      assertEquals(1, stringArray0.length);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("AiRHP", "xU\"~,rbW!SU");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(1);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("xU\"~,rbW!SU");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("x", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("x", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('J');
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("x", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("x", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      Object object0 = doubleMetaphone1.encode((Object) "PNSKSR");
      assertNotNull(object0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals("NSKS", object0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      Object object1 = new Object();
      assertNotNull(object1);
      
      Object object2 = doubleMetaphone0.encode((Object) "xU\"~,rbW!SU");
      assertNotNull(object2);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(object2.equals((Object)object0));
      assertEquals("SRPS", object2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      Object object3 = doubleMetaphone0.encode((Object) "SRPS");
      assertNotNull(object3);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(object3.equals((Object)object0));
      assertTrue(object3.equals((Object)object2));
      assertEquals("SRPS", object3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      Object object4 = doubleMetaphone1.encode((Object) "AiRHP");
      assertNotNull(object4);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(object4.equals((Object)object2));
      assertFalse(object4.equals((Object)object3));
      assertFalse(object4.equals((Object)object0));
      assertEquals("ARP", object4);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("AiRHP", "SIA", true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(8);
      assertEquals(8, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(8);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("org.apache.commons.codec.EncoderException");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("org.apac", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string0 = doubleMetaphone1.encode("iWM`e*");
      assertNotNull(string0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals("AM", string0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("BACHER", "iWM`e*", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", true);
      assertNotNull(string1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertEquals("ARKPKKMN", string1);
      assertEquals(8, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone2.isDoubleMetaphoneEqual("ZO", "AS", true);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      try { 
        doubleMetaphone2.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(71);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("Z5:", "Z5:");
      assertTrue(boolean0);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone1.encode("Z5:");
      assertNotNull(string0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals("S", string0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("1|)F?CwR?_j", (String) null, true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String string1 = doubleMetaphone1.encode("org.apache.commons.codec.EncoderException");
      assertNotNull(string1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals("ARKP", string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      doubleMetaphone1.setMaxCodeLen(1685);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(1685, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string2 = doubleMetaphone1.doubleMetaphone("ARKP", true);
      assertNotNull(string2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertTrue(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("ARKP", string2);
      assertEquals(1685, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("Qa_sOk\u0004T?[UxM");
      assertNotNull(string0);
      assertEquals("KSKT", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("KN_5W:9VQ");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("NFK", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("", false);
      assertNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("KN_5W:9VQ", 77);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "NFK");
      assertNotNull(object0);
      assertFalse(object0.equals((Object)string0));
      assertTrue(object0.equals((Object)string1));
      assertEquals("NFK", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object1 = doubleMetaphone0.encode((Object) "NFK");
      assertNotNull(object1);
      assertFalse(object1.equals((Object)string0));
      assertTrue(object1.equals((Object)object0));
      assertTrue(object1.equals((Object)string1));
      assertEquals("NFK", object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("NFK", false);
      assertNotNull(string3);
      assertFalse(string3.equals((Object)string0));
      assertTrue(string3.equals((Object)object0));
      assertTrue(string3.equals((Object)string1));
      assertTrue(string3.equals((Object)object1));
      assertEquals("NFK", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string4 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string5 = doubleMetaphone0.encode("NFK");
      assertNotNull(string5);
      assertTrue(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string0));
      assertTrue(string5.equals((Object)object0));
      assertTrue(string5.equals((Object)string1));
      assertTrue(string5.equals((Object)object1));
      assertEquals("NFK", string5);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string6 = doubleMetaphone0.doubleMetaphone(".Rr[%VZA`</", false);
      assertNotNull(string6);
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)object1));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)object0));
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string1));
      assertEquals("RFS", string6);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object2 = doubleMetaphone0.encode((Object) "NFK");
      assertNotNull(object2);
      assertTrue(object2.equals((Object)string3));
      assertFalse(object2.equals((Object)string6));
      assertTrue(object2.equals((Object)string5));
      assertFalse(object2.equals((Object)string0));
      assertTrue(object2.equals((Object)object0));
      assertTrue(object2.equals((Object)object1));
      assertTrue(object2.equals((Object)string1));
      assertEquals("NFK", object2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object3 = doubleMetaphone0.encode((Object) ".Rr[%VZA`</");
      assertNotNull(object3);
      assertFalse(object3.equals((Object)string1));
      assertFalse(object3.equals((Object)string0));
      assertFalse(object3.equals((Object)object2));
      assertFalse(object3.equals((Object)object0));
      assertFalse(object3.equals((Object)string3));
      assertFalse(object3.equals((Object)string5));
      assertFalse(object3.equals((Object)object1));
      assertTrue(object3.equals((Object)string6));
      assertEquals("RFS", object3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string7 = doubleMetaphone0.doubleMetaphone("SUGAR", false);
      assertNotNull(string7);
      assertFalse(string7.equals((Object)object2));
      assertFalse(string7.equals((Object)string5));
      assertFalse(string7.equals((Object)string0));
      assertFalse(string7.equals((Object)object1));
      assertFalse(string7.equals((Object)object0));
      assertFalse(string7.equals((Object)object3));
      assertFalse(string7.equals((Object)string3));
      assertFalse(string7.equals((Object)string1));
      assertFalse(string7.equals((Object)string6));
      assertEquals("XKR", string7);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "ARKP";
      boolean boolean0 = DoubleMetaphone.contains("ARKP", 1, 3284, stringArray0);
      assertFalse(boolean0);
      assertEquals(1, stringArray0.length);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("ARKP", "xU\"~,rbW!SU");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2173);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("org.apache.commons.codec.EncoderException", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("OWSKY");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("org.apache.commons.codec.EncoderExceptionOWSKY", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string0 = doubleMetaphone0.encode("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("KN[", "OWSKY", true);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("B", true);
      assertNotNull(string1);
      assertEquals("P", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("\"", "ILLUO", true);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "ARKP");
      assertNotNull(object0);
      assertFalse(object0.equals((Object)string1));
      assertEquals("ARKP", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("Qa_sOk\u0004T?[UxM");
      assertNotNull(string0);
      assertEquals("KSKT", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("KN_5W:9VQ");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("NFK", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("", false);
      assertNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("KN_5W:9VQ", 77);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "NFK");
      assertNotNull(object0);
      assertTrue(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string0));
      assertEquals("NFK", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object1 = doubleMetaphone0.encode((Object) "NFK");
      assertNotNull(object1);
      assertTrue(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string0));
      assertTrue(object1.equals((Object)string1));
      assertEquals("NFK", object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("NFK", false);
      assertNotNull(string3);
      assertTrue(string3.equals((Object)object1));
      assertTrue(string3.equals((Object)string1));
      assertTrue(string3.equals((Object)object0));
      assertFalse(string3.equals((Object)string0));
      assertEquals("NFK", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string4 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string5 = doubleMetaphone0.encode("NFK");
      assertNotNull(string5);
      assertTrue(string5.equals((Object)string1));
      assertTrue(string5.equals((Object)object1));
      assertTrue(string5.equals((Object)string3));
      assertTrue(string5.equals((Object)object0));
      assertFalse(string5.equals((Object)string0));
      assertEquals("NFK", string5);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string6 = doubleMetaphone0.doubleMetaphone(".Rr[%VZA`</", false);
      assertNotNull(string6);
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)object0));
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)object1));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string1));
      assertEquals("RFS", string6);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char1 = doubleMetaphone0.charAt("hX$.9?Mj:[rXa$", 2513);
      assertTrue(char1 == char0);
      assertEquals('\u0000', char1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(8);
      assertEquals(8, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone1.encode("IER");
      assertNotNull(string0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals("A", string0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string1 = doubleMetaphone0.encode("MC");
      assertNotNull(string1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertEquals("MK", string1);
      assertEquals(8, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("'MG", true);
      assertNotNull(string2);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("MK", string2);
      assertEquals(8, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(8, int0);
      assertEquals(8, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String string3 = doubleMetaphone0.doubleMetaphone("'0}Vi8HWCx5/cj0eCU", false);
      assertNotNull(string3);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertEquals("FKKSKJK", string3);
      assertEquals(8, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("Ffq}-;ab3]", true);
      assertNotNull(string0);
      assertEquals("FKP", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(71);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = DoubleMetaphone.contains("Z5:", 71, 71, (String[]) null);
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("Z5:", "Z5:", false);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone1.isDoubleMetaphoneEqual("?{fW4rYp[*eQE4/", "ZO", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      doubleMetaphone1.setMaxCodeLen(71);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(71, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean3 = doubleMetaphone1.isDoubleMetaphoneEqual("Ub],g", "!bb2M+R\"w3SF", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean3);
      assertEquals(71, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("v", "EN");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string1 = doubleMetaphone1.doubleMetaphone("WRUCCES", false);
      assertNotNull(string1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals("RKSS", string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string2 = doubleMetaphone0.doubleMetaphone("WRUCCES");
      assertNotNull(string2);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(string2.equals((Object)string1));
      assertEquals("RKSS", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("EB", (String) null, false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string3 = doubleMetaphone0.encode("");
      assertNull(string3);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String string4 = doubleMetaphone1.doubleMetaphone("JzT}q[+h", false);
      assertNotNull(string4);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertEquals("JSTK", string4);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string5 = doubleMetaphone1.doubleMetaphone(".|q+4d29FWbpfx.uQ", false);
      assertNotNull(string5);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string1));
      assertEquals("KTFP", string5);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(751);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "TION";
      stringArray0[1] = "AI";
      stringArray0[2] = "WRUCCES";
      stringArray0[3] = "WRUCCES";
      boolean boolean3 = DoubleMetaphone.contains("v", (-1401), (-1353), stringArray0);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3);
      assertEquals(4, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(953);
      assertEquals(953, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(953, int0);
      assertEquals(953, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("IB", "K%c*g$(e$");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(953);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("3zz/'?wXx*|MHZT");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("3zz/'?wXx*|MHZT", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("L");
      assertNotNull(string0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals("L", string0);
      assertEquals(953, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone2.isDoubleMetaphoneEqual("Z", "K/$cc) ", false);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone3);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone3.isDoubleMetaphoneEqual("K/$cc) ", "#GZm", false);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      
      boolean boolean3 = doubleMetaphone3.isDoubleMetaphoneEqual("3zz/'?wXx*|MHZT", "WH", true);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertTrue(int1 == int0);
      assertEquals(953, int1);
      assertEquals(953, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone3);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("Q", "bg* lA/88");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("B");
      assertNotNull(string0);
      assertEquals("P", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("C_Fy", "");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone2.new DoubleMetaphoneResult(71);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("GNT");
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("GNT", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("PS");
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("GNT", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("PS", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      
      String string1 = doubleMetaphone2.encode("R{");
      assertNotNull(string1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertEquals("R", string1);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      
      boolean boolean2 = doubleMetaphone2.isDoubleMetaphoneEqual("2", "gHBny^5LU+", false);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("JOSE", "", false);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone3);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.encode("@3Uc&sO");
      assertNotNull(string2);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("KS", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone3);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      
      char char0 = doubleMetaphone3.charAt("R{", (-390));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(71);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = DoubleMetaphone.contains("Z5:", 71, 71, (String[]) null);
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone1.encode("Z5:");
      assertNotNull(string0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals("S", string0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("WRCH", true);
      assertNotNull(string1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertEquals("RK", string1);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("");
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("~zyW");
      assertNotNull(string2);
      assertEquals("S", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(209);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("_5w:9vq", "");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("wTAiv.E", false);
      assertNotNull(string1);
      assertEquals("TF", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("_+k<CvVlEhG|R^3", "QJND", true);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "_+k<CvVlEhG|R^3");
      assertNotNull(object0);
      assertFalse(object0.equals((Object)string1));
      assertEquals("KKFL", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(48);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('6');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("6", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string2 = doubleMetaphone0.encode("wTAiv.E");
      assertNotNull(string2);
      assertFalse(string2.equals((Object)object0));
      assertTrue(string2.equals((Object)string1));
      assertEquals("TF", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("E8.9", "E8.9");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("CH");
      assertNotNull(string0);
      assertEquals("K", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("96Q Ku");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("KK", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(881);
      assertEquals(881, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("2KvNfp{!qhfzI-[");
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("KFNFPKFS", string2);
      assertEquals(881, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(1298);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      // Undeclared exception!
      try { 
        doubleMetaphone1.isDoubleMetaphoneEqual("", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("v", "EN");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("WITZ", false);
      assertNotNull(string1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals("ATS", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(3513);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("EI");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("EI", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("EI", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('J');
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("EIJ", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("EIJ", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("EI", "CAESAR", true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "ATS");
      assertNotNull(object1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(object1.equals((Object)string1));
      assertEquals("ATS", object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string2 = doubleMetaphone2.encode("B");
      assertNotNull(string2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)object1));
      assertFalse(string2.equals((Object)string1));
      assertEquals("P", string2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      
      char char0 = doubleMetaphone2.charAt("+ ?*X[V't!", (-58490125));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      
      String string3 = doubleMetaphone2.doubleMetaphone("(tXR?q&k=!z m3@]:", true);
      assertNotNull(string3);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)object1));
      assertFalse(string3.equals((Object)string2));
      assertEquals("TKSR", string3);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("fCk^0;fr]9Ts{", false);
      assertNotNull(string0);
      assertEquals("FKKF", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("WRPOH");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("RP", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("MANGER", (String) null, false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Object object1 = new Object();
      assertNotNull(object1);
      assertFalse(object1.equals((Object)object0));
      
      Object object2 = doubleMetaphone0.encode((Object) "R");
      assertNotNull(object2);
      assertFalse(object2.equals((Object)string0));
      assertFalse(object2.equals((Object)string1));
      assertEquals("R", object2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("FKKF", false);
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)object2));
      assertFalse(string2.equals((Object)string1));
      assertEquals("FKF", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("B?Z)=8u^pw47bB");
      assertNotNull(string0);
      assertEquals("PSPP", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string1 = doubleMetaphone1.doubleMetaphone("GNQ90OI4\"");
      assertNotNull(string1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals("NK", string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("GNQ90OI4\"", "org.apache.commons.cdec.EnoderExcepion");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(70);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("B?Z)=8u^pw47bB");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("B?Z)=8u^pw47bB", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string2 = doubleMetaphone1.encode("Kc[]Z:l2gI+)");
      assertNotNull(string2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("KKSL", string2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("org.apache.commons.cdec.EnoderExcepion", "J;lQ&Z|2[#", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("Kc[]Z:l2gI+)", "PSSK", false);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("CC");
      assertNotNull(string0);
      assertEquals("K", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("\"?j)Y~_gR{~lARK", "Ld@Pzq?r= 2");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("\"?j)Y~_gR{~lARK", false);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("JKRL", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.encode("K");
      assertNotNull(string2);
      assertTrue(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("K", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "(T'4-", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("ER");
      assertNotNull(string0);
      assertEquals("AR", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("_5w:9vq", "v");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("B");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("P", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string2 = doubleMetaphone1.doubleMetaphone(")at7v_FD}=FUp", false);
      assertNotNull(string2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("TFFT", string2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("WR", "_5w:9vq", true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      Object object0 = doubleMetaphone1.encode((Object) "_5w:9vq");
      assertNotNull(object0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(object0.equals((Object)string2));
      assertFalse(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string1));
      assertEquals("FK", object0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(0);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('Q');
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string3 = doubleMetaphone1.encode("@HgzeWP:!U5Ce,0ciDU");
      assertNotNull(string3);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)object0));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertEquals("KSPS", string3);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      char char0 = doubleMetaphone0.charAt("KSPS", 0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals('K', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      boolean boolean2 = doubleMetaphone1.isDoubleMetaphoneEqual(")at7v_FD}=FUp", "FK", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      Object object1 = doubleMetaphone0.encode((Object) "org.apache.commons.codec.EncoderException");
      assertNotNull(object1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(object1.equals((Object)string2));
      assertFalse(object1.equals((Object)string0));
      assertFalse(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string3));
      assertFalse(object1.equals((Object)string1));
      assertEquals("ARKP", object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(71);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("Aw(pQPL_\"lLQ[nJ'Mgn", (-24));
      assertEquals('\u0000', char0);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("Aw(pQPL_\"lLQ[nJ'Mgn");
      assertNotNull(string0);
      assertEquals("APKPLLKNJMKN", string0);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("Aw(pQPL_\"lLQ[nJ'Mgn");
      assertNotNull(string1);
      assertTrue(string1.equals((Object)string0));
      assertEquals("APKPLLKNJMKN", string1);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("Z5:", false);
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("S", string2);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(438);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('\u0000');
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      assertEquals("\u0000", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("\u0000", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("APKPLLKNJMKN");
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      assertEquals("\u0000APKPLLKNJMKN", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("\u0000APKPLLKNJMKN", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('\u0000');
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      assertEquals("\u0000APKPLLKNJMKN\u0000", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("\u0000APKPLLKNJMKN\u0000", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string3 = doubleMetaphone0.doubleMetaphone(":4aFjMnASseV", true);
      assertNotNull(string3);
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertEquals("FMNSF", string3);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      String string4 = doubleMetaphone0.doubleMetaphone("FMNSF", true);
      assertNotNull(string4);
      assertTrue(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertEquals("FMNSF", string4);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = DoubleMetaphone.contains("<$BQY{)rE", (-24), 4455, (String[]) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "EN";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("v", "EN");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("IwCzSt&:v", false);
      assertNotNull(string2);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("ASST", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String string3 = null;
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, (String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("org.apache.commons.codec.EncoderException");
      assertNotNull(string0);
      assertEquals("ARKP", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("WICZ", false);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("AKS", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2096);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("org.apache.commons.codec.EncoderException", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("org.apache.commons.codec.EncoderException", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('V');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("org.apache.commons.codec.EncoderExceptionV", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("org.apache.commons.codec.EncoderExceptionV", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("WICZ", "AKS", false);
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException");
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string1));
      assertTrue(string2.equals((Object)string0));
      assertEquals("ARKP", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("org.apache.commons.codec.EncoderExceptionV", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("org.apache.commons.codec.EncoderExceptionV", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("org.apache.commons.codec.EncoderExceptionV", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("org.apache.commons.codec.EncoderExceptionV", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("Pyhn$ZNXhzVQZ", "ARKP");
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3 == boolean0);
      assertFalse(boolean3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("`1akJ(]aR(gd3dg!vO?", false);
      assertNotNull(string3);
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertEquals("KRKT", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string4 = doubleMetaphone0.doubleMetaphone("AKS", false);
      assertNotNull(string4);
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertTrue(string4.equals((Object)string1));
      assertEquals("AKS", string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string5 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      assertNotNull(string5);
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string1));
      assertTrue(string5.equals((Object)string2));
      assertTrue(string5.equals((Object)string0));
      assertEquals("ARKP", string5);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "1U8D^1_`: NyJ#a");
      assertNotNull(object0);
      assertFalse(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string3));
      assertFalse(object0.equals((Object)string4));
      assertFalse(object0.equals((Object)string2));
      assertFalse(object0.equals((Object)string5));
      assertFalse(object0.equals((Object)string0));
      assertEquals("TNJ", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean4 = doubleMetaphone0.isDoubleMetaphoneEqual("ARKP", "WR_4U4", false);
      assertTrue(boolean4 == boolean1);
      assertTrue(boolean4 == boolean3);
      assertTrue(boolean4 == boolean2);
      assertFalse(boolean4 == boolean0);
      assertFalse(boolean4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("POH");
      assertNotNull(string0);
      assertEquals("P", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      doubleMetaphone1.setMaxCodeLen((-105));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals((-105), doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      // Undeclared exception!
      try { 
        doubleMetaphone1.isDoubleMetaphoneEqual("SCH", "POH");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("POH");
      assertNotNull(string0);
      assertEquals("P", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = (-1195);
      doubleMetaphone0.setMaxCodeLen((-1195));
      assertEquals((-1195), doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("P", "WR_4U4", false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("CG", "s\fzD(N|lw?YJ");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("b+uGLmcJ,2");
      assertNotNull(string0);
      assertEquals("PKLM", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("tp=5@R/a!Es*g", false);
      assertNotNull(string1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertEquals("TPRS", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("-^4OypL", "b+uGLmcJ,2", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      String string2 = doubleMetaphone2.encode("T");
      assertNotNull(string2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("T", string2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone2.new DoubleMetaphoneResult(87);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone1.new DoubleMetaphoneResult(87);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult2 = doubleMetaphone1.new DoubleMetaphoneResult(80);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult2.append("b+uGLmcJ,2", "");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("b+uGLmcJ,2", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult2.appendPrimary('6');
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("b+uGLmcJ,26", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult0);
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone3);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      String string3 = doubleMetaphone3.encode("HwOo,uFxM'Q");
      assertNotNull(string3);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertEquals("FKSM", string3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("E8.9", "E8.9");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("DG");
      assertNotNull(string0);
      assertEquals("TK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("B", "W:9V");
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary(":Vp;");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals(":", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("E8.9");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("E", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals(":", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String string1 = doubleMetaphone0.encode("W:9V");
      assertNotNull(string1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertEquals("F", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("L", "U:JBav'90m$+gqe#;l", true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("JOSE", "TK", false);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      boolean boolean4 = doubleMetaphone1.isDoubleMetaphoneEqual("ILLO", "", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean4 == boolean0);
      assertTrue(boolean4 == boolean2);
      assertTrue(boolean4 == boolean3);
      assertTrue(boolean4 == boolean1);
      assertFalse(boolean4);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen((-12437164));
      assertEquals((-12437164), doubleMetaphone0.getMaxCodeLen());
      
      int int0 = 86;
      String[] stringArray0 = new String[9];
      stringArray0[0] = "B";
      stringArray0[2] = "B";
      stringArray0[3] = "B";
      stringArray0[4] = "B";
      stringArray0[5] = "B";
      stringArray0[6] = "B";
      stringArray0[7] = "B";
      stringArray0[8] = "B";
      boolean boolean0 = DoubleMetaphone.contains("B", 86, 86, stringArray0);
      assertFalse(boolean0);
      assertEquals(9, stringArray0.length);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = "";
      String string1 = doubleMetaphone1.encode("");
      assertNull(string1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.encode("vX?7Jp");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(71);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("Aw(pQPL_\"lLQ[nJ'Mgn", (-24));
      assertEquals('\u0000', char0);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("Aw(pQPL_\"lLQ[nJ'Mgn");
      assertNotNull(string0);
      assertEquals("APKPLLKNJMKN", string0);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("Aw(pQPL_\"lLQ[nJ'Mgn");
      assertNotNull(string1);
      assertTrue(string1.equals((Object)string0));
      assertEquals("APKPLLKNJMKN", string1);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("Z5:", false);
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("S", string2);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(438);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("APKPLLKNJMKN");
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      assertEquals("APKPLLKNJMKN", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("APKPLLKNJMKN", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('\u0000');
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      assertEquals("APKPLLKNJMKN\u0000", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("APKPLLKNJMKN\u0000", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("S", "APKPLLKNJMKN", true);
      assertFalse(boolean0);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("`1akJ(]aR(gd3dg!vO?");
      assertNotNull(string3);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertEquals("KRKTTKF", string3);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      assertEquals("APKPLLKNJMKN\u0000", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("APKPLLKNJMKN\u0000", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      assertEquals("APKPLLKNJMKN\u0000", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("APKPLLKNJMKN\u0000", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("Aw(pQPL_\"lLQ[nJ'Mgn", "");
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      String string4 = doubleMetaphone0.doubleMetaphone("RGY", false);
      assertNotNull(string4);
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertEquals("RJ", string4);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      String string5 = doubleMetaphone0.doubleMetaphone("N2P'<gVbMB/%Q$.x", true);
      assertNotNull(string5);
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string0));
      assertEquals("NPKFPMPKKS", string5);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      String string6 = doubleMetaphone0.doubleMetaphone((String) null, true);
      assertNull(string6);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(1073);
      assertEquals(1073, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "Aw(pQPL_\"lLQ[nJ'Mgn";
      char char0 = doubleMetaphone0.charAt("PNMA", 1634);
      assertEquals('\u0000', char0);
      assertEquals(1073, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("PNMA");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("NM", string1);
      assertEquals(1073, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string2 = doubleMetaphone1.encode("Aw(pQPL_\"lLQ[nJ'Mgn");
      assertNotNull(string2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("APKP", string2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean0 = false;
      String string3 = doubleMetaphone1.doubleMetaphone("OWSKY", false);
      assertNotNull(string3);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertEquals("ASK", string3);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(1073);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("ASK");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("ASK", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("ASK", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('\u0000');
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("ASK\u0000", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("ASK\u0000", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string4 = null;
      // Undeclared exception!
      try { 
        doubleMetaphone1.isDoubleMetaphoneEqual((String) null, "CIO", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(953);
      assertEquals(953, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(953, int0);
      assertEquals(953, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("3zz/'?wXx*|MHZT");
      assertNotNull(string0);
      assertEquals("SKSMST", string0);
      assertEquals(953, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("F7|H*", "F7|H*", false);
      assertTrue(boolean0);
      assertEquals(953, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult");
      assertNotNull(object1);
      assertFalse(object1.equals((Object)string0));
      assertEquals("ARKPXKMNSKTKLNKJTPLMTFNTPLMTFNRSLT", object1);
      assertEquals(953, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("_5w:9vq", "v");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "";
      String string1 = doubleMetaphone0.doubleMetaphone("B");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("P", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("v", "P");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(2173);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("_5w:9vq");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("_5w:9vq", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string2 = doubleMetaphone1.encode("L");
      assertNotNull(string2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("L", string2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean2 = doubleMetaphone1.isDoubleMetaphoneEqual("L", "Z", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "Sl<fRK^{zZ&EVe&1Jd", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("T");
      assertNotNull(string0);
      assertEquals("T", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("\"?j)Y~_gR{~lARK", false);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("JKRL", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("\"?j)Y~_gR{~lARK", true);
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      assertEquals("JKRL", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.encode("\"?j)Y~_gR{~lARK");
      assertNotNull(string3);
      assertTrue(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertTrue(string3.equals((Object)string1));
      assertEquals("JKRL", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("RANGER", "RANGER", true);
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      char char0 = doubleMetaphone1.charAt("JKRL", 2312);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("T");
      assertNotNull(string0);
      assertEquals("T", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen((-353));
      assertEquals((-353), doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals((-353), int0);
      assertEquals((-353), doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.doubleMetaphone("T");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("w7/GI03\"Nwh!%(", "w7/GI03\"Nwh!%(", false);
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("_5w:9vq", ";eq!dfO");
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("|<1]AS4vK", (String) null);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("_5w:9vq");
      assertNotNull(string1);
      assertEquals("FK", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("FK", "1hR_;`!|)~C", true);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3 == boolean0);
      assertFalse(boolean3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("{|1-AZc", true);
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string1));
      assertEquals("SK", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.encode("PSCI");
      assertNotNull(string3);
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertEquals("S", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string4 = doubleMetaphone0.doubleMetaphone("|<1]AS4vK", false);
      assertNotNull(string4);
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string2));
      assertEquals("SFK", string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean4 = doubleMetaphone0.isDoubleMetaphoneEqual("1hR_;`!|)~C", "{|1-AZc");
      assertTrue(boolean4 == boolean2);
      assertTrue(boolean4 == boolean3);
      assertFalse(boolean4 == boolean0);
      assertTrue(boolean4 == boolean1);
      assertFalse(boolean4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "\"";
      stringArray0[1] = "\"";
      stringArray0[2] = "";
      stringArray0[3] = null;
      stringArray0[4] = "\"";
      stringArray0[5] = ".";
      stringArray0[6] = "S";
      stringArray0[7] = "{|1-AZc";
      boolean boolean5 = DoubleMetaphone.contains((String) null, (-1109), 1, stringArray0);
      assertTrue(boolean5 == boolean1);
      assertFalse(boolean5 == boolean0);
      assertTrue(boolean5 == boolean2);
      assertTrue(boolean5 == boolean4);
      assertTrue(boolean5 == boolean3);
      assertFalse(boolean5);
      assertEquals(8, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(8);
      assertEquals(8, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("WR5-PYQZP;\"", (-1260));
      assertEquals('\u0000', char0);
      assertEquals(8, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("T");
      assertNotNull(string0);
      assertEquals("T", string0);
      assertEquals(8, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string1 = doubleMetaphone1.encode("T");
      assertNotNull(string1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(string1.equals((Object)string0));
      assertEquals("T", string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string2 = doubleMetaphone1.doubleMetaphone("T");
      assertNotNull(string2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      assertEquals("T", string2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string3 = doubleMetaphone2.doubleMetaphone("T", true);
      assertNotNull(string3);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertTrue(string3.equals((Object)string1));
      assertTrue(string3.equals((Object)string2));
      assertTrue(string3.equals((Object)string0));
      assertEquals("T", string3);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("T");
      assertNotNull(string0);
      assertEquals("T", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "\"?j)Y~_gR{~lARK");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("T", false);
      assertNotNull(string1);
      assertTrue(string1.equals((Object)string0));
      assertEquals("T", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.encode("SAN ");
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("SN", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.encode("T");
      assertNotNull(string3);
      assertTrue(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertTrue(string3.equals((Object)string1));
      assertEquals("T", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("z1WE>NP", (String) null, true);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("\"?j)Y~_gR{~lARK", "KNPPOB.LEDE3{");
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string4 = doubleMetaphone1.doubleMetaphone("z1WE>NP", false);
      assertNotNull(string4);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertEquals("SNP", string4);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "ARKP";
      boolean boolean0 = DoubleMetaphone.contains("ARKP", 1, 3284, stringArray0);
      assertFalse(boolean0);
      assertEquals(1, stringArray0.length);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("pPob.ledE3{", false);
      assertNotNull(string0);
      assertEquals("PPLT", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("ARKP", "I", false);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "ARKP");
      assertNotNull(object0);
      assertFalse(object0.equals((Object)string0));
      assertEquals("ARKP", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(4);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("pPob.ledE3{", "mU]k?QA,h");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("mU]", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("pPob", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('6');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("mU]", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("pPob", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string1 = doubleMetaphone0.encode("mU]k?QA,h");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)object0));
      assertFalse(string1.equals((Object)string0));
      assertEquals("MKK", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "_5w:9vq";
      stringArray0[1] = "_5w:9vq";
      stringArray0[2] = "_5w:9vq";
      stringArray0[4] = "_5w:9vq";
      stringArray0[5] = "_5w:9vq";
      stringArray0[6] = "_5w:9vq";
      stringArray0[7] = "_5w:9vq";
      boolean boolean0 = DoubleMetaphone.contains("_5w:9vq", 209, 209, stringArray0);
      assertFalse(boolean0);
      assertEquals(8, stringArray0.length);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("TTH", stringArray0[3]);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(8, stringArray0.length);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone2.new DoubleMetaphoneResult(2173);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("Q");
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("Q", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone3);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      String string0 = doubleMetaphone3.encode("");
      assertNull(string0);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      
      boolean boolean2 = doubleMetaphone1.isDoubleMetaphoneEqual("HEIM", "_5w:9vq", false);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean3 = doubleMetaphone3.isDoubleMetaphoneEqual("n6wpSikt)", "ILLO", true);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(boolean3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      
      int int0 = doubleMetaphone3.getMaxCodeLen();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "ARKP";
      boolean boolean0 = DoubleMetaphone.contains("ARKP", 1, 3284, stringArray0);
      assertFalse(boolean0);
      assertEquals(1, stringArray0.length);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("mlk2IxU}nZ%14mZAC-", false);
      assertNotNull(string0);
      assertEquals("MLKK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("MLKK");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("M", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("M", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('J');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("M", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("M", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string1 = doubleMetaphone1.doubleMetaphone("MLKK");
      assertNotNull(string1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals("MLK", string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("M", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("M", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("M", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("M", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      boolean boolean3 = doubleMetaphone1.isDoubleMetaphoneEqual("MLK", "P");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean3 == boolean2);
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone3);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      String string2 = doubleMetaphone3.doubleMetaphone("qJnDv,<OI^RlEsbc", false);
      assertNotNull(string2);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("KNTF", string2);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "EN";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("v", "EN");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("WITZ", false);
      assertNotNull(string2);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("ATS", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String string3 = null;
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, (String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(4226);
      assertEquals(4226, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("UCCES");
      assertNotNull(string1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals("AKSS", string1);
      assertEquals(4226, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("ISL", (String) null, false);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(boolean0);
      assertEquals(4226, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone3);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      int int1 = doubleMetaphone3.getMaxCodeLen();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertTrue(int1 == int0);
      assertEquals(4, int1);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("_5w:9vq", "_5w:9vq");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string0 = doubleMetaphone1.doubleMetaphone("D");
      assertNotNull(string0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals("T", string0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string1 = doubleMetaphone1.doubleMetaphone("D", false);
      assertNotNull(string1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(string1.equals((Object)string0));
      assertEquals("T", string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(73);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("T", "KbZ^*6");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('E');
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("E", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string2 = doubleMetaphone0.encode("D");
      assertNotNull(string2);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(string2.equals((Object)string1));
      assertTrue(string2.equals((Object)string0));
      assertEquals("T", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("E", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean3 = doubleMetaphone1.isDoubleMetaphoneEqual("G\"K2+*M>WqYA_65JLZ", "WRORG.APACHE.COMMONS.CODEC.LANGUAGE.DOUBLEMETAPHONE$DOUBLEMETAPHONERESULT", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = DoubleMetaphone.contains("_5w:9vq", 209, 1397, (String[]) null);
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("|]JZ(:f[;D\"k^");
      assertNotNull(string0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals("SFTK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String string1 = doubleMetaphone1.doubleMetaphone("TH", true);
      assertNotNull(string1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals("T", string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("T");
      assertNotNull(string0);
      assertEquals("T", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "\"?j)Y~_gR{~lARK");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "3Uji~{uwbw6TW", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("MANGER");
      assertNotNull(string0);
      assertEquals("MNJR", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("6DD%Laizy+s", "org.apache.commons.codec.EncoderException", true);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("_5w:9vq", "v");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("B");
      assertNotNull(string0);
      assertEquals("P", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string1 = doubleMetaphone1.doubleMetaphone(")at7v_FD}=FUp", false);
      assertNotNull(string1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals("TFFT", string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("WR", "_5w:9vq", true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      Object object0 = doubleMetaphone1.encode((Object) "_5w:9vq");
      assertNotNull(object0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string1));
      assertEquals("FK", object0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(529);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("", "WR");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("WR", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('6');
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("WR", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("6", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string2 = doubleMetaphone1.encode((String) null);
      assertNull(string2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string1 = doubleMetaphone1.encode("|");
      assertNotNull(string1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals("", string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("SC", "|", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      int int1 = doubleMetaphone2.getMaxCodeLen();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertTrue(int1 == int0);
      assertEquals(4, int1);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(71);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("Aw(pQPL_\"lLQ[nJ'Mgn", (-24));
      assertEquals('\u0000', char0);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("Aw(pQPL_\"lLQ[nJ'Mgn");
      assertNotNull(string0);
      assertEquals("APKPLLKNJMKN", string0);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("Aw(pQPL_\"lLQ[nJ'Mgn");
      assertNotNull(string1);
      assertTrue(string1.equals((Object)string0));
      assertEquals("APKPLLKNJMKN", string1);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("Z5:", false);
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("S", string2);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(438);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("APKPLLKNJMKN");
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      assertEquals("APKPLLKNJMKN", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("APKPLLKNJMKN", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('\u0000');
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      assertEquals("APKPLLKNJMKN\u0000", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("APKPLLKNJMKN\u0000", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("S", "APKPLLKNJMKN", true);
      assertFalse(boolean0);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("`1akJ(]aR(gd3dg!vO?");
      assertNotNull(string3);
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertEquals("KRKTTKF", string3);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      assertEquals("APKPLLKNJMKN\u0000", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("APKPLLKNJMKN\u0000", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      assertEquals("APKPLLKNJMKN\u0000", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("APKPLLKNJMKN\u0000", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("Aw(pQPL_\"lLQ[nJ'Mgn", "");
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string4 = doubleMetaphone1.doubleMetaphone("RGY", false);
      assertNotNull(string4);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertEquals("RJ", string4);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(953);
      assertEquals(953, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("wTAiv.E", false);
      assertNotNull(string0);
      assertEquals("TF", string0);
      assertEquals(953, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("wTAiv.E", "DoubleMetaphone encode parameter is not of type String", true);
      assertFalse(boolean0);
      assertEquals(953, doubleMetaphone0.getMaxCodeLen());
      
      try { 
        doubleMetaphone0.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "ARKP";
      boolean boolean0 = DoubleMetaphone.contains("ARKP", 1, 3284, stringArray0);
      assertFalse(boolean0);
      assertEquals(1, stringArray0.length);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("ARKP", "xU\"~,rbW!SU");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2173);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("OWSKY");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("OWSKY", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone0.encode("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("KN[", "OWSKY", true);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("\"", "ILLO", true);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(71);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("Aw(pQPL_\"lLQ[nJ'Mgn", (-24));
      assertEquals('\u0000', char0);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("Aw(pQPL_\"lLQ[nJ'Mgn");
      assertNotNull(string0);
      assertEquals("APKPLLKNJMKN", string0);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("Aw(pQPL_\"lLQ[nJ'Mgn");
      assertNotNull(string1);
      assertTrue(string1.equals((Object)string0));
      assertEquals("APKPLLKNJMKN", string1);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("Z5:", false);
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("S", string2);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(438);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("APKPLLKNJMKN");
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      assertEquals("APKPLLKNJMKN", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("APKPLLKNJMKN", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('\u0000');
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      assertEquals("APKPLLKNJMKN\u0000", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("APKPLLKNJMKN\u0000", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("S", "APKPLLKNJMKN", true);
      assertFalse(boolean0);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("`1akJ(]aR(gd3dg!vO?");
      assertNotNull(string3);
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertEquals("KRKTTKF", string3);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      assertEquals("APKPLLKNJMKN\u0000", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("APKPLLKNJMKN\u0000", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      assertEquals("APKPLLKNJMKN\u0000", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("APKPLLKNJMKN\u0000", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string4 = doubleMetaphone1.encode("ILLA");
      assertNotNull(string4);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertEquals("AL", string4);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string5 = doubleMetaphone0.doubleMetaphone("KRKTTKF", true);
      assertNotNull(string5);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string2));
      assertEquals("KRKTKF", string5);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(71, int0);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "xP{elaw;I/wHR2-ql\"";
      String string1 = "\"YzPyl\"DmYJ6@wgc-";
      String string2 = doubleMetaphone0.encode("\"YzPyl\"DmYJ6@wgc-");
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("SPLT", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen((-2550));
      assertEquals((-2550), doubleMetaphone0.getMaxCodeLen());
      
      String string3 = "CI";
      String string4 = "W:";
      // Undeclared exception!
      try { 
        doubleMetaphone0.doubleMetaphone("W:");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(4226);
      assertEquals(4226, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("CI");
      assertNotNull(string1);
      assertEquals("S", string1);
      assertEquals(4226, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("", true);
      assertNull(string2);
      assertEquals(4226, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("o_KHX3qq,ih", "vt", true);
      assertFalse(boolean0);
      assertEquals(4226, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "");
      assertNull(object0);
      assertEquals(4226, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.encode("EL");
      assertNotNull(string3);
      assertFalse(string3.equals((Object)string1));
      assertEquals("AL", string3);
      assertEquals(4226, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("wTAiv.E", (-1606));
      assertEquals('\u0000', char0);
      assertEquals(4226, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "ARKP";
      boolean boolean0 = DoubleMetaphone.contains("ARKP", 1, 3284, stringArray0);
      assertFalse(boolean0);
      assertEquals(1, stringArray0.length);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("SCH");
      assertNotNull(string0);
      assertEquals("X", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("xU\"~,rbW!SU", true);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("SRPS", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("T");
      assertNotNull(string0);
      assertEquals("T", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "\"?j)Y~_gR{~lARK");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("T", false);
      assertNotNull(string1);
      assertTrue(string1.equals((Object)string0));
      assertEquals("T", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.encode("SAN ");
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("SN", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.encode("T");
      assertNotNull(string3);
      assertTrue(string3.equals((Object)string1));
      assertTrue(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertEquals("T", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("z1WE>NP", (String) null, true);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("", (-1));
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("y$.i4N/h?:d", "W]0R'> uL^}37$<KRg7");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("y$.i4N/h?:d", false);
      assertNotNull(string0);
      assertEquals("ANT", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("] dsaL)Ajy/ C(QzQ");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("TSLJ", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("TSLJ", false);
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      assertEquals("TSLJ", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt(",v'sj~88{+", 90);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(816);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append(",v'sj~88{+");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(",v'sj~88{+", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals(",v'sj~88{+", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(",v'sj~88{+", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals(",v'sj~88{+", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual(",v'sj~88{+", "W]0R'> uL^}37$<KRg7", true);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(953);
      assertEquals(953, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(953, int0);
      assertEquals(953, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("HOLZ", false);
      assertNotNull(string0);
      assertEquals("HLS", string0);
      assertEquals(953, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("_5w:9vq", "_5w:9vq");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("wDo$XNn0zD5,RrbE<F ", false);
      assertNotNull(string0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals("TKSN", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      doubleMetaphone2.setMaxCodeLen(89);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(89, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(3842);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('E');
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("E", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("E", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("wDo$XNn0zD5,RrbE<F ");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("E", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("EwDo$XNn0zD5,RrbE<F ", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("}rKgZ$", "");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("EwDo$XNn0zD5,RrbE<F ", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("E}rKgZ$", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      boolean boolean1 = doubleMetaphone2.isDoubleMetaphoneEqual("}rKgZ$", "AS");
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(89, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("WRW:", "rp");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      boolean boolean3 = doubleMetaphone2.isDoubleMetaphoneEqual("_5w:9vq", "DGJb", false);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3 == boolean0);
      assertFalse(boolean3);
      assertEquals(89, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      
      String string1 = doubleMetaphone1.doubleMetaphone("_5w:9vq", false);
      assertNotNull(string1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(string1.equals((Object)string0));
      assertEquals("FK", string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("2KvNfp{!qhfzI-[");
      assertNotNull(string0);
      assertEquals("KFNF", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("");
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(4226);
      assertEquals(4226, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException");
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertEquals("ARKPXKMNSKTKNKTRKSPXN", string2);
      assertEquals(4226, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-2131));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4226, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('$');
      assertEquals(4226, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('j');
      assertEquals(4226, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string3 = doubleMetaphone0.doubleMetaphone("", false);
      assertNull(string3);
      assertEquals(4226, doubleMetaphone0.getMaxCodeLen());
      
      String string4 = doubleMetaphone0.doubleMetaphone("N", false);
      assertNotNull(string4);
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertEquals("N", string4);
      assertEquals(4226, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "N";
      stringArray0[1] = "";
      stringArray0[2] = "2KvNfp{!qhfzI-[";
      stringArray0[3] = null;
      stringArray0[4] = "";
      stringArray0[5] = "2KvNfp{!qhfzI-[";
      stringArray0[6] = "KFNF";
      stringArray0[7] = "";
      boolean boolean0 = DoubleMetaphone.contains((String) null, (-2131), 96, stringArray0);
      assertFalse(boolean0);
      assertEquals(8, stringArray0.length);
      
      Object object0 = doubleMetaphone0.encode((Object) "cl+ug^[z");
      assertNotNull(object0);
      assertFalse(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string2));
      assertFalse(object0.equals((Object)string4));
      assertEquals("KLKS", object0);
      assertEquals(4226, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(953);
      assertEquals(953, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("", false);
      assertNull(string0);
      assertEquals(953, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("Aq~]Kj&uhK}>:", "O", false);
      assertFalse(boolean0);
      assertEquals(953, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(4993);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(953, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('A');
      assertEquals(953, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("A", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("O");
      assertEquals(953, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("AO", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(953, int0);
      assertEquals(953, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('A', 'h');
      assertEquals(953, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AOA", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("h", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("-gOj%kw-(oH_", (String) null, true);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(953, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("v zs?.TG", true);
      assertNotNull(string1);
      assertEquals("FSSTK", string1);
      assertEquals(953, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException");
      assertNotNull(string0);
      assertEquals("ARKP", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string1 = doubleMetaphone1.encode("TCH");
      assertNotNull(string1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals("X", string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("6>D%Laizy+s", "org.apache.commons.codec.EncoderException", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(int1 == int0);
      assertEquals(4, int1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("\"YzPyl\"DmYJ6@wgc-", true);
      assertNotNull(string0);
      assertEquals("TSPL", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("&'aYr)2Q2:0fXA", "\"YzPyl\"DmYJ6@wgc-", true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("&'aYr)2Q2:0fXA", true);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("RKFK", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("&'aYr)2Q2:0fXA", "xP{elaw;I/wHR2-ql\"");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(88);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("RKFK", "q");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("q", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("RKFK", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.encode("I");
      assertNotNull(string2);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("A", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("BACHER", "M", true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string3 = doubleMetaphone1.doubleMetaphone("BACHER", true);
      assertNotNull(string3);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertEquals("PKR", string3);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(4226);
      assertEquals(4226, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("CI");
      assertNotNull(string1);
      assertEquals("S", string1);
      assertEquals(4226, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(281);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4226, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string2 = doubleMetaphone0.doubleMetaphone("", false);
      assertNull(string2);
      assertEquals(4226, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = null;
      stringArray0[3] = null;
      stringArray0[3] = null;
      stringArray0[4] = "";
      stringArray0[5] = "CI";
      stringArray0[6] = "";
      stringArray0[7] = null;
      boolean boolean0 = DoubleMetaphone.contains("", 4226, (-1276), stringArray0);
      assertFalse(boolean0);
      assertEquals(8, stringArray0.length);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.charAt(string0, 4226);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("_5w:9vq", "");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("wTAiv.E", false);
      assertNotNull(string1);
      assertEquals("TF", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "HARIS", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("_5w:9vq", "");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("wTAiv.E", false);
      assertNotNull(string1);
      assertEquals("TF", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("_5w:9vq", (String) null, false);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "");
      assertNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("", "_5w:9vq");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('6');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string2 = doubleMetaphone0.encode("GrXQ^T74");
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string1));
      assertEquals("KRKS", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(71);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("Aw(pQPL_\"lLQ[nJ'Mgn", (-24));
      assertEquals('\u0000', char0);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("Aw(pQPL_\"lLQ[nJ'Mgn");
      assertNotNull(string0);
      assertEquals("APKPLLKNJMKN", string0);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("Aw(pQPL_\"lLQ[nJ'Mgn");
      assertNotNull(string1);
      assertTrue(string1.equals((Object)string0));
      assertEquals("APKPLLKNJMKN", string1);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("Z5:", false);
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("S", string2);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(438);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("APKPLLKNJMKN");
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      assertEquals("APKPLLKNJMKN", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("APKPLLKNJMKN", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('\u0000');
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      assertEquals("APKPLLKNJMKN\u0000", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("APKPLLKNJMKN\u0000", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("S", "APKPLLKNJMKN", true);
      assertFalse(boolean0);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      assertEquals("APKPLLKNJMKN\u0000", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("APKPLLKNJMKN\u0000", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      assertEquals("APKPLLKNJMKN\u0000", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("APKPLLKNJMKN\u0000", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("Aw(pQPL_\"lLQ[nJ'Mgn", "");
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("APKPLLKNJMKN");
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      assertEquals("APKPLLKNJMKN\u0000APKPLLKNJMKN", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("APKPLLKNJMKN\u0000", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      // Undeclared exception!
      try { 
        DoubleMetaphone.contains("APKPLLKNJMKN", 505, (-992), (String[]) null);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("");
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(4226);
      assertEquals(4226, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("CI");
      assertNotNull(string2);
      assertEquals("S", string2);
      assertEquals(4226, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(281);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4226, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('-');
      assertEquals(4226, doubleMetaphone0.getMaxCodeLen());
      assertEquals("-", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('l');
      assertEquals(4226, doubleMetaphone0.getMaxCodeLen());
      assertEquals("l", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("-l", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string3 = doubleMetaphone0.doubleMetaphone("", false);
      assertNull(string3);
      assertEquals(4226, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = null;
      stringArray0[4] = "";
      stringArray0[5] = "CI";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("&xc`Ki? V}(ip@E?x>", (String) null, false);
      assertFalse(boolean0);
      assertEquals(4226, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "_5w:9vq";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("OWSKI", "OWSKI");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string1 = doubleMetaphone1.doubleMetaphone("org.apache.commons.codec.EncoderException", true);
      assertNotNull(string1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals("ARKP", string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string2 = "uKok{tJVksg{";
      String string3 = doubleMetaphone1.doubleMetaphone("T\"");
      assertNotNull(string3);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertEquals("T", string3);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string4 = "Xtd[m'</k)/RG";
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("j$", "Xtd[m'</k)/RG", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Object object1 = new Object();
      assertNotNull(object1);
      assertFalse(object1.equals((Object)object0));
      
      try { 
        doubleMetaphone1.encode(object1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("_5w:9vq", "");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = "wTAiv.E\\";
      doubleMetaphone0.setMaxCodeLen((-1074787335));
      assertEquals((-1074787335), doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.doubleMetaphone("wTAiv.E", false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(81);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('C', 'X');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("X", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("C", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("X", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("C", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('4');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("X4", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("C", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone0.doubleMetaphone("^hY1av$;");
      assertNotNull(string0);
      assertEquals("F", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("^hY1av$;", "^hY1av$;");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("X4^hY1av$;", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("C^hY1av$;", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("X4^hY1av$;", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("C^hY1av$;", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "^hY1av$;";
      stringArray0[1] = "^hY1av$;";
      stringArray0[2] = "^hY1av$;";
      stringArray0[3] = "^hY1av$;";
      stringArray0[4] = "^hY1av$;";
      stringArray0[5] = "^hY1av$;";
      stringArray0[6] = "0";
      stringArray0[7] = "^hY1av$;";
      stringArray0[8] = "^hY1av$;";
      boolean boolean2 = DoubleMetaphone.contains("^hY1av$;", 8, 8, stringArray0);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(9, stringArray0.length);
      
      boolean boolean3 = DoubleMetaphone.contains("^hY1av$;", 8, 8, stringArray0);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3);
      assertEquals(9, stringArray0.length);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("", false);
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("RG.A", (-1));
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean4 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean4 == boolean1);
      assertTrue(boolean4 == boolean3);
      assertTrue(boolean4 == boolean0);
      assertTrue(boolean4 == boolean2);
      assertFalse(boolean4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("X4^hY1av$;", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("C^hY1av$;", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string2 = doubleMetaphone0.doubleMetaphone("OGGI", false);
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertEquals("AJ", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException");
      assertNotNull(string0);
      assertEquals("ARKP", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      assertNotNull(string1);
      assertTrue(string1.equals((Object)string0));
      assertEquals("ARKP", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("}r<``}ghN2Nm]Bis", true);
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("RKNN", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-2539));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      char char0 = 'P';
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('P');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('P', 'P');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string0 = null;
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string1 = doubleMetaphone1.encode((String) null);
      assertNull(string1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string2 = doubleMetaphone2.doubleMetaphone("59iu;r4' ,n", false);
      assertNotNull(string2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals("RN", string2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      
      String string3 = doubleMetaphone0.encode("%K|j5C(t]_!=6V(,r@");
      assertNotNull(string3);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(string3.equals((Object)string2));
      assertEquals("KJKT", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "_5w:9vq";
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("_5w:9vq", "_5w:9vq");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string1 = doubleMetaphone2.doubleMetaphone("", true);
      assertNull(string1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      
      String string2 = doubleMetaphone2.doubleMetaphone("_5w:9vq");
      assertNotNull(string2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("FK", string2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("j$", "_5w:9vq", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode((String) null);
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string2 = doubleMetaphone0.encode((String) null);
      assertNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string3 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertNotNull(string3);
      assertEquals("", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string4 = doubleMetaphone0.doubleMetaphone("}^bIt:O1$!ht[|i)TMS");
      assertNotNull(string4);
      assertFalse(string4.equals((Object)string3));
      assertEquals("PTTT", string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("-");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string5 = doubleMetaphone0.doubleMetaphone("7P^-5USf", true);
      assertNotNull(string5);
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string4));
      assertEquals("PSF", string5);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('p', 'p');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string6 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertNotNull(string6);
      assertFalse(string6.equals((Object)string4));
      assertTrue(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string5));
      assertEquals("", string6);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("I*-`tQ=qF1PZ^F");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string7 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertNotNull(string7);
      assertTrue(string7.equals((Object)string3));
      assertFalse(string7.equals((Object)string4));
      assertFalse(string7.equals((Object)string5));
      assertTrue(string7.equals((Object)string6));
      assertEquals("", string7);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      char char0 = doubleMetaphone0.charAt("21`Im!GiN&(Jp", 0);
      assertEquals('2', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = true;
      String string0 = doubleMetaphone0.doubleMetaphone("PSXP{ELAW;I/WHR2-QL\"", true);
      assertNotNull(string0);
      assertEquals("SKSP", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = (-2344);
      String string1 = doubleMetaphone0.encode("SKSP");
      assertNotNull(string1);
      assertTrue(string1.equals((Object)string0));
      assertEquals("SKSP", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-2344));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string2 = "}7";
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("}7");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "`h},i>";
      String string1 = doubleMetaphone0.encode("`h},i>");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone((String) null);
      assertNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.encode("`h},i>");
      assertNotNull(string3);
      assertTrue(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertEquals("", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "");
      assertNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1217));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("D", true);
      assertNotNull(string0);
      assertEquals("T", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("T");
      assertNotNull(string1);
      assertTrue(string1.equals((Object)string0));
      assertEquals("T", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("7`~S/yn", true);
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("SN", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "}7", true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone((String) null, false);
      assertNull(string3);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "}7";
      boolean boolean1 = DoubleMetaphone.contains("org.apache.commons.codec.EncoderException", (-2354), 1, stringArray0);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(1, stringArray0.length);
      
      String string4 = doubleMetaphone0.encode("SN");
      assertNotNull(string4);
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertEquals("", string4);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "HEIM");
      assertNotNull(object0);
      assertFalse(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string1));
      assertTrue(object0.equals((Object)string4));
      assertFalse(object0.equals((Object)string2));
      assertEquals("", object0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(71);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("Aw(pQPL_\"lLQ[nJ'Mgn", (-24));
      assertEquals('\u0000', char0);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("Aw(pQPL_\"lLQ[nJ'Mgn");
      assertNotNull(string0);
      assertEquals("APKPLLKNJMKN", string0);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("Aw(pQPL_\"lLQ[nJ'Mgn");
      assertNotNull(string1);
      assertTrue(string1.equals((Object)string0));
      assertEquals("APKPLLKNJMKN", string1);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("Z5:");
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("S", string2);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("APKPLLKNJMKN", true);
      assertNotNull(string3);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertEquals("APKPLKNMKN", string3);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(71);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("Aw(pQPL_\"lLQ[nJ'Mgn", (-24));
      assertEquals('\u0000', char0);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("Aw(pQPL_\"lLQ[nJ'Mgn");
      assertNotNull(string0);
      assertEquals("APKPLLKNJMKN", string0);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("Aw(pQPL_\"lLQ[nJ'Mgn");
      assertNotNull(string1);
      assertTrue(string1.equals((Object)string0));
      assertEquals("APKPLLKNJMKN", string1);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("Z5:", false);
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("S", string2);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(438);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('\u0000');
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      assertEquals("\u0000", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("\u0000", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string3 = doubleMetaphone0.doubleMetaphone("&", false);
      assertNotNull(string3);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertEquals("", string3);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Z5:";
      stringArray0[1] = "APKPLLKNJMKN";
      stringArray0[2] = "APKPLLKNJMKN";
      boolean boolean0 = DoubleMetaphone.contains("Z5:", (-1276), (-24), stringArray0);
      assertFalse(boolean0);
      assertEquals(3, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("");
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(4226);
      assertEquals(4226, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("CI");
      assertNotNull(string2);
      assertEquals("S", string2);
      assertEquals(4226, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(281);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4226, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('-');
      assertEquals(4226, doubleMetaphone0.getMaxCodeLen());
      assertEquals("-", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('l');
      assertEquals(4226, doubleMetaphone0.getMaxCodeLen());
      assertEquals("l", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("-l", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string3 = doubleMetaphone0.doubleMetaphone("", false);
      assertNull(string3);
      assertEquals(4226, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = null;
      stringArray0[4] = "";
      stringArray0[5] = "CI";
      stringArray0[6] = "";
      stringArray0[7] = null;
      boolean boolean0 = DoubleMetaphone.contains("", 4226, (-1276), stringArray0);
      assertFalse(boolean0);
      assertEquals(8, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("_5w:9vq", "");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = "";
      String string2 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = "wTAiv.E\\";
      String string4 = doubleMetaphone0.doubleMetaphone("wTAiv.E", false);
      assertNotNull(string4);
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      assertEquals("TF", string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string5 = "^Vq";
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "^Vq", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(4341);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertNotNull(string0);
      assertEquals("", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = null;
      stringArray0[1] = "";
      stringArray0[2] = null;
      stringArray0[3] = "";
      // Undeclared exception!
      try { 
        DoubleMetaphone.contains((String) null, 1, 4341, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(953);
      assertEquals(953, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("", true);
      assertNull(string0);
      assertEquals(953, doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "Aq~]Kj&uhK}>:", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(74);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string0 = doubleMetaphone0.doubleMetaphone("", false);
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(74);
      assertEquals(74, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('p');
      assertEquals(74, doubleMetaphone0.getMaxCodeLen());
      assertEquals("p", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("p", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string1 = "";
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("");
      assertEquals(74, doubleMetaphone0.getMaxCodeLen());
      assertEquals("p", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("p", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      char char0 = ')';
      doubleMetaphone_DoubleMetaphoneResult0.append("", "");
      assertEquals(74, doubleMetaphone0.getMaxCodeLen());
      assertEquals("p", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("p", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("DGJb", "q\"q");
      assertFalse(boolean0);
      assertEquals(74, doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "DGJb");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(662);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('I', 'I');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("I", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("I", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('v');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("I", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("Iv", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(71);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("Aw(pQPL_\"lLQ[nJ'Mgn", (-24));
      assertEquals('\u0000', char0);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("Aw(pQPL_\"lLQ[nJ'Mgn");
      assertNotNull(string0);
      assertEquals("APKPLLKNJMKN", string0);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("Aw(pQPL_\"lLQ[nJ'Mgn");
      assertNotNull(string1);
      assertTrue(string1.equals((Object)string0));
      assertEquals("APKPLLKNJMKN", string1);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("Z5:", false);
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("S", string2);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(438);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("APKPLLKNJMKN");
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      assertEquals("APKPLLKNJMKN", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("APKPLLKNJMKN", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('\u0000');
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      assertEquals("APKPLLKNJMKN\u0000", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("APKPLLKNJMKN\u0000", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("S", "APKPLLKNJMKN", true);
      assertFalse(boolean0);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      assertEquals("APKPLLKNJMKN\u0000", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("APKPLLKNJMKN\u0000", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string3 = doubleMetaphone0.doubleMetaphone("Z5:", true);
      assertNotNull(string3);
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertTrue(string3.equals((Object)string2));
      assertEquals("S", string3);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      assertEquals("APKPLLKNJMKN\u0000", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("APKPLLKNJMKN\u0000", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("Aw(pQPL_\"lLQ[nJ'Mgn", "");
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("FlNWSUOj+xs>O<Lyu`-", "(%qn");
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      assertEquals("APKPLLKNJMKN\u0000(%qn", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("APKPLLKNJMKN\u0000FlNWSUOj+xs>O<Lyu`-", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("APKPLLKNJMKN");
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      assertEquals("APKPLLKNJMKN\u0000FlNWSUOj+xs>O<Lyu`-", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("APKPLLKNJMKN\u0000(%qnAPKPLLKNJMKN", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "FlNWSUOj+xs>O<Lyu`-", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = true;
      String string0 = doubleMetaphone0.doubleMetaphone("D", true);
      assertNotNull(string0);
      assertEquals("T", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = (-2347);
      String string1 = doubleMetaphone0.encode("T");
      assertNotNull(string1);
      assertTrue(string1.equals((Object)string0));
      assertEquals("T", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-2347));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string2 = "}7";
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("}7");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone0.encode("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('o');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("o", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("o", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = null;
      String string1 = doubleMetaphone0.encode((String) null);
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = 1;
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('P');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("P", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.appendAlternate((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "'l=Y";
      String string1 = doubleMetaphone0.encode("");
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("'l=Y", "cOE{6", true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("cOE{6");
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertEquals("K", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = "$h|,/j8UaAI";
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("c-m}P~-IqzAYY", "$h|,/j8UaAI");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1868);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("`H#1", "'l=Y");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("'l=Y", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("`H#1", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.appendPrimary((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = 3;
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(3);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("HARIS", "HARIS");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("HAR", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("HAR", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("", "");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("HAR", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("HAR", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "#Jz=nl?2[DbE";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "tZ~ND>r/p$6V4";
      stringArray0[4] = "";
      boolean boolean0 = DoubleMetaphone.contains("tZ~ND>r/p$6V4", 0, 1, stringArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-569));
      String string0 = "$%fy\\v7Q'P//`zB";
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("$%fyv7Q'P//`zB");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone((String) null, true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(0);
      doubleMetaphone0.isDoubleMetaphoneEqual("ER", "63=kWhBH+MmZ{^e", false);
      doubleMetaphone0.isDoubleMetaphoneEqual("zNcpmm", "zNcpmm");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.append('>');
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone0.getMaxCodeLen();
      String string0 = doubleMetaphone0.encode("mMVCI^ z3|j");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-2539));
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('P');
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('P', 'P');
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone0.isDoubleMetaphoneEqual("ME", "ME", false);
      String string0 = doubleMetaphone0.doubleMetaphone("ME", false);
      assertEquals("M", string0);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      int int0 = (-1);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1));
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('`');
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "";
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = doubleMetaphone0.doubleMetaphone("xP{elaw;I/wHR2-ql\"");
      assertEquals("SPLR", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      assertEquals("ARKP", string1);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      int int0 = (-4553);
      doubleMetaphone0.doubleMetaphone("/Jq2%AeMi");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-4553));
      String string0 = "org.apache.commons.codec.EncoderException";
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append("/Jq2%AeMi", "org.apache.commons.codec.EncoderException");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1255);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary(" |dHu");
      doubleMetaphone_DoubleMetaphoneResult0.append('0', 'j');
      assertEquals("j", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "[r40^DfSXcjcW3";
      doubleMetaphone0.doubleMetaphone("[r40^DfSXcjcW3", false);
      Object object0 = new Object();
      doubleMetaphone0.doubleMetaphone("EM", false);
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "2Ix(@P@_";
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "2Ix(@P@_");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = doubleMetaphone0.doubleMetaphone("'yA~");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      int int0 = 1630;
      String string0 = "";
      doubleMetaphone0.doubleMetaphone("", false);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1630);
      doubleMetaphone_DoubleMetaphoneResult0.append('W', 'V');
      try { 
        doubleMetaphone0.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone("");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(4242);
      doubleMetaphone0.doubleMetaphone("", true);
      doubleMetaphone0.charAt("", 4242);
      doubleMetaphone0.encode("");
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("");
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("");
      doubleMetaphone_DoubleMetaphoneResult0.append('c');
      doubleMetaphone_DoubleMetaphoneResult0.append("~8I,HD*/)rV1w");
      doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("c~8I,HD*/)rV1w", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "`h},i>";
      doubleMetaphone0.encode("`h},i>");
      doubleMetaphone0.doubleMetaphone((String) null);
      doubleMetaphone0.encode("`h},i>");
      int int0 = (-1217);
      try { 
        doubleMetaphone0.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }
}
