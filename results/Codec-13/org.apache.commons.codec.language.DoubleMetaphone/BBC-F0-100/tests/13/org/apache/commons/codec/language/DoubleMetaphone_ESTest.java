/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 02 00:36:55 GMT 2021
 */

package org.apache.commons.codec.language;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.codec.language.DoubleMetaphone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DoubleMetaphone_ESTest extends DoubleMetaphone_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("$~.dX(UMB");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TKSM", string0);
      
      Object object0 = doubleMetaphone0.encode((Object) "$~.dX(UMB");
      assertTrue(object0.equals((Object)string0));
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TKSM", object0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("PNGIER", "~J");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("i#N,>Avkg(:LH_KgL ", "$~.dX(UMB");
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(1611);
      assertEquals(1611, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("SChGB5;>Nkuh_0%wIP");
      assertNotNull(string0);
      assertEquals(1611, doubleMetaphone0.getMaxCodeLen());
      assertEquals("XKPNKP", string0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("yGNKC :ec");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AKNK", string0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      String string0 = "OS";
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(2147483645);
      assertEquals(2147483645, doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      doubleMetaphone0.isDoubleMetaphoneEqual("Z", (String) null, true);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("Jn8qc%Q08]#[GF");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("JNKK", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone((String) null);
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("[{W`IT)`YGHk", true);
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TKK", string2);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("AGnI");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AKN", string0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("UMBB");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AMP", string0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("OGH");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AK", string0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("TOGH");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TK", string0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("p^koUghq");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PKKK", string0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("2!33bzqwgrPCD");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PSKK", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("PD^`{\"$>HrLw");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PTRL", string1);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "C";
      boolean boolean0 = DoubleMetaphone.contains(":69~!igY4", (-886), (-886), stringArray0);
      assertEquals(1, stringArray0.length);
      assertFalse(boolean0);
      
      Object object0 = doubleMetaphone0.encode((Object) ":69~!igY4");
      assertFalse(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string0));
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("J", object0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("GNJOSE");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NJS", string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("NJS");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NS", string1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String string2 = doubleMetaphone0.encode("hDGEuhMZWKmGTi+");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("JMSK", string2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("+LoGHjz@}):=Y", "e");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("] iI@bh", "] iI@bh", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string0 = doubleMetaphone0.encode("S'>iGHfH");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SF", string0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("qS'>iGHH");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KS", string0);
      
      String string1 = doubleMetaphone0.encode("z*Gky5");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SKK", string1);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("ghit-v<m?<\"S$q1");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("JTFM", string0);
      
      String string1 = doubleMetaphone0.encode("ghit-v<m?<\"S$q1");
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("JTFM", string1);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "+c8w,";
      stringArray0[1] = "6Iv,<tzZIsn";
      stringArray0[2] = "6Iv,<tzZIsn";
      boolean boolean0 = DoubleMetaphone.contains("6Iv,<tzZIsn", 1, 1, stringArray0);
      assertEquals(3, stringArray0.length);
      assertFalse(boolean0);
      
      Object object0 = doubleMetaphone0.encode((Object) "6Iv,<tzZIsn");
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FTSS", object0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("DG");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TK", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("GeR1}c4+&< 4WAe=}", ",a8HPQ&t5NRiY$,?[3{");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      try { 
        doubleMetaphone0.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("HAIS");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("H", string0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("2PToUghq");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PTFK", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("2PToUghq", "2PToUghq");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("KNV_HyaGH~`/");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NF", string0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("MCH");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("MK", string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      doubleMetaphone1.setMaxCodeLen(72);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(72, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string1 = doubleMetaphone1.doubleMetaphone("THBavHt,", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(72, doubleMetaphone1.getMaxCodeLen());
      assertEquals("TPFT", string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string2 = doubleMetaphone1.doubleMetaphone("I.S)^Dt", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals(72, doubleMetaphone1.getMaxCodeLen());
      assertEquals("AST", string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("l&'IS!k", "X7oY*N{#{E");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone2.encode((Object) ":jR");
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(object1.equals((Object)string0));
      assertFalse(object1.equals((Object)string1));
      assertFalse(object1.equals((Object)string2));
      assertNotNull(object1);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("JR", object1);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("CCEE");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("X", string0);
      
      char char0 = doubleMetaphone0.charAt("PSORG.APACHE.COMMONS.CODEC.ENCODEREXCEPTION", 83);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("f-#[gEt$OM$e[U^", "KNTSK");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("aRdNK<)Qk]Io/DvwH", true);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARTN", string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string1 = doubleMetaphone1.doubleMetaphone("oJV,BxdKNtH~nh", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("AJFP", string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string2 = doubleMetaphone1.doubleMetaphone("EI", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("A", string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string3 = doubleMetaphone1.doubleMetaphone("PS7GLIINID:D");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("SKLN", string3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone1.encode("iJA]S<i{@e");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("AJS", string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("bVs%");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PFS", string0);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "bVs%";
      stringArray0[1] = "PFS";
      stringArray0[2] = "b-(<";
      stringArray0[3] = "4m/ZGM{";
      stringArray0[4] = "bVs%";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("4m/ZGM{", "PSCIO");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      stringArray0[5] = "bVs%";
      stringArray0[6] = "PFS";
      stringArray0[7] = "PFS";
      boolean boolean1 = DoubleMetaphone.contains("4m/ZGM{", 209, 209, stringArray0);
      assertTrue(boolean1 == boolean0);
      assertEquals(8, stringArray0.length);
      assertFalse(boolean1);
      
      char char0 = doubleMetaphone0.charAt("bVs%", 209);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("PSHEIM");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SM", string0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("3(W", true);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", string0);
      
      String string1 = doubleMetaphone0.encode("7gLIN~0dw#p");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KLNT", string1);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("UCCE");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AX", string0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("I LLA");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AL", string0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "SAN ";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult";
      stringArray0[5] = "E9#\"%qte";
      boolean boolean0 = DoubleMetaphone.contains("org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult", 1, 0, stringArray0);
      assertEquals(6, stringArray0.length);
      assertTrue(boolean0);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("CIE", "CIE");
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1);
      
      char char0 = doubleMetaphone0.charAt("CIE", 32);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("PNRCHS");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NRKS", string0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("KNPSILLO^O");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NPSL", string0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("HEM", "H");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.encode("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("LmD;.4{6~;&nR&0", "6AChR2'5K;");
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "P");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("-\"Z[N3cuJOS\"Jc4]1:", "", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("-CE");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S", string0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("-CE", "S");
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1);
      
      char char0 = doubleMetaphone0.charAt((String) null, (-283));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("ILL");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AL", string0);
      
      Object object0 = doubleMetaphone0.encode((Object) "AL");
      assertTrue(object0.equals((Object)string0));
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AL", object0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("ILL", true);
      assertTrue(string1.equals((Object)string0));
      assertTrue(string1.equals((Object)object0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AL", string1);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("kW/|3f<ZHtA", (String) null, true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("GNACH");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NK", string0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("kW/|3f<ZHtA", "kW/|3f<ZHtA");
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("CHORl");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KRL", string0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("u");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("A", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("Gy", "Gy");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("SIER");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("bB=%$I:}r)WDV", "TH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("bB=%$I:}r)WDV", false);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PRTF", string1);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("SH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("SH", false);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("X", string0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('\\', '(');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("(", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("S", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('K');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("(", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("S", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string1 = doubleMetaphone0.doubleMetaphone("^>^p");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("P", string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("KNDD", false);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NT", string2);
      
      String string3 = doubleMetaphone0.doubleMetaphone("SH", false);
      assertFalse(string3.equals((Object)string2));
      assertTrue(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("X", string3);
      
      char char0 = doubleMetaphone0.charAt("S|GFl~ktPX:oOXQ", 1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('|', char0);
      
      String string4 = doubleMetaphone0.doubleMetaphone("a3`)Cq/=pSzA<pVD");
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertNotNull(string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AKPS", string4);
      
      char char1 = doubleMetaphone0.charAt("NT", 1);
      assertFalse(char1 == char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('T', char1);
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("(", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("S", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertTrue(boolean1);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('|');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("(", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("S", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("(", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("S", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertTrue(boolean2);
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("NT", "X");
      assertFalse(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3 == boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean3);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("}8r.!w4y>");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("R", string0);
      
      char char0 = doubleMetaphone0.charAt("}8r.!w4y>", 1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('8', char0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("THBavHt,", ",W[ac Q", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("THBavHt,", false);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("0PFT", string0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("ohW_m/fJNW ", "org.apache.commons.codec.EncoderException", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.encode("PSCQ");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SK", string0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1974);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("aBm;fFqFE$73+M:t;{9", false);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("APMF", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("PN", false);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("N", string1);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("UG%i3{OM2", "KNILLO");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("UG%i3{OM2", "UG%i3{OM2", true);
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "UG%i3{OM2", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      Object object0 = doubleMetaphone1.encode((Object) "Z!ReC'4lLw35Nol_");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("SRKL", object0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("4mB:Al~H_315!%", "4mB:Al~H_315!%", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("PSCHORE", "WRSIAN");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string0 = doubleMetaphone1.encode(":&HJe");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("J", string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      char char0 = doubleMetaphone1.charAt("w*bxo(ETl", 70);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals('\u0000', char0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      doubleMetaphone1.setMaxCodeLen((-3197));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals((-3197), doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      // Undeclared exception!
      try { 
        doubleMetaphone1.isDoubleMetaphoneEqual("?Fa+*[p/", "?Fa+*[p/", true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("eV+y<<lpInc`V", "ChmgCKyhU?q");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("eV+y<<lpInc`V");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AFLP", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone(";Sy)7<;>4he<gYjpXV=");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SKJP", string1);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("CHORE");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("XR", string0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "YSL");
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AL", object0);
      
      String string0 = doubleMetaphone0.encode("YSL");
      assertTrue(string0.equals((Object)object0));
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AL", string0);
      
      String string1 = doubleMetaphone0.encode("");
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("W50B)", "");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("{SE>qh2(Es", "}GnQA tD`\u0005Vn", false);
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("}GnQA tD`\u0005Vn", "PNHU");
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      
      try { 
        doubleMetaphone0.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("avpaGgS]V=-");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AFPK", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("W", "SH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "PSJOSE");
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SJS", object0);
      
      doubleMetaphone0.setMaxCodeLen(254);
      assertEquals(254, doubleMetaphone0.getMaxCodeLen());
      
      Object object1 = doubleMetaphone0.encode((Object) "PSJOSE");
      assertTrue(object1.equals((Object)object0));
      assertNotNull(object1);
      assertEquals(254, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SJS", object1);
      
      doubleMetaphone0.setMaxCodeLen(1241);
      assertEquals(1241, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "KNL)VOWZE0";
      String string1 = "b>;>o";
      Object object2 = new Object();
      assertNotNull(object2);
      
      try { 
        doubleMetaphone0.encode(object2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("TOE\"", false);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("T", string0);
      
      String string1 = "org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("SUGAR", "org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      doubleMetaphone0.setMaxCodeLen(8);
      assertEquals(8, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("", false);
      assertNull(string2);
      assertEquals(8, doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("WRWICZ", "49deQ9aD5Q[");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string0 = doubleMetaphone2.doubleMetaphone("1]V_h$#gh5/t", true);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("FKT", string0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("}e_WoDI0Y/Ign4", "}e_WoDI0Y/Ign4");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("xl4;N@nQ2E,N", "xl4;N@nQ2E,N");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("xl4;N@nQ2E,N", true);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SLNN", string0);
      
      String string1 = doubleMetaphone0.encode("SLNN");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SLN", string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("SLN", true);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("XLN", string2);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("CHIA", "CHIA");
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(596);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone((String) null);
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("[;#J#$}Zx~6<4", "~lBGSC'_", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string1 = doubleMetaphone0.doubleMetaphone((String) null, true);
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone(")Lc~?chCTAP~{", true);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("LKKK", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("eV+y<<lpInc`V");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AFLP", string1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual(" SzDL?5*vmmi0^Qkh", "(?bGaVAP-Y_");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("xOc=k'^[Jj\"yyr]v^");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SKKJ", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("KNMN*O6PQPTC");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NMNP", string1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("JOSE", "NMNP");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("+-]4gWr", "+-]4gWr", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertTrue(boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string0 = doubleMetaphone1.doubleMetaphone("+-]4gWr", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("KR", string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string1 = doubleMetaphone1.doubleMetaphone("lreFNBvYXN0Z", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("LRFN", string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("PSCHAE", "lreFNBvYXN0Z");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("QEj67;G", "IER");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.encode("Mn*O6Pqptc");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("MNPK", string0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("pl8u", "pl8u");
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("Mn*O6Pqptc", "org.apache.commons.codec.EncoderException");
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("kSn>e9y3)E%", "ghC-v<m$<\"Sv_1");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("+", "+");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("", true);
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("");
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone((String) null, true);
      assertNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("}YChv|Wz%;'<W", "+", true);
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      String string3 = doubleMetaphone0.encode("");
      assertNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string4 = doubleMetaphone0.doubleMetaphone("nn'5<A0", true);
      assertNotNull(string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("N", string4);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("WICZ");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AKS", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone(";Sy)7<;>4he<gYjpXV=", true);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SJJP", string1);
      
      Object object0 = doubleMetaphone0.encode((Object) "SJJP");
      assertFalse(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string1));
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SP", object0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("eV+y<<lpInc`V");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AFLP", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("eV+y<<lpInc`V", "");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      Object object0 = doubleMetaphone0.encode((Object) "eV+y<<lpInc`V");
      assertTrue(object0.equals((Object)string0));
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AFLP", object0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("OOyK@ ,|3", "TTH");
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      String string1 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", true);
      assertFalse(string1.equals((Object)object0));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKP", string1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("TIA", "eV+y<<lpInc`V");
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("+", true);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string1 = doubleMetaphone1.encode("z^(wiMl 64");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("SML", string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("UY", "CHAE");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      char char0 = doubleMetaphone0.charAt("z^(wiMl 64", 429);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("CAESAR");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SSR", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("eV+y<<lpInc`V", false);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AFLP", string1);
      
      doubleMetaphone0.setMaxCodeLen((-20569767));
      assertEquals((-20569767), doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        doubleMetaphone0.doubleMetaphone("M", true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(66);
      assertEquals(66, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone1.encode("]");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string1 = doubleMetaphone1.doubleMetaphone("PS", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("S", string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string2 = doubleMetaphone0.doubleMetaphone("S&fbb ,E)B~<.Gy<Y");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals(66, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SFPPK", string2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      char char0 = doubleMetaphone0.charAt("0y2%#px5).'uF6DZW", 86);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("BACHER");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PKR", string0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      Object object0 = doubleMetaphone1.encode((Object) "org.apache.commons.codec.EncoderException");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(object0.equals((Object)string0));
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("ARKP", object0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string1 = "CHIA";
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("CHIA", "", true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      Object object1 = doubleMetaphone1.encode((Object) "ARKP");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string1));
      assertFalse(object1.equals((Object)string0));
      assertNotNull(object1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("ARKP", object1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(boolean2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string2 = doubleMetaphone0.doubleMetaphone((String) null, false);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      boolean boolean3 = doubleMetaphone1.isDoubleMetaphoneEqual("0y2%#px5).'uF6DZW", "RM9e=d");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3 == boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "RM9e=d";
      stringArray0[1] = "AA8JK3`_!?(7eA";
      stringArray0[2] = null;
      stringArray0[3] = "";
      stringArray0[4] = "RM9e=d";
      // Undeclared exception!
      try { 
        DoubleMetaphone.contains("PS", 1348, (-1880), stringArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("GNWRCHAE", "ws5n_DiS7H1QzV");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      
      char char0 = doubleMetaphone0.charAt("t", 83);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      
      boolean boolean1 = doubleMetaphone2.isDoubleMetaphoneEqual("WR", "");
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone1.doubleMetaphone("TIA", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("X", string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      doubleMetaphone1.setMaxCodeLen(1218);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(1218, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("TIA", false);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("X", string1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "LD@v%/qB]C{F0";
      int int0 = (-493);
      doubleMetaphone0.setMaxCodeLen((-493));
      assertEquals((-493), doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.encode("LD@v%/qB]C{F0");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(52);
      assertEquals(52, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("OGY");
      assertNotNull(string0);
      assertEquals(52, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AJ", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("AJ", false);
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(52, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AJ", string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("AJ");
      assertTrue(string2.equals((Object)string1));
      assertTrue(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals(52, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AJ", string2);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", (String) null, false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("", true);
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("1$@9cUJqcQAokUL}H=", true);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KJKK", string1);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      String string2 = doubleMetaphone0.encode((String) null);
      assertNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("55}}UJ#l`|\"", false);
      assertFalse(string3.equals((Object)string1));
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("JL", string3);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string4 = doubleMetaphone1.doubleMetaphone("UMB", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertNotNull(string4);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("AM", string4);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("CZ");
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S", string1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "CZ");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(object0.equals((Object)string1));
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S", object0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      Object object1 = doubleMetaphone0.encode((Object) "");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNull(object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(74);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string2 = doubleMetaphone2.doubleMetaphone("{)Ss#yeg0e(IvH\"_", true);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)object0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("SKF", string2);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      
      try { 
        doubleMetaphone1.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "EAU";
      String string1 = doubleMetaphone0.doubleMetaphone("EAU");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("A", string1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      doubleMetaphone1.setMaxCodeLen(1375);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(1375, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string2 = "OW";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("CH", "OW", true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String string3 = doubleMetaphone1.encode("^'mUt<1,m9qLJw@9w.N");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertNotNull(string3);
      assertEquals(1375, doubleMetaphone1.getMaxCodeLen());
      assertEquals("MTMKLN", string3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      try { 
        doubleMetaphone1.encode((Object) doubleMetaphone2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("xl4;N@nQ2E,N", "xl4;N@nQ2E,N");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("xl4;N@nQ2E,N");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SLNN", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("kTReA>'Vy0gKhf", true);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KTRF", string1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string2 = doubleMetaphone1.doubleMetaphone("KTRF", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("KTRF", string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string3 = doubleMetaphone0.doubleMetaphone("KTRF", true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertTrue(string3.equals((Object)string2));
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KTRF", string3);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string4 = doubleMetaphone2.doubleMetaphone("KTRF", true);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertTrue(string4.equals((Object)string3));
      assertTrue(string4.equals((Object)string2));
      assertTrue(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertNotNull(string4);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("KTRF", string4);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("doI,.R-h=@@iJ}0U`aX", "doI,.R-h=@@iJ}0U`aX");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("xl4;N@nQ2E,N", "xl4;N@nQ2E,N");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string0 = doubleMetaphone0.encode("xl4;N@nQ2E,N");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SLNN", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("xl4;N@nQ2E,N");
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SLNN", string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("SLNN", true);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("XLN", string2);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string3 = doubleMetaphone1.doubleMetaphone("SLNN", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string0));
      assertTrue(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("XLN", string3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("WICZ", "SCH");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("xl4;N@nQ2E,N", "xl4;N@nQ2E,N");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string0 = doubleMetaphone0.encode("xl4;N@nQ2E,N");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SLNN", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("xl4;N@nQ2E,N");
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SLNN", string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("kTReA>'Vy0gKhf", true);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KTRF", string2);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string3 = doubleMetaphone1.doubleMetaphone("KTRF", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string0));
      assertTrue(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("KTRF", string3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("SLNN", (String) null);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(4);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone0.doubleMetaphone("LqqJ&U]~tRG=RW", true);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("LKJT", string0);
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertTrue(int1 == int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("LKJT");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("LKJT", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String string1 = doubleMetaphone1.encode("LKJT");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("LKT", string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      doubleMetaphone1.setMaxCodeLen(4);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("SwmL .", false);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SML", string2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone4 = new DoubleMetaphone();
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone4);
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      
      String string3 = doubleMetaphone3.doubleMetaphone("LqqJ&U]~tRG=RW");
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertTrue(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertEquals("LKJT", string3);
      assertNotSame(doubleMetaphone3, doubleMetaphone4);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      
      String string4 = doubleMetaphone3.doubleMetaphone("v!+@WrRg", true);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertNotNull(string4);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertEquals("FRRK", string4);
      assertNotSame(doubleMetaphone3, doubleMetaphone4);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("LKJT", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone0, doubleMetaphone4);
      assertNotSame(doubleMetaphone0, doubleMetaphone3);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("9l%Mua3m-kf", "IL");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("9l%Mua3m-kf", false);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("LMMK", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone((String) null, false);
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      String string2 = doubleMetaphone0.encode("ILLO");
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AL", string2);
      
      String string3 = doubleMetaphone0.doubleMetaphone("JOSE", false);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("HS", string3);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("AL", "x/", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean2 = doubleMetaphone1.isDoubleMetaphoneEqual("MACHER", "AL");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string4 = doubleMetaphone1.doubleMetaphone("WR", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertNotNull(string4);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("R", string4);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("WR", "WR");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean3 == boolean0);
      assertFalse(boolean3 == boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean3);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1369);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone1.new DoubleMetaphoneResult(1369);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      String string0 = doubleMetaphone0.encode("MACHER");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("MKR", string0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('', '1');
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("1", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      String string1 = doubleMetaphone3.doubleMetaphone("", true);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertNull(string1);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      
      String string2 = doubleMetaphone2.doubleMetaphone("ORCHID", true);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone3));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("ARKT", string2);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone3);
      
      boolean boolean0 = doubleMetaphone3.isDoubleMetaphoneEqual("fR =CyFX''[8", (String) null);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      
      char char0 = doubleMetaphone1.charAt("ks&sj2F{a{Vjx{", 2234);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals('\u0000', char0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("GHvltv", false);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KFLT", string0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      String string1 = doubleMetaphone3.doubleMetaphone("GHvltv");
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertEquals("KFLT", string1);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("CZ");
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S", string1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string2 = doubleMetaphone0.doubleMetaphone("AGGI", false);
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AJ", string2);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string3 = doubleMetaphone2.doubleMetaphone("CZ", false);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string2));
      assertTrue(string3.equals((Object)string1));
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("S", string3);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      doubleMetaphone3.setMaxCodeLen(0);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertEquals(0, doubleMetaphone3.getMaxCodeLen());
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone4 = new DoubleMetaphone();
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertNotNull(doubleMetaphone4);
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone4.isDoubleMetaphoneEqual("H:@yXHzZ-}&NPT", "DG");
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone4, doubleMetaphone3);
      assertNotSame(doubleMetaphone4, doubleMetaphone1);
      assertNotSame(doubleMetaphone4, doubleMetaphone0);
      assertNotSame(doubleMetaphone4, doubleMetaphone2);
      
      String string4 = doubleMetaphone1.doubleMetaphone("AJ", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone3));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertNotNull(string4);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("A ", string4);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone4);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone3);
      
      String string5 = doubleMetaphone1.doubleMetaphone("S", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone3));
      assertFalse(string5.equals((Object)string2));
      assertTrue(string5.equals((Object)string1));
      assertTrue(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string4));
      assertNotNull(string5);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("S", string5);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone4);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone3);
      
      char char0 = doubleMetaphone3.charAt("AGGI", 75);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertEquals(0, doubleMetaphone3.getMaxCodeLen());
      assertEquals('\u0000', char0);
      assertNotSame(doubleMetaphone3, doubleMetaphone4);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      
      char char1 = doubleMetaphone1.charAt("nfzpd]R;oIWxG'N,Idc", 75);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone3));
      assertTrue(char1 == char0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals('\u0000', char1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone4);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone3);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("SD", "GNPS");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      doubleMetaphone1.setMaxCodeLen(4);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(79);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone1.new DoubleMetaphoneResult(79);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      String string0 = doubleMetaphone1.encode("SD");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("ST", string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      doubleMetaphone_DoubleMetaphoneResult1.append('', '[');
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("[", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone4 = new DoubleMetaphone();
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertNotNull(doubleMetaphone4);
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      
      String string1 = doubleMetaphone4.doubleMetaphone("m", false);
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      assertEquals("M", string1);
      assertNotSame(doubleMetaphone4, doubleMetaphone1);
      assertNotSame(doubleMetaphone4, doubleMetaphone0);
      assertNotSame(doubleMetaphone4, doubleMetaphone2);
      assertNotSame(doubleMetaphone4, doubleMetaphone3);
      
      String string2 = doubleMetaphone2.doubleMetaphone("PSSWML .", false);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone4));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("SML", string2);
      assertNotSame(doubleMetaphone2, doubleMetaphone3);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone4);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("UCCES", "7*!C|");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone4));
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone3);
      assertNotSame(doubleMetaphone1, doubleMetaphone4);
      
      char char0 = doubleMetaphone1.charAt("6A<L@k\":vALf.nz^", 1368);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone4));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals('\u0000', char0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone3);
      assertNotSame(doubleMetaphone1, doubleMetaphone4);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone((String) null, true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string1 = doubleMetaphone2.encode("SwmL .");
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("SML", string1);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(4);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      String string2 = doubleMetaphone3.doubleMetaphone("PS", false);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertEquals("S", string2);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone4 = new DoubleMetaphone();
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertNotNull(doubleMetaphone4);
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone5 = new DoubleMetaphone();
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone5);
      assertEquals(4, doubleMetaphone5.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("KS", true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone5));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone4));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KS", string3);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone3);
      assertNotSame(doubleMetaphone0, doubleMetaphone5);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone4);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("WB", true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("P", string0);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      String string1 = doubleMetaphone3.doubleMetaphone("SCH", true);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertEquals("S", string1);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone4 = new DoubleMetaphone();
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone4);
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone4.isDoubleMetaphoneEqual("C3V19;mPl@5,", "RANGER");
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone4, doubleMetaphone0);
      assertNotSame(doubleMetaphone4, doubleMetaphone2);
      assertNotSame(doubleMetaphone4, doubleMetaphone3);
      assertNotSame(doubleMetaphone4, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("@we:hP)-qO$?b^", "ORCHID");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone1.doubleMetaphone("ORCHID", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("ARKT", string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      doubleMetaphone1.setMaxCodeLen(1417);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(1417, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1417);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone1.new DoubleMetaphoneResult(5367);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(1417, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult1.append('=', 'g');
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(1417, doubleMetaphone1.getMaxCodeLen());
      assertEquals("g", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("=", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone4 = new DoubleMetaphone();
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertNotNull(doubleMetaphone4);
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      
      String string1 = doubleMetaphone3.doubleMetaphone("WITZ", false);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertEquals("ATS", string1);
      assertNotSame(doubleMetaphone3, doubleMetaphone4);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone5 = new DoubleMetaphone();
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone4));
      assertNotNull(doubleMetaphone5);
      assertEquals(4, doubleMetaphone5.getMaxCodeLen());
      
      String string2 = doubleMetaphone5.doubleMetaphone("HARIS", false);
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone4));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone5.getMaxCodeLen());
      assertEquals("HRS", string2);
      assertNotSame(doubleMetaphone5, doubleMetaphone1);
      assertNotSame(doubleMetaphone5, doubleMetaphone3);
      assertNotSame(doubleMetaphone5, doubleMetaphone2);
      assertNotSame(doubleMetaphone5, doubleMetaphone0);
      assertNotSame(doubleMetaphone5, doubleMetaphone4);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("G>U+>6", "EWSKY");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone5));
      assertTrue(boolean1 == boolean0);
      assertEquals(1417, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone3);
      assertNotSame(doubleMetaphone1, doubleMetaphone4);
      assertNotSame(doubleMetaphone1, doubleMetaphone5);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(5147);
      assertEquals(5147, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("CC");
      assertNotNull(string0);
      assertEquals(5147, doubleMetaphone0.getMaxCodeLen());
      assertEquals("K", string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(5147);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(5147, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String string1 = doubleMetaphone1.doubleMetaphone("CC", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("K", string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string2 = doubleMetaphone2.doubleMetaphone("^hfu:*c}GY", true);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("FKJ", string2);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("W", "CC", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("IL", "IL");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone((String) null, true);
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone((String) null, false);
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      String string2 = doubleMetaphone0.encode((String) null);
      assertNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("Gd#r)9.&H", false);
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KTR", string3);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("&2]r", "M[\" 0_|");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      // Undeclared exception!
      try { 
        doubleMetaphone1.charAt((String) null, 2701);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(32);
      assertEquals(32, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("$R~X9RlJT/y\"`WA");
      assertNotNull(string0);
      assertEquals(32, doubleMetaphone0.getMaxCodeLen());
      assertEquals("RKSRLT", string0);
      
      doubleMetaphone0.setMaxCodeLen((-1810));
      assertEquals((-1810), doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string1 = doubleMetaphone1.doubleMetaphone("STX;0*,yD|?", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("STKS", string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string2 = doubleMetaphone1.doubleMetaphone("STKS", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("STKS", string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone3.isDoubleMetaphoneEqual(" G", "6/C;f'R");
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertEquals((-1810), doubleMetaphone0.getMaxCodeLen());
      assertEquals((-1810), int0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone3);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(5147);
      assertEquals(5147, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("CC");
      assertNotNull(string0);
      assertEquals(5147, doubleMetaphone0.getMaxCodeLen());
      assertEquals("K", string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(72);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(72, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String string1 = doubleMetaphone1.doubleMetaphone(":jR", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("JR", string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("Km>#!3W@'IrY", true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals(72, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KMR", string2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      
      boolean boolean0 = doubleMetaphone2.isDoubleMetaphoneEqual("THBavHt,", "KMR");
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("WRCHAE", "SCH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string0 = doubleMetaphone2.doubleMetaphone("DoubleMetaphone encode parameter is not of type String", false);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("TPLM", string0);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      
      doubleMetaphone0.setMaxCodeLen((-227));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertEquals((-227), doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(8);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone4 = new DoubleMetaphone();
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertNotNull(doubleMetaphone4);
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      
      String string1 = doubleMetaphone2.doubleMetaphone("GNX", false);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone3));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("NKS", string1);
      assertNotSame(doubleMetaphone2, doubleMetaphone4);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone3);
      
      String string2 = doubleMetaphone2.doubleMetaphone("VAN ", true);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone3));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("FN", string2);
      assertNotSame(doubleMetaphone2, doubleMetaphone4);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone3);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("?fO3[1+WyZfJa>8D4T", "CH");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("IL", "IL");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("IL", true);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AL", string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      doubleMetaphone1.setMaxCodeLen(1417);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(1417, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1417);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('G', '[');
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("G", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("[", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      String string1 = doubleMetaphone1.doubleMetaphone("JOSE", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(1417, doubleMetaphone1.getMaxCodeLen());
      assertEquals("HS", string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone3);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string2 = doubleMetaphone2.doubleMetaphone("IL", true);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone3));
      assertFalse(string2.equals((Object)string1));
      assertTrue(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("AL", string2);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone3);
      
      boolean boolean1 = doubleMetaphone2.isDoubleMetaphoneEqual("U]v(S1dFu$NK]g", "Z:7JG?@DA#I<");
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone3));
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone3);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "CHAE";
      Object object0 = doubleMetaphone0.encode((Object) "CHAE");
      assertFalse(object0.equals((Object)string0));
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("X", object0);
      
      doubleMetaphone0.setMaxCodeLen(8);
      assertEquals(8, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("INw}1");
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)object0));
      assertNotNull(string1);
      assertEquals(8, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AN", string1);
      
      Object object1 = doubleMetaphone0.encode((Object) "INw}1");
      assertFalse(object1.equals((Object)object0));
      assertTrue(object1.equals((Object)string1));
      assertFalse(object1.equals((Object)string0));
      assertNotNull(object1);
      assertEquals(8, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AN", object1);
      
      Object object2 = doubleMetaphone0.encode((Object) "AN");
      assertFalse(object2.equals((Object)string0));
      assertTrue(object2.equals((Object)object1));
      assertFalse(object2.equals((Object)object0));
      assertTrue(object2.equals((Object)string1));
      assertNotNull(object2);
      assertEquals(8, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AN", object2);
      
      Object object3 = doubleMetaphone0.encode((Object) "AN");
      assertTrue(object3.equals((Object)object2));
      assertTrue(object3.equals((Object)string1));
      assertFalse(object3.equals((Object)object0));
      assertFalse(object3.equals((Object)string0));
      assertTrue(object3.equals((Object)object1));
      assertNotNull(object3);
      assertEquals(8, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AN", object3);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(8);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(8, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('&');
      assertEquals(8, doubleMetaphone0.getMaxCodeLen());
      assertEquals("&", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("&", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("CHAE");
      assertEquals(8, doubleMetaphone0.getMaxCodeLen());
      assertEquals("&CHAE", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("&CHAE", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(8, doubleMetaphone0.getMaxCodeLen());
      assertEquals("&CHAE", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("&CHAE", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean1 == boolean0);
      assertEquals(8, doubleMetaphone0.getMaxCodeLen());
      assertEquals("&CHAE", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("&CHAE", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(boolean1);
      
      Object object4 = doubleMetaphone0.encode((Object) "X");
      assertFalse(object4.equals((Object)object2));
      assertFalse(object4.equals((Object)object3));
      assertFalse(object4.equals((Object)string1));
      assertFalse(object4.equals((Object)string0));
      assertFalse(object4.equals((Object)object1));
      assertFalse(object4.equals((Object)object0));
      assertNotNull(object4);
      assertEquals(8, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S", object4);
      
      String string2 = "fT~Iop,2J1[*Ia";
      String string3 = doubleMetaphone0.doubleMetaphone("fT~Iop,2J1[*Ia", false);
      assertFalse(string3.equals((Object)object4));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)object3));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)object1));
      assertFalse(string3.equals((Object)object2));
      assertFalse(string3.equals((Object)object0));
      assertNotNull(string3);
      assertEquals(8, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FTPJ", string3);
      
      Object object5 = new Object();
      assertNotNull(object5);
      
      try { 
        doubleMetaphone0.encode(object5);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = ")Ewz8!T'f]'IZA.";
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "WH");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("9l%Mua3m-kf", "IX");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.encode((String) null);
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("9l%Mua3m-kf", false);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("LMMK", string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone((String) null, false);
      assertNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      String string3 = doubleMetaphone0.encode("ILLO");
      assertFalse(string3.equals((Object)string1));
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AL", string3);
      
      String string4 = doubleMetaphone0.doubleMetaphone((String) null, false);
      assertNull(string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string5 = doubleMetaphone0.doubleMetaphone("ILLO", false);
      assertTrue(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string1));
      assertNotNull(string5);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AL", string5);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(4);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("EM");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("EM", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "LMMK";
      stringArray0[1] = "AL";
      // Undeclared exception!
      try { 
        DoubleMetaphone.contains((String) null, 86, 86, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("HkV\u0003}Ua3GL'[#");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KFKL", string0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("c'tdipv [{V7*7rp(");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KTPF", string1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string2 = doubleMetaphone1.doubleMetaphone("HkV\u0003}Ua3GL'[#", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(string2.equals((Object)string1));
      assertTrue(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("KFKL", string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      
      String string3 = doubleMetaphone2.doubleMetaphone("WITZ", true);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("FTS", string3);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("ZM8Vmcp", "JRWbY)|{3XO@");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("", false);
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(79);
      assertEquals(79, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(79);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(79, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('G', '[');
      assertEquals(79, doubleMetaphone0.getMaxCodeLen());
      assertEquals("[", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("G", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string1 = doubleMetaphone1.doubleMetaphone("lMm|!", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("LM", string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string2 = doubleMetaphone1.doubleMetaphone("--$a19E~S`10,uxh", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("SKS", string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("gu=+q\"ddToE\">Ro'*", "JRWbY)|{3XO@");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean1 == boolean0);
      assertEquals(79, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(995);
      assertEquals(995, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(1369);
      assertEquals(1369, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone1.doubleMetaphone("f{3NsWI~yX]^%G!w", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("FNSK", string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("DG", "eV+y<<lpInc`V");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      String string1 = doubleMetaphone3.doubleMetaphone("HU", false);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertEquals("H", string1);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone4 = new DoubleMetaphone();
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertNotNull(doubleMetaphone4);
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      
      String string2 = doubleMetaphone4.doubleMetaphone("H", true);
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      assertEquals("", string2);
      assertNotSame(doubleMetaphone4, doubleMetaphone2);
      assertNotSame(doubleMetaphone4, doubleMetaphone1);
      assertNotSame(doubleMetaphone4, doubleMetaphone0);
      assertNotSame(doubleMetaphone4, doubleMetaphone3);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "LI";
      String string1 = "UuZ`p";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("UuZ`p", "org.apache.commons.codec.EncoderException", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual(")Ewz8!T'f]'IZA.", "LI", true);
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      Object object0 = doubleMetaphone0.encode((Object) "LI");
      assertFalse(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string0));
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("L", object0);
      
      try { 
        doubleMetaphone0.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("OvL7#gRr5", "2Yn]!9\r)y");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("CH", true);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("K", string0);
      
      doubleMetaphone0.setMaxCodeLen(79);
      assertEquals(79, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-2050));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(79, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('L', '[');
      assertEquals(79, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string1 = doubleMetaphone2.doubleMetaphone("K", true);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("K", string1);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      
      String string2 = doubleMetaphone2.doubleMetaphone("EAU", false);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("A", string2);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("k~DWGV", "A");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(32);
      assertEquals(32, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("$R~X9RlJT/y\"`WA");
      assertNotNull(string0);
      assertEquals(32, doubleMetaphone0.getMaxCodeLen());
      assertEquals("RKSRLT", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("LI", true);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(32, doubleMetaphone0.getMaxCodeLen());
      assertEquals("L", string1);
      
      String string2 = doubleMetaphone0.encode("$R~X9RlJT/y\"`WA");
      assertFalse(string2.equals((Object)string1));
      assertTrue(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals(32, doubleMetaphone0.getMaxCodeLen());
      assertEquals("RKSRLT", string2);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "LI");
      assertEquals(32, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(32);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(32, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean1 == boolean0);
      assertEquals(32, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(boolean1);
      
      String string3 = doubleMetaphone0.doubleMetaphone("$R~X9RlJT/y\"`WA", false);
      assertTrue(string3.equals((Object)string2));
      assertTrue(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertNotNull(string3);
      assertEquals(32, doubleMetaphone0.getMaxCodeLen());
      assertEquals("RKSRLT", string3);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("9l%Mua3m-kf", "IX");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("9l%Mua3m-kf", false);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("LMMK", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone((String) null, false);
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      String string2 = doubleMetaphone0.encode("ILLO");
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AL", string2);
      
      String string3 = doubleMetaphone0.doubleMetaphone((String) null, false);
      assertNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string4 = doubleMetaphone0.doubleMetaphone("ILLO", false);
      assertFalse(string4.equals((Object)string0));
      assertTrue(string4.equals((Object)string2));
      assertNotNull(string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AL", string4);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("AL", "K");
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("bR", true);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PR", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("C<zB>4#,>Ph/Wl", true);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KTSP", string1);
      
      Object object0 = doubleMetaphone0.encode((Object) "#,/MLWMq");
      assertFalse(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string0));
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("MLMK", object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "MLMK");
      assertFalse(object1.equals((Object)string1));
      assertFalse(object1.equals((Object)string0));
      assertTrue(object1.equals((Object)object0));
      assertNotNull(object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("MLMK", object1);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string1 = doubleMetaphone1.encode("ISL");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("AL", string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string2 = doubleMetaphone1.doubleMetaphone("CIO");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("S", string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      doubleMetaphone2.setMaxCodeLen(0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(0, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      
      String string3 = doubleMetaphone2.doubleMetaphone((String) null, true);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNull(string3);
      assertEquals(0, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      
      String string4 = doubleMetaphone2.doubleMetaphone((String) null, true);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNull(string4);
      assertEquals(0, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      
      boolean boolean0 = doubleMetaphone2.isDoubleMetaphoneEqual("NSH", "CIO");
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(0, doubleMetaphone2.getMaxCodeLen());
      assertTrue(boolean0);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("CZ");
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S", string1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string2 = doubleMetaphone0.encode("+0J;wK^<#ZLC)^!99");
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("JKSL", string2);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKP", string3);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      String string4 = doubleMetaphone2.doubleMetaphone("t'n$", true);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertNotNull(string4);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("TN", string4);
      assertNotSame(doubleMetaphone2, doubleMetaphone3);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      
      String string5 = doubleMetaphone3.doubleMetaphone("DT", true);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string3));
      assertNotNull(string5);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertEquals("T", string5);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("bR", true);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PR", string0);
      
      String string1 = doubleMetaphone0.encode("PSIAU");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S", string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("-");
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", string2);
      
      doubleMetaphone0.setMaxCodeLen(0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(3085);
      assertEquals(3085, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("", false);
      assertNull(string3);
      assertEquals(3085, doubleMetaphone0.getMaxCodeLen());
      
      String string4 = doubleMetaphone0.doubleMetaphone("PR", true);
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertTrue(string4.equals((Object)string0));
      assertNotNull(string4);
      assertEquals(3085, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PR", string4);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("CI", "jc");
      assertEquals(3085, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(66);
      assertEquals(66, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("LD@v%/qB]C{F0");
      assertNotNull(string0);
      assertEquals(66, doubleMetaphone0.getMaxCodeLen());
      assertEquals("LTFKPKF", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("LTFKPKF", true);
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(66, doubleMetaphone0.getMaxCodeLen());
      assertEquals("LTFKPKF", string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone((String) null, false);
      assertNull(string2);
      assertEquals(66, doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "org.apache.commons.codec.EncoderException");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("p {Zx,H3K$T!h#b", false);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PSKS", string0);
      
      String string1 = doubleMetaphone0.encode("PSIAU");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S", string1);
      
      doubleMetaphone0.setMaxCodeLen(0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string2 = doubleMetaphone1.doubleMetaphone("PSIAU", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("X", string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string3 = doubleMetaphone0.doubleMetaphone("PSKS", false);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertNotNull(string3);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", string3);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("PSF `THN", "]LsPGYR");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(995);
      assertEquals(995, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(1369);
      assertEquals(1369, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone1.doubleMetaphone("f{3NsWI~yX]^%G!w", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("FNSK", string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("DG", "eV+y<<lpInc`V");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string1 = doubleMetaphone2.doubleMetaphone("nZb,AgnM>n");
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("NSPN", string1);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone2.new DoubleMetaphoneResult(1369);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("TIA");
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("TIA", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("CZ");
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S", string1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string2 = doubleMetaphone0.doubleMetaphone("AGGI", false);
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AJ", string2);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string3 = doubleMetaphone2.doubleMetaphone("CZ", false);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertTrue(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("S", string3);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      doubleMetaphone3.setMaxCodeLen(0);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertEquals(0, doubleMetaphone3.getMaxCodeLen());
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      
      DoubleMetaphone doubleMetaphone4 = new DoubleMetaphone();
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone4);
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      
      String string4 = doubleMetaphone1.doubleMetaphone("AJ", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertNotNull(string4);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("A ", string4);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone3);
      assertNotSame(doubleMetaphone1, doubleMetaphone4);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string5 = doubleMetaphone1.doubleMetaphone("S", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string5.equals((Object)string4));
      assertTrue(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string2));
      assertTrue(string5.equals((Object)string3));
      assertNotNull(string5);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("S", string5);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone3);
      assertNotSame(doubleMetaphone1, doubleMetaphone4);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = 454;
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("vvLh#Rr5", "vvLh#Rr5");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      int int1 = (-1);
      char char0 = doubleMetaphone0.charAt("d<q7E_l", (-1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("vvLh#Rr5", false);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FLR", string0);
      
      String string1 = "|";
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "%]-xQ2cJNwc", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = true;
      String string0 = doubleMetaphone0.doubleMetaphone("bR", true);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PR", string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string1 = doubleMetaphone1.doubleMetaphone("PR", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("PR", string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string2 = "6IT.u.Z;S+Pptq}";
      Object object0 = doubleMetaphone0.encode((Object) "6IT.u.Z;S+Pptq}");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(object0.equals((Object)string2));
      assertFalse(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string1));
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TSSP", object0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      Object object1 = doubleMetaphone1.encode((Object) "PR");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(object1.equals((Object)string2));
      assertTrue(object1.equals((Object)string0));
      assertFalse(object1.equals((Object)object0));
      assertTrue(object1.equals((Object)string1));
      assertNotNull(object1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("PR", object1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      Object object2 = doubleMetaphone1.encode((Object) "PR");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(object2.equals((Object)object0));
      assertTrue(object2.equals((Object)object1));
      assertTrue(object2.equals((Object)string0));
      assertTrue(object2.equals((Object)string1));
      assertFalse(object2.equals((Object)string2));
      assertNotNull(object2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("PR", object2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      
      String string3 = doubleMetaphone2.doubleMetaphone("PR");
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string2));
      assertTrue(string3.equals((Object)object1));
      assertTrue(string3.equals((Object)string1));
      assertTrue(string3.equals((Object)object2));
      assertTrue(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)object0));
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("PR", string3);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      
      try { 
        doubleMetaphone1.encode((Object) doubleMetaphone0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("HkV\u0003}Ua3GL'[#");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KFKL", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("HkV\u0003}Ua3GL'[#");
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KFKL", string1);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("KFKL");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KFKL", string2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      doubleMetaphone2.setMaxCodeLen(4);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      
      String string3 = doubleMetaphone2.doubleMetaphone("KFKL", true);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertTrue(string3.equals((Object)string2));
      assertTrue(string3.equals((Object)string1));
      assertTrue(string3.equals((Object)string0));
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("KFKL", string3);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(4);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      
      String string4 = doubleMetaphone2.doubleMetaphone("_0V4o", true);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string2));
      assertNotNull(string4);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("F", string4);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("OvL7#gRr5", "OvL7#gRr5");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("d<q7E_l", true);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TKL", string0);
      
      doubleMetaphone0.setMaxCodeLen(454);
      assertEquals(454, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(454);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(454, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append(',', 'S');
      assertEquals(454, doubleMetaphone0.getMaxCodeLen());
      assertEquals(",", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("S", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String[] stringArray0 = new String[0];
      boolean boolean1 = DoubleMetaphone.contains("d<q7E_l", (-2102), (-2102), stringArray0);
      assertFalse(boolean1 == boolean0);
      assertEquals(0, stringArray0.length);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("CZ");
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S", string1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string2 = doubleMetaphone0.doubleMetaphone("AGGI", false);
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AJ", string2);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("@\"K;", "l^=O`@N");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string3 = doubleMetaphone0.doubleMetaphone("S");
      assertFalse(string3.equals((Object)string2));
      assertTrue(string3.equals((Object)string1));
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S", string3);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult2 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult2.appendAlternate("WRHKV\u0003}UA3GL'[#");
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("vvLh#Rr5", "vvLh#Rr5");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      boolean boolean1 = true;
      String string0 = doubleMetaphone0.doubleMetaphone("d<q7E_l", true);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TKL", string0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("KNZI");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NS", string1);
      
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "p {Zx,H3K$T!h#b";
      String string1 = doubleMetaphone0.doubleMetaphone("p {Zx,H3K$T!h#b", false);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PSKS", string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone(">>f<2CJ^&9", true);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKJ", string2);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("ZI", "ZI");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "RV7[", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("9l%Mua3m-kf", "IL");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("9l%Mua3m-kf", false);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("LMMK", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone((String) null, false);
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      String string2 = doubleMetaphone0.encode("ILLO");
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AL", string2);
      
      doubleMetaphone0.setMaxCodeLen((-2671));
      assertEquals((-2671), doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("", false);
      assertNull(string3);
      assertEquals((-2671), doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string4 = doubleMetaphone1.doubleMetaphone("UMB", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertNotNull(string4);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("AM", string4);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "p {Zx,H3K$T!h#b";
      boolean boolean0 = false;
      doubleMetaphone0.setMaxCodeLen((-3027));
      assertEquals((-3027), doubleMetaphone0.getMaxCodeLen());
      
      String string1 = "K9?WaVP?'TC8>";
      // Undeclared exception!
      try { 
        doubleMetaphone0.doubleMetaphone("K9?WaVP?'TC8>", false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("AI", "AI");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone((String) null, false);
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "\"[Ihr");
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("R", object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "R");
      assertTrue(object1.equals((Object)object0));
      assertNotNull(object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("R", object1);
      
      String string1 = doubleMetaphone0.doubleMetaphone("AI", true);
      assertFalse(string1.equals((Object)object0));
      assertFalse(string1.equals((Object)object1));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("A", string1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals(4, int0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string2 = doubleMetaphone0.encode("IL");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)object1));
      assertFalse(string2.equals((Object)object0));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AL", string2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      doubleMetaphone1.setMaxCodeLen(4);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string3 = doubleMetaphone0.doubleMetaphone("9-nx$E$'[B7!6", true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)object0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)object1));
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NKSP", string3);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String string4 = doubleMetaphone1.doubleMetaphone("", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNull(string4);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      try { 
        doubleMetaphone0.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "p {Zx,H3K$T!h#b";
      String string1 = doubleMetaphone0.doubleMetaphone("p {Zx,H3K$T!h#b", false);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PSKS", string1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("ZI", "ZI");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "RR", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("nBvm?9dmXP+F");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NPFM", string0);
      
      String string1 = "";
      String string2 = null;
      String string3 = doubleMetaphone0.doubleMetaphone((String) null, false);
      assertNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "+>x$J3KOQE;{8mf4iK/", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("KN");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("N", string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("CT");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KT", string1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(87);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("org.apache.commons.codec.EncoderException", "EI");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("org.apache.commons.codec.EncoderException", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("EI", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('b');
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("EIb", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("org.apache.commons.codec.EncoderExceptionb", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string2 = doubleMetaphone0.encode((String) null);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('9');
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("org.apache.commons.codec.EncoderExceptionb9", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("EIb9", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      Object object0 = doubleMetaphone1.encode((Object) "org.apache.commons.codec.EncoderException");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string1));
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("ARKP", object0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      Object object1 = doubleMetaphone1.encode((Object) "ARKP");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(object1.equals((Object)string0));
      assertFalse(object1.equals((Object)string1));
      assertTrue(object1.equals((Object)object0));
      assertNotNull(object1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("ARKP", object1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      Object object2 = doubleMetaphone1.encode((Object) "ARKP");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(object2.equals((Object)string1));
      assertTrue(object2.equals((Object)object1));
      assertTrue(object2.equals((Object)object0));
      assertFalse(object2.equals((Object)string0));
      assertNotNull(object2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("ARKP", object2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("CT_Y", "org.apache.commons.codec.EncoderException", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('7');
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("EIb9", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("org.apache.commons.codec.EncoderExceptionb97", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('9', 'V');
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("EIb9V", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("org.apache.commons.codec.EncoderExceptionb979", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("Su>Lu4[eFzqyL[Rk", "RD");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("org.apache.commons.codec.EncoderExceptionb979Su>Lu4[eFzqyL[Rk", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("EIb9VRD", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("RD");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("org.apache.commons.codec.EncoderExceptionb979Su>Lu4[eFzqyL[RkRD", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("EIb9VRDRD", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('b', 'V');
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("EIb9VRDRDV", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("org.apache.commons.codec.EncoderExceptionb979Su>Lu4[eFzqyL[RkRDb", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("EIb9VRDRDV", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("org.apache.commons.codec.EncoderExceptionb979Su>Lu4[eFzqyL[RkRDb", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen((-3746));
      assertEquals((-3746), doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone1.doubleMetaphone("FY", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("F", string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        doubleMetaphone0.doubleMetaphone("+~w@K$N)Jgw{]-p");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("xl4;N@nQ2E,N", "xl4;N@nQ2E,N");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string0 = doubleMetaphone0.encode("HkV\u0003}Ua3GL'[#");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KFKL", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("HkV\u0003}Ua3GL'[#");
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KFKL", string1);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string2 = doubleMetaphone0.doubleMetaphone("TH", true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("T", string2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String string3 = doubleMetaphone0.doubleMetaphone("PSVS", false);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SFS", string3);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("nBvm?9dmXP+F");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NPFM", string0);
      
      String string1 = doubleMetaphone0.encode("z+4qZq:V,^pzB[%F");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SKSK", string1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(3727);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("vs");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("vs", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('C');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("C", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("vsC", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(3727);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult1.appendAlternate("nBvm?9dmXP+F");
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("nBvm?9dmXP+F", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult1.appendPrimary('t');
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("nBvm?9dmXP+F", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("t", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult1.appendAlternate('C');
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("nBvm?9dmXP+FC", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("t", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      String string2 = doubleMetaphone0.doubleMetaphone("NPFM", false);
      assertFalse(string2.equals((Object)string1));
      assertTrue(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NPFM", string2);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("nBvm?9dmXP+F");
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("vsCnBvm?9dmXP+F", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("CnBvm?9dmXP+F", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone_DoubleMetaphoneResult1.appendPrimary("NPFM");
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("nBvm?9dmXP+FC", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("tNPFM", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult1.isComplete();
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("nBvm?9dmXP+FC", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("tNPFM", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult1.append('C');
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("nBvm?9dmXP+FCC", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("tNPFMC", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      Object object0 = doubleMetaphone0.encode((Object) "NPFM");
      assertFalse(object0.equals((Object)string1));
      assertTrue(object0.equals((Object)string2));
      assertTrue(object0.equals((Object)string0));
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NPFM", object0);
      
      doubleMetaphone0.setMaxCodeLen(1);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult1.appendAlternate('t');
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertEquals("tNPFMC", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("nBvm?9dmXP+FCCt", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      String string3 = doubleMetaphone_DoubleMetaphoneResult1.getAlternate();
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)object0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(string3);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertEquals("tNPFMC", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("nBvm?9dmXP+FCCt", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("nBvm?9dmXP+FCCt", string3);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("{MQMB", "PS");
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertEquals("CnBvm?9dmXP+F{MQMB", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("vsCnBvm?9dmXP+FPS", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertEquals(1, int0);
      
      String string4 = doubleMetaphone0.doubleMetaphone("vs", false);
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)object0));
      assertNotNull(string4);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertEquals("F", string4);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("9l%Mua3m-kf", "IL");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("9l%Mua3m-kf", false);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("LMMK", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone((String) null, false);
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      String string2 = doubleMetaphone0.encode("ILLO");
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AL", string2);
      
      doubleMetaphone0.setMaxCodeLen((-2671));
      assertEquals((-2671), doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("", false);
      assertNull(string3);
      assertEquals((-2671), doubleMetaphone0.getMaxCodeLen());
      
      String string4 = doubleMetaphone0.doubleMetaphone((String) null, false);
      assertNull(string4);
      assertEquals((-2671), doubleMetaphone0.getMaxCodeLen());
      
      try { 
        doubleMetaphone0.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("bR", true);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PR", string0);
      
      String string1 = doubleMetaphone0.encode("PSIAU");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S", string1);
      
      doubleMetaphone0.setMaxCodeLen(0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("f `THN", true);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", string2);
      
      String string3 = doubleMetaphone0.doubleMetaphone("f `THN", false);
      assertFalse(string3.equals((Object)string0));
      assertTrue(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertNotNull(string3);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", string3);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("'~-k%eu{aw?GFfr", "");
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("nBvm?9dmXP+F");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NPFM", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("", false);
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      Object object0 = doubleMetaphone1.encode((Object) "nBvm?9dmXP+F");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(object0.equals((Object)string0));
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("NPFM", object0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      Object object1 = doubleMetaphone0.encode((Object) "");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNull(object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      char char0 = doubleMetaphone0.charAt("F", 3611);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("3q5aqMRN#zCg~");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KKMR", string0);
      
      doubleMetaphone0.setMaxCodeLen(1393);
      assertEquals(1393, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1393);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(1393, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string1 = doubleMetaphone0.doubleMetaphone("KKMR", true);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(1393, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KMR", string1);
      
      Object object0 = doubleMetaphone0.encode((Object) "#,/MLWMq");
      assertFalse(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string1));
      assertNotNull(object0);
      assertEquals(1393, doubleMetaphone0.getMaxCodeLen());
      assertEquals("MLMK", object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "MLMK");
      assertFalse(object1.equals((Object)string1));
      assertTrue(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string0));
      assertNotNull(object1);
      assertEquals(1393, doubleMetaphone0.getMaxCodeLen());
      assertEquals("MLMK", object1);
      
      Object object2 = doubleMetaphone0.encode((Object) "MLMK");
      assertFalse(object2.equals((Object)string1));
      assertFalse(object2.equals((Object)string0));
      assertTrue(object2.equals((Object)object0));
      assertTrue(object2.equals((Object)object1));
      assertNotNull(object2);
      assertEquals(1393, doubleMetaphone0.getMaxCodeLen());
      assertEquals("MLMK", object2);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(995);
      assertEquals(995, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("eV+y<<lpInc`V", true);
      assertNotNull(string0);
      assertEquals(995, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AFLPNKF", string0);
      
      char char0 = doubleMetaphone0.charAt("Sh] %d}xgew", 3);
      assertEquals(995, doubleMetaphone0.getMaxCodeLen());
      assertEquals(' ', char0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string1 = doubleMetaphone1.doubleMetaphone("");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNull(string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone3.new DoubleMetaphoneResult((-652));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append(':', '.');
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      
      String string2 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", string2);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      
      Object object0 = doubleMetaphone3.encode((Object) "Sh] %d}xgew");
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(object0.equals((Object)string2));
      assertFalse(object0.equals((Object)string0));
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertEquals("XTKS", object0);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("3q5aqMRN#zCg~");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KKMR", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("*(K", false);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("K", string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("WvF[E'kN5e", true);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FFKN", string2);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      doubleMetaphone0.setMaxCodeLen(0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string3 = doubleMetaphone1.encode("K");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertTrue(string3.equals((Object)string1));
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("K", string3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      doubleMetaphone2.setMaxCodeLen(0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(0, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      String string4 = doubleMetaphone3.doubleMetaphone("3q5aqMRN#zCg~", true);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertTrue(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string2));
      assertNotNull(string4);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertEquals("KKMR", string4);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      
      String string5 = doubleMetaphone1.doubleMetaphone((String) null, false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone3));
      assertNull(string5);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone3);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("0jTmA\"/;F=|c");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TMFK", string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(87);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('', 'u');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("u", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('i');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("i", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("u", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('5', '5');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("u5", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("i5", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string1 = doubleMetaphone0.encode("TMFK");
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TMFK", string1);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('{');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("i5{", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("u5{", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      Object object0 = doubleMetaphone0.encode((Object) "TMFK");
      assertTrue(object0.equals((Object)string1));
      assertTrue(object0.equals((Object)string0));
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TMFK", object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "TMFK");
      assertTrue(object1.equals((Object)string0));
      assertTrue(object1.equals((Object)object0));
      assertTrue(object1.equals((Object)string1));
      assertNotNull(object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TMFK", object1);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("TMFK");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("u5{", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("i5{TMFK", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate(">Qu@8&WgHYd9Z");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("i5{TMFK", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-118));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone0.encode("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode((String) null);
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone1.new DoubleMetaphoneResult(3);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate(',');
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      Object object0 = doubleMetaphone1.encode((Object) "bR");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("PR", object0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      Object object1 = doubleMetaphone0.encode((Object) "PR");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(object1.equals((Object)object0));
      assertNotNull(object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PR", object1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String string0 = doubleMetaphone0.doubleMetaphone("bR", true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(string0.equals((Object)object0));
      assertTrue(string0.equals((Object)object1));
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PR", string0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      Object object2 = doubleMetaphone0.encode((Object) "#,/MLWMq");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(object2.equals((Object)object0));
      assertFalse(object2.equals((Object)string0));
      assertFalse(object2.equals((Object)object1));
      assertNotNull(object2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("MLMK", object2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String string1 = doubleMetaphone0.doubleMetaphone("#,/MLWMq", false);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)object1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)object0));
      assertTrue(string1.equals((Object)object2));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("MLMK", string1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      Object object3 = doubleMetaphone1.encode((Object) "MLMK");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(object3.equals((Object)object0));
      assertFalse(object3.equals((Object)string0));
      assertTrue(object3.equals((Object)string1));
      assertFalse(object3.equals((Object)object1));
      assertTrue(object3.equals((Object)object2));
      assertNotNull(object3);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("MLMK", object3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("HkV\u0003}Ua3GL'[#");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KFKL", string0);
      
      String string1 = doubleMetaphone0.encode("HkV\u0003}Ua3GL'[#");
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KFKL", string1);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(4);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('e');
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("e", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("e", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      Object object0 = doubleMetaphone0.encode((Object) "KFKL");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(object0.equals((Object)string0));
      assertTrue(object0.equals((Object)string1));
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KFKL", object0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      doubleMetaphone1.setMaxCodeLen(868);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(868, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('n');
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("en", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("e", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String string2 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)object0));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("en", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("e", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("en", string2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("Qe", "KFKL");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("enKF", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("eQe", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      int int1 = doubleMetaphone2.getMaxCodeLen();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertTrue(int1 == int0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals(4, int1);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      
      String string3 = doubleMetaphone0.doubleMetaphone("KFKL", false);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertTrue(string3.equals((Object)object0));
      assertTrue(string3.equals((Object)string0));
      assertTrue(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KFKL", string3);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-3579));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-2693));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('d');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "V/_%lJ_,y88*";
      String string1 = "% 4[[4T_Cwqm";
      doubleMetaphone0.isDoubleMetaphoneEqual("% 4[[4T_Cwqm", "hZ=Ixh8-%cT_yyPs)");
      doubleMetaphone0.doubleMetaphone("V/_%lJ_,y88*", true);
      String string2 = "";
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "V/_%lJ_,y88*");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "org.apache.commons.codec.EncoderException";
      stringArray0[1] = "org.apache.commons.codec.EncoderException";
      stringArray0[2] = "org.apache.commons.codec.EncoderException";
      // Undeclared exception!
      try { 
        DoubleMetaphone.contains("org.apache.commons.codec.EncoderException", 105, (-271), stringArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.setMaxCodeLen(0);
      doubleMetaphone0.isDoubleMetaphoneEqual(";", ";");
      int int0 = (-1);
      doubleMetaphone0.charAt("r", (-1));
      doubleMetaphone0.doubleMetaphone("");
      doubleMetaphone0.isDoubleMetaphoneEqual(";", ";", true);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(311);
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone0.isDoubleMetaphoneEqual(";", "r");
      doubleMetaphone_DoubleMetaphoneResult0.append('0');
      doubleMetaphone0.isDoubleMetaphoneEqual("DD", "r", false);
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone0.getMaxCodeLen();
      doubleMetaphone_DoubleMetaphoneResult0.append("", ";");
      String string0 = "";
      doubleMetaphone0.isDoubleMetaphoneEqual("r", "", false);
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", ";");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "9l%Mua3m-kf";
      doubleMetaphone0.isDoubleMetaphoneEqual("9l%Mua3m-kf", "IL");
      doubleMetaphone0.encode("9l%Mua3m-kf");
      int int0 = (-3305);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-3305));
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("LMMK");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "u6p0D>`cE/eDbu";
      doubleMetaphone0.setMaxCodeLen((-580));
      // Undeclared exception!
      try { 
        doubleMetaphone0.encode((Object) "u6p0D>`cE/eDbu");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone("", true);
      doubleMetaphone0.doubleMetaphone("", false);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone0.setMaxCodeLen(0);
      char char0 = 'n';
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('n');
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('9');
      doubleMetaphone_DoubleMetaphoneResult0.append('9', '9');
      doubleMetaphone_DoubleMetaphoneResult0.append("");
      String string0 = "org.apache.commons.codec.EncoderException";
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.appendAlternate((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "org.apache.commons.codec.EncoderException";
      stringArray0[1] = "org.apache.commons.codec.EncoderException";
      stringArray0[2] = "org.apache.commons.codec.EncoderException";
      stringArray0[3] = "org.apache.commons.codec.EncoderException";
      stringArray0[4] = "org.apache.commons.codec.EncoderException";
      stringArray0[5] = "XM$^3>d$gJ$&Ww";
      stringArray0[6] = "org.apache.commons.codec.EncoderException";
      stringArray0[7] = "org.apache.commons.codec.EncoderException";
      boolean boolean0 = DoubleMetaphone.contains("org.apache.commons.codec.EncoderException", 0, 0, stringArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.getMaxCodeLen();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(4);
      doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      doubleMetaphone0.doubleMetaphone("");
      doubleMetaphone_DoubleMetaphoneResult0.append('-', '7');
      String string0 = "";
      doubleMetaphone0.encode((Object) "");
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      String string1 = null;
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('z');
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.appendAlternate((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "3q5aqMRN#zCg~";
      doubleMetaphone0.doubleMetaphone("3q5aqMRN#zCg~");
      doubleMetaphone0.setMaxCodeLen(1393);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1393);
      char char0 = '\'';
      char char1 = ']';
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('}');
      doubleMetaphone_DoubleMetaphoneResult0.append("", "");
      boolean boolean0 = true;
      doubleMetaphone0.doubleMetaphone("3q5aqMRN#zCg~", true);
      try { 
        doubleMetaphone0.encode((Object) doubleMetaphone_DoubleMetaphoneResult0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      int int0 = 0;
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      String string0 = null;
      String string1 = "";
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      doubleMetaphone_DoubleMetaphoneResult0.append("lP;%PuOp2'c:,");
      doubleMetaphone_DoubleMetaphoneResult0.append("lP;%PuOp2'c:,", "lP;%PuOp2'c:,");
      String string2 = "jkLW\"";
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append((String) null, "jkLW\"");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode((Object) "");
      String string0 = "UIEX$hB<\\<xKDRA\\";
      doubleMetaphone0.isDoubleMetaphoneEqual("UIEX$hB<<xKDRA", "UIEX$hB<<xKDRA", true);
      int int0 = 2354;
      doubleMetaphone0.encode((Object) "UIEX$hB<<xKDRA");
      doubleMetaphone0.encode((Object) "AKSP");
      Object object0 = new Object();
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(0);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.append("'2Qg'ohjBkfv", "[xUa4ihY6$e\"#8^pTr");
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone0.charAt("org.apache.commons.codec.EncoderException", 0);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary(".UmqmQ 8 d(;\"");
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode("HkV\u0003}Ua3GL'[#");
      doubleMetaphone0.encode("HkV\u0003}Ua3GL'[#");
      doubleMetaphone0.getMaxCodeLen();
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(1);
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('Y');
      assertEquals("Y", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      int int0 = 995;
      doubleMetaphone0.setMaxCodeLen(995);
      doubleMetaphone0.doubleMetaphone("eV+y<<lpInc`V", true);
      String string0 = "";
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "nZb,AgnM>n");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = null;
      doubleMetaphone0.doubleMetaphone((String) null);
      doubleMetaphone0.setMaxCodeLen(77);
      doubleMetaphone0.encode((String) null);
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1));
      char char0 = '|';
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(288);
      doubleMetaphone0.doubleMetaphone("DM:", true);
      doubleMetaphone0.doubleMetaphone("`4NL", true);
      doubleMetaphone_DoubleMetaphoneResult0.append("`4NL", "0Xs");
      doubleMetaphone_DoubleMetaphoneResult0.append('#', 'g');
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary(';');
      assertEquals("`4NL#;", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone0.encode("IxZh");
      assertEquals("AKSJ", string0);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-118));
      doubleMetaphone0.encode("5[dG)mo^>;XT");
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append("TKMK", "5[dG)mo^>;XT");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = doubleMetaphone0.doubleMetaphone("bR", true);
      assertEquals("PR", string0);
      
      Object object0 = doubleMetaphone0.encode((Object) "#,/MLWMq");
      assertEquals("MLMK", object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "MLMK");
      assertEquals("MLMK", object1);
      assertNotNull(object1);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone("nBvm?9dmXP+F");
      doubleMetaphone0.doubleMetaphone((String) null, false);
      doubleMetaphone0.doubleMetaphone("", false);
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      
      doubleMetaphone0.encode((String) null);
      doubleMetaphone0.setMaxCodeLen(0);
      doubleMetaphone0.doubleMetaphone("", true);
      doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      Object object0 = new Object();
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      int int0 = 0;
      String string0 = null;
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode("");
      doubleMetaphone0.doubleMetaphone("CZ");
      int int0 = 0;
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.append('=');
      doubleMetaphone0.setMaxCodeLen(1678);
      doubleMetaphone0.setMaxCodeLen(65);
      doubleMetaphone_DoubleMetaphoneResult0.append('7', '7');
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone_DoubleMetaphoneResult0.append('%');
      doubleMetaphone0.charAt("", 0);
      doubleMetaphone0.doubleMetaphone("", false);
      String string0 = "EM";
      String string1 = "%]-\\xQ2cJNwc";
      String string2 = "|";
      doubleMetaphone0.isDoubleMetaphoneEqual("%]-xQ2cJNwc", "|", true);
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.isDoubleMetaphoneEqual("vvLh#Rr5", "vvLh#Rr5");
      boolean boolean0 = false;
      doubleMetaphone0.doubleMetaphone("d<q7E_l", false);
      doubleMetaphone0.setMaxCodeLen(454);
      String string0 = "p2vO$>~`{!%=#Vft";
      doubleMetaphone0.charAt("p2vO$>~`{!%=#Vft", 0);
      doubleMetaphone0.charAt("p2vO$>~`{!%=#Vft", 0);
      doubleMetaphone0.doubleMetaphone("p2vO$>~`{!%=#Vft");
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "PFFFT");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone0.encode("|");
      doubleMetaphone_DoubleMetaphoneResult0.append('.');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1));
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append("-U2#r*.", "");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2628);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("%,*%");
      doubleMetaphone_DoubleMetaphoneResult0.append('o', 'o');
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("%,*%");
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('6');
      doubleMetaphone_DoubleMetaphoneResult0.append('O', 'S');
      doubleMetaphone0.doubleMetaphone("%,*%");
      doubleMetaphone0.charAt("", 0);
      doubleMetaphone_DoubleMetaphoneResult0.append("");
      doubleMetaphone0.getMaxCodeLen();
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('S');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("oSS", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
  }
}
