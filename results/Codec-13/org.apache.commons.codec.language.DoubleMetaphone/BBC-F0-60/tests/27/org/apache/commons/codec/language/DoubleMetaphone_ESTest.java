/*
 * This file was automatically generated by EvoSuite
 * Mon Mar 08 00:21:59 GMT 2021
 */

package org.apache.commons.codec.language;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.codec.language.DoubleMetaphone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DoubleMetaphone_ESTest extends DoubleMetaphone_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("HAE");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("H", string0);
      
      String string1 = doubleMetaphone0.encode("@L)*) zo6EgH");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("LSK", string1);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "H";
      stringArray0[1] = "H";
      boolean boolean0 = DoubleMetaphone.contains("@L)*) zo6EgH", 2521, 1, stringArray0);
      assertEquals(2, stringArray0.length);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("BughH3");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("P", string0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("h~nOghd", true);
      assertNotNull(string0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NT", string0);
      
      String string1 = doubleMetaphone0.encode("h~nOghd");
      assertNotNull(string1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NT", string1);
      
      String string2 = doubleMetaphone1.doubleMetaphone("SswsU6!?`Xc~7YcX$");
      assertNotNull(string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("SSKS", string2);
      
      String string3 = doubleMetaphone1.doubleMetaphone("jff@a", true);
      assertNotNull(string3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("AF", string3);
      
      Object object0 = doubleMetaphone1.encode((Object) "SswsU6!?`Xc~7YcX$");
      assertNotNull(object0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string0));
      assertTrue(object0.equals((Object)string2));
      assertFalse(object0.equals((Object)string3));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("SSKS", object0);
      
      String string4 = doubleMetaphone1.doubleMetaphone("org.apache.commons.codec.EncoderException");
      assertNotNull(string4);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)object0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("ARKP", string4);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("ILLO");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AL", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("HAOIS");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("H", string1);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("2j=4PigEtQLQPLXEX");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("JPKT", string0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone1.doubleMetaphone("mChH#)Jl`x/,.S^||CF");
      assertNotNull(string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("MKLK", string0);
      
      String string1 = doubleMetaphone1.encode("LC");
      assertNotNull(string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("LK", string1);
      
      String string2 = doubleMetaphone1.doubleMetaphone("mChH#)Jl`x/,.S^||CF", true);
      assertNotNull(string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("MKLK", string2);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("GIN2SL`T~ER");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KNSL", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "SIO", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("JOSeuE", "JOSeuE");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string0 = doubleMetaphone0.encode("JOSeuE");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("JS", string0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("CHOR");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KR", string0);
      
      Object object0 = doubleMetaphone0.encode((Object) "KR");
      assertNotNull(object0);
      assertTrue(object0.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KR", object0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("PH0EGH?SZ-S");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FSS", string0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("(ughR");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KR", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual(", A", "O&3fSCA[U)?)pwC'", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("UZ", "KNMACHIK", true);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      Object object0 = doubleMetaphone0.encode((Object) "KNMACHIK");
      assertNotNull(object0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NMXK", object0);
      
      Object object1 = doubleMetaphone1.encode((Object) "NMXK");
      assertNotNull(object1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(object1.equals((Object)object0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("NMKS", object1);
      
      Object object2 = new Object();
      assertNotNull(object2);
      
      Object object3 = doubleMetaphone0.encode((Object) "NMKS");
      assertNotNull(object3);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(object3.equals((Object)object0));
      assertTrue(object3.equals((Object)object1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NMKS", object3);
      
      String string0 = doubleMetaphone0.doubleMetaphone("yan|\u0005*1#|6wmxd", false);
      assertNotNull(string0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string0.equals((Object)object3));
      assertFalse(string0.equals((Object)object0));
      assertFalse(string0.equals((Object)object1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ANMK", string0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "GNUGHRF";
      stringArray0[1] = "GNUGHRF";
      stringArray0[2] = "GNUGHRF";
      stringArray0[3] = "jaiIkU_v";
      stringArray0[4] = "GNUGHRF";
      stringArray0[5] = "GNUGHRF";
      stringArray0[6] = "GNUGHRF";
      stringArray0[7] = "GNUGHRF";
      stringArray0[8] = "GNUGHRF";
      boolean boolean0 = DoubleMetaphone.contains("GNUGHRF", (-3131), (-38650709), stringArray0);
      assertEquals(9, stringArray0.length);
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("UCCES", "GNUGHRF", false);
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("B", "KNUGHRF");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone1.doubleMetaphone(";)+oSz\"[zRA??3N@e");
      assertNotNull(string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("SSRN", string0);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "ughnF");
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AKNF", object0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "KNST";
      stringArray0[1] = "AKNF";
      boolean boolean0 = DoubleMetaphone.contains("S", 1480, 1480, stringArray0);
      assertEquals(2, stringArray0.length);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("PSHOLM");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SLM", string0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("IJAU");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AJ", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("(0Z", "IJAU");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      Object object0 = doubleMetaphone0.encode((Object) "AJ");
      assertNotNull(object0);
      assertTrue(object0.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AJ", object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "AJ");
      assertNotNull(object1);
      assertTrue(object1.equals((Object)string0));
      assertTrue(object1.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AJ", object1);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = true;
      String string0 = doubleMetaphone0.encode("7UJo\"Y");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("J", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("7UJo\"Y", true);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("H", string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("WR", true);
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("R", string2);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("", false);
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("GNPT0EGH?SZ-S", true);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NPTK", string1);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("MSNq", true);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("MSNK", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("GaNCHAE");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KNK", string1);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "GNCHAE";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("GNCHAE", "GNCHAE", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string1 = "#+F/y2Of\"Yn(epEYp";
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("GNZO", "#+F/y2Of\"Yn(epEYp", false);
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      String string2 = doubleMetaphone0.encode("GNCHAE");
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NK", string2);
      
      boolean boolean2 = false;
      try { 
        doubleMetaphone0.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      String string0 = "NT0EGH?SZS";
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("NT0EGH?SZS");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NTKS", string1);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("!?unP80T^");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NPT", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("=CCEA", "!?unP80T^", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("=CCEA", "NPT", true);
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      String string1 = doubleMetaphone0.doubleMetaphone((String) null, true);
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("=CCEA");
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("X", string2);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "at9y5Um2j");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1187);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string0 = doubleMetaphone0.encode("Yf7g`IgY!=w.%zHS");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AFKJ", string0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("PNT0EGH?SZS");
      assertNotNull(string0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NTKS", string0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(90);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("SIAN");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SIAN", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("SIAN", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SIAN", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("SIAN", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("NmPPPB#", "NmPPPB#");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("4]9$]", "NmPPPB#");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SIANNmPPPB#", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("SIAN4]9$]", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("C.EN", "SIAN", false);
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("GNDR");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SIAN4]9$]GNDR", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("SIANNmPPPB#GNDR", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string0 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SIAN4]9$]GNDR", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("SIANNmPPPB#GNDR", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("SIANNmPPPB#GNDR", string0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('t', '');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SIANNmPPPB#GNDR", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("SIAN4]9$]GNDRt", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      Object object0 = doubleMetaphone0.encode((Object) "SIANNmPPPB#GNDR");
      assertNotNull(object0);
      assertFalse(object0.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SNNM", object0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("SIANNmPPPB#GNDR", false);
      assertNotNull(string1);
      assertTrue(string1.equals((Object)object0));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SNNM", string1);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('e');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SIANNmPPPB#GNDRe", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("SIAN4]9$]GNDRt", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      Object object1 = doubleMetaphone0.encode((Object) "SIANNmPPPB#GNDR");
      assertNotNull(object1);
      assertTrue(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string0));
      assertTrue(object1.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SNNM", object1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("ghnF", "SNNM", true);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("Gh");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("K", string0);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "K";
      stringArray0[1] = "Gh";
      stringArray0[2] = "Gh";
      stringArray0[3] = "K";
      stringArray0[4] = "Xel";
      stringArray0[5] = "Xel";
      stringArray0[6] = "Xel";
      stringArray0[7] = "K";
      boolean boolean0 = DoubleMetaphone.contains("Xel", 1048, (-345), stringArray0);
      assertEquals(8, stringArray0.length);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("EGN");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AKN", string0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("Yo9\"Wb~j[yIk.1", "Yo9\"Wb~j[yIk.1");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone(" VObBUemjLl", true);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FPML", string0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("jJ.k_x-!.]\u0005S", "jJ.k_x-!.]\u0005S", true);
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "jJ.k_x-!.]\u0005S";
      stringArray0[1] = "jJ.k_x-!.]\u0005S";
      stringArray0[2] = " VObBUemjLl";
      stringArray0[3] = " VObBUemjLl";
      stringArray0[4] = "FPML";
      stringArray0[5] = "Yo9\"Wb~j[yIk.1";
      stringArray0[6] = "jJ.k_x-!.]\u0005S";
      stringArray0[7] = "FPML";
      boolean boolean2 = DoubleMetaphone.contains("S\"", (-49), (-49), stringArray0);
      assertEquals(8, stringArray0.length);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("", true);
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("", true);
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException");
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKP", string2);
      
      String[] stringArray0 = new String[2];
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual(" f_e8\"glf3", (String) null, true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      stringArray0[0] = "";
      stringArray0[1] = "ORCH";
      boolean boolean1 = DoubleMetaphone.contains("|,$<eY%UxO .aK9", 0, 0, stringArray0);
      assertEquals(2, stringArray0.length);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      String string3 = doubleMetaphone0.doubleMetaphone("|,$<eY%UxO .aK9");
      assertNotNull(string3);
      assertFalse(string3.equals((Object)string2));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KSK", string3);
      
      Object object0 = doubleMetaphone0.encode((Object) "|,$<eY%UxO .aK9");
      assertNotNull(object0);
      assertTrue(object0.equals((Object)string3));
      assertFalse(object0.equals((Object)string2));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KSK", object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "KSK");
      assertNotNull(object1);
      assertTrue(object1.equals((Object)object0));
      assertTrue(object1.equals((Object)string3));
      assertFalse(object1.equals((Object)string2));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KSK", object1);
      
      Object object2 = doubleMetaphone0.encode((Object) "KSK");
      assertNotNull(object2);
      assertTrue(object2.equals((Object)string3));
      assertTrue(object2.equals((Object)object0));
      assertFalse(object2.equals((Object)string2));
      assertTrue(object2.equals((Object)object1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KSK", object2);
      
      Object object3 = doubleMetaphone0.encode((Object) "ORCH");
      assertNotNull(object3);
      assertFalse(object3.equals((Object)string3));
      assertFalse(object3.equals((Object)object2));
      assertFalse(object3.equals((Object)object0));
      assertFalse(object3.equals((Object)object1));
      assertFalse(object3.equals((Object)string2));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARX", object3);
      
      boolean boolean2 = DoubleMetaphone.contains("Zt!45Az~W", 1177, 0, stringArray0);
      assertEquals(2, stringArray0.length);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2);
      
      String string4 = doubleMetaphone0.doubleMetaphone("ORCH", true);
      assertNotNull(string4);
      assertFalse(string4.equals((Object)object2));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)object1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)object0));
      assertFalse(string4.equals((Object)object3));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARK", string4);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("T0EghJ?szS");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TKJS", string0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "2Uj+^':ZZO22-[n");
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("JSN", object0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("CHR", true);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KR", string0);
      
      String string1 = doubleMetaphone0.encode("CHR");
      assertNotNull(string1);
      assertTrue(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KR", string1);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      String[] stringArray0 = new String[0];
      boolean boolean0 = DoubleMetaphone.contains("<uiF9E12(", 93, 5, stringArray0);
      assertEquals(0, stringArray0.length);
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(5);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = ":a~M=D+\"";
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary(":a~M=D+\"");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals(":a~M=", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('l');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals(":a~M=", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals(":a~M=", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(boolean1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("<uiF9E12(", "<uiF9E12(", false);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean2);
      
      Object object0 = doubleMetaphone0.encode((Object) "SK");
      assertNotNull(object0);
      assertFalse(object0.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SK", object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "<uiF9E12(");
      assertNotNull(object1);
      assertFalse(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("F", object1);
      
      Object object2 = doubleMetaphone0.encode((Object) "SK");
      assertNotNull(object2);
      assertTrue(object2.equals((Object)object0));
      assertFalse(object2.equals((Object)object1));
      assertFalse(object2.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SK", object2);
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("SK", "Z", false);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3 == boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean3);
      
      boolean boolean4 = true;
      boolean boolean5 = doubleMetaphone0.isDoubleMetaphoneEqual(":a~M=D+\"", "<uiF9E12(", true);
      assertFalse(boolean5 == boolean4);
      assertTrue(boolean5 == boolean1);
      assertTrue(boolean5 == boolean0);
      assertTrue(boolean5 == boolean3);
      assertFalse(boolean5 == boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean5);
      
      Object object3 = new Object();
      assertNotNull(object3);
      
      try { 
        doubleMetaphone0.encode(object3);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("CDGE(%TI$aI~");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KJT", string0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("B;ACHR", false);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PKR", string0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("lPS#LLA");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("LPSL", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("LPSL", "LPSL", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("PSILLFA");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SLF", string0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("BACHER", true);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PKR", string0);
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "BACHER";
      stringArray0[1] = "BACHER";
      stringArray0[2] = "BACHER";
      stringArray0[3] = "PKR";
      stringArray0[4] = "BACHER";
      stringArray0[5] = "";
      stringArray0[6] = "PKR";
      stringArray0[7] = "PKR";
      stringArray0[8] = "BACHER";
      boolean boolean0 = DoubleMetaphone.contains("BACHER", 2, 2, stringArray0);
      assertEquals(9, stringArray0.length);
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      Object object0 = doubleMetaphone1.encode((Object) "BACHER");
      assertNotNull(object0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(object0.equals((Object)string0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("PKR", object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "PKR");
      assertNotNull(object1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(object1.equals((Object)string0));
      assertTrue(object1.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PKR", object1);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("PNPSILLA", (String) null, true);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertTrue(boolean1 == boolean0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("gqpT0_-@/cNm PqGmw");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KKPT", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("KKPT");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KPT", string1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual(":GNr", "KKPT");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string2 = doubleMetaphone0.doubleMetaphone("KKPT", false);
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KPT", string2);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("PSACH", "PSACH", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(73);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("KNWICZ", false);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NTS", string0);
      
      Object object0 = doubleMetaphone0.encode((Object) "SH");
      assertNotNull(object0);
      assertFalse(object0.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("X", object0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("ACH", "KNSIO");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("H]~ISCjW 0^p>zH", "H]~ISCjW 0^p>zH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string0 = doubleMetaphone0.encode("H]~ISCjW 0^p>zH");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SKPJ", string0);
      
      String string1 = doubleMetaphone0.encode("P_+1V1[T{");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PFT", string1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2355);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("pa$}Hn]{|&'7#7yW");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PN", string0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "PSILLA", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("6PHg@");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FK", string0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("PNSCH", "PNSCH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string0 = doubleMetaphone0.encode("_Nk2");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NK", string0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("HE", "NK", true);
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("h[]a<T3+Wbb:8d_RO^z", "DT");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("BA", "BA", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual(";&m0<7;wGyg!-Po.", "PSQ");
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("ILLO");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AL", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("ILLO", "J048}X;w}gH-Tv");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "@E9]Trx\"n");
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TRKS", object0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("@E9]Trx\"n", (String) null, false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("bQQl2*~,F");
      assertNotNull(string0);
      assertFalse(string0.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PKLF", string0);
      
      doubleMetaphone0.setMaxCodeLen(0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "org.apache.commons.codec.EncoderException");
      assertFalse(boolean1 == boolean0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("P:DD@wcHeh>rU4=,I");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PTXR", string0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("-,b8'WNvv4[T~\";=", true);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PNFT", string0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("gqpT0_-@/cNm PqGmw");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KKPT", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("T");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("T", string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("@qQD(V]!FOLqpmLIR", false);
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KTFF", string2);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("c-4>yjdQd&$)G", "e$");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("'@k2/CkAeNl`G6W", "'@k2/CkAeNl`G6W", true);
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1);
      
      String string0 = doubleMetaphone0.doubleMetaphone("ALLE");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AL", string0);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("AL", "6~Rr#R-@siD3");
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      
      String string1 = doubleMetaphone0.doubleMetaphone("e$", true);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("A", string1);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "org.apache.commons.codec.EncoderException", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("GN");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("N", string0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("v1S7", "Eo1BLL", true);
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("CHIA", "v1S7", true);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertTrue(int1 == int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int1);
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "GN";
      stringArray0[1] = "GN";
      stringArray0[2] = "N";
      stringArray0[3] = "N";
      stringArray0[4] = "v1S7";
      stringArray0[5] = "GN";
      boolean boolean3 = DoubleMetaphone.contains("N", (-185), (-416), stringArray0);
      assertEquals(6, stringArray0.length);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("org.apache.commons.codec.EncoderException");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKP", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "CHtzORE");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "org.apache.commons.codec.EncoderException";
      stringArray0[1] = "CHtzORE";
      stringArray0[2] = "org.apache.commons.codec.EncoderException";
      boolean boolean1 = DoubleMetaphone.contains("CHtzORE", 1582, 1582, stringArray0);
      assertEquals(3, stringArray0.length);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1582);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("hiHrQ yx8=", "<^RzV<_FcZ");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("IER", "DD");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("gqpT0_-@/cNm PqGmw");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KKPT", string0);
      
      String string1 = doubleMetaphone0.encode("gqpT0_-@/cNm PqGmw");
      assertNotNull(string1);
      assertTrue(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KKPT", string1);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("KKPT", "");
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "Y%{oE{@^:bY:ySb7^<";
      String string1 = "Z`WR*d4_kw|";
      String string2 = doubleMetaphone0.encode("Y%{oE{@^:bY:ySb7^<");
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("APSP", string2);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("Y%{oE{@^:bY:ySb7^<", "Z`WR*d4_kw|");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("#-aTQ|Q", "6hjx");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("#-aTQ|Q", "#-aTQ|Q");
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("TTH", "org.apache.commons.codec.EncoderException");
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("#-aTQ|Q", "6hjx");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("#-aTQ|Q", "#-aTQ|Q");
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("#-aTQ|Q", "PNJOSE", false);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("8Gf#1#N]CI%9,Gf", "org.apache.commons.codec.EncoderException", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("*No h]@N<ALYw}-H;jU", true);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NNLJ", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("NNLJ", true);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NL ", string1);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "]SA9 6n7N_:E$Dqt?";
      String string1 = "V";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("*}p", "V");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      doubleMetaphone0.setMaxCodeLen((-1935));
      assertEquals((-1935), doubleMetaphone0.getMaxCodeLen());
      
      String string2 = "TTH";
      // Undeclared exception!
      try { 
        doubleMetaphone0.encode("TTH");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone1.doubleMetaphone("DANGER", false);
      assertNotNull(string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("TNJR", string0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("", true);
      assertNull(string1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("CHzORE");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("XSR", string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("XSR", "J");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("KWfC cvYh", true);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KFKF", string0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("(O+sZ1o'");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S", string0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      String string1 = doubleMetaphone0.doubleMetaphone((String) null, true);
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      String string0 = doubleMetaphone0.encode("CHORE");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("XR", string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "ZI");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(77);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("DANGER");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("DANGER", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("DANGER", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('r');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("DANGERr", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("DANGERr", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('r');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("DANGERrr", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("DANGERrr", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('=');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("DANGERrr=", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("DANGERrr", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("YN[$", "org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("/PHmV4)m_E)q2y?", false);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FMFM", string0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone(",z=1MP", false);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SMP", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("PSSC");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SK", string1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("sS:\"$00$]~", "z9Zpg2 QJ$%o8tbse:");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode((String) null);
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("!?unP80T^", "N%#qq$;TRn&V{x>", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone(",z=1MP", true);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SMP", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("2^O6@EA)`r;");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("R", string1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("SMP", "");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string2 = doubleMetaphone0.doubleMetaphone("CC");
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("K", string2);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "UMB");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(3035);
      assertEquals(3035, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("KH:>,zk+OF7", (-1435));
      assertEquals(3035, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      char char1 = doubleMetaphone0.charAt("KH:>,zk+OF7", 81);
      assertTrue(char1 == char0);
      assertEquals(3035, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("'Rw}/CJz", "KH:>,zk+OF7");
      assertEquals(3035, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(3035);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(3035, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("oNDo", "DD");
      assertEquals(3035, doubleMetaphone0.getMaxCodeLen());
      assertEquals("oNDo", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("DD", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("UCCES");
      assertEquals(3035, doubleMetaphone0.getMaxCodeLen());
      assertEquals("oNDoUCCES", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("DDUCCES", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string0 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertNotNull(string0);
      assertEquals(3035, doubleMetaphone0.getMaxCodeLen());
      assertEquals("oNDoUCCES", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("DDUCCES", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("DDUCCES", string0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual(",Z", "$eL)", false);
      assertTrue(boolean1 == boolean0);
      assertEquals(3035, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone1.isDoubleMetaphoneEqual("DDUCCES", ".A");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean2);
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("ACH");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AK", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("SUGAR", true);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SKR", string1);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("uJHg#J5=s'8nX", false);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AJKJ", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("503i]tcWI");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TK", string1);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("WICZ", ";~M=D,3+L4<l");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("=Mc-kD.Anc", "WICZ", false);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("MvT", false);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("MFT", string0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("EM", "/w_<#-+O(Jj|!");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-963));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = "W*`uSp;6#Xu%";
      char char0 = '`';
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('`');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string1 = "nxuW\\P]>";
      String string2 = doubleMetaphone0.doubleMetaphone("nxuWP]>");
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NKSP", string2);
      
      doubleMetaphone0.setMaxCodeLen((-963));
      assertEquals((-963), doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("W*`uSp;6#Xu%", "W*`uSp;6#Xu%", true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(79);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("", "PN");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("PN", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string0 = doubleMetaphone1.encode("V&~K71gEoX");
      assertNotNull(string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("FKJK", string0);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("Ity/Z0^%pFt", "V&~K71gEoX");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string1 = doubleMetaphone2.encode("Ity/Z0^%pFt");
      assertNotNull(string1);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("ATSP", string1);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone1.encode((Object) "PN");
      assertNotNull(object1);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(object1.equals((Object)string1));
      assertFalse(object1.equals((Object)string0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("N", object1);
      
      Object object2 = doubleMetaphone0.encode((Object) "N");
      assertNotNull(object2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(object2.equals((Object)string1));
      assertTrue(object2.equals((Object)object1));
      assertFalse(object2.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("N", object2);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("!?unP80T^");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NPT", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone((String) null, true);
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("UCCEE");
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AKS", string2);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "at9y5Um2j");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone(",z=1MP", true);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SMP", string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      doubleMetaphone1.setMaxCodeLen(1002);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(1002, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult((-361));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(1002, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("GN%-B]#E{R D}IVU]UMP&", "I", false);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("GY}/L", "GY}/L");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(boolean1 == boolean0);
      assertEquals(1002, doubleMetaphone1.getMaxCodeLen());
      assertTrue(boolean1);
      
      String string1 = doubleMetaphone0.encode("PNY");
      assertNotNull(string1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("N", string1);
      
      Object object0 = doubleMetaphone1.encode((Object) "PS\u0083NMPPPB#GNDR");
      assertNotNull(object0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string1));
      assertEquals(1002, doubleMetaphone1.getMaxCodeLen());
      assertEquals("SNMPPNTR", object0);
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertEquals(1002, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertTrue(boolean2);
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone3);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      boolean boolean3 = doubleMetaphone3.isDoubleMetaphoneEqual("N", "KN!?UNP80T^", false);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertFalse(boolean3);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("ACH", "CAESAR");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      String string0 = doubleMetaphone0.encode(")?%0Qm_@4dzjV)");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KMTS", string0);
      
      doubleMetaphone0.setMaxCodeLen(77);
      assertEquals(77, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("ER", "ACH");
      assertTrue(boolean1 == boolean0);
      assertEquals(77, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      String string1 = doubleMetaphone0.doubleMetaphone(")?%0Qm_@4dzjV)", false);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals(77, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KMTSJF", string1);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("VW", (String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string1 = doubleMetaphone0.encode("L6us2]Ll~RZ'ajzzW-");
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("LSLR", string1);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("Tv5", "CK");
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      char char0 = doubleMetaphone0.charAt("L6us2]Ll~RZ'ajzzW-", 1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('6', char0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("?pN%t@");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PNT", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("?pN%t@");
      assertNotNull(string1);
      assertTrue(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PNT", string1);
      
      Object object0 = doubleMetaphone0.encode((Object) "PNT");
      assertNotNull(object0);
      assertFalse(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NT", object0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("?pN%t@", "DG");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(75);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("/8K(WEs_E7v:C%6.`cr", "GNKS");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("GNKS", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("/8K(WEs_E7v:C%6.`cr", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("GNKS", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("/8K(WEs_E7v:C%6.`cr", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string2 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertNotNull(string2);
      assertFalse(string2.equals((Object)object0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("GNKS", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("/8K(WEs_E7v:C%6.`cr", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("GNKS", string2);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("sM(73FdnaH8Tnk!H", "Wb.Eu/M+]k#*", false);
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      String string3 = "v6dwd,bu_R;s>/T";
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("v6dwd,bu_R;s>/T", "CE", true);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("KhD81b[5.oh&y0D", "\"C`3O;e< /?IWVm!n");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean3);
      
      String string4 = doubleMetaphone1.encode("ZFwTrcxt");
      assertNotNull(string4);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)object0));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("SFTR", string4);
      
      Object object1 = new Object();
      assertNotNull(object1);
      
      try { 
        doubleMetaphone0.encode(object1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1109);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("", "OGG");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("OGG", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string0 = doubleMetaphone0.encode("l^@@TZW");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("LTS", string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("ER", "$c");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string1 = doubleMetaphone0.encode("VW");
      assertNotNull(string1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("F", string1);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone1.encode((Object) "OGG");
      assertNotNull(object1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(object1.equals((Object)string0));
      assertFalse(object1.equals((Object)string1));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("AK", object1);
      
      Object object2 = doubleMetaphone0.encode((Object) "");
      assertNull(object2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      try { 
        doubleMetaphone1.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "DG";
      String[] stringArray0 = new String[8];
      stringArray0[0] = ",z=1MP";
      stringArray0[1] = ",z=1MP";
      stringArray0[2] = "ZI";
      stringArray0[3] = "DG";
      stringArray0[4] = ",z=1MP";
      stringArray0[5] = ",z=1MP";
      stringArray0[6] = ",z=1MP";
      stringArray0[7] = "DG";
      // Undeclared exception!
      try { 
        DoubleMetaphone.contains(",z=1MP", 87, (-466), stringArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("A");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("A", string0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("!?unP80T^");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NPT", string1);
      
      char char0 = doubleMetaphone0.charAt("!?unP80T^", 4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('P', char0);
      
      String string2 = doubleMetaphone0.doubleMetaphone("UCCEE", false);
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AKS", string2);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("!?unP80T^", "HARAC", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "*");
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", object0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      Object object1 = doubleMetaphone2.encode((Object) "");
      assertNull(object1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string0 = doubleMetaphone2.doubleMetaphone("T");
      assertNotNull(string0);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(string0.equals((Object)object0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("T", string0);
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone3);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      String string1 = doubleMetaphone3.encode("Pf5-#,6Bc5aZ");
      assertNotNull(string1);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)object0));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertEquals("PFPK", string1);
      
      Object object2 = doubleMetaphone3.encode((Object) "Z8nmQU");
      assertNotNull(object2);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(object2.equals((Object)object0));
      assertFalse(object2.equals((Object)string0));
      assertFalse(object2.equals((Object)string1));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertEquals("SNMK", object2);
      
      String string2 = doubleMetaphone1.doubleMetaphone("");
      assertNull(string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone3);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone4 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone4);
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      
      int int0 = doubleMetaphone4.getMaxCodeLen();
      assertNotSame(doubleMetaphone4, doubleMetaphone3);
      assertNotSame(doubleMetaphone4, doubleMetaphone1);
      assertNotSame(doubleMetaphone4, doubleMetaphone0);
      assertNotSame(doubleMetaphone4, doubleMetaphone2);
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      assertEquals(4, int0);
      
      String string3 = doubleMetaphone0.encode("");
      assertNull(string3);
      assertNotSame(doubleMetaphone0, doubleMetaphone3);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone4);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("ALLE", "I", true);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone3);
      assertNotSame(doubleMetaphone1, doubleMetaphone4);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertTrue(boolean0);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("Z8nmQU", "Cz'.");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone3);
      assertNotSame(doubleMetaphone1, doubleMetaphone4);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean1);
      
      Object object3 = new Object();
      assertNotNull(object3);
      
      try { 
        doubleMetaphone4.encode(object3);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "D";
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "O%SCI,&'1RIF", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      String string0 = doubleMetaphone0.encode("eCdZz0");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AKTS", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("]~7@8jE1*G", "org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      String string0 = doubleMetaphone0.encode("XJVF7}");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SJFF", string0);
      
      Object object1 = doubleMetaphone0.encode((Object) "XJVF7}");
      assertNotNull(object1);
      assertTrue(object1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SJFF", object1);
      
      Object object2 = doubleMetaphone0.encode((Object) "SJFF");
      assertNotNull(object2);
      assertFalse(object2.equals((Object)string0));
      assertFalse(object2.equals((Object)object1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SF", object2);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone(":d\"I9FXR\"Fy5", false);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TFKS", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("TFKS", false);
      assertNotNull(string1);
      assertTrue(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TFKS", string1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("TFKS", "TFKS");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("g>1:v},I", "BACHER");
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("O", "org.apache.commons.codec.EncoderException", false);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      
      char char0 = doubleMetaphone0.charAt("SIA", (-1081));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "org.apache.commons.codec.EncoderException";
      String string1 = doubleMetaphone0.encode("!");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", string1);
      
      String string2 = doubleMetaphone0.encode("org.apache.commons.codec.EncoderException");
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKP", string2);
      
      String string3 = "WH";
      doubleMetaphone0.setMaxCodeLen(180);
      assertEquals(180, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("WH", 2820);
      assertEquals(180, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      char char1 = doubleMetaphone0.charAt("WH", 2820);
      assertTrue(char1 == char0);
      assertEquals(180, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char1);
      
      String string4 = "PSWSK";
      int int0 = (-1941);
      char char2 = doubleMetaphone0.charAt("PSWSK", (-1941));
      assertTrue(char2 == char0);
      assertTrue(char2 == char1);
      assertEquals(180, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char2);
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertFalse(int1 == int0);
      assertEquals(180, doubleMetaphone0.getMaxCodeLen());
      assertEquals(180, int1);
      
      String string5 = null;
      String string6 = doubleMetaphone0.doubleMetaphone("WH", false);
      assertNotNull(string6);
      assertFalse(string6.equals((Object)string4));
      assertFalse(string6.equals((Object)string2));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string0));
      assertEquals(180, doubleMetaphone0.getMaxCodeLen());
      assertEquals("A", string6);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.charAt((String) null, 2820);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "*");
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", object0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      Object object1 = doubleMetaphone2.encode((Object) "");
      assertNull(object1);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string0 = doubleMetaphone2.doubleMetaphone("T");
      assertNotNull(string0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(string0.equals((Object)object0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("T", string0);
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone3);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      String string1 = doubleMetaphone3.encode("Pf5-#,6Bc5aZ");
      assertNotNull(string1);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(string1.equals((Object)object0));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertEquals("PFPK", string1);
      
      Object object2 = doubleMetaphone3.encode((Object) "Z8nmQU");
      assertNotNull(object2);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(object2.equals((Object)string0));
      assertFalse(object2.equals((Object)string1));
      assertFalse(object2.equals((Object)object0));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertEquals("SNMK", object2);
      
      String string2 = doubleMetaphone1.doubleMetaphone("");
      assertNull(string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone3);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone3));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone4 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone4);
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      
      int int0 = doubleMetaphone4.getMaxCodeLen();
      assertNotSame(doubleMetaphone4, doubleMetaphone0);
      assertNotSame(doubleMetaphone4, doubleMetaphone3);
      assertNotSame(doubleMetaphone4, doubleMetaphone2);
      assertNotSame(doubleMetaphone4, doubleMetaphone1);
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      assertEquals(4, int0);
      
      String string3 = doubleMetaphone0.encode("");
      assertNull(string3);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone4);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone3);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone3));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("Z8nmQU", "Cz'.");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone3);
      assertNotSame(doubleMetaphone1, doubleMetaphone4);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone4));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string4 = doubleMetaphone1.doubleMetaphone((String) null, false);
      assertNull(string4);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone3);
      assertNotSame(doubleMetaphone1, doubleMetaphone4);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone4));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(65);
      assertEquals(65, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("0'J)^]iD/H", "hj1S#:0XuF+XYcFzJFf");
      assertEquals(65, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("hj1S#:0XuF+XYcFzJFf", true);
      assertNotNull(string0);
      assertEquals(65, doubleMetaphone0.getMaxCodeLen());
      assertEquals("JSKSFKSKFSJF", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("0'J)^]iD/H", true);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals(65, doubleMetaphone0.getMaxCodeLen());
      assertEquals("JT", string1);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1109);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("L6us2]Ll~RZ'ajzzW-", "");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("L6us2]Ll~RZ'ajzzW-", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string0 = doubleMetaphone0.encode("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("VW", (String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string1 = doubleMetaphone0.encode("L6us2]Ll~RZ'ajzzW-");
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("LSLR", string1);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("S,", "S,", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("&DXQP{&^^", "S,", false);
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("\"A", ";46hx");
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("&DXQP{&^^", (String) null);
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean3);
      
      char char0 = doubleMetaphone0.charAt("&DXQP{&^^", (-781));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("?pN%t@");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PNT", string0);
      
      String string1 = doubleMetaphone0.encode("PNT");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NT", string1);
      
      Object object0 = doubleMetaphone0.encode((Object) "NT");
      assertNotNull(object0);
      assertTrue(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NT", object0);
      
      String string2 = doubleMetaphone0.encode("S]P|y+Ogf_t}X");
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SPKF", string2);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("NT", "OVWO");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("OVWO", "SPKF");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean1);
      
      boolean boolean2 = doubleMetaphone1.isDoubleMetaphoneEqual("UMB", "E");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean2);
      
      char char0 = doubleMetaphone0.charAt("CI", (-2132));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      Object object1 = doubleMetaphone1.encode((Object) "E");
      assertNotNull(object1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string1));
      assertFalse(object1.equals((Object)string0));
      assertFalse(object1.equals((Object)string2));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("A", object1);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("K", "K", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("D", "K", true);
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("WR", (String) null);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("K", (String) null);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean3);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("ACH", true);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AK", string0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("`-gNExK", true);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KNKS", string1);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "`fUuq";
      stringArray0[1] = "`fUuq";
      stringArray0[2] = "`fUuq";
      stringArray0[3] = "org.apache.commons.codec.EncoderException";
      boolean boolean0 = DoubleMetaphone.contains("`fUuq", (-569), (-569), stringArray0);
      assertEquals(4, stringArray0.length);
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("`fUuq");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FK", string0);
      
      String string1 = "&K";
      boolean boolean1 = false;
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("`fUuq", "&K", false);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      
      doubleMetaphone0.setMaxCodeLen((-2760));
      assertEquals((-2760), doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("KNKS", (-569));
      assertEquals((-2760), doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      doubleMetaphone0.setMaxCodeLen((-569));
      assertEquals((-569), doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("", false);
      assertNull(string2);
      assertEquals((-569), doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals((-569), doubleMetaphone0.getMaxCodeLen());
      assertEquals((-569), int0);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.encode((Object) "FK");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen((-581));
      assertEquals((-581), doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("0'J)^]iD/H", "@rn!Jw|8C\"aLd");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("DG", true);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TK", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("DG", "8smxH8P/G/.0<-M", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("T@", "-{:0|2>fF");
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone1.isDoubleMetaphoneEqual("T@", "GNX!RHWE", false);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean2);
      
      boolean boolean3 = doubleMetaphone1.isDoubleMetaphoneEqual("3zpbds@", "3zpbds@", false);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean3 == boolean0);
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean3 == boolean2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertTrue(boolean3);
      
      boolean boolean4 = doubleMetaphone0.isDoubleMetaphoneEqual("Y", "-{:0|2>fF", false);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean4 == boolean0);
      assertFalse(boolean4 == boolean3);
      assertTrue(boolean4 == boolean2);
      assertTrue(boolean4 == boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean4);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("?pN%t@");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PNT", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("?pN%t@");
      assertNotNull(string1);
      assertTrue(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PNT", string1);
      
      Object object0 = doubleMetaphone0.encode((Object) "PNT");
      assertNotNull(object0);
      assertFalse(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NT", object0);
      
      String string2 = doubleMetaphone0.encode("S]P|y+Ogf_t}X");
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SPKF", string2);
      
      String string3 = "E";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("E", "TIJ", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("S]P|y+Ogf_t}X", "TIJ");
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "OVWO");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "<os3dV8\":$";
      stringArray0[1] = "<os3dV8\":$";
      stringArray0[2] = "<os3dV8\":$";
      stringArray0[3] = "<os3dV8\":$";
      boolean boolean0 = DoubleMetaphone.contains("<os3dV8\":$", 32, 32, stringArray0);
      assertEquals(4, stringArray0.length);
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("P", (-1286));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "o`ZaPBdr\";k6['bDp");
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ASPT", object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "o`ZaPBdr\";k6['bDp");
      assertNotNull(object1);
      assertTrue(object1.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ASPT", object1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      Object object2 = doubleMetaphone1.encode((Object) "o`ZaPBdr\";k6['bDp");
      assertNotNull(object2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(object2.equals((Object)object0));
      assertTrue(object2.equals((Object)object1));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("ASPT", object2);
      
      String string0 = doubleMetaphone1.doubleMetaphone("o`ZaPBdr\";k6['bDp");
      assertNotNull(string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(string0.equals((Object)object2));
      assertTrue(string0.equals((Object)object1));
      assertTrue(string0.equals((Object)object0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("ASPT", string0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      Object object3 = doubleMetaphone2.encode((Object) "ASPT");
      assertNotNull(object3);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertTrue(object3.equals((Object)string0));
      assertTrue(object3.equals((Object)object0));
      assertTrue(object3.equals((Object)object2));
      assertTrue(object3.equals((Object)object1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("ASPT", object3);
      
      String string1 = doubleMetaphone2.doubleMetaphone("YSL");
      assertNotNull(string1);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)object2));
      assertFalse(string1.equals((Object)object0));
      assertFalse(string1.equals((Object)object1));
      assertFalse(string1.equals((Object)object3));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("AL", string1);
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals(4, int0);
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone3);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      String string2 = doubleMetaphone3.encode("PSK");
      assertNotNull(string2);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)object3));
      assertFalse(string2.equals((Object)object0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)object1));
      assertFalse(string2.equals((Object)object2));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertEquals("SK", string2);
      
      boolean boolean0 = doubleMetaphone3.isDoubleMetaphoneEqual("o`ZaPBdr\";k6['bDp", "3");
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "o`ZaPBdr\";k6['bDp";
      stringArray0[1] = "AL";
      stringArray0[2] = "SK";
      stringArray0[3] = "o`ZaPBdr\";k6['bDp";
      stringArray0[4] = "o`ZaPBdr\";k6['bDp";
      stringArray0[5] = "SK";
      stringArray0[6] = "?=JO9HF>*Mn&Eq;VM";
      boolean boolean1 = DoubleMetaphone.contains("M", 4, 4, stringArray0);
      assertEquals(7, stringArray0.length);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      boolean boolean2 = DoubleMetaphone.contains("AL", 2991, (-1), stringArray0);
      assertEquals(7, stringArray0.length);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("SC", "SC", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("D", "SC", true);
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("JOSE", (String) null);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("K", (String) null);
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean3);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("3(N{-p", "n?S/M(>G", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("KN", "TIA", true);
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("t:>r}", (String) null);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      
      String string0 = doubleMetaphone0.doubleMetaphone("TIA", false);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("X", string0);
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("TIA", "wm`mzST?o=mI(");
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean3);
      
      String string1 = doubleMetaphone0.doubleMetaphone("t:>r}", true);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TR", string1);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("n?S/M(>G", "n?S/M(>G", true);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertTrue(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("CK", "ACH", true);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      boolean boolean2 = doubleMetaphone1.isDoubleMetaphoneEqual("n?S/M(>G", "3zpbds@");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean2);
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("n?S/M(>G", "n?S/M(>G", false);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3 == boolean2);
      assertFalse(boolean3 == boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean3);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("org.apache.commons.codec.EncoderException");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKP", string0);
      
      String string1 = "inyyn5|E;tO\\u";
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(85);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("org.apache.commons.codec.EncoderException", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("org.apache.commons.codec.EncoderException", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('V', 'M');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("org.apache.commons.codec.EncoderExceptionM", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("org.apache.commons.codec.EncoderExceptionV", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append(string1, ">BQ:5*");
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("org.apache.commons.codec.EncoderExceptionM>BQ:5*", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("org.apache.commons.codec.EncoderExceptionVinyyn5|E;tO\\u", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string2 = doubleMetaphone0.encode("org.apache.commons.codec.EncoderException");
      assertNotNull(string2);
      assertTrue(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKP", string2);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("TTT", "ORCHID");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("SC", "SC", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("DG", "SC", true);
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("\"A", "6hjx");
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("DG", (String) null);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean3);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(90);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("NmPPPB#", "NmPPPB#");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("4]9$]", "NmPPPB#");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NmPPPB#", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("4]9$]", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("GNDR");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("4]9$]GNDR", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("NmPPPB#GNDR", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string0 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("4]9$]GNDR", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("NmPPPB#GNDR", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("NmPPPB#GNDR", string0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('t', '');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NmPPPB#GNDR", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("4]9$]GNDRt", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      Object object0 = doubleMetaphone0.encode((Object) "NmPPPB#GNDR");
      assertNotNull(object0);
      assertFalse(object0.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NMPP", object0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("NmPPPB#GNDR", false);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertTrue(string1.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NMPP", string1);
      
      String string2 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertNotNull(string2);
      assertFalse(string2.equals((Object)object0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NmPPPB#GNDR", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("4]9$]GNDRt", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("4]9$]GNDRt", string2);
      
      doubleMetaphone0.setMaxCodeLen(991);
      assertEquals(991, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('e');
      assertEquals(991, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NmPPPB#GNDRe", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("4]9$]GNDRt", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      Object object1 = doubleMetaphone0.encode((Object) "4]9$]GNDRt");
      assertNotNull(object1);
      assertFalse(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string2));
      assertFalse(object1.equals((Object)string0));
      assertFalse(object1.equals((Object)string1));
      assertEquals(991, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NTRT", object1);
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean1 == boolean0);
      assertEquals(991, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NmPPPB#GNDRe", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("4]9$]GNDRt", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone1.doubleMetaphone("?pN%t@");
      assertNotNull(string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("PNT", string0);
      
      Object object0 = doubleMetaphone0.encode((Object) "PNT");
      assertNotNull(object0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(object0.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NT", object0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(66);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(928);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult1.append("?pN%t@");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("?pN%t@", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("?pN%t@", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult1.append("", " tgWljzc;d%");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("?pN%t@", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("?pN%t@ tgWljzc;d%", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      String string1 = doubleMetaphone0.encode("HOLZ");
      assertNotNull(string1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)object0));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("HLS", string1);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "EI");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("%-b]#E{r d}IvU]umP&", true);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PRTF", string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2626);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("", "%* pc)U{/YC,y -EA");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("%* pc)U{/YC,y -EA", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string1 = doubleMetaphone0.encode("%* pc)U{/YC,y -EA");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PKK", string1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("VW", "");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string2 = doubleMetaphone0.doubleMetaphone("SCH", false);
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("X", string2);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('5');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("%* pc)U{/YC,y -EA", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("5", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(77);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('=');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("=", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("YN[$", "org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("$eq)", "");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("=", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("$eq)", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("EN");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("$eq)EN", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("=EN", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string0 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("$eq)EN", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("=EN", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("=EN", string0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("CE", "EN", false);
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "'", false);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      boolean boolean3 = doubleMetaphone2.isDoubleMetaphoneEqual("NmPPPB#", "ZFwTrcxt");
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(boolean3);
      
      String string1 = doubleMetaphone0.encode("");
      assertNull(string1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone1.doubleMetaphone("=YS", true);
      assertNotNull(string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("S", string2);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "o`ZaPBdr\";k6['bDp");
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ASPT", object0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      Object object1 = doubleMetaphone1.encode((Object) "o`ZaPBdr\";k6['bDp");
      assertNotNull(object1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(object1.equals((Object)object0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("ASPT", object1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(2877);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string0 = doubleMetaphone0.doubleMetaphone("o`ZaPBdr\";k6['bDp");
      assertNotNull(string0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(string0.equals((Object)object1));
      assertTrue(string0.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ASPT", string0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      Object object2 = doubleMetaphone2.encode((Object) "ASPT");
      assertNotNull(object2);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertTrue(object2.equals((Object)object1));
      assertTrue(object2.equals((Object)string0));
      assertTrue(object2.equals((Object)object0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("ASPT", object2);
      
      Object object3 = doubleMetaphone1.encode((Object) "ASPT");
      assertNotNull(object3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertTrue(object3.equals((Object)object2));
      assertTrue(object3.equals((Object)object1));
      assertTrue(object3.equals((Object)string0));
      assertTrue(object3.equals((Object)object0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("ASPT", object3);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone1.new DoubleMetaphoneResult(169);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult1.append("4floXDmasx7W");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("4floXDmasx7W", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("4floXDmasx7W", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      String string1 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertNotNull(string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(string1.equals((Object)object3));
      assertFalse(string1.equals((Object)object1));
      assertFalse(string1.equals((Object)object0));
      assertFalse(string1.equals((Object)object2));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", string1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("o`ZaPBdr\";k6['bDp", "ASPT", false);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      boolean boolean1 = doubleMetaphone2.isDoubleMetaphoneEqual("AGGI", "", true);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(boolean1);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "=~%_34qFL=yYqR");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("R_#Sxa5b%j");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("RSKS", string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('m');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("6");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("Hy(@n", "Hy(@n");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string1 = doubleMetaphone0.encode("R_#Sxa5b%j");
      assertNotNull(string1);
      assertTrue(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("RSKS", string1);
      
      char char0 = doubleMetaphone0.charAt("bD", 0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('b', char0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('b');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("P", "(\"KG'l`'zst>!");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('b');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('m');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "Hy(@n";
      stringArray0[1] = "";
      stringArray0[2] = "Hy(@n";
      stringArray0[3] = "6";
      stringArray0[4] = "bD";
      stringArray0[5] = "6";
      stringArray0[6] = "bD";
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "DT");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("0'J)^]iD/H", "@rn!Jw|8C\"aLd");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone2.new DoubleMetaphoneResult((-3470));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone2.doubleMetaphone("0'J)^]iD/H", false);
      assertNotNull(string0);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("JT", string0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('&');
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(90);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("NmPPPB#", "NmPPPB#");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("4]9$]", "NmPPPB#");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NmPPPB#", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("4]9$]", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("GNDR");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NmPPPB#GNDR", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("4]9$]GNDR", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NmPPPB#GNDR", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("4]9$]GNDR", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("NmPPPB#GNDR", string0);
      
      Object object0 = doubleMetaphone0.encode((Object) "NmPPPB#GNDR");
      assertNotNull(object0);
      assertFalse(object0.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NMPP", object0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("NmPPPB#GNDR", false);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertTrue(string1.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NMPP", string1);
      
      String string2 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)object0));
      assertFalse(string2.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NmPPPB#GNDR", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("4]9$]GNDR", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("4]9$]GNDR", string2);
      
      doubleMetaphone0.setMaxCodeLen(991);
      assertEquals(991, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('e');
      assertEquals(991, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NmPPPB#GNDRe", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("4]9$]GNDR", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string3 = doubleMetaphone0.doubleMetaphone("4]9$]");
      assertNotNull(string3);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)object0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertEquals(991, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", string3);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "UMB");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "o`ZaPBdr\";k6['bDp");
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ASPT", object0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      Object object1 = doubleMetaphone1.encode((Object) "o`ZaPBdr\";k6['bDp");
      assertNotNull(object1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(object1.equals((Object)object0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("ASPT", object1);
      
      String string0 = doubleMetaphone0.doubleMetaphone("o`ZaPBdr\";k6['bDp");
      assertNotNull(string0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(string0.equals((Object)object1));
      assertTrue(string0.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ASPT", string0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      Object object2 = doubleMetaphone2.encode((Object) "ASPT");
      assertNotNull(object2);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertTrue(object2.equals((Object)object1));
      assertTrue(object2.equals((Object)object0));
      assertTrue(object2.equals((Object)string0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("ASPT", object2);
      
      Object object3 = doubleMetaphone1.encode((Object) "ASPT");
      assertNotNull(object3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertTrue(object3.equals((Object)string0));
      assertTrue(object3.equals((Object)object2));
      assertTrue(object3.equals((Object)object0));
      assertTrue(object3.equals((Object)object1));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("ASPT", object3);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      String string1 = doubleMetaphone0.encode("XJVF7}");
      assertNotNull(string1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)object2));
      assertFalse(string1.equals((Object)object0));
      assertFalse(string1.equals((Object)object1));
      assertFalse(string1.equals((Object)object3));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SJFF", string1);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "bA-IMAK<C`");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2654);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("ID8JnuEN@<7sb2R;");
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ATNN", string1);
      
      String string2 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", string2);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("CB/-Bx");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("CB/-Bx", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("CB/-Bx", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("S/");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("CB/-Bx", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("CB/-BxS/", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone0.setMaxCodeLen((-502));
      assertEquals((-502), doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.doubleMetaphone("[-@}jQd%=", true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("org.apache.commons.codec.EncoderException");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKP", string0);
      
      String string1 = "inyyn5|E;tO\\u";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("n?S/M(>G", string1, true);
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "org.apache.commons.codec.EncoderException", true);
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("=YS", "=YS");
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean2);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1658);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary(';');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals(";", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("n?S/M(>G", "ISL", false);
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3 == boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean3);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "9);lWIRly-");
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("LRL", object0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("7WsC94 ", true);
      assertNotNull(string0);
      assertFalse(string0.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SK", string0);
      
      doubleMetaphone0.setMaxCodeLen(10);
      assertEquals(10, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("9);lWIRly-", "CK8-g#n&!NY]gHG");
      assertEquals(10, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string1 = doubleMetaphone0.encode("org.apache.commons.codec.EncoderException");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)object0));
      assertEquals(10, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKPXKMNSK", string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string2);
      assertEquals(10, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("h", "58dk]T", true);
      assertTrue(boolean1 == boolean0);
      assertEquals(10, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      String string3 = doubleMetaphone0.encode("h");
      assertNotNull(string3);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)object0));
      assertEquals(10, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", string3);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2654);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string0 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("ID8JnuEN@<7sb2R;");
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ATNN", string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("ID8JnuEN@<7sb2R;", true);
      assertNotNull(string2);
      assertTrue(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ATNN", string2);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("CB/-Bx");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("CB/-Bx", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("CB/-Bx", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('g', 'S');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("CB/-BxS", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("CB/-Bxg", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("AGGI", "ATNN");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("CB/-BxSATNN", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("CB/-BxgAGGI", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string3 = doubleMetaphone0.encode("EM");
      assertNotNull(string3);
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AM", string3);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("ATNN", "N");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("W<63) 2cQC'5 ", "V;$X,?}k`3|99ZUG':");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-308));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string0 = doubleMetaphone0.doubleMetaphone("+\"JuJkqa(eAj", true);
      assertNotNull(string0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("JKK ", string0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('&');
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "o`ZaPBdr\";k6['bDp");
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ASPT", object0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      Object object1 = doubleMetaphone1.encode((Object) "o`ZaPBdr\";k6['bDp");
      assertNotNull(object1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(object1.equals((Object)object0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("ASPT", object1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(2877);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string0 = doubleMetaphone0.doubleMetaphone("o`ZaPBdr\";k6['bDp");
      assertNotNull(string0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(string0.equals((Object)object0));
      assertTrue(string0.equals((Object)object1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ASPT", string0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      Object object2 = doubleMetaphone2.encode((Object) "ASPT");
      assertNotNull(object2);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertTrue(object2.equals((Object)string0));
      assertTrue(object2.equals((Object)object0));
      assertTrue(object2.equals((Object)object1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("ASPT", object2);
      
      Object object3 = doubleMetaphone1.encode((Object) "ASPT");
      assertNotNull(object3);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(object3.equals((Object)object2));
      assertTrue(object3.equals((Object)string0));
      assertTrue(object3.equals((Object)object0));
      assertTrue(object3.equals((Object)object1));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("ASPT", object3);
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('q');
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("q", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("q", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("yM8th;3]/!l G");
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("qyM8th;3]/!l G", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("qyM8th;3]/!l G", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string1 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertNotNull(string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)object1));
      assertFalse(string1.equals((Object)object3));
      assertFalse(string1.equals((Object)object0));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)object2));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("qyM8th;3]/!l G", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("qyM8th;3]/!l G", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("qyM8th;3]/!l G", string1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone1.new DoubleMetaphoneResult(87);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      String string2 = doubleMetaphone0.doubleMetaphone("ga3Y", false);
      assertNotNull(string2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(string2.equals((Object)object0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)object3));
      assertFalse(string2.equals((Object)object2));
      assertFalse(string2.equals((Object)object1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("K", string2);
      
      String string3 = doubleMetaphone2.doubleMetaphone("EWSKY");
      assertNotNull(string3);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)object0));
      assertFalse(string3.equals((Object)object2));
      assertFalse(string3.equals((Object)object1));
      assertFalse(string3.equals((Object)object3));
      assertFalse(string3.equals((Object)string2));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("ASK", string3);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('&');
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("qyM8th;3]/!l G", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("qyM8th;3]/!l G&", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "ASPT";
      stringArray0[1] = "ASPT";
      stringArray0[2] = "ASPT";
      stringArray0[3] = "ASPT";
      boolean boolean1 = DoubleMetaphone.contains("ASPT", 48, 3, stringArray0);
      assertEquals(4, stringArray0.length);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("W<63) 2cQC'5 ", "W<63) 2cQC'5 ");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult((-3470));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone1.doubleMetaphone((String) null, true);
      assertNull(string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('Y');
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      char char0 = doubleMetaphone0.charAt("Q5`<j$(s)NfyqqGcr", (-3470));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("7WsC94 ", true);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SK", string0);
      
      doubleMetaphone0.setMaxCodeLen(24);
      assertEquals(24, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("9);lWIRly-", "CK8-g#n&!NY]gHG");
      assertEquals(24, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string1 = doubleMetaphone0.encode("org.apache.commons.codec.EncoderException");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals(24, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKPXKMNSKTKNKTRKSPXN", string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string2);
      assertEquals(24, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "58dk]T", true);
      assertTrue(boolean1 == boolean0);
      assertEquals(24, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("d", "", false);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertEquals(24, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      
      String string3 = doubleMetaphone0.doubleMetaphone("SK");
      assertNotNull(string3);
      assertFalse(string3.equals((Object)string1));
      assertTrue(string3.equals((Object)string0));
      assertEquals(24, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SK", string3);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(10);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(24, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean3 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertEquals(24, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(boolean3);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("org.apache.commons.codec.EncoderException");
      assertEquals(24, doubleMetaphone0.getMaxCodeLen());
      assertEquals("org.apache", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("org.apache", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("");
      assertEquals(24, doubleMetaphone0.getMaxCodeLen());
      assertEquals("org.apache", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("org.apache", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("a\u0000s`Ct");
      assertEquals(24, doubleMetaphone0.getMaxCodeLen());
      assertEquals("org.apache", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("org.apache", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string4 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertNotNull(string4);
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertEquals(24, doubleMetaphone0.getMaxCodeLen());
      assertEquals("org.apache", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("org.apache", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("org.apache", string4);
      
      String string5 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertNotNull(string5);
      assertTrue(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string3));
      assertEquals(24, doubleMetaphone0.getMaxCodeLen());
      assertEquals("org.apache", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("org.apache", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("org.apache", string5);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("a\u0000s`Ct");
      assertEquals(24, doubleMetaphone0.getMaxCodeLen());
      assertEquals("org.apache", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("org.apache", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("%-b]#E{r d}IvU]umP&", true);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PRTF", string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2654);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("", "%* pc)U{/YC,y -EA");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("%* pc)U{/YC,y -EA", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string1 = doubleMetaphone0.encode("%* pc)U{/YC,y -EA");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PKK", string1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("OVWO", "");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string2 = doubleMetaphone0.doubleMetaphone("SCH", false);
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("X", string2);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "", false);
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("<3#wVhl_cOq8Ec");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FLKK", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("FLKK", false);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FLK", string1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(66);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('U');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("U", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append(" tgWljzc;d%");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("U tgWljzc;d%", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals(" tgWljzc;d%", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string2 = doubleMetaphone0.doubleMetaphone("FLKK");
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FLK", string2);
      
      String string3 = doubleMetaphone0.doubleMetaphone("", false);
      assertNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("CIO");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S", string0);
      
      char char0 = doubleMetaphone0.charAt("Q", 0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('Q', char0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Q";
      stringArray0[1] = "Q";
      boolean boolean0 = DoubleMetaphone.contains("dN\"<9nHt<x", 0, 3485, stringArray0);
      assertEquals(2, stringArray0.length);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = null;
      stringArray0[4] = null;
      stringArray0[5] = null;
      // Undeclared exception!
      try { 
        DoubleMetaphone.contains((String) null, 0, 0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("u{'[V<,e8>a", true);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AF", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("AF", true);
      assertNotNull(string1);
      assertTrue(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AF", string1);
      
      String string2 = doubleMetaphone0.encode("(XNKmkT_N");
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KSNK", string2);
      
      Object object0 = doubleMetaphone0.encode((Object) "AF");
      assertNotNull(object0);
      assertTrue(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string2));
      assertTrue(object0.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AF", object0);
      
      String string3 = doubleMetaphone0.encode("k");
      assertNotNull(string3);
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)object0));
      assertFalse(string3.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("K", string3);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("KSNK", "N", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2654);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("ID8JnuEN@<7sb2R;");
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ATNN", string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("ID8JnuEN@<7sb2R;", true);
      assertNotNull(string2);
      assertTrue(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ATNN", string2);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("CB/-Bx");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("CB/-Bx", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("CB/-Bx", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('5');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("CB/-Bx", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("CB/-Bx5", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('g', 'S');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("CB/-Bx5g", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("CB/-BxS", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("+)|-Ib@", "+)|-Ib@");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("CB/-Bx5g+)|-Ib@", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("CB/-BxS+)|-Ib@", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string3 = doubleMetaphone0.encode("+)|-Ib@");
      assertNotNull(string3);
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("P", string3);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("+)|-Ib@", "}Xx4YttV");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("q/#wSh l_cOq8Ec");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KXLK", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("KXLK", false);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KKSL", string1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(66);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append(" tgWljzc;d%");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(" tgWljzc;d%", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals(" tgWljzc;d%", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("KKSL", "CY");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(" tgWljzc;d%KKSL", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals(" tgWljzc;d%CY", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string2 = doubleMetaphone0.encode("CY");
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S", string2);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("SIAN", "CY");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("W<63) 2cQC'5 ", "W<63) 2cQC'5 ");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult((-3470));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      Object object0 = doubleMetaphone1.encode((Object) "W<63) 2cQC'5 ");
      assertNotNull(object0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("KK", object0);
      
      String string0 = doubleMetaphone1.doubleMetaphone((String) null, true);
      assertNull(string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = ";\"Gn?@~in;Kd9o73I?";
      stringArray0[1] = ";\"Gn?@~in;Kd9o73I?";
      stringArray0[2] = null;
      stringArray0[3] = "EB?ni";
      stringArray0[4] = "KS";
      stringArray0[5] = "W<63) 2cQC'5 ";
      stringArray0[6] = null;
      boolean boolean1 = DoubleMetaphone.contains(";\"Gn?@~in;Kd9o73I?", (-3470), 9, stringArray0);
      assertEquals(7, stringArray0.length);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      doubleMetaphone1.setMaxCodeLen(9);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(9, doubleMetaphone1.getMaxCodeLen());
      
      String string1 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertNotNull(string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(string1.equals((Object)object0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(9, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("SYL", true);
      assertNotNull(string2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)object0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SL", string2);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(90);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("NmPPPB#", "NmPPPB#");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("NmPPPB#", "NmPPPB#");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NmPPPB#", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("NmPPPB#", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NmPPPB#", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("NmPPPB#", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NmPPPB#", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("NmPPPB#", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("NmPPPB#", string0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("NmPPPB#", "CE", false);
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("NmPPPB#", "CE", true);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("=YS", "=YS");
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3 == boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean3);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean4 = doubleMetaphone1.isDoubleMetaphoneEqual("t=eU@? 'P", "CE");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean4 == boolean0);
      assertFalse(boolean4 == boolean3);
      assertTrue(boolean4 == boolean1);
      assertTrue(boolean4 == boolean2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean4);
      
      String string1 = doubleMetaphone0.encode("NmPPPB#");
      assertNotNull(string1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NMPP", string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("jpuFukd\"'lfxQ^L", false);
      assertNotNull(string2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("JPFK", string2);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("org.apache.commons.codec.EncoderException");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKP", string0);
      
      Object object0 = doubleMetaphone0.encode((Object) "org.apache.commons.codec.EncoderException");
      assertNotNull(object0);
      assertTrue(object0.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKP", object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "ARKP");
      assertNotNull(object1);
      assertTrue(object1.equals((Object)string0));
      assertTrue(object1.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKP", object1);
      
      String string1 = doubleMetaphone0.doubleMetaphone("_B~mWTOmMa]2XRD", false);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)object1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PMTM", string1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(5);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string2 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertNotNull(string2);
      assertFalse(string2.equals((Object)object0));
      assertFalse(string2.equals((Object)object1));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", string2);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("VjL:");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("VjL:", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone0.setMaxCodeLen((-292));
      assertEquals((-292), doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('x');
      assertEquals((-292), doubleMetaphone0.getMaxCodeLen());
      assertEquals("VjL:x", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string3 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertNotNull(string3);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)object0));
      assertFalse(string3.equals((Object)object1));
      assertEquals((-292), doubleMetaphone0.getMaxCodeLen());
      assertEquals("VjL:x", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("VjL:x", string3);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("");
      assertEquals((-292), doubleMetaphone0.getMaxCodeLen());
      assertEquals("VjL:x", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('A');
      assertEquals((-292), doubleMetaphone0.getMaxCodeLen());
      assertEquals("VjL:x", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("0'J)^]iD/H", "@rn!Jw|8C\"aLd");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone2.new DoubleMetaphoneResult((-3470));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string0 = doubleMetaphone2.doubleMetaphone("ga3Y", false);
      assertNotNull(string0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("K", string0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('&');
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      int int0 = 10;
      doubleMetaphone0.doubleMetaphone("9);lWIRly-", true);
      doubleMetaphone0.setMaxCodeLen(10);
      doubleMetaphone0.isDoubleMetaphoneEqual("9);lWIRly-", "CK8-g#n&!NY]gHG");
      doubleMetaphone0.encode("org.apache.commons.codec.EncoderException");
      doubleMetaphone0.doubleMetaphone("");
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = doubleMetaphone0.doubleMetaphone("DG", true);
      assertEquals("TK", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone(",z=1MP", false);
      assertEquals("SMP", string1);
      
      Object object0 = doubleMetaphone0.encode((Object) "SMP");
      assertEquals("SMP", object0);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode((Object) "o`ZaPBdr\";k6['bDp");
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      doubleMetaphone1.encode((Object) "o`ZaPBdr\";k6['bDp");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(2877);
      doubleMetaphone0.doubleMetaphone("o`ZaPBdr\";k6['bDp");
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      doubleMetaphone2.encode((Object) "ASPT");
      doubleMetaphone1.encode((Object) "ASPT");
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone_DoubleMetaphoneResult0.append('q');
      doubleMetaphone0.getMaxCodeLen();
      doubleMetaphone_DoubleMetaphoneResult0.append("yM8th;3]/!l G");
      doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('E');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("");
      doubleMetaphone0.setMaxCodeLen(4);
      doubleMetaphone0.doubleMetaphone("PNASPT", false);
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('E');
      doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertEquals("qyM8th;3]/!l GE", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      Object object0 = new Object();
      Object object1 = doubleMetaphone2.encode((Object) "qyM8th;3]/!l G");
      assertEquals("KM0L", object1);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(90);
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('');
      doubleMetaphone0.isDoubleMetaphoneEqual("NmPPPB#", "NmPPPB#");
      doubleMetaphone_DoubleMetaphoneResult0.append("NmPPPB#", "NmPPPB#");
      doubleMetaphone_DoubleMetaphoneResult0.append("PNASPT");
      doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      doubleMetaphone0.encode((Object) "NmPPPB#PNASPT");
      doubleMetaphone0.doubleMetaphone((String) null, false);
      doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      doubleMetaphone0.setMaxCodeLen(2070);
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('');
      assertEquals("NmPPPB#PNASPT", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone0.encode("NMPP");
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("OR", "NmPPPB#PNASPT");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('R');
      doubleMetaphone0.getMaxCodeLen();
      doubleMetaphone_DoubleMetaphoneResult0.append("#*|Fx:F");
      doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('R');
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone1.new DoubleMetaphoneResult(4);
      doubleMetaphone_DoubleMetaphoneResult1.appendAlternate("");
      doubleMetaphone1.setMaxCodeLen(4);
      doubleMetaphone0.doubleMetaphone((String) null, true);
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('k');
      doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult1.getAlternate();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      Object object0 = new Object();
      Object object1 = doubleMetaphone1.encode((Object) "i}>jU7m}a(6LyD5");
      assertEquals("AJML", object1);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      doubleMetaphone0.setMaxCodeLen((-538));
      char char0 = '4';
      doubleMetaphone_DoubleMetaphoneResult0.append('1', '4');
      String string0 = "^CcUEoS";
      int int0 = (-543);
      int int1 = 0;
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      // Undeclared exception!
      try { 
        doubleMetaphone0.doubleMetaphone("^CcUEoS");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(90);
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('');
      doubleMetaphone0.isDoubleMetaphoneEqual("NmPPPB#", "NmPPPB#");
      doubleMetaphone_DoubleMetaphoneResult0.append("NmPPPB#", "NmPPPB#");
      doubleMetaphone_DoubleMetaphoneResult0.append("");
      doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      doubleMetaphone0.encode((Object) "NmPPPB#");
      doubleMetaphone0.doubleMetaphone((String) null, false);
      doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      doubleMetaphone0.setMaxCodeLen(2070);
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('');
      doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      doubleMetaphone_DoubleMetaphoneResult0.append("NmPPPB#");
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('A');
      assertEquals("NmPPPB#NmPPPB#A", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = doubleMetaphone0.doubleMetaphone("SH");
      assertEquals("X", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("OO", "8s:u%", true);
      assertFalse(boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("8s:u%");
      doubleMetaphone_DoubleMetaphoneResult0.append("#*|Fx:F", "GJOq2rbVTKn;s[,4");
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary(';');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("h9<[>$(z");
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone0.charAt("h9<[>$(z", 2826);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      String string0 = null;
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, (String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone("N/,", true);
      String string0 = "org.apache.commons.codec.EncoderException";
      doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", true);
      int int0 = (-4822);
      doubleMetaphone0.setMaxCodeLen((-4822));
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = null;
      try {
        doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-4822));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      int int0 = 2877;
      doubleMetaphone0.encode((Object) "o`ZaPBdr\";k6['bDp");
      doubleMetaphone0.encode((Object) "ASPT");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2877);
      String string0 = "";
      doubleMetaphone0.doubleMetaphone("");
      try { 
        doubleMetaphone0.encode((Object) doubleMetaphone_DoubleMetaphoneResult0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone(" [`Z|Z");
      String string0 = "M%~Ep;Q";
      int int0 = (-3979);
      doubleMetaphone0.isDoubleMetaphoneEqual(" [`Z|Z", "OGY", false);
      doubleMetaphone0.setMaxCodeLen((-3979));
      // Undeclared exception!
      try { 
        doubleMetaphone0.encode((Object) "M%~Ep;Q");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode("org.apache.commons.codec.EncoderException");
      String string0 = "inyyn5|E;tO\\u";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("n?S/M(>G", string0, true);
      doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "org.apache.commons.codec.EncoderException", true);
      doubleMetaphone0.isDoubleMetaphoneEqual("=YS", "=YS");
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("ARKP", "Ntw6-v\"!3Cs7and");
      assertTrue(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone("", true);
      doubleMetaphone0.getMaxCodeLen();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      doubleMetaphone_DoubleMetaphoneResult0.append('j');
      assertEquals("j", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode("kkO}YD/An\"BZt5b$qK");
      Object object0 = new Object();
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.isDoubleMetaphoneEqual("W<63) 2cQC'5 ", "W<63) 2cQC'5 ");
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult((-3470));
      doubleMetaphone1.doubleMetaphone((String) null, true);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('&');
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone("7WsC94 ", true);
      doubleMetaphone0.setMaxCodeLen(10);
      doubleMetaphone0.isDoubleMetaphoneEqual("9);lWIRly-", "CK8-g#n&!NY]gHG");
      doubleMetaphone0.encode("org.apache.commons.codec.EncoderException");
      doubleMetaphone0.doubleMetaphone("");
      doubleMetaphone0.isDoubleMetaphoneEqual("h", "58dk]T", true);
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.language.DoubleMetaphone");
      doubleMetaphone0.isDoubleMetaphoneEqual("ARKP", (String) null);
      doubleMetaphone0.setMaxCodeLen((-1219));
      doubleMetaphone0.setMaxCodeLen(0);
      doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.language.DoubleMetaphone", "", false);
      doubleMetaphone0.doubleMetaphone("t~bak=`DZ}NI%25Od&");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1219));
      doubleMetaphone_DoubleMetaphoneResult0.append('{', '{');
      doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      doubleMetaphone0.encode("");
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      int int0 = 2360;
      doubleMetaphone0.doubleMetaphone("DQC5ts.A_I^E. PE1wL", false);
      doubleMetaphone0.setMaxCodeLen(2360);
      doubleMetaphone0.doubleMetaphone("DQC5ts.A_I^E. PE1wL");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1000));
      String string0 = "|";
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("|");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "";
      doubleMetaphone0.doubleMetaphone("", true);
      doubleMetaphone0.encode((Object) "");
      doubleMetaphone0.encode("org.apache.commons.codec.EncoderException");
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      doubleMetaphone0.encode((Object) "");
      try { 
        doubleMetaphone0.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2654);
      doubleMetaphone0.doubleMetaphone("");
      doubleMetaphone0.encode("ID8JnuEN@<7sb2R;");
      doubleMetaphone0.doubleMetaphone("ID8JnuEN@<7sb2R;", true);
      doubleMetaphone_DoubleMetaphoneResult0.append("CB/-Bx");
      doubleMetaphone_DoubleMetaphoneResult0.append('g', 'S');
      doubleMetaphone_DoubleMetaphoneResult0.append("+)|-Ib@", "+)|-Ib@");
      doubleMetaphone0.encode("+)|-Ib@");
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("&K&;sy", false);
      assertEquals("KS", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("f]1", false);
      assertEquals("F", string1);
      assertNotNull(string1);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(0);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode((Object) "M");
      doubleMetaphone0.doubleMetaphone("M", true);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("']UrFf{&&A3>'vk8 F");
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('J');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('n');
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      String string0 = "";
      doubleMetaphone0.encode("");
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('\'');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('s');
      doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      doubleMetaphone0.doubleMetaphone("", true);
      doubleMetaphone0.doubleMetaphone("");
      doubleMetaphone0.getMaxCodeLen();
      doubleMetaphone0.doubleMetaphone("SIO", false);
      doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException");
      doubleMetaphone0.setMaxCodeLen(4);
      doubleMetaphone0.encode("");
      doubleMetaphone0.setMaxCodeLen(0);
      doubleMetaphone_DoubleMetaphoneResult0.append("ARKP");
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.appendPrimary((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      char char0 = 'z';
      String string0 = "f5S)F=ul E4.";
      doubleMetaphone0.isDoubleMetaphoneEqual("AsYl*$~;xbj!", "f5S)F=ul E4.", false);
      doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "");
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('z');
      doubleMetaphone0.getMaxCodeLen();
      try { 
        doubleMetaphone0.encode((Object) doubleMetaphone_DoubleMetaphoneResult0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = doubleMetaphone0.encode("R_#Sxa5b%j");
      assertEquals("RSKS", string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('m');
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("6");
      doubleMetaphone_DoubleMetaphoneResult0.append("Hy(@n", "Hy(@n");
      String string1 = doubleMetaphone0.encode("R_#Sxa5b%j");
      assertNotNull(string1);
      
      char char0 = doubleMetaphone0.charAt("bD", 0);
      assertEquals('b', char0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('b');
      doubleMetaphone0.isDoubleMetaphoneEqual("P", "(\"KG'l`'zst>!");
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('b');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('m');
      String[] stringArray0 = new String[7];
      stringArray0[0] = "Hy(@n";
      stringArray0[1] = "";
      stringArray0[2] = "Hy(@n";
      stringArray0[3] = "6";
      stringArray0[4] = "bD";
      stringArray0[5] = "6";
      stringArray0[6] = "bD";
      DoubleMetaphone.contains("", (-1), 0, stringArray0);
      doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      int int0 = 400;
      doubleMetaphone0.setMaxCodeLen(0);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(400);
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('E');
      char char0 = ',';
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary(',');
      try { 
        doubleMetaphone0.encode((Object) doubleMetaphone_DoubleMetaphoneResult0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      Object object0 = new Object();
      String string0 = "DG";
      doubleMetaphone0.doubleMetaphone("DG");
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }
}
