/*
 * This file was automatically generated by EvoSuite
 * Mon Mar 08 00:12:28 GMT 2021
 */

package org.apache.commons.codec.language;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.codec.language.DoubleMetaphone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DoubleMetaphone_ESTest extends DoubleMetaphone_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("GNKNEGH _MP%");
      assertEquals("NKNK", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("qCzZgliBaea8eYX*C^");
      assertEquals("KSSK", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      
      String string2 = doubleMetaphone0.doubleMetaphone("GNKNEGH _MP%", true);
      assertEquals("NKNK", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string1));
      assertTrue(string2.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("GILLXO");
      assertEquals("KLKS", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("h=>F[o:C\"*h&_c GeG");
      assertEquals("FKKK", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("l");
      assertEquals("L", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "l";
      stringArray0[1] = "l";
      boolean boolean0 = DoubleMetaphone.contains("KNP", (-831), (-831), stringArray0);
      assertFalse(boolean0);
      assertEquals(2, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("PHae#Qs(");
      assertEquals("FKS", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("PHae#Qs(", "Schu%~5=Wy4/*X<", true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("uBu_cK");
      assertEquals("APK", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      
      String string2 = "\"";
      String string3 = doubleMetaphone0.doubleMetaphone("", true);
      assertNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string4 = doubleMetaphone0.doubleMetaphone("\"");
      assertEquals("", string4);
      assertNotNull(string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      
      String string5 = doubleMetaphone0.doubleMetaphone("CHAE", true);
      assertEquals("X", string5);
      assertNotNull(string5);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string1));
      
      String string6 = doubleMetaphone0.doubleMetaphone("APK", true);
      assertEquals("APK", string6);
      assertNotNull(string6);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)string4));
      assertFalse(string6.equals((Object)string2));
      
      String string7 = doubleMetaphone0.doubleMetaphone("FKS", false);
      assertEquals("FKS", string7);
      assertNotNull(string7);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string7.equals((Object)string2));
      assertFalse(string7.equals((Object)string4));
      assertTrue(string7.equals((Object)string0));
      assertFalse(string7.equals((Object)string1));
      assertFalse(string7.equals((Object)string5));
      assertFalse(string7.equals((Object)string6));
      
      int int0 = 86;
      int int1 = (-1306);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "PHae#Qs(";
      // Undeclared exception!
      try { 
        DoubleMetaphone.contains(".fsDw<v.DzyT' [H", 86, (-1306), stringArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("NKNOhWEGH", false);
      assertEquals("NKN", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("MCH");
      assertEquals("MK", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("mCCi,.g;FN8)uy");
      assertEquals("MKSK", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("r)YjAl}MM[RQL");
      assertEquals("RJLM", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("@u DSfVQ5", false);
      assertEquals("TSFF", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("@u DSfVQ5", false);
      assertEquals("TSFF", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string1.equals((Object)string0));
      
      String string2 = doubleMetaphone0.doubleMetaphone("I)|G@Mu[j", false);
      assertEquals("AKMJ", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      
      String string3 = doubleMetaphone0.encode("vTfff\"D2KQ~ATV");
      assertEquals("FTFF", string3);
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("FTFF", "@u DSfVQ5");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string4 = doubleMetaphone0.doubleMetaphone("TSFF", false);
      assertEquals("TSF", string4);
      assertNotNull(string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      
      String string5 = doubleMetaphone0.doubleMetaphone("Gyy%7k0B:u)T4A`", true);
      assertEquals("JKPT", string5);
      assertNotNull(string5);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string4));
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "TSF";
      stringArray0[1] = "TSF";
      stringArray0[2] = "FTFF";
      stringArray0[3] = "FTFF";
      stringArray0[4] = "AKMJ";
      stringArray0[5] = ")Hw/'<k";
      stringArray0[6] = "B";
      stringArray0[7] = "I)|G@Mu[j";
      stringArray0[8] = "I)|G@Mu[j";
      boolean boolean1 = DoubleMetaphone.contains("vTfff\"D2KQ~ATV", 41, 41, stringArray0);
      assertFalse(boolean1);
      assertEquals(9, stringArray0.length);
      assertTrue(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("&(1Aux", true);
      assertEquals("", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("GNGNCHAE", "GNGNCHAE");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("PNU");
      assertEquals("N", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("PNU", true);
      assertEquals("N", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("GNCHAE", "");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string0 = doubleMetaphone1.encode("vx4x_,{)zFN?'%Pf");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("FKSK", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string1 = doubleMetaphone1.doubleMetaphone("vx4x_,{)zFN?'%Pf", true);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("FKSK", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("ACH");
      assertEquals("AK", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "AK";
      String string1 = doubleMetaphone0.encode("mCCq3\b}pq[dfe$");
      assertEquals("MKKP", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      
      stringArray0[1] = "ACH";
      boolean boolean0 = DoubleMetaphone.contains("AK", 0, 65, stringArray0);
      assertFalse(boolean0);
      assertEquals(2, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("1IghziA']", false);
      assertEquals("S", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "S";
      stringArray0[1] = "S";
      stringArray0[2] = "1IghziA']";
      stringArray0[3] = "S";
      stringArray0[4] = "1IghziA']";
      stringArray0[5] = "S";
      stringArray0[6] = "S";
      stringArray0[7] = "XBW_MHF$ff<J_q4<w";
      boolean boolean0 = DoubleMetaphone.contains("S", (-4033), 73, stringArray0);
      assertFalse(boolean0);
      assertEquals(8, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("8GeT", true);
      assertEquals("KT", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("1LSZi", "CHOR");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("CHOR", "CHOR");
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1 == boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("l:zuZX}{ ");
      assertEquals("LSSK", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("'cCH\">|L?dh!B?^41");
      assertEquals("XLTP", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("XLTP", false);
      assertEquals("SLTP", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("SACH");
      assertEquals("SK", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[0];
      boolean boolean0 = DoubleMetaphone.contains("SK", (-2093064), (-1), stringArray0);
      assertFalse(boolean0);
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("GHL", "GHL");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("=@");
      assertEquals("", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("CHM/");
      assertEquals("KM", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string0 = doubleMetaphone1.encode("}ql )=kzZO:@.x");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("KLKS", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("xReY\"c$ +8=\"#");
      assertEquals("SRK", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("[qQl", false);
      assertEquals("KL", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("GNWICZ");
      assertEquals("NTS", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("BACHR");
      assertEquals("PKR", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      String string0 = "HOLM";
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "PSHOLM", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("egNJOSE");
      assertEquals("AKNJ", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("LL");
      assertEquals("L", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("^<#XXkGx!h", true);
      assertEquals("KSKK", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("KNSIO", true);
      assertEquals("NS", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      
      String string2 = doubleMetaphone0.encode("GN!XDT");
      assertEquals("NKST", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("CCEE");
      assertEquals("X", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("!C[wfai/hiGH ");
      assertEquals("KF", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone((String) null, true);
      assertNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("GH", false);
      assertEquals("K", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("FF+", false);
      assertEquals("F", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("uGNq~lwe?*F{J");
      assertEquals("AKNK", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("P?)/FFT}76ChT~t");
      assertEquals("PFTK", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("4PSOJDG(|");
      assertEquals("PSJT", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "P?)/FFT}76ChT~t";
      stringArray0[1] = "PSJT";
      stringArray0[2] = "4PSOJDG(|";
      stringArray0[3] = "4PSOJDG(|";
      stringArray0[4] = "+SZ";
      stringArray0[5] = "4PSOJDG(|";
      stringArray0[6] = "CK";
      stringArray0[7] = "PFTK";
      boolean boolean0 = DoubleMetaphone.contains("PFTK", 80, 80, stringArray0);
      assertFalse(boolean0);
      assertEquals(8, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("2GNJOSE");
      assertEquals("NJS", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("EJO\"yj[,Ql;ymlSNo#");
      assertEquals("AJJK", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("SUGAR");
      assertEquals("XKR", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("kAgHZ;t", (String) null);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("CQ", true);
      assertEquals("K", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("~ni-P-f?aBB++h.", false);
      assertEquals("NPFP", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode(")BP!PS#S M0`R\"");
      assertEquals("PPPS", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      
      String string2 = doubleMetaphone0.doubleMetaphone("", false);
      assertNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("B", false);
      assertEquals("P", string3);
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("GNUGHNQ~LWE?*F{L", "GNUGHNQ~LWE?*F{L");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-997));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone0.doubleMetaphone("}R!dXkthuH 'p$E", false);
      assertEquals("RTKS", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("LLO");
      assertEquals("L", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string0 = doubleMetaphone0.doubleMetaphone("p~&+R$!+1W*");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("PR", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      String string1 = doubleMetaphone0.doubleMetaphone("GNJOSE");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("NJS", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      
      String[] stringArray0 = new String[0];
      boolean boolean0 = DoubleMetaphone.contains("PR", 2129, 2129, stringArray0);
      assertFalse(boolean0);
      assertEquals(0, stringArray0.length);
      
      // Undeclared exception!
      try { 
        DoubleMetaphone.contains("p~&+R$!+1W*", 71, (-3257), stringArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("e(fSCeTGZ_Im?");
      assertEquals("AFST", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("*Ab");
      assertEquals("P", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      
      String string2 = doubleMetaphone0.encode("*Ab");
      assertEquals("P", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      doubleMetaphone1.setMaxCodeLen(88);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(88, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string0 = doubleMetaphone0.encode("w");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "w";
      stringArray0[1] = "";
      stringArray0[2] = "w";
      stringArray0[3] = "";
      boolean boolean0 = DoubleMetaphone.contains("WR4H=`JA-WN5JZ", 8, 0, stringArray0);
      assertTrue(boolean0);
      assertEquals(4, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("*Ab");
      assertEquals("P", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("WRUGHNQ~LWE?*F{L");
      assertEquals("RKNK", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode((String) null);
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string1 = doubleMetaphone0.encode((String) null);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      String string2 = doubleMetaphone1.doubleMetaphone("CHIA", true);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("K", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("ptSH%/");
      assertEquals("PTX", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("SIA");
      assertEquals("S", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      
      String string2 = doubleMetaphone0.doubleMetaphone("WRUCCES", true);
      assertEquals("RKSS", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "SIA";
      stringArray0[1] = "WRUCCES";
      stringArray0[2] = "S";
      stringArray0[3] = "S";
      stringArray0[4] = "WRUCCES";
      stringArray0[5] = "ptSH%/";
      boolean boolean0 = DoubleMetaphone.contains("WRUCCES", (-46160863), (-46160863), stringArray0);
      assertFalse(boolean0);
      assertEquals(6, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("Y");
      assertEquals("A", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("n`c<", true);
      assertEquals("NK", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      
      String string2 = doubleMetaphone0.doubleMetaphone("n`c<", true);
      assertEquals("NK", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "GNY`W!/VYB[D4Q5";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("Y", "a", true);
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      stringArray0[1] = "NK";
      stringArray0[2] = "n`c<";
      stringArray0[3] = "n`c<";
      stringArray0[4] = "n`c<";
      stringArray0[5] = "n`c<";
      stringArray0[6] = "NK";
      stringArray0[7] = "A";
      boolean boolean1 = DoubleMetaphone.contains("Y", (-3284), (-3284), stringArray0);
      assertFalse(boolean1);
      assertEquals(8, stringArray0.length);
      assertFalse(boolean1 == boolean0);
      
      String string3 = doubleMetaphone0.doubleMetaphone("WICZ", false);
      assertEquals("AKS", string3);
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      
      String string4 = doubleMetaphone0.doubleMetaphone("NK", true);
      assertEquals("NK", string4);
      assertNotNull(string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertTrue(string4.equals((Object)string1));
      
      doubleMetaphone0.setMaxCodeLen((-3284));
      assertEquals((-3284), doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = DoubleMetaphone.contains("i`g=-9", 1, 76, stringArray0);
      assertFalse(boolean2);
      assertEquals(8, stringArray0.length);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.doubleMetaphone("v", true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Object object0 = new Object();
      assertNotNull(object0);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string0 = doubleMetaphone1.doubleMetaphone("uGhNq~lwe?*F{L");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("AKNK", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("zWIO@U,G*W_+&`fM");
      assertEquals("SKFM", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = true;
      String string1 = doubleMetaphone0.doubleMetaphone(":FbscLe", true);
      assertEquals("FPSK", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("!", "]I`k?M6p:52Wy", true);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1 == boolean0);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "M} !tmnn)fWR3", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "L");
      assertEquals("L", object0);
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("CAESAR");
      assertEquals("SSR", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string0.equals((Object)object0));
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "L");
      assertEquals("L", object0);
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string0 = doubleMetaphone1.encode("eijj%}5R1?45.@");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("AJR", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string0.equals((Object)object0));
      
      String string1 = doubleMetaphone0.doubleMetaphone("CHORE", false);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("XR", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)object0));
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Object object0 = new Object();
      assertNotNull(object0);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("4PSOJDG(|");
      assertEquals("PSJT", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("MACHER");
      assertEquals("MKR", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      doubleMetaphone1.setMaxCodeLen(66);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(66, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string1 = doubleMetaphone0.encode((String) null);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      String string2 = doubleMetaphone1.doubleMetaphone("zH@W7D#OD69bGYk.v", true);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("JTTPJKF", string2);
      assertNotNull(string2);
      assertEquals(66, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string3 = doubleMetaphone0.encode("zH@W7D#OD69bGYk.v");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("JTTP", string3);
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string3.equals((Object)string2));
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "KN";
      stringArray0[1] = "zH@W7D#OD69bGYk.v";
      stringArray0[2] = null;
      stringArray0[3] = "";
      stringArray0[4] = "zH@W7D#OD69bGYk.v";
      stringArray0[5] = "";
      boolean boolean0 = DoubleMetaphone.contains("OG(8", (-1220), (-1220), stringArray0);
      assertFalse(boolean0);
      assertEquals(6, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("OFbb");
      assertEquals("AFP", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("PSCH");
      assertEquals("X", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1477);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      doubleMetaphone_DoubleMetaphoneResult1.appendAlternate("TT5");
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("T", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      doubleMetaphone_DoubleMetaphoneResult1.appendPrimary('p');
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("T", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("p", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      String string0 = doubleMetaphone0.encode("^8hGGgd^KEINh");
      assertEquals("KKTK", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string1 = doubleMetaphone0.encode("KKTK");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("KTK", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      
      String string2 = doubleMetaphone0.doubleMetaphone("^8hGGgd^KEINh", true);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("KKTK", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string1));
      assertTrue(string2.equals((Object)string0));
      
      String string3 = doubleMetaphone1.doubleMetaphone("KTK", true);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("KTK", string3);
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertTrue(string3.equals((Object)string1));
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string0 = doubleMetaphone0.encode("rRH];DK.Ol!");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("RTKL", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      String string1 = doubleMetaphone0.encode("RTKL");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("RTKL", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(string1.equals((Object)string0));
      
      boolean boolean0 = DoubleMetaphone.contains("EP", 72, 604, (String[]) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("JOSE", "0ZbY#");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("*m`OW|AsW");
      assertEquals("MS", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("*m`OW|AsW", false);
      assertEquals("MS", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1477);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('n');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("n", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone0.setMaxCodeLen(68);
      assertEquals(68, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("IER");
      assertEquals("A", string0);
      assertNotNull(string0);
      assertEquals(68, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("YoL%/fJ2r|@ta$FF");
      assertEquals("ALFJRTF", string1);
      assertNotNull(string1);
      assertEquals(68, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string2 = doubleMetaphone1.encode("YoL%/fJ2r|@ta$FF");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("ALFJ", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      
      String string3 = doubleMetaphone0.doubleMetaphone("GNWR", false);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("NR", string3);
      assertNotNull(string3);
      assertEquals(68, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("j;h}s");
      assertEquals("JS", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("WR");
      assertEquals("R", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      
      String string2 = doubleMetaphone0.doubleMetaphone("PN.[ZZG^R$&&(}", false);
      assertEquals("NSKR", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      
      String string3 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      assertEquals("ARKP", string3);
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("YSL", false);
      assertEquals("AL", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string1 = doubleMetaphone1.encode("YSL");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("AL", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(string1.equals((Object)string0));
      
      String string2 = doubleMetaphone1.encode(".[ZzG^R$&&(}");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("SKR", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      
      String string3 = doubleMetaphone0.encode(".");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("", string3);
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(87);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(2826);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('G');
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("G", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      String string0 = doubleMetaphone0.encode("OFbb");
      assertEquals("AFP", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("MANGER");
      assertEquals("MNJR", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("OFbb");
      assertEquals("AFP", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("ED[.}");
      assertEquals("AT", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      
      String string2 = doubleMetaphone0.doubleMetaphone("Q");
      assertEquals("K", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("OFbb", true);
      assertEquals("AFP", string3);
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string3.equals((Object)string2));
      assertTrue(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Object object0 = new Object();
      assertNotNull(object0);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("YSL", false);
      assertEquals("AL", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("YSL", "]}zx;2@e+{oghT", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object1 = new Object();
      assertNotNull(object1);
      assertFalse(object1.equals((Object)object0));
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("mc_DcS#*Me>?", "t97f3!zL/z:F!u `", false);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("]}zx;2@e+{oghT", "mc_DcS#*Me>?");
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(4512);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string1 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertEquals("", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(string1.equals((Object)string0));
      
      String string2 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertEquals("", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      
      String string3 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertEquals("", string3);
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertTrue(string3.equals((Object)string1));
      assertTrue(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      
      char char0 = doubleMetaphone0.charAt("YSL", 4512);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string4 = doubleMetaphone0.doubleMetaphone("A@", false);
      assertEquals("A", string4);
      assertNotNull(string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      
      String string5 = doubleMetaphone0.encode("KN9KTL(-EU$O}E7F");
      assertEquals("NKTL", string5);
      assertNotNull(string5);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string0));
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("KN9KTL(-EU$O}E7F", "mc_DcS#*Me>?");
      assertFalse(boolean3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      
      String string6 = doubleMetaphone0.encode("2");
      assertEquals("", string6);
      assertNotNull(string6);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string6.equals((Object)string2));
      assertTrue(string6.equals((Object)string1));
      assertTrue(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string4));
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)string0));
      
      String string7 = doubleMetaphone0.doubleMetaphone("TTH", false);
      assertEquals("0", string7);
      assertNotNull(string7);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string7.equals((Object)string5));
      assertFalse(string7.equals((Object)string6));
      assertFalse(string7.equals((Object)string0));
      assertFalse(string7.equals((Object)string1));
      assertFalse(string7.equals((Object)string4));
      assertFalse(string7.equals((Object)string2));
      assertFalse(string7.equals((Object)string3));
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "A}UGFod8IC";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("A}UGFod8IC", "A}UGFod8IC");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("9jv5LL!q9^58M");
      assertEquals("JFLK", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("9jv5LL!q9^58M", "", true);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1 == boolean0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("9jv5LL!q9^58M", "JFLK");
      assertTrue(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(4512);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('O');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("O", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string2 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertEquals("O", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("O", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      
      String string3 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertEquals("", string3);
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("O", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      
      String string4 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertEquals("", string4);
      assertNotNull(string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("O", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertTrue(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      
      char char0 = doubleMetaphone0.charAt("9jv5LL!q9^58M", 4512);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string5 = doubleMetaphone0.doubleMetaphone("V0kNn)&,di}KG~3", false);
      assertEquals("FKNT", string5);
      assertNotNull(string5);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string3));
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "A}UGFod8IC";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "V0kNn)&,di}KG~3";
      stringArray0[4] = "";
      // Undeclared exception!
      try { 
        DoubleMetaphone.contains("PSJ;H}S", 4512, 2147483645, stringArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("CIA");
      assertEquals("S", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string1 = doubleMetaphone1.encode("CZ");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("S", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(string1.equals((Object)string0));
      
      String string2 = doubleMetaphone1.encode("kkC1c&%");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("KKK", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      
      String string3 = doubleMetaphone1.encode("y)a@T&wXVsbi_@00b");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("ATKS", string3);
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "y)a@T&wXVsbi_@00b";
      stringArray0[1] = "ATKS";
      boolean boolean0 = DoubleMetaphone.contains("KKK", 0, 0, stringArray0);
      assertFalse(boolean0);
      assertEquals(2, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("kQ/Y");
      assertEquals("KK", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      doubleMetaphone1.setMaxCodeLen((-782));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals((-782), doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string1 = "";
      String string2 = ")E";
      // Undeclared exception!
      try { 
        doubleMetaphone1.encode((Object) ")E");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Object object0 = new Object();
      assertNotNull(object0);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("YSL", false);
      assertEquals("AL", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string1 = doubleMetaphone0.encode("Wv");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("F", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      
      String string2 = doubleMetaphone2.encode("CZ");
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertEquals("S", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      
      String string3 = doubleMetaphone3.encode("9~Tl(-eu$O}E7f");
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertEquals("TLF", string3);
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      
      String string4 = doubleMetaphone2.encode("");
      assertNotSame(doubleMetaphone2, doubleMetaphone3);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNull(string4);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone3);
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone3));
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(1);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone((String) null);
      assertNull(string0);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("O!x[pc@A?2", 1);
      assertEquals('!', char0);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      
      char char1 = doubleMetaphone0.charAt("O!x[pc@A?2", 1);
      assertEquals('!', char1);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertTrue(char1 == char0);
      
      String string1 = doubleMetaphone0.doubleMetaphone((String) null, true);
      assertNull(string1);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.encode("zgEZtWA1w?m'|m%7");
      assertEquals("S", string2);
      assertNotNull(string2);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("", true);
      assertNull(string3);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      
      String string4 = doubleMetaphone0.doubleMetaphone("[[thu", true);
      assertEquals("T", string4);
      assertNotNull(string4);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string4.equals((Object)string2));
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("L}", "L}");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(1180);
      assertEquals(1180, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "");
      assertNull(object0);
      assertEquals(1180, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", true);
      assertEquals("ARKPKKMNSKTKNKTRKSPXN", string0);
      assertNotNull(string0);
      assertEquals(1180, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("PSGH");
      assertEquals("SK", string1);
      assertNotNull(string1);
      assertEquals(1180, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      
      String string2 = doubleMetaphone0.encode("o4US'H,?$0C");
      assertEquals("ASK", string2);
      assertNotNull(string2);
      assertEquals(1180, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("A}UGFod8IC", "A}UGFod8IC");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("9jv5LL!q9^58M");
      assertEquals("JFLK", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("9jv5LL!q9^58M", "", true);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1 == boolean0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("9jv5LL!q9^58M", "JFLK");
      assertTrue(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(4512);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string1 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertEquals("", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(string1.equals((Object)string0));
      
      String string2 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertEquals("", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertTrue(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      
      String string3 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertEquals("", string3);
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(string3.equals((Object)string0));
      assertTrue(string3.equals((Object)string1));
      assertTrue(string3.equals((Object)string2));
      
      char char0 = doubleMetaphone0.charAt("9jv5LL!q9^58M", 4512);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string4 = doubleMetaphone0.doubleMetaphone("A@", true);
      assertEquals("A", string4);
      assertNotNull(string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      
      String string5 = doubleMetaphone0.encode("");
      assertNull(string5);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean3 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3 == boolean0);
      
      String string6 = doubleMetaphone0.encode("UCCES");
      assertEquals("AKSS", string6);
      assertNotNull(string6);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string2));
      assertFalse(string6.equals((Object)string4));
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      String string0 = "f^DSbfM@L+x";
      int int0 = 1358;
      String[] stringArray0 = new String[0];
      boolean boolean0 = DoubleMetaphone.contains("f^DSbfM@L+x", (-805), 1358, stringArray0);
      assertFalse(boolean0);
      assertEquals(0, stringArray0.length);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = "a00gN6a|WZ2v%R#AP";
      String string2 = doubleMetaphone0.encode("a00gN6a|WZ2v%R#AP");
      assertEquals("AKNS", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      
      String string3 = "";
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("SIO", "", false);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      
      String string4 = "F";
      String string5 = doubleMetaphone0.doubleMetaphone("F", false);
      assertEquals("F", string5);
      assertNotNull(string5);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string1));
      
      boolean boolean2 = DoubleMetaphone.contains("F", 884, 884, stringArray0);
      assertFalse(boolean2);
      assertEquals(0, stringArray0.length);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "]", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("A}UGFod8IC", "A}UGFod8IC");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("9jv5LL!q9^58M");
      assertEquals("JFLK", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("9jv5LL!q9^58M", "", true);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1 == boolean0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("9jv5LL!q9^58M", "JFLK");
      assertTrue(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1416);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string1 = doubleMetaphone0.encode("");
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.encode("y._pbgnnP\"XrF");
      assertEquals("APNN", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "");
      assertNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", true);
      assertEquals("ARKP", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(209);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string1 = doubleMetaphone0.encode("");
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("UY", true);
      assertEquals("A", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string0));
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string3 = doubleMetaphone1.encode("WRILLO");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("RL", string3);
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      
      String string4 = doubleMetaphone1.encode("Z");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("S", string4);
      assertNotNull(string4);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      
      int int0 = doubleMetaphone2.getMaxCodeLen();
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      
      String[] stringArray0 = new String[0];
      boolean boolean0 = DoubleMetaphone.contains("Z", 209, 209, stringArray0);
      assertFalse(boolean0);
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Object object0 = new Object();
      assertNotNull(object0);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(82);
      assertEquals(82, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1237));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(82, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      
      int int0 = doubleMetaphone2.getMaxCodeLen();
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      
      String string0 = doubleMetaphone0.doubleMetaphone("DT");
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("T", string0);
      assertNotNull(string0);
      assertEquals(82, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-3791));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone0.setMaxCodeLen((-499));
      assertEquals((-499), doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("", true);
      assertNull(string0);
      assertEquals((-499), doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals((-499), int0);
      assertEquals((-499), doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "OGGI";
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = "yY[^P>E]_fc$Gv2";
      stringArray0[4] = "yY[^P>E]_fc$Gv2";
      boolean boolean0 = DoubleMetaphone.contains("", (-3791), (-3791), stringArray0);
      assertFalse(boolean0);
      assertEquals(5, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Object object0 = new Object();
      assertNotNull(object0);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("UMB");
      assertEquals("AM", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(82);
      assertEquals(82, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("TTH");
      assertEquals("0", string1);
      assertNotNull(string1);
      assertEquals(82, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      
      String string2 = doubleMetaphone0.doubleMetaphone("UY", true);
      assertEquals("A", string2);
      assertNotNull(string2);
      assertEquals(82, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string3 = doubleMetaphone0.encode("0");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("", string3);
      assertNotNull(string3);
      assertEquals(82, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      
      String string4 = doubleMetaphone1.encode("0");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("", string4);
      assertNotNull(string4);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertTrue(string4.equals((Object)string3));
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("A}UGFod8IC", "A}UGFod8IC");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("9jv5LL!q9^58M");
      assertEquals("JFLK", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("9jv5LL!q9^58M", "", true);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1 == boolean0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("9jv5LL!q9^58M", "JFLK");
      assertTrue(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1416);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean3 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(boolean3 == boolean0);
      assertFalse(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      
      boolean boolean4 = doubleMetaphone0.isDoubleMetaphoneEqual("JFLK", "");
      assertFalse(boolean4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean4 == boolean2);
      assertTrue(boolean4 == boolean1);
      assertFalse(boolean4 == boolean0);
      assertTrue(boolean4 == boolean3);
      
      String string1 = doubleMetaphone0.doubleMetaphone("SCH");
      assertEquals("X", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(int1 == int0);
      
      String string2 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException");
      assertEquals("ARKP", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('4');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("4", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("O!x[pc@A?2");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("4", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      char char0 = doubleMetaphone1.charAt("O!x[pc@A?2", 78);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("OGY");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("4", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      doubleMetaphone_DoubleMetaphoneResult0.append('{', ':');
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("4", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals(":", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      String string0 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(":", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("4", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals(":", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone1.new DoubleMetaphoneResult(90);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      String string1 = doubleMetaphone_DoubleMetaphoneResult1.getPrimary();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals("", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(string1.equals((Object)string0));
      
      String string2 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals("4", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("4", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals(":", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      
      char char1 = doubleMetaphone0.charAt(":", 78);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals('\u0000', char1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(char1 == char0);
      
      String string3 = doubleMetaphone0.doubleMetaphone("OGY", true);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("AK", string3);
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      
      String string4 = doubleMetaphone0.encode("");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNull(string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult1.isComplete();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      String string5 = doubleMetaphone1.encode((String) null);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNull(string5);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "4";
      stringArray0[1] = "O!x[pc@A?2";
      stringArray0[2] = "4";
      stringArray0[3] = "(";
      stringArray0[4] = "O!x[pc@A?2";
      stringArray0[5] = ":";
      boolean boolean1 = DoubleMetaphone.contains("%Wb`~bu}q#ce8!", 78, 6, stringArray0);
      assertFalse(boolean1);
      assertEquals(6, stringArray0.length);
      assertTrue(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("JD\"&tt5rk");
      assertEquals("JTTR", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(1);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone2.new DoubleMetaphoneResult((-18619835));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      doubleMetaphone_DoubleMetaphoneResult1.appendPrimary('\u0012');
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      String string1 = doubleMetaphone0.encode("JTTR");
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("JTR", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      
      DoubleMetaphone doubleMetaphone4 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone4);
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      
      String string2 = doubleMetaphone4.encode("GH");
      assertNotSame(doubleMetaphone4, doubleMetaphone2);
      assertNotSame(doubleMetaphone4, doubleMetaphone1);
      assertNotSame(doubleMetaphone4, doubleMetaphone0);
      assertNotSame(doubleMetaphone4, doubleMetaphone3);
      assertEquals("K", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string0 = doubleMetaphone1.doubleMetaphone("%zyNp}G2", true);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("SNPK", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(209);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      
      String string1 = doubleMetaphone3.doubleMetaphone("OGGI");
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertEquals("AJ", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      
      int int0 = doubleMetaphone2.getMaxCodeLen();
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone3);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      
      int int1 = doubleMetaphone2.getMaxCodeLen();
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone3);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertEquals(4, int1);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertTrue(int1 == int0);
      
      String string2 = doubleMetaphone1.doubleMetaphone((String) null);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone3);
      assertNull(string2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone3));
      
      DoubleMetaphone doubleMetaphone4 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone4);
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      
      String string3 = doubleMetaphone4.doubleMetaphone("TK", false);
      assertNotSame(doubleMetaphone4, doubleMetaphone0);
      assertNotSame(doubleMetaphone4, doubleMetaphone2);
      assertNotSame(doubleMetaphone4, doubleMetaphone1);
      assertNotSame(doubleMetaphone4, doubleMetaphone3);
      assertEquals("TK", string3);
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      
      String string4 = doubleMetaphone0.doubleMetaphone("SNPK", true);
      assertNotSame(doubleMetaphone0, doubleMetaphone4);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone3);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("XNPK", string4);
      assertNotNull(string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "");
      assertNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("I", "");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("I", "ilo", false);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('A');
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("A", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      boolean boolean2 = doubleMetaphone1.isDoubleMetaphoneEqual("PS", "ekgF%", false);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      
      doubleMetaphone0.setMaxCodeLen(1466);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(1466, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      String string0 = doubleMetaphone0.encode("org.apache.commons.codec.EncoderException");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("ARKPXKMNSKTKNKTRKSPXN", string0);
      assertNotNull(string0);
      assertEquals(1466, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      
      String string1 = doubleMetaphone2.encode("");
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNull(string1);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      
      String string2 = doubleMetaphone3.encode("%cz@o[9W*P ");
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertEquals("SP", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string0));
      
      DoubleMetaphone doubleMetaphone4 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone4);
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      
      int int0 = doubleMetaphone4.getMaxCodeLen();
      assertNotSame(doubleMetaphone4, doubleMetaphone0);
      assertNotSame(doubleMetaphone4, doubleMetaphone2);
      assertNotSame(doubleMetaphone4, doubleMetaphone1);
      assertNotSame(doubleMetaphone4, doubleMetaphone3);
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("GN7");
      assertEquals("N", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("WR7", "GN4:BR SNV_DGIF'LUA >", true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string1 = doubleMetaphone1.doubleMetaphone("SAN ");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("SN", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      
      String string2 = doubleMetaphone0.encode("DG");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("TK", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("I!Wrsit", "WRUMB");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(892);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("WR7");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("WR7", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      doubleMetaphone_DoubleMetaphoneResult0.append("GN4:BR SNV_DGIF'LUA >", "SAN ");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("SAN ", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("WR7GN4:BR SNV_DGIF'LUA >", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string3 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("WR7GN4:BR SNV_DGIF'LUA >", string3);
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("SAN ", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("WR7GN4:BR SNV_DGIF'LUA >", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      
      String string4 = doubleMetaphone1.doubleMetaphone("GN7");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("N", string4);
      assertNotNull(string4);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertTrue(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      
      String string5 = doubleMetaphone0.doubleMetaphone("SN", false);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("SN", string5);
      assertNotNull(string5);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string0));
      assertTrue(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string2));
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "WR7GN4:BR SNV_DGIF'LUA >";
      stringArray0[1] = "SAN ";
      stringArray0[2] = "WR7GN4:BR SNV_DGIF'LUA >";
      boolean boolean2 = DoubleMetaphone.contains("SAN ", 1, 1326, stringArray0);
      assertFalse(boolean2);
      assertEquals(3, stringArray0.length);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "");
      assertNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("(mC(A>RP\u0001>xJ", "org.apache.commons.codec.EncoderException");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(3);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('t');
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("t", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      Object object1 = new Object();
      assertNotNull(object1);
      
      String string0 = doubleMetaphone1.encode("PSJ&/\"O>;SZ#A2UG.");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("SSK", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      
      String string1 = doubleMetaphone0.encode("D,x5@/");
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("TKS", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = (-332);
      doubleMetaphone0.setMaxCodeLen((-332));
      assertEquals((-332), doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("LKSK", "LKSK", true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("WUeD5fUNL+##D", true);
      assertEquals("FTFN", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = 72;
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(72);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string1 = "lexehh6x";
      String string2 = "G\\$S";
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("lexehh6x", "G$S", false);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      
      try { 
        doubleMetaphone0.encode((Object) doubleMetaphone_DoubleMetaphoneResult0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("HEM", (String) null, false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("CH", false);
      assertEquals("K", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(69);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("l%[5fyj`SLU1/", "ZA");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("l%[5fyj`SLU1/", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("ZA", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string1 = doubleMetaphone0.encode("=-`pU(%-_3a");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("P", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      
      String string2 = doubleMetaphone0.doubleMetaphone(".s7jVv", false);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("SJF", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      
      String string3 = doubleMetaphone1.doubleMetaphone("ZA", true);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertEquals("S", string3);
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      
      int int0 = doubleMetaphone3.getMaxCodeLen();
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertNotSame(doubleMetaphone0, doubleMetaphone3);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, int1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "ORCHID";
      boolean boolean0 = DoubleMetaphone.contains("ORCHID", 29, 29, stringArray0);
      assertFalse(boolean0);
      assertEquals(1, stringArray0.length);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(29);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('d');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("d", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("ORCHID", "ORCHID");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("dORCHID", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("ORCHID", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string0 = doubleMetaphone0.encode("SIO");
      assertEquals("S", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("j&/\"O>;Sz#A2uG.", "8", true);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean1 == boolean0);
      
      String string1 = doubleMetaphone1.doubleMetaphone("ORCHID", false);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("ARKT", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      
      String string2 = doubleMetaphone0.doubleMetaphone("ARKT", false);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("ARKT", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone0.doubleMetaphone("L");
      assertEquals("L", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("WR");
      assertEquals("R", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      
      String string2 = doubleMetaphone0.encode("OFbb");
      assertEquals("AFP", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      
      String string3 = doubleMetaphone0.encode("WR");
      assertEquals("R", string3);
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertTrue(string3.equals((Object)string1));
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "ORCHID";
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(29);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('-');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("-", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("D~QDJ-l>U>.o\"V", "OWSKY");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("OWSKY", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("-D~QDJ-l>U>.o\"V", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone1.new DoubleMetaphoneResult((-1079924597));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      String string0 = doubleMetaphone_DoubleMetaphoneResult1.getAlternate();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals("", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      Object object0 = doubleMetaphone1.encode((Object) "OWSKY");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("ASK", object0);
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(object0.equals((Object)string0));
      
      String string1 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals("-D~QDJ-l>U>.o\"V", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("OWSKY", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("-D~QDJ-l>U>.o\"V", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(string1.equals((Object)object0));
      assertFalse(string1.equals((Object)string0));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult2 = doubleMetaphone1.new DoubleMetaphoneResult(6);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      String string2 = doubleMetaphone_DoubleMetaphoneResult1.getPrimary();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult2);
      assertEquals("", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertTrue(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)object0));
      
      char char0 = doubleMetaphone1.charAt("KN", (-1079924597));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string3 = doubleMetaphone1.doubleMetaphone("D~QDJ-l>U>.o\"V", false);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("TKTJ", string3);
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)object0));
      assertFalse(string3.equals((Object)string0));
      
      String string4 = doubleMetaphone0.encode("[.5");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("", string4);
      assertNotNull(string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertTrue(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)object0));
      assertFalse(string4.equals((Object)string1));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult3 = doubleMetaphone1.new DoubleMetaphoneResult(4);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult3);
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult3.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult3.getAlternate());
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult3);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult2);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("OWSKY", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("-D~QDJ-l>U>.o\"V", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult3));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      
      String string5 = doubleMetaphone1.doubleMetaphone("");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNull(string5);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string6 = doubleMetaphone0.doubleMetaphone("[.5", false);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("", string6);
      assertNotNull(string6);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(string6.equals((Object)string4));
      assertTrue(string6.equals((Object)string2));
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)object0));
      assertTrue(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string1));
      
      String string7 = doubleMetaphone0.doubleMetaphone("W4[EJOQe", false);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("JK", string7);
      assertNotNull(string7);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string7.equals((Object)string3));
      assertFalse(string7.equals((Object)string2));
      assertFalse(string7.equals((Object)object0));
      assertFalse(string7.equals((Object)string6));
      assertFalse(string7.equals((Object)string1));
      assertFalse(string7.equals((Object)string4));
      assertFalse(string7.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "ORCHID";
      boolean boolean0 = DoubleMetaphone.contains("ORCHID", 4, 4, stringArray0);
      assertFalse(boolean0);
      assertEquals(1, stringArray0.length);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(4);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('A');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("A", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      doubleMetaphone1.setMaxCodeLen(8);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(8, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string0 = doubleMetaphone1.encode("aj8<rm{");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("AJRM", string0);
      assertNotNull(string0);
      assertEquals(8, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string1 = doubleMetaphone0.doubleMetaphone("n|ZRr;[%KXvWX4Et+D)", true);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("NTSR", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(68);
      assertEquals(68, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("(mC(A>RP\u0001>xJ", "orgapache.commons.codc.EncoderException");
      assertFalse(boolean0);
      assertEquals(68, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("(mC(A>RP\u0001>xJ", true);
      assertEquals("MKRPKS ", string0);
      assertNotNull(string0);
      assertEquals(68, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("o4US'H,?$0C", "0Gb?=pqzfR,K");
      assertFalse(boolean1);
      assertEquals(68, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("ET", "PN[DXB;P3;$WRT)ZUS#");
      assertFalse(boolean2);
      assertEquals(68, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      
      char char0 = doubleMetaphone0.charAt("PN[DXB;P3;$WRT)ZUS#", 59);
      assertEquals('\u0000', char0);
      assertEquals(68, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(59);
      assertEquals(59, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      doubleMetaphone1.setMaxCodeLen(1429);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(1429, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string1 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("ARKPXKMNSKTKNKTRKSPXN", string1);
      assertNotNull(string1);
      assertEquals(59, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(1429, int0);
      assertEquals(1429, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      int int1 = doubleMetaphone1.getMaxCodeLen();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(1429, int1);
      assertEquals(1429, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "");
      assertNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("o4US'H,?$0C", "WR");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen((-22701868));
      assertEquals((-22701868), doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(88);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string0 = doubleMetaphone0.doubleMetaphone("", false);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNull(string0);
      assertEquals((-22701868), doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      char char0 = '\\';
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('\\');
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("\\", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string1 = doubleMetaphone1.doubleMetaphone("WR");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("R", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.doubleMetaphone("~", false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("GN7");
      assertEquals("N", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("WR7", "GN4:BR SNV_DGIF'LUA >", true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("GN4:BR SNV_DGIF'LUA >", "SC", true);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("Ae", "ILLO", false);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      
      Object object1 = new Object();
      assertNotNull(object1);
      assertFalse(object1.equals((Object)object0));
      
      Object object2 = doubleMetaphone0.encode((Object) "WR7");
      assertEquals("R", object2);
      assertNotNull(object2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(object2.equals((Object)string0));
      
      Object object3 = doubleMetaphone0.encode((Object) "R");
      assertEquals("R", object3);
      assertNotNull(object3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(object3.equals((Object)string0));
      assertTrue(object3.equals((Object)object2));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-337));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('n');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('_');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string1 = doubleMetaphone0.encode("TB");
      assertEquals("TP", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)object3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)object2));
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "");
      assertNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("", false);
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone2.new DoubleMetaphoneResult(79);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone1.new DoubleMetaphoneResult(79);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult1.isComplete();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult1.isComplete();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertTrue(boolean1 == boolean0);
      
      boolean boolean2 = DoubleMetaphone.contains("_kX53VU=,`Z(dKQBIV", (-85), 563, (String[]) null);
      assertFalse(boolean2);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      
      String string1 = doubleMetaphone2.doubleMetaphone("DjJ?r>U`QZq7>N(i");
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertEquals("TJRK", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, int1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(int1 == int0);
      
      String string2 = doubleMetaphone2.doubleMetaphone(":6`g)#a[/");
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertEquals("K", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string1));
      
      int int2 = doubleMetaphone2.getMaxCodeLen();
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertEquals(4, int2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertTrue(int2 == int1);
      assertTrue(int2 == int0);
      
      boolean boolean3 = DoubleMetaphone.contains((String) null, (-237), 83, (String[]) null);
      assertFalse(boolean3);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "ORCHID";
      boolean boolean0 = DoubleMetaphone.contains("ORCHID", 4, 4, stringArray0);
      assertFalse(boolean0);
      assertEquals(1, stringArray0.length);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(4);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('d');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("d", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("TIA", "WRK", false);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      doubleMetaphone1.setMaxCodeLen(1466);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(1466, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string0 = doubleMetaphone0.encode("K6f(xuxF$>O#(iCcD");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("KFKS", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      boolean boolean2 = DoubleMetaphone.contains("ORCHID", 4, 66, (String[]) null);
      assertFalse(boolean2);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      
      String string1 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("d", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("d", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      
      String string2 = doubleMetaphone1.doubleMetaphone("6N}");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("N", string2);
      assertNotNull(string2);
      assertEquals(1466, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "");
      assertNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("(mC(A>RP\u0001>xJ", "org.apache.commons.codec.EncoderException");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(1588);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('A');
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("A", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("o4US'H,?$0C", "", false);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      
      doubleMetaphone1.setMaxCodeLen(1466);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(1466, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string0 = doubleMetaphone0.encode("%cz@o[9W*P ");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("SP", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      // Undeclared exception!
      try { 
        DoubleMetaphone.contains("}.~X]/161NK?!)", 1466, (-5078), (String[]) null);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1544);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('A');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("A", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("RYzC~ZKtZHYuzka", "aj8<rm{", true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(1466);
      assertEquals(1466, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("RYzC~ZKtZHYuzka");
      assertEquals("RSKSKTJSK", string0);
      assertNotNull(string0);
      assertEquals(1466, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = DoubleMetaphone.contains("", 1466, 4996, (String[]) null);
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      String string1 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertEquals("A", string1);
      assertNotNull(string1);
      assertEquals(1466, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("A", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(string1.equals((Object)string0));
      
      String string2 = doubleMetaphone0.doubleMetaphone("RSKSKTJSK");
      assertEquals("RSKSKTSK", string2);
      assertNotNull(string2);
      assertEquals(1466, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1544);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('A');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("A", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("EL", "EL");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("PN[DXB;P3;$WRT)ZUS#", "EL");
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1 == boolean0);
      
      char char0 = doubleMetaphone0.charAt("VON ", 1544);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(212);
      assertEquals(212, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      doubleMetaphone1.setMaxCodeLen(212);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(212, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      doubleMetaphone0.setMaxCodeLen(72);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(72, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone1.new DoubleMetaphoneResult(72);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(212, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      String string0 = doubleMetaphone0.encode("RYzC~ZKtZYuzk3a");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("RSKSKTSSK", string0);
      assertNotNull(string0);
      assertEquals(72, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      doubleMetaphone1.setMaxCodeLen(212);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(212, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      doubleMetaphone_DoubleMetaphoneResult1.appendAlternate('i');
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(212, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("i", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(boolean2);
      assertEquals(72, doubleMetaphone0.getMaxCodeLen());
      assertEquals("A", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      
      String string1 = doubleMetaphone0.encode("VON ");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("FN", string1);
      assertNotNull(string1);
      assertEquals(72, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      
      String string2 = doubleMetaphone0.encode("EL");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("AL", string2);
      assertNotNull(string2);
      assertEquals(72, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      String string3 = doubleMetaphone0.encode("S");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("S", string3);
      assertNotNull(string3);
      assertEquals(72, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "#Aj$10");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(1556);
      assertEquals(1556, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(1556, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string0 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      assertEquals("ARKPXKMNSKTKNKTRKSPXN", string0);
      assertNotNull(string0);
      assertEquals(1556, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('\\');
      assertEquals(1556, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("\\", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean1);
      assertEquals(1556, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("\\", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertTrue(boolean1 == boolean0);
      
      String[] stringArray0 = new String[17];
      stringArray0[0] = "O!x[pc@A?2";
      boolean boolean2 = DoubleMetaphone.contains("(#_t;K)%\".svOG", (-1), 1, stringArray0);
      assertFalse(boolean2);
      assertEquals(17, stringArray0.length);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("#Aj$10");
      assertEquals("J", string1);
      assertNotNull(string1);
      assertEquals(1556, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "ORCHID";
      boolean boolean0 = DoubleMetaphone.contains("ORCHID", 4, 4, stringArray0);
      assertFalse(boolean0);
      assertEquals(1, stringArray0.length);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(4);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('d');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("d", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("ORCHID", "ORCHID");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ORCH", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("dORC", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertEquals("ORCH", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ORCH", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("dORC", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      Object object0 = doubleMetaphone0.encode((Object) "ORCHID");
      assertEquals("ARKT", object0);
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(object0.equals((Object)string0));
      
      String string1 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertEquals("dORC", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ORCH", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("dORC", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(string1.equals((Object)object0));
      assertFalse(string1.equals((Object)string0));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(4);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      String string2 = doubleMetaphone_DoubleMetaphoneResult1.getPrimary();
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals("", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)object0));
      assertFalse(string2.equals((Object)string0));
      
      char char0 = doubleMetaphone0.charAt("ORCHID", (-1188));
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("ORCH", false);
      assertEquals("ARX", string3);
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)object0));
      assertFalse(string3.equals((Object)string0));
      
      String string4 = doubleMetaphone0.encode("ARX");
      assertEquals("ARKS", string4);
      assertNotNull(string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string4.equals((Object)object0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult2 = doubleMetaphone0.new DoubleMetaphoneResult(72);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult2.isComplete();
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertTrue(boolean1 == boolean0);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      
      String string5 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string5);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("h H#]KOsk2|r");
      assertEquals("KSKR", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "KSKR");
      assertEquals("KSKR", object0);
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(object0.equals((Object)string0));
      
      String string1 = doubleMetaphone0.doubleMetaphone("h H#]KOsk2|r");
      assertEquals("KSKR", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string1.equals((Object)object0));
      assertTrue(string1.equals((Object)string0));
      
      String string2 = "lB5)& R";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("OU", "h H#]KOsk2|r", true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("OJDG(|");
      assertEquals("AJTK", string3);
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)object0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      
      String string4 = doubleMetaphone0.doubleMetaphone((String) null);
      assertNull(string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(42);
      assertEquals(42, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = 3057;
      int int1 = 4996;
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("sPh&q,Rw+Ly^s", "lB5)& R");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      
      try { 
        doubleMetaphone0.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("( H#]KOsk2|r");
      assertEquals("KSKR", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "KSKR");
      assertEquals("KSKR", object0);
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(object0.equals((Object)string0));
      
      String string1 = doubleMetaphone0.doubleMetaphone("( H#]KOsk2|r");
      assertEquals("KSKR", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string1.equals((Object)string0));
      assertTrue(string1.equals((Object)object0));
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("OU", "( H#]KOsk2|r", true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("TT");
      assertEquals("T", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)object0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      
      String string3 = doubleMetaphone0.doubleMetaphone("lB5)& R");
      assertEquals("LPR", string3);
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string3.equals((Object)object0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      
      doubleMetaphone0.setMaxCodeLen(1466);
      assertEquals(1466, doubleMetaphone0.getMaxCodeLen());
      
      String string4 = doubleMetaphone0.encode("TT");
      assertEquals("T", string4);
      assertNotNull(string4);
      assertEquals(1466, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)object0));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      
      boolean boolean1 = DoubleMetaphone.contains("PN)RZVT^VZAZ|A|&9XG", 1466, 4996, (String[]) null);
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      String string5 = doubleMetaphone0.doubleMetaphone("OU");
      assertEquals("A", string5);
      assertNotNull(string5);
      assertEquals(1466, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)object0));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string3));
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(3);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      doubleMetaphone_DoubleMetaphoneResult1.appendPrimary('A');
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("A", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      String string0 = "-4av0o";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("S", "D,x5@/", true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("UMB", (String) null, false);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      try { 
        doubleMetaphone0.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(89);
      assertEquals(89, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("?qqH.u<=QY.Y'Ra", "?qqH.u<=QY.Y'Ra");
      assertTrue(boolean0);
      assertEquals(89, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("c[mjT9fe1?#=& U/:");
      assertEquals("KMTF", string0);
      assertNotNull(string0);
      assertEquals(89, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("TCH", true);
      assertEquals("X", string1);
      assertNotNull(string1);
      assertEquals(89, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("AGGI");
      assertEquals("AJ", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("WR#UR=:", "/};H}fM]", true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("-4av0o", "-fFU/A", true);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1 == boolean0);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("WR#UR=:", "&,`D:4", false);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Object object1 = new Object();
      assertNotNull(object1);
      assertFalse(object1.equals((Object)object0));
      
      try { 
        doubleMetaphone0.encode(object1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "org.apache.commons.codec.EncoderException";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("PSH", "#Aj$10");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen((-2343));
      assertEquals((-2343), doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = null;
      try {
        doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("CH", false);
      assertEquals("K", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(69);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      
      boolean boolean2 = doubleMetaphone1.isDoubleMetaphoneEqual("3VTI^KOdeA\"/xG6", "", true);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      
      doubleMetaphone1.setMaxCodeLen(75);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(75, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string1 = doubleMetaphone0.encode("Xffs7v:t)Vs,.V8h");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("SFSF", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      
      // Undeclared exception!
      try { 
        DoubleMetaphone.contains("SFSF", 0, 1, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = 1556;
      String string0 = doubleMetaphone0.doubleMetaphone("GN7");
      assertEquals("N", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(int1 == int0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("W$R7", "GN4:BR SNV_DGIF'LUA >", true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("GN4:BR SNV_DGIF'LUA >", "SC", true);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = 68;
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "nNjkYz^~z", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = 72;
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(72);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("lexehh6x", "G$S", false);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      
      try { 
        doubleMetaphone0.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("CH", false);
      assertEquals("K", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(69);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "CH";
      stringArray0[1] = "org.apache.commons.codec.EncoderException";
      stringArray0[2] = "K";
      stringArray0[3] = "org.apache.commons.codec.EncoderException";
      stringArray0[4] = "CH";
      stringArray0[5] = ";ZB>-Tq'&CT)";
      stringArray0[6] = "_kX53VU=,`Z(dKQBIV";
      stringArray0[7] = "org.apache.commons.codec.EncoderException";
      boolean boolean2 = DoubleMetaphone.contains("org.apache.commons.codec.EncoderException", 714, 69, stringArray0);
      assertFalse(boolean2);
      assertEquals(8, stringArray0.length);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      
      String string1 = doubleMetaphone0.doubleMetaphone(",");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      int int1 = doubleMetaphone1.getMaxCodeLen();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, int1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertTrue(int1 == int0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string2 = doubleMetaphone0.doubleMetaphone("WH");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("A", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) " &m3c!@QT% ");
      assertEquals("MKKT", object0);
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object1 = doubleMetaphone0.encode((Object) "MKKT");
      assertEquals("MKT", object1);
      assertNotNull(object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(object1.equals((Object)object0));
      
      Object object2 = doubleMetaphone0.encode((Object) "MKT");
      assertEquals("MKT", object2);
      assertNotNull(object2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(object2.equals((Object)object0));
      assertTrue(object2.equals((Object)object1));
      
      String string0 = doubleMetaphone0.doubleMetaphone("Xb:ppPC+YZCTp%");
      assertEquals("SPPP", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string0.equals((Object)object2));
      assertFalse(string0.equals((Object)object0));
      assertFalse(string0.equals((Object)object1));
      
      String string1 = doubleMetaphone0.doubleMetaphone("MKKT", false);
      assertEquals("MKT", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string1.equals((Object)object2));
      assertFalse(string1.equals((Object)object0));
      assertTrue(string1.equals((Object)object1));
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("j;h}s");
      assertEquals("JS", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1193));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string1 = doubleMetaphone0.encode("WR");
      assertEquals("R", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      
      String string2 = doubleMetaphone0.encode("#>\"j\"8!(\"M(a&H");
      assertEquals("JM", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      
      String string3 = doubleMetaphone0.encode("\"gY");
      assertEquals("K", string3);
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1544);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('3');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("3", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("RYzC~ZKtZYuzk3a", "RYzC~ZKtZYuzk3a");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("3RYzC~ZKtZYuzk3a", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("RYzC~ZKtZYuzk3a", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string0 = doubleMetaphone0.encode("RYzC~ZKtZYuzk3a");
      assertEquals("RSKS", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate(")RZVt^VZaz|A|&9Xg");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("3RYzC~ZKtZYuzk3a", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("RYzC~ZKtZYuzk3a)RZVt^VZaz|A|&9Xg", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string1 = doubleMetaphone0.doubleMetaphone("RYzC~ZKtZYuzk3a", true);
      assertEquals("RTSK", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual(")RZVt^VZaz|A|&9Xg", "RYzC~ZKtZYuzk3a");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("ET", "H;nONvI,+");
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      
      char char0 = doubleMetaphone0.charAt("IL", 74);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("", false);
      assertNull(string2);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.encode("&)h6:KCj9TB&;OO");
      assertEquals("", string3);
      assertNotNull(string3);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      
      String string4 = doubleMetaphone0.encode("IL");
      assertEquals("", string4);
      assertNotNull(string4);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string4.equals((Object)string1));
      assertTrue(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      
      String string5 = doubleMetaphone0.encode("H;nONvI,+");
      assertEquals("", string5);
      assertNotNull(string5);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string0));
      assertTrue(string5.equals((Object)string4));
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string6 = doubleMetaphone1.encode("&)h6:KCj9TB&;OO");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("KKJT", string6);
      assertNotNull(string6);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)string4));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string3));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string7 = doubleMetaphone0.doubleMetaphone("TION");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("", string7);
      assertNotNull(string7);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(string7.equals((Object)string4));
      assertTrue(string7.equals((Object)string3));
      assertFalse(string7.equals((Object)string6));
      assertFalse(string7.equals((Object)string0));
      assertFalse(string7.equals((Object)string1));
      assertTrue(string7.equals((Object)string5));
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("h H#]KOsk2|r");
      assertEquals("KSKR", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "KSKR");
      assertEquals("KSKR", object0);
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(object0.equals((Object)string0));
      
      String string1 = doubleMetaphone0.doubleMetaphone("h H#]KOsk2|r");
      assertEquals("KSKR", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string1.equals((Object)string0));
      assertTrue(string1.equals((Object)object0));
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("OU", "h H#]KOsk2|r", true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("OJDG(|");
      assertEquals("AJTK", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)object0));
      
      String string3 = doubleMetaphone0.doubleMetaphone("lB5)& R");
      assertEquals("LPR", string3);
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string3.equals((Object)object0));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      
      doubleMetaphone0.setMaxCodeLen(1466);
      assertEquals(1466, doubleMetaphone0.getMaxCodeLen());
      
      String string4 = doubleMetaphone0.encode("JKRK");
      assertEquals("JKRK", string4);
      assertNotNull(string4);
      assertEquals(1466, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)object0));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      
      boolean boolean1 = DoubleMetaphone.contains("", 3057, 4996, (String[]) null);
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      String string5 = doubleMetaphone0.doubleMetaphone("KSKR");
      assertEquals("KSKR", string5);
      assertNotNull(string5);
      assertEquals(1466, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string3));
      assertTrue(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string4));
      assertTrue(string5.equals((Object)object0));
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1544);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('A');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("A", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("RYzC~ZKtZYuzk3a", "aj8<rm{", true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(1466);
      assertEquals(1466, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("RYzC~ZKtZYuzk3a");
      assertEquals("RSKSKTSSK", string0);
      assertNotNull(string0);
      assertEquals(1466, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = DoubleMetaphone.contains("", 1466, 4996, (String[]) null);
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      String string1 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertEquals("A", string1);
      assertNotNull(string1);
      assertEquals(1466, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("A", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(string1.equals((Object)string0));
      
      String string2 = doubleMetaphone0.doubleMetaphone("RSKSKTSSK");
      assertEquals("RSKSKTSK", string2);
      assertNotNull(string2);
      assertEquals(1466, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = 1556;
      String string0 = doubleMetaphone0.doubleMetaphone("GN7");
      assertEquals("N", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(int1 == int0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("WR7", "GN4:BR SNV_DGIF'LUA >", true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("GN4:BR SNV_DGIF'LUA >", "SC", true);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = 1544;
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1544);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('\\');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("\\", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      char char0 = doubleMetaphone0.charAt("9J", (-1));
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "";
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("\\", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string1 = null;
      String string2 = doubleMetaphone0.doubleMetaphone((String) null, false);
      assertNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("UCCEE");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("\\UCCEE", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("UCCEE", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult((-1));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      doubleMetaphone_DoubleMetaphoneResult1.append('\"', ',');
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      String string3 = doubleMetaphone_DoubleMetaphoneResult1.getAlternate();
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals("", string3);
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertTrue(string3.equals((Object)string0));
      
      try { 
        doubleMetaphone0.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('A');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("A", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("#Aj$10", "#Aj$10");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("#", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("A", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone0.encode("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = ")RZVt^VZaz|A|&9Xg";
      String string2 = "WR%}PE+DE";
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("WR%}PE+DE");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("#", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("A", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = true;
      String string3 = doubleMetaphone0.doubleMetaphone("WR%}PE+DE", true);
      assertEquals("RPT", string3);
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("#Aj$10", "");
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1 == boolean0);
      
      String string4 = "OS";
      try { 
        doubleMetaphone0.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "#Aj$10");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(1556);
      assertEquals(1556, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "#Aj$10", true);
      assertFalse(boolean1);
      assertEquals(1556, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string0);
      assertEquals(1556, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(1556);
      assertEquals(1556, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      int int0 = 3;
      doubleMetaphone1.setMaxCodeLen(3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(3, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string1 = doubleMetaphone1.encode("GN");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("N", string1);
      assertNotNull(string1);
      assertEquals(3, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string2 = doubleMetaphone1.encode("G*#");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("K", string2);
      assertNotNull(string2);
      assertEquals(3, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string1));
      
      // Undeclared exception!
      try { 
        DoubleMetaphone.contains((String) null, 1552, 1552, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("ao~($wa1['Pl*", true);
      assertEquals("APL", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("APL", 134);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(134);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("HOLM");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("HOLM", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string1 = "V";
      Object object0 = doubleMetaphone0.encode((Object) "HOLM");
      assertEquals("HLM", object0);
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string0));
      
      String string2 = doubleMetaphone0.doubleMetaphone("V", true);
      assertEquals("F", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)object0));
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("HOLM", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("j90/qYbkfFW(1cc7IH}");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("j90/qYbkfFW(1cc7IH}", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("HOLMj90/qYbkfFW(1cc7IH}", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('6', '\u0000');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("HOLMj90/qYbkfFW(1cc7IH}6", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("j90/qYbkfFW(1cc7IH}\u0000", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string3 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertEquals("j90/qYbkfFW(1cc7IH}\u0000", string3);
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("HOLMj90/qYbkfFW(1cc7IH}6", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("j90/qYbkfFW(1cc7IH}\u0000", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)object0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      
      Object object1 = doubleMetaphone0.encode((Object) "F");
      assertEquals("F", object1);
      assertNotNull(object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(object1.equals((Object)string2));
      assertFalse(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string3));
      assertFalse(object1.equals((Object)string1));
      assertFalse(object1.equals((Object)string0));
      
      String string4 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertEquals("HOLMj90/qYbkfFW(1cc7IH}6", string4);
      assertNotNull(string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("HOLMj90/qYbkfFW(1cc7IH}6", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("j90/qYbkfFW(1cc7IH}\u0000", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(string4.equals((Object)object1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)object0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      
      String string5 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertEquals("HOLMj90/qYbkfFW(1cc7IH}6", string5);
      assertNotNull(string5);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("HOLMj90/qYbkfFW(1cc7IH}6", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("j90/qYbkfFW(1cc7IH}\u0000", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertTrue(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)object0));
      assertFalse(string5.equals((Object)object1));
      
      doubleMetaphone0.setMaxCodeLen((-1));
      assertEquals((-1), doubleMetaphone0.getMaxCodeLen());
      
      char char1 = doubleMetaphone0.charAt("V", 1707);
      assertEquals('\u0000', char1);
      assertEquals((-1), doubleMetaphone0.getMaxCodeLen());
      assertTrue(char1 == char0);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.doubleMetaphone("F");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("CH", false);
      assertEquals("K", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("PN7Q>QPV-3&K?P-,ZL", "er=^x8gR");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("K", "rWSpvJEI)'}");
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      
      char char0 = doubleMetaphone0.charAt("H;nONvI,+", 69);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("K", "");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(boolean2);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      
      doubleMetaphone1.setMaxCodeLen(87);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(87, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      doubleMetaphone0.setMaxCodeLen(87);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(87, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      String string1 = doubleMetaphone0.encode("UQVeUh3<XAn5");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("AKFKSN", string1);
      assertNotNull(string1);
      assertEquals(87, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      
      String string2 = doubleMetaphone2.encode("ED");
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertEquals("AT", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      
      String string3 = doubleMetaphone1.encode("org.apache.commons.codec.EncoderException");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertEquals("ARKPXKMNSKTKNKTRKSPXN", string3);
      assertNotNull(string3);
      assertEquals(87, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("AGGI");
      assertEquals("AJ", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("WR#UR=:", "/};H}fM]", true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("UZGzj,X\"?8-m6t", "-4av0o", false);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "#Aj$10");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(1556);
      assertEquals(1556, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "#Aj$10";
      stringArray0[1] = "org.apache.commons.codec.EncoderException";
      boolean boolean1 = DoubleMetaphone.contains("org.apache.commons.codec.EncoderException", 1556, 1556, stringArray0);
      assertFalse(boolean1);
      assertEquals(2, stringArray0.length);
      assertTrue(boolean1 == boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(75);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary(',');
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals(",", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      doubleMetaphone_DoubleMetaphoneResult0.append("CE", "#Aj$10");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals(",CE", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("#Aj$10", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      String string0 = doubleMetaphone1.encode("CE");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("S", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("CE");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("#Aj$10CE", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals(",CE", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      doubleMetaphone_DoubleMetaphoneResult0.append("@&M6GX>h3HI%", "");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("#Aj$10CE", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals(",CE@&M6GX>h3HI%", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      
      String string1 = doubleMetaphone2.doubleMetaphone("EWSKI", false);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertEquals("ASK", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      
      String string2 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("ARKPXKMNSKTKNKTRKSPXN", string2);
      assertNotNull(string2);
      assertEquals(1556, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      int int0 = doubleMetaphone2.getMaxCodeLen();
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("j;h}s", "NYh");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("j;h}s");
      assertEquals("JS", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("d><1}+q*H8=F8]`hj", true);
      assertEquals("TKF ", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(1556);
      assertEquals(1556, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(1556, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('\\');
      assertEquals(1556, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("\\", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      char char0 = doubleMetaphone0.charAt("O!x[pc@A?2", 1);
      assertEquals('!', char0);
      assertEquals(1556, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("O!x[pc@A?2");
      assertEquals(1556, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("\\", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertEquals("", string0);
      assertNotNull(string0);
      assertEquals(1556, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("\\", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("#Aj$10");
      assertEquals(1556, doubleMetaphone0.getMaxCodeLen());
      assertEquals("\\", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("#", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('\\', '6');
      assertEquals(1556, doubleMetaphone0.getMaxCodeLen());
      assertEquals("\\", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("#", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string1 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertEquals("#", string1);
      assertNotNull(string1);
      assertEquals(1556, doubleMetaphone0.getMaxCodeLen());
      assertEquals("\\", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("#", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(string1.equals((Object)string0));
      
      Object object0 = doubleMetaphone0.encode((Object) "");
      assertNull(object0);
      assertEquals(1556, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertEquals("\\", string2);
      assertNotNull(string2);
      assertEquals(1556, doubleMetaphone0.getMaxCodeLen());
      assertEquals("\\", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("#", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      
      String string3 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertEquals("\\", string3);
      assertNotNull(string3);
      assertEquals(1556, doubleMetaphone0.getMaxCodeLen());
      assertEquals("\\", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("#", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertTrue(string3.equals((Object)string2));
      
      doubleMetaphone0.setMaxCodeLen(1556);
      assertEquals(1556, doubleMetaphone0.getMaxCodeLen());
      
      char char1 = doubleMetaphone0.charAt("O!x[pc@A?2", 1);
      assertEquals('!', char1);
      assertEquals(1556, doubleMetaphone0.getMaxCodeLen());
      assertTrue(char1 == char0);
      
      String string4 = doubleMetaphone0.doubleMetaphone((String) null, true);
      assertNull(string4);
      assertEquals(1556, doubleMetaphone0.getMaxCodeLen());
      
      String string5 = doubleMetaphone0.encode("zgEZtWA1w?m'|m%7");
      assertEquals("SJSTMM", string5);
      assertNotNull(string5);
      assertEquals(1556, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string2));
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean0);
      assertEquals(1556, doubleMetaphone0.getMaxCodeLen());
      assertEquals("\\", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("#", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string6 = doubleMetaphone0.doubleMetaphone("TMhF$av=C;DY_JY@M");
      assertEquals("TMFFKTJM", string6);
      assertNotNull(string6);
      assertEquals(1556, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string2));
      assertFalse(string6.equals((Object)string3));
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("9jv5LL!q9^58M");
      assertEquals("JFLK", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(176);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("IE");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("IE", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("", 176);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char1 = doubleMetaphone0.charAt("0}U]]c1aHyhf2c@FS", 0);
      assertEquals('0', char1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(char1 == char0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "#Aj$10");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(1556);
      assertEquals(1556, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(1556, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      assertEquals("ARKPXKMNSKTKNKTRKSPXN", string0);
      assertNotNull(string0);
      assertEquals(1556, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('\\');
      assertEquals(1556, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("\\", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      char char0 = doubleMetaphone0.charAt("O!x[pc@A?2", 1);
      assertEquals('!', char0);
      assertEquals(1556, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("O!x[pc@A?2");
      assertEquals(1556, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("\\", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string1 = doubleMetaphone0.doubleMetaphone("O!x[pc@A?2", true);
      assertEquals("AKSPK", string1);
      assertNotNull(string1);
      assertEquals(1556, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      
      doubleMetaphone_DoubleMetaphoneResult0.append('!');
      assertEquals(1556, doubleMetaphone0.getMaxCodeLen());
      assertEquals("!", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("\\", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "#Aj$10";
      stringArray0[1] = "F3[TJ#Z(y$_RM`[";
      stringArray0[2] = "AKSPK";
      boolean boolean1 = DoubleMetaphone.contains("F3[TJ#Z(y$_RM`[", (-1), 1050, stringArray0);
      assertFalse(boolean1);
      assertEquals(3, stringArray0.length);
      assertTrue(boolean1 == boolean0);
      
      try { 
        doubleMetaphone0.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("CH", false);
      assertEquals("K", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(69);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertTrue(boolean1 == boolean0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "_kX53VU=,`Z(dKQBIV";
      stringArray0[1] = "_kX53VU=,`Z(dKQBIV";
      boolean boolean2 = DoubleMetaphone.contains("_kX53VU=,`Z(dKQBIV", 69, 69, stringArray0);
      assertFalse(boolean2);
      assertEquals(2, stringArray0.length);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("CC");
      assertEquals("K", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("CIA", false);
      assertEquals("S", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("7", "7");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("7", true);
      assertEquals("", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      
      String string2 = doubleMetaphone0.doubleMetaphone("7", true);
      assertEquals("", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("j;h}s");
      assertEquals("JS", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(878);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("P");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("P", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("PIL ");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("PPIL ", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("S", "PS2- >_K8^G_L2V/EK");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PS2- >_K8^G_L2V/EK", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("PPIL S", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string1 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertEquals("PS2- >_K8^G_L2V/EK", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PS2- >_K8^G_L2V/EK", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("PPIL S", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(string1.equals((Object)string0));
      
      doubleMetaphone_DoubleMetaphoneResult0.append("JS");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PPIL SJS", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("PS2- >_K8^G_L2V/EKJS", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string2 = doubleMetaphone0.doubleMetaphone("`[=<`v:ze\"u", true);
      assertEquals("FS", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      
      String string3 = doubleMetaphone0.encode("");
      assertNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("9jv5LL!q9^58M");
      assertEquals("JFLK", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("9jv5LL!q9^58M");
      assertEquals("JFLK", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "");
      assertNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("(mC(A>RP\u0001>xJ", "org.apache.commons.codec.EncoderException");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("(mC(A>RP\u0001>xJ", true);
      assertEquals("MKRP", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("o4US'H,?$0C", "0Ga?fpqzfR,K");
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("ET", "PN[DXB;P3;$WRT)ZUS#");
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      
      char char0 = doubleMetaphone0.charAt("PN[DXB;P3;$WRT)ZUS#", 59);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(59);
      assertEquals(59, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(78);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string1 = doubleMetaphone0.encode("o4US'H,?$0C");
      assertEquals("", string1);
      assertNotNull(string1);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('\u0000');
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("\u0000", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean3 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean3);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("\u0000", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      
      String string2 = doubleMetaphone0.encode(">j7!U?X?|ngVsZ");
      assertEquals("", string2);
      assertNotNull(string2);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("HYM");
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("\u0000HYM", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string3 = doubleMetaphone0.encode((String) null);
      assertNull(string3);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("\u0000HYM", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(0, int0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("9>yw");
      assertEquals("", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) " &m3c!@QT% ");
      assertEquals("MKKT", object0);
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("CY");
      assertEquals("S", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string0.equals((Object)object0));
      
      Object object1 = doubleMetaphone0.encode((Object) "MKKT");
      assertEquals("MKT", object1);
      assertNotNull(object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string0));
      
      Object object2 = doubleMetaphone0.encode((Object) "MKT");
      assertEquals("MKT", object2);
      assertNotNull(object2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(object2.equals((Object)object0));
      assertFalse(object2.equals((Object)string0));
      assertTrue(object2.equals((Object)object1));
      
      String string1 = doubleMetaphone0.doubleMetaphone("Xb:ppPC+YZCTp%");
      assertEquals("SPPP", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)object2));
      assertFalse(string1.equals((Object)object1));
      assertFalse(string1.equals((Object)object0));
      assertFalse(string1.equals((Object)string0));
      
      String string2 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      assertEquals("ARKP", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)object0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)object2));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)object1));
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2430);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone0.encode("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('U');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("U", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("'{]86oIB_", "");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("'{]86oIB_", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("U", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string1 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertEquals("'{]86oIB_", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("'{]86oIB_", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("U", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string3 = doubleMetaphone0.doubleMetaphone("CK", false);
      assertEquals("K", string3);
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string3.equals((Object)string2));
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(332);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("GNGN");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("GNGN", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("Y`w!/vYB[D4Q5", "GNGN");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("GNGNY`w!/vYB[D4Q5", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("GNGN", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string0 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertEquals("GNGN", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("GNGNY`w!/vYB[D4Q5", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("GNGN", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("Q");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("GNGNQ", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("GNGNY`w!/vYB[D4Q5Q", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      
      doubleMetaphone_DoubleMetaphoneResult0.append('j');
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("GNGNQj", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("GNGNY`w!/vYB[D4Q5Qj", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      String string1 = doubleMetaphone1.doubleMetaphone("CW", true);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("K", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      
      String string2 = doubleMetaphone0.encode("5!");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      
      doubleMetaphone_DoubleMetaphoneResult0.append("K");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("GNGNQjK", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("GNGNY`w!/vYB[D4Q5QjK", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("ACH");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("GNGNQjK", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("GNGNY`w!/vYB[D4Q5QjKACH", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("j;h}s");
      assertEquals("JS", string0);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(878);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("JS");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("JS", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("Y`w!/vYB[D4Q5", "JS");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("JS", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("JSY`w!/vYB[D4Q5", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string1 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertEquals("JS", string1);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("JS", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("JSY`w!/vYB[D4Q5", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertTrue(string1.equals((Object)string0));
      
      doubleMetaphone_DoubleMetaphoneResult0.append("JS");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("JSJS", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("JSY`w!/vYB[D4Q5JS", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string2 = doubleMetaphone0.doubleMetaphone("`(``A-hVcW#l<e", true);
      assertEquals("FKL", string2);
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      
      String string3 = doubleMetaphone0.encode("`(``A-hVcW#l<e");
      assertEquals("FKL", string3);
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult1.isComplete();
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      doubleMetaphone_DoubleMetaphoneResult1.append("ACH");
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("!'IH/s");
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("JSJS", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("JSY`w!/vYB[D4Q5JS!'IH/s", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "#Aj$10");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(1556);
      DoubleMetaphone.contains("#Aj$10", 1, 638, (String[]) null);
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      doubleMetaphone0.encode("#Aj$10");
      doubleMetaphone0.setMaxCodeLen(199);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1049));
      doubleMetaphone_DoubleMetaphoneResult0.append('k');
      doubleMetaphone0.encode("%wBV ]I!x");
      doubleMetaphone_DoubleMetaphoneResult0.append('(');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('.');
      doubleMetaphone1.encode((Object) "ZA");
      Object object0 = new Object();
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      DoubleMetaphone.contains("TRte%B>kF", 0, 199, (String[]) null);
      String string0 = doubleMetaphone0.doubleMetaphone("#Aj$10");
      assertEquals("J", string0);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "ORCHID";
      DoubleMetaphone.contains("ORCHID", 4, 4, stringArray0);
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(4);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('d');
      doubleMetaphone_DoubleMetaphoneResult0.append("ORCHID", "ORCHID");
      doubleMetaphone0.encode("SIO");
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate(")RZVt^VZaz|A|&9Xg");
      doubleMetaphone_DoubleMetaphoneResult0.append("ORCHID", "IB");
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      doubleMetaphone1.doubleMetaphone("ORCHID", false);
      doubleMetaphone0.doubleMetaphone("ARKT", false);
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone("j;h}s");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(878);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("JS");
      doubleMetaphone_DoubleMetaphoneResult0.append("Y`w!/vYB[D4Q5", "JS");
      doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      doubleMetaphone_DoubleMetaphoneResult0.append("JS");
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      doubleMetaphone0.setMaxCodeLen((-2417));
      doubleMetaphone1.setMaxCodeLen(2429);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone1.new DoubleMetaphoneResult((-1));
      String string0 = "ARCHIT";
      // Undeclared exception!
      try { 
        doubleMetaphone0.encode("n6SED\nh");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode((Object) "");
      doubleMetaphone0.isDoubleMetaphoneEqual("(mC(A>RP\u0001>xJ", "org.apache.commons.codec.EncoderException");
      doubleMetaphone0.doubleMetaphone("(mC(A>RP\u0001>xJ", true);
      doubleMetaphone0.isDoubleMetaphoneEqual("o4US'H,?$0C", "0Ga?fpqzfR,K");
      doubleMetaphone0.isDoubleMetaphoneEqual("ET", "PN[DXB;P3;$WRT)ZUS#");
      doubleMetaphone0.charAt("PN[DXB;P3;$WRT)ZUS#", 59);
      doubleMetaphone0.setMaxCodeLen(59);
      assertEquals(59, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      doubleMetaphone1.setMaxCodeLen(1429);
      doubleMetaphone1.setMaxCodeLen(0);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(78);
      doubleMetaphone0.encode("o4US'H,?$0C");
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('\u0000');
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone0.encode(">j7!U?X?|ngVsZ");
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("HYM");
      doubleMetaphone0.encode((String) null);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      assertEquals("\u0000HYM", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode((Object) " &m3c!@QT% ");
      doubleMetaphone0.encode((Object) "MKKT");
      doubleMetaphone0.encode((Object) "MKT");
      String string0 = doubleMetaphone0.doubleMetaphone("Xb:ppPC+YZCTp%");
      assertEquals("SPPP", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("SK", true);
      assertEquals("SK", string1);
      
      doubleMetaphone0.doubleMetaphone((String) null, true);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(176);
      doubleMetaphone0.encode((Object) " &m3c!@QT% ");
      String string2 = doubleMetaphone0.doubleMetaphone("MKT");
      assertEquals("MKT", string2);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "HOEK";
      stringArray0[1] = "HOEK";
      stringArray0[2] = "HOEK";
      DoubleMetaphone.contains("HOEK", 4, 4, stringArray0);
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      doubleMetaphone0.encode("PN}SKI\"6");
      doubleMetaphone0.setMaxCodeLen(69);
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone2.new DoubleMetaphoneResult((-1450));
      doubleMetaphone_DoubleMetaphoneResult0.append('k');
      doubleMetaphone0.encode("T^V");
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('k');
      doubleMetaphone0.encode((Object) "");
      Object object0 = new Object();
      Object object1 = new Object();
      try { 
        doubleMetaphone2.encode(object1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(985);
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone_DoubleMetaphoneResult0.append('F', '7');
      doubleMetaphone1.getMaxCodeLen();
      doubleMetaphone0.doubleMetaphone("}SkI\"6", true);
      doubleMetaphone_DoubleMetaphoneResult0.append(':');
      int int0 = 209;
      String[] stringArray0 = new String[0];
      DoubleMetaphone.contains("F3[TJ#Z(y$_RM`[", 985, 209, stringArray0);
      try { 
        doubleMetaphone1.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = doubleMetaphone0.doubleMetaphone("EOBWWA");
      assertEquals("AP", string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      String string1 = doubleMetaphone0.doubleMetaphone("ISL");
      assertEquals("AL", string1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(176);
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = doubleMetaphone0.doubleMetaphone("jqRQMIHo@Vu(bkPM|");
      assertEquals("JKRK", string0);
      
      doubleMetaphone0.getMaxCodeLen();
      String string1 = doubleMetaphone0.doubleMetaphone("PzoZJ", true);
      assertNotNull(string1);
      
      doubleMetaphone0.isDoubleMetaphoneEqual("-4av0o", "", true);
      doubleMetaphone0.isDoubleMetaphoneEqual("JKRK", "", false);
      doubleMetaphone0.encode((Object) "JKRK");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(4);
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('4');
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('P');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("JKRK");
      doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('P');
      assertEquals("PP", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone0.doubleMetaphone("4JKR");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-4av0o";
      stringArray0[1] = "JKRK";
      stringArray0[2] = "";
      stringArray0[3] = "KR";
      stringArray0[4] = "JKRK";
      stringArray0[5] = "4JKR";
      boolean boolean0 = DoubleMetaphone.contains("WRORCHID", 4, 1542, stringArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone("jDE1m3|8sj>:g9:w");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(74);
      doubleMetaphone0.doubleMetaphone("@\u0001Zq", false);
      String string0 = doubleMetaphone0.doubleMetaphone((String) null, false);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      int int0 = 2404;
      doubleMetaphone0.setMaxCodeLen(2404);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(248);
      doubleMetaphone0.setMaxCodeLen(248);
      doubleMetaphone0.doubleMetaphone("FY6-fe4e-X7C");
      doubleMetaphone0.setMaxCodeLen((-93));
      doubleMetaphone_DoubleMetaphoneResult0.append("");
      doubleMetaphone0.doubleMetaphone("");
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("");
      String string0 = "lzSbV6";
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "lzSbV6");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1544);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('A');
      doubleMetaphone_DoubleMetaphoneResult0.append("RYzC~ZKtZYuzk3a", "RYzC~ZKtZYuzk3a");
      doubleMetaphone0.encode("RYzC~ZKtZYuzk3a");
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate(")RZVt^VZaz|A|&9Xg");
      doubleMetaphone0.doubleMetaphone("RYzC~ZKtZYuzk3a", true);
      doubleMetaphone0.isDoubleMetaphoneEqual(")RZVt^VZaz|A|&9Xg", "RYzC~ZKtZYuzk3a");
      doubleMetaphone0.isDoubleMetaphoneEqual("ET", "H;nONvI,+");
      doubleMetaphone0.charAt("IL", 74);
      doubleMetaphone0.setMaxCodeLen(0);
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      doubleMetaphone0.setMaxCodeLen(1544);
      doubleMetaphone1.setMaxCodeLen(377);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult((-1161));
      doubleMetaphone1.encode(")RZVt^VZaz|A|&9Xg");
      doubleMetaphone_DoubleMetaphoneResult1.appendAlternate('1');
      doubleMetaphone_DoubleMetaphoneResult1.isComplete();
      doubleMetaphone1.encode("ET");
      doubleMetaphone0.encode("KNPSARKP");
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult1.appendPrimary("ARCHIT");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1544);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('A');
      doubleMetaphone_DoubleMetaphoneResult0.append("RYzC~ZKtZYuzk3a", "RYzC~ZKtZYuzk3a");
      doubleMetaphone0.encode("RYzC~ZKtZYuzk3a");
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate(")RZVt^VZaz|A|&9Xg");
      doubleMetaphone_DoubleMetaphoneResult0.append("HOLM", "HOLM");
      doubleMetaphone0.doubleMetaphone("HOLM", false);
      doubleMetaphone_DoubleMetaphoneResult0.append('F', '7');
      doubleMetaphone0.getMaxCodeLen();
      doubleMetaphone0.doubleMetaphone("", true);
      doubleMetaphone_DoubleMetaphoneResult0.append('.');
      String[] stringArray0 = new String[9];
      stringArray0[0] = ")RZVt^VZaz|A|&9Xg";
      stringArray0[1] = null;
      stringArray0[2] = "";
      stringArray0[3] = "HOLM";
      stringArray0[4] = "HOLM";
      stringArray0[5] = ")RZVt^VZaz|A|&9Xg";
      stringArray0[6] = "";
      stringArray0[7] = "HOLM";
      stringArray0[8] = null;
      DoubleMetaphone.contains("HOLM", 4, 4, stringArray0);
      doubleMetaphone0.encode((Object) ")RZVt^VZaz|A|&9Xg");
      doubleMetaphone_DoubleMetaphoneResult0.append("MdEmTdC'4w\"VD/~jv8", "");
      assertEquals("RYzC~ZKtZYuzk3a)RZVt^VZaz|A|&9XgHOLM7.", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone("j;h}s");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(878);
      char char0 = 'p';
      doubleMetaphone_DoubleMetaphoneResult0.append('p');
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("JS");
      doubleMetaphone_DoubleMetaphoneResult0.append("Y`w!/vYB[D4Q5", "JS");
      doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      doubleMetaphone_DoubleMetaphoneResult0.append("JS");
      doubleMetaphone0.doubleMetaphone("JS", true);
      doubleMetaphone0.encode("");
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.setMaxCodeLen(2404);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(248);
      doubleMetaphone0.setMaxCodeLen(248);
      doubleMetaphone0.isDoubleMetaphoneEqual("4:br sNV_dgif'LUa >", (String) null, false);
      doubleMetaphone0.doubleMetaphone("FY6-fe4e-X7C");
      doubleMetaphone_DoubleMetaphoneResult0.append("4:br sNV_dgif'LUa >", "4:br sNV_dgif'LUa >");
      doubleMetaphone_DoubleMetaphoneResult0.append("");
      doubleMetaphone0.doubleMetaphone("");
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("");
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "lzSbV6");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2430);
      String string0 = doubleMetaphone0.encode("");
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('U');
      doubleMetaphone_DoubleMetaphoneResult0.append("'{]86oIB_", "");
      doubleMetaphone_DoubleMetaphoneResult0.append("L");
      doubleMetaphone0.doubleMetaphone("");
      doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      String[] stringArray0 = new String[5];
      stringArray0[0] = null;
      stringArray0[1] = "";
      stringArray0[2] = null;
      stringArray0[3] = "";
      stringArray0[4] = "";
      DoubleMetaphone.contains("", 3280, 3280, stringArray0);
      doubleMetaphone_DoubleMetaphoneResult0.append("");
      doubleMetaphone0.isDoubleMetaphoneEqual("URUme,", (String) null);
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("");
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", string0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      String string0 = "";
      int int0 = 324;
      int int1 = (-3841);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "hmMZoz1+Eu`Q+^";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      // Undeclared exception!
      try { 
        DoubleMetaphone.contains("", 324, (-3841), stringArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "ORCHID";
      DoubleMetaphone.contains("ORCHID", 4, 4, stringArray0);
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode("ORCHID");
      doubleMetaphone0.setMaxCodeLen(1);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(4);
      doubleMetaphone_DoubleMetaphoneResult0.append('k');
      doubleMetaphone0.encode("");
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('b');
      try { 
        doubleMetaphone0.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "";
      doubleMetaphone0.isDoubleMetaphoneEqual("d|r>Qw}I?T^`\")", "", true);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2425);
      doubleMetaphone_DoubleMetaphoneResult0.append("");
      doubleMetaphone_DoubleMetaphoneResult0.append("", "#|A2d]4");
      doubleMetaphone_DoubleMetaphoneResult0.append('A', 'X');
      doubleMetaphone0.encode("");
      doubleMetaphone_DoubleMetaphoneResult0.append("");
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('X');
      String string1 = "EQ#~CRCK)%`5}";
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("EQ#~CRCK)%`5}");
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("#|A2d]4");
      doubleMetaphone0.encode((Object) "9-K|DsT,Jq/x@cq");
      doubleMetaphone_DoubleMetaphoneResult0.append('X');
      try { 
        doubleMetaphone0.encode((Object) doubleMetaphone_DoubleMetaphoneResult0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = doubleMetaphone0.doubleMetaphone("EOBWWA");
      assertEquals("AP", string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("");
      doubleMetaphone_DoubleMetaphoneResult0.append('a', 'a');
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode("%}pe+DE");
      doubleMetaphone0.charAt("onsf`eCH0&Sv0X", 2468);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2468);
      doubleMetaphone_DoubleMetaphoneResult0.append('H');
      doubleMetaphone_DoubleMetaphoneResult0.append('Q');
      assertEquals("HQ", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone((String) null);
      String string0 = "M";
      String string1 = "";
      doubleMetaphone0.isDoubleMetaphoneEqual("M", "", false);
      doubleMetaphone0.isDoubleMetaphoneEqual("GN", "GN", true);
      doubleMetaphone0.setMaxCodeLen(1);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(982);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('_');
      doubleMetaphone_DoubleMetaphoneResult0.append('_');
      doubleMetaphone0.doubleMetaphone("");
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.appendAlternate((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      int int0 = 78;
      doubleMetaphone0.setMaxCodeLen(78);
      doubleMetaphone0.isDoubleMetaphoneEqual("P62,4", "", false);
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult((-1));
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('=');
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.setMaxCodeLen(0);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.append("N1eV");
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("$E8");
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('U');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("7-FhW<vAd,C");
      doubleMetaphone_DoubleMetaphoneResult0.append("7-FhW<vAd,C");
      String[] stringArray0 = new String[2];
      doubleMetaphone_DoubleMetaphoneResult0.append('U', 'k');
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone_DoubleMetaphoneResult0.append("7-FhW<vAd,C");
      stringArray0[0] = "7-FhW<vAd,C";
      stringArray0[1] = "7-FhW<vAd,C";
      DoubleMetaphone.contains("7-FhW<vAd,C", 0, 0, stringArray0);
      doubleMetaphone_DoubleMetaphoneResult0.append("ut [Gn_E/]WMrg-");
      doubleMetaphone_DoubleMetaphoneResult0.append("org.apache.commons.codec.EncoderException", "org.apache.commons.codec.EncoderException");
      doubleMetaphone0.doubleMetaphone("", false);
      doubleMetaphone_DoubleMetaphoneResult0.append("7-FhW<vAd,C", "");
      // Undeclared exception!
      try { 
        doubleMetaphone0.charAt((String) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "org.apache.commons.codec.EncoderException");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary(';');
      doubleMetaphone_DoubleMetaphoneResult0.append('5');
      doubleMetaphone_DoubleMetaphoneResult0.append('8');
      doubleMetaphone_DoubleMetaphoneResult0.append("");
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('8');
      doubleMetaphone_DoubleMetaphoneResult0.append("", "yw|ZUM^,8'<DVG^8_-");
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('0');
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("?xy#'");
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('y');
      String[] stringArray0 = new String[0];
      DoubleMetaphone.contains("yw|ZUM^,8'<DVG^8_-", 166, 0, stringArray0);
      doubleMetaphone_DoubleMetaphoneResult0.append("", "");
      doubleMetaphone0.setMaxCodeLen(65);
      doubleMetaphone0.encode((Object) "yw|ZUM^,8'<DVG^8_-");
      doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertEquals(65, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone("jqRQMIHo@Vu(bkPM|");
      doubleMetaphone0.getMaxCodeLen();
      doubleMetaphone0.isDoubleMetaphoneEqual("-4av0o", "", true);
      doubleMetaphone0.isDoubleMetaphoneEqual("JKRK", "", false);
      doubleMetaphone0.encode((Object) "JKRK");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(4);
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('4');
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('P');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("JKRK");
      doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('P');
      String[] stringArray0 = new String[1];
      stringArray0[0] = null;
      // Undeclared exception!
      try { 
        DoubleMetaphone.contains((String) null, 600, 4, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = doubleMetaphone0.doubleMetaphone("jDE1m3|8sj>:g9:w");
      assertEquals("JTMS", string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(74);
      doubleMetaphone_DoubleMetaphoneResult0.append("E#cIN;VtX27'm2+");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(3293);
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('W');
      assertEquals("W", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.setMaxCodeLen(1);
      try { 
        doubleMetaphone0.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode((Object) " &m3c!@QT% ");
      Object object0 = doubleMetaphone0.encode((Object) "MKKT");
      assertEquals("MKT", object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "MKT");
      assertEquals("MKT", object1);
      
      String string0 = doubleMetaphone0.doubleMetaphone("Xb:ppPC+YZCTp%");
      assertEquals("SPPP", string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(176);
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode("'+E29.K`x?;#");
      doubleMetaphone0.doubleMetaphone("", false);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1226);
      doubleMetaphone0.getMaxCodeLen();
      String string0 = "";
      doubleMetaphone0.doubleMetaphone("", true);
      String string1 = "";
      int int0 = 3788;
      int int1 = (-1807);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = null;
      stringArray0[6] = null;
      String string2 = "K";
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone("");
      doubleMetaphone0.doubleMetaphone("f", false);
      doubleMetaphone0.setMaxCodeLen((-2010));
      doubleMetaphone0.encode((String) null);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = null;
      try {
        doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-280));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "#Aj$10");
      doubleMetaphone0.setMaxCodeLen(1556);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('\\');
      doubleMetaphone0.charAt("O!x[pc@A?2", 1);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("O!x[pc@A?2");
      doubleMetaphone0.doubleMetaphone("O!x[pc@A?2", true);
      doubleMetaphone_DoubleMetaphoneResult0.append("#Aj$10");
      doubleMetaphone_DoubleMetaphoneResult0.append('\\', '6');
      doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      doubleMetaphone0.encode((Object) "AKSPK");
      doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      doubleMetaphone0.setMaxCodeLen(1556);
      doubleMetaphone0.charAt("O!x[pc@A?2", 1);
      doubleMetaphone0.doubleMetaphone((String) null, true);
      doubleMetaphone0.encode("zgEZtWA1w?m'|m%7");
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone0.doubleMetaphone("TMhF$av=C;DY_JY@M");
      assertEquals(1556, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = doubleMetaphone0.doubleMetaphone("DS}mBg9", true);
      assertEquals("TSMP", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1837));
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone0.setMaxCodeLen((-1837));
      String string0 = "AU";
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("AU");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode((Object) "");
      doubleMetaphone0.isDoubleMetaphoneEqual("(mC(A>RP\u0001>xJ", "org.apache.commons.codec.EncoderException");
      doubleMetaphone0.doubleMetaphone("(mC(A>RP\u0001>xJ", true);
      doubleMetaphone0.isDoubleMetaphoneEqual("o4US'H,?$0C", "0Ga?fpqzfR,K");
      doubleMetaphone0.isDoubleMetaphoneEqual("o4US'H,?$0C", "ET");
      doubleMetaphone0.charAt("org.apache.commons.codec.EncoderException", 0);
      doubleMetaphone0.setMaxCodeLen(0);
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      doubleMetaphone1.setMaxCodeLen(377);
      doubleMetaphone1.setMaxCodeLen(0);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(0);
      doubleMetaphone1.encode("ARCHIT");
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('G');
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone1.encode("aKO4hT*X9vnY?FuH");
      doubleMetaphone0.encode("");
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      assertEquals(0, doubleMetaphone1.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.isDoubleMetaphoneEqual("A", "!$", false);
      doubleMetaphone0.doubleMetaphone("A");
      doubleMetaphone0.doubleMetaphone("A", false);
      doubleMetaphone0.setMaxCodeLen(0);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "A", false);
      doubleMetaphone_DoubleMetaphoneResult0.append('U');
      String[] stringArray0 = new String[9];
      stringArray0[0] = "A";
      stringArray0[1] = "x8[9=D='7WI2CcD";
      stringArray0[2] = "A";
      stringArray0[3] = "!$";
      stringArray0[4] = "A";
      stringArray0[5] = "!$";
      stringArray0[6] = "A";
      stringArray0[7] = " C";
      stringArray0[8] = "A";
      DoubleMetaphone.contains("!$", 3675, (-2902), stringArray0);
      doubleMetaphone_DoubleMetaphoneResult0.append("`wH'Fh]lc", "org.apache.commons.codec.EncoderException");
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "";
      String string1 = "jx+";
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "jx+", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = doubleMetaphone0.doubleMetaphone("l2{Om+yV/}X$H4Ha", true);
      assertEquals("LMFK", string0);
      
      doubleMetaphone0.setMaxCodeLen(0);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
  }
}
