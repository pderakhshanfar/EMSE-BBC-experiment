/*
 * This file was automatically generated by EvoSuite
 * Mon Mar 08 00:22:52 GMT 2021
 */

package org.apache.commons.codec.language;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.codec.language.DoubleMetaphone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DoubleMetaphone_ESTest extends DoubleMetaphone_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("G=LLCOS");
      assertNotNull(string0);
      assertEquals("KLKS", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("ghXW)qi<VcTdDnWgVD");
      assertNotNull(string0);
      assertEquals("KKSK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("SCh{H");
      assertNotNull(string0);
      assertEquals("X", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("mCcE=f-");
      assertNotNull(string0);
      assertEquals("MKSF", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual(" oK1", "9|%t$oK2FBe(g H");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("C GSds}_p\"h0DL");
      assertNotNull(string0);
      assertEquals("KSTS", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("GNCE");
      assertNotNull(string0);
      assertEquals("NS", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "PSCE");
      assertFalse(object0.equals((Object)string0));
      assertNotNull(object0);
      assertEquals("S", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode(",CH5yegh");
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)object0));
      assertNotNull(string1);
      assertEquals("X", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object1 = doubleMetaphone0.encode((Object) "PSCE");
      assertFalse(object1.equals((Object)string1));
      assertFalse(object1.equals((Object)string0));
      assertTrue(object1.equals((Object)object0));
      assertNotNull(object1);
      assertEquals("S", object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("MCHER");
      assertNotNull(string0);
      assertEquals("MKR", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[0];
      boolean boolean0 = DoubleMetaphone.contains("MKR", 1, 1, stringArray0);
      assertEquals(0, stringArray0.length);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("mCc=f-");
      assertNotNull(string0);
      assertEquals("MKF", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "mCc=f-";
      stringArray0[1] = "H<-Ib=$F*S";
      stringArray0[2] = "MKF";
      stringArray0[3] = "MKF";
      stringArray0[4] = "mCc=f-";
      boolean boolean0 = DoubleMetaphone.contains("mCc=f-", 2233, 1, stringArray0);
      assertEquals(5, stringArray0.length);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone1.doubleMetaphone(":CCH");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(string0);
      assertEquals("X", string0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("$y-)w*^tkUGH{+", "$y-)w*^tkUGH{+", true);
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("$y-)w*^tkUGH{+");
      assertNotNull(string0);
      assertEquals("TKF", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "$y-)w*^tkUGH{+");
      assertTrue(object0.equals((Object)string0));
      assertNotNull(object0);
      assertEquals("TKF", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("yDgeF0EY,D$E3");
      assertNotNull(string0);
      assertEquals("AJFT", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("jX");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("JKS", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "=JT|{e}^<^sAT{CHSn");
      assertNotNull(object0);
      assertEquals("TSTK", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object1 = doubleMetaphone0.encode((Object) "AM");
      assertFalse(object1.equals((Object)object0));
      assertNotNull(object1);
      assertEquals("AM", object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode(">lGE");
      assertFalse(string0.equals((Object)object0));
      assertFalse(string0.equals((Object)object1));
      assertNotNull(string0);
      assertEquals("LJ", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual(">lGE", "Y");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("'");
      assertFalse(string1.equals((Object)object0));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)object1));
      assertNotNull(string1);
      assertEquals("", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("$yw*^{;UGH{+");
      assertNotNull(string0);
      assertEquals("K", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("$yw*^{;UGH{+");
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("K", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(3);
      assertEquals(3, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("nqTs'\";>0'H-8g<R");
      assertNotNull(string0);
      assertEquals("NKT", string0);
      assertEquals(3, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(148);
      assertEquals(148, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("DigH");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("T", string1);
      assertEquals(148, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone1.doubleMetaphone("tNoIS");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(string0);
      assertEquals("TN", string0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("[/1", "PN");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("[/1", "[/1");
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", true);
      assertNotNull(string0);
      assertEquals("ARKP", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(3079);
      assertEquals(3079, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("[/1", true);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("", string1);
      assertEquals(3079, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("b@+_[GeT", false);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("PKT", string2);
      assertEquals(3079, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "ILLA");
      assertFalse(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string2));
      assertFalse(object0.equals((Object)string0));
      assertNotNull(object0);
      assertEquals("AL", object0);
      assertEquals(3079, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen((-447));
      assertEquals((-447), doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("", 401);
      assertEquals('\u0000', char0);
      assertEquals((-447), doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("", false);
      assertNull(string3);
      assertEquals((-447), doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("&hj+fllV:X~H>C9a");
      assertNotNull(string0);
      assertEquals("JFLF", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen((-832));
      assertEquals((-832), doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode((String) null);
      assertNull(string1);
      assertEquals((-832), doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual(".~kzza", "PSWM`L", true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "]H{\" aChyVc&W8");
      assertNotNull(object0);
      assertEquals("KFK", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("zk6 ");
      assertFalse(string0.equals((Object)object0));
      assertNotNull(string0);
      assertEquals("SK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("KN=R40|GLI5", true);
      assertNotNull(string0);
      assertEquals("NRKL", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "NRKL");
      assertTrue(object0.equals((Object)string0));
      assertNotNull(object0);
      assertEquals("NRKL", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object1 = doubleMetaphone0.encode((Object) "NRKL");
      assertTrue(object1.equals((Object)string0));
      assertTrue(object1.equals((Object)object0));
      assertNotNull(object1);
      assertEquals("NRKL", object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "NRKL";
      stringArray0[1] = "KN=R40|GLI5";
      boolean boolean0 = DoubleMetaphone.contains("%;yy7Pl)$C", (-16547010), (-1557), stringArray0);
      assertEquals(2, stringArray0.length);
      assertFalse(boolean0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("NRKL", true);
      assertTrue(string1.equals((Object)string0));
      assertTrue(string1.equals((Object)object1));
      assertTrue(string1.equals((Object)object0));
      assertNotNull(string1);
      assertEquals("NRKL", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("7YycsMr*");
      assertNotNull(string0);
      assertEquals("KSMR", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("=r40gLI5", false);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("RKL", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("CH");
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("K", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("NiJOE");
      assertNotNull(string0);
      assertEquals("NJ", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("NJ", false);
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("NJ", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "org.apache.commons.codec.EncoderException";
      String string1 = doubleMetaphone0.encode("RK");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("RK", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = true;
      String string2 = doubleMetaphone0.doubleMetaphone("RK", true);
      assertFalse(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("RK", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("LP!Oja ,f.Z~.p)nD", "org.apache.commons.codec.EncoderException", true);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("2OgH");
      assertNotNull(string0);
      assertEquals("K", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone1.doubleMetaphone("2");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(string0);
      assertEquals("", string0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("KNJOSE", false);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("NJS", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("zdEu2W@/mn0gs]l^-[");
      assertNotNull(string0);
      assertEquals("STMN", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[5];
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("zdEu2W@/mn0gs]l^-[", "PNWICZ");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      stringArray0[0] = "";
      stringArray0[1] = "STMN";
      stringArray0[2] = "TEw]aJxaC3LN_u";
      stringArray0[3] = "STMN";
      stringArray0[4] = "zdEu2W@/mn0gs]l^-[";
      boolean boolean1 = DoubleMetaphone.contains("zdEu2W@/mn0gs]l^-[", (-1622), (-1622), stringArray0);
      assertTrue(boolean1 == boolean0);
      assertEquals(5, stringArray0.length);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("0=k}ijighRGAhi");
      assertNotNull(string0);
      assertEquals("KJRK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("KNWRCHAE");
      assertNotNull(string0);
      assertEquals("NRK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("3{0gLQ/=#,O", "3{0gLQ/=#,O");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("UGn\"");
      assertNotNull(string0);
      assertEquals("AKN", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("3{0gLQ/=#,O", 294);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("WRCHAE");
      assertNotNull(string0);
      assertEquals("RK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("HYM", "HYM");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      Object object0 = doubleMetaphone1.encode((Object) "HYM");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(object0.equals((Object)string0));
      assertNotNull(object0);
      assertEquals("HM", object0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "WRCHAE";
      stringArray0[1] = "RK";
      stringArray0[2] = "HYM";
      stringArray0[3] = "RK";
      stringArray0[4] = "HYM";
      stringArray0[5] = "WRCHAE";
      stringArray0[6] = "WRCHAE";
      stringArray0[7] = "S";
      stringArray0[8] = "HYM";
      boolean boolean1 = DoubleMetaphone.contains("HYM", 72, 72, stringArray0);
      assertFalse(boolean1 == boolean0);
      assertEquals(9, stringArray0.length);
      assertFalse(boolean1);
      
      boolean boolean2 = DoubleMetaphone.contains("PN", 72, 70, stringArray0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertEquals(9, stringArray0.length);
      assertFalse(boolean2);
      
      boolean boolean3 = DoubleMetaphone.contains("WRCHAE", 2208, 70, stringArray0);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3 == boolean0);
      assertEquals(9, stringArray0.length);
      assertFalse(boolean3);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("KNZ/#$11$");
      assertNotNull(string0);
      assertEquals("NS", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('&');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("&", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("&", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("Z", "Z", false);
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("U?^j^mHp!rY)q0XC>", "egn_ak}Bl'w");
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) ">#Uy+?Q%)mEH");
      assertNotNull(object0);
      assertEquals("KM", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object1 = doubleMetaphone0.encode((Object) "KM");
      assertTrue(object1.equals((Object)object0));
      assertNotNull(object1);
      assertEquals("KM", object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("egn_ak}Bl'w", 71);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("BBA|:", false);
      assertNotNull(string0);
      assertEquals("P", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("WROGH");
      assertNotNull(string0);
      assertEquals("RK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("OgH");
      assertNotNull(string0);
      assertEquals("AK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "CHOR";
      String string1 = "T9FlL7!k";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("CHOR", "T9FlL7!k");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("HM,`8@N62^A7g");
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("MNK", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = "?";
      Object object0 = doubleMetaphone0.encode((Object) "?");
      assertFalse(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string3));
      assertFalse(object0.equals((Object)string2));
      assertNotNull(object0);
      assertEquals("", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string4 = "org.apache.commons.codec.EncoderException";
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "MNK");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("?", "?");
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = 13;
      // Undeclared exception!
      try { 
        doubleMetaphone0.charAt((String) null, 13);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "v^,}zY%P!yGhx%q");
      assertNotNull(object0);
      assertEquals("FSPK", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("CHORE", "CHORE");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      String string0 = "GIER";
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(1583);
      assertEquals(1583, doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "GIER");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("CCE");
      assertNotNull(string0);
      assertEquals("X", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("`GNMA9HE");
      assertNotNull(string0);
      assertEquals("NM", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("KNACH", true);
      assertNotNull(string0);
      assertEquals("NK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "NK";
      stringArray0[1] = "NK";
      stringArray0[2] = "NK";
      boolean boolean0 = DoubleMetaphone.contains("n%", 76, 75, stringArray0);
      assertEquals(3, stringArray0.length);
      assertFalse(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(74);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("GNCE");
      assertNotNull(string0);
      assertEquals("NS", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "PSCE");
      assertFalse(object0.equals((Object)string0));
      assertNotNull(object0);
      assertEquals("S", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode(",CHyegh");
      assertFalse(string1.equals((Object)object0));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("X", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object1 = doubleMetaphone0.encode((Object) "PSCE");
      assertFalse(object1.equals((Object)string1));
      assertTrue(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string0));
      assertNotNull(object1);
      assertEquals("S", object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("GNW");
      assertNotNull(string0);
      assertEquals("N", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("IER", false);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("A", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "N";
      stringArray0[1] = "RZ[h}'G";
      boolean boolean0 = DoubleMetaphone.contains("~H'\"<|", 1, 1, stringArray0);
      assertEquals(2, stringArray0.length);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "JPLV";
      String string1 = doubleMetaphone0.encode("JPLV");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("JPLF", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone1.isDoubleMetaphoneEqual("", "ll");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone1.doubleMetaphone("SUGAR");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(string0);
      assertEquals("XKR", string0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen((-994));
      assertEquals((-994), doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone1.doubleMetaphone("XNn?", true);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(string0);
      assertEquals("SN", string0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      Object object0 = doubleMetaphone1.encode((Object) "xUMB");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(object0.equals((Object)string0));
      assertNotNull(object0);
      assertEquals("SM", object0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string1 = doubleMetaphone1.encode("xUMB");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(string1.equals((Object)object0));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("SM", string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("HLLE");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotNull(string0);
      assertEquals("L", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("PS", "CAESAR", true);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone1.encode("PS");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(string0);
      assertEquals("S", string0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(89);
      assertEquals(89, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("lkm z*4LL;1");
      assertNotNull(string0);
      assertEquals("LKMSL", string0);
      assertEquals(89, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("LKMSL");
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("LKMSL", string1);
      assertEquals(89, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode((String) null);
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "RGY");
      assertNotNull(object0);
      assertEquals("RJ", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("PS,CHYEGH", "X");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        DoubleMetaphone.contains("R", 199, (-3471), stringArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone2.isDoubleMetaphoneEqual("#^3B+-o9@fB", "");
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone2.isDoubleMetaphoneEqual(",CHyegh", "", false);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      char char0 = doubleMetaphone2.charAt("#^3B+-o9@fB", 0);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals('#', char0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "WRUOVF]B]LEL} O");
      assertNotNull(object0);
      assertEquals("RFFP", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object1 = doubleMetaphone0.encode((Object) "RFFP");
      assertFalse(object1.equals((Object)object0));
      assertNotNull(object1);
      assertEquals("RFP", object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("PSHOLM");
      assertFalse(string0.equals((Object)object0));
      assertFalse(string0.equals((Object)object1));
      assertNotNull(string0);
      assertEquals("SLM", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("{(p\"ZY@7GnhR7o~[");
      assertNotNull(string0);
      assertEquals("PSNR", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("}% ).", true);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("{(p\"ZY@7GnhR7o~[", 2165);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", true);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("ARKP", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("KNGH");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotNull(string0);
      assertEquals("NK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone1.setMaxCodeLen((-1996));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals((-1996), doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone1.encode("NK");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("NE0", "KNSIO");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("WY9~0ze");
      assertNotNull(string0);
      assertEquals("AS", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "RGY");
      assertNotNull(object0);
      assertEquals("RJ", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("h[;<+)G  8`G>qQ_%0A", false);
      assertFalse(string0.equals((Object)object0));
      assertNotNull(string0);
      assertEquals("KKK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("KNGH");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotNull(string0);
      assertEquals("NK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      doubleMetaphone2.setMaxCodeLen((-1996));
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals((-1996), doubleMetaphone2.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      String string1 = doubleMetaphone3.encode("KNGH");
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("NK", string1);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("DG", true);
      assertNotNull(string0);
      assertEquals("TK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("TK", "CHORE");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string1 = doubleMetaphone2.encode("TK");
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("TK", string1);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("h%x", "ED:k_^]}p}HoH");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("IQq+zJ4L\"%.`*w3nD&", (String) null, true);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("h%x");
      assertNotNull(string0);
      assertEquals("KS", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("KS");
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("KS", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "%-egyTd'c";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("%-egyTd'c", "EB", true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode((String) null);
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = 209;
      // Undeclared exception!
      try { 
        doubleMetaphone0.charAt((String) null, 209);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult((-457));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      char char0 = doubleMetaphone1.charAt("3S<", 0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals('3', char0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      char char1 = doubleMetaphone0.charAt("org.apache.commons.codec.EncoderException", (-457));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(char1 == char0);
      assertEquals('\u0000', char1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("{ZdOf{V)");
      assertNotNull(string0);
      assertEquals("STFF", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-17));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("#[JUJSR", "{ZdOf{V)", true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("sJ\n.Mmg?@pI", "#[JUJSR");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(2317);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      String string1 = doubleMetaphone0.doubleMetaphone("sJ\n.Mmg?@pI");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("SMKP", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("DG", true);
      assertNotNull(string0);
      assertEquals("TK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("!]0gn$KHU-}#Ht#|", "TK");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      doubleMetaphone2.setMaxCodeLen(3402);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(3402, doubleMetaphone2.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("DG");
      assertNotSame(doubleMetaphone0, doubleMetaphone3);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("TK", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone4 = new DoubleMetaphone();
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone4);
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      
      String string2 = doubleMetaphone2.doubleMetaphone("CC");
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone3);
      assertNotSame(doubleMetaphone2, doubleMetaphone4);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("K", string2);
      assertEquals(3402, doubleMetaphone2.getMaxCodeLen());
      
      String string3 = doubleMetaphone2.doubleMetaphone("K", true);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone3);
      assertNotSame(doubleMetaphone2, doubleMetaphone4);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertTrue(string3.equals((Object)string2));
      assertNotNull(string3);
      assertEquals("K", string3);
      assertEquals(3402, doubleMetaphone2.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("*h!9^~BvTY3uuc7o4");
      assertNotNull(string0);
      assertEquals("PFTK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("|3dW*h$(g/(Pe/'>O", "", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("DG", false);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("TK", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.encode("<^Kp07]ew");
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("KP", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("SC", "SC");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "WS", false);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("");
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone1.isDoubleMetaphoneEqual("CG", (String) null, true);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("{ZdOf{v)");
      assertNotNull(string0);
      assertEquals("STFF", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-17));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("STFF", "{ZdOf{v)", true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string1 = doubleMetaphone1.doubleMetaphone("{ZdOf{v)");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("STFF", string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string2 = doubleMetaphone1.encode("{ZdOf{v)");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(string2.equals((Object)string1));
      assertTrue(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("STFF", string2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string3 = doubleMetaphone2.doubleMetaphone("PSALLE", true);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertNotNull(string3);
      assertEquals("S", string3);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string4 = doubleMetaphone0.doubleMetaphone("STFF");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertNotNull(string4);
      assertEquals("STF", string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("DG", true);
      assertNotNull(string0);
      assertEquals("TK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("ALLE", "");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      doubleMetaphone1.setMaxCodeLen(1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(1, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      try { 
        doubleMetaphone1.encode((Object) doubleMetaphone2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("SC{H", "sPP~;$G3<KG-C");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone1.encode("sPP~;$G3<KG-C");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(string0);
      assertEquals("SPKK", string0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("B", "SC{H");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("sPP~;$G3<KG-C", "02Vl2");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string1 = doubleMetaphone0.doubleMetaphone("UMB", false);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("AM", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      String string0 = doubleMetaphone2.doubleMetaphone("KN");
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone3);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(string0);
      assertEquals("N", string0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone4 = new DoubleMetaphone();
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertNotNull(doubleMetaphone4);
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone5 = new DoubleMetaphone();
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone4));
      assertNotNull(doubleMetaphone5);
      assertEquals(4, doubleMetaphone5.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "gy>%PwYgMBu");
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone3);
      assertNotSame(doubleMetaphone0, doubleMetaphone4);
      assertNotSame(doubleMetaphone0, doubleMetaphone5);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone5));
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone5.doubleMetaphone("SIO");
      assertNotSame(doubleMetaphone5, doubleMetaphone0);
      assertNotSame(doubleMetaphone5, doubleMetaphone3);
      assertNotSame(doubleMetaphone5, doubleMetaphone2);
      assertNotSame(doubleMetaphone5, doubleMetaphone1);
      assertNotSame(doubleMetaphone5, doubleMetaphone4);
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone4));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("S", string1);
      assertEquals(4, doubleMetaphone5.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "N&Frme}4&hOil!:x@");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotNull(object0);
      assertEquals("NFRM", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object1 = doubleMetaphone0.encode((Object) "N&Frme}4&hOil!:x@");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(object1.equals((Object)object0));
      assertNotNull(object1);
      assertEquals("NFRM", object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object2 = doubleMetaphone1.encode((Object) "NFRM");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(object2.equals((Object)object0));
      assertTrue(object2.equals((Object)object1));
      assertNotNull(object2);
      assertEquals("NFRM", object2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string1 = doubleMetaphone1.doubleMetaphone("zke3gTA3ocBm3KX,q^");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)object0));
      assertFalse(string1.equals((Object)object2));
      assertFalse(string1.equals((Object)object1));
      assertNotNull(string1);
      assertEquals("SKKT", string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      Object object3 = doubleMetaphone1.encode((Object) "NFRM");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(object3.equals((Object)object1));
      assertTrue(object3.equals((Object)object2));
      assertFalse(object3.equals((Object)string1));
      assertTrue(object3.equals((Object)object0));
      assertNotNull(object3);
      assertEquals("NFRM", object3);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "HOH~Z";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("lrUD%", "HOH~Z");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("1_(`!,<-e8Oe!]}&", "KN/V6R'J8DRZ", true);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("/v6r'j8dRz", (String) null, false);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      doubleMetaphone1.setMaxCodeLen((-1320));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals((-1320), doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone1.isDoubleMetaphoneEqual("/v6r'j8dRz", "MPzl@Bvv");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("HOH~Z", "HOH~Z");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("/v6r'j8dRz", "/v6r'j8dRz", true);
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("HOH~Z", "GGI", true);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      doubleMetaphone1.setMaxCodeLen(66);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(66, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      boolean boolean3 = doubleMetaphone1.isDoubleMetaphoneEqual("SIO", "KN/V6R'J8DRZ");
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean3 == boolean0);
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3);
      assertEquals(66, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("/v6r'j8dRz");
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotNull(string0);
      assertEquals("FRJT", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("DG", true);
      assertNotNull(string0);
      assertEquals("TK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen((-2233));
      assertEquals((-2233), doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("CZ", "V<-^YrEJCV>|\"H3", true);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string1 = doubleMetaphone2.doubleMetaphone("CZ", false);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("S", string1);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertEquals((-2233), int0);
      assertEquals((-2233), doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("Xf:XF");
      assertNotNull(string0);
      assertEquals("SFKS", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("Xf:XF", "Xf:XF", false);
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("K", true);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("K", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string2 = doubleMetaphone1.doubleMetaphone("|vV*%e!XV+P", false);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("FKSF", string2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      String string3 = doubleMetaphone3.doubleMetaphone("Xf:XF");
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(string3.equals((Object)string1));
      assertTrue(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertNotNull(string3);
      assertEquals("SFKS", string3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone4 = new DoubleMetaphone();
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertNotNull(doubleMetaphone4);
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      
      String string4 = doubleMetaphone4.doubleMetaphone("'");
      assertNotSame(doubleMetaphone4, doubleMetaphone0);
      assertNotSame(doubleMetaphone4, doubleMetaphone2);
      assertNotSame(doubleMetaphone4, doubleMetaphone1);
      assertNotSame(doubleMetaphone4, doubleMetaphone3);
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertNotNull(string4);
      assertEquals("", string4);
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone5 = new DoubleMetaphone();
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone3));
      assertNotNull(doubleMetaphone5);
      assertEquals(4, doubleMetaphone5.getMaxCodeLen());
      
      try { 
        doubleMetaphone3.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("/v6r'j8dRz", "JOSE");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("5FGIYU 5zz?", "K9/\"1_(>Lq", false);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("JOSE", false);
      assertNotNull(string0);
      assertEquals("HS", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("ARKP", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      String string2 = doubleMetaphone3.encode("JOSE");
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertTrue(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("HS", string2);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      String string3 = doubleMetaphone2.doubleMetaphone("org.apache.commons.codec.EncoderException");
      assertNotSame(doubleMetaphone2, doubleMetaphone3);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertTrue(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertNotNull(string3);
      assertEquals("ARKP", string3);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone4 = new DoubleMetaphone();
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone4);
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone5 = new DoubleMetaphone();
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone5);
      assertEquals(4, doubleMetaphone5.getMaxCodeLen());
      
      Object object0 = doubleMetaphone2.encode((Object) "ARKP");
      assertNotSame(doubleMetaphone2, doubleMetaphone3);
      assertNotSame(doubleMetaphone2, doubleMetaphone5);
      assertNotSame(doubleMetaphone2, doubleMetaphone4);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone5));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertTrue(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string2));
      assertTrue(object0.equals((Object)string3));
      assertNotNull(object0);
      assertEquals("ARKP", object0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone5.new DoubleMetaphoneResult(1863);
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone5.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string4 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertNotSame(doubleMetaphone5, doubleMetaphone3);
      assertNotSame(doubleMetaphone5, doubleMetaphone4);
      assertNotSame(doubleMetaphone5, doubleMetaphone2);
      assertNotSame(doubleMetaphone5, doubleMetaphone0);
      assertNotSame(doubleMetaphone5, doubleMetaphone1);
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone1));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)object0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertNotNull(string4);
      assertEquals("", string4);
      assertEquals(4, doubleMetaphone5.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("*oMQ+5p`2o:", "TH");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("/v6r'j8dRz", "TH");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone3.isDoubleMetaphoneEqual("AGGI", "*oMQ+5p`2o:");
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone4 = new DoubleMetaphone();
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone4);
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      
      String string0 = doubleMetaphone1.doubleMetaphone("/v6r'j8dRz", false);
      assertNotSame(doubleMetaphone1, doubleMetaphone4);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone3);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone3));
      assertNotNull(string0);
      assertEquals("FRJT", string0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "TH";
      stringArray0[1] = "FRJT";
      stringArray0[2] = "TH";
      stringArray0[3] = "/v6r'j8dRz";
      boolean boolean3 = DoubleMetaphone.contains("/v6r'j8dRz", (-3669), (-3669), stringArray0);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertEquals(4, stringArray0.length);
      assertFalse(boolean3);
      
      String string1 = doubleMetaphone4.doubleMetaphone("%Bq6iE$EcHrw3^Q", false);
      assertNotSame(doubleMetaphone4, doubleMetaphone2);
      assertNotSame(doubleMetaphone4, doubleMetaphone0);
      assertNotSame(doubleMetaphone4, doubleMetaphone3);
      assertNotSame(doubleMetaphone4, doubleMetaphone1);
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("PKKR", string1);
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("WICZ", "org.apache.commons.codec.EncoderException");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("DG", true);
      assertNotNull(string0);
      assertEquals("TK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen((-2233));
      assertEquals((-2233), doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.doubleMetaphone("TK", false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("/v6r'j8dRz", "JOSE");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = false;
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "XUkb^1@0,N1FKQ", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("PNXF:XF");
      assertNotNull(string0);
      assertEquals("NKSF", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("\"hA|Qj~l{X!(S");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("KJLK", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("njJR.|}`g9XnRh&D'");
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("NJRK", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(3664);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(3664, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone2.encode((Object) "KJLK");
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone3);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(object1.equals((Object)string2));
      assertFalse(object1.equals((Object)string1));
      assertFalse(object1.equals((Object)string0));
      assertNotNull(object1);
      assertEquals("KLK", object1);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("S");
      assertNotNull(string0);
      assertEquals("S", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("S");
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("S", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("^scHT", "xF2[tFl-_MmP");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("CG");
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("K", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      Object object0 = doubleMetaphone1.encode((Object) "CG");
      assertNotSame(doubleMetaphone1, doubleMetaphone3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(object0.equals((Object)string0));
      assertTrue(object0.equals((Object)string2));
      assertFalse(object0.equals((Object)string1));
      assertNotNull(object0);
      assertEquals("K", object0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("c]tR/");
      assertNotNull(string0);
      assertEquals("KTR", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("SCH");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("X", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = "Jfkuqt`jzely";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("HEM", "X");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("HEM", true);
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertNotNull(string3);
      assertEquals("HM", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string4 = doubleMetaphone1.doubleMetaphone("MACHER");
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      assertNotNull(string4);
      assertEquals("MKR", string4);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      doubleMetaphone2.setMaxCodeLen(9);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(9, doubleMetaphone2.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      try { 
        doubleMetaphone3.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "SH";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("SH", "/v6r'j8dRz");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("N&Frme}4&hOil!:x@", "N&Frme}4&hOil!:x@", false);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(199);
      assertEquals(199, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("N&Frme}4&hOil!:x@", "TCH");
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(199, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      try { 
        doubleMetaphone2.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("g,*7iW|nd(");
      assertNotNull(string0);
      assertEquals("KNT", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("jWZ[s_{qf<D&", "KNT", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone(")AO", false);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string2 = doubleMetaphone1.doubleMetaphone(")AO", true);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("", string2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(80);
      assertNotSame(doubleMetaphone0, doubleMetaphone3);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertEquals(80, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone3.doubleMetaphone((String) null);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertNull(string3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone4 = new DoubleMetaphone();
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertNotNull(doubleMetaphone4);
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone5 = new DoubleMetaphone();
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone2));
      assertNotNull(doubleMetaphone5);
      assertEquals(4, doubleMetaphone5.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("T", "KNT", false);
      assertNotSame(doubleMetaphone0, doubleMetaphone3);
      assertNotSame(doubleMetaphone0, doubleMetaphone5);
      assertNotSame(doubleMetaphone0, doubleMetaphone4);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone5));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(80, doubleMetaphone0.getMaxCodeLen());
      
      String string4 = doubleMetaphone0.doubleMetaphone("75ArRBB;z0W`*msr");
      assertNotSame(doubleMetaphone0, doubleMetaphone3);
      assertNotSame(doubleMetaphone0, doubleMetaphone5);
      assertNotSame(doubleMetaphone0, doubleMetaphone4);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone5));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertNotNull(string4);
      assertEquals("RPSMSR", string4);
      assertEquals(80, doubleMetaphone0.getMaxCodeLen());
      
      try { 
        doubleMetaphone4.encode((Object) doubleMetaphone0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("g,*7iW|nd(");
      assertNotNull(string0);
      assertEquals("KNT", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("jWZ[s_{qf<D&", "KNT", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone(")AO", false);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(1109);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(1109, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("gH", "0\"/;-\"!]L RL}jqr`", false);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      String string2 = doubleMetaphone3.doubleMetaphone("PSIB");
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("SP", string2);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("DG");
      assertNotNull(string0);
      assertEquals("TK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("DG", true);
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("TK", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen((-2233));
      assertEquals((-2233), doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("DG", "D8:^4Vzq\"JHP");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("CZ", "V<-^YrEJCV>|\"H3", true);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string2 = "HOLM";
      // Undeclared exception!
      try { 
        doubleMetaphone0.encode((Object) "V<-^YrEJCV>|\"H3");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      doubleMetaphone1.setMaxCodeLen(4);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      String string0 = doubleMetaphone2.doubleMetaphone("ORCHES", true);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(string0);
      assertEquals("ARKS", string0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      Object object1 = doubleMetaphone2.encode((Object) "HOLM");
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(object1.equals((Object)string0));
      assertNotNull(object1);
      assertEquals("HLM", object1);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string1 = doubleMetaphone2.doubleMetaphone("org.apache.commons.codec.EncoderException");
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)object1));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("ARKP", string1);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("NE0");
      assertNotNull(string0);
      assertEquals("N", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("GAo<", true);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("K", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("K");
      assertFalse(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("K", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.encode("wQ[n");
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertNotNull(string3);
      assertEquals("KN", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-457));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string4 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertNotNull(string4);
      assertEquals("", string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string5 = doubleMetaphone0.doubleMetaphone("I01_fO?gPh4:v{28", true);
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string4));
      assertNotNull(string5);
      assertEquals("AFKF", string5);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("Xf:XF");
      assertNotNull(string0);
      assertEquals("SFKS", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("Xf:XF");
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("SFKS", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = "Jfkuqt`jzely";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("Xf:XF", "Jfkuqt`jzely");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("UMB", true);
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertNotNull(string3);
      assertEquals("AM", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string4 = doubleMetaphone1.doubleMetaphone("j.b:PaEZy");
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertNotNull(string4);
      assertEquals("JPPS", string4);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      try { 
        doubleMetaphone0.encode((Object) doubleMetaphone1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("DG", true);
      assertNotNull(string0);
      assertEquals("TK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen((-2233));
      assertEquals((-2233), doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("CZ", "V<-^YrEJCV>|\"H3", true);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string1 = doubleMetaphone1.doubleMetaphone("KN!O,JMC,'NYA");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("NMKN", string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("g,*7iW|nd(");
      assertNotNull(string0);
      assertEquals("KNT", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("jWZ[s_{qf<D&", "KNT", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("eV%93QEUMFG}k[MEF|", ")AO");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("iJYH!~=-2wbI", "iJYH!~=-2wbI", false);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(7);
      assertEquals(7, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean3 = doubleMetaphone1.isDoubleMetaphoneEqual("OX", "iJYH!~=-2wbI", true);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string1 = doubleMetaphone2.doubleMetaphone("OX");
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("AKS", string1);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("g,*7iW|nd(", "g,*7iW|nd(", true);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string1 = doubleMetaphone2.doubleMetaphone("9e2%\"?{ib?o,u", false);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(string1);
      assertEquals("P", string1);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      String string2 = doubleMetaphone1.doubleMetaphone("g,*7iW|nd(", true);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone3);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("KNT", string2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone4 = new DoubleMetaphone();
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertNotNull(doubleMetaphone4);
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone5 = new DoubleMetaphone();
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone5);
      assertEquals(4, doubleMetaphone5.getMaxCodeLen());
      
      String string3 = null;
      String string4 = doubleMetaphone1.doubleMetaphone("PNUCCEE");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone5);
      assertNotSame(doubleMetaphone1, doubleMetaphone3);
      assertNotSame(doubleMetaphone1, doubleMetaphone4);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone5));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertNotNull(string4);
      assertEquals("NKS", string4);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone6 = new DoubleMetaphone();
      assertFalse(doubleMetaphone6.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone6.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone6.equals((Object)doubleMetaphone5));
      assertFalse(doubleMetaphone6.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone6.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone6.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone6);
      assertEquals(4, doubleMetaphone6.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone7 = new DoubleMetaphone();
      assertFalse(doubleMetaphone7.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone7.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone7.equals((Object)doubleMetaphone6));
      assertFalse(doubleMetaphone7.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone7.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone7.equals((Object)doubleMetaphone5));
      assertFalse(doubleMetaphone7.equals((Object)doubleMetaphone2));
      assertNotNull(doubleMetaphone7);
      assertEquals(4, doubleMetaphone7.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone7.isDoubleMetaphoneEqual("", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("SF ");
      assertNotNull(string0);
      assertEquals("SF", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("SF ", true);
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("SF", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("SF ");
      assertTrue(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("SF", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("SF", "SF ");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("SF", false);
      assertTrue(string3.equals((Object)string0));
      assertTrue(string3.equals((Object)string2));
      assertTrue(string3.equals((Object)string1));
      assertNotNull(string3);
      assertEquals("SF", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string4 = doubleMetaphone1.doubleMetaphone("j.b:PaEZy");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertNotNull(string4);
      assertEquals("JPPS", string4);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone4 = new DoubleMetaphone();
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertNotNull(doubleMetaphone4);
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone4.isDoubleMetaphoneEqual("WH", "aG6BR", true);
      assertNotSame(doubleMetaphone4, doubleMetaphone1);
      assertNotSame(doubleMetaphone4, doubleMetaphone2);
      assertNotSame(doubleMetaphone4, doubleMetaphone0);
      assertNotSame(doubleMetaphone4, doubleMetaphone3);
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone5 = new DoubleMetaphone();
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone3));
      assertNotNull(doubleMetaphone5);
      assertEquals(4, doubleMetaphone5.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone6 = new DoubleMetaphone();
      assertFalse(doubleMetaphone6.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone6.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone6.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone6.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone6.equals((Object)doubleMetaphone5));
      assertFalse(doubleMetaphone6.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone6);
      assertEquals(4, doubleMetaphone6.getMaxCodeLen());
      
      String string5 = doubleMetaphone6.doubleMetaphone("SF ");
      assertNotSame(doubleMetaphone6, doubleMetaphone4);
      assertNotSame(doubleMetaphone6, doubleMetaphone3);
      assertNotSame(doubleMetaphone6, doubleMetaphone0);
      assertNotSame(doubleMetaphone6, doubleMetaphone2);
      assertNotSame(doubleMetaphone6, doubleMetaphone5);
      assertNotSame(doubleMetaphone6, doubleMetaphone1);
      assertFalse(doubleMetaphone6.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone6.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone6.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone6.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone6.equals((Object)doubleMetaphone5));
      assertFalse(doubleMetaphone6.equals((Object)doubleMetaphone1));
      assertTrue(string5.equals((Object)string2));
      assertTrue(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string4));
      assertTrue(string5.equals((Object)string0));
      assertTrue(string5.equals((Object)string1));
      assertNotNull(string5);
      assertEquals("SF", string5);
      assertEquals(4, doubleMetaphone6.getMaxCodeLen());
      
      char char0 = doubleMetaphone1.charAt("SF ", 85);
      assertNotSame(doubleMetaphone1, doubleMetaphone4);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone3);
      assertNotSame(doubleMetaphone1, doubleMetaphone5);
      assertNotSame(doubleMetaphone1, doubleMetaphone6);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone5));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone6));
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      Object object0 = doubleMetaphone4.encode((Object) "SF");
      assertNotSame(doubleMetaphone4, doubleMetaphone1);
      assertNotSame(doubleMetaphone4, doubleMetaphone2);
      assertNotSame(doubleMetaphone4, doubleMetaphone5);
      assertNotSame(doubleMetaphone4, doubleMetaphone0);
      assertNotSame(doubleMetaphone4, doubleMetaphone6);
      assertNotSame(doubleMetaphone4, doubleMetaphone3);
      assertTrue(object0.equals((Object)string3));
      assertTrue(object0.equals((Object)string2));
      assertTrue(object0.equals((Object)string0));
      assertTrue(object0.equals((Object)string5));
      assertTrue(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string4));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone5));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone6));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertNotNull(object0);
      assertEquals("SF", object0);
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone5.new DoubleMetaphoneResult(4);
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone6));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone3));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals(4, doubleMetaphone5.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertNotSame(doubleMetaphone5, doubleMetaphone4);
      assertNotSame(doubleMetaphone5, doubleMetaphone1);
      assertNotSame(doubleMetaphone5, doubleMetaphone2);
      assertNotSame(doubleMetaphone5, doubleMetaphone0);
      assertNotSame(doubleMetaphone5, doubleMetaphone6);
      assertNotSame(doubleMetaphone5, doubleMetaphone3);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone6));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone3));
      assertFalse(boolean2);
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals(4, doubleMetaphone5.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("d0nNs");
      assertNotNull(string0);
      assertEquals("TNS", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "TNS");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(object0.equals((Object)string0));
      assertNotNull(object0);
      assertEquals("TNS", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object1 = doubleMetaphone1.encode((Object) "RGY");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(object1.equals((Object)string0));
      assertFalse(object1.equals((Object)object0));
      assertNotNull(object1);
      assertEquals("RJ", object1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      char char0 = doubleMetaphone1.charAt("", 0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("RA2/M$4AQ;YMe~#[.");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("Xf:XF");
      assertNotNull(string0);
      assertEquals("SFKS", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("UCCEE", "org.apache.commons.codec.EncoderException");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = "N&Frme}4&hOil!:x@";
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, (String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("PN");
      assertNotNull(string0);
      assertEquals("N", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("", true);
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("PN", true);
      assertTrue(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("N", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "N", true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("'Gu+Obzx", "T<m8E", false);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone1.setMaxCodeLen(1752);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertEquals(1752, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      try { 
        doubleMetaphone0.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("*~Gk7Utb`", true);
      assertNotNull(string0);
      assertEquals("KKTP", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("<-,C34wv{w", "d`I)T`2VgjEw?", true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = 86;
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string1 = "";
      // Undeclared exception!
      try { 
        doubleMetaphone2.isDoubleMetaphoneEqual("", "CHIA", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "XfF";
      String string1 = doubleMetaphone0.encode("XfF");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("SF", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "XfF", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string2 = doubleMetaphone1.doubleMetaphone("~09c1muW\"CQo`,u-gu", false);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("KMKK", string2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("~09c1muW\"CQo`,u-gu");
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone3);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone3));
      assertTrue(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertNotNull(string3);
      assertEquals("KMKK", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone4 = new DoubleMetaphone();
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone4);
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone2.isDoubleMetaphoneEqual("", "GN");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("RGY");
      assertNotNull(string0);
      assertEquals("RJ", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string1 = "-";
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("-", "%", false);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone2.isDoubleMetaphoneEqual("?v;BES", "TTH");
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone1.isDoubleMetaphoneEqual("", "ACH");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("DG", true);
      assertNotNull(string0);
      assertEquals("TK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("*h!9^~BvTY3uuc7o4");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("PFTK", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.encode("*h!9^~BvTY3uuc7o4");
      assertTrue(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("PFTK", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("DD", "*h!9^~BvTY3uuc7o4");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("DD", "*h!9^~BvTY3uuc7o4", false);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "PFTK");
      assertFalse(object0.equals((Object)string0));
      assertTrue(object0.equals((Object)string1));
      assertTrue(object0.equals((Object)string2));
      assertNotNull(object0);
      assertEquals("PFTK", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("Y:591o#Y,g9hywBv(+", "Y:591o#Y,g9hywBv(+");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("PN");
      assertNotNull(string0);
      assertEquals("N", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = "";
      String string2 = doubleMetaphone0.doubleMetaphone("", true);
      assertNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("PN", true);
      assertFalse(string3.equals((Object)string1));
      assertTrue(string3.equals((Object)string0));
      assertNotNull(string3);
      assertEquals("N", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "N", true);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone1.isDoubleMetaphoneEqual("1kb~3j[", "N", true);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      String string4 = doubleMetaphone1.encode("wYC[_,Fa9{P]HM]BKv");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone3);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone3));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertNotNull(string4);
      assertEquals("AKFP", string4);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean3 = doubleMetaphone1.isDoubleMetaphoneEqual("}{x8!9*wdwx'N|", "N&S*", false);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone3);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone3));
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3 == boolean0);
      assertFalse(boolean3);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      doubleMetaphone2.setMaxCodeLen(86);
      assertNotSame(doubleMetaphone2, doubleMetaphone3);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(86, doubleMetaphone2.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone4 = new DoubleMetaphone();
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone4);
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      try { 
        doubleMetaphone3.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone((String) null);
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone((String) null, true);
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string2 = "U=\\y";
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("+`w0r1W_", "9L@hX", true);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(801);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(801, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Object object1 = new Object();
      assertFalse(object1.equals((Object)object0));
      assertNotNull(object1);
      
      try { 
        doubleMetaphone1.encode(object1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("SH", "/v6r'j8dRz");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("N&Frme}4&hOil!:x@", "N&Frme}4&hOil!:x@", false);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(199);
      assertEquals(199, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("PSIB", (String) null, true);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(199, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("/v6r'j8dRz");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotNull(string0);
      assertEquals("FRJTRS", string0);
      assertEquals(199, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("XfF");
      assertNotNull(string0);
      assertEquals("SF", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "XfF", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("ARKP", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string2 = doubleMetaphone1.doubleMetaphone("ARKP", false);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("ARKP", string2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("XfF", "RANGER", false);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult((-52));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult1.append('!', '!');
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult1.append('a');
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("XfF");
      assertNotNull(string0);
      assertEquals("SF", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "XfF");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("ARKP", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string2 = "IN";
      int int0 = 86;
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "TH", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "gw{");
      assertNotNull(object0);
      assertEquals("K", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("gw{", true);
      assertTrue(string0.equals((Object)object0));
      assertNotNull(string0);
      assertEquals("K", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("K", true);
      assertTrue(string1.equals((Object)string0));
      assertTrue(string1.equals((Object)object0));
      assertNotNull(string1);
      assertEquals("K", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone((String) null, true);
      assertNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("h<");
      assertFalse(string3.equals((Object)object0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertNotNull(string3);
      assertEquals("", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string4 = doubleMetaphone0.encode("CH");
      assertTrue(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      assertTrue(string4.equals((Object)object0));
      assertTrue(string4.equals((Object)string1));
      assertNotNull(string4);
      assertEquals("K", string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("CH", (String) null);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult((-457));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string5 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string5.equals((Object)object0));
      assertFalse(string5.equals((Object)string4));
      assertTrue(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string0));
      assertNotNull(string5);
      assertEquals("", string5);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("iR]@+Zh>]Go2NH^@L");
      assertNotNull(string0);
      assertEquals("ARJK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string1 = doubleMetaphone1.encode("?0");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("", string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("ARJK", (String) null, false);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("PS", false);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("S", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.encode("");
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string4 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", true);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertNotNull(string4);
      assertEquals("ARKP", string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone4 = new DoubleMetaphone();
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone4);
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      
      String string5 = doubleMetaphone3.doubleMetaphone("org.apache.commons.codec.EncoderException");
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone4);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string2));
      assertTrue(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string1));
      assertNotNull(string5);
      assertEquals("ARKP", string5);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone5 = new DoubleMetaphone();
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone2));
      assertNotNull(doubleMetaphone5);
      assertEquals(4, doubleMetaphone5.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone6 = new DoubleMetaphone();
      assertFalse(doubleMetaphone6.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone6.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone6.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone6.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone6.equals((Object)doubleMetaphone5));
      assertFalse(doubleMetaphone6.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone6);
      assertEquals(4, doubleMetaphone6.getMaxCodeLen());
      
      Object object0 = doubleMetaphone5.encode((Object) "3\"|fS:3Bw");
      assertNotSame(doubleMetaphone5, doubleMetaphone6);
      assertNotSame(doubleMetaphone5, doubleMetaphone0);
      assertNotSame(doubleMetaphone5, doubleMetaphone3);
      assertNotSame(doubleMetaphone5, doubleMetaphone4);
      assertNotSame(doubleMetaphone5, doubleMetaphone1);
      assertNotSame(doubleMetaphone5, doubleMetaphone2);
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone6));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone2));
      assertFalse(object0.equals((Object)string5));
      assertFalse(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string2));
      assertFalse(object0.equals((Object)string4));
      assertNotNull(object0);
      assertEquals("FSP", object0);
      assertEquals(4, doubleMetaphone5.getMaxCodeLen());
      
      Object object1 = doubleMetaphone5.encode((Object) "FSP");
      assertNotSame(doubleMetaphone5, doubleMetaphone6);
      assertNotSame(doubleMetaphone5, doubleMetaphone0);
      assertNotSame(doubleMetaphone5, doubleMetaphone3);
      assertNotSame(doubleMetaphone5, doubleMetaphone4);
      assertNotSame(doubleMetaphone5, doubleMetaphone1);
      assertNotSame(doubleMetaphone5, doubleMetaphone2);
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone6));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone2));
      assertFalse(object1.equals((Object)string5));
      assertFalse(object1.equals((Object)string2));
      assertTrue(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string1));
      assertFalse(object1.equals((Object)string0));
      assertFalse(object1.equals((Object)string4));
      assertNotNull(object1);
      assertEquals("FSP", object1);
      assertEquals(4, doubleMetaphone5.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone7 = new DoubleMetaphone();
      assertFalse(doubleMetaphone7.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone7.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone7.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone7.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone7.equals((Object)doubleMetaphone6));
      assertFalse(doubleMetaphone7.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone7.equals((Object)doubleMetaphone5));
      assertNotNull(doubleMetaphone7);
      assertEquals(4, doubleMetaphone7.getMaxCodeLen());
      
      Object object2 = doubleMetaphone7.encode((Object) "FSP");
      assertNotSame(doubleMetaphone7, doubleMetaphone1);
      assertNotSame(doubleMetaphone7, doubleMetaphone4);
      assertNotSame(doubleMetaphone7, doubleMetaphone0);
      assertNotSame(doubleMetaphone7, doubleMetaphone3);
      assertNotSame(doubleMetaphone7, doubleMetaphone6);
      assertNotSame(doubleMetaphone7, doubleMetaphone2);
      assertNotSame(doubleMetaphone7, doubleMetaphone5);
      assertFalse(doubleMetaphone7.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone7.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone7.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone7.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone7.equals((Object)doubleMetaphone6));
      assertFalse(doubleMetaphone7.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone7.equals((Object)doubleMetaphone5));
      assertFalse(object2.equals((Object)string2));
      assertTrue(object2.equals((Object)object1));
      assertFalse(object2.equals((Object)string0));
      assertFalse(object2.equals((Object)string1));
      assertFalse(object2.equals((Object)string5));
      assertFalse(object2.equals((Object)string4));
      assertTrue(object2.equals((Object)object0));
      assertNotNull(object2);
      assertEquals("FSP", object2);
      assertEquals(4, doubleMetaphone7.getMaxCodeLen());
      
      Object object3 = new Object();
      assertNotNull(object3);
      
      try { 
        doubleMetaphone3.encode(object3);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "g,*7iW|nd(";
      String string1 = doubleMetaphone0.doubleMetaphone("g,*7iW|nd(");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("KNT", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("jWZ[s_{qf<D&", "KNT", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone(")AO", false);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string3 = doubleMetaphone1.doubleMetaphone(")AO", true);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertTrue(string3.equals((Object)string2));
      assertNotNull(string3);
      assertEquals("", string3);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      String string4 = null;
      String string5 = doubleMetaphone3.doubleMetaphone((String) null);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertNull(string5);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone4 = new DoubleMetaphone();
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertNotNull(doubleMetaphone4);
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone4.isDoubleMetaphoneEqual("PS>O^C?0W<.,H", "SIA");
      assertNotSame(doubleMetaphone4, doubleMetaphone1);
      assertNotSame(doubleMetaphone4, doubleMetaphone3);
      assertNotSame(doubleMetaphone4, doubleMetaphone0);
      assertNotSame(doubleMetaphone4, doubleMetaphone2);
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone5 = new DoubleMetaphone();
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone4));
      assertNotNull(doubleMetaphone5);
      assertEquals(4, doubleMetaphone5.getMaxCodeLen());
      
      try { 
        doubleMetaphone1.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "TIT";
      stringArray0[1] = "TIT";
      stringArray0[2] = "TIT";
      stringArray0[3] = "TIT";
      boolean boolean0 = DoubleMetaphone.contains("TIT", 209, 8, stringArray0);
      assertEquals(4, stringArray0.length);
      assertFalse(boolean0);
      
      boolean boolean1 = DoubleMetaphone.contains("TIT", 209, 209, stringArray0);
      assertTrue(boolean1 == boolean0);
      assertEquals(4, stringArray0.length);
      assertFalse(boolean1);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone(">O^C?0W<.,H", false);
      assertNotNull(string0);
      assertEquals("K", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("TIT");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("TT", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("TTH", false);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("0", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("TIT", 209);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = DoubleMetaphone.contains("TIT", 76, 85, stringArray0);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertEquals(4, stringArray0.length);
      assertFalse(boolean2);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(76);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean3 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("iR]@+Zh>]Go2NH^@L");
      assertNotNull(string0);
      assertEquals("ARJK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("XfF");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("SF", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "XfF", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("ARKP", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string3 = doubleMetaphone1.encode("%7SF.uQBk+r7B#pt#N1");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertNotNull(string3);
      assertEquals("SFKP", string3);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string4 = doubleMetaphone1.doubleMetaphone("ARKP", false);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertTrue(string4.equals((Object)string2));
      assertNotNull(string4);
      assertEquals("ARKP", string4);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      String string5 = doubleMetaphone2.doubleMetaphone("gz27?h&yE&/M~&Kp%w=");
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone3);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone3));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string2));
      assertNotNull(string5);
      assertEquals("KSMK", string5);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone4 = new DoubleMetaphone();
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertNotNull(doubleMetaphone4);
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone5 = new DoubleMetaphone();
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone5);
      assertEquals(4, doubleMetaphone5.getMaxCodeLen());
      
      try { 
        doubleMetaphone5.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("PN");
      assertNotNull(string0);
      assertEquals("N", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("", true);
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("PN", true);
      assertTrue(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("N", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "N", true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("U=y", "PN", false);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      doubleMetaphone1.setMaxCodeLen(86);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(86, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone1.encode((Object) "N");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertTrue(object1.equals((Object)string0));
      assertTrue(object1.equals((Object)string2));
      assertNotNull(object1);
      assertEquals("N", object1);
      assertEquals(86, doubleMetaphone1.getMaxCodeLen());
      
      Object object2 = doubleMetaphone0.encode((Object) "VPpNajUbSYlr'");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(object2.equals((Object)string0));
      assertFalse(object2.equals((Object)string2));
      assertFalse(object2.equals((Object)object1));
      assertNotNull(object2);
      assertEquals("FPNJ", object2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone2.doubleMetaphone("q<~:2<Cy,l[AU_EACz");
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)object2));
      assertFalse(string3.equals((Object)object1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertNotNull(string3);
      assertEquals("KSLS", string3);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      Object object3 = doubleMetaphone1.encode((Object) "FPNJ");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(object3.equals((Object)object1));
      assertFalse(object3.equals((Object)string3));
      assertTrue(object3.equals((Object)object2));
      assertFalse(object3.equals((Object)string2));
      assertFalse(object3.equals((Object)string0));
      assertNotNull(object3);
      assertEquals("FPNJ", object3);
      assertEquals(86, doubleMetaphone1.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("t9qUqo16]tY:&Fi");
      assertNotNull(string0);
      assertEquals("TKKT", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "t9qUqo16]tY:&Fi");
      assertTrue(object0.equals((Object)string0));
      assertNotNull(object0);
      assertEquals("TKKT", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object1 = doubleMetaphone0.encode((Object) "TKKT");
      assertFalse(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string0));
      assertNotNull(object1);
      assertEquals("TKT", object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("IB", "GA", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("[[= 1a(", "A", false);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen((-2349));
      assertEquals((-2349), doubleMetaphone0.getMaxCodeLen());
      
      String string1 = "}%DrA,d5iR^N'}";
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("[[= 1a(", (String) null, false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("XfF");
      assertNotNull(string0);
      assertEquals("SF", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "XfF", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("ARKP", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("SF", false);
      assertFalse(string2.equals((Object)string1));
      assertTrue(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("SF", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      doubleMetaphone3.setMaxCodeLen((-146));
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertEquals((-146), doubleMetaphone3.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone3.doubleMetaphone("Vso2-j*V8t*-H");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("*h!9^~BvTY3uuc7o4");
      assertNotNull(string0);
      assertEquals("PFTK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("|3dW*h$(g/(Pe/'>O", "", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("DG", false);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("TK", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "fDz>_7z");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotNull(object0);
      assertEquals("FTSS", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object1 = doubleMetaphone0.encode((Object) "FTSS");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(object1.equals((Object)object0));
      assertNotNull(object1);
      assertEquals("FTS", object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object2 = doubleMetaphone1.encode((Object) "FTS");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(object2.equals((Object)object1));
      assertFalse(object2.equals((Object)object0));
      assertNotNull(object2);
      assertEquals("FTS", object2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      Object object3 = doubleMetaphone0.encode((Object) "FTS");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(object3.equals((Object)object2));
      assertFalse(object3.equals((Object)object0));
      assertTrue(object3.equals((Object)object1));
      assertNotNull(object3);
      assertEquals("FTS", object3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object4 = doubleMetaphone0.encode((Object) "FTS");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(object4.equals((Object)object1));
      assertFalse(object4.equals((Object)object0));
      assertTrue(object4.equals((Object)object3));
      assertTrue(object4.equals((Object)object2));
      assertNotNull(object4);
      assertEquals("FTS", object4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("viyRuT`42sz6Ek]w");
      assertNotNull(string0);
      assertEquals("FRTS", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "viyRuT`42sz6Ek]w";
      stringArray0[1] = "viyRuT`42sz6Ek]w";
      stringArray0[2] = "FRTS";
      stringArray0[3] = null;
      stringArray0[4] = "viyRuT`42sz6Ek]w";
      stringArray0[5] = "FRTS";
      stringArray0[6] = null;
      boolean boolean0 = DoubleMetaphone.contains((String) null, (-4171), (-3387), stringArray0);
      assertEquals(7, stringArray0.length);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("PN");
      assertNotNull(string0);
      assertEquals("N", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string1 = doubleMetaphone1.encode("?v;BES");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("FPS", string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone2.isDoubleMetaphoneEqual("FPS", "N", false);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone2.isDoubleMetaphoneEqual("ACH", "PN");
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone1.isDoubleMetaphoneEqual("", "FPS");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("PN");
      assertNotNull(string0);
      assertEquals("N", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("", true);
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("PN", true);
      assertTrue(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("N", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "N", true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("U=y", "PN", false);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      doubleMetaphone1.setMaxCodeLen(86);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(86, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone1.encode((Object) "N");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertTrue(object1.equals((Object)string0));
      assertTrue(object1.equals((Object)string2));
      assertNotNull(object1);
      assertEquals("N", object1);
      assertEquals(86, doubleMetaphone1.getMaxCodeLen());
      
      Object object2 = doubleMetaphone0.encode((Object) "VPpNajUbSYlr'");
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(object2.equals((Object)object1));
      assertFalse(object2.equals((Object)string0));
      assertFalse(object2.equals((Object)string2));
      assertNotNull(object2);
      assertEquals("FPNJ", object2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone2.doubleMetaphone("q<~:2<Cy,l[AU_EcCz");
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)object2));
      assertFalse(string3.equals((Object)object1));
      assertNotNull(string3);
      assertEquals("KSLK", string3);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      Object object3 = doubleMetaphone1.encode((Object) "FPNJ");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertTrue(object3.equals((Object)object2));
      assertFalse(object3.equals((Object)string3));
      assertFalse(object3.equals((Object)string0));
      assertFalse(object3.equals((Object)string2));
      assertFalse(object3.equals((Object)object1));
      assertNotNull(object3);
      assertEquals("FPNJ", object3);
      assertEquals(86, doubleMetaphone1.getMaxCodeLen());
      
      int int0 = doubleMetaphone2.getMaxCodeLen();
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("XfF");
      assertNotNull(string0);
      assertEquals("SF", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "XfF", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("ARKP", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string2 = doubleMetaphone1.doubleMetaphone("ARKP", false);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("ARKP", string2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      String string3 = doubleMetaphone2.doubleMetaphone("gz27?h&yE&/M~&Kp%w=");
      assertNotSame(doubleMetaphone2, doubleMetaphone3);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertNotNull(string3);
      assertEquals("KSMK", string3);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone4 = new DoubleMetaphone();
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertNotNull(doubleMetaphone4);
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone5 = new DoubleMetaphone();
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone5);
      assertEquals(4, doubleMetaphone5.getMaxCodeLen());
      
      try { 
        doubleMetaphone5.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("g,*7iW|nd(");
      assertNotNull(string0);
      assertEquals("KNT", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("jWZ[s_{qf<D&", "KNT", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone(")AO", false);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("g,*7iW|nd(", "org.apache.commons.codec.EncoderException");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      doubleMetaphone1.setMaxCodeLen(4);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone2.encode((Object) "HOLM");
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(object1.equals((Object)string0));
      assertFalse(object1.equals((Object)string1));
      assertNotNull(object1);
      assertEquals("HLM", object1);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      Object object2 = doubleMetaphone2.encode((Object) "HLM");
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(object2.equals((Object)object1));
      assertFalse(object2.equals((Object)string0));
      assertFalse(object2.equals((Object)string1));
      assertNotNull(object2);
      assertEquals("LM", object2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("*~Gk7Utb`");
      assertNotNull(string0);
      assertEquals("KKTP", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("*~Gk7Utb`", true);
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("KKTP", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("KKTP", true);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("KTP", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("{_|pMO}ElGKfwAulu@");
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertNotNull(string3);
      assertEquals("PMLK", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string4 = doubleMetaphone0.doubleMetaphone("*");
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertNotNull(string4);
      assertEquals("", string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("PNWRN", "PNWRN", true);
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("5A``Y*Z(5.8]E9\"/q?", false);
      assertNotNull(string0);
      assertEquals("SK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      try { 
        doubleMetaphone1.encode((Object) doubleMetaphone0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("XfF");
      assertNotNull(string0);
      assertEquals("SF", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("SF", (String) null, true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("SF", false);
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("SF", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string2 = doubleMetaphone1.doubleMetaphone("LI", true);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("L", string2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "+UH=xP<+}C1", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("CIO", true);
      assertNotNull(string0);
      assertEquals("X", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(79);
      assertEquals(79, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("WRN", "CIO");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string1 = doubleMetaphone1.doubleMetaphone("M88FH w)@eRT#V; ev", true);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("MFRT", string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string2 = doubleMetaphone2.doubleMetaphone("CIO");
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("S", string2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "X");
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(object0.equals((Object)string0));
      assertTrue(object0.equals((Object)string2));
      assertFalse(object0.equals((Object)string1));
      assertNotNull(object0);
      assertEquals("S", object0);
      assertEquals(79, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(79);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("PN");
      assertNotNull(string0);
      assertEquals("N", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("", true);
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("PN", true);
      assertTrue(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("N", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "N", true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("aG6BR", false);
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertNotNull(string3);
      assertEquals("AKPR", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string4 = doubleMetaphone2.doubleMetaphone("cP,t* Nm*}r[");
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertNotNull(string4);
      assertEquals("KPTN", string4);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      Object object0 = doubleMetaphone3.encode((Object) "WR");
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(object0.equals((Object)string3));
      assertFalse(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string4));
      assertFalse(object0.equals((Object)string2));
      assertNotNull(object0);
      assertEquals("R", object0);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      Object object1 = doubleMetaphone0.encode((Object) "cP,t* Nm*}r[");
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone3);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(object1.equals((Object)string3));
      assertFalse(object1.equals((Object)string0));
      assertFalse(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string2));
      assertTrue(object1.equals((Object)string4));
      assertNotNull(object1);
      assertEquals("KPTN", object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("1_<ObnBH", true);
      assertNotNull(string1);
      assertEquals("PNP", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("", false);
      assertNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("`uJ+s$7:4XlQ|zO");
      assertFalse(string3.equals((Object)string1));
      assertNotNull(string3);
      assertEquals("JSKS", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "`uJ+s$7:4XlQ|zO");
      assertFalse(object0.equals((Object)string1));
      assertTrue(object0.equals((Object)string3));
      assertNotNull(object0);
      assertEquals("JSKS", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(721);
      assertEquals(721, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("HOLZ", "HOLZ");
      assertTrue(boolean0);
      assertEquals(721, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "];Olg=");
      assertNotNull(object0);
      assertEquals("LK", object0);
      assertEquals(721, doubleMetaphone0.getMaxCodeLen());
      
      Object object1 = doubleMetaphone0.encode((Object) "LK");
      assertTrue(object1.equals((Object)object0));
      assertNotNull(object1);
      assertEquals("LK", object1);
      assertEquals(721, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("HOLZ", "vw[!", true);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(721, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("ep~+z", "];Olg=");
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(721, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(721);
      assertEquals(721, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("B", (String) null, true);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3);
      assertEquals(721, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean4 = doubleMetaphone1.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "L3 a]wKh3r$LNcnTZ9", false);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean4 == boolean3);
      assertFalse(boolean4 == boolean0);
      assertTrue(boolean4 == boolean1);
      assertTrue(boolean4 == boolean2);
      assertFalse(boolean4);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean5 = doubleMetaphone0.isDoubleMetaphoneEqual("u.m0zq$", "L3 a]wKh3r$LNcnTZ9");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean5 == boolean1);
      assertTrue(boolean5 == boolean2);
      assertFalse(boolean5 == boolean0);
      assertTrue(boolean5 == boolean3);
      assertTrue(boolean5 == boolean4);
      assertFalse(boolean5);
      assertEquals(721, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone1.charAt("<iHA(0zN]", 1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals('i', char0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(721, int0);
      assertEquals(721, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("\u0006A,N96P}mNDpp", true);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string0.equals((Object)object0));
      assertFalse(string0.equals((Object)object1));
      assertNotNull(string0);
      assertEquals("ANPMNTP", string0);
      assertEquals(721, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("XfF");
      assertNotNull(string0);
      assertEquals("SF", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "XfF", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("ARKP", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "VPpNajUbSYlr'", false);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone1.setMaxCodeLen(86);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(86, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone1.encode((Object) "org.apache.commons.codec.EncoderException");
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(object1.equals((Object)string0));
      assertFalse(object1.equals((Object)string1));
      assertNotNull(object1);
      assertEquals("ARKPXKMNSKTKNKTRKSPXN", object1);
      assertEquals(86, doubleMetaphone1.getMaxCodeLen());
      
      try { 
        doubleMetaphone1.encode((Object) doubleMetaphone0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('p', '4');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone0.encode("C6");
      assertNotNull(string0);
      assertEquals("K", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('`');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('p');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      Object object0 = doubleMetaphone0.encode((Object) "IB");
      assertFalse(object0.equals((Object)string0));
      assertNotNull(object0);
      assertEquals("AP", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object1 = doubleMetaphone0.encode((Object) "6s}|no8");
      assertFalse(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string0));
      assertNotNull(object1);
      assertEquals("SN", object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object2 = doubleMetaphone0.encode((Object) "SN");
      assertFalse(object2.equals((Object)string0));
      assertFalse(object2.equals((Object)object0));
      assertTrue(object2.equals((Object)object1));
      assertNotNull(object2);
      assertEquals("SN", object2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(9);
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(555);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("6s}|no8");
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('p');
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(9, int0);
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("AGGI");
      assertFalse(string1.equals((Object)object1));
      assertFalse(string1.equals((Object)object0));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)object2));
      assertNotNull(string1);
      assertEquals("AJ", string1);
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("PN");
      assertNotNull(string0);
      assertEquals("N", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("", true);
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("PN", true);
      assertTrue(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("N", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.encode("N");
      assertTrue(string3.equals((Object)string2));
      assertTrue(string3.equals((Object)string0));
      assertNotNull(string3);
      assertEquals("N", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string4 = doubleMetaphone0.encode("PN");
      assertTrue(string4.equals((Object)string2));
      assertTrue(string4.equals((Object)string3));
      assertTrue(string4.equals((Object)string0));
      assertNotNull(string4);
      assertEquals("N", string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string5 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException");
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string3));
      assertNotNull(string5);
      assertEquals("ARKP", string5);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string6 = doubleMetaphone0.doubleMetaphone((String) null);
      assertNull(string6);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "N");
      assertFalse(object0.equals((Object)string5));
      assertTrue(object0.equals((Object)string0));
      assertTrue(object0.equals((Object)string4));
      assertTrue(object0.equals((Object)string2));
      assertTrue(object0.equals((Object)string3));
      assertNotNull(object0);
      assertEquals("N", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object1 = doubleMetaphone0.encode((Object) "N");
      assertTrue(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string5));
      assertTrue(object1.equals((Object)string0));
      assertTrue(object1.equals((Object)string4));
      assertTrue(object1.equals((Object)string3));
      assertTrue(object1.equals((Object)string2));
      assertNotNull(object1);
      assertEquals("N", object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object2 = doubleMetaphone0.encode((Object) "N");
      assertTrue(object2.equals((Object)string3));
      assertTrue(object2.equals((Object)object1));
      assertTrue(object2.equals((Object)object0));
      assertFalse(object2.equals((Object)string5));
      assertTrue(object2.equals((Object)string0));
      assertTrue(object2.equals((Object)string4));
      assertTrue(object2.equals((Object)string2));
      assertNotNull(object2);
      assertEquals("N", object2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string7 = doubleMetaphone0.doubleMetaphone("PN", false);
      assertTrue(string7.equals((Object)string2));
      assertTrue(string7.equals((Object)object1));
      assertTrue(string7.equals((Object)object2));
      assertTrue(string7.equals((Object)string3));
      assertFalse(string7.equals((Object)string5));
      assertTrue(string7.equals((Object)object0));
      assertTrue(string7.equals((Object)string0));
      assertTrue(string7.equals((Object)string4));
      assertNotNull(string7);
      assertEquals("N", string7);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string8 = doubleMetaphone0.doubleMetaphone("K");
      assertFalse(string8.equals((Object)string0));
      assertFalse(string8.equals((Object)string4));
      assertFalse(string8.equals((Object)object0));
      assertFalse(string8.equals((Object)string5));
      assertFalse(string8.equals((Object)string3));
      assertFalse(string8.equals((Object)object2));
      assertFalse(string8.equals((Object)object1));
      assertFalse(string8.equals((Object)string2));
      assertFalse(string8.equals((Object)string7));
      assertNotNull(string8);
      assertEquals("K", string8);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("PN", "PN");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("PN", "LdLUNi:G");
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(687);
      assertEquals(687, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("N", "PSORG.APACHE.COMMONS.CODEC.ENCODEREXCEPTION");
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(687, doubleMetaphone0.getMaxCodeLen());
      
      String string9 = doubleMetaphone0.doubleMetaphone("GN", true);
      assertTrue(string9.equals((Object)object1));
      assertTrue(string9.equals((Object)object2));
      assertTrue(string9.equals((Object)string3));
      assertTrue(string9.equals((Object)string2));
      assertFalse(string9.equals((Object)string5));
      assertTrue(string9.equals((Object)string0));
      assertTrue(string9.equals((Object)string4));
      assertTrue(string9.equals((Object)object0));
      assertTrue(string9.equals((Object)string7));
      assertFalse(string9.equals((Object)string8));
      assertNotNull(string9);
      assertEquals("N", string9);
      assertEquals(687, doubleMetaphone0.getMaxCodeLen());
      
      String string10 = doubleMetaphone0.doubleMetaphone("`<Q+-uEsZB!|q<Ke-%", false);
      assertFalse(string10.equals((Object)string2));
      assertFalse(string10.equals((Object)string5));
      assertFalse(string10.equals((Object)string3));
      assertFalse(string10.equals((Object)object1));
      assertFalse(string10.equals((Object)string8));
      assertFalse(string10.equals((Object)object0));
      assertFalse(string10.equals((Object)string0));
      assertFalse(string10.equals((Object)string4));
      assertFalse(string10.equals((Object)string9));
      assertFalse(string10.equals((Object)object2));
      assertFalse(string10.equals((Object)string7));
      assertNotNull(string10);
      assertEquals("KSPKK", string10);
      assertEquals(687, doubleMetaphone0.getMaxCodeLen());
      
      Object object3 = doubleMetaphone0.encode((Object) "LdLUNi:G");
      assertFalse(object3.equals((Object)string3));
      assertFalse(object3.equals((Object)object2));
      assertFalse(object3.equals((Object)string8));
      assertFalse(object3.equals((Object)string5));
      assertFalse(object3.equals((Object)object1));
      assertFalse(object3.equals((Object)string4));
      assertFalse(object3.equals((Object)string0));
      assertFalse(object3.equals((Object)string2));
      assertFalse(object3.equals((Object)string10));
      assertFalse(object3.equals((Object)object0));
      assertFalse(object3.equals((Object)string7));
      assertFalse(object3.equals((Object)string9));
      assertNotNull(object3);
      assertEquals("LTLNK", object3);
      assertEquals(687, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("mn(Py", 687);
      assertEquals('\u0000', char0);
      assertEquals(687, doubleMetaphone0.getMaxCodeLen());
      
      String string11 = doubleMetaphone0.doubleMetaphone("N");
      assertTrue(string11.equals((Object)object2));
      assertTrue(string11.equals((Object)string2));
      assertTrue(string11.equals((Object)string0));
      assertFalse(string11.equals((Object)string5));
      assertFalse(string11.equals((Object)object3));
      assertFalse(string11.equals((Object)string8));
      assertTrue(string11.equals((Object)string9));
      assertTrue(string11.equals((Object)object1));
      assertTrue(string11.equals((Object)string3));
      assertFalse(string11.equals((Object)string10));
      assertTrue(string11.equals((Object)string4));
      assertTrue(string11.equals((Object)object0));
      assertTrue(string11.equals((Object)string7));
      assertNotNull(string11);
      assertEquals("N", string11);
      assertEquals(687, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = 79;
      String string0 = doubleMetaphone0.doubleMetaphone("CIO", true);
      assertNotNull(string0);
      assertEquals("X", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(79);
      assertEquals(79, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = "M88FH w)@eRT#V; ev";
      boolean boolean0 = false;
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("Ui)rz,vHc%LCE+i6", "M88FH w)@eRT#V; ev", false);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(79, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("TIA", false);
      assertFalse(string2.equals((Object)string1));
      assertTrue(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("X", string2);
      assertEquals(79, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(79);
      assertEquals(79, doubleMetaphone0.getMaxCodeLen());
      
      int int1 = 563;
      String[] stringArray0 = new String[1];
      stringArray0[0] = null;
      // Undeclared exception!
      try { 
        DoubleMetaphone.contains((String) null, 563, 563, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("KNKS", true);
      assertNotNull(string0);
      assertEquals("NKS", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(80);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("", "NKS");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NKS", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('/');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NKS/", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("/", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('/', '%');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("//", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("NKS/%", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "}8gcC^";
      stringArray0[1] = "KNKS";
      stringArray0[2] = "";
      stringArray0[3] = "KNKS";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "NKS";
      boolean boolean0 = DoubleMetaphone.contains("KNKS", 1009, 1009, stringArray0);
      assertEquals(8, stringArray0.length);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "(", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("qZ{a", false);
      assertNotNull(string0);
      assertEquals("KS", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("8p2{9\"=PV");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("PPF", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      Object object0 = doubleMetaphone1.encode((Object) "KS");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(object0.equals((Object)string1));
      assertTrue(object0.equals((Object)string0));
      assertNotNull(object0);
      assertEquals("KS", object0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string2 = doubleMetaphone2.doubleMetaphone("");
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNull(string2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      Object object1 = doubleMetaphone2.encode((Object) "`uJ+s$7:4XlQ|zO");
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(object1.equals((Object)string0));
      assertFalse(object1.equals((Object)string1));
      assertFalse(object1.equals((Object)object0));
      assertNotNull(object1);
      assertEquals("JSKS", object1);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("{ZdOf{v)");
      assertNotNull(string0);
      assertEquals("STFF", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-17));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('6', '6');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('h', 'h');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string1 = doubleMetaphone0.doubleMetaphone("STFF");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("STF", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(2421);
      assertEquals(2421, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("3T^JM52ibW`Gu9^+", "BD0A2j;! ^", false);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("STF", "3T^JM52ibW`Gu9^+", false);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("STF", "{jcHD5a\"^5Zt");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(2421, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone1.charAt("cQyA", 1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals('Q', char0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "_jf<-l>>ui3`t";
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(66);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("oJ&<e:[R+H--$_>$9", "s'nv&>NN'UlutH!!.%");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("s'nv&>NN'UlutH!!.%", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("oJ&<e:[R+H--$_>$9", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone0.setMaxCodeLen(945);
      assertEquals(945, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('|');
      assertEquals(945, doubleMetaphone0.getMaxCodeLen());
      assertEquals("oJ&<e:[R+H--$_>$9|", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("s'nv&>NN'UlutH!!.%", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean0);
      assertEquals(945, doubleMetaphone0.getMaxCodeLen());
      assertEquals("oJ&<e:[R+H--$_>$9|", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("s'nv&>NN'UlutH!!.%", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("_jf<-l>>ui3`t", "", false);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(945, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("ISL", 67);
      assertEquals('\u0000', char0);
      assertEquals(945, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult((-1519));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(945, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult1.appendPrimary('x');
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(945, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      
      try { 
        doubleMetaphone0.encode((Object) doubleMetaphone_DoubleMetaphoneResult0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "gw{");
      assertNotNull(object0);
      assertEquals("K", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(2012);
      assertEquals(2012, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(152);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(2012, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("s'nv&>NN'UlutH!!.%", "/M(U:MR<Kh} Q");
      assertEquals(2012, doubleMetaphone0.getMaxCodeLen());
      assertEquals("s'nv&>NN'UlutH!!.%", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("/M(U:MR<Kh} Q", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      int int0 = 67;
      doubleMetaphone0.setMaxCodeLen(2012);
      assertEquals(2012, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('>');
      assertEquals(2012, doubleMetaphone0.getMaxCodeLen());
      assertEquals("s'nv&>NN'UlutH!!.%>", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("/M(U:MR<Kh} Q", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean0);
      assertEquals(2012, doubleMetaphone0.getMaxCodeLen());
      assertEquals("s'nv&>NN'UlutH!!.%>", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("/M(U:MR<Kh} Q", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("/M(U:MR<Kh} Q");
      assertEquals(2012, doubleMetaphone0.getMaxCodeLen());
      assertEquals("s'nv&>NN'UlutH!!.%>", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("/M(U:MR<Kh} Q/M(U:MR<Kh} Q", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string0 = doubleMetaphone0.doubleMetaphone("V}R?mnxg*3?Ia)A{", false);
      assertFalse(string0.equals((Object)object0));
      assertNotNull(string0);
      assertEquals("FRMNKSK", string0);
      assertEquals(2012, doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "oJ&<e:[R+H--$_>$9", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "NE0");
      assertNotNull(object0);
      assertEquals("N", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("GAo<", true);
      assertFalse(string0.equals((Object)object0));
      assertNotNull(string0);
      assertEquals("K", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("K");
      assertFalse(string1.equals((Object)object0));
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("K", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object1 = doubleMetaphone0.encode((Object) "OGGI");
      assertFalse(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string0));
      assertFalse(object1.equals((Object)string1));
      assertNotNull(object1);
      assertEquals("AJ", object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("*~Gk7Utb`", true);
      assertNotNull(string0);
      assertEquals("KKTP", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("JK'l");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("JKL", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("KKTP");
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("KTP", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "+[J");
      assertFalse(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string2));
      assertNotNull(object0);
      assertEquals("J", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "Ef+x");
      assertNotNull(object0);
      assertEquals("AFKS", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object1 = doubleMetaphone0.encode((Object) "AFKS");
      assertTrue(object1.equals((Object)object0));
      assertNotNull(object1);
      assertEquals("AFKS", object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("_VF!~1sbY", "AFKS");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("Wv", "])A_eTIT',D9", false);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object2 = doubleMetaphone0.encode((Object) "AFKS");
      assertTrue(object2.equals((Object)object0));
      assertTrue(object2.equals((Object)object1));
      assertNotNull(object2);
      assertEquals("AFKS", object2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone(",_^BA|)~:", false);
      assertFalse(string0.equals((Object)object0));
      assertFalse(string0.equals((Object)object1));
      assertFalse(string0.equals((Object)object2));
      assertNotNull(string0);
      assertEquals("P", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("IyY_lVENr_", "AFKS");
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = ",_^BA|)~:";
      boolean boolean3 = DoubleMetaphone.contains("IyY_lVENr_", 65, 86, stringArray0);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertEquals(1, stringArray0.length);
      assertFalse(boolean3);
      
      String string1 = doubleMetaphone0.encode("AFKS");
      assertTrue(string1.equals((Object)object0));
      assertTrue(string1.equals((Object)object1));
      assertFalse(string1.equals((Object)string0));
      assertTrue(string1.equals((Object)object2));
      assertNotNull(string1);
      assertEquals("AFKS", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string2 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertFalse(string2.equals((Object)object1));
      assertFalse(string2.equals((Object)object0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)object2));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('X');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("d", "AC<+p{aK^P9.TAZ>");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertNotNull(string0);
      assertEquals("", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("HARIS", "HARIS");
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("OWSKY");
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string1 = doubleMetaphone1.encode("OWSKY");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("ASK", string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult((-457));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      String string2 = doubleMetaphone_DoubleMetaphoneResult1.getAlternate();
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(string2.equals((Object)string1));
      assertTrue(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("", string2);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(0, int0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = null;
      stringArray0[1] = "qZ{a";
      stringArray0[2] = "org.apache.commons.codec.EncoderException";
      stringArray0[3] = "qZ{a";
      stringArray0[4] = null;
      stringArray0[5] = "qZ{a";
      // Undeclared exception!
      try { 
        DoubleMetaphone.contains("qZ{a", 644, (-1518), stringArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("RGY", false);
      assertNotNull(string0);
      assertEquals("RJ", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone(")@.srH%BC6]");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("SRPK", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string2 = doubleMetaphone1.doubleMetaphone("%<JvTjs5({uH)+b", true);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("JFTS", string2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string3 = doubleMetaphone1.doubleMetaphone("`uJ+s$7:4XlQ|zO");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertNotNull(string3);
      assertEquals("JSKS", string3);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "RJ";
      stringArray0[1] = ")@.srH%BC6]";
      boolean boolean0 = DoubleMetaphone.contains("`uJ+s$7:4XlQ|zO", 4, 4, stringArray0);
      assertEquals(2, stringArray0.length);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("n>?h1p{", true);
      assertNotNull(string0);
      assertEquals("", string0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("n>?h1p{", true);
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("", string1);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = "GNX 2OLO_]ITT8D^B:YZ";
      String string3 = doubleMetaphone0.encode("GNX 2OLO_]ITT8D^B:YZ");
      assertTrue(string3.equals((Object)string1));
      assertTrue(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertNotNull(string3);
      assertEquals("", string3);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "n>?h1p{", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.getMaxCodeLen();
      doubleMetaphone0.isDoubleMetaphoneEqual("qZ{a", "org.apache.commons.codec.EncoderException", false);
      String string0 = doubleMetaphone0.doubleMetaphone("RGY", false);
      assertEquals("RJ", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone(")@.srH%BC6]");
      assertEquals("SRPK", string1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      Object object0 = doubleMetaphone1.encode((Object) "`uJ+s$7:4XlQ|zO");
      assertEquals("JSKS", object0);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone("fFc1Ns+g", true);
      doubleMetaphone0.getMaxCodeLen();
      doubleMetaphone0.isDoubleMetaphoneEqual("qZ{a", "org.apache.commons.codec.EncoderException", false);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("#2M8~");
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('U');
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode((Object) "gw{");
      doubleMetaphone0.setMaxCodeLen(2012);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(152);
      doubleMetaphone_DoubleMetaphoneResult0.append("s'nv&>NN'UlutH!!.%", "/M(U:MR<Kh} Q");
      int int0 = 67;
      doubleMetaphone0.setMaxCodeLen(2012);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('>');
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "oJ&<e:[R+H--$_>$9", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone0.setMaxCodeLen((-388));
      doubleMetaphone_DoubleMetaphoneResult0.append("_`9mu~^", "O:");
      doubleMetaphone0.setMaxCodeLen(67);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('>');
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone0.isDoubleMetaphoneEqual("Y", "O:", true);
      // Undeclared exception!
      try { 
        doubleMetaphone0.charAt((String) null, 1672);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode("Qw{0");
      doubleMetaphone0.isDoubleMetaphoneEqual("ED", "GA");
      doubleMetaphone0.isDoubleMetaphoneEqual("~_V.4+~x%|(gYseN {", "KNGAO<");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-4251));
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append("h]F,{Y%f#(E/`0m", "BR-Ow&>P.g/");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.isDoubleMetaphoneEqual("ISL", "ISL", false);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone0.doubleMetaphone("ISL", false);
      String string0 = doubleMetaphone0.doubleMetaphone("ISL");
      assertEquals("AL", string0);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone0.setMaxCodeLen(152);
      doubleMetaphone_DoubleMetaphoneResult0.append("oJ&<e:[R+H--$_>$9", "s'nv&>NN'UlutH!!.%");
      doubleMetaphone0.setMaxCodeLen(67);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('>');
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone0.encode("}.F4N%pWJ~ j");
      doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      doubleMetaphone0.doubleMetaphone("MMBL0L5R&=e)", true);
      assertEquals(67, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      String string0 = doubleMetaphone1.doubleMetaphone("D2,3");
      assertEquals("T", string0);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.append('p', '4');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("");
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      doubleMetaphone_DoubleMetaphoneResult0.append('`');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('p');
      doubleMetaphone0.isDoubleMetaphoneEqual("D0|q", "IB");
      doubleMetaphone0.encode((Object) "IB");
      Object object0 = doubleMetaphone0.encode((Object) "6s}|no8");
      doubleMetaphone0.encode((Object) "SN");
      doubleMetaphone0.setMaxCodeLen(9);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(555);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("6s}|no8");
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('n');
      String string0 = doubleMetaphone_DoubleMetaphoneResult1.getAlternate();
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string0.equals((Object)object0));
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      boolean boolean0 = false;
      doubleMetaphone0.doubleMetaphone("+", false);
      doubleMetaphone0.doubleMetaphone("", false);
      String string0 = "\\hUY|IvC/5#";
      doubleMetaphone0.doubleMetaphone("hUY|IvC/5#");
      doubleMetaphone0.encode("hUY|IvC/5#");
      int int0 = 3287;
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(3287);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("+Q{\"]c>bT z");
      char char0 = 'h';
      try { 
        doubleMetaphone0.encode((Object) doubleMetaphone_DoubleMetaphoneResult0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode((Object) "NE0");
      String string0 = "GAo<";
      doubleMetaphone0.doubleMetaphone("GAo<");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      String string1 = "]5T3V";
      doubleMetaphone0.doubleMetaphone((String) null);
      doubleMetaphone0.setMaxCodeLen(1264);
      doubleMetaphone0.encode("NE0");
      String string2 = "*q;R1|Voe";
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("*q;R1|Voe");
      String string3 = "KNS";
      doubleMetaphone0.isDoubleMetaphoneEqual("KNS", "org.apache.commons.codec.EncoderException");
      doubleMetaphone_DoubleMetaphoneResult0.append("v1$f0");
      doubleMetaphone0.doubleMetaphone("gw{");
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.appendPrimary((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode("");
      doubleMetaphone0.doubleMetaphone("", false);
      doubleMetaphone0.doubleMetaphone("PS");
      doubleMetaphone0.encode("PS");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      doubleMetaphone1.isDoubleMetaphoneEqual("S", "");
      doubleMetaphone1.setMaxCodeLen(310);
      assertEquals(310, doubleMetaphone1.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = doubleMetaphone0.doubleMetaphone("*~Gk7Utb`", true);
      assertEquals("KKTP", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("KKTP");
      assertEquals("KTP", string1);
      
      Object object0 = doubleMetaphone0.encode((Object) "+[J");
      assertEquals("J", object0);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      int int0 = 0;
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone0.encode("org.apache.commons.codec.EncoderException");
      doubleMetaphone_DoubleMetaphoneResult0.append('p', '4');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("");
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      doubleMetaphone_DoubleMetaphoneResult0.append('`');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('p');
      doubleMetaphone0.encode("6s}|no8");
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("6s}|no8");
      String string0 = "I ^7:TYn\\<`XZA";
      doubleMetaphone_DoubleMetaphoneResult0.append("I ^7:TYn<`XZA");
      doubleMetaphone0.isDoubleMetaphoneEqual("6s}|no8", "I ^7:TYn<`XZA", true);
      doubleMetaphone0.charAt("I ^7:TYn<`XZA", 0);
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone0.setMaxCodeLen(1);
      int int1 = (-3610);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "I ^7:TYn<`XZA";
      stringArray0[1] = "6s}|no8";
      stringArray0[2] = "I ^7:TYn<`XZA";
      stringArray0[3] = "SN";
      stringArray0[4] = "6s}|no8";
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "aVeM0F@c{^dogew");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.getMaxCodeLen();
      String string0 = "org.apache.commons.codec.EncoderException";
      doubleMetaphone0.isDoubleMetaphoneEqual("qZ{a", "org.apache.commons.codec.EncoderException", false);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      String string1 = "}L&q&Y/\\5cemM4}c";
      doubleMetaphone0.doubleMetaphone("}L&q&Y/\u0005cemM4}c");
      doubleMetaphone0.doubleMetaphone("LKSM");
      doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "}L&q&Y/\u0005cemM4}c", false);
      try { 
        doubleMetaphone0.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.isDoubleMetaphoneEqual("ISL", "ISL", false);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      int int0 = 3693;
      int int1 = 0;
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      DoubleMetaphone.contains("", 3693, 0, stringArray0);
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.isDoubleMetaphoneEqual("n#J", "");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-3633));
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.isDoubleMetaphoneEqual("S,$d7q", "S,$d7q", true);
      String string0 = null;
      try { 
        doubleMetaphone0.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode("");
      String string0 = doubleMetaphone0.doubleMetaphone("", false);
      assertNull(string0);
      
      doubleMetaphone0.doubleMetaphone("`uJ+s$7:4XlQ|zO");
      Object object0 = doubleMetaphone0.encode((Object) "`uJ+s$7:4XlQ|zO");
      assertEquals("JSKS", object0);
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      Object object0 = doubleMetaphone0.encode((Object) "Ef+x");
      assertEquals("AFKS", object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "AFKS");
      assertNotNull(object1);
      
      doubleMetaphone0.isDoubleMetaphoneEqual("_VF!~1sbY", "IyY_lVENr_", false);
      doubleMetaphone0.isDoubleMetaphoneEqual("Ef+x", "4\"1,KG^QE_ 9'$VQ&Zs", false);
      doubleMetaphone0.doubleMetaphone((String) null);
      doubleMetaphone0.isDoubleMetaphoneEqual("Ef+x", "org.apache.commons.codec.EncoderException");
      char char0 = doubleMetaphone0.charAt("Ef+x", 1);
      assertEquals('f', char0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode("XfF");
      doubleMetaphone0.isDoubleMetaphoneEqual(" ; [1Z42DF:6D5Q", " ; [1Z42DF:6D5Q", false);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-3686));
      doubleMetaphone0.doubleMetaphone("+cE");
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('n');
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('n');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('(');
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      String string0 = "OM";
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("OM");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode((Object) "4uQ6@c");
      try { 
        doubleMetaphone0.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      DoubleMetaphone.contains("", 0, 0, stringArray0);
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "zT\")[-A,M/o";
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "zT\")[-A,M/o");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      int int0 = 0;
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone0.setMaxCodeLen(152);
      String string0 = "oJ&<e:[R+H--$_>$9";
      doubleMetaphone_DoubleMetaphoneResult0.append("oJ&<e:[R+H--$_>$9", "s'nv&>NN'UlutH!!.%");
      doubleMetaphone0.setMaxCodeLen(67);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('>');
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", (String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode("");
      String string0 = doubleMetaphone0.doubleMetaphone("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "org.apache.commons.codec.EncoderException";
      int int0 = (-3413);
      doubleMetaphone0.charAt("org.apache.commons.codec.EncoderException", (-3413));
      DoubleMetaphone doubleMetaphone1 = null;
      int int1 = (-1257);
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      try { 
        doubleMetaphone2.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode((Object) "gw{");
      String string0 = "NE0";
      doubleMetaphone0.encode((Object) "NE0");
      doubleMetaphone0.doubleMetaphone("GAo<");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      String[] stringArray0 = null;
      doubleMetaphone0.doubleMetaphone((String) null);
      // Undeclared exception!
      try { 
        DoubleMetaphone.contains("]5T3V", 0, 0, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      String string0 = "_jf<-l>>ui3`t";
      String[] stringArray0 = new String[3];
      String string1 = "";
      stringArray0[0] = "";
      stringArray0[1] = "_jf<-l>>ui3`t";
      stringArray0[2] = "_jf<-l>>ui3`t";
      DoubleMetaphone.contains("_jf<-l>>ui3`t", (-35), 66, stringArray0);
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone("G0xXsX/Elh2z");
      doubleMetaphone0.encode("_jf<-l>>ui3`t");
      doubleMetaphone0.encode((Object) "_jf<-l>>ui3`t");
      String string2 = "";
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.getMaxCodeLen();
      String string0 = "";
      doubleMetaphone0.encode((Object) "");
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone("", false);
      doubleMetaphone0.doubleMetaphone("hUY|IvC/5#");
      doubleMetaphone0.encode("hUY|IvC/5#");
      doubleMetaphone0.isDoubleMetaphoneEqual("hUY|IvC/5#", "hUY|IvC/5#");
      doubleMetaphone0.setMaxCodeLen((-1308));
      assertEquals((-1308), doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.getMaxCodeLen();
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("qZ{a", "org.apache.commons.codec.EncoderException", false);
      assertFalse(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("#2M8~");
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('U');
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      int int0 = (-1889);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1889));
      doubleMetaphone_DoubleMetaphoneResult0.append('~');
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      char char0 = '*';
      try { 
        doubleMetaphone0.encode((Object) doubleMetaphone_DoubleMetaphoneResult0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      String string0 = doubleMetaphone0.encode("o},Blel_");
      assertNotNull(string0);
      assertEquals("APLL", string0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("");
      doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "{ZdOf{v)";
      doubleMetaphone0.encode("{ZdOf{v)");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-17));
      doubleMetaphone_DoubleMetaphoneResult0.append('6', '6');
      doubleMetaphone_DoubleMetaphoneResult0.append('h', 'h');
      doubleMetaphone0.doubleMetaphone("STFF");
      doubleMetaphone0.setMaxCodeLen(2421);
      doubleMetaphone_DoubleMetaphoneResult0.append('h');
      doubleMetaphone0.doubleMetaphone("{ZdOf{v)", true);
      doubleMetaphone0.isDoubleMetaphoneEqual("MACHER", "STF");
      String string1 = null;
      String string2 = "v1$f0";
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("STFF");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(0);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('1');
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('_');
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("n\"s]`97#!O&S;voT");
      doubleMetaphone_DoubleMetaphoneResult0.append('Y', '');
      doubleMetaphone0.encode((Object) "n\"s]`97#!O&S;voT");
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(10);
      doubleMetaphone_DoubleMetaphoneResult0.append(')');
      doubleMetaphone_DoubleMetaphoneResult0.append('J');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('g');
      char char0 = '*';
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.appendAlternate((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "";
      String string1 = "org.apache.commons.codec.EncoderException";
      doubleMetaphone0.setMaxCodeLen((-644));
      boolean boolean0 = false;
      doubleMetaphone0.setMaxCodeLen(1);
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", (String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone("M/>}IYCae`)ve,2.t<H", true);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1));
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.isDoubleMetaphoneEqual("G w=%`", "G w=%`", false);
      String string0 = null;
      doubleMetaphone0.isDoubleMetaphoneEqual("^Z ", (String) null);
      String string1 = null;
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, (String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.append('X');
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      doubleMetaphone0.isDoubleMetaphoneEqual("HARIS", "HARIS");
      doubleMetaphone0.setMaxCodeLen(0);
      doubleMetaphone0.doubleMetaphone("");
      doubleMetaphone0.doubleMetaphone("");
      try { 
        doubleMetaphone0.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      int int0 = 0;
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      String string0 = "6s}|no8";
      doubleMetaphone_DoubleMetaphoneResult0.append('p', '4');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("");
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      doubleMetaphone_DoubleMetaphoneResult0.append('`');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('p');
      doubleMetaphone0.encode("6s}|no8");
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("6s}|no8");
      String string1 = "I ^:TYn\\<`XZA";
      doubleMetaphone_DoubleMetaphoneResult0.append("I ^:TYn<`XZA");
      doubleMetaphone0.isDoubleMetaphoneEqual("6s}|no8", "I ^:TYn<`XZA", true);
      doubleMetaphone0.charAt("I ^:TYn<`XZA", 0);
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "x 2olO_]ITt8d^b:YZ", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }
}
