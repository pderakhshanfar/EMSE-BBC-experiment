/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 06 01:12:42 GMT 2021
 */

package org.apache.commons.codec.language;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.codec.language.DoubleMetaphone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DoubleMetaphone_ESTest extends DoubleMetaphone_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("!CcE");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("X", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("McHR2ONbA6p");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("MKRN", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "h@46?USOyrV7!";
      stringArray0[1] = "";
      boolean boolean0 = DoubleMetaphone.contains("{CaB{=sYYm27KrQV*;5", 0, 0, stringArray0);
      assertEquals(2, stringArray0.length);
      assertTrue(boolean0);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("WRE;$:$@GLI_!JD` %S", "WRE;$:$@GLI_!JD` %S");
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("DANGIER");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TNJ", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("$:$I+dfglI_!jD` %S", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TFKL", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("WRICCE");
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("RX", string1);
      assertNotNull(string1);
      
      char char0 = doubleMetaphone0.charAt(" [(!wx", 84);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      String string2 = doubleMetaphone0.doubleMetaphone("$:$I+dfglI_!jD` %S", true);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TFLJ", string2);
      assertNotNull(string2);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("941)`dLcHSFB%wb", "t*94dfa]\"=u*S!#mf ");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.encode("PNWZRJOSE");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NSRJ", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("KhNCHAE");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KNK", string0);
      assertNotNull(string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string0 = doubleMetaphone1.doubleMetaphone("CHIA");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("K", string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone1.encode("KNCHAE");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("NK", string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string1);
      
      String string2 = doubleMetaphone1.encode("KNPNRWNOYGHMOK]W*_7]J");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("NPNR", string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string2);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("V", (String) null);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = "TTZa3[l#pmy& Z";
      String string1 = doubleMetaphone0.doubleMetaphone("TTZa3[l#pmy& Z", true);
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TSLP", string1);
      assertNotNull(string1);
      
      int int0 = 2147483645;
      doubleMetaphone0.setMaxCodeLen(2147483645);
      assertEquals(2147483645, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = "'0v}l/nSIn";
      // Undeclared exception!
      doubleMetaphone0.doubleMetaphone("'0v}l/nSIn", true);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "CI", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKP", string0);
      assertNotNull(string0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("C|(wS c~sE {B,!u8!", "B-");
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      String string1 = doubleMetaphone0.doubleMetaphone(">3+{J`iGhd|", false);
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("JT", string1);
      assertNotNull(string1);
      
      char char0 = doubleMetaphone0.charAt("org.apache.commons.codec.EncoderException", 382);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      char char1 = doubleMetaphone0.charAt("CC", 382);
      assertTrue(char1 == char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char1);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = ">3+{J`iGhd|";
      stringArray0[1] = ">3+{J`iGhd|";
      stringArray0[2] = "CC";
      stringArray0[3] = "org.apache.commons.codec.EncoderException";
      stringArray0[4] = ">3+{J`iGhd|";
      stringArray0[5] = "C|(wS c~sE {B,!u8!";
      stringArray0[6] = "CHORE";
      stringArray0[7] = "org.apache.commons.codec.EncoderException";
      boolean boolean2 = DoubleMetaphone.contains("CC", 382, 8, stringArray0);
      assertEquals(8, stringArray0.length);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("geY[:C]]8+", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KK", string0);
      assertNotNull(string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("geY[:C]]8+", "org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("-HaGH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", string0);
      assertNotNull(string0);
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "-HaGH";
      stringArray0[2] = "";
      stringArray0[3] = "-HaGH";
      stringArray0[4] = "";
      stringArray0[5] = "";
      boolean boolean0 = DoubleMetaphone.contains("", (-703), (-703), stringArray0);
      assertEquals(6, stringArray0.length);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("B-AgHlH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PL", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("YSL");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AL", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.encode("PSHEIM");
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SM", string1);
      assertNotNull(string1);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone((String) null, true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string1);
      
      String string2 = doubleMetaphone0.encode("V|Uz%t");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FST", string2);
      assertNotNull(string2);
      
      String string3 = doubleMetaphone0.doubleMetaphone("IN", true);
      assertFalse(string3.equals((Object)string2));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AN", string3);
      assertNotNull(string3);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "%'%+>BlkYC GlD");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("iGnC]Xu3Y.hfKM4Yb");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AKNK", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("FR\"7}@@X_", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FRKS", string0);
      assertNotNull(string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string1 = doubleMetaphone1.doubleMetaphone("KNWRWR^UGHMM]KVWG*_7GDT");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("NRRF", string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string1);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("GNOGHA=*R-$M$");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NKRM", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("OgHa=*r-$M$");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AKRM", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("iGn{gu3Y.hiMYb");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AKNK", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("PZdgEs##},cM");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PSJS", string0);
      assertNotNull(string0);
      
      char char0 = doubleMetaphone0.charAt("V", (-1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("PSCI");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S", string0);
      assertNotNull(string0);
      
      String string1 = "dNO8V,,Z+-I\\";
      Object object0 = new Object();
      assertNotNull(object0);
      
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("CHORCE");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KRS", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone(";- jkdLLZsO");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KTLS", string0);
      assertNotNull(string0);
      
      char char0 = doubleMetaphone0.charAt(";- jkdLLZsO", 1600);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("69U7qBw<]K=qHbV", "org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("69U7qBw<]K=qHbV", "[Z");
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      String string0 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKP", string0);
      assertNotNull(string0);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("69U7qBw<]K=qHbV", "[Z");
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      
      doubleMetaphone0.setMaxCodeLen(111);
      assertEquals(111, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("SA", "69U7qBw<]K=qHbV");
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertEquals(111, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean3);
      
      Object object0 = doubleMetaphone0.encode((Object) "[Z");
      assertFalse(object0.equals((Object)string0));
      assertEquals(111, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S", object0);
      assertNotNull(object0);
      
      boolean boolean4 = doubleMetaphone0.isDoubleMetaphoneEqual("W*T_b", "8f70[j-\"sl-!/&GEtl", false);
      assertTrue(boolean4 == boolean1);
      assertTrue(boolean4 == boolean2);
      assertTrue(boolean4 == boolean3);
      assertTrue(boolean4 == boolean0);
      assertEquals(111, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean4);
      
      String string1 = doubleMetaphone0.doubleMetaphone("69U7qBw<]K=qHbV", true);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)object0));
      assertEquals(111, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KPKKPF", string1);
      assertNotNull(string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("W*T_b", true);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)object0));
      assertFalse(string2.equals((Object)string0));
      assertEquals(111, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TP", string2);
      assertNotNull(string2);
      
      boolean boolean5 = doubleMetaphone0.isDoubleMetaphoneEqual("69U7qBw<]K=qHbV", "W*T_b");
      assertTrue(boolean5 == boolean4);
      assertTrue(boolean5 == boolean1);
      assertTrue(boolean5 == boolean2);
      assertTrue(boolean5 == boolean3);
      assertTrue(boolean5 == boolean0);
      assertEquals(111, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean5);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("K4!QJ ", "WRG");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("WRG", "v1c}0n}&+;Ffm[e");
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      String string0 = doubleMetaphone0.doubleMetaphone("PS^UGHMM]KVWG}*_7GDT", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SKMK", string0);
      assertNotNull(string0);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("CG", "g[h{6l,a");
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "v1c}0n}&+;Ffm[e";
      boolean boolean3 = DoubleMetaphone.contains(":r]\"2sE/6#IiDs", 3002, (-1438), stringArray0);
      assertEquals(1, stringArray0.length);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3);
      
      boolean boolean4 = doubleMetaphone0.isDoubleMetaphoneEqual("v1c}0n}&+;Ffm[e", "PS^UGHMM]KVWG}*_7GDT");
      assertTrue(boolean4 == boolean1);
      assertTrue(boolean4 == boolean3);
      assertTrue(boolean4 == boolean0);
      assertTrue(boolean4 == boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean4);
      
      boolean boolean5 = DoubleMetaphone.contains("WRG", (-1438), 3002, stringArray0);
      assertEquals(1, stringArray0.length);
      assertTrue(boolean5 == boolean0);
      assertTrue(boolean5 == boolean3);
      assertTrue(boolean5 == boolean2);
      assertTrue(boolean5 == boolean1);
      assertTrue(boolean5 == boolean4);
      assertFalse(boolean5);
      
      try { 
        doubleMetaphone0.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("R^UGHMM]KLG}*_7DT");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("RFMK", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("x5\"CaY?{}ZZoAV3");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SKSF", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("B-ACHlH", "B-ACHlH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("WRWICZ");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("RTS", string0);
      assertNotNull(string0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("WRWICZ");
      assertTrue(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("RTS", string1);
      assertNotNull(string1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("CZ", "aIS");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("zGN](T;o JC");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SNTJ", string0);
      assertNotNull(string0);
      
      Object object0 = doubleMetaphone0.encode((Object) "aIS");
      assertFalse(object0.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("A", object0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("'gjDcO*W@ud)W%%,2", "DG");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("PNUMB", "KNWR^UGHMM]KVLG}*_7GDT");
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("|>5mBBvH~Kx#WW", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("MPFK", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string1);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("gHa=r-$M?$");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KRM", string0);
      assertNotNull(string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string1 = "OGGI";
      Object object0 = doubleMetaphone1.encode((Object) "OGGI");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("AJ", object0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "AJ");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(object1.equals((Object)string1));
      assertFalse(object1.equals((Object)string0));
      assertTrue(object1.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AJ", object1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotNull(object1);
      
      String string2 = doubleMetaphone0.encode("00.p");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)object0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)object1));
      assertFalse(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("P", string2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotNull(string2);
      
      String string3 = doubleMetaphone0.encode("gHa=r-$M?$");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string3.equals((Object)string2));
      assertTrue(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)object0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)object1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KRM", string3);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotNull(string3);
      
      String string4 = doubleMetaphone0.doubleMetaphone("Ojcly;::9:/>", true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)object0));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)object1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AJKL", string4);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotNull(string4);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("KRM", "gHa=r-$M?$");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("00.p", "OGGI");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      Object object2 = new Object();
      assertNotNull(object2);
      
      try { 
        doubleMetaphone1.encode(object2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("GNPVV5$D`55F4V1[0%B", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NPFT", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("zGN](T;o JC");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SNTJ", string0);
      assertNotNull(string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("SNTJ", "F a");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("`!yAJo");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("J", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("UCCEnE");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AXN", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("UCCEnE");
      assertTrue(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AXN", string1);
      assertNotNull(string1);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("ILL", "ILL");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("ILL", "ILL");
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("ILL", "ILL");
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean2);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(90);
      assertEquals(90, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("bcs';x|-:qq=", false);
      assertEquals(90, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PKSKSK", string0);
      assertNotNull(string0);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "bcs';x|-:qq=";
      stringArray0[1] = "bcs';x|-:qq=";
      stringArray0[2] = "bcs';x|-:qq=";
      boolean boolean0 = DoubleMetaphone.contains("PKSKSK", 2940, 1454, stringArray0);
      assertEquals(3, stringArray0.length);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("PN");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("N", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.encode("GNGNN<XPG^W+");
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NKNN", string1);
      assertNotNull(string1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("WROGY", "^@upDG,rY'S/");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "PN";
      stringArray0[1] = "GNGNN<XPG^W+";
      stringArray0[2] = "NKNN";
      stringArray0[3] = "WROGY";
      stringArray0[4] = ")";
      stringArray0[5] = "N";
      stringArray0[6] = "^@upDG,rY'S/";
      stringArray0[7] = "44A;~YP; ";
      boolean boolean1 = DoubleMetaphone.contains(")", 2, 1, stringArray0);
      assertEquals(8, stringArray0.length);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      Object object0 = doubleMetaphone2.encode((Object) "|pPa`A;c00tm");
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("PKTM", object0);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotNull(object0);
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertNotNull(doubleMetaphone3);
      
      boolean boolean0 = doubleMetaphone3.isDoubleMetaphoneEqual("DhB7'<EgYi;XVA5[q;2", "");
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      doubleMetaphone0.setMaxCodeLen(1107);
      assertEquals(1107, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("@;2a'8w>#WU,Z)Z*");
      assertEquals(1107, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SS", string0);
      assertNotNull(string0);
      
      char char0 = doubleMetaphone0.charAt("WR^UGHMM]KVLG}*_7GDT", 4);
      assertEquals(1107, doubleMetaphone0.getMaxCodeLen());
      assertEquals('G', char0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("WR^UGHMM]KVLG}*_7GDT", false);
      assertFalse(string1.equals((Object)string0));
      assertEquals(1107, doubleMetaphone0.getMaxCodeLen());
      assertEquals("RFMKFLKKT", string1);
      assertNotNull(string1);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("t2", "t2", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string0 = doubleMetaphone0.encode("aXIx)D(WA c&7mTn]");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AKSK", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.encode("PNJOSE");
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NJS", string1);
      assertNotNull(string1);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("TN#Eh=:W,}MWS>>", ";plYTmw'3aa");
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      String string0 = doubleMetaphone0.encode("^UGHmM]KvLg}*_7GDt");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KMKF", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(67);
      assertEquals(67, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = null;
      String string1 = doubleMetaphone0.doubleMetaphone((String) null, true);
      assertEquals(67, doubleMetaphone0.getMaxCodeLen());
      assertNull(string1);
      
      String string2 = doubleMetaphone0.encode("<NtO((w");
      assertEquals(67, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NT", string2);
      assertNotNull(string2);
      
      Object object0 = doubleMetaphone0.encode((Object) "NT");
      assertTrue(object0.equals((Object)string2));
      assertEquals(67, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NT", object0);
      assertNotNull(object0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("gHy_^F2,v1Z-]q&to", "<NtO((w");
      assertEquals(67, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      doubleMetaphone0.setMaxCodeLen(67);
      assertEquals(67, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone((String) null);
      assertEquals(67, doubleMetaphone0.getMaxCodeLen());
      assertNull(string3);
      
      String string4 = doubleMetaphone0.doubleMetaphone("Ju*/DH<!@G6fZ4Q-", true);
      assertFalse(string4.equals((Object)object0));
      assertFalse(string4.equals((Object)string2));
      assertEquals(67, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ATKFSK", string4);
      assertNotNull(string4);
      
      String string5 = doubleMetaphone0.doubleMetaphone("<NtO((w", true);
      assertTrue(string5.equals((Object)object0));
      assertTrue(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string4));
      assertEquals(67, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NT", string5);
      assertNotNull(string5);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("\"O;`C$", "qdzr7u!v5WQIsOc");
      assertTrue(boolean1 == boolean0);
      assertEquals(67, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      int int0 = (-4177984);
      String[] stringArray0 = new String[0];
      boolean boolean2 = DoubleMetaphone.contains("SL", (-4177984), 2998, stringArray0);
      assertEquals(0, stringArray0.length);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      
      int int1 = 2;
      char char0 = doubleMetaphone0.charAt("qdzr7u!v5WQIsOc", 2);
      assertEquals(67, doubleMetaphone0.getMaxCodeLen());
      assertEquals('z', char0);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "dy !gTuZ<-c");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone(">L/Uf3GNRRO?j'b1");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("LFNR", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("CHORE");
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("XR", string1);
      assertNotNull(string1);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("Xw");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("IER");
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("A", string1);
      assertNotNull(string1);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("PSL~: L|V/", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SLLF", string0);
      assertNotNull(string0);
      
      doubleMetaphone0.setMaxCodeLen(199);
      assertEquals(199, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("x%0ZwUlYCIKV~");
      assertFalse(string1.equals((Object)string0));
      assertEquals(199, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SSLSKF", string1);
      assertNotNull(string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", true);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(199, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKPKKMNSKTKNKTRKSPXN", string2);
      assertNotNull(string2);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("GNGWL=*", "%& ", false);
      assertEquals(199, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(199, doubleMetaphone0.getMaxCodeLen());
      assertEquals(199, int0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      Object object0 = doubleMetaphone0.encode((Object) "GNL~: L|V/");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(object0.equals((Object)string2));
      assertFalse(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string0));
      assertEquals(199, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NLLF", object0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone1.encode((Object) "NLLF");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(object1.equals((Object)string0));
      assertFalse(object1.equals((Object)string1));
      assertFalse(object1.equals((Object)string2));
      assertFalse(object1.equals((Object)object0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("NLF", object1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(object1);
      
      Object object2 = doubleMetaphone0.encode((Object) "NLF");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(object2.equals((Object)object0));
      assertTrue(object2.equals((Object)object1));
      assertFalse(object2.equals((Object)string2));
      assertFalse(object2.equals((Object)string0));
      assertFalse(object2.equals((Object)string1));
      assertEquals(199, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NLF", object2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotNull(object2);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(121);
      assertEquals(121, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("rR6`Oyy~Z(*K.+})&", false);
      assertEquals(121, doubleMetaphone0.getMaxCodeLen());
      assertEquals("RSK", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKP", string0);
      assertNotNull(string0);
      
      Object object0 = doubleMetaphone0.encode((Object) "GWL=*");
      assertFalse(object0.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KL", object0);
      assertNotNull(object0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "GWL=*", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      String string1 = doubleMetaphone2.doubleMetaphone("CHORE", false);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)object0));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("XR", string1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotNull(string1);
      
      String string2 = doubleMetaphone2.doubleMetaphone((String) null, false);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNull(string2);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(210);
      assertEquals(210, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "CHmR");
      assertEquals(210, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KMR", object0);
      assertNotNull(object0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("CHmR", "W#7#w(vbvkKR_", false);
      assertEquals(210, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("KMR", "CHmR");
      assertFalse(boolean1 == boolean0);
      assertEquals(210, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(506);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('>');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals(">", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone0.doubleMetaphone("mQrT+[U", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("MKRT", string0);
      assertNotNull(string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string1 = doubleMetaphone1.encode("}zdqxC!l-jspl[N,");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("STKK", string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string1);
      
      String string2 = doubleMetaphone1.doubleMetaphone("V-");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("F", string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string2);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("MKRT", "gyzVtb]t ", true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals(4, int0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone((String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string1 = doubleMetaphone1.encode((String) null);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNull(string1);
      
      String string2 = doubleMetaphone1.doubleMetaphone((String) null);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNull(string2);
      
      String string3 = doubleMetaphone0.encode("GNKN");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NKN", string3);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotNull(string3);
      
      String string4 = doubleMetaphone1.doubleMetaphone((String) null, true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNull(string4);
      
      String string5 = doubleMetaphone1.doubleMetaphone(");Y8WO7S?rRZ'gQ", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string5.equals((Object)string3));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("SRTS", string5);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string5);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "R");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(121);
      assertEquals(121, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(121, doubleMetaphone0.getMaxCodeLen());
      assertEquals(121, int0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("%6_:POaYA))B4H@", true);
      assertEquals(121, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PP", string0);
      assertNotNull(string0);
      
      Object object0 = doubleMetaphone0.encode((Object) "PP");
      assertFalse(object0.equals((Object)string0));
      assertEquals(121, doubleMetaphone0.getMaxCodeLen());
      assertEquals("P", object0);
      assertNotNull(object0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("%6_:POaYA))B4H@", true);
      assertTrue(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)object0));
      assertEquals(121, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PP", string1);
      assertNotNull(string1);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("OMupDG,.Y'S/");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AMPT", string0);
      assertNotNull(string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("OMupDG,.Y'S/", "AMPT");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      doubleMetaphone0.setMaxCodeLen(121);
      assertEquals(121, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "CqXw");
      assertFalse(object0.equals((Object)string0));
      assertEquals(121, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KKS", object0);
      assertNotNull(object0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      Object object1 = doubleMetaphone0.encode((Object) "nC`a CUvv");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(object1.equals((Object)string0));
      assertFalse(object1.equals((Object)object0));
      assertEquals(121, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NKKF", object1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotNull(object1);
      
      Object object2 = doubleMetaphone0.encode((Object) "NKKF");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(object2.equals((Object)object0));
      assertFalse(object2.equals((Object)object1));
      assertFalse(object2.equals((Object)string0));
      assertEquals(121, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NKF", object2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotNull(object2);
      
      char char0 = doubleMetaphone1.charAt("OMupDG,.Y'S/", (-1));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals('\u0000', char0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string1 = doubleMetaphone1.doubleMetaphone("NKKF", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(string1.equals((Object)object2));
      assertFalse(string1.equals((Object)object1));
      assertFalse(string1.equals((Object)object0));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("NKF", string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string1);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(209);
      assertEquals(209, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("org.apache.commons.codec.language.DoubleMetaphone");
      assertEquals(209, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKPXKMNSKTKLNKJTPLMTFN", string0);
      assertNotNull(string0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(209, doubleMetaphone0.getMaxCodeLen());
      assertEquals(209, int0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("ARKPXKMNSKTKLNKJTPLMTFN", false);
      assertFalse(string1.equals((Object)string0));
      assertEquals(209, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKPKSKMNSKTKLNKTPLMTFN", string1);
      assertNotNull(string1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("LGlamA_#=[h6FT]", "SUGAR", true);
      assertEquals(209, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(121);
      assertEquals(121, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("WRSIAX", false);
      assertEquals(121, doubleMetaphone0.getMaxCodeLen());
      assertEquals("RSKS", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(209);
      assertEquals(209, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("-@4;}4#*RSO^k0.AFf", false);
      assertEquals(209, doubleMetaphone0.getMaxCodeLen());
      assertEquals("RSKF", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("FX");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKS", string0);
      assertNotNull(string0);
      
      doubleMetaphone0.setMaxCodeLen(209);
      assertEquals(209, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("org.apache.commons.codec.EncoderException");
      assertFalse(string1.equals((Object)string0));
      assertEquals(209, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKPXKMNSKTKNKTRKSPXN", string1);
      assertNotNull(string1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "ARKPXKMNSKTKNKTRKSPXN");
      assertEquals(209, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(209, doubleMetaphone0.getMaxCodeLen());
      assertEquals(209, int0);
      
      String string2 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      assertTrue(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(209, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKPXKMNSKTKNKTRKSPXN", string2);
      assertNotNull(string2);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("zBnF!t@");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SPNF", string0);
      assertNotNull(string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-3163));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual(">sV) llY^_Xb;f'>", "Ny$1=O58Ea\"P");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("WICZ", false);
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AKS", string1);
      assertNotNull(string1);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("AKS", "h!lz}oNN7%F]1~YWq");
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("+)9:AuwjKSj@\"4B", "+)9:AuwjKSj@\"4B");
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean2);
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("X", "K");
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean3);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode(";?%@>`Yf`iA;Q1H3Br");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKPR", string0);
      assertNotNull(string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("P", "P", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("FKPR", true);
      assertTrue(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKPR", string1);
      assertNotNull(string1);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("*$Pj,n", "FKPR", true);
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string2 = doubleMetaphone1.encode("i/");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("A", string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string2);
      
      String string3 = doubleMetaphone1.encode("*$Pj,n");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("PJN", string3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string3);
      
      boolean boolean2 = doubleMetaphone1.isDoubleMetaphoneEqual("*$Pj,n", "F");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("*$Pj,n", "ZPgN\u0002QI4 Y)0Ss,G", true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean3);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      boolean boolean4 = doubleMetaphone0.isDoubleMetaphoneEqual("FKPR", "SVRE");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean4 == boolean3);
      assertTrue(boolean4 == boolean2);
      assertFalse(boolean4 == boolean0);
      assertTrue(boolean4 == boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean4);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      boolean boolean5 = doubleMetaphone1.isDoubleMetaphoneEqual("FKPR", "F");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean5 == boolean4);
      assertTrue(boolean5 == boolean3);
      assertTrue(boolean5 == boolean1);
      assertFalse(boolean5 == boolean0);
      assertTrue(boolean5 == boolean2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean5);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("O");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("A", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("A", true);
      assertTrue(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("A", string1);
      assertNotNull(string1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      doubleMetaphone0.setMaxCodeLen((-2862));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals((-2862), doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      String string2 = doubleMetaphone1.doubleMetaphone("O");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(string2.equals((Object)string1));
      assertTrue(string2.equals((Object)string0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("A", string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string2);
      
      Object object1 = doubleMetaphone1.encode((Object) "j");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(object1.equals((Object)string1));
      assertFalse(object1.equals((Object)string2));
      assertFalse(object1.equals((Object)string0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("J", object1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(object1);
      
      Object object2 = doubleMetaphone1.encode((Object) "J");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(object2.equals((Object)object1));
      assertFalse(object2.equals((Object)string0));
      assertFalse(object2.equals((Object)string2));
      assertFalse(object2.equals((Object)string1));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("J", object2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(object2);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals((-2862), doubleMetaphone0.getMaxCodeLen());
      assertEquals((-2862), int0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen((-54422992));
      assertEquals((-54422992), doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "SH";
      // Undeclared exception!
      try { 
        doubleMetaphone0.doubleMetaphone("SH");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("org.apache.commons.codec.EncoderException", "FWV*B");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("F", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("o", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('!');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("F", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("o", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone0.encode("Sip<R3");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SPR", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("WRACH", true);
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("RK", string1);
      assertNotNull(string1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string2 = doubleMetaphone1.encode("T");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("T", string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string2);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("mQrT+[U", "AN");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals(4, int0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone_DoubleMetaphoneResult1.appendAlternate('N');
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string0 = doubleMetaphone0.encode("SIAN");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SN", string0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotNull(string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("SN", "SN", true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "ED", true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("zBnF!t@");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SPNF", string0);
      assertNotNull(string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-3163));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string1 = doubleMetaphone0.encode("&'6~k-iNc;d3J!");
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KNKT", string1);
      assertNotNull(string1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("UMB", "+DAb#WMubyzz,V", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult((-3163));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult2 = doubleMetaphone0.new DoubleMetaphoneResult((-3163));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult2);
      
      String string2 = doubleMetaphone_DoubleMetaphoneResult1.getAlternate();
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", string2);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult2);
      assertNotNull(string2);
      
      String string3 = doubleMetaphone0.doubleMetaphone("zBnF!t@");
      assertFalse(string3.equals((Object)string2));
      assertTrue(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SPNF", string3);
      assertNotNull(string3);
      
      try { 
        doubleMetaphone0.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("HEM");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("HM", string0);
      assertNotNull(string0);
      
      doubleMetaphone0.setMaxCodeLen(78);
      assertEquals(78, doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "|tZLo%nT _\u0005^kZ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) "+-*J.Lb@{8l)OBQp");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("JLPL", object0);
      assertNotNull(object0);
      
      String string0 = doubleMetaphone0.encode("1({^g%1C]a");
      assertFalse(string0.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KK", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.encode("PSAL");
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SL", string1);
      assertNotNull(string1);
      
      String string2 = doubleMetaphone0.encode("1({^g%1C]a");
      assertFalse(string2.equals((Object)string1));
      assertTrue(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KK", string2);
      assertNotNull(string2);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string3 = doubleMetaphone1.encode("m");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)object0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("M", string3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string3);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("q2q<'.{1Qo", "q2q<'.{1Qo", false);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String string4 = doubleMetaphone1.encode(";Mx<^");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)object0));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("MKS", string4);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string4);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("q2q<'.{1Qo", "KNALLE", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("KNHEM", "KNHEM", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("qz@/a020adEC", "TCH");
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      String string0 = doubleMetaphone0.doubleMetaphone("WH", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("A", string0);
      assertNotNull(string0);
      
      char char0 = doubleMetaphone0.charAt("!<1'T.", 1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('<', char0);
      
      doubleMetaphone0.setMaxCodeLen(147);
      assertEquals(147, doubleMetaphone0.getMaxCodeLen());
      
      char char1 = doubleMetaphone0.charAt("KNHEM", (-2359));
      assertFalse(char1 == char0);
      assertEquals(147, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char1);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(147, doubleMetaphone0.getMaxCodeLen());
      assertEquals(147, int0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual(",rU};]y{", ",rU};]y{", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("KN", ",rU};]y{");
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      Object object0 = doubleMetaphone0.encode((Object) "BB");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("P", object0);
      assertNotNull(object0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "nd=O13X9F\"Z^jx(ZD3";
      stringArray0[1] = "BB";
      stringArray0[2] = "nd=O13X9F\"Z^jx(ZD3";
      stringArray0[3] = "nd=O13X9F\"Z^jx(ZD3";
      stringArray0[4] = "BB";
      boolean boolean2 = DoubleMetaphone.contains("nd=O13X9F\"Z^jx(ZD3", 0, 0, stringArray0);
      assertEquals(5, stringArray0.length);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      
      boolean boolean3 = DoubleMetaphone.contains("GNPNORG.APACHE.COMMONS.CODEC.ENCODEREXCEPTION", 0, 209, stringArray0);
      assertEquals(5, stringArray0.length);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(121);
      assertEquals(121, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      String string0 = doubleMetaphone2.encode("CEE");
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("S", string0);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone1.encode("HE?g!oY");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("HK", string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string1);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("PNUCCEE", "CC", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string2 = doubleMetaphone2.encode("");
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNull(string2);
      
      boolean boolean1 = doubleMetaphone2.isDoubleMetaphoneEqual("]h3\"GYLu", "HK", false);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("OMupDG,.Y'S/");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AMPT", string0);
      assertNotNull(string0);
      
      doubleMetaphone0.setMaxCodeLen(121);
      assertEquals(121, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string1 = doubleMetaphone1.encode("org.apache.commons.codec.EncoderException");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("ARKP", string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string1);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("TH", "UCCEE");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals(4, int0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(209);
      assertEquals(209, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("ISm", "G", false);
      assertEquals(209, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("ISm", true);
      assertEquals(209, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ASM", string0);
      assertNotNull(string0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("WRV'BKEUZHZZ[~YX!B", "xuPhMA/v");
      assertTrue(boolean1 == boolean0);
      assertEquals(209, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone_DoubleMetaphoneResult1.appendAlternate('N');
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string0 = doubleMetaphone0.encode("SIAN");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SN", string0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotNull(string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("W1@H(l`", ".%VpE6=ch1A2f", true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode((String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("GDfNZ9M", (String) null, true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(531);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("KNSCH", "VAN ", false);
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(531);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult2 = doubleMetaphone0.new DoubleMetaphoneResult(75);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult2);
      
      String string1 = doubleMetaphone_DoubleMetaphoneResult1.getAlternate();
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", string1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult2);
      assertNotNull(string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("PNP");
      assertFalse(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NP", string2);
      assertNotNull(string2);
      
      Object object0 = doubleMetaphone0.encode((Object) "f2*!a4");
      assertFalse(object0.equals((Object)string2));
      assertFalse(object0.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("F", object0);
      assertNotNull(object0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      boolean boolean2 = doubleMetaphone1.isDoubleMetaphoneEqual("VAN ", "W", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      Object object1 = new Object();
      assertNotNull(object1);
      
      try { 
        doubleMetaphone0.encode((Object) doubleMetaphone_DoubleMetaphoneResult2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("R\"fi<[J@", "CZ", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      String string0 = doubleMetaphone0.encode("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("R\"fi<[J@", (String) null, false);
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      String string1 = doubleMetaphone0.doubleMetaphone("WICZ");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AKS", string1);
      assertNotNull(string1);
      
      Object object0 = doubleMetaphone0.encode((Object) "");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(object0);
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "R\"fi<[J@";
      stringArray0[1] = "<&Wtx.~`BS";
      stringArray0[2] = "A";
      stringArray0[3] = "R\"fi<[J@";
      stringArray0[4] = "CZ";
      stringArray0[5] = "<&Wtx.~`BS";
      stringArray0[6] = "";
      stringArray0[7] = "CZ";
      stringArray0[8] = "<&Wtx.~`BS";
      boolean boolean2 = DoubleMetaphone.contains("<&Wtx.~`BS", 4, 849, stringArray0);
      assertEquals(9, stringArray0.length);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode(";?%@>`Yf`iA;Q1H3Br");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKPR", string0);
      assertNotNull(string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("P", "P", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(10);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("JOSE", true);
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("HS", string1);
      assertNotNull(string1);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("k+1z2[sYw");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KSS", string0);
      assertNotNull(string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("WRT=HTN:02BKP(Y", "k+1z2[sYw", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(10);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("~z]");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("~z]", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("EE", "~z]");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("~z]~z]", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("EE", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string1 = doubleMetaphone0.encode("k+1z2[sYw");
      assertTrue(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KSS", string1);
      assertNotNull(string1);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("bLH=n)", "RGY", false);
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) ";?%@>`Yf`iA;Q1H3Br");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKPR", object0);
      assertNotNull(object0);
      
      String string0 = doubleMetaphone0.encode("@J>^G3d6k?OJA.r%");
      assertFalse(string0.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("JKTK", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.encode(" Q");
      assertFalse(string1.equals((Object)object0));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("K", string1);
      assertNotNull(string1);
      
      String string2 = doubleMetaphone0.encode(" Q");
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)object0));
      assertTrue(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("K", string2);
      assertNotNull(string2);
      
      String string3 = doubleMetaphone0.encode("C1/[`i>I=($.Z-s-");
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)object0));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KSS", string3);
      assertNotNull(string3);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "KSS", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string4 = doubleMetaphone0.encode("o_;RQ/");
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)object0));
      assertFalse(string4.equals((Object)string2));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARK", string4);
      assertNotNull(string4);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("ww\"Tj?T=rsSs", ";Mx<^", false);
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("4");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.encode((String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string1);
      
      String string2 = doubleMetaphone0.encode((String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string2);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("PSCK", "WZBNF!T@", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string3 = doubleMetaphone0.encode("<");
      assertTrue(string3.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", string3);
      assertNotNull(string3);
      
      String string4 = doubleMetaphone0.encode("SIAN");
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SN", string4);
      assertNotNull(string4);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual(".%VpE6=ch1A2f", "W1@H(l`", true);
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("R\"fi<[J@", "", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("PSC", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SK", string0);
      assertNotNull(string0);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "PSC", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKP", string0);
      assertNotNull(string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-3163));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('!');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string1 = doubleMetaphone0.encode("F");
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("F", string1);
      assertNotNull(string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string2);
      
      String string3 = doubleMetaphone0.encode("DT");
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("T", string3);
      assertNotNull(string3);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string4 = doubleMetaphone0.encode("mQrT+[U");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("MKRT", string4);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotNull(string4);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("CZ", "");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals(4, int0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) "O");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("A", object0);
      assertNotNull(object0);
      
      String string0 = doubleMetaphone0.encode("P");
      assertFalse(string0.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("P", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.encode((String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string1);
      
      String string2 = doubleMetaphone0.encode("WWX7&");
      assertFalse(string2.equals((Object)object0));
      assertFalse(string2.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KS", string2);
      assertNotNull(string2);
      
      String string3 = doubleMetaphone0.encode((String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string3);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("#z-4cmK!;3<", "O", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string4 = doubleMetaphone0.encode("WITZ");
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)object0));
      assertFalse(string4.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ATS", string4);
      assertNotNull(string4);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("PoP*kdm", (String) null, false);
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertTrue(int1 == int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int1);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = "BdRoWzY\"ez{dxWbZ|";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("BdRoWzY\"ez{dxWbZ|", "BdRoWzY\"ez{dxWbZ|");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      doubleMetaphone0.setMaxCodeLen((-28766209));
      assertEquals((-28766209), doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("BdRoWzY\"ez{dxWbZ|", (-28766209));
      assertEquals((-28766209), doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      String string1 = "CAESAR";
      int int0 = 0;
      // Undeclared exception!
      try { 
        doubleMetaphone0.encode((Object) "BdRoWzY\"ez{dxWbZ|");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(39);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual(" Q", " Q");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertTrue(boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("OGGI", "RFJ", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('t');
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("t", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      // Undeclared exception!
      try { 
        doubleMetaphone1.isDoubleMetaphoneEqual("", "ORCHES", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-52));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("LBPhYcc0e\"0f&s%v", "a", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("a");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("A", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(121);
      assertEquals(121, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string0 = doubleMetaphone1.doubleMetaphone("XJ3");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("SJ", string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(121, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("XJ3");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(121, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("X", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("GWL=*");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(121, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("X", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals(4, int0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual(";W", "n2PGVM@\"Gqj!])6?e%(");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) "GWL=*");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(object0.equals((Object)string0));
      assertEquals(121, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KL", object0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotNull(object0);
      
      char char0 = doubleMetaphone1.charAt("SJ", 121);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals('\u0000', char0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('c');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("=q<S}\"mV");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("=MeM-", "ACH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("=q<S}\"mV", "ACH", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.encode("jn^8M0dsDT<");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("JNMT", string0);
      assertNotNull(string0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("rdr;.F(kou0", "ISL", true);
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("4");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.encode((String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string1);
      
      String string2 = doubleMetaphone0.encode((String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string2);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("PSCK", "WZBNF!T@", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(67);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string3 = doubleMetaphone0.doubleMetaphone("O");
      assertFalse(string3.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("A", string3);
      assertNotNull(string3);
      
      String string4 = doubleMetaphone0.doubleMetaphone("Y");
      assertTrue(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("A", string4);
      assertNotNull(string4);
      
      char char0 = doubleMetaphone0.charAt("4", 0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('4', char0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("edwH:t|1>-Bv*", "edwH:t|1>-Bv*", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string0 = doubleMetaphone0.encode("j|9qj");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("JKJ", string0);
      assertNotNull(string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("edwH:t|1>-Bv*");
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ATTP", string1);
      assertNotNull(string1);
      
      doubleMetaphone_DoubleMetaphoneResult0.append(']', ']');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("ATTP");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string2 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKP", string2);
      assertNotNull(string2);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("E?6", "");
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string3 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException");
      assertTrue(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKP", string3);
      assertNotNull(string3);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("ARKP", "o>3PPzy,wj|e", false);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("T|*SA7${x", "PNHEM");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      Object object0 = doubleMetaphone0.encode((Object) "T|*SA7${x");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TSKS", object0);
      assertNotNull(object0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string0 = doubleMetaphone1.encode("CZ");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string0.equals((Object)object0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("S", string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string0);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("MANGER", (String) null, false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      Object object1 = new Object();
      assertNotNull(object1);
      
      Object object2 = doubleMetaphone0.encode((Object) "PNHEM");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(object2.equals((Object)object0));
      assertFalse(object2.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NM", object2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotNull(object2);
      
      char char0 = doubleMetaphone0.charAt("M", 84);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(121);
      assertEquals(121, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("XJ3", "nC`a CUvv", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string0 = doubleMetaphone1.encode("org.apache.commons.codec.EncoderException");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("ARKP", string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      try { 
        doubleMetaphone1.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("3");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("3");
      assertTrue(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", string1);
      assertNotNull(string1);
      
      String string2 = "VmwRiG 2L3VAq[VgoBh";
      boolean boolean0 = true;
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("3xkZfe8ymy}1)Ds$]#Z", "VmwRiG 2L3VAq[VgoBh", true);
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      char char0 = 't';
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult((-3683));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      char char1 = '=';
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('=');
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String string3 = "org.apache.commons.codec.EncoderException";
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      try { 
        doubleMetaphone1.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("edwH:t|1>-Bv*", "edwH:t|1>-Bv*", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string0 = doubleMetaphone0.encode("j|9qj");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("JKJ", string0);
      assertNotNull(string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("edwH:t|1>-Bv*");
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ATTP", string1);
      assertNotNull(string1);
      
      doubleMetaphone_DoubleMetaphoneResult0.append(']', ']');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertTrue(boolean1);
      
      String string2 = doubleMetaphone0.encode("edwH:t|1>-Bv*");
      assertTrue(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ATTP", string2);
      assertNotNull(string2);
      
      String string3 = doubleMetaphone0.doubleMetaphone("PNRXWWX7&{<.9)7H,&{T");
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NRKS", string3);
      assertNotNull(string3);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("r");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('K');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(199);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("|2x/}dq");
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("PNRXWWX7&{<.9)7H,&{T", "ch|K9P%6-)e)p");
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      
      char char0 = doubleMetaphone0.charAt("", (-1776));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "1Cp@Z F";
      stringArray0[1] = "|2x/}dq";
      stringArray0[2] = "PNRXWWX7&{<.9)7H,&{T";
      stringArray0[3] = "NRKS";
      stringArray0[4] = "org.apache.commons.codec.EncoderException";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "NRKS";
      boolean boolean3 = DoubleMetaphone.contains("1Cp@Z F", 199, 1261, stringArray0);
      assertEquals(8, stringArray0.length);
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3 == boolean0);
      assertFalse(boolean3);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("a?%@>`Yf`Di;01H3Br");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AFTP", string0);
      assertNotNull(string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("a?%@>`Yf`Di;01H3Br", "a?%@>`Yf`Di;01H3Br", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(531);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string1 = doubleMetaphone0.encode("zY[");
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S", string1);
      assertNotNull(string1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(531);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult2 = doubleMetaphone0.new DoubleMetaphoneResult((-1106));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult2);
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult2.isComplete();
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertTrue(boolean1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      String string2 = doubleMetaphone2.doubleMetaphone("n/");
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("N", string2);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotNull(string2);
      
      String string3 = doubleMetaphone2.doubleMetaphone("pW%Q", true);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("PK", string3);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotNull(string3);
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertNotNull(doubleMetaphone3);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("VR", "UCCEE");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone3));
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone3);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone3));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone3);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) "PNE<.|");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("N", object0);
      assertNotNull(object0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string0 = doubleMetaphone1.encode((String) null);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNull(string0);
      
      String string1 = doubleMetaphone1.encode("3aiqqra!tIB0[}`%32");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)object0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("KRTP", string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string1);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("~z]", "GNSPNF", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(67);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      String string2 = doubleMetaphone1.doubleMetaphone((String) null, true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNull(string2);
      
      String string3 = doubleMetaphone1.doubleMetaphone("WZBNF!T@");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)object0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("SPNF", string3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string3);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      Object object1 = doubleMetaphone2.encode((Object) "SPNF");
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(object1.equals((Object)string1));
      assertFalse(object1.equals((Object)object0));
      assertTrue(object1.equals((Object)string3));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("SPNF", object1);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotNull(object1);
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertNotNull(doubleMetaphone3);
      
      boolean boolean1 = doubleMetaphone2.isDoubleMetaphoneEqual("DouAleMeaphoe encode parameter is not of Yype String", "ER", false);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone2, doubleMetaphone3);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      
      Object object2 = new Object();
      assertNotNull(object2);
      
      Object object3 = doubleMetaphone1.encode((Object) "SPNF");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(object3.equals((Object)string1));
      assertFalse(object3.equals((Object)object0));
      assertTrue(object3.equals((Object)string3));
      assertTrue(object3.equals((Object)object1));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("SPNF", object3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone3);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotNull(object3);
      
      // Undeclared exception!
      try { 
        doubleMetaphone3.charAt((String) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      String string0 = "TH";
      String string1 = doubleMetaphone0.encode("[K5b>c:]4&4j");
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KPKJ", string1);
      assertNotNull(string1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("[K5b>c:]4&4j", "[K5b>c:]4&4j", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string2 = doubleMetaphone0.doubleMetaphone("TH", true);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("T", string2);
      assertNotNull(string2);
      
      String[] stringArray0 = null;
      String string3 = doubleMetaphone0.doubleMetaphone("hU\"{2*Hg");
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("HK", string3);
      assertNotNull(string3);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("TH", "W<Vd@y#<Zdd|");
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      boolean boolean2 = DoubleMetaphone.contains("T", 6, 4, (String[]) null);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      
      String string4 = "J|9Q";
      char char0 = doubleMetaphone0.charAt("J|9Q", (-3435));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      Object object0 = doubleMetaphone0.encode((Object) "J|9Q");
      assertFalse(object0.equals((Object)string3));
      assertFalse(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string4));
      assertFalse(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string2));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("JK", object0);
      assertNotNull(object0);
      
      String string5 = doubleMetaphone0.encode("KNPN");
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)object0));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string4));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NPN", string5);
      assertNotNull(string5);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "xAc4R?)`[PN\"N", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("[)D#({!g]LRdLS");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TKLR", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.encode((String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("~z]", "~z]", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(531);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("VAN ", "", false);
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(531);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult2 = doubleMetaphone0.new DoubleMetaphoneResult(531);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult2);
      
      String string2 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", string2);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult2);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertNotNull(string2);
      
      String string3 = doubleMetaphone0.doubleMetaphone("f2*!a4");
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("F", string3);
      assertNotNull(string3);
      
      Object object0 = doubleMetaphone0.encode((Object) "");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(object0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("^_GHmMzvLg}*_7GDt", "5!yG^XCrHaU]uk)", true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      Object object1 = new Object();
      assertNotNull(object1);
      
      Object object2 = doubleMetaphone1.encode((Object) "");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNull(object2);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      // Undeclared exception!
      try { 
        doubleMetaphone1.charAt((String) null, 2095);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-52));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("5", "5");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("R\"f$i<[J@", "", false);
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      String string0 = doubleMetaphone0.doubleMetaphone("H?~jJ#*", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("J", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("mu.$ l30CKITDb\"h", false);
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("MLKT", string1);
      assertNotNull(string1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("H?~jJ#*", "H?~jJ#*");
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean2);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode(";?%@>`Yf`iA;Q1H3Br");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKPR", string0);
      assertNotNull(string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("FKPR", "~z]", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(531);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate(";");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(";", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append(".;NDM6vc&+", "ACH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(";ACH", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals(".;NDM6vc&+", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string1 = doubleMetaphone0.encode("DD");
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("T", string1);
      assertNotNull(string1);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("RGY", "PSH>2VF,|VE& GF/;", false);
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("_j+4z8>kBlT@gDX$XK", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("JTSK", string0);
      assertNotNull(string0);
      
      String string1 = "KS";
      String string2 = doubleMetaphone0.doubleMetaphone("KS");
      assertFalse(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KS", string2);
      assertNotNull(string2);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("ErdHN;gX.r[o_", "KS");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      int int0 = (-190);
      doubleMetaphone0.setMaxCodeLen((-190));
      assertEquals((-190), doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("KS", "KS");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      int int0 = 531;
      String string0 = doubleMetaphone0.encode(";?%@>`Yf`iA;Q1H3Br");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKPR", string0);
      assertNotNull(string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string1 = "6z[PiJa<j?MN";
      String string2 = doubleMetaphone1.encode("6z[PiJa<j?MN");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("SPJJ", string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string2);
      
      String string3 = "<(O{go #wXN.|hNp";
      String string4 = "";
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("<(O{go #wXN.|hNp", "", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone2.new DoubleMetaphoneResult((-1879));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("FL");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone1.new DoubleMetaphoneResult(0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult2 = doubleMetaphone2.new DoubleMetaphoneResult(906);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult2);
      
      doubleMetaphone_DoubleMetaphoneResult2.appendPrimary('!');
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertEquals("!", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult1);
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertNotNull(doubleMetaphone3);
      
      String string0 = doubleMetaphone3.encode("mQrT+[U");
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertEquals("MKRT", string0);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone1.doubleMetaphone("R!\"Hd07oD!RCx}b", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("RTTR", string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string1);
      
      String string2 = doubleMetaphone1.encode("RTTR");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("RTR", string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string2);
      
      DoubleMetaphone doubleMetaphone4 = new DoubleMetaphone();
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      assertNotNull(doubleMetaphone4);
      
      int int0 = doubleMetaphone2.getMaxCodeLen();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals(4, int0);
      assertNotSame(doubleMetaphone2, doubleMetaphone3);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone4);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone5 = new DoubleMetaphone();
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone5.getMaxCodeLen());
      assertNotNull(doubleMetaphone5);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("Kp\"hc+7u,~!wz", "RTTR", true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone5));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone4));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone0, doubleMetaphone5);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone3);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone4);
      
      int int1 = doubleMetaphone3.getMaxCodeLen();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone5));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertTrue(int1 == int0);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertEquals(4, int1);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone4);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone5);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        DoubleMetaphone.contains("Kp\"hc+7u,~!wz", 72, (-116598834), stringArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode((String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("~z]", "~z]", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(531);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("VAN ", "", false);
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(531);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult2 = doubleMetaphone0.new DoubleMetaphoneResult(531);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult2);
      
      String string1 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", string1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult2);
      assertNotNull(string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("f2*!a4");
      assertFalse(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("F", string2);
      assertNotNull(string2);
      
      Object object0 = doubleMetaphone0.encode((Object) "");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(object0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("^_GHmMzvLg}*_7GDt", "5!yG^XCrHaU]uk)", true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      Object object1 = new Object();
      assertNotNull(object1);
      
      Object object2 = doubleMetaphone1.encode((Object) "");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNull(object2);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      char char0 = doubleMetaphone2.charAt("", 531);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals('\u0000', char0);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-52));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string0 = "R\"fi<[J@";
      String string1 = "";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("R\"fi<[J@", "", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      char char0 = 't';
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('t');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      Object object0 = doubleMetaphone0.encode((Object) "org.apache.commons.codec.EncoderException");
      assertFalse(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKP", object0);
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "ARKP");
      assertTrue(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string1));
      assertFalse(object1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKP", object1);
      assertNotNull(object1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      Object object2 = doubleMetaphone1.encode((Object) "ARKP");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(object2.equals((Object)string0));
      assertFalse(object2.equals((Object)string1));
      assertTrue(object2.equals((Object)object0));
      assertTrue(object2.equals((Object)object1));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("ARKP", object2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(object2);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('t');
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      // Undeclared exception!
      try { 
        doubleMetaphone1.isDoubleMetaphoneEqual("", "PSZBNF!T@", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("O");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("A", string0);
      assertNotNull(string0);
      
      String string1 = "WZBNF!T@";
      String string2 = doubleMetaphone0.encode("WZBNF!T@");
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SPNF", string2);
      assertNotNull(string2);
      
      String string3 = "~z]";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("SPNF", "O", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(67);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      int int0 = (-833);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult((-833));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      String string4 = doubleMetaphone0.doubleMetaphone("~z]", false);
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S", string4);
      assertNotNull(string4);
      
      String string5 = doubleMetaphone0.doubleMetaphone("~z]");
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string1));
      assertTrue(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string3));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S", string5);
      assertNotNull(string5);
      
      try { 
        doubleMetaphone0.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode(";?%@>`Yf`iA;Q1H3Br");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKPR", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.encode("FKPR");
      assertTrue(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKPR", string1);
      assertNotNull(string1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("FKPR", "~z]", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(531);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate(";");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals(";", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append(".;NDM6vc&+", "ACH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(".;NDM6vc&+", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals(";ACH", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string2 = doubleMetaphone0.encode("DD");
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("T", string2);
      assertNotNull(string2);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("RGY", "GN1=GL ;JXYJ/VLYJV");
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      char char0 = doubleMetaphone0.charAt("T", 2961);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("GN1=GL ;JXYJ/VLYJV", "~z]", false);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      Object object0 = doubleMetaphone0.encode((Object) "T");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(object0.equals((Object)string0));
      assertTrue(object0.equals((Object)string2));
      assertFalse(object0.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("T", object0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotNull(object0);
      
      try { 
        doubleMetaphone0.encode((Object) doubleMetaphone1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("WH", "(`/dAvPQ[", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.encode("(`/dAvPQ[");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TFPK", string0);
      assertNotNull(string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(78);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("TFPK");
      assertTrue(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TFPK", string1);
      assertNotNull(string1);
      
      doubleMetaphone_DoubleMetaphoneResult0.append(']', 'T');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("T", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("]", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(17);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone_DoubleMetaphoneResult1.appendAlternate("E?6");
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("E?6", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      String string2 = doubleMetaphone0.doubleMetaphone("j|9qj", false);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("JKJ", string2);
      assertNotNull(string2);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "SCH");
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      doubleMetaphone_DoubleMetaphoneResult1.appendPrimary("edwH:t|1>-Bv*");
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("edwH:t|1>-Bv*", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("E?6", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      String string3 = doubleMetaphone0.encode("edwH:t|1>-Bv*");
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ATTP", string3);
      assertNotNull(string3);
      
      String string4 = doubleMetaphone0.doubleMetaphone("/A\"$~ZH)4_rjs.`<");
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("JRS", string4);
      assertNotNull(string4);
      
      String string5 = doubleMetaphone0.doubleMetaphone("CI");
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string4));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S", string5);
      assertNotNull(string5);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string6 = doubleMetaphone1.doubleMetaphone("", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNull(string6);
      
      char char0 = doubleMetaphone0.charAt((String) null, (-62112989));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      boolean boolean2 = doubleMetaphone1.isDoubleMetaphoneEqual("KSK", "&");
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone(";?%@>`Yf`iA;Q1H3Br");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKPR", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("FKPR");
      assertTrue(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKPR", string1);
      assertNotNull(string1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("FKPR", "~z]", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string2 = doubleMetaphone0.encode("ALLE");
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AL", string2);
      assertNotNull(string2);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(23);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(boolean1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      String string3 = doubleMetaphone2.doubleMetaphone(".;NDM6vc&+", true);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("NTMF", string3);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotNull(string3);
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertNotNull(doubleMetaphone3);
      
      boolean boolean2 = doubleMetaphone3.isDoubleMetaphoneEqual("ACH", "FKPR");
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertFalse(boolean2);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("CIE", "CIE", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("P%@>`Yf`iA;Q1H3B");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PFKP", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.encode((String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string1);
      
      String string2 = doubleMetaphone0.encode((String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string2);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string3 = doubleMetaphone1.encode("PFKP");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(string3.equals((Object)string0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("PFKP", string3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string3);
      
      String string4 = doubleMetaphone1.doubleMetaphone("GNRSPN");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("NRSP", string4);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string4);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("PN}", "org.apache.commons.codec.EncoderException", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string5 = doubleMetaphone0.doubleMetaphone("6g,(Ci", true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string4));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KS", string5);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotNull(string5);
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals(4, int0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string6 = doubleMetaphone1.doubleMetaphone("PN}", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string4));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("N", string6);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string6);
      
      String string7 = doubleMetaphone1.doubleMetaphone("91?c4)I87FQ$mg<6", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string7.equals((Object)string4));
      assertFalse(string7.equals((Object)string6));
      assertFalse(string7.equals((Object)string3));
      assertFalse(string7.equals((Object)string5));
      assertFalse(string7.equals((Object)string0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("KFKM", string7);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string7);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("a`&>z4E#k", "a`&>z4E#k", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("H~YG&%c$t;Gp/E");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KKTK", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.encode("h>2Vf,|Ve& Gf/;");
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FFFK", string1);
      assertNotNull(string1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(80);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("KKTK");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KKTK", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("KKTK", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("(m xxVI,{M;ck=");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KKTK(m xxVI,{M;ck=", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("KKTK(m xxVI,{M;ck=", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone0.setMaxCodeLen((-105392730));
      assertEquals((-105392730), doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("a`&>z4E#k", "WR~Z]");
      assertEquals((-105392730), doubleMetaphone0.getMaxCodeLen());
      assertEquals("KKTK(m xxVI,{M;ck=a`&>z4E#k", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("KKTK(m xxVI,{M;ck=WR~Z]", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('\"', '\"');
      assertEquals((-105392730), doubleMetaphone0.getMaxCodeLen());
      assertEquals("KKTK(m xxVI,{M;ck=WR~Z]\"", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("KKTK(m xxVI,{M;ck=a`&>z4E#k\"", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string2 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals((-105392730), doubleMetaphone0.getMaxCodeLen());
      assertEquals("KKTK(m xxVI,{M;ck=WR~Z]\"", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("KKTK(m xxVI,{M;ck=a`&>z4E#k\"", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("KKTK(m xxVI,{M;ck=WR~Z]\"", string2);
      assertNotNull(string2);
      
      doubleMetaphone0.setMaxCodeLen(1);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean1 == boolean0);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KKTK(m xxVI,{M;ck=WR~Z]\"", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("KKTK(m xxVI,{M;ck=a`&>z4E#k\"", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(boolean1);
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KKTK(m xxVI,{M;ck=WR~Z]\"", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("KKTK(m xxVI,{M;ck=a`&>z4E#k\"", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(boolean2);
      
      String string3 = doubleMetaphone0.encode("T|1>");
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertEquals("T", string3);
      assertNotNull(string3);
      
      String string4 = doubleMetaphone0.doubleMetaphone("_NNs", false);
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertEquals("N", string4);
      assertNotNull(string4);
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("KN", "ATTP");
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean3);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("O");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("A", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.encode("WRZBNF!T@");
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("RSPN", string1);
      assertNotNull(string1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("RSPN", "O", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-833));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string2 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", string2);
      assertNotNull(string2);
      
      String string3 = doubleMetaphone0.doubleMetaphone("~z]");
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S", string3);
      assertNotNull(string3);
      
      Object object0 = doubleMetaphone0.encode((Object) "O");
      assertFalse(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string3));
      assertTrue(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string2));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("A", object0);
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "A");
      assertTrue(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string1));
      assertFalse(object1.equals((Object)string2));
      assertTrue(object1.equals((Object)string0));
      assertFalse(object1.equals((Object)string3));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("A", object1);
      assertNotNull(object1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(6);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      String string4 = doubleMetaphone0.doubleMetaphone("U");
      assertTrue(string4.equals((Object)object1));
      assertFalse(string4.equals((Object)string2));
      assertTrue(string4.equals((Object)object0));
      assertFalse(string4.equals((Object)string3));
      assertTrue(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("A", string4);
      assertNotNull(string4);
      
      doubleMetaphone_DoubleMetaphoneResult1.appendAlternate("org.apache.commons.codec.EncoderException");
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("org.ap", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      char char0 = doubleMetaphone1.charAt(")~Gv;K~", 4);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals(';', char0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("[Zw=;_xP'<c@b./", "CAESAR", false);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("a`&>z4E#k", "a`&>z4E#k", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(79);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(boolean1);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('^');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("^", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("^", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      Object object0 = doubleMetaphone0.encode((Object) "T");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("T", object0);
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "T");
      assertTrue(object1.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("T", object1);
      assertNotNull(object1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("a`&>z4E#k", "D");
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      
      char char0 = doubleMetaphone0.charAt("T|E", 67);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      boolean boolean3 = doubleMetaphone1.isDoubleMetaphoneEqual("D}V1b1!3Gi(", "T", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      Object object2 = doubleMetaphone0.encode((Object) "D");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(object2.equals((Object)object1));
      assertTrue(object2.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("T", object2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotNull(object2);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("a`&>z4E#k", "a`&>z4E#k", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(86);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(boolean1);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('k');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("k", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("k", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("k", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("k", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = "";
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("k", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("k", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("@=i2-I3#m>B$a");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("k", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("k@=i2-I3#m>B$a", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("k", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("k@=i2-I3#m>B$a", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      doubleMetaphone1.setMaxCodeLen(79);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(79, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("", "@=i2-I3#m>B$a");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("k@=i2-I3#m>B$a", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("k@=i2-I3#m>B$a", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('k', 'e');
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("k@=i2-I3#m>B$ae", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("k@=i2-I3#m>B$ak", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String string1 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("k@=i2-I3#m>B$ae", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("k@=i2-I3#m>B$ak", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("k@=i2-I3#m>B$ae", string1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotNull(string1);
      
      doubleMetaphone0.setMaxCodeLen(86);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(86, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      // Undeclared exception!
      try { 
        doubleMetaphone1.isDoubleMetaphoneEqual("", "TTH");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) "PNE<.|");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("N", object0);
      assertNotNull(object0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1001);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("L");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("L", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("4N>,@WVYOwFmfuB6,Y", "L");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("4N>,@WVYOwFmfuB6,Y", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("LL", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string0 = doubleMetaphone0.encode("{JgB8\"\u0005");
      assertFalse(string0.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("JKP", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.encode("4N>,@WVYOwFmfuB6,Y");
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NFFM", string1);
      assertNotNull(string1);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('A');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("4N>,@WVYOwFmfuB6,Y", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("LLA", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("4N>,@WVYOwFmfuB6,Y", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("LLA", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(boolean0);
      
      String string2 = doubleMetaphone0.doubleMetaphone("`SQ)g.D");
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)object0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SKKT", string2);
      assertNotNull(string2);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("r");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("4N>,@WVYOwFmfuB6,Yr", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("LLA", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('K');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("4N>,@WVYOwFmfuB6,YrK", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("LLAK", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(1001);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone_DoubleMetaphoneResult1.appendAlternate("SKKT");
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("SKKT", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("=>}", "CH");
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      char char0 = doubleMetaphone0.charAt("4N>,@WVYOwFmfuB6,Y", 85);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("OI");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("A", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("?IH2O");
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", string1);
      assertNotNull(string1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("A", "org.apache.commons.codec.EncoderException", true);
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "org.apache.commons.codec.EncoderException");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("@RCHID", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("RXT", string0);
      assertNotNull(string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-5225));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      String string1 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", string1);
      assertNotNull(string1);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      char char0 = doubleMetaphone0.charAt("liM;>kU:W^24", 4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('>', char0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      int int0 = 531;
      String string0 = doubleMetaphone0.encode(";?%@>`Yf`iA;Q1H3Br");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKPR", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.encode((String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("~z]", "~z]", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(531);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string2 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertFalse(string2.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", string2);
      assertNotNull(string2);
      
      String string3 = doubleMetaphone0.doubleMetaphone(";?%@>`Yf`iA;Q1H3Br", true);
      assertFalse(string3.equals((Object)string2));
      assertTrue(string3.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKPR", string3);
      assertNotNull(string3);
      
      Object object0 = doubleMetaphone0.encode((Object) "FKPR");
      assertFalse(object0.equals((Object)string2));
      assertTrue(object0.equals((Object)string0));
      assertTrue(object0.equals((Object)string3));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKPR", object0);
      assertNotNull(object0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(86);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone_DoubleMetaphoneResult1.append("KN");
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KN", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("KN", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      String string4 = doubleMetaphone0.doubleMetaphone("GWL=*");
      assertFalse(string4.equals((Object)object0));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KL", string4);
      assertNotNull(string4);
      
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult1.append((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("ee", "T|*SA7${x", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(84);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('B', 'B');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("B", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("B", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string0 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("B", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("B", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("B", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("ee");
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("A", string1);
      assertNotNull(string1);
      
      Object object0 = doubleMetaphone0.encode((Object) "~z]");
      assertFalse(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S", object0);
      assertNotNull(object0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(84);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone_DoubleMetaphoneResult1.append("ee");
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ee", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("ee", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      String string2 = doubleMetaphone0.doubleMetaphone("~z]");
      assertFalse(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)object0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S", string2);
      assertNotNull(string2);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult2 = doubleMetaphone0.new DoubleMetaphoneResult(86);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult2);
      
      doubleMetaphone_DoubleMetaphoneResult2.append("KN");
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KN", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertEquals("KN", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult2.appendAlternate("ECD");
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KNECD", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertEquals("KN", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      char char0 = doubleMetaphone1.charAt("-&|c0e)?8Q,\"Eaf8T", 419);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals('\u0000', char0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("CAESAR", "SAN ", true);
      assertTrue(boolean1 == boolean0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean2 = DoubleMetaphone.contains("S", (-1610), 2798, (String[]) null);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode(";?%@>`Yf`iA;Q1H3Br");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKPR", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.encode("FKPR");
      assertTrue(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKPR", string1);
      assertNotNull(string1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("FKPR", "~z]", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(531);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate(";");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(";", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('p');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(";p", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append(".;NDM6vc&+", "ACH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(";pACH", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals(".;NDM6vc&+", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string2 = doubleMetaphone0.encode("DD");
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("T", string2);
      assertNotNull(string2);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('p', 'H');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(";pACHH", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals(".;NDM6vc&+p", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string3 = doubleMetaphone0.encode("ALLE");
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AL", string3);
      assertNotNull(string3);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('I');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(".;NDM6vc&+p", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals(";pACHHI", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("!*$;5Rn", "?L<+!V.!E:", false);
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      String string4 = doubleMetaphone0.doubleMetaphone("!*$;5Rn", true);
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("RN", string4);
      assertNotNull(string4);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) "PNE<.|");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("N", object0);
      assertNotNull(object0);
      
      String string0 = doubleMetaphone0.encode("PNE<.|");
      assertTrue(string0.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("N", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.encode("PN");
      assertTrue(string1.equals((Object)object0));
      assertTrue(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("N", string1);
      assertNotNull(string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("m");
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("M", string2);
      assertNotNull(string2);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("MACHER", "MACHER", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string3 = doubleMetaphone0.doubleMetaphone("MACHER", false);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)object0));
      assertFalse(string3.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("MKR", string3);
      assertNotNull(string3);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      String string4 = doubleMetaphone0.doubleMetaphone("<830gG0", true);
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("K", string4);
      assertNotNull(string4);
      
      String string5 = doubleMetaphone0.doubleMetaphone("K", false);
      assertFalse(string5.equals((Object)string1));
      assertTrue(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)object0));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string2));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("K", string5);
      assertNotNull(string5);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      String string0 = "WICZ";
      String[] stringArray0 = new String[2];
      stringArray0[0] = "WICZ";
      stringArray0[1] = "WICZ";
      // Undeclared exception!
      try { 
        DoubleMetaphone.contains("WICZ", 0, (-219), stringArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("vd5xL.UEi1=c!H.N2");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FTKS", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("FTKS");
      assertTrue(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FTKS", string1);
      assertNotNull(string1);
      
      Object object0 = doubleMetaphone0.encode((Object) "vd5xL.UEi1=c!H.N2");
      assertTrue(object0.equals((Object)string0));
      assertTrue(object0.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FTKS", object0);
      assertNotNull(object0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("C8-,S5QQ#OaT", "i/`'<17*");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      char char0 = doubleMetaphone0.charAt("i/`'<17*", 67);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "vd5xL.UEi1=c!H.N2";
      stringArray0[1] = "vd5xL.UEi1=c!H.N2";
      stringArray0[2] = "i/`'<17*";
      stringArray0[3] = "FTKS";
      stringArray0[4] = "vd5xL.UEi1=c!H.N2";
      stringArray0[5] = "vd5xL.UEi1=c!H.N2";
      stringArray0[6] = "FTKS";
      boolean boolean1 = DoubleMetaphone.contains("E", 67, 67, stringArray0);
      assertEquals(7, stringArray0.length);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      char char1 = doubleMetaphone0.charAt("vwB*klc", 67);
      assertTrue(char1 == char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char1);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("a`&>z4E#k", "a`&>z4E#k", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(79);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(boolean1);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('^');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("^", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("^", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("^", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("^", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("^", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("^", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("^", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("^", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("^org.apache.commons.codec.EncoderException", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("^org.apache.commons.codec.EncoderException", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone0.setMaxCodeLen(79);
      assertEquals(79, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("org.apache.commons.codec.EncoderException", "3<&,E!Zc9M=P;");
      assertEquals(79, doubleMetaphone0.getMaxCodeLen());
      assertEquals("^org.apache.commons.codec.EncoderExceptionorg.apache.commons.codec.EncoderExcep", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("^org.apache.commons.codec.EncoderException3<&,E!Zc9M=P;", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('^', 'e');
      assertEquals(79, doubleMetaphone0.getMaxCodeLen());
      assertEquals("^org.apache.commons.codec.EncoderExceptionorg.apache.commons.codec.EncoderExcep", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("^org.apache.commons.codec.EncoderException3<&,E!Zc9M=P;e", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string0 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertEquals(79, doubleMetaphone0.getMaxCodeLen());
      assertEquals("^org.apache.commons.codec.EncoderExceptionorg.apache.commons.codec.EncoderExcep", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("^org.apache.commons.codec.EncoderException3<&,E!Zc9M=P;e", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("^org.apache.commons.codec.EncoderException3<&,E!Zc9M=P;e", string0);
      assertNotNull(string0);
      
      doubleMetaphone0.setMaxCodeLen(79);
      assertEquals(79, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertEquals(79, doubleMetaphone0.getMaxCodeLen());
      assertEquals("^org.apache.commons.codec.EncoderExceptionorg.apache.commons.codec.EncoderExcep", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("^org.apache.commons.codec.EncoderException3<&,E!Zc9M=P;e", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(boolean2);
      
      String string1 = doubleMetaphone0.encode("org.apache.commons.codec.EncoderException");
      assertFalse(string1.equals((Object)string0));
      assertEquals(79, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKPXKMNSKTKNKTRKSPXN", string1);
      assertNotNull(string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("a`&>z4E#k", false);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(79, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ASK", string2);
      assertNotNull(string2);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "}}9mn#p{Ki8");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = "zBnF!t@";
      String string1 = doubleMetaphone0.encode("zBnF!t@");
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SPNF", string1);
      assertNotNull(string1);
      
      int int0 = (-3163);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-3163));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('!');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string2 = doubleMetaphone0.encode("mQrT+[U");
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("MKRT", string2);
      assertNotNull(string2);
      
      String string3 = doubleMetaphone0.doubleMetaphone("mQrT+[U", false);
      assertTrue(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("MKRT", string3);
      assertNotNull(string3);
      
      String string4 = doubleMetaphone0.encode("MKRT");
      assertTrue(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertTrue(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("MKRT", string4);
      assertNotNull(string4);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      int int1 = doubleMetaphone1.getMaxCodeLen();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(int1 == int0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals(4, int1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      String string5 = null;
      String string6 = null;
      // Undeclared exception!
      try { 
        doubleMetaphone2.isDoubleMetaphoneEqual((String) null, (String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("a`&>z4E#k", "a`&>z4E#k", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("H~YG&%c$t;Gp/E");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KKTK", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.encode("h>2Vf,|Ve& Gf/;");
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FFFK", string1);
      assertNotNull(string1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(80);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("KKTK");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KKTK", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("KKTK", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("(m xxVI,{M;ck=");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KKTK(m xxVI,{M;ck=", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("KKTK(m xxVI,{M;ck=", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone0.setMaxCodeLen((-105392730));
      assertEquals((-105392730), doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("a`&>z4E#k", "WR~Z]");
      assertEquals((-105392730), doubleMetaphone0.getMaxCodeLen());
      assertEquals("KKTK(m xxVI,{M;ck=WR~Z]", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("KKTK(m xxVI,{M;ck=a`&>z4E#k", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('\"', '\"');
      assertEquals((-105392730), doubleMetaphone0.getMaxCodeLen());
      assertEquals("KKTK(m xxVI,{M;ck=a`&>z4E#k\"", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("KKTK(m xxVI,{M;ck=WR~Z]\"", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string2 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals((-105392730), doubleMetaphone0.getMaxCodeLen());
      assertEquals("KKTK(m xxVI,{M;ck=a`&>z4E#k\"", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("KKTK(m xxVI,{M;ck=WR~Z]\"", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("KKTK(m xxVI,{M;ck=WR~Z]\"", string2);
      assertNotNull(string2);
      
      doubleMetaphone0.setMaxCodeLen(1);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean1 == boolean0);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KKTK(m xxVI,{M;ck=a`&>z4E#k\"", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("KKTK(m xxVI,{M;ck=WR~Z]\"", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(boolean1);
      
      String string3 = doubleMetaphone0.encode("\"GXmy&p");
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertEquals("K", string3);
      assertNotNull(string3);
      
      String string4 = doubleMetaphone0.doubleMetaphone("WR~Z]", true);
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertEquals("R", string4);
      assertNotNull(string4);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("EL", "\"GXmy&p");
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('c');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("|b-", "|b-", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult((-2013));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("-;JY?mfa", "S");
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone_DoubleMetaphoneResult1.appendAlternate('<');
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("-;JY?mfa", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("JMF", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode(";?%@>`Yf`iA;Q1H3Br");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKPR", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.encode("FKPR");
      assertTrue(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKPR", string1);
      assertNotNull(string1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("FKPR", "~z]", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(531);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate(";");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(";", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append(".;NDM6vc&+", "ACH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(";ACH", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals(".;NDM6vc&+", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string2 = doubleMetaphone0.encode("DD");
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("T", string2);
      assertNotNull(string2);
      
      String string3 = doubleMetaphone0.encode("ALLE");
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AL", string3);
      assertNotNull(string3);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('I');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(".;NDM6vc&+", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals(";ACHI", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult1.isComplete();
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertTrue(boolean1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      char char0 = doubleMetaphone0.charAt(";", 531);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("OI", "FX");
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(".;NDM6vc&+OI", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals(";ACHIFX", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate(']');
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(";ACHIFX]", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals(".;NDM6vc&+OI", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("T|*SA7${x", "PNHEM");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(86);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('&');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("&", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("&", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("PNHEM", "AJ", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "hXU(#e=XW2[@*";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "org.apache.commons.codec.EncoderException";
      stringArray0[4] = "PNHEM";
      stringArray0[5] = "AJ";
      stringArray0[6] = null;
      stringArray0[7] = null;
      stringArray0[8] = "";
      boolean boolean2 = DoubleMetaphone.contains("T|*SA7${x", 86, 86, stringArray0);
      assertEquals(9, stringArray0.length);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('`', '`');
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("&`", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("&`", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String string0 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("&`", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("&`", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("&`", string0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(70);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("H@o#=*gwL=*t=y");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("H@o#=*gwL=*t=y", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("H@o#=*gwL=*t=y", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string0 = doubleMetaphone0.doubleMetaphone("wOUoJQ^~");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AJK", string0);
      assertNotNull(string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone1.new DoubleMetaphoneResult(70);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("$c OIsc|i");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("H@o#=*gwL=*t=y$c OIsc|i", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("H@o#=*gwL=*t=y", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult2 = doubleMetaphone0.new DoubleMetaphoneResult(70);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult2);
      
      doubleMetaphone_DoubleMetaphoneResult2.append("9o]y7YQA;(~O", "AJK");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("9o]y7YQA;(~O", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertEquals("AJK", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult1);
      
      String string1 = doubleMetaphone0.encode("ER");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AR", string1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotNull(string1);
      
      doubleMetaphone_DoubleMetaphoneResult2.append('h', 'h');
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AJKh", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertEquals("9o]y7YQA;(~Oh", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone_DoubleMetaphoneResult2.appendPrimary('9');
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AJKh", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertEquals("9o]y7YQA;(~Oh9", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone_DoubleMetaphoneResult2.appendAlternate("WICZ");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AJKhWICZ", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertEquals("9o]y7YQA;(~Oh9", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult1);
      
      String string2 = doubleMetaphone0.encode("<4%TKkQ<c");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TKKK", string2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotNull(string2);
      
      doubleMetaphone_DoubleMetaphoneResult2.appendAlternate('9');
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AJKhWICZ9", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertEquals("9o]y7YQA;(~Oh9", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult3 = doubleMetaphone0.new DoubleMetaphoneResult(70);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult3.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult3.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult3);
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult3.isComplete();
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult3.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult3.getAlternate());
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult3, doubleMetaphone_DoubleMetaphoneResult2);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult3, doubleMetaphone_DoubleMetaphoneResult1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult3, doubleMetaphone_DoubleMetaphoneResult0);
      
      String string3 = doubleMetaphone1.doubleMetaphone("AJK");
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("AK", string3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string3);
      
      doubleMetaphone_DoubleMetaphoneResult2.appendPrimary("AJK");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult3));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AJKhWICZ9", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertEquals("9o]y7YQA;(~Oh9AJK", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult3);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone_DoubleMetaphoneResult1.append('N');
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult3));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("N", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("N", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult3);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult2);
      
      doubleMetaphone_DoubleMetaphoneResult3.appendAlternate("ER");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult3.getPrimary());
      assertEquals("ER", doubleMetaphone_DoubleMetaphoneResult3.getAlternate());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult3, doubleMetaphone_DoubleMetaphoneResult2);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult3, doubleMetaphone_DoubleMetaphoneResult1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult3, doubleMetaphone_DoubleMetaphoneResult0);
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals(4, int0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      char char0 = doubleMetaphone0.charAt("WICZ", 70);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("}");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("}");
      assertTrue(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", string1);
      assertNotNull(string1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-687));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string2 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertTrue(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", string2);
      assertNotNull(string2);
      
      Object object0 = doubleMetaphone0.encode((Object) "");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(object0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("}", "@W]*e[XC%{(LecdY");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = DoubleMetaphone.contains("EI", (-687), (-960), (String[]) null);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("}", "SCH", false);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("T|*SA7${x", "PNHEM");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone((String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone((String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone((String) null, true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string2);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      char char0 = doubleMetaphone0.charAt("Z", 126);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2542);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("Z");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("Z", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("Z", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "SiX&b[L0B7$_HDR";
      stringArray0[1] = "SiX&b[L0B7$_HDR";
      boolean boolean1 = DoubleMetaphone.contains("SiX&b[L0B7$_HDR", 82, 716, stringArray0);
      assertEquals(2, stringArray0.length);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("Z", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1051));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("a`&>z4E#k", "a`&>z4E#k", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(79);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(boolean1);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('^');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("^", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("^", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("^", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("^", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("^", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("^", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("^", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("^", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("^", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("^", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("ah{-NWCn0'U6c v +", (String) null, true);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('3', '^');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("^3", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("^^", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      Object object0 = doubleMetaphone0.encode((Object) ")rYj`2XApAr+oHx");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("RJKS", object0);
      assertNotNull(object0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = ")rYj`2XApAr+oHx";
      stringArray0[1] = "a`&>z4E#k";
      boolean boolean3 = DoubleMetaphone.contains("MZD4V7,*2VdV]$ArWG", 79, 79, stringArray0);
      assertEquals(2, stringArray0.length);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode((String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("~z]", "~z]", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(531);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("", "~z]");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("~z]", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string1 = doubleMetaphone0.encode("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string1);
      
      String string2 = doubleMetaphone0.encode("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string2);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('I');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("~z]I", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("~z]I", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(boolean1);
      
      String string3 = doubleMetaphone0.doubleMetaphone("\"NwUoJ5L");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NJL", string3);
      assertNotNull(string3);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("~z]I", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('I');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("~z]II", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("I", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("~z]II", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("I", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("\"NwUoJ5L", "X!pjvjg^S`;");
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('c');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("Y", "Y", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertTrue(boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) "Z^hWhM-)4`hLt|EH,u");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SMLT", object0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode(";?%@>`Yf`iA;Q1H3Br");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKPR", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.encode((String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string1);
      
      boolean boolean0 = false;
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("~z]", "~z]", false);
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(531);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string2 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertFalse(string2.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", string2);
      assertNotNull(string2);
      
      String string3 = doubleMetaphone0.doubleMetaphone((String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string3);
      
      Object object0 = doubleMetaphone0.encode((Object) "FKPR");
      assertFalse(object0.equals((Object)string2));
      assertTrue(object0.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKPR", object0);
      assertNotNull(object0);
      
      int int0 = 86;
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(86);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone_DoubleMetaphoneResult1.append("KN");
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KN", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("KN", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      String string4 = doubleMetaphone0.doubleMetaphone("GWL=*");
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KL", string4);
      assertNotNull(string4);
      
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult1.append((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("HEM");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("HM", string0);
      assertNotNull(string0);
      
      doubleMetaphone0.setMaxCodeLen((-1698));
      assertEquals((-1698), doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.doubleMetaphone("HEM", true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(70);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("H@o#=*gwL=*t=y");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("H@o#=*gwL=*t=y", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("H@o#=*gwL=*t=y", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string0 = doubleMetaphone0.doubleMetaphone("wOUoJQ^~");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AJK", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.encode("H@o#=*gwL=*t=y");
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KLT", string1);
      assertNotNull(string1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone1.new DoubleMetaphoneResult(70);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("$c OIsc|i");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("H@o#=*gwL=*t=y", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("H@o#=*gwL=*t=y$c OIsc|i", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult2 = doubleMetaphone0.new DoubleMetaphoneResult(70);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult2);
      
      doubleMetaphone_DoubleMetaphoneResult2.append("9o]y7YQA;(~O", "KLT");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KLT", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertEquals("9o]y7YQA;(~O", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult0);
      
      String string2 = doubleMetaphone0.encode("ER");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AR", string2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotNull(string2);
      
      doubleMetaphone_DoubleMetaphoneResult2.appendPrimary('9');
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("9o]y7YQA;(~O9", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertEquals("KLT", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult2.appendAlternate("WICZ");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("9o]y7YQA;(~O9", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertEquals("KLTWICZ", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult0);
      
      String string3 = doubleMetaphone0.encode("<4%TKkQ<c");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TKKK", string3);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotNull(string3);
      
      doubleMetaphone_DoubleMetaphoneResult2.appendAlternate('9');
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("9o]y7YQA;(~O9", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertEquals("KLTWICZ9", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult3 = doubleMetaphone0.new DoubleMetaphoneResult(70);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult3.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult3.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult3);
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult3.isComplete();
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult3.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult3.getAlternate());
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult3, doubleMetaphone_DoubleMetaphoneResult0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult3, doubleMetaphone_DoubleMetaphoneResult2);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult3, doubleMetaphone_DoubleMetaphoneResult1);
      
      String string4 = doubleMetaphone1.doubleMetaphone("KLT");
      assertFalse(string4.equals((Object)string3));
      assertTrue(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("KLT", string4);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string4);
      
      doubleMetaphone_DoubleMetaphoneResult2.appendPrimary("AJK");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult3));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KLTWICZ9", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertEquals("9o]y7YQA;(~O9AJK", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult3);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult1.append('N');
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult3));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("N", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("N", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult3);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult2);
      
      doubleMetaphone_DoubleMetaphoneResult3.appendAlternate("ER");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult3.getPrimary());
      assertEquals("ER", doubleMetaphone_DoubleMetaphoneResult3.getAlternate());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult3, doubleMetaphone_DoubleMetaphoneResult0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult3, doubleMetaphone_DoubleMetaphoneResult2);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult3, doubleMetaphone_DoubleMetaphoneResult1);
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals(4, int0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(523);
      assertEquals(523, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("h>2Vf,|Ve& Gf/;");
      assertEquals(523, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FFFKF", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.encode("FFFKF");
      assertFalse(string1.equals((Object)string0));
      assertEquals(523, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FFKF", string1);
      assertNotNull(string1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertEquals(523, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("h>2Vf,|Ve& Gf/;");
      assertEquals(523, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("(m xxVI,{M;ck=");
      assertEquals(523, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone0.setMaxCodeLen(523);
      assertEquals(523, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("", "Lt<*]yn]]!AOO");
      assertEquals(523, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('\"', '\"');
      assertEquals(523, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string2 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(523, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", string2);
      assertNotNull(string2);
      
      doubleMetaphone0.setMaxCodeLen(523);
      assertEquals(523, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(523, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertTrue(boolean0);
      
      String string3 = doubleMetaphone0.encode("");
      assertEquals(523, doubleMetaphone0.getMaxCodeLen());
      assertNull(string3);
      
      String string4 = doubleMetaphone0.doubleMetaphone("", true);
      assertEquals(523, doubleMetaphone0.getMaxCodeLen());
      assertNull(string4);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("Lt<*]yn]]!AOO", "(m xxVI,{M;ck=");
      assertFalse(boolean1 == boolean0);
      assertEquals(523, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = "edwH:t|1>-Bv*";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("edwH:t|1>-Bv*", "edwH:t|1>-Bv*", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string1 = doubleMetaphone0.encode("j|9qj");
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("JKJ", string1);
      assertNotNull(string1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string2 = doubleMetaphone0.doubleMetaphone("edwH:t|1>-Bv*");
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ATTP", string2);
      assertNotNull(string2);
      
      String string3 = doubleMetaphone0.doubleMetaphone("EWSKI");
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ASK", string3);
      assertNotNull(string3);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(81);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone_DoubleMetaphoneResult1.append("WICZ");
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("WICZ", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("WICZ", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("JKJ");
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone0.setMaxCodeLen(0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("X", "(m xxVI,{M;ck=");
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone_DoubleMetaphoneResult1.append('\"', '\"');
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("WICZ\"", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("WICZ\"", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone0.setMaxCodeLen((-1));
      assertEquals((-1), doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertTrue(boolean1 == boolean0);
      assertEquals((-1), doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertTrue(boolean1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.encode("T");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-52));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("R\"fi<[J@", "", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('t');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("OWSKY", "PSH>2VF,|VE& GF/;", false);
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode(";?%@>`Yf`iA;Q1H3Br");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKPR", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.encode("FKPR");
      assertTrue(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKPR", string1);
      assertNotNull(string1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("FKPR", "~z]", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(531);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate(";");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals(";", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append(".;NDM6vc&+", "ACH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(".;NDM6vc&+", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals(";ACH", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string2 = doubleMetaphone0.encode("DD");
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("T", string2);
      assertNotNull(string2);
      
      String string3 = doubleMetaphone0.encode("ALLE");
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AL", string3);
      assertNotNull(string3);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('I');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(";ACHI", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals(".;NDM6vc&+", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult1.isComplete();
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertTrue(boolean1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      String string4 = doubleMetaphone0.doubleMetaphone("LL #D");
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("LT", string4);
      assertNotNull(string4);
      
      doubleMetaphone_DoubleMetaphoneResult1.appendPrimary("&J#hk^6ycl>");
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult1.append('I');
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("YSL");
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(";ACHIYSL", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals(".;NDM6vc&+", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("Y@", "TC**");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      char char0 = doubleMetaphone0.charAt("nEc:v(w@[nw8n,", 0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('n', char0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("nEc:v(w@[nw8n,");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("nEc:v(w@[nw8n,");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      String string0 = doubleMetaphone0.encode("@vE9JKd+s7");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKTS", string0);
      assertNotNull(string0);
      
      doubleMetaphone0.setMaxCodeLen(0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = true;
      String string1 = doubleMetaphone0.doubleMetaphone("TC**", true);
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", string1);
      assertNotNull(string1);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("@vE9JKd+s7");
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('n');
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string2 = doubleMetaphone0.encode("");
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertNull(string2);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('n');
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertFalse(int1 == int0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals(0, int1);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("+4^}eI+'a", "Jd");
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        DoubleMetaphone.contains((String) null, 0, 0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("edwH:t|1>-Bv*", "edwH:t|1>-Bv*", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string0 = doubleMetaphone0.encode("j|9qj");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("JKJ", string0);
      assertNotNull(string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("edwH:t|1>-Bv*");
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ATTP", string1);
      assertNotNull(string1);
      
      doubleMetaphone_DoubleMetaphoneResult0.append(']', ']');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("ATTP");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string2 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKP", string2);
      assertNotNull(string2);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("JKJ", "ATTP", false);
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string3 = doubleMetaphone0.encode("RxwWx7&{<.9)7h,&{T");
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("RKSK", string3);
      assertNotNull(string3);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('0');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoerException", "LI", true);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "N";
      stringArray0[1] = "RKSK";
      stringArray0[2] = "RxwWx7&{<.9)7h,&{T";
      stringArray0[3] = "";
      boolean boolean3 = DoubleMetaphone.contains("hXU(#e=XW2[@*", (-434), 81, stringArray0);
      assertEquals(4, stringArray0.length);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3);
      
      doubleMetaphone_DoubleMetaphoneResult0.append(']', 'l');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string4 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string2));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", string4);
      assertNotNull(string4);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.isDoubleMetaphoneEqual("edwH:t|1>-Bv*", "edwH:t|1>-Bv*", false);
      String string0 = doubleMetaphone0.encode("j|9qj");
      assertEquals("JKJ", string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      String string1 = doubleMetaphone0.doubleMetaphone("edwH:t|1>-Bv*");
      assertEquals("ATTP", string1);
      
      doubleMetaphone_DoubleMetaphoneResult0.append(']', ']');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("ATTP");
      String string2 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      assertEquals("ARKP", string2);
      
      doubleMetaphone0.isDoubleMetaphoneEqual("E?6", "");
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      String string3 = doubleMetaphone0.encode("RxwWx7&{<.9)7h,&{T");
      assertEquals("RKSK", string3);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('0');
      doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "LI", false);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "RKSK";
      stringArray0[2] = "RxwWx7&{<.9)7h,&{T";
      stringArray0[3] = "";
      DoubleMetaphone.contains("hXU(#e=XW2[@*", (-434), 81, stringArray0);
      doubleMetaphone_DoubleMetaphoneResult0.append(']', 'l');
      doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode(";?%@>`Yf`iA;Q1H3Br");
      doubleMetaphone0.encode((String) null);
      doubleMetaphone0.isDoubleMetaphoneEqual("~z]", "~z]", false);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(531);
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("");
      doubleMetaphone_DoubleMetaphoneResult0.append("", "~z]");
      doubleMetaphone0.encode("");
      doubleMetaphone0.encode("");
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('I');
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone0.doubleMetaphone("\"NwUoJ5L");
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      doubleMetaphone_DoubleMetaphoneResult0.append('I');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("");
      assertEquals("~z]II", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(3477);
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      String string0 = doubleMetaphone0.doubleMetaphone("S?_^-O|A^q.2yb[");
      assertEquals("SKP", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "";
      doubleMetaphone0.doubleMetaphone("");
      int int0 = 435;
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(435);
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone_DoubleMetaphoneResult0.append("OWSKY");
      char char0 = '(';
      doubleMetaphone0.doubleMetaphone("OWSKY", false);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('(');
      doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.appendAlternate((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("uwcqYty`X/_OPHK+");
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('d');
      doubleMetaphone_DoubleMetaphoneResult0.append('?', '?');
      String string0 = doubleMetaphone0.doubleMetaphone("s1xv(u,<");
      assertEquals("SKSF", string0);
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "uwcqYty`X/_OPHK+";
      stringArray0[1] = "SKSF";
      stringArray0[2] = "^";
      boolean boolean1 = DoubleMetaphone.contains("^", 1005, 86, stringArray0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(72);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "OD";
      stringArray0[1] = "OD";
      stringArray0[2] = "";
      stringArray0[3] = "OD";
      stringArray0[4] = "OD";
      stringArray0[5] = "OD";
      stringArray0[6] = "OD";
      boolean boolean0 = DoubleMetaphone.contains("OD", 0, 0, stringArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      int int0 = 70;
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(70);
      String string0 = "H@o#=*gwL=*t=y";
      doubleMetaphone_DoubleMetaphoneResult0.append("H@o#=*gwL=*t=y");
      String string1 = "9o]y7YQA;(~O";
      String string2 = "wO\\UoJQ^~";
      doubleMetaphone0.doubleMetaphone("wOUoJQ^~");
      doubleMetaphone0.encode("H@o#=*gwL=*t=y");
      char char0 = '9';
      String string3 = null;
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "9o]y7YQA;(~O");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "&";
      stringArray0[1] = "&";
      stringArray0[2] = "&";
      stringArray0[3] = "&";
      stringArray0[4] = "&";
      stringArray0[5] = "";
      stringArray0[6] = "&";
      stringArray0[7] = "&";
      stringArray0[8] = "&";
      DoubleMetaphone.contains("&", 1176, 0, stringArray0);
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-2689));
      doubleMetaphone0.setMaxCodeLen((-3685));
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("&", "", false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-52));
      String string0 = "";
      doubleMetaphone0.isDoubleMetaphoneEqual("R\"fi<[J@", "", false);
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('t');
      doubleMetaphone_DoubleMetaphoneResult0.append('Q');
      doubleMetaphone0.doubleMetaphone("", true);
      doubleMetaphone_DoubleMetaphoneResult0.append('i', ' ');
      doubleMetaphone0.charAt("R\"fi<[J@", (-52));
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("R\"fi<[J@");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode("}");
      String string0 = doubleMetaphone0.doubleMetaphone("i}Hwy*Ux%4<LlzVxu:", false);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-687));
      doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      doubleMetaphone0.encode((Object) "");
      doubleMetaphone0.isDoubleMetaphoneEqual("}", "@W]*e[XC%{(LecdY");
      String string1 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('c');
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("S", "0dx[)TI2", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "nEc:v(w@[nw\\8n,";
      int int0 = 0;
      String string1 = "TC**";
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "TC**");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('X');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('@');
      doubleMetaphone_DoubleMetaphoneResult0.append("@x)!J!ZC", "");
      doubleMetaphone_DoubleMetaphoneResult0.append('@', '@');
      doubleMetaphone0.setMaxCodeLen(0);
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("");
      doubleMetaphone0.getMaxCodeLen();
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.setMaxCodeLen(163);
      doubleMetaphone0.doubleMetaphone("3Yn71%N!{{rY^\"EQf'");
      doubleMetaphone0.encode("");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(797);
      doubleMetaphone_DoubleMetaphoneResult0.append("3Yn71%N!{{rY^\"EQf'");
      doubleMetaphone_DoubleMetaphoneResult0.append("(^5kb!vI=?900'", "3Yn71%N!{{rY^\"EQf'");
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('`');
      doubleMetaphone_DoubleMetaphoneResult0.append('y', 'y');
      doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "ET";
      stringArray0[1] = "(^5kb!vI=?900'";
      stringArray0[2] = "3Yn71%N!{{rY^\"EQf'(^5kb!vI=?900'`y";
      boolean boolean0 = DoubleMetaphone.contains("", (-3580), 797, stringArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      int int0 = 1153;
      doubleMetaphone0.setMaxCodeLen(1153);
      String string0 = "";
      boolean boolean0 = false;
      doubleMetaphone0.doubleMetaphone("");
      doubleMetaphone0.doubleMetaphone("", false);
      try { 
        doubleMetaphone0.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "");
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      doubleMetaphone1.setMaxCodeLen(72);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.append('g', 'g');
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("$lzo@");
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      int int0 = (-477);
      doubleMetaphone0.charAt("%dxcjXJx~8b6", (-477));
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-477));
      String string0 = "org.apache.commons.codec.EncoderException";
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("org.apache.commons.codec.EncoderException");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1935);
      doubleMetaphone0.isDoubleMetaphoneEqual("Jflv", "F~r0#>=>-NsGKXj#04i", false);
      String string0 = "GO4N$+?_x";
      String string1 = "9<z";
      doubleMetaphone_DoubleMetaphoneResult0.append("", "");
      doubleMetaphone0.doubleMetaphone("<:0e&5C''0Gc&QJA", true);
      doubleMetaphone_DoubleMetaphoneResult0.append('B');
      doubleMetaphone0.encode((Object) "9<z");
      try { 
        doubleMetaphone0.encode((Object) doubleMetaphone_DoubleMetaphoneResult0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.append('o');
      Object object0 = new Object();
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "Y0^n<K304XAC'GJ";
      doubleMetaphone0.encode((Object) "CHIA");
      doubleMetaphone0.isDoubleMetaphoneEqual("CHIA", "Y0^n<K304XAC'GJ", true);
      String string1 = "";
      doubleMetaphone0.doubleMetaphone("", true);
      int int0 = (-1);
      doubleMetaphone0.setMaxCodeLen(72);
      try { 
        doubleMetaphone0.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1051));
      doubleMetaphone_DoubleMetaphoneResult0.append('A', 'A');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      int int0 = 0;
      String string0 = "eSv";
      doubleMetaphone0.encode((Object) "eSv");
      Object object0 = new Object();
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(0);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone0.doubleMetaphone("", true);
      doubleMetaphone_DoubleMetaphoneResult0.append("");
      doubleMetaphone_DoubleMetaphoneResult0.append("=sf");
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('~');
      char char0 = doubleMetaphone0.charAt(",9IU)d?(FiK{(>Q9", 0);
      assertEquals(',', char0);
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "org.apache.commons.codec.EncoderException", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      try { 
        doubleMetaphone0.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone("", false);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2);
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('1');
      assertEquals("1", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode("HEM");
      doubleMetaphone0.setMaxCodeLen(3074);
      doubleMetaphone0.doubleMetaphone("", true);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(3074);
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.appendPrimary((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult", e);
      }
  }
}
