/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 06 01:19:09 GMT 2021
 */

package org.apache.commons.codec.language;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.codec.language.DoubleMetaphone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DoubleMetaphone_ESTest extends DoubleMetaphone_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) "HYIGH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("H", object0);
      assertNotNull(object0);
      
      Object object1 = new Object();
      assertNotNull(object1);
      
      try { 
        doubleMetaphone0.encode(object1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("zeaDnW!%o");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("STN", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("KN9VGLI#P \"%`M", true);
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NFKL", string1);
      assertNotNull(string1);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("9DVgLi#p \"%`m");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TFKL", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string0 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKP", string0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotNull(string0);
      
      Object object0 = doubleMetaphone0.encode((Object) "ARKP");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(object0.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKP", object0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotNull(object0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("ARKP", "wM04EGy", false);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("h.5OGH2*hE", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.encode("h.5OGH2*hE");
      assertTrue(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", string1);
      assertNotNull(string1);
      
      Object object0 = doubleMetaphone0.encode((Object) "h.5OGH2*hE");
      assertTrue(object0.equals((Object)string1));
      assertTrue(object0.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", object0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("m\"m");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("MM", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.encode("zT6uGH?ru1");
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("STFR", string1);
      assertNotNull(string1);
      
      Object object0 = doubleMetaphone0.encode((Object) "STFR");
      assertFalse(object0.equals((Object)string0));
      assertTrue(object0.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("STFR", object0);
      assertNotNull(object0);
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "zT6uGH?ru1";
      stringArray0[1] = "MM";
      stringArray0[2] = "Ws/Fw";
      stringArray0[3] = "e";
      stringArray0[4] = "|JwQia(1m}|O)P.qre8";
      stringArray0[5] = "zT6uGH?ru1";
      stringArray0[6] = "org.apache.commons.codec.EncoderException";
      boolean boolean0 = DoubleMetaphone.contains("e", (-903), 5, stringArray0);
      assertEquals(7, stringArray0.length);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("z T6uuGH?ru1");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("STKR", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.encode("Ws/F?0w");
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SF", string1);
      assertNotNull(string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("GN", false);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("N", string2);
      assertNotNull(string2);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(743);
      assertEquals(743, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("1KZNUMBlsNXX`}~Z^");
      assertEquals(743, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KSNMPLSNKSS", string0);
      assertNotNull(string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("UaZ/UqsUDygh0", "", false);
      assertEquals(743, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("MCH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("MK", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("PSHOLZ", "PSUMB", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.encode("PSUMB");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SM", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("PSUMB");
      assertTrue(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SM", string1);
      assertNotNull(string1);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("+CCE");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("X", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) "mccgsP6u*uo|E>=0Txu");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("MKKS", object0);
      assertNotNull(object0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("TIA", "mccgsP6u*uo|E>=0Txu", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("UmbhuS;')L5X7~kb");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AMPS", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("4RlL}t(x2_>AuO");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("RLTK", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(341);
      assertEquals(341, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("J2^D");
      assertEquals(341, doubleMetaphone0.getMaxCodeLen());
      assertEquals("JT", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.encode("Z");
      assertFalse(string1.equals((Object)string0));
      assertEquals(341, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S", string1);
      assertNotNull(string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("RlL}t(x2_>AuO");
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(341, doubleMetaphone0.getMaxCodeLen());
      assertEquals("RLTKS", string2);
      assertNotNull(string2);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "J2^D";
      stringArray0[1] = "J2^D";
      stringArray0[2] = "RLTKS";
      stringArray0[3] = "S";
      boolean boolean0 = DoubleMetaphone.contains("S", 299, 299, stringArray0);
      assertEquals(4, stringArray0.length);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("CHRE");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KR", string0);
      assertNotNull(string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("KR", "PN", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "KR";
      stringArray0[1] = "KR";
      stringArray0[2] = "M";
      stringArray0[3] = "M";
      stringArray0[4] = "M";
      stringArray0[5] = "KR";
      stringArray0[6] = "M";
      // Undeclared exception!
      try { 
        DoubleMetaphone.contains("M", 1, (-6254807), stringArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string0 = doubleMetaphone1.doubleMetaphone("GyB')y\u0002PV.Jk #");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("KPPF", string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("e[");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("A", string0);
      assertNotNull(string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("CIGH", "A", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("EL", "WITZ", false);
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("L5s%Jgee2`AM>", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("LSJJ", string0);
      assertNotNull(string0);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "LSJJ";
      stringArray0[1] = "L5s%Jgee2`AM>";
      stringArray0[2] = "L5s%Jgee2`AM>";
      boolean boolean0 = DoubleMetaphone.contains("ZbioY5", 5, 0, stringArray0);
      assertEquals(3, stringArray0.length);
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("LSJJ", "P?IJA[uj6I\"XU**", false);
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("6RWi6Jcighw^H.7");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("RJS", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("IGH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("A", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("YDGI:v^-~O^L");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AJFL", string0);
      assertNotNull(string0);
      
      Object object0 = doubleMetaphone0.encode((Object) "YDGI:v^-~O^L");
      assertTrue(object0.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AJFL", object0);
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "AJFL");
      assertTrue(object1.equals((Object)object0));
      assertTrue(object1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AJFL", object1);
      assertNotNull(object1);
      
      String string1 = doubleMetaphone0.encode("YDGI:v^-~O^L");
      assertTrue(string1.equals((Object)object0));
      assertTrue(string1.equals((Object)object1));
      assertTrue(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AJFL", string1);
      assertNotNull(string1);
      
      char char0 = doubleMetaphone0.charAt("NJ", 86);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      Object object2 = doubleMetaphone0.encode((Object) "YDGI:v^-~O^L");
      assertTrue(object2.equals((Object)string1));
      assertTrue(object2.equals((Object)object0));
      assertTrue(object2.equals((Object)object1));
      assertTrue(object2.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AJFL", object2);
      assertNotNull(object2);
      
      String string2 = doubleMetaphone0.doubleMetaphone("YDGI:v^-~O^L", false);
      assertTrue(string2.equals((Object)object1));
      assertTrue(string2.equals((Object)object2));
      assertTrue(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      assertTrue(string2.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AJFL", string2);
      assertNotNull(string2);
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "YDGI:v^-~O^L";
      stringArray0[1] = "AJFL";
      stringArray0[2] = "AJFL";
      stringArray0[3] = "AJFL";
      stringArray0[4] = "SUGAR";
      stringArray0[5] = "AJFL";
      stringArray0[6] = "NJ";
      stringArray0[7] = "AJFL";
      stringArray0[8] = "YDGI:v^-~O^L";
      boolean boolean0 = DoubleMetaphone.contains("SUGAR", 86, 32, stringArray0);
      assertEquals(9, stringArray0.length);
      assertFalse(boolean0);
      
      char char1 = doubleMetaphone0.charAt("AJFL", 209);
      assertTrue(char1 == char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char1);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("SUGAR", "AJFL", false);
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      char char2 = doubleMetaphone0.charAt("CZ", (-1));
      assertTrue(char2 == char0);
      assertTrue(char2 == char1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char2);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("JF=j");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("JFJ", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone((String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone(".5oGh2*9E", false);
      assertFalse(string2.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("K", string2);
      assertNotNull(string2);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("/vV", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("F", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("/vV");
      assertTrue(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("F", string1);
      assertNotNull(string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("/vV");
      assertTrue(string2.equals((Object)string1));
      assertTrue(string2.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("F", string2);
      assertNotNull(string2);
      
      doubleMetaphone0.setMaxCodeLen(1);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(2245);
      assertEquals(2245, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual(":~-QNG%]/F;T[\"c", ":~-QNG%]/F;T[\"c", false);
      assertEquals(2245, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string3 = doubleMetaphone0.doubleMetaphone("F", true);
      assertTrue(string3.equals((Object)string0));
      assertTrue(string3.equals((Object)string1));
      assertTrue(string3.equals((Object)string2));
      assertEquals(2245, doubleMetaphone0.getMaxCodeLen());
      assertEquals("F", string3);
      assertNotNull(string3);
      
      String string4 = doubleMetaphone0.encode("]/_svBRQs:l+tZ");
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertEquals(2245, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SFPRKSLTS", string4);
      assertNotNull(string4);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("UMB", "]/_svBRQs:l+tZ", true);
      assertFalse(boolean1 == boolean0);
      assertEquals(2245, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("]/_svBRQs:l+tZ", "E", true);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertEquals(2245, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      
      Object object0 = doubleMetaphone0.encode((Object) "UMB");
      assertFalse(object0.equals((Object)string4));
      assertFalse(object0.equals((Object)string2));
      assertFalse(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string3));
      assertEquals(2245, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AM", object0);
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "j*EvVA;S?qx~x7F7");
      assertFalse(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string0));
      assertFalse(object1.equals((Object)string2));
      assertFalse(object1.equals((Object)string1));
      assertFalse(object1.equals((Object)string3));
      assertFalse(object1.equals((Object)string4));
      assertEquals(2245, doubleMetaphone0.getMaxCodeLen());
      assertEquals("JFSKKSKSF", object1);
      assertNotNull(object1);
      
      char char0 = doubleMetaphone0.charAt("/vV", 89);
      assertEquals(2245, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      char char1 = doubleMetaphone0.charAt("<jY", 2245);
      assertTrue(char1 == char0);
      assertEquals(2245, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char1);
      
      char char2 = doubleMetaphone0.charAt("<jY", (-1390));
      assertTrue(char2 == char1);
      assertTrue(char2 == char0);
      assertEquals(2245, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char2);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("KGNPNC");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KKNP", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("S)CHSD");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SKST", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("b^it@G $]0|$ZWish=", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PTKT", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.encode("6Wi6Jcighw^H.7");
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("JS", string1);
      assertNotNull(string1);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) "HYM");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("HM", object0);
      assertNotNull(object0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("gES7t[xpf9:LW%^", "gES7t[xpf9:LW%^");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("gES7t[xpf9:LW%^", false);
      assertFalse(string0.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KSTK", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("a7uC#");
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AK", string1);
      assertNotNull(string1);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("FAO?&<fi");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FF", string0);
      assertNotNull(string0);
      
      Object object0 = doubleMetaphone0.encode((Object) "3(aChj=8K$$v?q[[");
      assertFalse(object0.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KJKF", object0);
      assertNotNull(object0);
      
      String string1 = doubleMetaphone0.encode("3(aChj=8K$$v?q[[");
      assertFalse(string1.equals((Object)string0));
      assertTrue(string1.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KJKF", string1);
      assertNotNull(string1);
      
      Object object1 = doubleMetaphone0.encode((Object) "KJKF");
      assertFalse(object1.equals((Object)string0));
      assertFalse(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KKF", object1);
      assertNotNull(object1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("RS", true);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)object0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)object1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("RS", string2);
      assertNotNull(string2);
      
      String string3 = doubleMetaphone0.doubleMetaphone("FF", true);
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)object1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)object0));
      assertFalse(string3.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("F", string3);
      assertNotNull(string3);
      
      char char0 = doubleMetaphone0.charAt("RS", 78);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      String string4 = doubleMetaphone0.doubleMetaphone("PNQ");
      assertFalse(string4.equals((Object)object1));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NK", string4);
      assertNotNull(string4);
      
      char char1 = doubleMetaphone0.charAt("KJKF", 11);
      assertTrue(char1 == char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char1);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("GNPNCHAE", "GNPNCHAE");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertTrue(boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string0 = doubleMetaphone1.encode("Fddq");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("FTK", string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "GNPNCHAE";
      stringArray0[1] = "FTK";
      stringArray0[2] = "GNPNCHAE";
      stringArray0[3] = "Fddq";
      stringArray0[4] = "Fddq";
      boolean boolean1 = DoubleMetaphone.contains("GNPNCHAE", 139, 139, stringArray0);
      assertEquals(5, stringArray0.length);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("PNACH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NK", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      String string0 = "D^Xp?]h*sN#Gwja3#@";
      int int0 = 75;
      String[] stringArray0 = new String[5];
      stringArray0[0] = "D^Xp?]h*sN#Gwja3#@";
      stringArray0[1] = "D^Xp?]h*sN#Gwja3#@";
      stringArray0[2] = "D^Xp?]h*sN#Gwja3#@";
      stringArray0[3] = "D^Xp?]h*sN#Gwja3#@";
      stringArray0[4] = "D^Xp?]h*sN#Gwja3#@";
      boolean boolean0 = DoubleMetaphone.contains("D^Xp?]h*sN#Gwja3#@", 75, 75, stringArray0);
      assertEquals(5, stringArray0.length);
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string1 = doubleMetaphone0.encode((String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string1);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("D^Xp?]h*sN#Gwja3#@", "D^Xp?]h*sN#Gwja3#@");
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1);
      
      Object object0 = doubleMetaphone0.encode((Object) "D^Xp?]h*sN#Gwja3#@");
      assertFalse(object0.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TKSP", object0);
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "D^Xp?]h*sN#Gwja3#@");
      assertTrue(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TKSP", object1);
      assertNotNull(object1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("PSCE", "D^Xp?]h*sN#Gwja3#@", false);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      
      Object object2 = doubleMetaphone0.encode((Object) "TKSP");
      assertTrue(object2.equals((Object)object1));
      assertFalse(object2.equals((Object)string0));
      assertTrue(object2.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TKSP", object2);
      assertNotNull(object2);
      
      Object object3 = doubleMetaphone0.encode((Object) "TKSP");
      assertFalse(object3.equals((Object)string0));
      assertTrue(object3.equals((Object)object2));
      assertTrue(object3.equals((Object)object1));
      assertTrue(object3.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TKSP", object3);
      assertNotNull(object3);
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("DG", "PSCE", false);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean3);
      
      Object object4 = doubleMetaphone0.encode((Object) "TKSP");
      assertTrue(object4.equals((Object)object1));
      assertTrue(object4.equals((Object)object2));
      assertTrue(object4.equals((Object)object0));
      assertFalse(object4.equals((Object)string0));
      assertTrue(object4.equals((Object)object3));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TKSP", object4);
      assertNotNull(object4);
      
      Object object5 = doubleMetaphone0.encode((Object) "ZO");
      assertFalse(object5.equals((Object)object0));
      assertFalse(object5.equals((Object)object2));
      assertFalse(object5.equals((Object)object3));
      assertFalse(object5.equals((Object)string0));
      assertFalse(object5.equals((Object)object4));
      assertFalse(object5.equals((Object)object1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S", object5);
      assertNotNull(object5);
      
      String string2 = doubleMetaphone0.doubleMetaphone("ZO", false);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)object3));
      assertFalse(string2.equals((Object)object4));
      assertTrue(string2.equals((Object)object5));
      assertFalse(string2.equals((Object)object2));
      assertFalse(string2.equals((Object)object0));
      assertFalse(string2.equals((Object)object1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S", string2);
      assertNotNull(string2);
      
      boolean boolean4 = doubleMetaphone0.isDoubleMetaphoneEqual("D^Xp?]h*sN#Gwja3#@", "WRFF", false);
      assertTrue(boolean4 == boolean0);
      assertTrue(boolean4 == boolean2);
      assertFalse(boolean4 == boolean1);
      assertTrue(boolean4 == boolean3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean4);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.charAt((String) null, 75);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string0 = doubleMetaphone1.doubleMetaphone("^u9QQ $j*", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("KJ", string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone1.doubleMetaphone("GNSKMF");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("NSKM", string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string1);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string0 = doubleMetaphone1.doubleMetaphone("PNCHAE");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("NK", string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string0);
      
      String[] stringArray0 = new String[0];
      boolean boolean0 = DoubleMetaphone.contains("=IJ0g (%W5p([ZF_/S", 199, 199, stringArray0);
      assertEquals(0, stringArray0.length);
      assertFalse(boolean0);
      
      String string1 = doubleMetaphone1.doubleMetaphone("R", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("R", string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string1);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("ILL2");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AL", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("qq vmr*+od_", "ES");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("JtPK|hyDyl>66", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("JTPK", string0);
      assertNotNull(string0);
      
      Object object0 = doubleMetaphone0.encode((Object) "JTPK");
      assertTrue(object0.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("JTPK", object0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("!Id", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("T", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("ff$,&77fR7H62OFZsB", true);
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FFRF", string1);
      assertNotNull(string1);
      
      Object object0 = doubleMetaphone0.encode((Object) "ff$,&77fR7H62OFZsB");
      assertTrue(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FFRF", object0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string0 = doubleMetaphone1.encode("S@-\"0W6eUsBasC|Y2");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("SSPS", string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string0);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("EM", (String) null, false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-21));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string0 = doubleMetaphone0.encode("l@R<s6<Gy");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("LRSK", string0);
      assertNotNull(string0);
      
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("{9W,9d1ATpSV}");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("k3Y.1rcciPLKp");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KRXP", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("7LUH7IfZA)fG79", true);
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("LFSF", string1);
      assertNotNull(string1);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("OGGI", "h^g^N41zZaF/");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.encode("EF/*_dGfkj!JAmxXug");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AFTK", string0);
      assertNotNull(string0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "OGGI";
      stringArray0[1] = "h^g^N41zZaF/";
      stringArray0[2] = "OGGI";
      stringArray0[3] = "h^g^N41zZaF/";
      stringArray0[4] = "h^g^N41zZaF/";
      stringArray0[5] = "h^g^N41zZaF/";
      boolean boolean1 = DoubleMetaphone.contains("OGGI", 1, 83, stringArray0);
      assertEquals(6, stringArray0.length);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("KNPNJOSE");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NPNJ", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("GzUX->!IVSi(]6a3Yt\"0");
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KSKS", string1);
      assertNotNull(string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("WRILLO");
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("RL", string2);
      assertNotNull(string2);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      char char0 = doubleMetaphone0.charAt("?3)},4I`t35mQT", 1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('3', char0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("PSWICZ");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("STS", string0);
      assertNotNull(string0);
      
      Object object0 = doubleMetaphone0.encode((Object) "CH");
      assertFalse(object0.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("K", object0);
      assertNotNull(object0);
      
      String string1 = doubleMetaphone0.doubleMetaphone(".1Znj+t", false);
      assertFalse(string1.equals((Object)object0));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SNJT", string1);
      assertNotNull(string1);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("SH", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("X", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("lNTx<bE(#+cjOh7B,w8", false);
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("LNTK", string1);
      assertNotNull(string1);
      
      String string2 = doubleMetaphone0.encode("lNTx<bE(#+cjOh7B,w8");
      assertTrue(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("LNTK", string2);
      assertNotNull(string2);
      
      doubleMetaphone0.setMaxCodeLen(1);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("SH", false);
      assertFalse(string3.equals((Object)string2));
      assertTrue(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertEquals("X", string3);
      assertNotNull(string3);
      
      Object object0 = doubleMetaphone0.encode((Object) "SH");
      assertTrue(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string1));
      assertTrue(object0.equals((Object)string3));
      assertFalse(object0.equals((Object)string2));
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertEquals("X", object0);
      assertNotNull(object0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("X", "X$v*ZTIy@N*;%nWRJH");
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      char char0 = doubleMetaphone0.charAt("d!'WMXg\"", (-2941));
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      char char1 = doubleMetaphone0.charAt("SH", (-1));
      assertTrue(char1 == char0);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char1);
      
      String string4 = doubleMetaphone0.doubleMetaphone("OWSKY", false);
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)object0));
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertEquals("A", string4);
      assertNotNull(string4);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("'AjO", "7=TRhq[?:z6", true);
      assertFalse(boolean1 == boolean0);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("gh");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("K", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("CZ", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S", string0);
      assertNotNull(string0);
      
      Object object0 = doubleMetaphone0.encode((Object) "S");
      assertTrue(object0.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S", object0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("d< i?B(g|% c||n&", "GNGNVIE2KVTA+FV&KHU", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("GzUX->!Ii(]6a3Yt\"0", "GzUX->!Ii(]6a3Yt\"0");
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1);
      
      String string0 = doubleMetaphone0.encode("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", string0);
      assertNotNull(string0);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("", "");
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      Object object0 = doubleMetaphone0.encode((Object) "GzUX->!Ii(]6a3Yt\"0");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(object0.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KSKS", object0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("BC5#FpbA9");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PKFP", string0);
      assertNotNull(string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("BC5#FpbA9", "GN", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "GN");
      assertFalse(object1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("N", object1);
      assertNotNull(object1);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("2SN", "omD)(2IAiw", true);
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("gMh[m^4\"[xYS>");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KMMK", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("Dh$ZLLL", false);
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TSLL", string1);
      assertNotNull(string1);
      
      Object object0 = new Object();
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("u{>Sg37|L];G@?");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ASKL", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("!");
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", string1);
      assertNotNull(string1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(72);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string2 = doubleMetaphone0.doubleMetaphone("XZQp3A&*0/tZ", false);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SSKP", string2);
      assertNotNull(string2);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string3 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertTrue(string3.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", string3);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotNull(string3);
      
      String string4 = doubleMetaphone1.doubleMetaphone("4oGNV");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("NF", string4);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string4);
      
      String string5 = doubleMetaphone1.encode("4oGNV");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string5.equals((Object)string0));
      assertTrue(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string2));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("NF", string5);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string5);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("gMh[m^4\"[xYS>");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KMMK", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.encode("KMMK");
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KMK", string1);
      assertNotNull(string1);
      
      Object object0 = doubleMetaphone0.encode((Object) "gMh[m^4\"[xYS>");
      assertTrue(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KMMK", object0);
      assertNotNull(object0);
      
      String string2 = doubleMetaphone0.encode("WRGHI}");
      assertFalse(string2.equals((Object)object0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("RK", string2);
      assertNotNull(string2);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("@`yVYFep8?:b", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FFPP", string0);
      assertNotNull(string0);
      
      Object object0 = doubleMetaphone0.encode((Object) "UMB");
      assertFalse(object0.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AM", object0);
      assertNotNull(object0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("@`yVYFep8?:b", "/`Q<31#YU", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      char char0 = doubleMetaphone0.charAt("FFPP", 1207);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("P", " Q", false);
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "UMB";
      stringArray0[1] = "FFPP";
      stringArray0[2] = "@`yVYFep8?:b";
      stringArray0[3] = "FFPP";
      stringArray0[4] = "GBF4NZgHAJp={0-;";
      stringArray0[5] = "@`yVYFep8?:b";
      stringArray0[6] = "@`yVYFep8?:b";
      stringArray0[7] = "Z";
      stringArray0[8] = "GBF4NZgHAJp={0-;";
      // Undeclared exception!
      try { 
        DoubleMetaphone.contains("GBF4NZgHAJp={0-;", 1207, (-2298), stringArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("L", "L");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertTrue(boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("CZ", true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("X", string0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotNull(string0);
      
      Object object0 = new Object();
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("JOSE");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("HS", string0);
      assertNotNull(string0);
      
      Object object0 = doubleMetaphone0.encode((Object) "JOSE");
      assertTrue(object0.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("HS", object0);
      assertNotNull(object0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string1 = doubleMetaphone1.doubleMetaphone("llw:mPgiWd;QpcZ", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)object0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("LMPK", string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      char char0 = doubleMetaphone1.charAt("T_)&", (-1));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals('\u0000', char0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      Object object1 = doubleMetaphone0.encode((Object) "HS");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(object1.equals((Object)string1));
      assertFalse(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S", object1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotNull(object1);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("LI");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("L", string0);
      assertNotNull(string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("S", "gMh[m^4\"[xYS>");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string1 = doubleMetaphone0.encode("PNJOSE");
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NJS", string1);
      assertNotNull(string1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(4321);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("`HvTx", "Q", false);
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("UIbTYJd&", false);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("APTJ", string2);
      assertNotNull(string2);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "e46A", false);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      char char0 = '7';
      String string0 = "JOSE";
      String string1 = doubleMetaphone0.encode("JOSE");
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("HS", string1);
      assertNotNull(string1);
      
      String string2 = "";
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("gg#^wh$7}$EP7vr+}o");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KPFR", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("GhI}");
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("J", string1);
      assertNotNull(string1);
      
      char char0 = doubleMetaphone0.charAt("MA", (-1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("CHOR");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KR", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("gh[m^4\"[YS>");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KMS", string0);
      assertNotNull(string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("f21u/&[R&C|bKaeD0", "KMS");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(4321);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("9Ddq", "S", false);
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      String string1 = doubleMetaphone0.doubleMetaphone("R", false);
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("R", string1);
      assertNotNull(string1);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("u{>Sg37|L];G@?");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ASKL", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("!");
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", string1);
      assertNotNull(string1);
      
      doubleMetaphone0.setMaxCodeLen(1797);
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(72);
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("u{>Sg37|L];G@?");
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("u{>Sg37|L];G@?", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("u{>Sg37|L];G@?", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string2 = doubleMetaphone0.doubleMetaphone("XZQp3A&*0/tZ", false);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SSKPTS", string2);
      assertNotNull(string2);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string3 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("u{>Sg37|L];G@?", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("u{>Sg37|L];G@?", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("u{>Sg37|L];G@?", string3);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotNull(string3);
      
      String string4 = doubleMetaphone1.doubleMetaphone("4o7GNV");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("NF", string4);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string4);
      
      doubleMetaphone0.setMaxCodeLen((-1842));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals((-1842), doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("gMh[m^4\"[xYS>");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KMMK", string0);
      assertNotNull(string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("gMh[m^4\"[xYS>", "S");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(4321);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('7');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("7", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "<gh", false);
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      Object object0 = new Object();
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("7LUH7IfZA)fG79", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("LFSF", string0);
      assertNotNull(string0);
      
      char char0 = doubleMetaphone0.charAt("TTH", 4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("TTH", "A", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("FKJL");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKL", string0);
      assertNotNull(string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-4316));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('d');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string1 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", string1);
      assertNotNull(string1);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('r');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("IER", "i|\"|en>IKDb");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult((-4316));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      String string2 = doubleMetaphone1.doubleMetaphone("FKJL", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(string2.equals((Object)string1));
      assertTrue(string2.equals((Object)string0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("FKL", string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotNull(string2);
      
      Object object0 = doubleMetaphone2.encode((Object) "FKJL");
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertTrue(object0.equals((Object)string2));
      assertTrue(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("FKL", object0);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone2.encode((Object) "FKL");
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertTrue(object1.equals((Object)string0));
      assertFalse(object1.equals((Object)string1));
      assertTrue(object1.equals((Object)string2));
      assertTrue(object1.equals((Object)object0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("FKL", object1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotNull(object1);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("K", "!J T~xC", false);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("L", "L");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-3501));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('L');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('H');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("7LUH7IfZA)fG79", false);
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("LFSF", string1);
      assertNotNull(string1);
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertTrue(boolean1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string2);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("HOEK", "DANGER", true);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("gg#^wh$7}$EP7vr+}o");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KPFR", string0);
      assertNotNull(string0);
      
      doubleMetaphone0.setMaxCodeLen(1797);
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode(",DMqZZkM");
      assertFalse(string1.equals((Object)string0));
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TMKSKM", string1);
      assertNotNull(string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("KPFR");
      assertTrue(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KPFR", string2);
      assertNotNull(string2);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.charAt((String) null, 2201);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(4321);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('7');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("7", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('7');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("7", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("7", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("7", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("7", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("7", string0);
      assertNotNull(string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("]W7t4", "WICZ", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("OI");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("A", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.encode("u{>Sg37|L];G@?");
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ASKL", string1);
      assertNotNull(string1);
      
      doubleMetaphone0.setMaxCodeLen(1797);
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1797);
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string2 = doubleMetaphone0.doubleMetaphone("ASKL");
      assertTrue(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ASKL", string2);
      assertNotNull(string2);
      
      String string3 = doubleMetaphone0.doubleMetaphone("WITZ");
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ATS", string3);
      assertNotNull(string3);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("ED", "ED", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      Object object0 = doubleMetaphone0.encode((Object) "ED");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AT", object0);
      assertNotNull(object0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("ED");
      assertTrue(string0.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AT", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.encode("AT");
      assertTrue(string1.equals((Object)string0));
      assertTrue(string1.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AT", string1);
      assertNotNull(string1);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "]f";
      boolean boolean1 = DoubleMetaphone.contains((String) null, (-85124921), 199, stringArray0);
      assertEquals(1, stringArray0.length);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      boolean boolean2 = DoubleMetaphone.contains((String) null, (-85124921), 199, stringArray0);
      assertEquals(1, stringArray0.length);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("ED", "WRSIAN", true);
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean3);
      
      char char0 = doubleMetaphone0.charAt("]f", (-634));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      Object object1 = doubleMetaphone0.encode((Object) "]f");
      assertFalse(object1.equals((Object)string0));
      assertFalse(object1.equals((Object)string1));
      assertFalse(object1.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("F", object1);
      assertNotNull(object1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string2);
      
      String string3 = doubleMetaphone0.encode("2");
      assertFalse(string3.equals((Object)object0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)object1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", string3);
      assertNotNull(string3);
      
      boolean boolean4 = doubleMetaphone0.isDoubleMetaphoneEqual(":(Xo", "{MN");
      assertTrue(boolean4 == boolean3);
      assertFalse(boolean4 == boolean0);
      assertTrue(boolean4 == boolean1);
      assertTrue(boolean4 == boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean4);
      
      boolean boolean5 = doubleMetaphone0.isDoubleMetaphoneEqual("]f", (String) null, false);
      assertTrue(boolean5 == boolean4);
      assertTrue(boolean5 == boolean3);
      assertFalse(boolean5 == boolean0);
      assertTrue(boolean5 == boolean2);
      assertTrue(boolean5 == boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean5);
      
      boolean boolean6 = DoubleMetaphone.contains("ED", 199, (-1), stringArray0);
      assertEquals(1, stringArray0.length);
      assertTrue(boolean6 == boolean2);
      assertTrue(boolean6 == boolean1);
      assertTrue(boolean6 == boolean4);
      assertTrue(boolean6 == boolean3);
      assertFalse(boolean6 == boolean0);
      assertTrue(boolean6 == boolean5);
      assertFalse(boolean6);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(1797);
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1983));
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult((-1983));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone_DoubleMetaphoneResult1.appendAlternate('f');
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult2 = doubleMetaphone0.new DoubleMetaphoneResult(1797);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult2);
      
      doubleMetaphone_DoubleMetaphoneResult2.appendPrimary("AEqwePZ;1*");
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertEquals("AEqwePZ;1*", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult1.append('0');
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult2);
      
      String string0 = doubleMetaphone0.doubleMetaphone("CHIA", true);
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("K", string0);
      assertNotNull(string0);
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult2.isComplete();
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertEquals("AEqwePZ;1*", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("HU", true);
      assertFalse(string1.equals((Object)string0));
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("H", string1);
      assertNotNull(string1);
      
      Object object0 = doubleMetaphone0.encode((Object) "H");
      assertFalse(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string0));
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", object0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen((-178));
      assertEquals((-178), doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "l1qdj}!2QT?C_Q4";
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "l1qdj}!2QT?C_Q4");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("Zq_Y|[whR");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SKR", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("_ZmRRW?");
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SMR", string1);
      assertNotNull(string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("SMR", false);
      assertTrue(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SMR", string2);
      assertNotNull(string2);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-2542));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('w', '@');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertTrue(boolean0);
      
      String string3 = doubleMetaphone0.doubleMetaphone("_ZmRRW?", false);
      assertTrue(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertTrue(string3.equals((Object)string2));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SMR", string3);
      assertNotNull(string3);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("SMR", "", false);
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      char char0 = doubleMetaphone0.charAt("SMR", 10);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("SKR", "", true);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(4321);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('7');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("7", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('U');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("7", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("U", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string0 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("7", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("U", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("U", string0);
      assertNotNull(string0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('e');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("U", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("7e", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("gMh[m^4\"[xYS>", "S");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(4321);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      String string1 = doubleMetaphone0.doubleMetaphone("UIbTYJd&", false);
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("APTJ", string1);
      assertNotNull(string1);
      
      Object object0 = doubleMetaphone0.encode((Object) "APTJ");
      assertTrue(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("APTJ", object0);
      assertNotNull(object0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("gMh[m^4\"[xYS>", "1Vv]", true);
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("u{>Sg37|L];G@?");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ASKL", string0);
      assertNotNull(string0);
      
      doubleMetaphone0.setMaxCodeLen(1797);
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1797);
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("u{>Sg37|L];G@?", "ASKL", true);
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string1 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertFalse(string1.equals((Object)string0));
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", string1);
      assertNotNull(string1);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("[T", "~<E=M,a,xUDZTZh8BL", true);
      assertTrue(boolean1 == boolean0);
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      Object object0 = doubleMetaphone0.encode((Object) "~<E=M,a,xUDZTZh8BL");
      assertFalse(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string0));
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("MKSTSTJPL", object0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = "wM'gK?GVS,!Ub}";
      String string1 = doubleMetaphone0.encode("wM'gK?GVS,!Ub}");
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("MKKK", string1);
      assertNotNull(string1);
      
      Object object0 = doubleMetaphone0.encode((Object) "wM'gK?GVS,!Ub}");
      assertTrue(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("MKKK", object0);
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "MKKK");
      assertFalse(object1.equals((Object)string1));
      assertFalse(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("MKK", object1);
      assertNotNull(object1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("wM'gK?GVS,!Ub}", "SIAN");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string2 = doubleMetaphone0.encode("SIAN");
      assertFalse(string2.equals((Object)object1));
      assertFalse(string2.equals((Object)object0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SN", string2);
      assertNotNull(string2);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string3 = doubleMetaphone1.doubleMetaphone("BjJt7eUUx,,SNSs7w");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)object0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)object1));
      assertFalse(string3.equals((Object)string1));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("PJTK", string3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string3);
      
      int int0 = 0;
      // Undeclared exception!
      try { 
        doubleMetaphone1.charAt((String) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("u{>Sg37|L];G@?");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ASKL", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("!");
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", string1);
      assertNotNull(string1);
      
      doubleMetaphone0.setMaxCodeLen(1797);
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(72);
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("u{>Sg37|L];G@?");
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("u{>Sg37|L];G@?", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("u{>Sg37|L];G@?", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string2 = doubleMetaphone0.doubleMetaphone("XZQp3A&*0/tZ", false);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SSKPTS", string2);
      assertNotNull(string2);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string3 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("u{>Sg37|L];G@?", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("u{>Sg37|L];G@?", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("u{>Sg37|L];G@?", string3);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotNull(string3);
      
      String string4 = doubleMetaphone1.doubleMetaphone("4oGNV");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("NF", string4);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string4);
      
      doubleMetaphone0.setMaxCodeLen((-1842));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals((-1842), doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) "CAESAR");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SSR", object0);
      assertNotNull(object0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      doubleMetaphone1.setMaxCodeLen(0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(0, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("gg#^wh$7}$EP7vr+}o");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KPFR", string0);
      assertNotNull(string0);
      
      doubleMetaphone0.setMaxCodeLen(1797);
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(1797);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('7');
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("7", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("K?");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("7", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("K?", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string1 = doubleMetaphone1.doubleMetaphone("UCCES", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("AKSS", string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string1);
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("7", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("K?", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string2 = doubleMetaphone0.doubleMetaphone("WM'", true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("M", string2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotNull(string2);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("u{>Sg37|L];G@?");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ASKL", string0);
      assertNotNull(string0);
      
      doubleMetaphone0.setMaxCodeLen(1797);
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1797);
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("u{>Sg37|L];G@?", "ASKL", true);
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", true);
      assertFalse(string1.equals((Object)string0));
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKPKKMNSKTKNKTRKSPXN", string1);
      assertNotNull(string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("ARKPKKMNSKTKNKTRKSPXN", false);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKPKMNSKTKNKTRKSPKSN", string2);
      assertNotNull(string2);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("Zq_Y|[whR");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SKR", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("_ZmRRW?");
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SMR", string1);
      assertNotNull(string1);
      
      char char0 = doubleMetaphone0.charAt("WH", 0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('W', char0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("BACHER");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PKR", string2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotNull(string2);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      doubleMetaphone2.setMaxCodeLen((-16519105));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals((-16519105), doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      
      doubleMetaphone0.setMaxCodeLen(199);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertEquals(199, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      
      // Undeclared exception!
      try { 
        doubleMetaphone2.isDoubleMetaphoneEqual("bgZq)B", "SCH", false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("L", "L");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string0 = doubleMetaphone0.encode("u{>Sg37|L];G@?");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ASKL", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("ALLE", true);
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("A", string1);
      assertNotNull(string1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1805);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(boolean1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("SH", true);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("X", string2);
      assertNotNull(string2);
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(boolean2);
      
      String string3 = doubleMetaphone0.doubleMetaphone("ASKL", false);
      assertFalse(string3.equals((Object)string2));
      assertTrue(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ASKL", string3);
      assertNotNull(string3);
      
      char char0 = doubleMetaphone0.charAt("ASKL", 1805);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("M", "L_6", false);
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean3);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("\"Lh4QU", "$pN{D<h8ce", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "\"Lh4QU";
      stringArray0[1] = "\"Lh4QU";
      stringArray0[2] = "7?Ip8!OtP|Vtstz";
      stringArray0[3] = "";
      stringArray0[4] = "R";
      boolean boolean1 = DoubleMetaphone.contains("", 207, (-167), stringArray0);
      assertEquals(5, stringArray0.length);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("7?Ip8!OtP|Vtstz", "\"Lh4QU", false);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      
      boolean boolean3 = DoubleMetaphone.contains("7?Ip8!OtP|Vtstz", (-1336), 2253, stringArray0);
      assertEquals(5, stringArray0.length);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3);
      
      char char0 = doubleMetaphone0.charAt("R", 88);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("ARCHIT", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKT", string0);
      assertNotNull(string0);
      
      Object object0 = doubleMetaphone0.encode((Object) "T");
      assertFalse(object0.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("T", object0);
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "T");
      assertTrue(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("T", object1);
      assertNotNull(object1);
      
      boolean boolean4 = doubleMetaphone0.isDoubleMetaphoneEqual("ARKT", "", false);
      assertTrue(boolean4 == boolean0);
      assertTrue(boolean4 == boolean2);
      assertTrue(boolean4 == boolean1);
      assertTrue(boolean4 == boolean3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean4);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("gg#^wh$7}$EP7vr+}o");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KPFR", string0);
      assertNotNull(string0);
      
      doubleMetaphone0.setMaxCodeLen(1797);
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(1797);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone1.setMaxCodeLen(1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(1, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(1797);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone_DoubleMetaphoneResult1.appendAlternate("");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      String string1 = doubleMetaphone0.doubleMetaphone(" G", true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("K", string1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotNull(string1);
      
      doubleMetaphone_DoubleMetaphoneResult1.appendPrimary('7');
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("7", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(1, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      
      String string2 = doubleMetaphone1.doubleMetaphone("PSCH", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(1, doubleMetaphone1.getMaxCodeLen());
      assertEquals("X", string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string2);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      char char0 = doubleMetaphone0.charAt("OI", 2154);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "OI";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("T", "OI", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      stringArray0[1] = "OI";
      stringArray0[2] = "OI";
      stringArray0[3] = "OI";
      stringArray0[4] = "OI";
      boolean boolean1 = DoubleMetaphone.contains("OI", 0, 2, stringArray0);
      assertEquals(5, stringArray0.length);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("5}GE^}vupDeh(JY", "OI", true);
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      
      boolean boolean3 = DoubleMetaphone.contains("", 2, 83, stringArray0);
      assertEquals(5, stringArray0.length);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3);
      
      char char1 = doubleMetaphone0.charAt("ARCHIT", 0);
      assertFalse(char1 == char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('A', char1);
      
      String string0 = doubleMetaphone0.doubleMetaphone("CH", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("K", string0);
      assertNotNull(string0);
      
      try { 
        doubleMetaphone0.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("Zq_Y|[whR");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SKR", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("_ZmRRW?");
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SMR", string1);
      assertNotNull(string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", true);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKP", string2);
      assertNotNull(string2);
      
      String string3 = doubleMetaphone0.doubleMetaphone("KNN'", true);
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("N", string3);
      assertNotNull(string3);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKP", string0);
      assertNotNull(string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string1 = doubleMetaphone0.encode("AIS");
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("A", string1);
      assertNotNull(string1);
      
      Object object0 = doubleMetaphone0.encode((Object) "AIS");
      assertTrue(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("A", object0);
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "ARKP");
      assertTrue(object1.equals((Object)string0));
      assertFalse(object1.equals((Object)string1));
      assertFalse(object1.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKP", object1);
      assertNotNull(object1);
      
      Object object2 = doubleMetaphone0.encode((Object) "ARKP");
      assertTrue(object2.equals((Object)string0));
      assertTrue(object2.equals((Object)object1));
      assertFalse(object2.equals((Object)string1));
      assertFalse(object2.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKP", object2);
      assertNotNull(object2);
      
      Object object3 = doubleMetaphone0.encode((Object) "ARKP");
      assertTrue(object3.equals((Object)object1));
      assertTrue(object3.equals((Object)string0));
      assertTrue(object3.equals((Object)object2));
      assertFalse(object3.equals((Object)string1));
      assertFalse(object3.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKP", object3);
      assertNotNull(object3);
      
      Object object4 = doubleMetaphone0.encode((Object) "ARKP");
      assertFalse(object4.equals((Object)object0));
      assertTrue(object4.equals((Object)object3));
      assertTrue(object4.equals((Object)string0));
      assertFalse(object4.equals((Object)string1));
      assertTrue(object4.equals((Object)object1));
      assertTrue(object4.equals((Object)object2));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKP", object4);
      assertNotNull(object4);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("ARKP", "ARKP", true);
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(86);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(boolean2);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('9');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("9", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("A");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("A", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("9", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2982);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("TH", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("0", string0);
      assertNotNull(string0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("TH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TH", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(2982);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TH", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone0.setMaxCodeLen((-862));
      assertEquals((-862), doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult1.appendAlternate('B');
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals((-862), doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("B", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult1.appendPrimary("p0$q-=`X");
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals((-862), doubleMetaphone0.getMaxCodeLen());
      assertEquals("p0$q-=`X", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("B", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals((-862), doubleMetaphone0.getMaxCodeLen());
      assertEquals((-862), int0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKP", string0);
      assertNotNull(string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "GN");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string1 = doubleMetaphone0.encode("HARIS");
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("HRS", string1);
      assertNotNull(string1);
      
      Object object0 = doubleMetaphone0.encode((Object) "Go(7]uhL#YW%={S8@");
      assertFalse(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KLS", object0);
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "KLS");
      assertFalse(object1.equals((Object)string1));
      assertFalse(object1.equals((Object)string0));
      assertTrue(object1.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KLS", object1);
      assertNotNull(object1);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("X22V6;Ti46Frp[pYE", "SUGAR");
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      Object object2 = doubleMetaphone0.encode((Object) "4u`mrw<AQd,R");
      assertFalse(object2.equals((Object)string1));
      assertFalse(object2.equals((Object)string0));
      assertFalse(object2.equals((Object)object1));
      assertFalse(object2.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("MRKT", object2);
      assertNotNull(object2);
      
      Object object3 = doubleMetaphone0.encode((Object) "X22V6;Ti46Frp[pYE");
      assertFalse(object3.equals((Object)string1));
      assertFalse(object3.equals((Object)object1));
      assertFalse(object3.equals((Object)object2));
      assertFalse(object3.equals((Object)string0));
      assertFalse(object3.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SFTF", object3);
      assertNotNull(object3);
      
      Object object4 = doubleMetaphone0.encode((Object) "ARKP");
      assertFalse(object4.equals((Object)object0));
      assertFalse(object4.equals((Object)string1));
      assertFalse(object4.equals((Object)object2));
      assertFalse(object4.equals((Object)object3));
      assertFalse(object4.equals((Object)object1));
      assertTrue(object4.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKP", object4);
      assertNotNull(object4);
      
      Object object5 = doubleMetaphone0.encode((Object) "ARKP");
      assertFalse(object5.equals((Object)object3));
      assertFalse(object5.equals((Object)object0));
      assertFalse(object5.equals((Object)string1));
      assertFalse(object5.equals((Object)object1));
      assertFalse(object5.equals((Object)object2));
      assertTrue(object5.equals((Object)object4));
      assertTrue(object5.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKP", object5);
      assertNotNull(object5);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("PSC", "KLS", false);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1919);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean3 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(boolean3);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone1.new DoubleMetaphoneResult(199);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone_DoubleMetaphoneResult1.appendAlternate('D');
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("D", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("org.apache.commons.codec.EncoderException");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("org.apache.commons.codec.EncoderException", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("gg#^wh$7}$EP7vr+}o");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KPFR", string0);
      assertNotNull(string0);
      
      doubleMetaphone0.setMaxCodeLen(1797);
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string1 = doubleMetaphone1.encode((String) null);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNull(string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("_[D;)/$}aC8K#c");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TKKK", string2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotNull(string2);
      
      char char0 = doubleMetaphone0.charAt("7N;,Mj!{,l_/O12s", (-1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      String string3 = doubleMetaphone1.doubleMetaphone("SCH");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("X", string3);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string3);
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertNotNull(doubleMetaphone3);
      
      DoubleMetaphone doubleMetaphone4 = new DoubleMetaphone();
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      assertNotNull(doubleMetaphone4);
      
      doubleMetaphone4.setMaxCodeLen(0);
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertEquals(0, doubleMetaphone4.getMaxCodeLen());
      assertNotSame(doubleMetaphone4, doubleMetaphone1);
      assertNotSame(doubleMetaphone4, doubleMetaphone2);
      assertNotSame(doubleMetaphone4, doubleMetaphone3);
      assertNotSame(doubleMetaphone4, doubleMetaphone0);
      
      doubleMetaphone4.setMaxCodeLen((-381));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertEquals((-381), doubleMetaphone4.getMaxCodeLen());
      assertNotSame(doubleMetaphone4, doubleMetaphone1);
      assertNotSame(doubleMetaphone4, doubleMetaphone2);
      assertNotSame(doubleMetaphone4, doubleMetaphone3);
      assertNotSame(doubleMetaphone4, doubleMetaphone0);
      
      // Undeclared exception!
      try { 
        doubleMetaphone4.isDoubleMetaphoneEqual("TKKK", "TKKK", false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("KN");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("N", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("PSZI");
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S", string1);
      assertNotNull(string1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("S", "S", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      char char0 = doubleMetaphone0.charAt("_ZmRRW?", 2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('m', char0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("N", "50>0,+:lU");
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      doubleMetaphone0.setMaxCodeLen(2);
      assertEquals(2, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(2, doubleMetaphone0.getMaxCodeLen());
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("QHLQ");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KLK", string0);
      assertNotNull(string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string1 = doubleMetaphone1.doubleMetaphone("");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNull(string1);
      
      char char0 = doubleMetaphone1.charAt("W]\"+W!NJx|BS|w8+eY", 0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals('W', char0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("W]\"+W!NJx|BS|w8+eY", "jQMF.YsOr");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(81);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(81, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      char char0 = doubleMetaphone0.charAt("+ERQo'Lj4@", 72);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("+ERQo'Lj4@", "T", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = DoubleMetaphone.contains("org.apache.commons.codec.EncoderException", 885, 1041, (String[]) null);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("ME", ".@J", false);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2154);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(1279);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult1.append("T", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("D");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("T", string0);
      assertNotNull(string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      doubleMetaphone1.setMaxCodeLen(736);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(736, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(736);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('7');
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("7", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("J*iCf;Gge~5");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("7J*iCf;Gge~5", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String string1 = doubleMetaphone1.doubleMetaphone("", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(736, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNull(string1);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('7');
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("7", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("7J*iCf;Gge~5", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone1.new DoubleMetaphoneResult(3560);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(736, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("D", (String) null, true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("OWSKI", true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AFSK", string2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotNull(string2);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string0 = doubleMetaphone0.doubleMetaphone("E");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("A", string0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotNull(string0);
      
      char char0 = doubleMetaphone0.charAt("=B", 2455);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(2455);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('\u0000');
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("\u0000", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("", false);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNull(string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("?f", false);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("F", string2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotNull(string2);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "HRChfC", false);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "E";
      stringArray0[1] = "<N]lD6S";
      stringArray0[2] = "h5$L>3cK9att}u";
      boolean boolean1 = DoubleMetaphone.contains("org.apache.commons.codec.EncoderException", 2455, 68, stringArray0);
      assertEquals(3, stringArray0.length);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      String string3 = doubleMetaphone0.doubleMetaphone("CIE", false);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S", string3);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotNull(string3);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      char char0 = doubleMetaphone0.charAt("OI", 2154);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(11);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('\u0000', 'j');
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("\u0000", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("j", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("CE");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S", string0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotNull(string0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('!');
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("\u0000", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("j!", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('t', 'L');
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("\u0000t", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("j!L", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("S", "CE");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('n');
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("j!Ln", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("\u0000tn", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("OI");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("\u0000tn", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("j!LnOI", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string1 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("\u0000tn", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("j!LnOI", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("\u0000tn", string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string1);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("}F@)MYFWJ+O!", "SIA");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('\u0000');
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("\u0000tn\u0000", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("j!LnOI\u0000", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string2 = doubleMetaphone0.doubleMetaphone("OI", false);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("A", string2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotNull(string2);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      String string0 = "PS:BSI~C9UE";
      int int0 = (-749);
      int int1 = (-2039);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "PS:BSI~C9UE";
      String string1 = "E3-!vsIDxUgXcM%";
      stringArray0[1] = "E3-!vsIDxUgXcM%";
      String string2 = "5f;71";
      stringArray0[2] = "5f;71";
      stringArray0[3] = "PS:BSI~C9UE";
      stringArray0[4] = "PS:BSI~C9UE";
      boolean boolean0 = DoubleMetaphone.contains("PS:BSI~C9UE", (-749), (-2039), stringArray0);
      assertEquals(5, stringArray0.length);
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string3 = "RG.A";
      boolean boolean1 = false;
      doubleMetaphone0.setMaxCodeLen((-749));
      assertEquals((-749), doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.encode("AEIOUY");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode((String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      doubleMetaphone0.setMaxCodeLen(1797);
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode((String) null);
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertNull(string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("");
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertNull(string2);
      
      char char0 = doubleMetaphone0.charAt("WH", 0);
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals('W', char0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string3 = doubleMetaphone1.doubleMetaphone("SCH");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("X", string3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string3);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      doubleMetaphone2.setMaxCodeLen(76);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(76, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      
      doubleMetaphone2.setMaxCodeLen(199);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(199, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone2.isDoubleMetaphoneEqual("WH", "ME", false);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(199, doubleMetaphone2.getMaxCodeLen());
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = "Zq_Y|[whR";
      String string1 = doubleMetaphone0.encode("Zq_Y|[whR");
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SKR", string1);
      assertNotNull(string1);
      
      String string2 = doubleMetaphone0.encode("SKR");
      assertTrue(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SKR", string2);
      assertNotNull(string2);
      
      String string3 = doubleMetaphone0.encode("Zq_Y|[whR");
      assertTrue(string3.equals((Object)string2));
      assertTrue(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SKR", string3);
      assertNotNull(string3);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      doubleMetaphone1.setMaxCodeLen((-60251329));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals((-60251329), doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = null;
      try {
        doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(2091);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("EF/*_dGf!JAmxXug", (String) null, true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("M7k=PB3I\"L", "M7k=PB3I\"L", false);
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "ZmGq%o`-Ntl$oKRqA";
      boolean boolean2 = DoubleMetaphone.contains("A", 1, 69, stringArray0);
      assertEquals(1, stringArray0.length);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2);
      
      String string0 = doubleMetaphone0.doubleMetaphone("EF/*_dGf!JAmxXug", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AFTK", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("OGY");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AJ", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.encode("AJ");
      assertTrue(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AJ", string1);
      assertNotNull(string1);
      
      doubleMetaphone0.setMaxCodeLen(1797);
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1797);
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('7');
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("7", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string2 = doubleMetaphone0.doubleMetaphone("AEqwePZ;1*", false);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AKPS", string2);
      assertNotNull(string2);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('M');
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("M", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("7", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string3 = doubleMetaphone0.doubleMetaphone("OGY", false);
      assertTrue(string3.equals((Object)string0));
      assertTrue(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AJ", string3);
      assertNotNull(string3);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual(".u&", "j}h", false);
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      Object object0 = doubleMetaphone0.encode((Object) "");
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) "\"Lh4QU");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("LK", object0);
      assertNotNull(object0);
      
      String string0 = doubleMetaphone0.encode("\"Lh4QU");
      assertTrue(string0.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("LK", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.encode("KMde,bDd:gW");
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KMTP", string1);
      assertNotNull(string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("LK", true);
      assertFalse(string2.equals((Object)string1));
      assertTrue(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("LK", string2);
      assertNotNull(string2);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(6);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(boolean0);
      
      String string3 = doubleMetaphone0.doubleMetaphone("I,6H=-ed2iJ(`3PS.ow", true);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ATJP", string3);
      assertNotNull(string3);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKP", string0);
      assertNotNull(string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "GN");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string1 = doubleMetaphone0.encode("HARIS");
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("HRS", string1);
      assertNotNull(string1);
      
      Object object0 = doubleMetaphone0.encode((Object) "Go(7]uhL#YW%={S8@");
      assertFalse(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KLS", object0);
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "KLS");
      assertTrue(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string1));
      assertFalse(object1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KLS", object1);
      assertNotNull(object1);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("HARIS", "4u`mrw<AQd,R");
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      Object object2 = doubleMetaphone0.encode((Object) "KLS");
      assertTrue(object2.equals((Object)object1));
      assertFalse(object2.equals((Object)string0));
      assertTrue(object2.equals((Object)object0));
      assertFalse(object2.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KLS", object2);
      assertNotNull(object2);
      
      Object object3 = doubleMetaphone0.encode((Object) "KLS");
      assertTrue(object3.equals((Object)object0));
      assertFalse(object3.equals((Object)string0));
      assertTrue(object3.equals((Object)object2));
      assertTrue(object3.equals((Object)object1));
      assertFalse(object3.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KLS", object3);
      assertNotNull(object3);
      
      Object object4 = doubleMetaphone0.encode((Object) "KLS");
      assertFalse(object4.equals((Object)string0));
      assertFalse(object4.equals((Object)string1));
      assertTrue(object4.equals((Object)object1));
      assertTrue(object4.equals((Object)object3));
      assertTrue(object4.equals((Object)object2));
      assertTrue(object4.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KLS", object4);
      assertNotNull(object4);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("AU", "AGGI", false);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean3 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(boolean3);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('D');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("D", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("KLS");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("D", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("KLS", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      char char0 = doubleMetaphone0.charAt("OI", 2154);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "OI";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("T", "OI", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      stringArray0[1] = "OI";
      stringArray0[2] = "OI";
      stringArray0[3] = "OI";
      stringArray0[4] = "OI";
      boolean boolean1 = DoubleMetaphone.contains("OI", 0, 2, stringArray0);
      assertEquals(5, stringArray0.length);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("5}GE^}vupDeh(JY", "OI", true);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("OI", "T");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("T", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("OI", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean3 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("T", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("OI", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(boolean3);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('[');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("T", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("OI", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean4 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean4 == boolean0);
      assertTrue(boolean4 == boolean2);
      assertFalse(boolean4 == boolean1);
      assertTrue(boolean4 == boolean3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("T", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("OI", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(boolean4);
      
      // Undeclared exception!
      try { 
        DoubleMetaphone.contains((String) null, 0, 0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      char char0 = doubleMetaphone0.charAt("OI", 2154);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "OI";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("T", "OI", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      stringArray0[1] = "OI";
      stringArray0[2] = "OI";
      stringArray0[3] = "OI";
      stringArray0[4] = "OI";
      boolean boolean1 = DoubleMetaphone.contains("OI", 0, 2, stringArray0);
      assertEquals(5, stringArray0.length);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('\u0000');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string0 = doubleMetaphone1.doubleMetaphone("T", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("T", string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('w');
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertTrue(boolean2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String string1 = doubleMetaphone1.doubleMetaphone("3Uw6NP", true);
      assertFalse(string1.equals((Object)string0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("NP", string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string1);
      
      String string2 = doubleMetaphone1.doubleMetaphone("SH", false);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("X", string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string2);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("z@0B=z`");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SPS", string0);
      assertNotNull(string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string1 = doubleMetaphone0.doubleMetaphone("E");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("A", string1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotNull(string1);
      
      char char0 = doubleMetaphone0.charAt("=B", 2455);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("SPS", "<N]lD6S");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(2455);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('\u0000');
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("\u0000", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string2 = doubleMetaphone0.doubleMetaphone("", false);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNull(string2);
      
      String string3 = doubleMetaphone0.doubleMetaphone("?f", false);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("F", string3);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotNull(string3);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "HRChfC", false);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      doubleMetaphone2.setMaxCodeLen(86);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(86, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("SUGAR", "u{>Sg37|L];G@?", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.encode("u{>Sg37|L];G@?");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ASKL", string0);
      assertNotNull(string0);
      
      doubleMetaphone0.setMaxCodeLen(736);
      assertEquals(736, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1797);
      assertEquals(736, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('7');
      assertEquals(736, doubleMetaphone0.getMaxCodeLen());
      assertEquals("7", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("");
      assertEquals(736, doubleMetaphone0.getMaxCodeLen());
      assertEquals("7", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string1 = doubleMetaphone0.doubleMetaphone("SH", true);
      assertFalse(string1.equals((Object)string0));
      assertEquals(736, doubleMetaphone0.getMaxCodeLen());
      assertEquals("X", string1);
      assertNotNull(string1);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('7');
      assertEquals(736, doubleMetaphone0.getMaxCodeLen());
      assertEquals("7", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("7", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean1 == boolean0);
      assertEquals(736, doubleMetaphone0.getMaxCodeLen());
      assertEquals("7", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("7", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(boolean1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("ASKL", false);
      assertFalse(string2.equals((Object)string1));
      assertTrue(string2.equals((Object)string0));
      assertEquals(736, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ASKL", string2);
      assertNotNull(string2);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      char char0 = doubleMetaphone0.charAt("OI", 2154);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      int int0 = (-20);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "OI";
      String string0 = "T";
      boolean boolean0 = true;
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("T", "OI", true);
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      stringArray0[1] = "OI";
      stringArray0[2] = "OI";
      stringArray0[3] = "OI";
      stringArray0[4] = "OI";
      // Undeclared exception!
      try { 
        DoubleMetaphone.contains("OI", 0, (-20), stringArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKP", string0);
      assertNotNull(string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("LI", "1+dDs XN", true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String[] stringArray0 = new String[0];
      boolean boolean1 = DoubleMetaphone.contains("ARKP", (-75052945), (-75052945), stringArray0);
      assertEquals(0, stringArray0.length);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "x;TT%^h13y>x0/wn`", true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(87);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("x;TT%^h13y>x0/wn`", "r{i");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("r{i", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("x;TT%^h13y>x0/wn`", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      boolean boolean3 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("r{i", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("x;TT%^h13y>x0/wn`", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(boolean3);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone1.new DoubleMetaphoneResult((-75052945));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      boolean boolean4 = doubleMetaphone_DoubleMetaphoneResult1.isComplete();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(boolean4 == boolean2);
      assertFalse(boolean4 == boolean0);
      assertFalse(boolean4 == boolean3);
      assertFalse(boolean4 == boolean1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertTrue(boolean4);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      String string1 = doubleMetaphone1.doubleMetaphone("+=G`M|Vi;h%", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("KMF", string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string1);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("W", (String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("W", "W");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertTrue(boolean1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string0 = doubleMetaphone1.encode("{o)FO3Glt");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("FKLT", string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("SCH");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("X", string1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotNull(string1);
      
      String string2 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", string2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotNull(string2);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult1.isComplete();
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertTrue(boolean2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult1.append('}');
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      char char0 = doubleMetaphone0.charAt("X", 0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('X', char0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("SCH");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      
      String string3 = doubleMetaphone0.doubleMetaphone("");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNull(string3);
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("PN", "CY", false);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3 == boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean3);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("PN");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("SUGAR", "u{>Sg37|L];G@?", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.encode("u{>Sg37|L];G@?");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ASKL", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("!");
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", string1);
      assertNotNull(string1);
      
      doubleMetaphone0.setMaxCodeLen(1797);
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(72);
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("u{>Sg37|L];G@?");
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("u{>Sg37|L];G@?", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("u{>Sg37|L];G@?", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult((-1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone_DoubleMetaphoneResult1.appendAlternate('\'');
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      String string2 = doubleMetaphone0.doubleMetaphone("XZQp3A&*0/tZ", false);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SSKPTS", string2);
      assertNotNull(string2);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string3 = doubleMetaphone0.doubleMetaphone("", true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNull(string3);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("fg_h9a", "", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) "|SLuJt-<5~");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string2));
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SLT", object0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKP", string0);
      assertNotNull(string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string1 = doubleMetaphone0.doubleMetaphone("_ZmRRW?");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SMR", string1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotNull(string1);
      
      char char0 = doubleMetaphone0.charAt("", 2);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("HARAC", "RKFxN*D|");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      doubleMetaphone1.setMaxCodeLen(1053);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(1053, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(1053);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(1053, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('\u0000');
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(1053, doubleMetaphone1.getMaxCodeLen());
      assertEquals("\u0000", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("\u0000", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('1');
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(1053, doubleMetaphone1.getMaxCodeLen());
      assertEquals("\u00001", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("\u0000", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string2 = doubleMetaphone0.doubleMetaphone("GN&J.V1ZX", true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NJFS", string2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotNull(string2);
      
      String string3 = doubleMetaphone1.doubleMetaphone("ISL", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertEquals(1053, doubleMetaphone1.getMaxCodeLen());
      assertEquals("AL", string3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string3);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "AL", false);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      doubleMetaphone0.setMaxCodeLen(8);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(8, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("b'}");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("P", string0);
      assertNotNull(string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(816);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("ARCHIT");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARCHIT", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("ARCHIT", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('m');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARCHITm", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("ARCHITm", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('m', 'm');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARCHITmm", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("ARCHITmm", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone0.setMaxCodeLen(816);
      assertEquals(816, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(816);
      assertEquals(816, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(816, doubleMetaphone0.getMaxCodeLen());
      assertEquals(816, int0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("b'}");
      assertEquals(816, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARCHITmmb'}", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("ARCHITmm", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('m', '5');
      assertEquals(816, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARCHITmmb'}5", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("ARCHITmmm", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("b'}");
      assertEquals(816, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARCHITmmmb'}", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("ARCHITmmb'}5b'}", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('m');
      assertEquals(816, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARCHITmmmb'}", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("ARCHITmmb'}5b'}m", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone0.setMaxCodeLen(0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("P");
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARCHITmmb'}5b'}mP", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("ARCHITmmmb'}P", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string1 = doubleMetaphone0.encode("b'}");
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", string1);
      assertNotNull(string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("Hv;yEW)i'uzXx#B");
      assertTrue(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", string2);
      assertNotNull(string2);
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertFalse(int1 == int0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals(0, int1);
      
      String string3 = doubleMetaphone0.doubleMetaphone("");
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertNull(string3);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = "[n|0vQ.bHWlJB8Kz`%G";
      boolean boolean0 = false;
      doubleMetaphone0.setMaxCodeLen((-2398));
      assertEquals((-2398), doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.encode((Object) "[n|0vQ.bHWlJB8Kz`%G");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("xrD%\"HpH$|0", "u{>Sg37|L];G@?", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("u{>Sg37|L];G@?");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ASKL", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("!");
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", string1);
      assertNotNull(string1);
      
      doubleMetaphone0.setMaxCodeLen(1797);
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(72);
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("u{>Sg37|L];G@?");
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("u{>Sg37|L];G@?", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("u{>Sg37|L];G@?", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult((-6));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone_DoubleMetaphoneResult1.appendAlternate('\'');
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      String string2 = doubleMetaphone0.doubleMetaphone("XZQp3A&*0/tZ", false);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SSKPTS", string2);
      assertNotNull(string2);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string3 = doubleMetaphone1.doubleMetaphone("!", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertTrue(string3.equals((Object)string1));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", string3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string3);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("M|J{s}&\"y#tC(@f", "", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      doubleMetaphone1.setMaxCodeLen(72);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(72, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "M|J{s}&\"y#tC(@f";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "SSKPTS";
      stringArray0[5] = "PNFF";
      stringArray0[6] = "SSKPTS";
      stringArray0[7] = "!";
      boolean boolean2 = DoubleMetaphone.contains("F", (-2137), 1797, stringArray0);
      assertEquals(8, stringArray0.length);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("GNXR", "", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.encode("u{>Sg37|L];G@?");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ASKL", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("!");
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", string1);
      assertNotNull(string1);
      
      doubleMetaphone0.setMaxCodeLen(1797);
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(72);
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(1797);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone_DoubleMetaphoneResult1.append("");
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult2 = doubleMetaphone0.new DoubleMetaphoneResult(1797);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult2);
      
      doubleMetaphone_DoubleMetaphoneResult2.appendAlternate('B');
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("B", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult0);
      
      String string2 = doubleMetaphone0.doubleMetaphone("GNXR", false);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NKSR", string2);
      assertNotNull(string2);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string3 = doubleMetaphone1.doubleMetaphone("", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNull(string3);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("F", "\n9F&", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertTrue(boolean1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen((-426));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals((-426), doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("OGY");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AJ", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.encode("AJ");
      assertTrue(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AJ", string1);
      assertNotNull(string1);
      
      doubleMetaphone0.setMaxCodeLen(1797);
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1797);
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('7');
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("7", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string2 = doubleMetaphone0.doubleMetaphone("AEqwePZ;1*", false);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AKPS", string2);
      assertNotNull(string2);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('M');
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("M", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("7", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("M", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("7", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(boolean0);
      
      String string3 = doubleMetaphone0.doubleMetaphone("+w#~:O.tfa)faO|Co0", true);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TFFK", string3);
      assertNotNull(string3);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKP", string0);
      assertNotNull(string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string1 = doubleMetaphone1.doubleMetaphone("_ZmRRW?");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("SMR", string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string1);
      
      char char0 = doubleMetaphone0.charAt("<N]lD6S", 2);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(']', char0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "_`>ewu");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('1');
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("1", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string2 = doubleMetaphone1.doubleMetaphone("org.apache.commons.codec.EncoderException", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("ARKP", string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string2);
      
      String string3 = doubleMetaphone1.doubleMetaphone("ARKP", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertTrue(string3.equals((Object)string0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("ARKP", string3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotNull(string3);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("MWQ~f Bo!m", "org.apache.commons.codec.EncoderException", false);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      doubleMetaphone1.setMaxCodeLen(2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(2, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      char char0 = doubleMetaphone0.charAt("OI", 2154);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "OI";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("T", "OI", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      stringArray0[1] = "OI";
      stringArray0[2] = "OI";
      stringArray0[3] = "OI";
      stringArray0[4] = "OI";
      boolean boolean1 = DoubleMetaphone.contains("OI", 0, 2, stringArray0);
      assertEquals(5, stringArray0.length);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("5}GE^}vupDeh(JY", "OI", true);
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("OI", "T");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("OI", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("T", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean3 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("OI", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("T", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(boolean3);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('[');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("OI", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("T", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean4 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean4 == boolean2);
      assertFalse(boolean4 == boolean1);
      assertTrue(boolean4 == boolean0);
      assertTrue(boolean4 == boolean3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("OI", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("T", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(boolean4);
      
      String string0 = doubleMetaphone0.doubleMetaphone("OI", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("A", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("cgs.x) /?;tYtD,,V", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KSKS", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("cgs.x) /?;tYtD,,V");
      assertTrue(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KSKS", string1);
      assertNotNull(string1);
      
      String string2 = doubleMetaphone0.encode("KSKS");
      assertTrue(string2.equals((Object)string1));
      assertTrue(string2.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KSKS", string2);
      assertNotNull(string2);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2388);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string3 = doubleMetaphone0.doubleMetaphone("cgs.x) /?;tYtD,,V");
      assertTrue(string3.equals((Object)string1));
      assertTrue(string3.equals((Object)string0));
      assertTrue(string3.equals((Object)string2));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KSKS", string3);
      assertNotNull(string3);
      
      String string4 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", string4);
      assertNotNull(string4);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('}');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("}", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("}", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      char char0 = doubleMetaphone0.charAt("", 0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("}", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("}", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string5 = doubleMetaphone0.doubleMetaphone("", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string5);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('x');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("}x", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("}x", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('E', 'V');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("}xV", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("}xE", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = "org.apache.commons.codec.EncoderException";
      String string1 = "GN";
      String string2 = doubleMetaphone0.doubleMetaphone("ER");
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AR", string2);
      assertNotNull(string2);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "GN");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string3 = "HARIS";
      String string4 = doubleMetaphone0.encode("HARIS");
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("HRS", string4);
      assertNotNull(string4);
      
      String string5 = "Go(7]uhL#YW\\%={S8@";
      Object object0 = doubleMetaphone0.encode((Object) "Go(7]uhL#YW%={S8@");
      assertFalse(object0.equals((Object)string2));
      assertFalse(object0.equals((Object)string4));
      assertFalse(object0.equals((Object)string3));
      assertFalse(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string5));
      assertFalse(object0.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KLS", object0);
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "KLS");
      assertTrue(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string3));
      assertFalse(object1.equals((Object)string2));
      assertFalse(object1.equals((Object)string1));
      assertFalse(object1.equals((Object)string0));
      assertFalse(object1.equals((Object)string4));
      assertFalse(object1.equals((Object)string5));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KLS", object1);
      assertNotNull(object1);
      
      Object object2 = doubleMetaphone0.encode((Object) "KLS");
      assertFalse(object2.equals((Object)string0));
      assertFalse(object2.equals((Object)string5));
      assertFalse(object2.equals((Object)string1));
      assertFalse(object2.equals((Object)string3));
      assertTrue(object2.equals((Object)object1));
      assertFalse(object2.equals((Object)string2));
      assertFalse(object2.equals((Object)string4));
      assertTrue(object2.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KLS", object2);
      assertNotNull(object2);
      
      Object object3 = doubleMetaphone0.encode((Object) "KLS");
      assertFalse(object3.equals((Object)string2));
      assertFalse(object3.equals((Object)string4));
      assertFalse(object3.equals((Object)string0));
      assertTrue(object3.equals((Object)object0));
      assertFalse(object3.equals((Object)string3));
      assertTrue(object3.equals((Object)object1));
      assertFalse(object3.equals((Object)string1));
      assertTrue(object3.equals((Object)object2));
      assertFalse(object3.equals((Object)string5));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KLS", object3);
      assertNotNull(object3);
      
      Object object4 = doubleMetaphone0.encode((Object) "KLS");
      assertFalse(object4.equals((Object)string0));
      assertFalse(object4.equals((Object)string5));
      assertFalse(object4.equals((Object)string4));
      assertFalse(object4.equals((Object)string1));
      assertTrue(object4.equals((Object)object3));
      assertTrue(object4.equals((Object)object1));
      assertTrue(object4.equals((Object)object0));
      assertTrue(object4.equals((Object)object2));
      assertFalse(object4.equals((Object)string3));
      assertFalse(object4.equals((Object)string2));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KLS", object4);
      assertNotNull(object4);
      
      String string6 = "HOEK";
      int int0 = (-1801);
      doubleMetaphone0.setMaxCodeLen((-1801));
      assertEquals((-1801), doubleMetaphone0.getMaxCodeLen());
      
      int int1 = (-3349);
      doubleMetaphone0.setMaxCodeLen((-3349));
      assertEquals((-3349), doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("HOEK", (-3349));
      assertEquals((-3349), doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.doubleMetaphone("HARIS", true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.isDoubleMetaphoneEqual("SUGAR", "u{>Sg37|L];G@?", true);
      String string0 = "!Z/8%I4XGx";
      doubleMetaphone0.isDoubleMetaphoneEqual("G-svm9;2Lr`ir", "!Z/8%I4XGx", true);
      doubleMetaphone0.encode("");
      doubleMetaphone0.isDoubleMetaphoneEqual("DP%>s+im^_QKR", (String) null, true);
      doubleMetaphone0.setMaxCodeLen(3295);
      String string1 = "DD";
      doubleMetaphone0.doubleMetaphone("DD");
      doubleMetaphone0.doubleMetaphone("G-svm9;2Lr`ir", false);
      doubleMetaphone0.isDoubleMetaphoneEqual("SUGAR", "");
      doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "yoU/t[PM| Huy");
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = doubleMetaphone0.doubleMetaphone("9FMjb^94e\"=Sm+*");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.append("", "");
      doubleMetaphone_DoubleMetaphoneResult0.append("9FMjb^94e\"=Sm+*");
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('H');
      doubleMetaphone_DoubleMetaphoneResult0.append('H', 'H');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('m');
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      String string1 = doubleMetaphone0.doubleMetaphone("wWqu83((DhE");
      assertEquals("KT", string1);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("wWqu83((DhE");
      doubleMetaphone0.doubleMetaphone("", false);
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('m');
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('H');
      doubleMetaphone_DoubleMetaphoneResult0.append('E', '\'');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('%');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("wWqu83((DhE");
      doubleMetaphone_DoubleMetaphoneResult0.append('m', '@');
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string2 = doubleMetaphone0.doubleMetaphone("FMPS", false);
      assertEquals("FMPS", string2);
      assertTrue(string2.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      boolean boolean0 = false;
      doubleMetaphone0.doubleMetaphone("", false);
      Object object0 = new Object();
      doubleMetaphone0.doubleMetaphone("}oa)VH1AoBuBBGB>d8", true);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(892);
      doubleMetaphone_DoubleMetaphoneResult0.append('L', 'L');
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone0.doubleMetaphone("", true);
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      // Undeclared exception!
      try { 
        doubleMetaphone1.isDoubleMetaphoneEqual((String) null, "h~d~t.{MFf");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = doubleMetaphone0.doubleMetaphone("SUGAR", true);
      assertEquals("SKR", string0);
      
      doubleMetaphone0.doubleMetaphone("");
      String string1 = doubleMetaphone0.encode("CHORE");
      assertEquals("XR", string1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.append('V');
      String string2 = doubleMetaphone0.doubleMetaphone("SUGAR");
      assertEquals("XKR", string2);
      
      doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      doubleMetaphone_DoubleMetaphoneResult0.append('V');
      char char0 = doubleMetaphone0.charAt("XKR", 0);
      assertEquals('X', char0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("CHORE");
      String string3 = doubleMetaphone0.doubleMetaphone("+Q5>m66#aYaT1IXq=");
      assertEquals("KMTK", string3);
      
      doubleMetaphone0.isDoubleMetaphoneEqual(">^;bWRFVMEv", "XKR", true);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone("2U Uw_ yg_@C3$wrh*", true);
      doubleMetaphone0.doubleMetaphone("2U Uw_ yg_@C3$wrh*");
      doubleMetaphone0.encode("KKR");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2388);
      doubleMetaphone0.doubleMetaphone("2U Uw_ yg_@C3$wrh*");
      doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      doubleMetaphone_DoubleMetaphoneResult0.append('}');
      doubleMetaphone0.charAt("", 0);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('');
      doubleMetaphone0.doubleMetaphone("", false);
      doubleMetaphone_DoubleMetaphoneResult0.append('x');
      doubleMetaphone_DoubleMetaphoneResult0.append('E', 'V');
      assertEquals("}xV", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "m*|U6sS";
      doubleMetaphone0.isDoubleMetaphoneEqual("m*|U6sS", "Z", false);
      doubleMetaphone0.setMaxCodeLen((-1));
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = null;
      try {
        doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-863));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2982);
      doubleMetaphone0.doubleMetaphone("TH", false);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("TH");
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "p0$q-=`X", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode("OGY");
      doubleMetaphone0.doubleMetaphone((String) null);
      doubleMetaphone0.setMaxCodeLen(1797);
      doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      doubleMetaphone0.getMaxCodeLen();
      doubleMetaphone0.isDoubleMetaphoneEqual("AU", "A");
      doubleMetaphone0.encode((Object) "7J&'");
      doubleMetaphone0.isDoubleMetaphoneEqual("CC", "&J.v1Zx", true);
      doubleMetaphone0.doubleMetaphone("", true);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1797);
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('p');
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("7J&'");
      doubleMetaphone0.doubleMetaphone("OGY", false);
      doubleMetaphone0.isDoubleMetaphoneEqual("OGY", (String) null);
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode("}");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("p0$q-=`X", "p0$q-=`X");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.isDoubleMetaphoneEqual("SUGAR", "u{>Sg37|L];G@?", true);
      doubleMetaphone0.encode("u{>Sg37|L];G@?");
      doubleMetaphone0.doubleMetaphone("!");
      doubleMetaphone0.setMaxCodeLen(1797);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(72);
      doubleMetaphone_DoubleMetaphoneResult0.append("u{>Sg37|L];G@?");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult((-1));
      doubleMetaphone_DoubleMetaphoneResult1.appendAlternate('\'');
      doubleMetaphone0.doubleMetaphone("XZQp3A&*0/tZ", false);
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      doubleMetaphone1.doubleMetaphone("!", false);
      doubleMetaphone1.isDoubleMetaphoneEqual("M|J{s}&\"y#tC(@f", "", false);
      doubleMetaphone1.setMaxCodeLen(72);
      assertEquals(72, doubleMetaphone1.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode("OGY");
      doubleMetaphone0.doubleMetaphone((String) null);
      doubleMetaphone0.setMaxCodeLen(1797);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1797);
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('7');
      doubleMetaphone0.doubleMetaphone("AEqwePZ;1*", false);
      doubleMetaphone0.doubleMetaphone((String) null, true);
      doubleMetaphone0.isDoubleMetaphoneEqual("AEqwePZ;1*", (String) null, true);
      doubleMetaphone0.setMaxCodeLen(1797);
      assertEquals(1797, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode("Zq_Y|[whR");
      String string0 = "_ZmRRW?";
      doubleMetaphone0.doubleMetaphone("_ZmRRW?");
      String string1 = "";
      int int0 = 2;
      doubleMetaphone0.charAt("", 2);
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "_ZmRRW?");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode((Object) "");
      doubleMetaphone0.isDoubleMetaphoneEqual("o/v>", "o/v>", true);
      Object object0 = new Object();
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode("OGY");
      String string0 = null;
      doubleMetaphone0.doubleMetaphone((String) null);
      int int0 = 1797;
      doubleMetaphone0.setMaxCodeLen(1797);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1797);
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "KN";
      doubleMetaphone0.isDoubleMetaphoneEqual("KN", "KN", true);
      String string1 = "";
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1104);
      doubleMetaphone_DoubleMetaphoneResult0.append(' ', ' ');
      doubleMetaphone0.doubleMetaphone("CE");
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('F');
      doubleMetaphone_DoubleMetaphoneResult0.append('F', 'F');
      doubleMetaphone0.isDoubleMetaphoneEqual("S", "CE");
      doubleMetaphone_DoubleMetaphoneResult0.append('F');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("}F@)MYFWJ+O!");
      doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      doubleMetaphone0.isDoubleMetaphoneEqual(" FF", " FF");
      doubleMetaphone0.setMaxCodeLen(1104);
      doubleMetaphone_DoubleMetaphoneResult0.append('F');
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary(':');
      doubleMetaphone_DoubleMetaphoneResult0.append(" FF", "}F@)MYFWJ+O!");
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone_DoubleMetaphoneResult0.append('j', ':');
      doubleMetaphone_DoubleMetaphoneResult0.append("IAU", "IAU");
      assertEquals(" FFF: FFjIAU", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = doubleMetaphone0.encode(",w2qx9}:WVE)$");
      assertEquals("KKSF", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("d(<l]", ",w2qx9}:WVE)$");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = null;
      doubleMetaphone0.isDoubleMetaphoneEqual("EF/*_dGf!JAmxXug", (String) null, true);
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, (String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone0.encode((String) null);
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('}');
      char char0 = '=';
      String string0 = "";
      boolean boolean0 = false;
      doubleMetaphone0.doubleMetaphone("?", false);
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("");
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('7');
      doubleMetaphone_DoubleMetaphoneResult0.append('f', '=');
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('=');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('=');
      doubleMetaphone_DoubleMetaphoneResult0.append('=', '=');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("ORCHID");
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('=');
      doubleMetaphone0.setMaxCodeLen(0);
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.appendAlternate((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      // Undeclared exception!
      try { 
        doubleMetaphone0.charAt((String) null, 73);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone0.doubleMetaphone("", false);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "p0$q-=`X", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone((String) null);
      doubleMetaphone0.doubleMetaphone((String) null, true);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2979);
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('2');
      doubleMetaphone_DoubleMetaphoneResult0.append("y");
      doubleMetaphone_DoubleMetaphoneResult0.append('U');
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('U');
      doubleMetaphone0.setMaxCodeLen(2979);
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('U');
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('U');
      assertEquals(2979, doubleMetaphone0.getMaxCodeLen());
      assertEquals("yUU", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone("", false);
      Object object0 = new Object();
      String string0 = "}oa)VH1AoBuBBGB>d8";
      doubleMetaphone0.doubleMetaphone("}oa)VH1AoBuBBGB>d8", true);
      doubleMetaphone0.isDoubleMetaphoneEqual("}oa)VH1AoBuBBGB>d8", "}oa)VH1AoBuBBGB>d8", true);
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.isDoubleMetaphoneEqual("SUGAR", "u{>Sg37|L];G@?", true);
      doubleMetaphone0.isDoubleMetaphoneEqual("G-svm9;2Lr`ir", "!Z/8%I4XGx", true);
      doubleMetaphone0.encode("");
      doubleMetaphone0.isDoubleMetaphoneEqual("DP%>s+im^_QKR", (String) null, true);
      doubleMetaphone0.setMaxCodeLen(3295);
      doubleMetaphone0.doubleMetaphone("DD");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(410);
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone_DoubleMetaphoneResult0.append("");
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone_DoubleMetaphoneResult0.append("org.apache.commons.codec.EncoderException", "SUGAR");
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone0.encode((String) null);
      doubleMetaphone0.doubleMetaphone("u{>Sg37|L];G@?");
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("DP%>s+im^_QKR");
      doubleMetaphone0.doubleMetaphone("SUGAR", true);
      doubleMetaphone_DoubleMetaphoneResult0.append('F');
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone0.encode("ASKLK");
      doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      String string0 = doubleMetaphone0.encode("");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "D";
      stringArray0[2] = "D";
      stringArray0[3] = "D";
      stringArray0[4] = "D";
      boolean boolean0 = DoubleMetaphone.contains("D", (-2822), (-2822), stringArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone("IG|XsvL&g");
      int int0 = 1819;
      doubleMetaphone0.setMaxCodeLen(1819);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1235);
      String string0 = "\"";
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("\"");
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("\"");
      doubleMetaphone_DoubleMetaphoneResult0.append(']');
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('*');
      String string1 = "z]";
      doubleMetaphone_DoubleMetaphoneResult0.append("\"");
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("z]");
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('a');
      doubleMetaphone0.setMaxCodeLen(1235);
      doubleMetaphone0.getMaxCodeLen();
      doubleMetaphone0.setMaxCodeLen((-917));
      doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      // Undeclared exception!
      try { 
        doubleMetaphone0.doubleMetaphone("]\"", false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "";
      doubleMetaphone0.encode("");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-965));
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone_DoubleMetaphoneResult0.append('S');
      doubleMetaphone0.doubleMetaphone((String) null);
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone0.doubleMetaphone("e_+E#~QJS&[f@8^a42", true);
      doubleMetaphone0.getMaxCodeLen();
      doubleMetaphone0.isDoubleMetaphoneEqual("w_U/\"ASLCMpKx{T(M", "w_U/\"ASLCMpKx{T(M");
      String string1 = "";
      try { 
        doubleMetaphone0.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "V p/+=ruh`/5";
      String string1 = "";
      doubleMetaphone0.isDoubleMetaphoneEqual("V p/+=ruh`/5", "", false);
      doubleMetaphone0.setMaxCodeLen((-1));
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = null;
      try {
        doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.setMaxCodeLen(1797);
      doubleMetaphone0.isDoubleMetaphoneEqual("am}3hqr9\bTk>@=%", "c_!EAp`rs`N&j", true);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-911));
      char char0 = '@';
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('@');
      doubleMetaphone0.encode("BxUl,St.1dLoidMM!");
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("Uo =mA7HgA");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.isDoubleMetaphoneEqual("W", "W");
      doubleMetaphone0.setMaxCodeLen((-2271));
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = null;
      try {
        doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "q ";
      doubleMetaphone0.encode("q ");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      String string1 = null;
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.appendPrimary((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2901);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('k');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("k", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-856));
      doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone0.doubleMetaphone("", true);
      doubleMetaphone_DoubleMetaphoneResult0.append('5');
      doubleMetaphone0.getMaxCodeLen();
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      char char0 = '~';
      doubleMetaphone_DoubleMetaphoneResult0.append('~', '~');
      String string0 = "=h)W?";
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append("", "=h)W?");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "b'}";
      doubleMetaphone0.doubleMetaphone("b'}");
      int int0 = 816;
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(816);
      Object object0 = new Object();
      doubleMetaphone_DoubleMetaphoneResult0.append("ARCHIT");
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "7j&'f(Ca";
      doubleMetaphone0.isDoubleMetaphoneEqual("7j&'f(Ca", (String) null);
      doubleMetaphone0.getMaxCodeLen();
      String string1 = null;
      doubleMetaphone0.doubleMetaphone((String) null);
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(4);
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.setMaxCodeLen((-864));
      String string0 = "UXJxVroFI8";
      // Undeclared exception!
      try { 
        doubleMetaphone0.doubleMetaphone("a");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "frcDje";
      doubleMetaphone0.encode("frcDje");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-440));
      doubleMetaphone_DoubleMetaphoneResult0.append('x', '`');
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append("EB");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone("CHORE", true);
      doubleMetaphone0.doubleMetaphone("CHORE");
      doubleMetaphone0.encode("XR");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.append('A');
      doubleMetaphone0.doubleMetaphone("CHORE");
      doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      doubleMetaphone_DoubleMetaphoneResult0.append('}');
      doubleMetaphone0.charAt("", 0);
      doubleMetaphone_DoubleMetaphoneResult0.append("CHORE");
      doubleMetaphone0.doubleMetaphone("");
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", (String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = doubleMetaphone0.doubleMetaphone("9FMjb^94e\"=Sm+*");
      assertEquals("FMPS", string0);
      assertNotNull(string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.append("", "");
      doubleMetaphone_DoubleMetaphoneResult0.append("9FMjb^94e\"=Sm+*");
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('H');
      doubleMetaphone_DoubleMetaphoneResult0.append('H', 'H');
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone0.doubleMetaphone((String) null, true);
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("9FMjb^94e\"=Sm+*", "YlKh6@S!Gw1W");
      assertFalse(boolean0);
      
      doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "org.apache.commons.codec.EncoderException");
      doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "9FMjb^94e\"=Sm+*", true);
      Object object0 = doubleMetaphone0.encode((Object) "YlKh6@S!Gw1W");
      assertEquals("ALKS", object0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "TCH", true);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }
}
