/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 06 01:23:01 GMT 2021
 */

package org.apache.commons.codec.language;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.codec.language.DoubleMetaphone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DoubleMetaphone_ESTest extends DoubleMetaphone_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("SCHEmR");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("SKMR", string0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) ")B8UGH\"|");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("P", object0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("PSCHER");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("XR", string0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("KNSB~GLID)+", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("NSPK", string0);
      
      Object object0 = doubleMetaphone0.encode((Object) "SIA");
      assertFalse(object0.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("S", object0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("sb~GLID)+");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("SPKL", string0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("P8|c qz%6hf?");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("PKSF", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("P8|c qz%6hf?", false);
      assertTrue(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("PKSF", string1);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "WR";
      stringArray0[1] = "M";
      stringArray0[2] = "\"";
      boolean boolean0 = DoubleMetaphone.contains("\"", 79, 79, stringArray0);
      assertEquals(3, stringArray0.length);
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("CHs'$bej6da+vN2#!UZ", "\"", false);
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) "Ign!0W'vL1{#R69");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("AKNF", object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "AKNF");
      assertTrue(object1.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object1);
      assertEquals("AKNF", object1);
      
      Object object2 = doubleMetaphone0.encode((Object) "AKNF");
      assertTrue(object2.equals((Object)object0));
      assertTrue(object2.equals((Object)object1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object2);
      assertEquals("AKNF", object2);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("(6gET");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KT", string0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("CHR");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KR", string0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("dGYEQx)c;My");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("JKKS", string0);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "JKKS", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) "UCCES");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("AKSS", object0);
      
      String string0 = "PSHOLZ";
      boolean boolean0 = true;
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("PSHOLZ", "AKSS", true);
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      String string1 = "CHIA";
      int int0 = (-858);
      int int1 = 68;
      String[] stringArray0 = new String[8];
      doubleMetaphone0.setMaxCodeLen((-3569));
      assertEquals((-3569), doubleMetaphone0.getMaxCodeLen());
      
      stringArray0[0] = "UCCES";
      stringArray0[1] = "CHIA";
      stringArray0[2] = "UCCES";
      stringArray0[3] = "UCCES";
      // Undeclared exception!
      try { 
        doubleMetaphone0.encode("HOLM");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("/q**L/QEgH3");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KLKK", string0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("iGN");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("AKN", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("Q");
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("K", string1);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("GNUGH&'D3WG1IF?G0|H");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("NFTK", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("UgH&'D3W]G1iF?g0|H", false);
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("AKTK", string1);
      
      String string2 = doubleMetaphone0.encode("UgH&'D3W]G1iF?g0|H");
      assertFalse(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("AKTK", string2);
      
      Object object0 = doubleMetaphone0.encode((Object) "AKTK");
      assertFalse(object0.equals((Object)string0));
      assertTrue(object0.equals((Object)string2));
      assertTrue(object0.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("AKTK", object0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("MCC(ne'", "MCC(ne'");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string0 = doubleMetaphone0.encode("OS");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("AS", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("OS");
      assertTrue(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("AS", string1);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("jCCEE", "WRUGH&'3W1II?G0N|H", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("jCCEE");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("JX", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("jCCEE", false);
      assertTrue(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("JX", string1);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("=kmJk[42aX");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KMKK", string0);
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "KMKK";
      stringArray0[1] = "KMKK";
      stringArray0[2] = "=kmJk[42aX";
      stringArray0[3] = "=kmJk[42aX";
      stringArray0[4] = "=kmJk[42aX";
      stringArray0[5] = "KMKK";
      stringArray0[6] = "KMKK";
      stringArray0[7] = "KMKK";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("KNYFPIGH", "KMKK", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      stringArray0[8] = "?%`Ha>MD";
      boolean boolean1 = DoubleMetaphone.contains("=kmJk[42aX", 74, 1, stringArray0);
      assertTrue(boolean1 == boolean0);
      assertEquals(9, stringArray0.length);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      String string0 = "}62kt3<66a8W!X";
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("}62kt3<66a8W!X", "Pq&Vx1GEoqFaC");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "UgH&'3W1ii?g0N|H");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("`1eGHBuJaExut-A47 {");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KPJK", string0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("^");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone(" o!GUmBw^J0(CD", true);
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("AKMP", string1);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone(" GEsbyIzi", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("JSPS", string0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("1eGHBuJaExut-A47 {");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KPJK", string0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("EjAl.");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("AJL", string0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("MCHE");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("MK", string0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("GY");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("K", string0);
      
      Object object0 = doubleMetaphone0.encode((Object) "K[oxp!\"");
      assertFalse(object0.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("KKSP", object0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("AeGYnMM9");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("AJNM", string0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("PNORG.APACHE.COMMONS.CODEC.ENCODEREXCEPTION", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("NRKP", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("OGY", "GNUCCEE", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("ARKP", string1);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("'CCEE");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("X", string0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(67);
      assertEquals(67, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("SH");
      assertEquals(67, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("X", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("Z", "eYfPIgh");
      assertEquals(67, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("QJFFXyv", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KJFK", string0);
      
      Object object0 = doubleMetaphone0.encode((Object) "->]URasP=.9q");
      assertFalse(object0.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("RSPK", object0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("PS", true);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("S", string1);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(67);
      assertEquals(67, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("SH");
      assertEquals(67, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("X", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("Z", "YfPIgh", true);
      assertEquals(67, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string0 = doubleMetaphone1.doubleMetaphone("X~N7]SF-s[S");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("SNSF", string0);
      
      String string1 = doubleMetaphone1.doubleMetaphone("C8zZI@+'@", true);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("KTS", string1);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("JN");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("JN", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("OWSKY", "PSCI", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string0 = doubleMetaphone1.encode("zvzAchv-4#>1Zdn;`");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("SFSK", string0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("HU", "p");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("/GnGCjZ&/g&>%(V", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("NKKS", string0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("GH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("K", string0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("IER", "gHpMLSQwk'@z");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      Object object0 = doubleMetaphone0.encode((Object) "IER");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("A", object0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("BAKNCHAE", "oQ#$VWLIH<Wn#,6Q", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone((String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("KNCHAE", "KNCHAE", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("QaJOSV");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KJSF", string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("KNSIAN", (String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("KNSIAN", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("NSN", string0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("HU", "PSQYZZ_C.", false);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("ARKP", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("HU", false);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("H", string1);
      
      Object object0 = doubleMetaphone0.encode((Object) "ARKP");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(object0.equals((Object)string1));
      assertTrue(object0.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("ARKP", object0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = "op4*}}:\"/Ee>n0\\vVi'";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("op4*}}:\"/Ee>n0vVi'", "op4*}}:\"/Ee>n0vVi'", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string1 = "05K1EOD[M68JTUZk";
      String string2 = doubleMetaphone0.doubleMetaphone("op4*}}:\"/Ee>n0vVi'", true);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("APNF", string2);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("DG", "op4*}}:\"/Ee>n0vVi'");
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      boolean boolean2 = true;
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("op4*}}:\"/Ee>n0vVi'", "05K1EOD[M68JTUZk", true);
      assertFalse(boolean3 == boolean0);
      assertFalse(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean3);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      boolean boolean0 = doubleMetaphone2.isDoubleMetaphoneEqual("0o1Ll", "0o1Ll", true);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string0 = doubleMetaphone2.encode("SC");
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("SK", string0);
      
      boolean boolean1 = DoubleMetaphone.contains("2<dB{8bUyA4_'9_;b", (-1), (-1), (String[]) null);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("PNJOSE");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("NJS", string0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      Object object0 = doubleMetaphone0.encode((Object) "");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(object0.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("", object0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("TH");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("0", string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("qYZZ_C.");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("KSK", string2);
      
      try { 
        doubleMetaphone1.encode((Object) doubleMetaphone0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      int int0 = doubleMetaphone2.getMaxCodeLen();
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals(4, int0);
      
      String string0 = doubleMetaphone2.doubleMetaphone("{fLqqBXqeubK:", true);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("FLKP", string0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string0 = doubleMetaphone0.doubleMetaphone("PN.GHWXRY`P`4A", true);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("NKKS", string0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("@-  TZw>Ci");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("TSS", string0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("N/}N]Nyg*-0m5,DDZ", "$V0EI-W");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("I{LLA");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("AL", string0);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("I{LLA", "WRACH", false);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("I{LLA", "gR|LPn1Z", true);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      
      String string1 = doubleMetaphone0.doubleMetaphone("h|,#|9Rsj>zFtHcE\"pP");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("RSSF", string1);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals(4, int0);
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertNotNull(doubleMetaphone3);
      
      String string0 = doubleMetaphone2.doubleMetaphone("0W{qXxdg:>9<?)/F`B");
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone3);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KKST", string0);
      
      DoubleMetaphone doubleMetaphone4 = new DoubleMetaphone();
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      assertNotNull(doubleMetaphone4);
      
      int int1 = doubleMetaphone3.getMaxCodeLen();
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone4);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone4));
      assertTrue(int1 == int0);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertEquals(4, int1);
      
      DoubleMetaphone doubleMetaphone5 = new DoubleMetaphone();
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone2));
      assertEquals(4, doubleMetaphone5.getMaxCodeLen());
      assertNotNull(doubleMetaphone5);
      
      DoubleMetaphone doubleMetaphone6 = new DoubleMetaphone();
      assertFalse(doubleMetaphone6.equals((Object)doubleMetaphone5));
      assertFalse(doubleMetaphone6.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone6.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone6.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone6.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone6.equals((Object)doubleMetaphone2));
      assertEquals(4, doubleMetaphone6.getMaxCodeLen());
      assertNotNull(doubleMetaphone6);
      
      String string1 = doubleMetaphone6.encode("KKST");
      assertNotSame(doubleMetaphone6, doubleMetaphone5);
      assertNotSame(doubleMetaphone6, doubleMetaphone0);
      assertNotSame(doubleMetaphone6, doubleMetaphone1);
      assertNotSame(doubleMetaphone6, doubleMetaphone3);
      assertNotSame(doubleMetaphone6, doubleMetaphone4);
      assertNotSame(doubleMetaphone6, doubleMetaphone2);
      assertFalse(doubleMetaphone6.equals((Object)doubleMetaphone5));
      assertFalse(doubleMetaphone6.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone6.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone6.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone6.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone6.equals((Object)doubleMetaphone2));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone6.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("KST", string1);
      
      String string2 = doubleMetaphone2.encode("GNSCH");
      assertNotSame(doubleMetaphone2, doubleMetaphone6);
      assertNotSame(doubleMetaphone2, doubleMetaphone5);
      assertNotSame(doubleMetaphone2, doubleMetaphone4);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone3);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone6));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone5));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("NX", string2);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("ZW@4Fq");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("SFK", string0);
      
      Object object0 = doubleMetaphone0.encode((Object) "#i;1Grjn3*e:<=@");
      assertFalse(object0.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("KRN", object0);
      
      String string1 = doubleMetaphone0.encode("#i;1Grjn3*e:<=@");
      assertTrue(string1.equals((Object)object0));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("KRN", string1);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      String string2 = doubleMetaphone0.encode("#i;1Grjn3*e:<=@");
      assertTrue(string2.equals((Object)object0));
      assertFalse(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("KRN", string2);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual(" Q", "ts*`q\"Sas?]eB", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "KRN";
      stringArray0[1] = " Q";
      stringArray0[2] = "KRN";
      stringArray0[3] = " Q";
      stringArray0[4] = "KRN";
      stringArray0[6] = "giGeXxe";
      stringArray0[7] = " Q";
      stringArray0[8] = "KRN";
      boolean boolean1 = DoubleMetaphone.contains("KRN", 1886, 1886, stringArray0);
      assertTrue(boolean1 == boolean0);
      assertEquals(9, stringArray0.length);
      assertFalse(boolean1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("CHOR", "org.apache.commons.codec.EncoderException");
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      boolean boolean3 = doubleMetaphone1.isDoubleMetaphoneEqual("HOLZ", "$q2Q(t7Tk", false);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean3);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-12));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      int int0 = doubleMetaphone2.getMaxCodeLen();
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals(4, int0);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("6_zJ@Y%^eG\"d[YMw", "IER", true);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean0);
      
      int int1 = doubleMetaphone2.getMaxCodeLen();
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertTrue(int1 == int0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals(4, int1);
      
      String string0 = doubleMetaphone1.doubleMetaphone("WRKRN", true);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("RKRN", string0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "org.apache.commons.codec.EncoderException";
      stringArray0[1] = "org.apache.commons.codec.EncoderException";
      stringArray0[2] = "org.apache.commons.codec.EncoderException";
      boolean boolean0 = DoubleMetaphone.contains("org.apache.commons.codec.EncoderException", 946, 946, stringArray0);
      assertEquals(3, stringArray0.length);
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("ARKP", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException");
      assertTrue(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("ARKP", string1);
      
      doubleMetaphone0.setMaxCodeLen(946);
      assertEquals(946, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("nNX<,/HHo`", true);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(946, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("NKS", string2);
      
      Object object0 = doubleMetaphone0.encode((Object) "org.apache.commons.codec.EncoderException");
      assertFalse(object0.equals((Object)string2));
      assertFalse(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string0));
      assertEquals(946, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("ARKPXKMNSKTKNKTRKSPXN", object0);
      
      boolean boolean1 = DoubleMetaphone.contains("org.apache.commons.codec.EncoderException", 946, (-463), stringArray0);
      assertTrue(boolean1 == boolean0);
      assertEquals(3, stringArray0.length);
      assertFalse(boolean1);
      
      Object object1 = doubleMetaphone0.encode((Object) "org.apache.commons.codec.EncoderException");
      assertFalse(object1.equals((Object)string1));
      assertTrue(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string0));
      assertFalse(object1.equals((Object)string2));
      assertEquals(946, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object1);
      assertEquals("ARKPXKMNSKTKNKTRKSPXN", object1);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertNotNull(doubleMetaphone3);
      
      String string0 = doubleMetaphone3.doubleMetaphone("Z", false);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("S", string0);
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone3);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertTrue(int1 == int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int1);
      
      String string1 = doubleMetaphone2.encode("S");
      assertNotSame(doubleMetaphone2, doubleMetaphone3);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertTrue(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("S", string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("S", false);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone3);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertTrue(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("S", string2);
      
      String string3 = doubleMetaphone1.doubleMetaphone("I{LLA");
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string3);
      assertEquals("AL", string3);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("WR&QV/B0ZAIL:S`~", "SH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.encode("WR&QV/B0ZAIL:S`~");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("RKFP", string0);
      
      doubleMetaphone0.setMaxCodeLen(13);
      assertEquals(13, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("WR&QV/B0ZAIL:S`~", "GNWICZ", false);
      assertTrue(boolean1 == boolean0);
      assertEquals(13, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      String string1 = doubleMetaphone0.doubleMetaphone("c.7DJSQYb", false);
      assertFalse(string1.equals((Object)string0));
      assertEquals(13, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("KTSKP", string1);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(13, doubleMetaphone0.getMaxCodeLen());
      assertEquals(13, int0);
      
      String string2 = doubleMetaphone0.encode("org.apache.commons.codec.EncoderException");
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(13, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("ARKPXKMNSKTKN", string2);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("PN#I4$#U\"Q)(P.B", "8=$C5A+sz_&0TDNN", true);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertEquals(13, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      boolean boolean3 = doubleMetaphone1.isDoubleMetaphoneEqual("WRZA", "K", false);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean3);
      
      int int1 = doubleMetaphone1.getMaxCodeLen();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(int1 == int0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals(4, int1);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      String string0 = doubleMetaphone2.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("ARKP", string0);
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(int1 == int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int1);
      
      String string1 = doubleMetaphone0.encode("IN");
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("AN", string1);
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertNotNull(doubleMetaphone3);
      
      boolean boolean0 = doubleMetaphone3.isDoubleMetaphoneEqual("CHORE", "VAN ", false);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone2.isDoubleMetaphoneEqual("A", "H", false);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone3);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(boolean1);
      
      int int2 = doubleMetaphone0.getMaxCodeLen();
      assertNotSame(doubleMetaphone0, doubleMetaphone3);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(int2 == int1);
      assertTrue(int2 == int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int2);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) "#i;1Grjn3*e:<=@");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("KRN", object0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("|h&z]yp3X-g(Ha", "p^C");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone1.encode("CE");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string0.equals((Object)object0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("S", string0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("#i;1Grjn3*e:<=@", "6b&:[/r");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean1);
      
      String string1 = doubleMetaphone2.encode("6b&:[/r");
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)object0));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("PR", string1);
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(int1 == int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int1);
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertNotNull(doubleMetaphone3);
      
      boolean boolean2 = doubleMetaphone2.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "FX", false);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone3);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(boolean2);
      
      String string2 = doubleMetaphone1.doubleMetaphone("e3B", false);
      assertNotSame(doubleMetaphone1, doubleMetaphone3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)object0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("AP", string2);
      
      DoubleMetaphone doubleMetaphone4 = new DoubleMetaphone();
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      assertNotNull(doubleMetaphone4);
      
      String string3 = doubleMetaphone4.doubleMetaphone("%4(w]-1)S_KK;", false);
      assertNotSame(doubleMetaphone4, doubleMetaphone2);
      assertNotSame(doubleMetaphone4, doubleMetaphone3);
      assertNotSame(doubleMetaphone4, doubleMetaphone0);
      assertNotSame(doubleMetaphone4, doubleMetaphone1);
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)object0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      assertNotNull(string3);
      assertEquals("SK", string3);
      
      Object object1 = new Object();
      assertNotNull(object1);
      
      try { 
        doubleMetaphone3.encode(object1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(72);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("oa");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("A", string0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertTrue(int1 == int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("A", "A", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string1 = doubleMetaphone0.encode("GN);;B^DG[\"/>");
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("NPTK", string1);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("TTH", "WH", false);
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(28);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("EWSKI");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("ASK", string0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      int int1 = doubleMetaphone1.getMaxCodeLen();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(int1 == int0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals(4, int1);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("TLNJ", "EWSKI", false);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string1 = doubleMetaphone0.encode("TLNJ");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("TLNJ", string1);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("TTH", "TLNJ", true);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("`#~A", "");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals(4, int0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      String string0 = doubleMetaphone2.doubleMetaphone("Z", false);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("S", string0);
      
      int int1 = doubleMetaphone1.getMaxCodeLen();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertTrue(int1 == int0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals(4, int1);
      
      String string1 = doubleMetaphone0.encode("z,*@.LK}*<<)>k2pPc&");
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("SLKK", string1);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("z,*@.LK}*<<)>k2pPc&", "M:RcH", false);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean1);
      
      String string2 = doubleMetaphone0.encode("HARIS");
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("HRS", string2);
      
      boolean boolean2 = doubleMetaphone1.isDoubleMetaphoneEqual("R6", "PNPNE`B4Y#IHA\"5YJVMFN-M", false);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      int int0 = (-2677);
      doubleMetaphone0.setMaxCodeLen((-2677));
      assertEquals((-2677), doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen((-2677));
      assertEquals((-2677), doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.encode((Object) "PS9F(7PJ!");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("ARKP", string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(123);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("ARKP", "org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string1 = doubleMetaphone1.encode("PNJOSE");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("NJS", string1);
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals(4, int0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      int int1 = doubleMetaphone1.getMaxCodeLen();
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(int1 == int0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals(4, int1);
      
      boolean boolean1 = doubleMetaphone2.isDoubleMetaphoneEqual("ARKP", "ARKP");
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertTrue(boolean1);
      
      String string2 = doubleMetaphone2.encode("z3M4jQB]ZY8,D-~H0&[");
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("SMJK", string2);
      
      int int2 = doubleMetaphone2.getMaxCodeLen();
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertTrue(int2 == int1);
      assertTrue(int2 == int0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals(4, int2);
      
      String string3 = doubleMetaphone2.doubleMetaphone("B}WZ0QFCjX uf_1#", false);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(string3);
      assertEquals("PSKF", string3);
      
      String string4 = doubleMetaphone2.doubleMetaphone("AU", true);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(string4);
      assertEquals("A", string4);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      String string0 = doubleMetaphone2.doubleMetaphone(";96w.\"u}[F^yLl=");
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("FL", string0);
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals(4, int0);
      
      String string1 = doubleMetaphone1.encode(";96w.\"u}[F^yLl=");
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("FL", string1);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("5wH*X&qa8^iOa5:");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KSK", string0);
      
      doubleMetaphone0.setMaxCodeLen(81);
      assertEquals(81, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("5wH*X&qa8^iOa5:", "5wH*X&qa8^iOa5:", false);
      assertEquals(81, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      Object object0 = doubleMetaphone0.encode((Object) "5wH*X&qa8^iOa5:");
      assertTrue(object0.equals((Object)string0));
      assertEquals(81, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("KSK", object0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("5wH*X&qa8^iOa5:", "W#", true);
      assertFalse(boolean1 == boolean0);
      assertEquals(81, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("KSK", "SUGAR", false);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertEquals(81, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      
      String string1 = doubleMetaphone0.doubleMetaphone("SUGAR", false);
      assertFalse(string1.equals((Object)object0));
      assertFalse(string1.equals((Object)string0));
      assertEquals(81, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("XKR", string1);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(28);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("EWSKI");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("ASK", string0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string1 = doubleMetaphone1.doubleMetaphone("CZ");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("S", string1);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("tX}xWF", "a~83Rr<cn~&9y?`<", true);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "org.apache.commons.codec.EncoderException";
      stringArray0[1] = "org.apache.commons.codec.EncoderException";
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(77);
      assertEquals(77, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", (String) null, true);
      assertEquals(77, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string0 = doubleMetaphone0.doubleMetaphone("WRILLO");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(77, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("RL", string0);
      
      String string1 = doubleMetaphone1.doubleMetaphone(">=ws`7r< k=", true);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("SRK", string1);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("PSUW.", "RL", false);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone2.encode((Object) "org.apache.commons.codec.EncoderException");
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(object1.equals((Object)string0));
      assertFalse(object1.equals((Object)string1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(object1);
      assertEquals("ARKP", object1);
      
      boolean boolean2 = doubleMetaphone2.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "org.apache.commons.codec.EncoderException", false);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertTrue(boolean2);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-12));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult2 = doubleMetaphone0.new DoubleMetaphoneResult((-12));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult2);
      
      doubleMetaphone_DoubleMetaphoneResult2.append(')', '~');
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult3 = doubleMetaphone0.new DoubleMetaphoneResult(1380);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult3.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult3.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult3);
      
      doubleMetaphone_DoubleMetaphoneResult1.append('w');
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult2);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult3);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult3));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("w", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("w", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult3.isComplete();
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult3, doubleMetaphone_DoubleMetaphoneResult2);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult3, doubleMetaphone_DoubleMetaphoneResult1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult3, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult3.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult3.getPrimary());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone(".GHwXRy`P`4a");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KKSR", string0);
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult1.isComplete();
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult2);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult3);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult3));
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("w", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("w", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertTrue(boolean1);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "OO");
      assertFalse(object1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object1);
      assertEquals("A", object1);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "ILLO", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(9);
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone(");;b^DG[\"/>");
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("PTK", string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(9);
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('X');
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      assertEquals("X", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string1 = doubleMetaphone0.doubleMetaphone("PTK");
      assertTrue(string1.equals((Object)string0));
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("PTK", string1);
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      assertEquals("X", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("zm%:r6G*Er");
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("Xzm%:r6G*", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual(");;b^DG[\"/>", "zm%:r6G*Er");
      assertTrue(boolean1 == boolean0);
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string2 = doubleMetaphone1.doubleMetaphone("i", true);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("A", string2);
      
      boolean boolean2 = doubleMetaphone1.isDoubleMetaphoneEqual("H&,Q`Tny%XuD`SVWaF", "F");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean2);
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("z#xz", "AGGI");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean3);
      
      boolean boolean4 = doubleMetaphone1.isDoubleMetaphoneEqual(".-HX|$c[*i\"X7 \"U&", "z#xz");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean4 == boolean3);
      assertTrue(boolean4 == boolean1);
      assertTrue(boolean4 == boolean2);
      assertTrue(boolean4 == boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean4);
      
      String string3 = doubleMetaphone1.doubleMetaphone("AP2bo2;zK=E|H@cd3", false);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string3);
      assertEquals("APPS", string3);
      
      doubleMetaphone0.setMaxCodeLen(1816);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(1816, doubleMetaphone0.getMaxCodeLen());
      
      String string4 = doubleMetaphone1.doubleMetaphone("GNS", false);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string4);
      assertEquals("NS", string4);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string0 = doubleMetaphone1.encode("R:zr6UyJ");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("RSRJ", string0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      int int0 = doubleMetaphone2.getMaxCodeLen();
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals(4, int0);
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertNotNull(doubleMetaphone3);
      
      String string1 = doubleMetaphone3.doubleMetaphone("B2/");
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("P", string1);
      
      DoubleMetaphone doubleMetaphone4 = new DoubleMetaphone();
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      assertNotNull(doubleMetaphone4);
      
      int int1 = doubleMetaphone4.getMaxCodeLen();
      assertNotSame(doubleMetaphone4, doubleMetaphone2);
      assertNotSame(doubleMetaphone4, doubleMetaphone1);
      assertNotSame(doubleMetaphone4, doubleMetaphone0);
      assertNotSame(doubleMetaphone4, doubleMetaphone3);
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertTrue(int1 == int0);
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      assertEquals(4, int1);
      
      String string2 = doubleMetaphone4.encode("PNORG.APACHE.COMMONS.CODEC.ENCODEREXCEPTION");
      assertNotSame(doubleMetaphone4, doubleMetaphone2);
      assertNotSame(doubleMetaphone4, doubleMetaphone1);
      assertNotSame(doubleMetaphone4, doubleMetaphone0);
      assertNotSame(doubleMetaphone4, doubleMetaphone3);
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("NRKP", string2);
      
      DoubleMetaphone doubleMetaphone5 = new DoubleMetaphone();
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone5.getMaxCodeLen());
      assertNotNull(doubleMetaphone5);
      
      String string3 = doubleMetaphone5.doubleMetaphone("SIO", false);
      assertNotSame(doubleMetaphone5, doubleMetaphone3);
      assertNotSame(doubleMetaphone5, doubleMetaphone2);
      assertNotSame(doubleMetaphone5, doubleMetaphone4);
      assertNotSame(doubleMetaphone5, doubleMetaphone1);
      assertNotSame(doubleMetaphone5, doubleMetaphone0);
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone5.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertEquals(4, doubleMetaphone5.getMaxCodeLen());
      assertNotNull(string3);
      assertEquals("S", string3);
      
      boolean boolean0 = doubleMetaphone4.isDoubleMetaphoneEqual("PNORG.APACHE.COMMONS.CODEC.ENCODEREXCEPTION", "ZO", false);
      assertNotSame(doubleMetaphone4, doubleMetaphone2);
      assertNotSame(doubleMetaphone4, doubleMetaphone5);
      assertNotSame(doubleMetaphone4, doubleMetaphone1);
      assertNotSame(doubleMetaphone4, doubleMetaphone0);
      assertNotSame(doubleMetaphone4, doubleMetaphone3);
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone5));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string4 = doubleMetaphone4.doubleMetaphone("N", false);
      assertNotSame(doubleMetaphone4, doubleMetaphone2);
      assertNotSame(doubleMetaphone4, doubleMetaphone5);
      assertNotSame(doubleMetaphone4, doubleMetaphone1);
      assertNotSame(doubleMetaphone4, doubleMetaphone0);
      assertNotSame(doubleMetaphone4, doubleMetaphone3);
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone5));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      assertNotNull(string4);
      assertEquals("N", string4);
      
      Object object0 = doubleMetaphone1.encode((Object) "NRKP");
      assertNotSame(doubleMetaphone1, doubleMetaphone3);
      assertNotSame(doubleMetaphone1, doubleMetaphone4);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone5);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone5));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string4));
      assertFalse(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string3));
      assertTrue(object0.equals((Object)string2));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("NRKP", object0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-493));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(85);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      String string0 = doubleMetaphone0.encode("CH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("K", string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals(4, int0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      String string1 = doubleMetaphone1.encode("`#~A");
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("", string1);
      
      boolean boolean0 = doubleMetaphone2.isDoubleMetaphoneEqual("K", "org.apache.commons.codec.EncoderException", true);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone2.isDoubleMetaphoneEqual("CH", "K");
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertTrue(boolean1);
      
      boolean boolean2 = doubleMetaphone2.isDoubleMetaphoneEqual("XWRz`7P)yA-7dH#f", "KNKD", true);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(boolean2);
      
      int int1 = doubleMetaphone2.getMaxCodeLen();
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertTrue(int1 == int0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals(4, int1);
      
      String string2 = doubleMetaphone2.doubleMetaphone("K", false);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string1));
      assertTrue(string2.equals((Object)string0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("K", string2);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("SK", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("SK", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("UMB", true);
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("AM", string1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("SK", (String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string2 = doubleMetaphone0.doubleMetaphone("u:bFzH{,xJ]/H)%O", true);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("APFJ", string2);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("pxA:gG?!~:3)lM", "GNS");
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      String string3 = doubleMetaphone0.doubleMetaphone("+U.MfL?_E;'ek", true);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string3);
      assertEquals("MFLK", string3);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("SK", "SK");
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean2);
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("+U.MfL?_E;'ek", "S");
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean3);
      
      String string4 = doubleMetaphone0.doubleMetaphone("UMB", true);
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      assertTrue(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string4);
      assertEquals("AM", string4);
      
      doubleMetaphone0.setMaxCodeLen((-4454));
      assertEquals((-4454), doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.doubleMetaphone("SK", false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("ARKP", string0);
      
      Object object0 = doubleMetaphone0.encode((Object) "]!~bJ.%@}{QpPx`");
      assertFalse(object0.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("PJKP", object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "PJKP");
      assertFalse(object1.equals((Object)string0));
      assertFalse(object1.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object1);
      assertEquals("PKP", object1);
      
      Object object2 = doubleMetaphone0.encode((Object) "PKP");
      assertTrue(object2.equals((Object)object1));
      assertFalse(object2.equals((Object)string0));
      assertFalse(object2.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object2);
      assertEquals("PKP", object2);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "]!~bJ.%@}{QpPx`";
      stringArray0[1] = "WRCZ";
      stringArray0[2] = "]!~bJ.%@}{QpPx`";
      stringArray0[3] = "]!~bJ.%@}{QpPx`";
      stringArray0[4] = "WRCZ";
      stringArray0[5] = "WRCZ";
      stringArray0[6] = "WRCZ";
      String string1 = doubleMetaphone0.encode("k~H:Gi|H:U;eAp-km*");
      assertFalse(string1.equals((Object)object0));
      assertFalse(string1.equals((Object)object2));
      assertFalse(string1.equals((Object)object1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("KJPK", string1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("WRCZ", "WRCZ", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      stringArray0[7] = "WRCZ";
      boolean boolean1 = DoubleMetaphone.contains("WRCZ", (-195), (-195), stringArray0);
      assertFalse(boolean1 == boolean0);
      assertEquals(8, stringArray0.length);
      assertFalse(boolean1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "WRCZ");
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("PSCZ", "]!~bJ.%@}{QpPx`", false);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean3);
      
      Object object3 = doubleMetaphone0.encode((Object) "PJKP");
      assertFalse(object3.equals((Object)object0));
      assertFalse(object3.equals((Object)string1));
      assertFalse(object3.equals((Object)string0));
      assertTrue(object3.equals((Object)object2));
      assertTrue(object3.equals((Object)object1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object3);
      assertEquals("PKP", object3);
      
      Object object4 = doubleMetaphone0.encode((Object) "PKP");
      assertFalse(object4.equals((Object)string0));
      assertTrue(object4.equals((Object)object1));
      assertTrue(object4.equals((Object)object3));
      assertTrue(object4.equals((Object)object2));
      assertFalse(object4.equals((Object)object0));
      assertFalse(object4.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object4);
      assertEquals("PKP", object4);
      
      boolean boolean4 = doubleMetaphone0.isDoubleMetaphoneEqual("PSCZ", "]!~bJ.%@}{QpPx`");
      assertTrue(boolean4 == boolean2);
      assertTrue(boolean4 == boolean3);
      assertFalse(boolean4 == boolean0);
      assertTrue(boolean4 == boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean4);
      
      Object object5 = doubleMetaphone0.encode((Object) "PKP");
      assertFalse(object5.equals((Object)object0));
      assertFalse(object5.equals((Object)string1));
      assertTrue(object5.equals((Object)object4));
      assertTrue(object5.equals((Object)object2));
      assertFalse(object5.equals((Object)string0));
      assertTrue(object5.equals((Object)object1));
      assertTrue(object5.equals((Object)object3));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object5);
      assertEquals("PKP", object5);
      
      Object object6 = doubleMetaphone0.encode((Object) "WRCZ");
      assertFalse(object6.equals((Object)object2));
      assertFalse(object6.equals((Object)string1));
      assertFalse(object6.equals((Object)object5));
      assertFalse(object6.equals((Object)object4));
      assertFalse(object6.equals((Object)object1));
      assertFalse(object6.equals((Object)object0));
      assertFalse(object6.equals((Object)object3));
      assertFalse(object6.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object6);
      assertEquals("RS", object6);
      
      String string2 = doubleMetaphone0.doubleMetaphone("KNCZ", true);
      assertFalse(string2.equals((Object)object4));
      assertFalse(string2.equals((Object)object2));
      assertFalse(string2.equals((Object)object0));
      assertFalse(string2.equals((Object)object1));
      assertFalse(string2.equals((Object)object3));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)object5));
      assertFalse(string2.equals((Object)object6));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("NX", string2);
      
      String string3 = doubleMetaphone0.doubleMetaphone("HYM", false);
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)object4));
      assertFalse(string3.equals((Object)object2));
      assertFalse(string3.equals((Object)object5));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)object6));
      assertFalse(string3.equals((Object)object0));
      assertFalse(string3.equals((Object)object3));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)object1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string3);
      assertEquals("HM", string3);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(28);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual(".ygeG", ".ygeG");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      String string0 = doubleMetaphone1.doubleMetaphone("\u0001o");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("A", string0);
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals(4, int0);
      
      String string1 = doubleMetaphone2.doubleMetaphone("org.apache.commons.codec.EncoderException", true);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("ARKP", string1);
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertNotNull(doubleMetaphone3);
      
      String string2 = doubleMetaphone3.encode("ARCHIT");
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("ARKT", string2);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "org.apache.commons.codec.EncoderException";
      stringArray0[1] = "ARKP";
      stringArray0[2] = "I";
      stringArray0[3] = "\u0001o";
      stringArray0[4] = "org.apache.commons.codec.EncoderException";
      boolean boolean1 = DoubleMetaphone.contains("ARKT", 384, 28, stringArray0);
      assertFalse(boolean1 == boolean0);
      assertEquals(5, stringArray0.length);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("CC");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("K", string0);
      
      String string1 = "ME";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("ME", "ME", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "ME");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(1227);
      assertEquals(1227, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "!^L1!Y";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("CAESAR", "dbHB!UL?`D?B1?N", false);
      assertEquals(1227, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string1 = "YSL";
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("!^L1!Y", "YSL", false);
      assertTrue(boolean1 == boolean0);
      assertEquals(1227, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("YSL", "CAESAR");
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertEquals(1227, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      
      Object object0 = doubleMetaphone0.encode((Object) "!^L1!Y");
      assertFalse(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string1));
      assertEquals(1227, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("L", object0);
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("DT", "XjF]uOQMEUWEuR5]GE");
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertEquals(1227, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean3);
      
      String string2 = doubleMetaphone0.encode("dbHB!UL?`D?B1?N");
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)object0));
      assertEquals(1227, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("TPPLTPN", string2);
      
      int int0 = 89;
      int int1 = (-1100);
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        DoubleMetaphone.contains("!^L1!Y", 89, (-1100), stringArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) "#i;1Grjn3*e:<=@");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("KRN", object0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("KRN", "CY");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean0);
      
      Object object1 = doubleMetaphone1.encode((Object) "#i;1Grjn3*e:<=@");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(object1.equals((Object)object0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(object1);
      assertEquals("KRN", object1);
      
      Object object2 = doubleMetaphone1.encode((Object) "KRN");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(object2.equals((Object)object0));
      assertTrue(object2.equals((Object)object1));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(object2);
      assertEquals("KRN", object2);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("CY", "gl", false);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      Object object3 = doubleMetaphone0.encode((Object) "PSEL");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(object3.equals((Object)object0));
      assertFalse(object3.equals((Object)object2));
      assertFalse(object3.equals((Object)object1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object3);
      assertEquals("SL", object3);
      
      Object object4 = doubleMetaphone0.encode((Object) "CY");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(object4.equals((Object)object3));
      assertFalse(object4.equals((Object)object0));
      assertFalse(object4.equals((Object)object1));
      assertFalse(object4.equals((Object)object2));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object4);
      assertEquals("S", object4);
      
      Object object5 = doubleMetaphone0.encode((Object) "SL");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(object5.equals((Object)object3));
      assertFalse(object5.equals((Object)object0));
      assertFalse(object5.equals((Object)object1));
      assertFalse(object5.equals((Object)object2));
      assertFalse(object5.equals((Object)object4));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object5);
      assertEquals("SL", object5);
      
      boolean boolean2 = doubleMetaphone1.isDoubleMetaphoneEqual("#i;1Grjn3*e:<=@", "E", true);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean2);
      
      String string0 = doubleMetaphone1.doubleMetaphone("KNEWSKI", false);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string0.equals((Object)object3));
      assertFalse(string0.equals((Object)object0));
      assertFalse(string0.equals((Object)object4));
      assertFalse(string0.equals((Object)object2));
      assertFalse(string0.equals((Object)object1));
      assertFalse(string0.equals((Object)object5));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("NSK", string0);
      
      String string1 = doubleMetaphone1.doubleMetaphone("PSEL", true);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)object1));
      assertFalse(string1.equals((Object)object4));
      assertFalse(string1.equals((Object)object0));
      assertFalse(string1.equals((Object)string0));
      assertTrue(string1.equals((Object)object5));
      assertTrue(string1.equals((Object)object3));
      assertFalse(string1.equals((Object)object2));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("SL", string1);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-493));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string0 = doubleMetaphone0.encode("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("49PRGncWU&uq4ZxY", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("PRKN", string1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      String string2 = doubleMetaphone1.doubleMetaphone("9+o-_VEBV");
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("FPF", string2);
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertNotNull(doubleMetaphone3);
      
      int int1 = doubleMetaphone3.getMaxCodeLen();
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertTrue(int1 == int0);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertEquals(4, int1);
      
      int int2 = doubleMetaphone0.getMaxCodeLen();
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone3);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(int2 == int1);
      assertTrue(int2 == int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int2);
      
      String string3 = doubleMetaphone3.encode("Z");
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertNotNull(string3);
      assertEquals("S", string3);
      
      int int3 = doubleMetaphone1.getMaxCodeLen();
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(int3 == int0);
      assertTrue(int3 == int2);
      assertTrue(int3 == int1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals(4, int3);
      
      int int4 = doubleMetaphone1.getMaxCodeLen();
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(int4 == int1);
      assertTrue(int4 == int2);
      assertTrue(int4 == int0);
      assertTrue(int4 == int3);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals(4, int4);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(9);
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone(");;b^DG[\"/>");
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("PTK", string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(9);
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('X');
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      assertEquals("X", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string1 = doubleMetaphone0.doubleMetaphone("PTK");
      assertTrue(string1.equals((Object)string0));
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("PTK", string1);
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      assertEquals("X", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("zm%:r6G*Er");
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      assertEquals("Xzm%:r6G*", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      doubleMetaphone1.setMaxCodeLen(1869);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(1869, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone1.new DoubleMetaphoneResult(0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(1869, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone_DoubleMetaphoneResult1.append('X', ')');
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(1869, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult2 = doubleMetaphone0.new DoubleMetaphoneResult(9);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult2);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual(");;b^DG[\"/>", "#}", true);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertEquals(1869, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean1);
      
      boolean boolean2 = doubleMetaphone1.isDoubleMetaphoneEqual("PTK", "\t");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertEquals(1869, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean2);
      
      Object object0 = doubleMetaphone1.encode((Object) "PTK");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(object0.equals((Object)string0));
      assertTrue(object0.equals((Object)string1));
      assertEquals(1869, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("PTK", object0);
      
      String string2 = doubleMetaphone1.doubleMetaphone(");;b^DG[\"/>", true);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertTrue(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      assertTrue(string2.equals((Object)object0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(1869, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("PTK", string2);
      
      doubleMetaphone0.setMaxCodeLen(0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("#}", "org.apache.commons.codec.EncoderException", false);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean3 == boolean0);
      assertFalse(boolean3 == boolean2);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean3);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("HQ1yiGND[");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KNT", string0);
      
      String string1 = "";
      String string2 = doubleMetaphone0.doubleMetaphone("KNT");
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("NT", string2);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "ACH");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(9);
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) ");;b^DG[\"/>");
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("PTK", object0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("");
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("jj||cnb[}X", "hdB, OyL19");
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string1 = doubleMetaphone1.doubleMetaphone("TCH", false);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)object0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("X", string1);
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals(4, int0);
      
      String string2 = doubleMetaphone0.encode("");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      assertNull(string2);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertNotNull(doubleMetaphone3);
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertNotSame(doubleMetaphone0, doubleMetaphone3);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(int1 == int0);
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      assertEquals(9, int1);
      
      String string3 = doubleMetaphone3.encode("db/(W\"N7C0K#>");
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(string3.equals((Object)object0));
      assertFalse(string3.equals((Object)string1));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertNotNull(string3);
      assertEquals("TPNK", string3);
      
      DoubleMetaphone doubleMetaphone4 = new DoubleMetaphone();
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      assertNotNull(doubleMetaphone4);
      
      int int2 = doubleMetaphone4.getMaxCodeLen();
      assertNotSame(doubleMetaphone4, doubleMetaphone0);
      assertNotSame(doubleMetaphone4, doubleMetaphone1);
      assertNotSame(doubleMetaphone4, doubleMetaphone3);
      assertNotSame(doubleMetaphone4, doubleMetaphone2);
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(int2 == int1);
      assertTrue(int2 == int0);
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      assertEquals(4, int2);
      
      int int3 = doubleMetaphone4.getMaxCodeLen();
      assertNotSame(doubleMetaphone4, doubleMetaphone0);
      assertNotSame(doubleMetaphone4, doubleMetaphone1);
      assertNotSame(doubleMetaphone4, doubleMetaphone3);
      assertNotSame(doubleMetaphone4, doubleMetaphone2);
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertTrue(int3 == int2);
      assertTrue(int3 == int0);
      assertFalse(int3 == int1);
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      assertEquals(4, int3);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-12));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("ACH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("AK", string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      String string1 = doubleMetaphone0.encode("y]ge");
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("AJ", string1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("`#~A", "");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals(4, int0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      int int1 = doubleMetaphone1.getMaxCodeLen();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertTrue(int1 == int0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals(4, int1);
      
      String string2 = doubleMetaphone0.encode("z,*@.LK}*<<)>k2pPc&");
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("SLKK", string2);
      
      int int2 = doubleMetaphone0.getMaxCodeLen();
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(int2 == int0);
      assertTrue(int2 == int1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int2);
      
      int int3 = doubleMetaphone0.getMaxCodeLen();
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(int3 == int1);
      assertTrue(int3 == int2);
      assertTrue(int3 == int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int3);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "SLKK";
      stringArray0[1] = "X";
      boolean boolean1 = DoubleMetaphone.contains("JJ", 4, 4, stringArray0);
      assertTrue(boolean1 == boolean0);
      assertEquals(2, stringArray0.length);
      assertFalse(boolean1);
      
      String string3 = doubleMetaphone2.doubleMetaphone("k!`(8HH\"F^}B<", false);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(string3);
      assertEquals("KFP", string3);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-12));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      String string0 = doubleMetaphone0.encode("y]ge");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("AJ", string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult2 = doubleMetaphone0.new DoubleMetaphoneResult(760);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult2);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult3 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult3.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult3.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult3);
      
      doubleMetaphone_DoubleMetaphoneResult3.append(')', ')');
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult3, doubleMetaphone_DoubleMetaphoneResult1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult3, doubleMetaphone_DoubleMetaphoneResult0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult3, doubleMetaphone_DoubleMetaphoneResult2);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult3.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult3.getPrimary());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult4 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult4.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult4.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult4.equals((Object)doubleMetaphone_DoubleMetaphoneResult3));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult4.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult4.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult4.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult4);
      
      doubleMetaphone_DoubleMetaphoneResult3.append('2');
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult3, doubleMetaphone_DoubleMetaphoneResult4);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult3, doubleMetaphone_DoubleMetaphoneResult1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult3, doubleMetaphone_DoubleMetaphoneResult0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult3, doubleMetaphone_DoubleMetaphoneResult2);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult4));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult3.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult3.getPrimary());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult2);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult4);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult3);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult4));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult3));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertTrue(boolean0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("au0TG@S[`*Iw");
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("ATKS", string1);
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult3.isComplete();
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult3, doubleMetaphone_DoubleMetaphoneResult4);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult3, doubleMetaphone_DoubleMetaphoneResult1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult3, doubleMetaphone_DoubleMetaphoneResult0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult3, doubleMetaphone_DoubleMetaphoneResult2);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult4));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult3.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult3.getPrimary());
      assertTrue(boolean1);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      Object object1 = doubleMetaphone1.encode((Object) "@T*Gy&LYV'p$=)g6b.");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(object1.equals((Object)string0));
      assertFalse(object1.equals((Object)string1));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(object1);
      assertEquals("TKLF", object1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("2}@B-W+K&~Tx1e>K?", "ATKS", true);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("jJ", "AJ", true);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(boolean3 == boolean0);
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean3);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-493));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string0 = doubleMetaphone0.encode("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      String string1 = doubleMetaphone1.doubleMetaphone("9+o-_VEBV");
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("FPF", string1);
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertNotNull(doubleMetaphone3);
      
      int int1 = doubleMetaphone3.getMaxCodeLen();
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertTrue(int1 == int0);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertEquals(4, int1);
      
      String string2 = doubleMetaphone2.encode("JOSE");
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone3);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("HS", string2);
      
      int int2 = doubleMetaphone3.getMaxCodeLen();
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertTrue(int2 == int0);
      assertTrue(int2 == int1);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertEquals(4, int2);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone(".T)J=E0");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("TJ", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("TJ", "DU");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      Object object0 = doubleMetaphone0.encode((Object) "CY");
      assertFalse(object0.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("S", object0);
      
      String string1 = doubleMetaphone0.encode("TJ");
      assertFalse(string1.equals((Object)object0));
      assertTrue(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("TJ", string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("&(:");
      assertFalse(string2.equals((Object)object0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("", string2);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertTrue(int1 == int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int1);
      
      String string3 = doubleMetaphone0.doubleMetaphone("?H", true);
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)object0));
      assertTrue(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string3);
      assertEquals("", string3);
      
      String string4 = doubleMetaphone0.doubleMetaphone("SCH", false);
      assertFalse(string4.equals((Object)object0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string4);
      assertEquals("X", string4);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("SCH", "DU");
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      doubleMetaphone0.setMaxCodeLen(4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("QU!9;q'Z0J9I_  ^#GJ", "WCQJ");
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      
      String string5 = doubleMetaphone0.doubleMetaphone("4-TwRg.Y;z8Y}`*", false);
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)object0));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string5);
      assertEquals("TRKS", string5);
      
      doubleMetaphone0.setMaxCodeLen(66);
      assertEquals(66, doubleMetaphone0.getMaxCodeLen());
      
      String string6 = doubleMetaphone0.doubleMetaphone("MC", false);
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)string2));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)object0));
      assertFalse(string6.equals((Object)string4));
      assertEquals(66, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string6);
      assertEquals("MK", string6);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(28);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("EWSKI");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("ASK", string0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('c');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("c", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("c", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      int int1 = doubleMetaphone1.getMaxCodeLen();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(int1 == int0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals(4, int1);
      
      String string1 = doubleMetaphone1.doubleMetaphone("}WZ@vJ#r9^`vF _h", false);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("SFJR", string1);
      
      String string2 = doubleMetaphone1.doubleMetaphone("CZ");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("S", string2);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("F3^HXrW", "_!R9FF'_A\"Mb, 2", false);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      boolean boolean2 = doubleMetaphone1.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "CZ", true);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "OGY";
      stringArray0[1] = "OGY";
      stringArray0[2] = "OGY";
      stringArray0[3] = "R:z'r,6UyJ";
      stringArray0[4] = "OGY";
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("OGY");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("AJ", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("R:z'r,6UyJ", "R:z'r,6UyJ");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      boolean boolean1 = DoubleMetaphone.contains("OGY", (-1780), (-2121), stringArray0);
      assertFalse(boolean1 == boolean0);
      assertEquals(5, stringArray0.length);
      assertFalse(boolean1);
      
      boolean boolean2 = DoubleMetaphone.contains("OGY", (-2121), 325, stringArray0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertEquals(5, stringArray0.length);
      assertFalse(boolean2);
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("TH", "org.apache.commons.codec.EncoderException", false);
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean3);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string0 = doubleMetaphone1.encode("R:z'r,6UyJ");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("RSRJ", string0);
      
      doubleMetaphone1.setMaxCodeLen(0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(0, doubleMetaphone1.getMaxCodeLen());
      
      String string1 = "";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("WICZ", "WICZ");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string2 = "gl";
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("WICZ", "", false);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      Object object0 = doubleMetaphone1.encode((Object) "R:z'r,6UyJ");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string2));
      assertEquals(0, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("", object0);
      
      Object object1 = doubleMetaphone1.encode((Object) "");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(0, doubleMetaphone1.getMaxCodeLen());
      assertNull(object1);
      
      try { 
        doubleMetaphone1.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = "Cf}U}Q9b";
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string1 = doubleMetaphone0.doubleMetaphone("Cf}U}Q9b");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("KFKP", string1);
      
      String string2 = "KN";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("KN", "KN");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      // Undeclared exception!
      try { 
        doubleMetaphone1.isDoubleMetaphoneEqual("", "wPFx.p:Y2~", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("EWSKI", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("AFSK", string0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("CIA", "O7s 3fob*rGB>", true);
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("O7s 3fob*rGB>", "CIO");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("O", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("C", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.charAt((String) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = "JD";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("JD", "^rw");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string1 = "";
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("SK", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("SK", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("UMB", true);
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("AM", string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("u:bFzH{,xJ]/H)%O", true);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("APFJ", string2);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      String string3 = doubleMetaphone0.doubleMetaphone("AM", true);
      assertTrue(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string3);
      assertEquals("AM", string3);
      
      String string4 = doubleMetaphone0.doubleMetaphone("OI", false);
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string4);
      assertEquals("A", string4);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("SK", "SK", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("APFJ", "SK", false);
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      String[] stringArray0 = new String[2];
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "org.apache.commons.codec.EncoderException", true);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean2);
      
      stringArray0[0] = "SK";
      stringArray0[1] = "u:bFzH{,xJ]/H)%O";
      boolean boolean3 = DoubleMetaphone.contains("A", 4, 4, stringArray0);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3 == boolean0);
      assertFalse(boolean3 == boolean2);
      assertEquals(2, stringArray0.length);
      assertFalse(boolean3);
      
      boolean boolean4 = doubleMetaphone0.isDoubleMetaphoneEqual("UMB", "AM", true);
      assertFalse(boolean4 == boolean3);
      assertFalse(boolean4 == boolean1);
      assertTrue(boolean4 == boolean2);
      assertTrue(boolean4 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean4);
      
      Object object0 = doubleMetaphone0.encode((Object) "OI");
      assertTrue(object0.equals((Object)string4));
      assertFalse(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string3));
      assertFalse(object0.equals((Object)string2));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("A", object0);
      
      boolean boolean5 = doubleMetaphone0.isDoubleMetaphoneEqual("SK", "$A", true);
      assertTrue(boolean5 == boolean1);
      assertFalse(boolean5 == boolean2);
      assertFalse(boolean5 == boolean0);
      assertTrue(boolean5 == boolean3);
      assertFalse(boolean5 == boolean4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean5);
      
      boolean boolean6 = DoubleMetaphone.contains("A", 4, 4, stringArray0);
      assertTrue(boolean6 == boolean1);
      assertFalse(boolean6 == boolean0);
      assertFalse(boolean6 == boolean2);
      assertTrue(boolean6 == boolean3);
      assertFalse(boolean6 == boolean4);
      assertTrue(boolean6 == boolean5);
      assertEquals(2, stringArray0.length);
      assertFalse(boolean6);
      
      String[] stringArray1 = new String[8];
      assertFalse(stringArray1.equals((Object)stringArray0));
      
      stringArray1[0] = "UMB";
      stringArray1[1] = "AM";
      stringArray1[2] = "UMB";
      stringArray1[3] = "SK";
      stringArray1[4] = "OI";
      stringArray1[5] = "n";
      stringArray1[6] = "$A";
      stringArray1[7] = "$A";
      boolean boolean7 = DoubleMetaphone.contains("OI", 4, 4, stringArray1);
      assertNotSame(stringArray1, stringArray0);
      assertFalse(stringArray1.equals((Object)stringArray0));
      assertTrue(boolean7 == boolean1);
      assertFalse(boolean7 == boolean4);
      assertTrue(boolean7 == boolean3);
      assertTrue(boolean7 == boolean5);
      assertFalse(boolean7 == boolean2);
      assertFalse(boolean7 == boolean0);
      assertTrue(boolean7 == boolean6);
      assertEquals(8, stringArray1.length);
      assertFalse(boolean7);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone(".T)J=E0");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("TJ", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("TJ", "DU");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      Object object0 = doubleMetaphone0.encode((Object) "CY");
      assertFalse(object0.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("S", object0);
      
      String string1 = doubleMetaphone0.encode("TJ");
      assertTrue(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("TJ", string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("&(:");
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("", string2);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertTrue(int1 == int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int1);
      
      String string3 = doubleMetaphone0.doubleMetaphone("?H", true);
      assertFalse(string3.equals((Object)string0));
      assertTrue(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string3);
      assertEquals("", string3);
      
      String string4 = doubleMetaphone0.doubleMetaphone("SCH", false);
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)object0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string4);
      assertEquals("X", string4);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("SCH", "DU");
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("QU!9;q'Z0J9I_  ^#GJ", "WCQJ");
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      
      String string5 = doubleMetaphone0.doubleMetaphone("4-TwRg.Y;z8Y}`*", false);
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)object0));
      assertFalse(string5.equals((Object)string3));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string5);
      assertEquals("TRKS", string5);
      
      doubleMetaphone0.setMaxCodeLen(66);
      assertEquals(66, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("A^h@vq?EUHPk`Ug", "org.apache.commons.codec.language.DoubleMetaphone", false);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertEquals(66, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean3);
      
      boolean boolean4 = doubleMetaphone0.isDoubleMetaphoneEqual("5N#aYow2amLB9i O", "5N#aYow2amLB9i O", false);
      assertFalse(boolean4 == boolean3);
      assertFalse(boolean4 == boolean0);
      assertFalse(boolean4 == boolean1);
      assertFalse(boolean4 == boolean2);
      assertEquals(66, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean4);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) "");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(object0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string0 = doubleMetaphone1.doubleMetaphone("Jr-n");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("JRN", string0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      String string1 = doubleMetaphone1.doubleMetaphone("CHIA", false);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("K", string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("", true);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string2);
      
      int int1 = doubleMetaphone1.getMaxCodeLen();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(int1 == int0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals(4, int1);
      
      String string3 = doubleMetaphone0.encode("I8wpKIkZ@Jpf(A");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string3);
      assertEquals("APKK", string3);
      
      String string4 = doubleMetaphone0.doubleMetaphone("", true);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string4);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(9);
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "\\G";
      String string1 = doubleMetaphone0.doubleMetaphone("G");
      assertFalse(string1.equals((Object)string0));
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("K", string1);
      
      doubleMetaphone0.setMaxCodeLen((-622));
      assertEquals((-622), doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals((-622), doubleMetaphone0.getMaxCodeLen());
      assertEquals((-622), int0);
      
      String string2 = "OnOlfLdH#@h";
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("G", "K");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("H", ")U&?=<RsY~/", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("T", "T");
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1);
      
      String string0 = doubleMetaphone0.doubleMetaphone("G", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("K", string0);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("A", "UCCES", false);
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("\t", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("ARKP", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone(")U&?=<RsY~/", false);
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("RS", string1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual(")U&?=<RsY~/", "org.apache.commons.codec.EncoderException", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[7];
      String string2 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", true);
      assertFalse(string2.equals((Object)string1));
      assertTrue(string2.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("ARKP", string2);
      
      stringArray0[0] = "RS";
      stringArray0[1] = "org.apache.commons.codec.EncoderException";
      stringArray0[2] = ")U&?=<RsY~/";
      stringArray0[3] = "ARKP";
      stringArray0[4] = "ARKP";
      stringArray0[5] = "ARKP";
      stringArray0[6] = "org.apache.commons.codec.EncoderException";
      Object object0 = doubleMetaphone0.encode((Object) "ARKP");
      assertTrue(object0.equals((Object)string2));
      assertTrue(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("ARKP", object0);
      
      boolean boolean1 = DoubleMetaphone.contains("yEm", 1, 1, stringArray0);
      assertTrue(boolean1 == boolean0);
      assertEquals(7, stringArray0.length);
      assertFalse(boolean1);
      
      boolean boolean2 = DoubleMetaphone.contains("^&if'.JK\"_V>g", 1, 1, stringArray0);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertEquals(7, stringArray0.length);
      assertFalse(boolean2);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      String string3 = doubleMetaphone1.doubleMetaphone("#?.tTJUf92{", true);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)object0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string3);
      assertEquals("TJF", string3);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string0 = doubleMetaphone1.doubleMetaphone("1g1J<Ce[@4HRU+vwD", true);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KJSR", string0);
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(int1 == int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int1);
      
      String string1 = doubleMetaphone1.encode("KJSR");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("KSR", string1);
      
      String string2 = doubleMetaphone1.doubleMetaphone("KSR", true);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("KSR", string2);
      
      int int2 = doubleMetaphone1.getMaxCodeLen();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(int2 == int0);
      assertTrue(int2 == int1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals(4, int2);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(9);
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) ");;b^DG[\"/>");
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("PTK", object0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("");
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("jj||cnb[}X", "hdB, OyL19");
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals(4, int0);
      
      String string1 = doubleMetaphone0.encode("&Rh");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)object0));
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("R", string1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertNotNull(doubleMetaphone3);
      
      int int1 = doubleMetaphone3.getMaxCodeLen();
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertTrue(int1 == int0);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertEquals(4, int1);
      
      String string2 = doubleMetaphone3.encode("db/(W\"N7C0K#>");
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)object0));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("TPNK", string2);
      
      DoubleMetaphone doubleMetaphone4 = new DoubleMetaphone();
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      assertNotNull(doubleMetaphone4);
      
      int int2 = doubleMetaphone4.getMaxCodeLen();
      assertNotSame(doubleMetaphone4, doubleMetaphone3);
      assertNotSame(doubleMetaphone4, doubleMetaphone1);
      assertNotSame(doubleMetaphone4, doubleMetaphone2);
      assertNotSame(doubleMetaphone4, doubleMetaphone0);
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertTrue(int2 == int0);
      assertTrue(int2 == int1);
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      assertEquals(4, int2);
      
      int int3 = doubleMetaphone4.getMaxCodeLen();
      assertNotSame(doubleMetaphone4, doubleMetaphone3);
      assertNotSame(doubleMetaphone4, doubleMetaphone1);
      assertNotSame(doubleMetaphone4, doubleMetaphone2);
      assertNotSame(doubleMetaphone4, doubleMetaphone0);
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertTrue(int3 == int1);
      assertTrue(int3 == int2);
      assertTrue(int3 == int0);
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      assertEquals(4, int3);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("\"Y0");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("yEm", "", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string2 = doubleMetaphone0.doubleMetaphone("", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string2);
      
      Object object0 = doubleMetaphone0.encode((Object) "org.apache.commons.codec.EncoderException");
      assertFalse(object0.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("ARKP", object0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "\"Y0";
      stringArray0[1] = null;
      stringArray0[2] = "}C+B~{8pW~>-";
      stringArray0[3] = "org.apache.commons.codec.EncoderException";
      stringArray0[4] = null;
      boolean boolean1 = DoubleMetaphone.contains((String) null, (-2112), 86, stringArray0);
      assertTrue(boolean1 == boolean0);
      assertEquals(5, stringArray0.length);
      assertFalse(boolean1);
      
      boolean boolean2 = DoubleMetaphone.contains("^&if'.JK\"_V>g", 6, 1, stringArray0);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertEquals(5, stringArray0.length);
      assertFalse(boolean2);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      doubleMetaphone0.setMaxCodeLen(90);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(90, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("yEm");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)object0));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(90, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string3);
      assertEquals("AM", string3);
      
      boolean boolean3 = doubleMetaphone1.isDoubleMetaphoneEqual("MACHER", (String) null);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean3);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult((-995));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean4 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(boolean4 == boolean0);
      assertFalse(boolean4 == boolean3);
      assertFalse(boolean4 == boolean2);
      assertFalse(boolean4 == boolean1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertTrue(boolean4);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) "#i;1Grjn3*e:<=@");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("KRN", object0);
      
      String string0 = doubleMetaphone0.encode("KRN");
      assertTrue(string0.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KRN", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("\"", "H", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("Gp+n", ">qtJF16X");
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      String string1 = "QU!9;q'Z0J9I_  ^#GJ";
      String string2 = doubleMetaphone0.doubleMetaphone("Gp+n", true);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)object0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("KPN", string2);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("\"", "RK", true);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("#i;1Grjn3*e:<=@", "RK");
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean3);
      
      try { 
        doubleMetaphone0.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      String string0 = doubleMetaphone0.encode(".ygeG");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("JK", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("`#~A", "");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals(4, int0);
      
      String string1 = doubleMetaphone1.encode("KNHA?9_WY+%5/NI>+");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("NN", string1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      int int1 = doubleMetaphone1.getMaxCodeLen();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertTrue(int1 == int0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals(4, int1);
      
      String string2 = doubleMetaphone0.encode("z,*@.LK}*<<)>k2pPc&");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("SLKK", string2);
      
      int int2 = doubleMetaphone0.getMaxCodeLen();
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertTrue(int2 == int0);
      assertTrue(int2 == int1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int2);
      
      int int3 = doubleMetaphone0.getMaxCodeLen();
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertTrue(int3 == int0);
      assertTrue(int3 == int1);
      assertTrue(int3 == int2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int3);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("Y");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("A", string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("8+ET+dLJ4e=3,tC0", true);
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("TTLT", string1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      String string2 = doubleMetaphone0.encode(".ygeG");
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("JK", string2);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("`#~A", "");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals(4, int0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      String string3 = doubleMetaphone2.doubleMetaphone(".ygeG");
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertTrue(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(string3);
      assertEquals("JK", string3);
      
      int int1 = doubleMetaphone2.getMaxCodeLen();
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertTrue(int1 == int0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals(4, int1);
      
      String string4 = doubleMetaphone0.doubleMetaphone(".ygeG", false);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string4.equals((Object)string1));
      assertTrue(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertTrue(string4.equals((Object)string3));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string4);
      assertEquals("JK", string4);
      
      String string5 = doubleMetaphone1.encode("SC");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string5);
      assertEquals("SK", string5);
      
      int int2 = doubleMetaphone1.getMaxCodeLen();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertTrue(int2 == int1);
      assertTrue(int2 == int0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals(4, int2);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("ARKP", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone(")U&?=<RsY~/", false);
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("RS", string1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual(")U&?=<RsY~/", "org.apache.commons.codec.EncoderException", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[7];
      String string2 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", true);
      assertFalse(string2.equals((Object)string1));
      assertTrue(string2.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("ARKP", string2);
      
      stringArray0[0] = "RS";
      stringArray0[1] = "org.apache.commons.codec.EncoderException";
      stringArray0[2] = ")U&?=<RsY~/";
      stringArray0[3] = "ARKP";
      stringArray0[4] = "ARKP";
      stringArray0[5] = "ARKP";
      stringArray0[6] = "org.apache.commons.codec.EncoderException";
      Object object0 = doubleMetaphone0.encode((Object) "ARKP");
      assertTrue(object0.equals((Object)string2));
      assertTrue(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("ARKP", object0);
      
      boolean boolean1 = DoubleMetaphone.contains("yEm", 1, 1, stringArray0);
      assertTrue(boolean1 == boolean0);
      assertEquals(7, stringArray0.length);
      assertFalse(boolean1);
      
      String string3 = doubleMetaphone0.doubleMetaphone("CZ", false);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)object0));
      assertFalse(string3.equals((Object)string2));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string3);
      assertEquals("S", string3);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "OGY";
      stringArray0[1] = "OGY";
      stringArray0[2] = "OGY";
      stringArray0[3] = "R:z'r,6UyJ";
      stringArray0[4] = "OGY";
      boolean boolean0 = DoubleMetaphone.contains("OGY", 85, 1, stringArray0);
      assertEquals(5, stringArray0.length);
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("OGY");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("AJ", string0);
      
      int int0 = 0;
      char char0 = doubleMetaphone0.charAt("OGY", 0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('O', char0);
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertFalse(int1 == int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int1);
      
      String string1 = "/%|W4%";
      try { 
        doubleMetaphone0.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("ARKP", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone(")U&?=<RsY~/", false);
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("RS", string1);
      
      String string2 = "org.apache.commons.codec.EncoderException";
      int int0 = 1;
      String[] stringArray0 = new String[7];
      String string3 = doubleMetaphone0.doubleMetaphone(" 1&H7bB4S{3=?$z3", false);
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string3);
      assertEquals("PSS", string3);
      
      try { 
        doubleMetaphone0.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) "#i;1Grjn3*e:<=@");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("KRN", object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "KRN");
      assertTrue(object1.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object1);
      assertEquals("KRN", object1);
      
      String string0 = doubleMetaphone0.doubleMetaphone("{J", false);
      assertFalse(string0.equals((Object)object0));
      assertFalse(string0.equals((Object)object1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("J", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("{J", "#I", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("L", "KRN");
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      Object object2 = doubleMetaphone0.encode((Object) "#I");
      assertFalse(object2.equals((Object)object0));
      assertFalse(object2.equals((Object)object1));
      assertFalse(object2.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object2);
      assertEquals("", object2);
      
      String string1 = doubleMetaphone0.doubleMetaphone("L", false);
      assertFalse(string1.equals((Object)object0));
      assertFalse(string1.equals((Object)object1));
      assertFalse(string1.equals((Object)object2));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("L", string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("ED", false);
      assertFalse(string2.equals((Object)object0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)object1));
      assertFalse(string2.equals((Object)object2));
      assertFalse(string2.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("AT", string2);
      
      String string3 = doubleMetaphone0.doubleMetaphone(" Q", false);
      assertFalse(string3.equals((Object)object2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)object1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string3);
      assertEquals("K", string3);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) "#i;1Grjn3*e:<=@");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("KRN", object0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(850);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("KRN", "KRN");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("KRN", (String) null, false);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean1);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("org.apache.commons.codec.EncoderException", "1)x)");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("1)x)", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("org.apache.commons.codec.EncoderException", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      // Undeclared exception!
      try { 
        doubleMetaphone1.charAt((String) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(9);
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = ");;b^DG[\"\\/>";
      String string1 = doubleMetaphone0.doubleMetaphone(");;b^DG[\"/>");
      assertFalse(string1.equals((Object)string0));
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("PTK", string1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(9);
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('X');
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("X", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string2 = doubleMetaphone0.doubleMetaphone("PTK");
      assertTrue(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("PTK", string2);
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("X", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(boolean0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      assertEquals(9, int0);
      
      String string3 = doubleMetaphone0.doubleMetaphone("iBVpbmHZn>v", true);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string3);
      assertEquals("APFPMSNF", string3);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      doubleMetaphone1.setMaxCodeLen(9);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(9, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone1.new DoubleMetaphoneResult((-617));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(9, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      String string4 = doubleMetaphone1.doubleMetaphone("GN");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertEquals(9, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string4);
      assertEquals("N", string4);
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult1.isComplete();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(boolean1 == boolean0);
      assertEquals(9, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertTrue(boolean1);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      try { 
        doubleMetaphone1.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) "#i;1Grjn3*e:<=@");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("KRN", object0);
      
      String string0 = doubleMetaphone0.encode("KRN");
      assertTrue(string0.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("KRN", string0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      String string1 = doubleMetaphone0.encode("#i;1Grjn3*e:<=@");
      assertTrue(string1.equals((Object)object0));
      assertTrue(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("KRN", string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("='pB1'lkLl7wE.i{'~", false);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)object0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("PLKL", string2);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) "#i;1Grjn3*e:<=@");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("KRN", object0);
      
      doubleMetaphone0.setMaxCodeLen(89);
      assertEquals(89, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertEquals(89, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("J");
      assertFalse(string0.equals((Object)object0));
      assertEquals(89, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("J", string0);
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(89, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertTrue(boolean0);
      
      Object object1 = doubleMetaphone0.encode((Object) "V7)Gv=.V:>B( ");
      assertFalse(object1.equals((Object)string0));
      assertFalse(object1.equals((Object)object0));
      assertEquals(89, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object1);
      assertEquals("FKFFP", object1);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("V7)Gv=.V:>B( ", "#i;1Grjn3*e:<=@", true);
      assertFalse(boolean1 == boolean0);
      assertEquals(89, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string1 = doubleMetaphone1.doubleMetaphone("mX=i=\"Y8] Iu", true);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)object0));
      assertFalse(string1.equals((Object)object1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("MKS", string1);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(89, doubleMetaphone0.getMaxCodeLen());
      assertEquals(89, int0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone(".T)J=E0");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("TJ", string0);
      
      Object object0 = doubleMetaphone0.encode((Object) "CY");
      assertFalse(object0.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("S", object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "S");
      assertFalse(object1.equals((Object)string0));
      assertTrue(object1.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object1);
      assertEquals("S", object1);
      
      String string1 = doubleMetaphone0.doubleMetaphone("&(:");
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)object0));
      assertFalse(string1.equals((Object)object1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("", string1);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertTrue(int1 == int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("&(:", true);
      assertFalse(string2.equals((Object)object1));
      assertFalse(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("", string2);
      
      String string3 = null;
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "RANGER", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("ARKP", string0);
      
      doubleMetaphone0.setMaxCodeLen(67);
      assertEquals(67, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertEquals(67, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", true);
      assertFalse(string1.equals((Object)string0));
      assertEquals(67, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("ARKPKKMNSKTKNKTRKSPXN", string1);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("ARKP");
      assertEquals(67, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(67, doubleMetaphone0.getMaxCodeLen());
      assertEquals(67, int0);
      
      String string2 = doubleMetaphone0.doubleMetaphone("<&[m)SnRj", true);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(67, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("MSNR ", string2);
      
      doubleMetaphone0.setMaxCodeLen(0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(67);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      String string3 = doubleMetaphone0.doubleMetaphone("<&[m)SnRj");
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string3);
      assertEquals("", string3);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone(".T)J=E0");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("TJ", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("_=sh");
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("X", string1);
      
      Object object0 = doubleMetaphone0.encode((Object) "CY");
      assertFalse(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("S", object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "S");
      assertFalse(object1.equals((Object)string0));
      assertFalse(object1.equals((Object)string1));
      assertTrue(object1.equals((Object)object0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object1);
      assertEquals("S", object1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("&(:");
      assertFalse(string2.equals((Object)object0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)object1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("", string2);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertTrue(int1 == int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int1);
      
      String string3 = doubleMetaphone0.doubleMetaphone("&(:", true);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)object0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)object1));
      assertTrue(string3.equals((Object)string2));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string3);
      assertEquals("", string3);
      
      doubleMetaphone0.setMaxCodeLen(640);
      assertEquals(640, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "";
      String string4 = doubleMetaphone0.encode("&(:");
      assertTrue(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)object1));
      assertTrue(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)object0));
      assertFalse(string4.equals((Object)string0));
      assertEquals(640, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string4);
      assertEquals("", string4);
      
      int int2 = doubleMetaphone0.getMaxCodeLen();
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertEquals(640, doubleMetaphone0.getMaxCodeLen());
      assertEquals(640, int2);
      
      String string5 = doubleMetaphone0.encode((String) null);
      assertEquals(640, doubleMetaphone0.getMaxCodeLen());
      assertNull(string5);
      
      int int3 = doubleMetaphone0.getMaxCodeLen();
      assertFalse(int3 == int1);
      assertFalse(int3 == int0);
      assertTrue(int3 == int2);
      assertEquals(640, doubleMetaphone0.getMaxCodeLen());
      assertEquals(640, int3);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = "org.apache.commons.codec.EncoderException";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("^e~Uw", "org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("^e~Uw", "^e~Uw");
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1);
      
      String string1 = ",7]7-yS9kDdp";
      String string2 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("ARKP", string2);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual(",7]7-yS9kDdp", "ARKP", false);
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      
      int int0 = 1;
      String string3 = doubleMetaphone0.doubleMetaphone("Y", false);
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string3);
      assertEquals("A", string3);
      
      String string4 = "org.apache.commons.codec.EncoderException";
      Object object0 = doubleMetaphone0.encode((Object) ",7]7-yS9kDdp");
      assertFalse(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string3));
      assertFalse(object0.equals((Object)string4));
      assertFalse(object0.equals((Object)string2));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("SKTP", object0);
      
      // Undeclared exception!
      try { 
        DoubleMetaphone.contains("'#b,3\"'$cemX|?/3yn", 1, 1, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) "#i;1Grjn3*e:<=@");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("KRN", object0);
      
      boolean boolean0 = true;
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("V7)Gv=.V:>B( ", "#i;1Grjn3*e:<=@", true);
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      String string0 = null;
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "J");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = "";
      String string1 = doubleMetaphone0.doubleMetaphone("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-2584));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      int int0 = 81;
      String string2 = doubleMetaphone0.doubleMetaphone((String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string2);
      
      char char0 = doubleMetaphone0.charAt("", (-47));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult((-47));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone_DoubleMetaphoneResult1.appendPrimary('t');
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult1.appendPrimary((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("ARKP", string0);
      
      Object object0 = doubleMetaphone0.encode((Object) "LNB}C?ryk)sIR8[b=v#");
      assertFalse(object0.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("LNPK", object0);
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "org.apache.commons.codec.EncoderException";
      stringArray0[1] = "LNB}C?ryk)sIR8[b=v#";
      stringArray0[2] = "LNB}C?ryk)sIR8[b=v#";
      stringArray0[3] = "ARKP";
      stringArray0[4] = "org.apache.commons.codec.EncoderException";
      String string1 = "Z6\"p9xB!";
      stringArray0[5] = "Z6\"p9xB!";
      stringArray0[6] = "PSIL";
      boolean boolean0 = DoubleMetaphone.contains("PNHARIS", (-3153), 5, stringArray0);
      assertEquals(7, stringArray0.length);
      assertFalse(boolean0);
      
      int int0 = 1;
      boolean boolean1 = DoubleMetaphone.contains("PSIL", 5, 1, stringArray0);
      assertTrue(boolean1 == boolean0);
      assertEquals(7, stringArray0.length);
      assertFalse(boolean1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      doubleMetaphone1.setMaxCodeLen((-4177984));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals((-4177984), doubleMetaphone1.getMaxCodeLen());
      
      String string2 = null;
      // Undeclared exception!
      try { 
        doubleMetaphone1.doubleMetaphone("PSIL", false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone(".T)J=E0");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("TJ", string0);
      
      Object object0 = doubleMetaphone0.encode((Object) "CY");
      assertFalse(object0.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("S", object0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      String string1 = doubleMetaphone1.doubleMetaphone("IL");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)object0));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("AL", string1);
      
      Object object1 = doubleMetaphone1.encode((Object) "&(:");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(object1.equals((Object)string1));
      assertFalse(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(object1);
      assertEquals("", object1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(68);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(boolean0);
      
      String string2 = doubleMetaphone1.doubleMetaphone("HARIS", false);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)object1));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)object0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("HRS", string2);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("*fEs>}.i17!0J");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("*fEs>}.i17!0J", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("*fEs>}.i17!0J", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('c', 'Z');
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("*fEs>}.i17!0Jc", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("*fEs>}.i17!0JZ", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('c');
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("*fEs>}.i17!0JZc", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("*fEs>}.i17!0Jcc", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(doubleMetaphone2);
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertTrue(int1 == int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int1);
      
      String string3 = doubleMetaphone2.encode("CY");
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(string3.equals((Object)string2));
      assertTrue(string3.equals((Object)object0));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)object1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotNull(string3);
      assertEquals("S", string3);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(9);
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone(");;b^DG[\"/>");
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("PTK", string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(9);
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('X');
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("X", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string1 = doubleMetaphone0.doubleMetaphone("PTK");
      assertTrue(string1.equals((Object)string0));
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("PTK", string1);
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("X", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(boolean0);
      
      String string2 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("X", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(string2);
      assertEquals("X", string2);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("zm%:r6G*Er");
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("Xzm%:r6G*", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      doubleMetaphone1.setMaxCodeLen(1869);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(1869, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone1.new DoubleMetaphoneResult(0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(1869, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone_DoubleMetaphoneResult1.append('X', ')');
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(1869, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult2 = doubleMetaphone0.new DoubleMetaphoneResult(9);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult2);
      
      doubleMetaphone_DoubleMetaphoneResult2.append(')');
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      assertEquals(")", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertEquals(")", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult2);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertTrue(boolean1 == boolean0);
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("Xzm%:r6G*", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(boolean1);
      
      String string3 = doubleMetaphone1.doubleMetaphone("OO");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(1869, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string3);
      assertEquals("A", string3);
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult1.isComplete();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult2);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(1869, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertTrue(boolean2);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone1.encode((Object) "X");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(object1.equals((Object)string0));
      assertFalse(object1.equals((Object)string3));
      assertFalse(object1.equals((Object)string2));
      assertFalse(object1.equals((Object)string1));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(1869, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(object1);
      assertEquals("S", object1);
      
      boolean boolean3 = doubleMetaphone1.isDoubleMetaphoneEqual("A", "2}@B-W+K&~Tx1e>K?", true);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(1869, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean3);
      
      boolean boolean4 = doubleMetaphone1.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "ILLO", true);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertTrue(boolean4 == boolean3);
      assertFalse(boolean4 == boolean2);
      assertTrue(boolean4 == boolean0);
      assertTrue(boolean4 == boolean1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(1869, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean4);
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(1869, doubleMetaphone1.getMaxCodeLen());
      assertEquals(1869, int0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      boolean boolean0 = DoubleMetaphone.contains("o/w)`UN<o", (-555), (-555), (String[]) null);
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("ARKP", string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("ARKP", "Po)A6[H6?Br?mVGL+", false);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(boolean1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(3013);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      Object object0 = doubleMetaphone0.encode((Object) "org.apache.commons.codec.EncoderException");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(object0.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("ARKP", object0);
      
      String string1 = doubleMetaphone1.doubleMetaphone("71>l!l", true);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)object0));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("LL", string1);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("EWSKI", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string0);
      assertEquals("AFSK", string0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('c', 'c');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("c", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("c", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('c');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("c", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("c", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(doubleMetaphone1);
      
      int int1 = doubleMetaphone1.getMaxCodeLen();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(int1 == int0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals(4, int1);
      
      String string1 = doubleMetaphone1.doubleMetaphone("}WZ@vJ#r9^`vF _h", false);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("SFJR", string1);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = "OD";
      String string1 = doubleMetaphone0.encode("OD");
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string1);
      assertEquals("AT", string1);
      
      String string2 = doubleMetaphone0.encode("ISL");
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(string2);
      assertEquals("AL", string2);
      
      Object object0 = doubleMetaphone0.encode((Object) "E'b");
      assertFalse(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string2));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(object0);
      assertEquals("AP", object0);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "ndcVK?[fsDAcdr", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.isDoubleMetaphoneEqual("^e~Uw", "org.apache.commons.codec.EncoderException");
      doubleMetaphone0.isDoubleMetaphoneEqual("^e~Uw", "^e~Uw");
      String string0 = ",7]7-yS9kDdp";
      doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      doubleMetaphone0.isDoubleMetaphoneEqual("PSSDT|H\" B59F=", "8dZKQEv", true);
      int int0 = 1400;
      doubleMetaphone0.setMaxCodeLen(1400);
      doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      doubleMetaphone0.isDoubleMetaphoneEqual(",7]7-yS9kDdp", ",7]7-yS9kDdp", true);
      String string1 = "";
      String string2 = "ORCHID";
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.setMaxCodeLen(9);
      doubleMetaphone0.doubleMetaphone(");;b^DG[\"/>");
      doubleMetaphone0.charAt(");;b^DG[\"/>", 81);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1759);
      doubleMetaphone0.encode((Object) "PTK");
      doubleMetaphone0.doubleMetaphone(");;b^DG[\"/>", true);
      doubleMetaphone0.isDoubleMetaphoneEqual("09-~MOZN>bL|e", "`#(z", true);
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(9, int0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      doubleMetaphone0.encode(".ygeG");
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("`#~A", "");
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      doubleMetaphone1.getMaxCodeLen();
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      doubleMetaphone2.doubleMetaphone(".ygeG");
      int int0 = doubleMetaphone2.getMaxCodeLen();
      assertEquals(4, int0);
      
      String string0 = doubleMetaphone0.doubleMetaphone(".ygeG", false);
      assertEquals("JK", string0);
      
      String string1 = doubleMetaphone1.encode("SC");
      assertEquals("SK", string1);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = doubleMetaphone0.encode("org.apache.commons.codec.EncoderException");
      assertEquals("ARKP", string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "");
      assertFalse(boolean0);
      
      doubleMetaphone0.getMaxCodeLen();
      doubleMetaphone0.getMaxCodeLen();
      doubleMetaphone0.encode("2");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(9);
      doubleMetaphone0.doubleMetaphone(");;b^DG[\"/>");
      doubleMetaphone0.charAt(");;b^DG[\"/>", 81);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1759);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('b');
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("org.apache.commons.codec.EncoderException");
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals("borg.apache.commons.codec.EncoderException", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      Object object0 = doubleMetaphone0.encode((Object) ");;b^DG[\"/>");
      assertEquals("PTK", object0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("PTK", false);
      assertEquals("PTK", string0);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.setMaxCodeLen(209);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(89);
      doubleMetaphone0.doubleMetaphone("FKy");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult((-1629));
      doubleMetaphone_DoubleMetaphoneResult1.appendAlternate('m');
      doubleMetaphone_DoubleMetaphoneResult1.isComplete();
      doubleMetaphone0.encode((Object) "FK");
      doubleMetaphone0.isDoubleMetaphoneEqual("HYM", "", false);
      doubleMetaphone0.isDoubleMetaphoneEqual("KN);;B^DG[\"/>", "HYM", true);
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(209, int0);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.isDoubleMetaphoneEqual("PNK2bOHn|nr)}CF'jFV", (String) null);
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "N";
      doubleMetaphone0.doubleMetaphone("FKy", true);
      String string1 = "org.apache.commons.codec.EncoderException";
      Object object0 = new Object();
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = doubleMetaphone0.encode("org.apache.commons.codec.EncoderException");
      assertEquals("ARKP", string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone0.isDoubleMetaphoneEqual("LNB}C?ryk)sIR8[b=v#", "LNB}C?ryk)sIR8[b=v#");
      doubleMetaphone0.getMaxCodeLen();
      doubleMetaphone0.encode("");
      doubleMetaphone0.getMaxCodeLen();
      String string1 = doubleMetaphone0.encode("&3vyE{oU+}H%");
      assertEquals("F", string1);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = doubleMetaphone0.doubleMetaphone("N", true);
      assertEquals("N", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("N", "FKy", true);
      assertFalse(boolean0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone("CI");
      Object object0 = new Object();
      String string0 = "DTaj?r~kkTAZ";
      doubleMetaphone0.encode("DTaj?r~kkTAZ");
      doubleMetaphone0.encode("KNS");
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone(".T)J=E0");
      doubleMetaphone0.encode((Object) "CY");
      doubleMetaphone0.encode((Object) "S");
      doubleMetaphone0.doubleMetaphone("&(:");
      doubleMetaphone0.getMaxCodeLen();
      doubleMetaphone0.getMaxCodeLen();
      doubleMetaphone0.doubleMetaphone("&(:", true);
      doubleMetaphone0.setMaxCodeLen(640);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      DoubleMetaphone.contains("", 640, 1, stringArray0);
      doubleMetaphone0.doubleMetaphone("%1z]dU7/+V");
      doubleMetaphone0.doubleMetaphone("%1z]dU7/+V", true);
      doubleMetaphone0.getMaxCodeLen();
      DoubleMetaphone.contains("", (-2214), 84, stringArray0);
      doubleMetaphone0.charAt("QG(k~6~6@m&.", 4);
      doubleMetaphone0.encode("");
      doubleMetaphone0.charAt("%1z]dU7/+V", 1021);
      assertEquals(640, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.isDoubleMetaphoneEqual("Cf}U}Q9b", "Cf}U}Q9b");
      doubleMetaphone0.isDoubleMetaphoneEqual("t559K9)*b8)V", "Cf}U}Q9b");
      doubleMetaphone0.encode("Cf}U}Q9b");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('/');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("18>");
      doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      doubleMetaphone1.getMaxCodeLen();
      doubleMetaphone0.doubleMetaphone("GN");
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      String[] stringArray0 = new String[9];
      stringArray0[0] = ")K@^_";
      stringArray0[1] = "";
      stringArray0[2] = "KFKP";
      stringArray0[3] = "KFKP";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = null;
      stringArray0[7] = "IuN5xO62/Hz:";
      stringArray0[8] = "t559K9)*b8)V";
      // Undeclared exception!
      try { 
        DoubleMetaphone.contains("", 4, (-5060), stringArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone("");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-2584));
      String string0 = doubleMetaphone0.encode(".ygeG");
      assertEquals("JK", string0);
      
      doubleMetaphone0.doubleMetaphone("`#~A", true);
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("S?zh~rBtLHxbcWCOwq,", (String) null);
      assertFalse(boolean0);
      
      doubleMetaphone0.getMaxCodeLen();
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertEquals(4, int0);
      
      doubleMetaphone1.encode("");
      String string1 = doubleMetaphone0.encode("`+'{y[);t*Zp{c");
      assertEquals("TSPK", string1);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode((Object) "org.apache.commons.codec.EncoderException");
      doubleMetaphone0.encode((Object) "ARKP");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-3437));
      doubleMetaphone0.encode("org.apache.commons.codec.EncoderException");
      doubleMetaphone_DoubleMetaphoneResult0.append('#');
      doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      doubleMetaphone0.doubleMetaphone("ARKP");
      doubleMetaphone0.setMaxCodeLen(525);
      doubleMetaphone0.doubleMetaphone(")IzpUj", true);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "ARKP";
      stringArray0[1] = "ARKP";
      stringArray0[2] = "ARKP";
      stringArray0[3] = "ARKP";
      stringArray0[4] = "";
      stringArray0[5] = "SP ";
      stringArray0[6] = "SP ";
      stringArray0[7] = "ARKP";
      boolean boolean0 = DoubleMetaphone.contains("SC", 525, 525, stringArray0);
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "org.apache.commons.codec.EncoderException";
      doubleMetaphone0.encode("org.apache.commons.codec.EncoderException");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      char char0 = 'I';
      doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", true);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("V}Pz");
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("V}Pz");
      String string1 = "O7s 3fob*rGB>";
      doubleMetaphone_DoubleMetaphoneResult0.append("O7s 3fob*rGB>", "V}Pz");
      doubleMetaphone0.isDoubleMetaphoneEqual("o{mXxxK(rmhv=\"rM", "eMSZ{IptpF<D{Snn", true);
      doubleMetaphone_DoubleMetaphoneResult0.append("org.apache.commons.codec.EncoderException", "o{mXxxK(rmhv=\"rM");
      doubleMetaphone0.charAt("O7s 3fob*rGB>", 1);
      doubleMetaphone_DoubleMetaphoneResult0.append("CI");
      doubleMetaphone0.encode((Object) "org.apache.commons.codec.EncoderException");
      doubleMetaphone0.doubleMetaphone("V}Pz");
      doubleMetaphone_DoubleMetaphoneResult0.append("ARKP", "e`b4Y#iha\"5YJvmfn-m");
      doubleMetaphone0.encode((Object) "e`b4Y#iha\"5YJvmfn-m");
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "V}Pz", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "+rHr/Y";
      doubleMetaphone0.encode("+rHr/Y");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(3);
      doubleMetaphone0.isDoubleMetaphoneEqual("RR", "", true);
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone_DoubleMetaphoneResult0.append("+rHr/Y", "");
      doubleMetaphone0.doubleMetaphone("", false);
      doubleMetaphone0.doubleMetaphone("", true);
      doubleMetaphone_DoubleMetaphoneResult0.append('\"', 's');
      doubleMetaphone_DoubleMetaphoneResult0.append("+rHr/Y");
      doubleMetaphone0.setMaxCodeLen((-2167));
      doubleMetaphone_DoubleMetaphoneResult0.append('4', '.');
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('.');
      doubleMetaphone_DoubleMetaphoneResult0.append('s');
      doubleMetaphone_DoubleMetaphoneResult0.append("ISL");
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("EAU", "org.apache.commons.codec.EncoderException", true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('I');
      String string0 = doubleMetaphone0.encode("V}Pz");
      assertEquals("FPS", string0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("V}Pz");
      doubleMetaphone_DoubleMetaphoneResult0.append('I', 'I');
      doubleMetaphone_DoubleMetaphoneResult0.append('I');
      String string1 = doubleMetaphone0.encode("d}\"YFR;UaR]!?ms");
      assertEquals("TFRR", string1);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('I');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("PS}[NIL*VO8X[H&KE=X#J");
      String string2 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertEquals("", string2);
      
      doubleMetaphone0.getMaxCodeLen();
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "org.apache.commons.codec.EncoderException";
      stringArray0[2] = "org.apache.commons.codec.EncoderException";
      stringArray0[3] = "AU";
      boolean boolean0 = DoubleMetaphone.contains("", 0, 0, stringArray0);
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode("org.apache.commons.codec.EncoderException");
      doubleMetaphone0.doubleMetaphone(")U&?=<RsY~/", false);
      doubleMetaphone0.isDoubleMetaphoneEqual(")U&?=<RsY~/", "org.apache.commons.codec.EncoderException", true);
      int int0 = 1;
      String[] stringArray0 = new String[7];
      doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", true);
      stringArray0[0] = "RS";
      stringArray0[1] = "org.apache.commons.codec.EncoderException";
      stringArray0[2] = ")U&?=<RsY~/";
      stringArray0[3] = "ARKP";
      stringArray0[4] = "ARKP";
      stringArray0[5] = "ARKP";
      stringArray0[6] = "org.apache.commons.codec.EncoderException";
      doubleMetaphone0.encode((Object) "ARKP");
      DoubleMetaphone.contains("yEm", 1, 1, stringArray0);
      String string0 = "";
      doubleMetaphone0.doubleMetaphone("RJd}``4xB{%Zh");
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "/9", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.setMaxCodeLen(1327);
      doubleMetaphone0.setMaxCodeLen(1);
      doubleMetaphone0.setMaxCodeLen(0);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(29);
      doubleMetaphone_DoubleMetaphoneResult0.append("u(-l{*BxfVbn1C/");
      doubleMetaphone_DoubleMetaphoneResult0.append("RnSbA4(X", "8$crBSnL}PQ $Ir");
      doubleMetaphone0.doubleMetaphone("10:?t+|zn{L");
      doubleMetaphone_DoubleMetaphoneResult0.append('');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("RnSbA4(X");
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "AN", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone("", false);
      String string0 = null;
      doubleMetaphone0.encode((String) null);
      doubleMetaphone0.setMaxCodeLen((-1397));
      String string1 = "L)ZT=<L'!]+(y90~/D;";
      // Undeclared exception!
      try { 
        doubleMetaphone0.encode("L)ZT=<L'!]+(y90~/D;");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "org.apache.commons.codec.EncoderException";
      doubleMetaphone0.encode("org.apache.commons.codec.EncoderException");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      char char0 = 'I';
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('I');
      doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", true);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("V}Pz");
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("V}Pz");
      String string1 = "O7s 3fob*rGB>";
      doubleMetaphone_DoubleMetaphoneResult0.append("O7s 3fob*rGB>", "V}Pz");
      doubleMetaphone0.isDoubleMetaphoneEqual("o{mXxxK(rmhv=\"rM", "eMSZ{IptpF<D{Snn", true);
      doubleMetaphone_DoubleMetaphoneResult0.append("org.apache.commons.codec.EncoderException", "o{mXxxK(rmhv=\"rM");
      doubleMetaphone0.charAt("O7s 3fob*rGB>", 1);
      doubleMetaphone_DoubleMetaphoneResult0.append("CI");
      doubleMetaphone0.encode((Object) "org.apache.commons.codec.EncoderException");
      doubleMetaphone0.doubleMetaphone("V}Pz");
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "V}Pz", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("09mg1\"q\"90{/@$$!sy", "P");
      assertFalse(boolean0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      int int0 = 0;
      doubleMetaphone0.setMaxCodeLen(0);
      String string0 = "9f(7pj!";
      doubleMetaphone0.doubleMetaphone("9f(7pj!", true);
      doubleMetaphone0.setMaxCodeLen((-1209));
      // Undeclared exception!
      try { 
        doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      Object object0 = doubleMetaphone0.encode((Object) "#i;1Grjn3*e:<=@");
      assertEquals("KRN", object0);
      
      doubleMetaphone0.isDoubleMetaphoneEqual("#i;1Grjn3*e:<=@", "#i;1Grjn3*e:<=@", false);
      doubleMetaphone0.isDoubleMetaphoneEqual("ED", (String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.append("MC");
      doubleMetaphone_DoubleMetaphoneResult0.append("");
      String string0 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      doubleMetaphone0.doubleMetaphone("");
      doubleMetaphone0.encode((Object) "");
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone0.doubleMetaphone("EWSKI", true);
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1));
      String string0 = "0Ky|x:C!xAA";
      String string1 = "e5/f";
      doubleMetaphone0.encode((Object) "0Ky|x:C!xAA");
      String string2 = "ES";
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append("0Ky|x:C!xAA");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode((Object) "8bswL");
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, (String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "org.apache.commons.codec.EncoderException";
      doubleMetaphone0.encode((Object) "org.apache.commons.codec.EncoderException");
      doubleMetaphone0.encode((Object) "ARKP");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-3437));
      doubleMetaphone0.encode("org.apache.commons.codec.EncoderException");
      doubleMetaphone_DoubleMetaphoneResult0.append('#');
      doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      doubleMetaphone0.doubleMetaphone("ARKP");
      doubleMetaphone0.setMaxCodeLen(525);
      doubleMetaphone0.doubleMetaphone(")IzpUj", true);
      doubleMetaphone_DoubleMetaphoneResult0.append('_');
      doubleMetaphone0.encode((Object) "");
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append("TIA");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('c');
      doubleMetaphone_DoubleMetaphoneResult0.append('_');
      doubleMetaphone_DoubleMetaphoneResult0.append("KYWS&D#MRIv*^H@ZF.");
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.isDoubleMetaphoneEqual("Cf}U}Q9b", "Cf}U}Q9b");
      doubleMetaphone0.getMaxCodeLen();
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      
      String string0 = doubleMetaphone0.encode("&3vyE{oU+}H%");
      assertEquals("F", string0);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "org.apache.commons.codec.EncoderException", true);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(387);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("4U!y;e$b");
      doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", true);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('');
      doubleMetaphone0.setMaxCodeLen((-5982));
      doubleMetaphone0.doubleMetaphone("");
      doubleMetaphone_DoubleMetaphoneResult0.append('w', '');
      doubleMetaphone0.encode("");
      doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('d');
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.appendPrimary((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone((String) null);
      doubleMetaphone0.isDoubleMetaphoneEqual("F", (String) null);
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "$Ntc#Bnc^");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-3411));
      String string0 = "l?(B5W";
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('\\');
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append("l?(B5W", "'6,H[3OdVG(q");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException");
      String string0 = "";
      doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException");
      doubleMetaphone0.setMaxCodeLen((-1062));
      String string1 = "";
      doubleMetaphone0.doubleMetaphone("");
      doubleMetaphone0.doubleMetaphone("");
      doubleMetaphone0.getMaxCodeLen();
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      int int0 = 0;
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.append('M');
      String string2 = "";
      int int1 = (-798);
      // Undeclared exception!
      try { 
        doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(4529);
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('l');
      assertEquals("l", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(973);
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("EP");
      doubleMetaphone_DoubleMetaphoneResult0.append('c');
      String string0 = "PBYO[6-,qi-fA0KT5wk";
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("PBYO[6-,qi-fA0KT5wk");
      doubleMetaphone_DoubleMetaphoneResult0.append('E', 'i');
      String string1 = "";
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append((String) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      int int0 = 0;
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.append("", "ok?T,-");
      doubleMetaphone_DoubleMetaphoneResult0.append('/', 'P');
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('m');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate(")UszAI0DWn");
      String string0 = "";
      doubleMetaphone0.doubleMetaphone("CK", false);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('m');
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "CK", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "5*";
      doubleMetaphone0.isDoubleMetaphoneEqual("5*", "5*");
      Object object0 = new Object();
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(80);
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("Ob+bjV[50/Q1QFo");
      assertEquals("Ob+bjV[50/Q1QFo", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode("+rHr/Y");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(3);
      doubleMetaphone0.isDoubleMetaphoneEqual("RR", "", true);
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone_DoubleMetaphoneResult0.append("+rHr/Y", "");
      doubleMetaphone0.doubleMetaphone("", false);
      doubleMetaphone0.doubleMetaphone("", true);
      doubleMetaphone_DoubleMetaphoneResult0.append('\"', 's');
      doubleMetaphone_DoubleMetaphoneResult0.append("+rHr/Y");
      doubleMetaphone0.setMaxCodeLen((-2167));
      doubleMetaphone_DoubleMetaphoneResult0.append('4', '.');
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('.');
      doubleMetaphone_DoubleMetaphoneResult0.append('s');
      doubleMetaphone0.doubleMetaphone((String) null, true);
      assertEquals((-2167), doubleMetaphone0.getMaxCodeLen());
  }
}
