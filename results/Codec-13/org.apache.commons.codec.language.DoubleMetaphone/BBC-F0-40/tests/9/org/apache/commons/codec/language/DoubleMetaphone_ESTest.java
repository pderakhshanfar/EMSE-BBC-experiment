/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 06 01:12:18 GMT 2021
 */

package org.apache.commons.codec.language;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.codec.language.DoubleMetaphone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DoubleMetaphone_ESTest extends DoubleMetaphone_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "JOSE";
      String string1 = doubleMetaphone0.doubleMetaphone("JOSE");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("HS", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(2147483645);
      assertEquals(2147483645, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = "tI3r:c)";
      int int0 = (-36763560);
      int int1 = 1;
      String[] stringArray0 = new String[7];
      String string3 = "]#neEVYx%.X!~ob3";
      // Undeclared exception!
      doubleMetaphone0.doubleMetaphone("]#neEVYx%.X!~ob3", true);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("FD*4>B", "32iMjXO r`", true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "JOSE";
      String string1 = doubleMetaphone0.doubleMetaphone("JOSE");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("HS", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(2147483645);
      assertEquals(2147483645, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = "tI3r:c)";
      int int0 = (-36763560);
      int int1 = 1;
      String[] stringArray0 = new String[7];
      String string3 = "]#neEVYx%.X!~ob3";
      // Undeclared exception!
      doubleMetaphone0.encode((Object) "JOSE");
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("P;8R@UGHWGN7");
      assertNotNull(string0);
      assertEquals("PRFK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "JOSE";
      String string1 = doubleMetaphone0.doubleMetaphone("JOSE");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("HS", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(2147483645);
      assertEquals(2147483645, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "]#neEVYx%.X!~ob3";
      stringArray0[1] = "tI3r:c)";
      stringArray0[2] = "JOSE";
      stringArray0[3] = "JOSE";
      stringArray0[4] = "org.apache.commons.codec.EncoderException";
      stringArray0[5] = "tI3r:c)";
      stringArray0[6] = "HS";
      boolean boolean0 = DoubleMetaphone.contains("tI3r:c)", (-36763560), 1, stringArray0);
      assertFalse(boolean0);
      assertEquals(7, stringArray0.length);
      
      // Undeclared exception!
      doubleMetaphone0.isDoubleMetaphoneEqual("tI3r:c)", "tI3r:c)", true);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("PNGIER");
      assertNotNull(string0);
      assertEquals("NJ", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("4GLI");
      assertNotNull(string0);
      assertEquals("KL", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("d<iGH!0[0n?ZSgVV?Q9");
      assertNotNull(string0);
      assertEquals("TNSS", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("HN}&:h+2D~hdudQrD");
      assertNotNull(string0);
      assertEquals("NTTT", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[2];
      Object object0 = doubleMetaphone0.encode((Object) "S8(%5(5Zzo?H5%g");
      assertNotNull(object0);
      assertFalse(object0.equals((Object)string0));
      assertEquals("SSK", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object1 = doubleMetaphone0.encode((Object) "SSK");
      assertNotNull(object1);
      assertFalse(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string0));
      assertEquals("SK", object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object2 = doubleMetaphone0.encode((Object) "SK");
      assertNotNull(object2);
      assertTrue(object2.equals((Object)object1));
      assertFalse(object2.equals((Object)string0));
      assertFalse(object2.equals((Object)object0));
      assertEquals("SK", object2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      stringArray0[0] = "j|2~ch[i";
      stringArray0[1] = "NTTT";
      boolean boolean0 = DoubleMetaphone.contains("PSV", 65, 72, stringArray0);
      assertFalse(boolean0);
      assertEquals(2, stringArray0.length);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("NTTT", "NTTT");
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone(")s@q9wU4gLIzl\"-8P");
      assertNotNull(string0);
      assertEquals("SKKL", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("EGN7");
      assertNotNull(string0);
      assertEquals("AKN", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("QE{s7v.h");
      assertNotNull(string0);
      assertEquals("KSF", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("CHAE");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("X", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("CHAE", "WRORG.APACHE.COMMONS.CODEC.ENCODEREXCEPTION");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone(":Jp#~wjN)3+6G4/'aN");
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("JPNK", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual(":Jp#~wjN)3+6G4/'aN", "UB:dmmRB1+<JuRMCTNt");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("78stmCp<5xm", "78stmCp<5xm");
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "1,^&O");
      assertNotNull(object0);
      assertFalse(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string2));
      assertEquals("", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("1,^&O", "I");
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean4 = doubleMetaphone0.isDoubleMetaphoneEqual("ok*#]w2&:M;USo1a(", "78stmCp<5xm");
      assertTrue(boolean4 == boolean3);
      assertTrue(boolean4 == boolean1);
      assertFalse(boolean4 == boolean2);
      assertTrue(boolean4 == boolean0);
      assertFalse(boolean4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean5 = doubleMetaphone0.isDoubleMetaphoneEqual("HU", "c gW_G'P");
      assertFalse(boolean5 == boolean2);
      assertTrue(boolean5 == boolean1);
      assertTrue(boolean5 == boolean0);
      assertTrue(boolean5 == boolean4);
      assertTrue(boolean5 == boolean3);
      assertFalse(boolean5);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object1 = doubleMetaphone0.encode((Object) "I");
      assertNotNull(object1);
      assertFalse(object1.equals((Object)string0));
      assertFalse(object1.equals((Object)string1));
      assertFalse(object1.equals((Object)string2));
      assertFalse(object1.equals((Object)object0));
      assertEquals("A", object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("c gW_G'P", (-219));
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char1 = doubleMetaphone0.charAt("78stmCp<5xm", 209);
      assertTrue(char1 == char0);
      assertEquals('\u0000', char1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("HU", true);
      assertNotNull(string3);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)object1));
      assertFalse(string3.equals((Object)object0));
      assertEquals("H", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean6 = doubleMetaphone0.isDoubleMetaphoneEqual("M)1", "7_1^v?yRWs+s )");
      assertTrue(boolean6 == boolean1);
      assertTrue(boolean6 == boolean4);
      assertFalse(boolean6 == boolean2);
      assertTrue(boolean6 == boolean3);
      assertTrue(boolean6 == boolean5);
      assertTrue(boolean6 == boolean0);
      assertFalse(boolean6);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string4 = doubleMetaphone0.doubleMetaphone("B", false);
      assertNotNull(string4);
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)object0));
      assertFalse(string4.equals((Object)object1));
      assertEquals("P", string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean7 = doubleMetaphone0.isDoubleMetaphoneEqual("F", "JPNK");
      assertTrue(boolean7 == boolean5);
      assertFalse(boolean7 == boolean2);
      assertTrue(boolean7 == boolean6);
      assertTrue(boolean7 == boolean0);
      assertTrue(boolean7 == boolean1);
      assertTrue(boolean7 == boolean3);
      assertTrue(boolean7 == boolean4);
      assertFalse(boolean7);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("TH");
      assertNotNull(string0);
      assertEquals("0", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("TH", "TH", false);
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("2DAcH[ kcR%", true);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("TKKK", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode(":Y R>OjoppF`");
      assertNotNull(string0);
      assertEquals("RJPF", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("sCHzanYShSx");
      assertNotNull(string0);
      assertEquals("XSNX", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "GHu");
      assertNotNull(object0);
      assertEquals("K", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("", (-2002));
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("", false);
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("o7tjT3[[", "o7tjT3[[");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = "jX6XBi><;&dI";
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("jX6XBi><;&dI", (String) null);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      try { 
        doubleMetaphone0.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("CCES");
      assertNotNull(string0);
      assertEquals("XS", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("CCES", 4156);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("LI");
      assertNotNull(string0);
      assertEquals("L", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("GYGg(9&)lZ");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("KKLS", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("GYGg(9&)lZ", "CLZ(");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("KNPNCHAE");
      assertNotNull(string0);
      assertEquals("NPNK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("CHAE");
      assertNotNull(string0);
      assertEquals("X", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("CHAE");
      assertNotNull(string1);
      assertTrue(string1.equals((Object)string0));
      assertEquals("X", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("GNCHAE", "CHAE");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "org.apache.commons.codec.EncoderException";
      boolean boolean0 = DoubleMetaphone.contains("Kpfg~whJ\"o?\"<R|NwD", (-40687952), (-40687952), stringArray0);
      assertFalse(boolean0);
      assertEquals(1, stringArray0.length);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("org.apache.commons.codec.EncoderException", (-40687952));
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual(".Ws/", "6e]i1AE5p~1oDGI1+", true);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = DoubleMetaphone.contains("org.apache.commons.codec.EncoderException", (-40687952), 379, stringArray0);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(1, stringArray0.length);
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("Kpfg~whJ\"o?\"<R|NwD", "org.apache.commons.codec.EncoderException");
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("eIGH^g*Abm?6");
      assertNotNull(string0);
      assertEquals("AKPM", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("25 ;t57wo\"", false);
      assertNotNull(string0);
      assertEquals("T", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("ME");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("M", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("T", false);
      assertNotNull(string2);
      assertTrue(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("T", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("T", 1);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "CHIA";
      stringArray0[1] = "(L";
      stringArray0[2] = "(L";
      Object object0 = doubleMetaphone0.encode((Object) "ME");
      assertNotNull(object0);
      assertTrue(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string2));
      assertEquals("M", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      stringArray0[3] = "(L";
      stringArray0[4] = "T";
      stringArray0[5] = "(L";
      stringArray0[6] = "T";
      stringArray0[7] = "T";
      stringArray0[8] = "T";
      boolean boolean0 = DoubleMetaphone.contains("(L", 1, 520, stringArray0);
      assertFalse(boolean0);
      assertEquals(9, stringArray0.length);
      
      String string3 = doubleMetaphone0.doubleMetaphone("M");
      assertNotNull(string3);
      assertFalse(string3.equals((Object)string2));
      assertTrue(string3.equals((Object)object0));
      assertTrue(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertEquals("M", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("CAESAR", "T");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("T", "CHIA");
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("; ePboyQH)I", "GN");
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char1 = doubleMetaphone0.charAt("_-T8!dWnh=Q?fS'pUc", 1);
      assertFalse(char1 == char0);
      assertEquals('-', char1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string4 = doubleMetaphone0.doubleMetaphone("@?p\"&+p4Q-ChT:", false);
      assertNotNull(string4);
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)object0));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertEquals("PPKK", string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode(">CCES");
      assertNotNull(string0);
      assertEquals("XS", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("PNJOSE", "PNJOSE", false);
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("ciuxN");
      assertNotNull(string0);
      assertEquals("SKSN", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("x)UdygH");
      assertNotNull(string0);
      assertEquals("ST", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("I", true);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("A", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("SIAN", true);
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("XN", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("m{UGh*Wgn7");
      assertNotNull(string0);
      assertEquals("MKKN", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("zozr\"", "GNIGH^G*LABM?T");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("xr");
      assertNotNull(string0);
      assertEquals("SR", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("SA", "IGH^g*lAbm?t", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("CH");
      assertNotNull(string0);
      assertEquals("K", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("{X!R/XQg@~d", 83);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone1.doubleMetaphone("|:7f\"E4Jsl+aegy;L?");
      assertNotNull(string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals("FSLJ", string0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("CHOR");
      assertNotNull(string0);
      assertEquals("KR", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("mcC \"\"t-$hJyBq2|F");
      assertNotNull(string0);
      assertEquals("MKTJ", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("ghFg|");
      assertNotNull(string0);
      assertEquals("KFK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "CIO");
      assertNotNull(object0);
      assertEquals("S", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("CIO", false);
      assertNotNull(string0);
      assertTrue(string0.equals((Object)object0));
      assertEquals("S", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("c4wnV^FI>");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)object0));
      assertFalse(string1.equals((Object)string0));
      assertEquals("KNFF", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object1 = doubleMetaphone0.encode((Object) "S");
      assertNotNull(object1);
      assertTrue(object1.equals((Object)string0));
      assertTrue(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string1));
      assertEquals("S", object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("S", ",LL!", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = "RgB]>Z/;>/@=^p";
      Object object2 = new Object();
      assertNotNull(object2);
      
      try { 
        doubleMetaphone0.encode(object2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("qg1aJADj2dja})a>");
      assertNotNull(string0);
      assertEquals("KKJT", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("LBBS~[5?3&\"4K!", false);
      assertNotNull(string0);
      assertEquals("LPSK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("PSWMBAS.GN#G8K", false);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("SMPS", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("Wa)(1`?eYGh~C_G$L");
      assertNotNull(string0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals("AKKK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone1.charAt("AKKK", (-1986));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("kKTY@gET$rP<3@: h_", "");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("kKTY@gET$rP<3@: h_");
      assertNotNull(string0);
      assertEquals("KTKT", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("KTKT", "");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("CHn(ORE", "AM");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("Aj G#,lL!a");
      assertNotNull(string0);
      assertEquals("AJKL", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string0 = doubleMetaphone2.encode("bxTtzx[&$g~MR");
      assertNotNull(string0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals("PKST", string0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("13n^>f");
      assertNotNull(string1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(string1.equals((Object)string0));
      assertEquals("NF", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone1.encode((Object) "PKST");
      assertNotNull(object0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(object0.equals((Object)string1));
      assertTrue(object0.equals((Object)string0));
      assertEquals("PKST", object0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string2 = doubleMetaphone1.doubleMetaphone("~zVFZ*(X@&rL,$", false);
      assertNotNull(string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(string2.equals((Object)object0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("SFFS", string2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string3 = doubleMetaphone2.doubleMetaphone("SFFS", false);
      assertNotNull(string3);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)object0));
      assertEquals("SFS", string3);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("s9MR}BzW");
      assertNotNull(string0);
      assertEquals("SMRP", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("`@9$DAfAWLL", "`@9$DAfAWLL", false);
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("IB", "IB");
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("1t-j$@pBN");
      assertNotNull(string0);
      assertEquals("TJPN", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("IER");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("A", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("1t-j$@pBN", 0);
      assertEquals('1', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("rarvqi{CZ{-%}&V}Z", "l- '(TzH{ x%");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("ZA", "l- '(TzH{ x%", false);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("T4!-+SD.Wd", 3486);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("CZ");
      assertNotNull(string0);
      assertEquals("S", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("IN", "CY", true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("KNALLE", "KNALLE");
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("CZ", 5);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "WITZ");
      assertNotNull(object0);
      assertEquals("ATS", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("WITZ", "PSCHORE", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("WITZ", "WITZ");
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode(">3zgFK}D^ LEM");
      assertNotNull(string0);
      assertFalse(string0.equals((Object)object0));
      assertEquals("SKFK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("=vhQ(IN~bp.KD\"u|p", "=vhQ(IN~bp.KD\"u|p", false);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("=vhQ(IN~bp.KD\"u|p", "PSVTG?8G^K");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("J]-a 2 y", false);
      assertNotNull(string0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals("J", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone1.isDoubleMetaphoneEqual("=vhQ(IN~bp.KD\"u|p", "ALLE");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      boolean boolean3 = doubleMetaphone2.isDoubleMetaphoneEqual("<z ?`c(V45uR>AR?", "org.apache.commons.codec.EncoderException", false);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3 == boolean0);
      assertFalse(boolean3);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone3);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      Object object0 = doubleMetaphone3.encode((Object) "J");
      assertNotNull(object0);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertTrue(object0.equals((Object)string0));
      assertEquals("J", object0);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      boolean boolean4 = doubleMetaphone3.isDoubleMetaphoneEqual("J]-a 2 y", "PSVTG?8G^K");
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertTrue(boolean4 == boolean2);
      assertFalse(boolean4 == boolean0);
      assertTrue(boolean4 == boolean1);
      assertTrue(boolean4 == boolean3);
      assertFalse(boolean4);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      String string1 = "=&g?(Kz2BW7j";
      String string2 = doubleMetaphone0.encode("UsCOi+w62{i");
      assertNotNull(string2);
      assertNotSame(doubleMetaphone0, doubleMetaphone3);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)object0));
      assertEquals("ASK", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object1 = new Object();
      assertNotNull(object1);
      
      Object object2 = new Object();
      assertNotNull(object2);
      assertFalse(object2.equals((Object)object1));
      
      try { 
        doubleMetaphone1.encode(object2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("=vhQ(IN~bp.KD\"u|p", "=vhQ(IN~bp.KD\"u|p", false);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("=vhQ(IN~bp.KD\"u|p", "PSVTG?8G^K");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("J]-a 2 y", false);
      assertNotNull(string0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals("J", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone1.isDoubleMetaphoneEqual("=vhQ(IN~bp.KD\"u|p", "ALLE");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      boolean boolean3 = doubleMetaphone1.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "B0M?yS_t]");
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("=&g?(Kz2BW7j");
      assertNotNull(string1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(string1.equals((Object)string0));
      assertEquals("KKSP", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone1.encode((Object) "ALLE");
      assertNotNull(object1);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(object1.equals((Object)string1));
      assertFalse(object1.equals((Object)string0));
      assertEquals("AL", object1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      Object object2 = doubleMetaphone2.encode((Object) "AL");
      assertNotNull(object2);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(object2.equals((Object)string0));
      assertTrue(object2.equals((Object)object1));
      assertFalse(object2.equals((Object)string1));
      assertEquals("AL", object2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("Zm2K]X{v`inQQLx");
      assertNotNull(string0);
      assertEquals("SMKK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("SMKK");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("SMK", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "SMKK");
      assertNotNull(object0);
      assertTrue(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string0));
      assertEquals("SMK", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("WMBas.GN#G8K", false);
      assertNotNull(string2);
      assertFalse(string2.equals((Object)object0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("MPSK", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("Zm2K]X{v`inQQLx", true);
      assertNotNull(string3);
      assertFalse(string3.equals((Object)object0));
      assertTrue(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertEquals("SMKK", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone1.doubleMetaphone("UE");
      assertNotNull(string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals("A", string0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("Vu{", "Vu{", false);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("P", true);
      assertNotNull(string1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertEquals("P", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("O", "$y$?wrW_#");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string2 = doubleMetaphone1.doubleMetaphone("KS", false);
      assertNotNull(string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("KS", string2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone1.isDoubleMetaphoneEqual("Vu{", "P");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("HolUjI", "VTG?8g^k");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone1.doubleMetaphone("$pBGh_>+jc", false);
      assertNotNull(string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals("PKJK", string0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      doubleMetaphone1.setMaxCodeLen(78);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(78, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("ME", "PKJK");
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(84);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone0.doubleMetaphone("|S6X/@uA-^@0q", true);
      assertNotNull(string0);
      assertEquals("SKSK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("m`sCekzR'8<M", "m`sCekzR'8<M");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = "PSHOLZ";
      String string1 = "PNZAJC";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("PSHOLZ", "PNZAJC");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone3);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      String string2 = doubleMetaphone1.doubleMetaphone("OV(%9PfdYFjy#cWt", false);
      assertNotNull(string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("AFPF", string2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      doubleMetaphone2.setMaxCodeLen(0);
      assertNotSame(doubleMetaphone2, doubleMetaphone3);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(0, doubleMetaphone2.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone4 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone4);
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      
      String string3 = null;
      // Undeclared exception!
      try { 
        doubleMetaphone2.isDoubleMetaphoneEqual((String) null, "PNZAJC");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(71);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(84);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('k');
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      assertEquals("k", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("k", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean0);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      assertEquals("k", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("k", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("V3E1$4lQl*ku8S0qR# ", "V3E1$4lQl*ku8S0qR# ");
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      assertEquals("kV3E1$4lQl*ku8S0qR# ", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("kV3E1$4lQl*ku8S0qR# ", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('~');
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      assertEquals("kV3E1$4lQl*ku8S0qR# ~", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("kV3E1$4lQl*ku8S0qR# ~", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone0.doubleMetaphone("UMB");
      assertNotNull(string0);
      assertEquals("AM", string0);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("UqzBB", "23W|@");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1512));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("%tk8F.'A.pTT-", "CH");
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("%tk8F.'A.pTT-");
      assertNotNull(string0);
      assertEquals("TKFP", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('H');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string1 = doubleMetaphone0.encode("7X");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("KS", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string3 = doubleMetaphone0.doubleMetaphone("KNNI&FUE!", false);
      assertNotNull(string3);
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertEquals("NF", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(84);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("GP/V<9dyGE%Rg.25", "G#<CHdU}Dcl#W", true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("PSSK", "GP/V<9dyGE%Rg.25");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("SIO", false);
      assertNotNull(string0);
      assertEquals("S", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("5~B,hnq_wf)[nKQbP");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("PNKF", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("h[VvxOd,p,h4}e", "");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string0 = doubleMetaphone2.encode("ACH");
      assertNotNull(string0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals("AK", string0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string1 = doubleMetaphone1.doubleMetaphone("org.apache.commons.codec.EncoderException", true);
      assertNotNull(string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals("ARKP", string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string2 = doubleMetaphone1.doubleMetaphone("h[VvxOd,p,h4}e", false);
      assertNotNull(string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("FKST", string2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("h[VvxOd,p,h4}e", false);
      assertNotNull(string3);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(string3.equals((Object)string1));
      assertTrue(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertEquals("FKST", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(1500);
      assertEquals(1500, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("2Kktfs3Gg$<d;]oB0E");
      assertNotNull(string0);
      assertEquals("KTFSKTP", string0);
      assertEquals(1500, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "2Kktfs3Gg$<d;]oB0E");
      assertFalse(boolean0);
      assertEquals(1500, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1500);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(1500, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string1 = doubleMetaphone1.doubleMetaphone("2Kktfs3Gg$<d;]oB0E");
      assertNotNull(string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals("KTFS", string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("KTFS", true);
      assertNotNull(string2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("KTFS", string2);
      assertEquals(1500, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("MC", "_?^kYy0gpV^@s6D8|J}");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(1500, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("IER");
      assertNotNull(string0);
      assertEquals("A", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(251);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone((String) null);
      assertNull(string1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("?0GO\"P3/GD(\"z", "ISL", false);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone1.new DoubleMetaphoneResult(251);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult1.append("A", "JN}/,U{vvxc");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("JN}/,U{vvxc", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("A", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "d[k,r;NL");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("c:xC^B");
      assertNotNull(string0);
      assertEquals("KKSP", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone3);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("j^j,UX\"C&");
      assertNotNull(string1);
      assertNotSame(doubleMetaphone0, doubleMetaphone3);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertEquals("JJKS", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone4 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone4);
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      
      String string2 = doubleMetaphone4.doubleMetaphone("VTG?8g^k", true);
      assertNotNull(string2);
      assertNotSame(doubleMetaphone4, doubleMetaphone3);
      assertNotSame(doubleMetaphone4, doubleMetaphone0);
      assertNotSame(doubleMetaphone4, doubleMetaphone2);
      assertNotSame(doubleMetaphone4, doubleMetaphone1);
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("FTKK", string2);
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      
      String string3 = doubleMetaphone2.doubleMetaphone("8G^", false);
      assertNotNull(string3);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone3);
      assertNotSame(doubleMetaphone2, doubleMetaphone4);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertEquals("K", string3);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string4 = doubleMetaphone0.doubleMetaphone("RGY", false);
      assertNotNull(string4);
      assertNotSame(doubleMetaphone0, doubleMetaphone3);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone4);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone4));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertEquals("RJ", string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(1500);
      assertEquals(1500, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("&X<<WIm`VB1zvw^", "XL5C7^Yk(}p");
      assertFalse(boolean0);
      assertEquals(1500, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(37);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(1500, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone1.doubleMetaphone("WR+1MMJJK*EE?((A!9YQA", false);
      assertNotNull(string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals("RMJK", string0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("&X<<WIm`VB1zvw^", "PNAS");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(1500, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone1.encode("PSACH");
      assertNotNull(string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals("SK", string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string2 = doubleMetaphone1.doubleMetaphone("PSACH", false);
      assertNotNull(string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      assertEquals("SK", string2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "\"WYgQpuSiP3Z=/eu");
      assertNotNull(object0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(object0.equals((Object)string2));
      assertFalse(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string0));
      assertEquals("KKPSPS", object0);
      assertEquals(1500, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      assertNotNull(string0);
      assertEquals("ARKP", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("AI");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("A", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.encode("org.apache.commons.codec.EncoderException");
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string1));
      assertTrue(string2.equals((Object)string0));
      assertEquals("ARKP", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("GNED", true);
      assertNotNull(string3);
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertEquals("NT", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("KN", "+aJ+U{>", true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string4 = doubleMetaphone0.doubleMetaphone("+aJ+U{>", true);
      assertNotNull(string4);
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertEquals("J", string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[4];
      String string5 = doubleMetaphone0.doubleMetaphone("+aJ+U{>");
      assertNotNull(string5);
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string2));
      assertTrue(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string0));
      assertEquals("J", string5);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      stringArray0[0] = "A";
      stringArray0[1] = "NT";
      stringArray0[2] = "ARKP";
      String string6 = doubleMetaphone0.encode("f_}\"120)");
      assertNotNull(string6);
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string4));
      assertFalse(string6.equals((Object)string2));
      assertEquals("F", string6);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      stringArray0[3] = "GNED";
      boolean boolean1 = DoubleMetaphone.contains("VAN ", 870, 870, stringArray0);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, stringArray0.length);
      
      String string7 = doubleMetaphone0.doubleMetaphone("z2G/z1=F8GZaAb", false);
      assertNotNull(string7);
      assertFalse(string7.equals((Object)string1));
      assertFalse(string7.equals((Object)string2));
      assertFalse(string7.equals((Object)string3));
      assertFalse(string7.equals((Object)string4));
      assertFalse(string7.equals((Object)string6));
      assertFalse(string7.equals((Object)string5));
      assertFalse(string7.equals((Object)string0));
      assertEquals("SKSF", string7);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string8 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      assertNotNull(string8);
      assertTrue(string8.equals((Object)string2));
      assertFalse(string8.equals((Object)string4));
      assertFalse(string8.equals((Object)string3));
      assertFalse(string8.equals((Object)string7));
      assertFalse(string8.equals((Object)string5));
      assertTrue(string8.equals((Object)string0));
      assertFalse(string8.equals((Object)string6));
      assertFalse(string8.equals((Object)string1));
      assertEquals("ARKP", string8);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = DoubleMetaphone.contains("SKSF", (-6254807), 69, stringArray0);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(4, stringArray0.length);
      
      boolean boolean3 = DoubleMetaphone.contains("AI", 69, 1903, stringArray0);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3);
      assertEquals(4, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("Z", "_5mio3");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("CHIA", false);
      assertNotNull(string0);
      assertEquals("K", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("K", "E#<VhXR(i/5~a", false);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("~,", "CHIA");
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = "MtR=ihbC@\"d5V";
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "MtR=ihbC@\"d5V");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(1500);
      assertEquals(1500, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("&X<<WIm`VB1zvw^", (String) null);
      assertFalse(boolean0);
      assertEquals(1500, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(37);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(1500, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone1.doubleMetaphone("&X<<WIm`VB1zvw^", true);
      assertNotNull(string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals("KSMF", string0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "PS");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(1500, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("org.apache.commons.codec.EncoderException");
      assertNotNull(string1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertEquals("ARKPXKMNSKTKNKTRKSPXN", string1);
      assertEquals(1500, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string2 = doubleMetaphone2.doubleMetaphone("PS", true);
      assertNotNull(string2);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("S", string2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "ARKPXKMNSKTKNKTRKSPXN";
      stringArray0[1] = "KSMF";
      stringArray0[2] = "ARKPXKMNSKTKNKTRKSPXN";
      stringArray0[3] = "org.apache.commons.codec.EncoderException";
      boolean boolean2 = DoubleMetaphone.contains("TZL.", (-524), (-4121), stringArray0);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(4, stringArray0.length);
      
      boolean boolean3 = doubleMetaphone1.isDoubleMetaphoneEqual("CHIA", (String) null);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(boolean3);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string3 = doubleMetaphone2.doubleMetaphone("TZL.", true);
      assertNotNull(string3);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals("TSL", string3);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      try { 
        doubleMetaphone2.encode((Object) doubleMetaphone1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("IER");
      assertNotNull(string0);
      assertEquals("A", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("IER");
      assertNotNull(string1);
      assertTrue(string1.equals((Object)string0));
      assertEquals("A", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string2 = doubleMetaphone2.doubleMetaphone("");
      assertNull(string2);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("TH", "CAESAR", true);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append("U>M%usJ'$#V", "*+XdtTqMlnofdU");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("\"WYgQpuSiP3Z=/eu", "\"WYgQpuSiP3Z=/eu");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone1.doubleMetaphone("");
      assertNull(string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      boolean boolean1 = false;
      // Undeclared exception!
      try { 
        doubleMetaphone1.isDoubleMetaphoneEqual("", "KNSIA", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("\"WYgQpuSiP3Z=/eu", "\"WYgQpuSiP3Z=/eu");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone1.doubleMetaphone("");
      assertNull(string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string1 = doubleMetaphone1.doubleMetaphone("YSL");
      assertNotNull(string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals("AL", string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string2 = doubleMetaphone1.doubleMetaphone("YSL", true);
      assertNotNull(string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(string2.equals((Object)string1));
      assertEquals("AL", string2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("\"WYgQpuSiP3Z=/eu", "\"WYgQpuSiP3Z=/eu");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone1.doubleMetaphone("", true);
      assertNull(string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('I', 'h');
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      Object object0 = doubleMetaphone0.encode((Object) "org.apache.commons.codec.EncoderException");
      assertNotNull(object0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals("ARKP", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "J >F/\"GYRW$2@A");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("\"WYgQpuSiP3Z=/eu", "\"WYgQpuSiP3Z=/eu");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone1.doubleMetaphone("");
      assertNull(string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string1 = null;
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("OV(%9PfdYFjy#LWt", "OV(%9PfdYFjy#LWt");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone1.isDoubleMetaphoneEqual("EB", "org.apache.commons.codec.EncoderException");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone3);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      String string2 = doubleMetaphone3.doubleMetaphone("EB", false);
      assertNotNull(string2);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertEquals("AP", string2);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      String string3 = doubleMetaphone3.doubleMetaphone("\"wkK<|4sj&qq", true);
      assertNotNull(string3);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(string3.equals((Object)string2));
      assertEquals("KSK", string3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      char char0 = doubleMetaphone2.charAt("EB", 2666);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone3);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone3));
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "OV(%9PfdYFjy#LWt";
      stringArray0[1] = "org.apache.commons.codec.EncoderException";
      stringArray0[2] = "\"wkK<|4sj&qq";
      stringArray0[3] = "OV(%9PfdYFjy#LWt";
      stringArray0[4] = null;
      stringArray0[5] = "psQ^N9kORRv=7~";
      boolean boolean3 = DoubleMetaphone.contains("EB", 88, 88, stringArray0);
      assertFalse(boolean3 == boolean0);
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3);
      assertEquals(6, stringArray0.length);
      
      Object object0 = doubleMetaphone3.encode((Object) "\"wkK<|4sj&qq");
      assertNotNull(object0);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertTrue(object0.equals((Object)string3));
      assertFalse(object0.equals((Object)string2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertEquals("KSK", object0);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone4 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone4);
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      
      Object object1 = new Object();
      assertNotNull(object1);
      
      doubleMetaphone0.setMaxCodeLen(1233);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone4);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone3);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone4));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone3));
      assertEquals(1233, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean4 = doubleMetaphone4.isDoubleMetaphoneEqual("KSK", "J (zf", true);
      assertNotSame(doubleMetaphone4, doubleMetaphone1);
      assertNotSame(doubleMetaphone4, doubleMetaphone2);
      assertNotSame(doubleMetaphone4, doubleMetaphone3);
      assertNotSame(doubleMetaphone4, doubleMetaphone0);
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone4.equals((Object)doubleMetaphone0));
      assertTrue(boolean4 == boolean2);
      assertFalse(boolean4 == boolean1);
      assertFalse(boolean4 == boolean0);
      assertTrue(boolean4 == boolean3);
      assertFalse(boolean4);
      assertEquals(4, doubleMetaphone4.getMaxCodeLen());
      
      try { 
        doubleMetaphone4.encode(object1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(84);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("l}T6q'");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("l}T6q'", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("l}T6q'", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("l}T6q'");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("l}T6q'", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("l}T6q'l}T6q'", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(82);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult1.isComplete();
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult1.append('~');
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("~", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("~", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      String string0 = doubleMetaphone0.doubleMetaphone("UMB");
      assertNotNull(string0);
      assertEquals("AM", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("AMFL", "PSMJ", true);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("UMB", "'P]7*g-$_");
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("l}T6q'l}T6q'UMB", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("l}T6q''P]7*g-$_", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "'P]7*g-$_";
      stringArray0[1] = "UMB";
      stringArray0[2] = "AMFL";
      stringArray0[3] = "AM";
      stringArray0[4] = "AMFL";
      stringArray0[5] = "AMFL";
      stringArray0[6] = "'P]7*g-$_";
      stringArray0[7] = "PSMJ";
      stringArray0[8] = "UMB";
      boolean boolean2 = DoubleMetaphone.contains("AMFL", 82, 2123, stringArray0);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(9, stringArray0.length);
      
      String string1 = doubleMetaphone0.doubleMetaphone("PRrP{$qE", false);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("PRPK", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("Nwp.dKGEJOS", "Nwp.dKGEJOS", false);
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("Nwp.dKGEJOS", "Nwp.dKGEJOS", true);
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(584);
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("Nwp.dKGEJOS", true);
      assertNotNull(string0);
      assertEquals("NPTKKJS", string0);
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("Nwp.dKGEJOS");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("NPTKJJS", string1);
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("]Gog#E{1SmD}B", "Nwp.dKGEJOS");
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.encode("NPTKKJS");
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("NPTKS", string2);
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("WH");
      assertNotNull(string3);
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertEquals("A", string3);
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(584);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string4 = doubleMetaphone0.encode("CHORE");
      assertNotNull(string4);
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertEquals("XR", string4);
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      
      String string5 = doubleMetaphone0.doubleMetaphone("NPTKS", false);
      assertNotNull(string5);
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string4));
      assertTrue(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string0));
      assertEquals("NPTKS", string5);
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(84);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("l}T6q'");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("l}T6q'", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("l}T6q'", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("l}T6q'");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("l}T6q'l}T6q'", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("l}T6q'", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string0 = doubleMetaphone0.encode("m_GuBU4,,8lk+4~vHD");
      assertNotNull(string0);
      assertEquals("MKPL", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("WITZ");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("ATS", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('V');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("l}T6q'V", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("l}T6q'l}T6q'V", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("]}?!Bqq'MyAP9Q/", "IN", false);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("m_GuBU4,,8lk+4~vHD");
      assertNotNull(string2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string1));
      assertTrue(string2.equals((Object)string0));
      assertEquals("MKPL", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("m_GuBU4,,8lk+4~vHD", "MKPL", false);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("org.apache.commons.codec.EncoderException", "TFTP");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("l}T6q'l}T6q'Vorg.apache.commons.codec.EncoderException", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("l}T6q'VTFTP", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      int int0 = doubleMetaphone2.getMaxCodeLen();
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("M", true);
      assertNotNull(string0);
      assertEquals("M", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("|_T/^", (String) null);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("?Z^^C7", "?Z^^C7");
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("LG!Px.LTkqo_4", "AT%s+4NJmm-LO66", false);
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("", false);
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("iuG", true);
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertEquals("AK", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string3 = doubleMetaphone1.doubleMetaphone("L}", true);
      assertNotNull(string3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertEquals("L", string3);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-48077992));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('y');
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('y', 'y');
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string4 = doubleMetaphone1.doubleMetaphone("Zkl){Jx(ZP>eB[Y", false);
      assertNotNull(string4);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertEquals("SKLJ", string4);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean3 = doubleMetaphone1.isDoubleMetaphoneEqual("CHAE", "");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("KNO7$N", 0);
      assertEquals('K', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "KNO7$N");
      assertNotNull(object0);
      assertEquals("NN", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("6\"@DYf_Ze3t3M", "MACHER");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("MACHER", false);
      assertNotNull(string0);
      assertFalse(string0.equals((Object)object0));
      assertEquals("MKR", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(505);
      assertEquals(505, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual(";", "MKR");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(505, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("KNO7$N", "wLv8OWT:3s^A)|z#");
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(505, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode((String) null);
      assertNull(string1);
      assertEquals(505, doubleMetaphone0.getMaxCodeLen());
      
      char char1 = doubleMetaphone0.charAt("KNO7$N", 0);
      assertTrue(char1 == char0);
      assertEquals('K', char1);
      assertEquals(505, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen((-1328));
      assertEquals((-1328), doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean3 = DoubleMetaphone.contains("UMB", (-1328), (-26587893), (String[]) null);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.encode((Object) "OxG1`\"S)s");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen((-2136));
      assertEquals((-2136), doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.encode("O7$N");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("mgi1/e;8~^8,u1", false);
      assertNotNull(string0);
      assertEquals("MJ", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("mgi1/e;8~^8,u1", 2244);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2244);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("mgi1/e;8~^8,u1", "mgi1/e;8~^8,u1", true);
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(584);
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("mgi1/e;8~^8,u1", true);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("MK", string1);
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("mgi1/e;8~^8,u1");
      assertNotNull(string2);
      assertTrue(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("MJ", string2);
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("mgi1/e;8~^8,u1", "MK");
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.encode("mgi1/e;8~^8,u1");
      assertNotNull(string3);
      assertTrue(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertTrue(string3.equals((Object)string0));
      assertEquals("MJ", string3);
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("AN", "]Gog#E{1SmD}B");
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(81);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      
      String string4 = doubleMetaphone0.encode("mgi1/e;8~^8,u1");
      assertNotNull(string4);
      assertTrue(string4.equals((Object)string0));
      assertTrue(string4.equals((Object)string3));
      assertTrue(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertEquals("MJ", string4);
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "org.apache.commons.codec.EncoderException");
      assertNotNull(object0);
      assertFalse(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string3));
      assertFalse(object0.equals((Object)string4));
      assertFalse(object0.equals((Object)string2));
      assertEquals("ARKPXKMNSKTKNKTRKSPXN", object0);
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "AN";
      stringArray0[1] = "MJ";
      stringArray0[2] = "MJ";
      stringArray0[3] = "]Gog#E{1SmD}B";
      stringArray0[4] = "UCCEE";
      boolean boolean3 = DoubleMetaphone.contains("MK", (-340), (-2930), stringArray0);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3 == boolean0);
      assertFalse(boolean3);
      assertEquals(5, stringArray0.length);
      
      boolean boolean4 = DoubleMetaphone.contains("]Gog#E{1SmD}B", 1313, 1422, stringArray0);
      assertTrue(boolean4 == boolean1);
      assertTrue(boolean4 == boolean2);
      assertFalse(boolean4 == boolean0);
      assertTrue(boolean4 == boolean3);
      assertFalse(boolean4);
      assertEquals(5, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(67);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("cZg]y", "cZg]y");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("cZg]y");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("cZg]y", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("cZg]y", "cZg]y");
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("p", true);
      assertNotNull(string0);
      assertEquals("P", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("P", true);
      assertNotNull(string1);
      assertTrue(string1.equals((Object)string0));
      assertEquals("P", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("P", true);
      assertNotNull(string2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      assertEquals("P", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(561);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("P", "SCH", false);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "");
      assertNull(object0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('}');
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("}", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("cZg]y}", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('y', 'C');
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("cZg]y}y", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("}C", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string3 = doubleMetaphone0.doubleMetaphone("p\"", true);
      assertNotNull(string3);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(string3.equals((Object)string2));
      assertTrue(string3.equals((Object)string1));
      assertTrue(string3.equals((Object)string0));
      assertEquals("P", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object1 = new Object();
      assertNotNull(object1);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "";
      int int0 = (-38742916);
      doubleMetaphone0.setMaxCodeLen((-38742916));
      assertEquals((-38742916), doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("", true);
      assertNull(string1);
      assertEquals((-38742916), doubleMetaphone0.getMaxCodeLen());
      
      String string2 = "";
      char char0 = doubleMetaphone0.charAt("", (-2118));
      assertEquals('\u0000', char0);
      assertEquals((-38742916), doubleMetaphone0.getMaxCodeLen());
      
      try { 
        doubleMetaphone0.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("M", true);
      assertNotNull(string0);
      assertEquals("M", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("|_T/^", (String) null);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("|_T/^", "iuG");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("?Z^^C7", "?Z^^C7");
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("LG!Px.LTkqo_4", "AT%s+4NJmm-LO66", false);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("", false);
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("iuG", true);
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertEquals("AK", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string3 = doubleMetaphone1.doubleMetaphone("L}", true);
      assertNotNull(string3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertEquals("L", string3);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-48077992));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('y');
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('y', 'y');
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string4 = doubleMetaphone1.doubleMetaphone("Zkl){Jx(ZP>eB[Y", false);
      assertNotNull(string4);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string2));
      assertEquals("SKLJ", string4);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = 67;
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(67);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "TTH");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("&X<<WIm`VB1zvw^", (String) null);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("\"@L_uf1g{25tZz)u", "=vhQ(IN~bp.KD\"u|p", false);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "R7$jB[4sam");
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone((String) null, false);
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual(":h]:Z;.v7feI ;Q=U", "d");
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean4 = doubleMetaphone1.isDoubleMetaphoneEqual("DG", "GNE\"1&");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean4 == boolean2);
      assertTrue(boolean4 == boolean3);
      assertTrue(boolean4 == boolean0);
      assertTrue(boolean4 == boolean1);
      assertFalse(boolean4);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string1 = doubleMetaphone1.encode("8gN<_s=:B|oM`");
      assertNotNull(string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals("NSPM", string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      try { 
        doubleMetaphone1.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "S";
      String string1 = "H=|?xHJ<3B&I\\B6rR*";
      String string2 = doubleMetaphone0.doubleMetaphone("H=|?xHJ<3B&IB6rR*");
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("KSJP", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("S", false);
      assertNotNull(string3);
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertTrue(string3.equals((Object)string0));
      assertEquals("S", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = (-1261);
      doubleMetaphone0.setMaxCodeLen((-1261));
      assertEquals((-1261), doubleMetaphone0.getMaxCodeLen());
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertTrue(int1 == int0);
      assertEquals((-1261), int1);
      assertEquals((-1261), doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "KSJP";
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("S", "0s/n[iv;\"", false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("PS7X", (-1320));
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2244);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("PS7X");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("PS7X", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append(" ");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(" ", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("PS7X ", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone0.doubleMetaphone("WRWITZ", true);
      assertNotNull(string0);
      assertEquals("RFX", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('k', '\\');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(" \\", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("PS7X k", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      Object object0 = doubleMetaphone0.encode((Object) "]aVnhY-5RY([>YjfcgaD");
      assertNotNull(object0);
      assertFalse(object0.equals((Object)string0));
      assertEquals("FNRJ", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone0.doubleMetaphone("c:xC^B");
      assertNotNull(string0);
      assertEquals("KKSP", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("c:xC^B");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("C|eOd}KNYj9Z ", "ON", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("c:xC^B", "H0.BaZvy3e.");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string1 = doubleMetaphone0.doubleMetaphone((String) null);
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("TIA", "C|eOd}KNYj9Z ", false);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("sc'>W", "ER");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("KKSP", ";NNzP!i2vQ");
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("N", false);
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertEquals("N", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("U3OpPE~", false);
      assertNotNull(string0);
      assertEquals("AP", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("GNXXTP");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("NKST", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(86);
      assertEquals(86, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[0];
      String string2 = doubleMetaphone0.doubleMetaphone("AP", true);
      assertNotNull(string2);
      assertTrue(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("AP", string2);
      assertEquals(86, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = DoubleMetaphone.contains("H0\"zN<Db&#\".y", 4, 86, stringArray0);
      assertFalse(boolean0);
      assertEquals(0, stringArray0.length);
      
      boolean boolean1 = DoubleMetaphone.contains("=(P,^O!<>1g8P|G", (-1171), 3648, stringArray0);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(0, stringArray0.length);
      
      Object object0 = doubleMetaphone0.encode((Object) "N{yeX7W{?");
      assertNotNull(object0);
      assertFalse(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string2));
      assertEquals("NKS", object0);
      assertEquals(86, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = DoubleMetaphone.contains("1", 193, 2946, stringArray0);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("PSARKP", "J1;#D");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("swsZ`uH}>t33p}n9$a", true);
      assertNotNull(string0);
      assertEquals("XXTP", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("XXTP", "swsZ`uH}>t33p}n9$a");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("FFIr+ANAV7sf~dOO", "FFIr+ANAV7sf~dOO");
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("PSARKP");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("SRKP", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("SRKP", "PSARKP");
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "swsZ`uH}>t33p}n9$a";
      boolean boolean4 = DoubleMetaphone.contains("I", (-3358), (-1954), stringArray0);
      assertFalse(boolean4 == boolean3);
      assertTrue(boolean4 == boolean1);
      assertTrue(boolean4 == boolean0);
      assertFalse(boolean4 == boolean2);
      assertFalse(boolean4);
      assertEquals(1, stringArray0.length);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("PSARKP", false);
      assertNotNull(string2);
      assertTrue(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("SRKP", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean5 = doubleMetaphone0.isDoubleMetaphoneEqual("yM).+IK'A!V<", "SRKP");
      assertFalse(boolean5 == boolean2);
      assertTrue(boolean5 == boolean0);
      assertFalse(boolean5 == boolean3);
      assertTrue(boolean5 == boolean4);
      assertTrue(boolean5 == boolean1);
      assertFalse(boolean5);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "swsZ`uH}>t33p}n9$a");
      assertNotNull(object0);
      assertFalse(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string2));
      assertFalse(object0.equals((Object)string0));
      assertEquals("SSTP", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object1 = doubleMetaphone0.encode((Object) "SSTP");
      assertNotNull(object1);
      assertFalse(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string1));
      assertFalse(object1.equals((Object)string0));
      assertFalse(object1.equals((Object)string2));
      assertEquals("STP", object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object2 = doubleMetaphone0.encode((Object) "SSTP");
      assertNotNull(object2);
      assertFalse(object2.equals((Object)object0));
      assertTrue(object2.equals((Object)object1));
      assertFalse(object2.equals((Object)string2));
      assertFalse(object2.equals((Object)string0));
      assertFalse(object2.equals((Object)string1));
      assertEquals("STP", object2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertTrue(int1 == int0);
      assertEquals(4, int1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("N", (-1954));
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object3 = doubleMetaphone0.encode((Object) "PSARKP");
      assertNotNull(object3);
      assertTrue(object3.equals((Object)string1));
      assertTrue(object3.equals((Object)string2));
      assertFalse(object3.equals((Object)object1));
      assertFalse(object3.equals((Object)string0));
      assertFalse(object3.equals((Object)object0));
      assertFalse(object3.equals((Object)object2));
      assertEquals("SRKP", object3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("XXTP", false);
      assertNotNull(string3);
      assertFalse(string3.equals((Object)object1));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)object2));
      assertFalse(string3.equals((Object)object0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)object3));
      assertFalse(string3.equals((Object)string0));
      assertEquals("SKST", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object4 = doubleMetaphone0.encode((Object) "SRKP");
      assertNotNull(object4);
      assertTrue(object4.equals((Object)string1));
      assertTrue(object4.equals((Object)object3));
      assertFalse(object4.equals((Object)object1));
      assertFalse(object4.equals((Object)string3));
      assertTrue(object4.equals((Object)string2));
      assertFalse(object4.equals((Object)object2));
      assertFalse(object4.equals((Object)object0));
      assertFalse(object4.equals((Object)string0));
      assertEquals("SRKP", object4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean6 = doubleMetaphone0.isDoubleMetaphoneEqual("SRKP", "SRKP");
      assertFalse(boolean6 == boolean4);
      assertFalse(boolean6 == boolean5);
      assertTrue(boolean6 == boolean2);
      assertFalse(boolean6 == boolean1);
      assertTrue(boolean6 == boolean3);
      assertFalse(boolean6 == boolean0);
      assertTrue(boolean6);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("mgi1/e;8~^8,u1", 2244);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2244);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('\u0000', '\u0000');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("\u0000", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("\u0000", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("mgi1/e;8~^8,u1");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("\u0000mgi1/e;8~^8,u1", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("\u0000", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("\u0000mgi1/e;8~^8,u1", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("\u0000", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("a(c.BCOABH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("\u0000a(c.BCOABH", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("\u0000mgi1/e;8~^8,u1a(c.BCOABH", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("'.3tF20ot@6p");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("\u0000mgi1/e;8~^8,u1a(c.BCOABH", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("'.3tF20ot@6p", "gieA{%bkpK?");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(2244);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      
      String string0 = doubleMetaphone0.encode("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("'.3tF20ot@6p");
      assertNotNull(string1);
      assertEquals("TFTP", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.encode("u~?9ddNC([5!");
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string1));
      assertEquals("ATNK", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult2 = doubleMetaphone0.new DoubleMetaphoneResult(2244);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult2);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "u~?9ddNC([5!";
      String string3 = doubleMetaphone0.doubleMetaphone("mgi1/e;8~^8,u1", false);
      assertNotNull(string3);
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertEquals("MJ", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      stringArray0[1] = "gieA{%bkpK?";
      stringArray0[2] = "ATNK";
      stringArray0[3] = null;
      stringArray0[4] = "gieA{%bkpK?";
      stringArray0[5] = "u~?9ddNC([5!";
      stringArray0[6] = "";
      stringArray0[7] = null;
      stringArray0[8] = "ATNK";
      boolean boolean2 = DoubleMetaphone.contains("'.3tF20ot@6p", (-1), 185, stringArray0);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(9, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("3*9", "WR]AE'B?SH{L8K");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("WR]AE'B?SH{L8K");
      assertNotNull(string0);
      assertEquals("RPXL", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string1 = doubleMetaphone1.encode("WICZ");
      assertNotNull(string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals("AKS", string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(632);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("PNY~L={PMQYAGX1W|");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PNY~L={PMQYAGX1W|", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("PNY~L={PMQYAGX1W|", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("WR]AE'B?SH{L8K");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PNY~L={PMQYAGX1W|", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("PNY~L={PMQYAGX1W|WR]AE'B?SH{L8K", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PNY~L={PMQYAGX1W|", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("PNY~L={PMQYAGX1W|WR]AE'B?SH{L8K", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('i');
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PNY~L={PMQYAGX1W|i", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("PNY~L={PMQYAGX1W|WR]AE'B?SH{L8Ki", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string2 = doubleMetaphone0.doubleMetaphone("UMB");
      assertNotNull(string2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("AM", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "AMFL", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("Nwp.dKGEJOS", "Nwp.dKGEJOS", false);
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("Nwp.dKGEJOS", "Nwp.dKGEJOS", true);
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(584);
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("Nwp.dKGEJOS", false);
      assertNotNull(string0);
      assertEquals("NPTKJJS", string0);
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("Nwp.dKGEJOS");
      assertNotNull(string1);
      assertTrue(string1.equals((Object)string0));
      assertEquals("NPTKJJS", string1);
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("]Gog#E{1SmD}B", "Nwp.dKGEJOS");
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.encode((String) null);
      assertNull(string2);
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("UCCEE", (String) null);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean3 == boolean0);
      assertFalse(boolean3);
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1166);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string3 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertNotNull(string3);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertEquals("", string3);
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(584);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('?');
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("?", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      char char0 = doubleMetaphone0.charAt("org.apache.commons.codec.EncoderException", 356);
      assertEquals('\u0000', char0);
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "SKNJ";
      stringArray0[1] = "";
      stringArray0[2] = null;
      boolean boolean4 = DoubleMetaphone.contains("", 1, 356, stringArray0);
      assertFalse(boolean4 == boolean0);
      assertFalse(boolean4 == boolean1);
      assertTrue(boolean4 == boolean2);
      assertTrue(boolean4 == boolean3);
      assertFalse(boolean4);
      assertEquals(3, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("Nwp.dKGEJOS", "Nwp.dKGEJOS", false);
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("Nwp.dKGEJOS", "Nwp.dKGEJOS", true);
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(584);
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("db|SwhKnyj}U");
      assertNotNull(string0);
      assertEquals("TPSKNJ", string0);
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("TPSKNJ");
      assertNotNull(string1);
      assertTrue(string1.equals((Object)string0));
      assertEquals("TPSKNJ", string1);
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = "sc'>W";
      String string3 = "CY";
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("CY", "%kaaI_(qP", true);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-87));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append("org.apache.commons.codec.language.DoubleMetaphone", "<th@wE.!<}WBX ");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("JOSE");
      assertNotNull(string0);
      assertEquals("HS", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("HS");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("S", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.encode("`PI[)+&q&p>w^B.");
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("PKPP", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.encode("l}T6q'");
      assertNotNull(string3);
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertEquals("LTK", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(88);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("HEIM");
      assertNotNull(string0);
      assertEquals("HM", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(0);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string1 = doubleMetaphone1.doubleMetaphone("CC", true);
      assertNotNull(string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals("K", string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('l');
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('l', 'S');
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string2 = doubleMetaphone1.doubleMetaphone("CC", true);
      assertNotNull(string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("K", string2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      String string3 = doubleMetaphone0.doubleMetaphone("HM", true);
      assertNotNull(string3);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertEquals("M", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string4 = doubleMetaphone1.doubleMetaphone("CG", true);
      assertNotNull(string4);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertTrue(string4.equals((Object)string2));
      assertTrue(string4.equals((Object)string1));
      assertEquals("K", string4);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("mgi1/e;8~^8,u1", 2244);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2244);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('\u0000', '\u0000');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("\u0000", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("\u0000", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("mgi1/e;8~^8,u1");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("\u0000", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("\u0000mgi1/e;8~^8,u1", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("\u0000", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("\u0000mgi1/e;8~^8,u1", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("'.3tF20ot@6p");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("\u0000mgi1/e;8~^8,u1", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("'.3tF20ot@6p", "gieA{%bkpK?");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(2244);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      
      String string0 = doubleMetaphone0.doubleMetaphone("IER", true);
      assertNotNull(string0);
      assertEquals("AR", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult2 = doubleMetaphone0.new DoubleMetaphoneResult(2244);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult2);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult2.append('M');
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("M", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertEquals("M", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('j');
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult2);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("\u0000mgi1/e;8~^8,u1j", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('&', 'j');
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult2);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("\u0000mgi1/e;8~^8,u1j&", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string1 = doubleMetaphone0.doubleMetaphone("3aD!Ag", false);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("TK", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      Object object1 = doubleMetaphone1.encode((Object) "3aD!Ag");
      assertNotNull(object1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(object1.equals((Object)string0));
      assertTrue(object1.equals((Object)string1));
      assertEquals("TK", object1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("v6]@G~D3i`M'3b+]Z");
      assertNotNull(string0);
      assertEquals("FKTM", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("l}T6q'", (String) null);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("FKTM", true);
      assertNotNull(string1);
      assertTrue(string1.equals((Object)string0));
      assertEquals("FKTM", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.encode("RE5_;dgGTL4.R$qc");
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("RTKK", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(1);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("qD<=OW");
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertEquals("q", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertEquals("q", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "org.apache.commons.codec.EncoderException";
      stringArray0[1] = "n|w9Edq!m";
      stringArray0[2] = "n|w9Edq!m";
      stringArray0[3] = "RTKK";
      stringArray0[4] = null;
      stringArray0[5] = "org.apache.commons.codec.EncoderException";
      stringArray0[6] = "FKTM";
      stringArray0[7] = "l}T6q'";
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("`b]{g#3u\"fuA9^X/[A");
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertEquals("q", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      stringArray0[8] = "CIO";
      boolean boolean2 = DoubleMetaphone.contains("nGa>k4NIg'n&D\"<%{d", (-1525), (-1525), stringArray0);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(9, stringArray0.length);
      
      String string3 = doubleMetaphone0.doubleMetaphone((String) null, false);
      assertNull(string3);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("v6]@G~D3i`M'3b+]Z");
      assertNotNull(string0);
      assertEquals("FKTM", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("l}T6q'", (String) null);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("FKTM", true);
      assertNotNull(string1);
      assertTrue(string1.equals((Object)string0));
      assertEquals("FKTM", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.encode("RE5_;dgGTL4.R$qc");
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("RTKK", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(1);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("G");
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertEquals("G", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("G", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("qD<=OW", "TTH", true);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("SCH", "h+eK/G");
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertEquals("G", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("G", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('y');
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertEquals("G", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("G", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("onM$fkdo(=v");
      assertNotNull(string0);
      assertEquals("ANMF", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("onM$fkdo(=v", "onM$fkdo(=v");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("d", "onM$fkdo(=v", false);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("d", "d");
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("CH", true);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("K", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("GN", "A'4CAKE7");
      assertFalse(boolean3 == boolean0);
      assertFalse(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[4];
      stringArray0[1] = "K";
      stringArray0[2] = "Sc;H'ao4L8+:Wr";
      stringArray0[3] = "PS]AE'B?SH{L8K";
      // Undeclared exception!
      try { 
        DoubleMetaphone.contains((String) null, 4, 4, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("]cXI/q36eua=gK", "EB", true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("]cXI/q36eua=gK", "EB");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("VT6obq.~4}");
      assertNotNull(string0);
      assertEquals("FTPK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("]cXI/q36eua=gK", "e=LT", false);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("bKljc\"", (-1335));
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertTrue(int1 == int0);
      assertEquals(4, int1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "bKljc\"");
      assertNotNull(object0);
      assertFalse(object0.equals((Object)string0));
      assertEquals("PKLK", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("DspH{n$t()]b<yH");
      assertNotNull(string0);
      assertEquals("TSFN", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("", false);
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1716);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string2 = doubleMetaphone0.encode("DHQ*0$p$TB");
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertEquals("TKPT", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("*#(h`2`eYEG2&<F");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("*#(h`2`eYEG2&<F", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("*#(h`2`eYEG2&<F", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "*#(h`2`eYEG2&<F";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual(".3TSiauA 1m", "sMqHBJuQ`2+_]gV");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.encode("c#JTz68");
      assertNotNull(string3);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertEquals("KJTS", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("x kBP)", "TKPT");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string4 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertNotNull(string4);
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertEquals("*#(h`2`eYEG2&<F", string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("*#(h`2`eYEG2&<F", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("*#(h`2`eYEG2&<F", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('k');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("*#(h`2`eYEG2&<F", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("*#(h`2`eYEG2&<Fk", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      char char0 = doubleMetaphone0.charAt("Y", 1716);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(84);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('E');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("E", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String[] stringArray0 = new String[0];
      boolean boolean0 = DoubleMetaphone.contains("XeV2Wl7*1O_b*+re", 84, 1799, stringArray0);
      assertFalse(boolean0);
      assertEquals(0, stringArray0.length);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("l}T6q'");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("El}T6q'", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('w');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("w", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("El}T6q'w", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("\"");
      assertNotNull(string0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals("", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("XeV2Wl7*1O_b*+re", "\"", false);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = DoubleMetaphone.contains("", 1494, 1799, stringArray0);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("mgi1/e;8~^8,u1", 2244);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2244);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("mgi1/e;8~^8,u1");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("mgi1/e;8~^8,u1", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("mgi1/e;8~^8,u1", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("'.3tF20ot@6p");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("mgi1/e;8~^8,u1", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone0.encode("L");
      assertNotNull(string0);
      assertEquals("L", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen((-12437164));
      assertEquals((-12437164), doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("HARIS");
      assertEquals((-12437164), doubleMetaphone0.getMaxCodeLen());
      assertEquals("mgi1/e;8~^8,u1HARIS", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String[] stringArray0 = new String[0];
      boolean boolean1 = DoubleMetaphone.contains("'.3tF20ot@6p", 2244, 71, stringArray0);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(0, stringArray0.length);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("PN");
      assertEquals((-12437164), doubleMetaphone0.getMaxCodeLen());
      assertEquals("mgi1/e;8~^8,u1HARISPN", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('r');
      assertEquals((-12437164), doubleMetaphone0.getMaxCodeLen());
      assertEquals("mgi1/e;8~^8,u1HARISPNr", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string1 = doubleMetaphone0.doubleMetaphone((String) null);
      assertNull(string1);
      assertEquals((-12437164), doubleMetaphone0.getMaxCodeLen());
      
      String string2 = "";
      String string3 = "{6n-1*-I$kfE";
      String[] stringArray1 = new String[8];
      assertFalse(stringArray1.equals((Object)stringArray0));
      
      stringArray1[0] = "L";
      stringArray1[1] = "PN";
      stringArray1[2] = "";
      stringArray1[3] = null;
      stringArray1[4] = "L";
      stringArray1[5] = "'.3tF20ot@6p";
      stringArray1[6] = "mgi1/e;8~^8,u1";
      stringArray1[7] = "mgi1/e;8~^8,u1";
      boolean boolean2 = DoubleMetaphone.contains("{6n-1*-I$kfE", (-12437164), 71, stringArray1);
      assertNotSame(stringArray1, stringArray0);
      assertFalse(stringArray1.equals((Object)stringArray0));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(8, stringArray1.length);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.doubleMetaphone("mgi1/e;8~^8,u1", false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(84);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string0 = "cZg]y";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("><DH^lt'EGdo[", "><DH^lt'EGdo[");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(84);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult1.appendPrimary("cZg]y");
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("cZg]y", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      
      String string1 = ".S!>ZZbv#plT}nG/jv";
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual(".S!>ZZbv#plT}nG/jv", ".S!>ZZbv#plT}nG/jv");
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult1.appendAlternate(".S!>ZZbv#plT}nG/jv");
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(".S!>ZZbv#plT}nG/jv", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("cZg]y", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult1.append((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(4);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("rfU3!45", "D^Esaa|N,H8t{");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("rfU3", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("D^Es", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string0 = doubleMetaphone0.doubleMetaphone("rfU3!45");
      assertNotNull(string0);
      assertEquals("RF", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("CAESAR");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("SSR", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "rfU3!45";
      String string2 = doubleMetaphone0.doubleMetaphone("EG", true);
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("AK", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      stringArray0[1] = "RF";
      stringArray0[2] = "D^Esaa|N,H8t{";
      stringArray0[3] = "D^Esaa|N,H8t{";
      stringArray0[4] = "CAESAR";
      stringArray0[5] = "SSR";
      String string3 = doubleMetaphone0.doubleMetaphone("SSR");
      assertNotNull(string3);
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertEquals("SR", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "D^Esaa|N,H8t{");
      assertNotNull(object0);
      assertFalse(object0.equals((Object)string3));
      assertFalse(object0.equals((Object)string2));
      assertFalse(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string0));
      assertEquals("TSNT", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = DoubleMetaphone.contains("", 0, 0, stringArray0);
      assertFalse(boolean0);
      assertEquals(6, stringArray0.length);
      
      String string4 = "";
      Object object1 = doubleMetaphone0.encode((Object) "");
      assertNull(object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object2 = doubleMetaphone0.encode((Object) "rfU3!45");
      assertNotNull(object2);
      assertFalse(object2.equals((Object)object0));
      assertFalse(object2.equals((Object)string4));
      assertFalse(object2.equals((Object)string3));
      assertFalse(object2.equals((Object)string1));
      assertTrue(object2.equals((Object)string0));
      assertFalse(object2.equals((Object)string2));
      assertEquals("RF", object2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", (String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone1.doubleMetaphone("DspH{n$t()]b<yH");
      assertNotNull(string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals("TSFN", string0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string1 = doubleMetaphone2.doubleMetaphone("_bUTM", false);
      assertNotNull(string1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertEquals("PTM", string1);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string2 = doubleMetaphone2.doubleMetaphone("~u1+z2j$a%=9Lzgk$H");
      assertNotNull(string2);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("SJLS", string2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string3 = doubleMetaphone2.encode("PTM");
      assertNotNull(string3);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertTrue(string3.equals((Object)string1));
      assertEquals("PTM", string3);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string4 = doubleMetaphone2.doubleMetaphone("\"WY", false);
      assertNotNull(string4);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertEquals("", string4);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string5 = doubleMetaphone0.doubleMetaphone("\"WY");
      assertNotNull(string5);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(string5.equals((Object)string2));
      assertTrue(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string3));
      assertEquals("", string5);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("]Ae'b?SH{l8k", "bGE*/<i82/6W%6 ", true);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("\"w", "\"w");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1690));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone0.encode("v6]@G~D3i`M'3b+]Z");
      assertNotNull(string0);
      assertEquals("FKTM", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("l}T6q'", (String) null);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("FKTM", true);
      assertNotNull(string1);
      assertTrue(string1.equals((Object)string0));
      assertEquals("FKTM", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('l');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('l', '5');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string2 = doubleMetaphone0.encode("RE5_;dgGTL4.R$qc");
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("RTKK", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen((-1690));
      assertEquals((-1690), doubleMetaphone0.getMaxCodeLen());
      
      String string3 = "qD<=OW";
      String string4 = "tI";
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("tI", "\"w", true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("DspH{n$t()]b<yH");
      assertNotNull(string0);
      assertEquals("TSFN", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("", false);
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1716);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string2 = "DHQ*0$p$TB";
      String string3 = doubleMetaphone0.encode("DHQ*0$p$TB");
      assertNotNull(string3);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertEquals("TKPT", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("*#(h`2`eYEG2&<F");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("*#(h`2`eYEG2&<F", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("*#(h`2`eYEG2&<F", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      int int0 = 71;
      String[] stringArray0 = new String[6];
      stringArray0[0] = "*#(h`2`eYEG2&<F";
      stringArray0[1] = "*#(h`2`eYEG2&<F";
      stringArray0[2] = "TSFN";
      stringArray0[3] = "HARIS";
      stringArray0[4] = "DspH{n$t()]b<yH";
      stringArray0[5] = "DspH{n$t()]b<yH";
      boolean boolean0 = DoubleMetaphone.contains("HARIS", 1716, 71, stringArray0);
      assertFalse(boolean0);
      assertEquals(6, stringArray0.length);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("HARIS");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("*#(h`2`eYEG2&<FHARIS", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("*#(h`2`eYEG2&<F", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('i');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("*#(h`2`eYEG2&<Fi", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("*#(h`2`eYEG2&<FHARISi", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string4 = doubleMetaphone1.doubleMetaphone("uLl7ya`H^p");
      assertNotNull(string4);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string2));
      assertEquals("ALP", string4);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone2.isDoubleMetaphoneEqual("", "TSFN", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("mgi1/e;8~^8,u1", 2244);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2244);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("mgi1/e;8~^8,u1");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("mgi1/e;8~^8,u1", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("mgi1/e;8~^8,u1", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("'.3tF20ot@6p");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("mgi1/e;8~^8,u1", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("|<n\u0007L@Z");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("mgi1/e;8~^8,u1|<n\u0007L@Z", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone0.doubleMetaphone("$Hi#E[Ft=4");
      assertNotNull(string0);
      assertEquals("FT", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('r', 'r');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("mgi1/e;8~^8,u1|<n\u0007L@Zr", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string1 = doubleMetaphone0.encode("|<n\u0007L@Z");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("NLS", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("FT", "mgi1/e;8~^8,u1");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("mgi1/e;8~^8,u1|<n\u0007L@ZrFT", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string2 = doubleMetaphone0.doubleMetaphone("ER", false);
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("AR", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("WRL");
      assertNotNull(string3);
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertEquals("RL", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual(";NNzP!i2vQ", "AGGI", false);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("RL", "[h1qWNj'.>YoMD");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("mgi1/e;8~^8,u1|<n\u0007L@ZrFTRL", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("cx0\"22[");
      assertNotNull(string0);
      assertEquals("KKS", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("KKS", false);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("KS", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("(LUTnvt^'WY}", false);
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("LTNF", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("", 77);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("KS", "KS", false);
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(77);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("am~4qgb-iOSJ", "c:xC^B");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("c:xC^B", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("am~4qgb-iOSJ", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone(">Uigd?dsnw%", true);
      assertNotNull(string0);
      assertEquals("KTTS", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("KTTS");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("KTS", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(0);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string2 = doubleMetaphone1.doubleMetaphone("org.apache.commons.codec.language.DoubleMetaphone", true);
      assertNotNull(string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("ARKP", string2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('l');
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('\"', '8');
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      doubleMetaphone2.setMaxCodeLen(75);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals(75, doubleMetaphone2.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("KTTS", "RtPq0ueP,", true);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone2.setMaxCodeLen((-1));
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals((-1), doubleMetaphone2.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('\"', '\"');
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("org.apache.commons.codec.language.DoubleMetaphone");
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string3 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertNotNull(string3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertEquals("", string3);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean2 = doubleMetaphone1.isDoubleMetaphoneEqual("ARKP", "J", true);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("DspH{n$t()]b<yH", "DspH{n$t()]b<yH");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode(")O|:6L]>?Y!X");
      assertNotNull(string0);
      assertEquals("LKS", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("!", "l}T6q'");
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      try { 
        doubleMetaphone1.encode((Object) doubleMetaphone0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("mgi1/e;8~^8,u1", 2244);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2244);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("'.3tF20ot@6p");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('r', 'c');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("r", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone0.encode("mgi1/e;8~^8,u1");
      assertNotNull(string0);
      assertEquals("MJ", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append(" C", "HARIS");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("r C", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string1 = doubleMetaphone0.doubleMetaphone("SNS", false);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("SNS", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("/");
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("mgi1/e;8~^8,u1", "G", false);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append(">6x.$", ">6x.$");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("r C>6x.$", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("IER");
      assertNotNull(string0);
      assertEquals("A", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("org.apache.commons.codec.EncoderException");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("ARKP", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("VAN ", false);
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("FN", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(251);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(251);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult1.append('_');
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("_", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("_", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult1.isComplete();
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("_", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("_", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      char char0 = doubleMetaphone0.charAt("TH", (-555));
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("IER");
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("IER", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("IER", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("ARKP", "", true);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("", "Q");
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("IER", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("IERQ", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('\u0000');
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("IERQ\u0000", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("IER\u0000", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string3 = doubleMetaphone0.doubleMetaphone("WR", false);
      assertNotNull(string3);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertEquals("R", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("mgi1/e;8~^8,u1", 2244);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2244);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("mgi1/e;8~^8,u1");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("mgi1/e;8~^8,u1", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone1.encode("&[pR2Jf6 F]=pb~-Y");
      assertNotNull(string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals("PRJF", string0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string1 = doubleMetaphone1.doubleMetaphone("mgi1/e;8~^8,u1", false);
      assertNotNull(string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals("MJ", string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone1.new DoubleMetaphoneResult(2244);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('H');
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("H", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("mgi1/e;8~^8,u1H", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult1.isComplete();
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      char char1 = doubleMetaphone0.charAt("&[pR2Jf6 F]=pb~-Y", (-30756608));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(char1 == char0);
      assertEquals('\u0000', char1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult2 = doubleMetaphone1.new DoubleMetaphoneResult(4);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      
      String string2 = doubleMetaphone0.doubleMetaphone("JsR<p;Cn10-j6", false);
      assertNotNull(string2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("JSRP", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult3 = doubleMetaphone1.new DoubleMetaphoneResult(4);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult3);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult3.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult3.getPrimary());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult4 = doubleMetaphone0.new DoubleMetaphoneResult(70);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult4);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult4.equals((Object)doubleMetaphone_DoubleMetaphoneResult3));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult4.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult4.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult4.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult4.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult4.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult4.appendAlternate('s');
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult4, doubleMetaphone_DoubleMetaphoneResult3);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult4, doubleMetaphone_DoubleMetaphoneResult1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult4, doubleMetaphone_DoubleMetaphoneResult2);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult4, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult4.equals((Object)doubleMetaphone_DoubleMetaphoneResult3));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult4.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult4.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult4.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult4.getPrimary());
      assertEquals("s", doubleMetaphone_DoubleMetaphoneResult4.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult4.appendPrimary('s');
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult4, doubleMetaphone_DoubleMetaphoneResult3);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult4, doubleMetaphone_DoubleMetaphoneResult1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult4, doubleMetaphone_DoubleMetaphoneResult2);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult4, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult4.equals((Object)doubleMetaphone_DoubleMetaphoneResult3));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult4.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult4.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult4.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("s", doubleMetaphone_DoubleMetaphoneResult4.getAlternate());
      assertEquals("s", doubleMetaphone_DoubleMetaphoneResult4.getPrimary());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone2.isDoubleMetaphoneEqual("TION", "");
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string3 = doubleMetaphone2.doubleMetaphone("TION");
      assertNotNull(string3);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertEquals("XN", string3);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = 2244;
      char char0 = doubleMetaphone0.charAt("mgi1/e;8~^8,u1", 2244);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "(LU\\Tnvt^'WY}";
      String string1 = doubleMetaphone0.encode("mgi1/e;8~^8,u1");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("MJ", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("?YZ]y", false);
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("S", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-66863044));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('S');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string3 = "";
      char char1 = doubleMetaphone0.charAt("", 77);
      assertTrue(char1 == char0);
      assertEquals('\u0000', char1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("2E=dpaR]/6");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('o');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone0.doubleMetaphone("c:xC^B");
      assertNotNull(string0);
      assertEquals("KKSP", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("c:xC^B", "sc'>W", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("?");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('?');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('k');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate(',');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('?');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('i');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1512));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string1 = doubleMetaphone0.encode("l}T6q'");
      assertNotNull(string1);
      assertEquals("LTK", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.encode("WITZ");
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string1));
      assertEquals("ATS", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("Nwp.dKGEJOS", "Nwp.dKGEJOS", false);
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("Nwp.dKGEJOS", "Nwp.dKGEJOS", true);
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(584);
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("db|SwhKnyj}U");
      assertNotNull(string0);
      assertEquals("TPSKNJ", string0);
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("=/4S_XRVmX[ih5");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("SKSRFMKS", string1);
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.encode((String) null);
      assertNull(string2);
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("B1", true);
      assertNotNull(string3);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertEquals("P", string3);
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(584);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone0.setMaxCodeLen(584);
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("G8!E=s\"Kg!Yy({Y");
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("G8!E=s\"Kg!Yy({Y", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string4 = ">Lql,au8;IGkD@%";
      String string5 = doubleMetaphone0.doubleMetaphone(">Lql,au8;IGkD@%");
      assertNotNull(string5);
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string4));
      assertEquals("LKLKKT", string5);
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      
      String string6 = doubleMetaphone0.doubleMetaphone((String) null);
      assertNull(string6);
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      
      String string7 = "x$k;+}=BaMUDq 4l\\";
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "db|SwhKnyj}U", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("IER");
      assertNotNull(string0);
      assertEquals("A", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("(LUTnvt^'WY}");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("LTNF", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("(LUTnvt^'WY}", false);
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      assertEquals("LTNF", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(251);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('_');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("_", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("_", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("_", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("_", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      char char0 = doubleMetaphone0.charAt("", 77);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("am~4qgb-iOSJ");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("_am~4qgb-iOSJ", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("_am~4qgb-iOSJ", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "A";
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("IER", "A", false);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("Q", "$");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("_am~4qgb-iOSJ$", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("_am~4qgb-iOSJQ", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('_');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("_am~4qgb-iOSJQ_", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("_am~4qgb-iOSJ$_", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("SH", "SH");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("2E=dpaR]/6");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('o');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone0.doubleMetaphone("c:xC^B");
      assertNotNull(string0);
      assertEquals("KKSP", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("KKSP", "", false);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("$", "");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("\"WYgQpuSiP3Z=/eu", false);
      assertNotNull(string0);
      assertEquals("KKPS", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "ARCHIT");
      assertNotNull(object0);
      assertFalse(object0.equals((Object)string0));
      assertEquals("ARKT", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("Nwp.dKGEJOS", "Nwp.dKGEJOS", false);
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("Nwp.dKGEJOS", "Nwp.dKGEJOS", true);
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(584);
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("db|SwhKnyj}U");
      assertNotNull(string0);
      assertEquals("TPSKNJ", string0);
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("=/4S_XRVmX[ih5");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("SKSRFMKS", string1);
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.encode((String) null);
      assertNull(string2);
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("db|SwhKnyj}U");
      assertNotNull(string3);
      assertTrue(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertEquals("TPSKNJ", string3);
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      
      String string4 = doubleMetaphone0.doubleMetaphone("", true);
      assertNull(string4);
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(584);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone0.setMaxCodeLen(584);
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("G8!E=s\"Kg!Yy({Y");
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("G8!E=s\"Kg!Yy({Y", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult1.append("kjN#+W+TaUM{sH$", "N6r");
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      assertEquals("k", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("N", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string5 = doubleMetaphone1.doubleMetaphone("CIA", true);
      assertNotNull(string5);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string3));
      assertEquals("X", string5);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult2 = doubleMetaphone0.new DoubleMetaphoneResult(584);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult2);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult1.append('r');
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult2);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
      assertEquals("k", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("N", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult1.append((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("\"w", "\"w");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1690));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone0.encode("v6]@G~D3i`M'3b+]Z");
      assertNotNull(string0);
      assertEquals("FKTM", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("l}T6q'", (String) null);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("FKTM", true);
      assertNotNull(string1);
      assertTrue(string1.equals((Object)string0));
      assertEquals("FKTM", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('l');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('l', '5');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string2 = doubleMetaphone0.encode("RE5_;dgGTL4.R$qc");
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("RTKK", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(88);
      assertEquals(88, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = "qD<=OW";
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("tI", "\"w", true);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3 == boolean0);
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean3);
      assertEquals(88, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(1);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append(']', 'a');
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("tI");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("mgi1/e;8~^8,u1", 2244);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(199);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("mgi1/e;8~^8,u1");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("mgi1/e;8~^8,u1", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("mgi1/e;8~^8,u1");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("mgi1/e;8~^8,u1", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("mgi1/e;8~^8,u1mgi1/e;8~^8,u1", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone0.doubleMetaphone("]ahY-5RY([>YjfcgaD", false);
      assertNotNull(string0);
      assertEquals("HRJF", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('\u0000', 'I');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("mgi1/e;8~^8,u1mgi1/e;8~^8,u1\u0000", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("mgi1/e;8~^8,u1I", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      Object object0 = doubleMetaphone0.encode((Object) "");
      assertNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('I');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("mgi1/e;8~^8,u1mgi1/e;8~^8,u1\u0000", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("mgi1/e;8~^8,u1II", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('.');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("mgi1/e;8~^8,u1II", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("mgi1/e;8~^8,u1mgi1/e;8~^8,u1\u0000.", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("HRJF", "R7$jB[4sam");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("CAESAR");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("SSR", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "B";
      stringArray0[1] = "A";
      stringArray0[2] = "+1mMjJk*Ee?((a!9YQA";
      stringArray0[3] = "B";
      boolean boolean0 = DoubleMetaphone.contains("B", 84, 2247, stringArray0);
      assertFalse(boolean0);
      assertEquals(4, stringArray0.length);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(84);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('{');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("{", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("A", "SAN ", false);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('{');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("{{", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("{", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("mgi1/e;8~^8,u1", 2244);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2244);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("mgi1/e;8~^8,u1");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("mgi1/e;8~^8,u1", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("mgi1/e;8~^8,u1", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("'.3tF20ot@6p");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("mgi1/e;8~^8,u1", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone0.encode("L");
      assertNotNull(string0);
      assertEquals("L", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("HARIS");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("mgi1/e;8~^8,u1HARIS", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String[] stringArray0 = new String[0];
      boolean boolean1 = DoubleMetaphone.contains("'.3tF20ot@6p", 2244, 71, stringArray0);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(0, stringArray0.length);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(78);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult1.append("\"Kg", "Qu2GNCi%~0.77]BI7l");
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("Qu2GNCi%~0.77]BI7l", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("\"Kg", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      
      String string1 = doubleMetaphone0.doubleMetaphone("\"Kg", true);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("KK", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult1.append('r');
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("Qu2GNCi%~0.77]BI7lr", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("\"Kgr", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("#yc 5(8\"3Q^moXLnUU", "~");
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("mgi1/e;8~^8,u1HARIS#yc 5(8\"3Q^moXLnUU", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      char char1 = doubleMetaphone0.charAt("KK", 78);
      assertTrue(char1 == char0);
      assertEquals('\u0000', char1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("\"w", "\"w");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1690));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone0.encode("v6]@G~D3i`M'3b+]Z");
      assertNotNull(string0);
      assertEquals("FKTM", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("l}T6q'", (String) null);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "l}T6q'";
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate(']');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      stringArray0[1] = "l}T6q'";
      stringArray0[2] = "l}T6q'";
      stringArray0[3] = "l}T6q'";
      String string2 = doubleMetaphone0.encode("#JU;KvZKn");
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("JKFS", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('F');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult((-1690));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult1.appendPrimary('F');
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult1.appendAlternate('-');
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult1.appendAlternate('F');
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('s');
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("DspH{n$t()]b<yH");
      assertNotNull(string0);
      assertEquals("TSFN", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("", false);
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1716);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("TSFN");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TSFN", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string2 = doubleMetaphone0.doubleMetaphone("TSFN");
      assertNotNull(string2);
      assertTrue(string2.equals((Object)string0));
      assertEquals("TSFN", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('/', 'e');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("e", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("TSFN/", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string3 = doubleMetaphone0.encode("");
      assertNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append(";NNzP!i2vQ", "H0.BaZvy3e.");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TSFN/;NNzP!i2vQ", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("eH0.BaZvy3e.", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string4 = doubleMetaphone0.doubleMetaphone("SNS", false);
      assertNotNull(string4);
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertEquals("SNS", string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('q');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("eH0.BaZvy3e.q", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("TSFN/;NNzP!i2vQq", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("L}", "PNL}T6Q'");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("eH0.BaZvy3e.qPNL}T6Q'", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("TSFN/;NNzP!i2vQqL}", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      char char0 = doubleMetaphone0.charAt((String) null, (-97918529));
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("+1mMjJk*Ee?((a!9YQA", "A", true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode((String) null);
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "A";
      stringArray0[1] = "C";
      // Undeclared exception!
      try { 
        DoubleMetaphone.contains("C", 1, (-304), stringArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "onM$fkdo(=v";
      String string1 = doubleMetaphone0.encode("onM$fkdo(=v");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("ANMF", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("onM$fkdo(=v", "");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("ANMF");
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("", string2);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(0);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      char char0 = '&';
      String string3 = doubleMetaphone1.doubleMetaphone("onM$fkdo(=v", true);
      assertNotNull(string3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertTrue(string3.equals((Object)string1));
      assertEquals("ANMF", string3);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('l');
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('l', 'l');
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      char char1 = 'X';
      doubleMetaphone1.setMaxCodeLen(2230);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(2230, doubleMetaphone1.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone1.isDoubleMetaphoneEqual("", "qD<=OW", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", ";N<2aKcL7HR)", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = 84;
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(84);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      char char0 = 'E';
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('E');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("E", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("E", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string0 = "RANGER";
      String string1 = doubleMetaphone0.encode("RANGER");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("RNJR", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = "M";
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("M", "l}T6q'");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertNotNull(string3);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertEquals("E", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("E", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('E');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("E", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("E", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string4 = "";
      // Undeclared exception!
      try { 
        DoubleMetaphone.contains((String) null, 84, (-521), (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "\"w";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("\"w", "\"w");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = (-1690);
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string1 = doubleMetaphone1.doubleMetaphone("\"w", false);
      assertNotNull(string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals("", string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      int int1 = (-1713);
      doubleMetaphone1.setMaxCodeLen((-1713));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals((-1713), doubleMetaphone1.getMaxCodeLen());
      
      String string2 = "EN";
      String string3 = "";
      // Undeclared exception!
      try { 
        doubleMetaphone1.isDoubleMetaphoneEqual("EN", "");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "B";
      stringArray0[1] = "\"WYgQpuSiP3Z=/eu";
      stringArray0[2] = "B";
      stringArray0[3] = "\"WYgQpuSiP3Z=/eu";
      boolean boolean0 = DoubleMetaphone.contains("", 84, 51, stringArray0);
      assertFalse(boolean0);
      assertEquals(4, stringArray0.length);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-333));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('E');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("l^*}JCQ", "zS24 ZInn64[1ZSJc:q", false);
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('M');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("mgi1/e;8~^8,u1", 2244);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2244);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("mgi1/e;8~^8,u1");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("mgi1/e;8~^8,u1", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("mgi1/e;8~^8,u1", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("'.3tF20ot@6p");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("mgi1/e;8~^8,u1", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("HARIS");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("mgi1/e;8~^8,u1HARIS", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("HARIS", "mgi1/e;8~^8,u1", false);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('\u0000', '\u0000');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("mgi1/e;8~^8,u1HARIS\u0000", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone0.encode("ED");
      assertNotNull(string0);
      assertEquals("AT", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('-');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("mgi1/e;8~^8,u1HARIS\u0000-", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('r');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("mgi1/e;8~^8,u1HARIS\u0000-r", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('r');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("mgi1/e;8~^8,u1HARIS\u0000-r", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("HARIS", "'.3tF20ot@6p");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("mgi1/e;8~^8,u1HARIS\u0000-rHARIS", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.charAt((String) null, 2244);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("onM$fkdo(=v");
      assertNotNull(string0);
      assertEquals("ANMF", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("onM$fkdo(=v", "");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("");
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("jE[:Q}T6=Mel ", false);
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertEquals("JKTM", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('H');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      char char0 = doubleMetaphone0.charAt("M*IKMEUiw`|V3d", 4);
      assertEquals('M', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(3873);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult1.append("DG");
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("DG", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("DG", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "onM$fkdo(=v";
      stringArray0[1] = "YSL";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "`JVxK9G?v|(";
      stringArray0[5] = "M*IKMEUiw`|V3d";
      stringArray0[6] = "";
      boolean boolean2 = DoubleMetaphone.contains("onM$fkdo(=v", 0, 2377, stringArray0);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(7, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("+6oFnzr>N],.#|\"o:", "+6oFnzr>N],.#|\"o:");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("cx0\"22[");
      assertNotNull(string0);
      assertEquals("KKS", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("(LUTnvt^'WY}");
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("LTNF", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("(LUTnvt^'WY}", false);
      assertNotNull(string2);
      assertTrue(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("LTNF", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(251);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('_');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("_", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("_", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("_", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("_", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      char char0 = doubleMetaphone0.charAt("", 77);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("am~4qgb-iOSJ");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("_am~4qgb-iOSJ", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("_am~4qgb-iOSJ", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "KKS";
      String string3 = doubleMetaphone0.encode("ME");
      assertNotNull(string3);
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertEquals("M", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      stringArray0[1] = "cx0\"22[";
      stringArray0[2] = "cx0\"22[";
      stringArray0[3] = "(LUTnvt^'WY}";
      stringArray0[4] = "LTNF";
      stringArray0[5] = "YSL";
      stringArray0[6] = "KKS";
      stringArray0[7] = "";
      stringArray0[8] = "KKS";
      boolean boolean2 = DoubleMetaphone.contains("YSL", 628, 0, stringArray0);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(9, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("DspH{n$t()]b<yH");
      assertNotNull(string0);
      assertEquals("TSFN", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("", false);
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1716);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("TSFN");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("TSFN", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string2 = doubleMetaphone0.doubleMetaphone("TSFN");
      assertNotNull(string2);
      assertTrue(string2.equals((Object)string0));
      assertEquals("TSFN", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('/', 'e');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TSFN/", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("e", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string3 = doubleMetaphone0.encode("");
      assertNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string4 = doubleMetaphone0.doubleMetaphone("DspH{n$t()]b<yH");
      assertNotNull(string4);
      assertTrue(string4.equals((Object)string0));
      assertTrue(string4.equals((Object)string2));
      assertEquals("TSFN", string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "DspH{n$t()]b<yH");
      assertNotNull(object1);
      assertTrue(object1.equals((Object)string2));
      assertTrue(object1.equals((Object)string4));
      assertTrue(object1.equals((Object)string0));
      assertEquals("TSFN", object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "TSFN", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.isDoubleMetaphoneEqual("Nwp.dKGEJOS", "Nwp.dKGEJOS", false);
      doubleMetaphone0.isDoubleMetaphoneEqual("Nwp.dKGEJOS", "Nwp.dKGEJOS", true);
      doubleMetaphone0.setMaxCodeLen(584);
      doubleMetaphone0.doubleMetaphone("db|SwhKnyj}U");
      doubleMetaphone0.doubleMetaphone("=/4S_XRVmX[ih5");
      doubleMetaphone0.encode((String) null);
      doubleMetaphone0.doubleMetaphone("db|SwhKnyj}U");
      doubleMetaphone0.doubleMetaphone("", true);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(584);
      doubleMetaphone0.setMaxCodeLen(584);
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("G8!E=s\"Kg!Yy({Y");
      doubleMetaphone0.doubleMetaphone(">Lql,au8;IGkD@%");
      doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      doubleMetaphone_DoubleMetaphoneResult0.append('3', 'O');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("F<uE\",`K^ujyI");
      doubleMetaphone_DoubleMetaphoneResult0.append('9');
      doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      doubleMetaphone0.encode((Object) "db|SwhKnyj}U");
      assertEquals(584, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode((String) null);
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      doubleMetaphone1.encode("cx0\"22[");
      doubleMetaphone1.doubleMetaphone("cx0\"22[", false);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(251);
      doubleMetaphone_DoubleMetaphoneResult0.append('_');
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone1.charAt("org.apache.commons.codec.EncoderException", 77);
      doubleMetaphone_DoubleMetaphoneResult0.append("");
      assertEquals("_", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "KKS";
      stringArray0[2] = "KKS";
      stringArray0[3] = "6(5]lp;qxdOE_k*0'";
      stringArray0[4] = "cx0\"22[";
      stringArray0[5] = "KKS";
      boolean boolean0 = DoubleMetaphone.contains("(LUTnvt^'WY}", 0, 251, stringArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("A", "PSuQx=c0t3Q8D|3N", false);
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.encode("OS");
      assertEquals("AS", string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(295);
      String string1 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.charAt("mgi1/e;8~^8,u1", 2244);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(199);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("mgi1/e;8~^8,u1");
      doubleMetaphone_DoubleMetaphoneResult0.append("mgi1/e;8~^8,u1");
      doubleMetaphone0.doubleMetaphone("]ahY-5RY([>YjfcgaD", false);
      doubleMetaphone_DoubleMetaphoneResult0.append('\u0000', 'I');
      doubleMetaphone0.charAt("", 199);
      doubleMetaphone0.encode((Object) "");
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('I');
      assertEquals("mgi1/e;8~^8,u1II", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "mgi1/e;8~^8,u1";
      stringArray0[1] = "R7$jB[4sam";
      stringArray0[2] = "HRJF";
      stringArray0[3] = "]ahY-5RY([>YjfcgaD";
      stringArray0[4] = "]ahY-5RY([>YjfcgaD";
      stringArray0[5] = "]ahY-5RY([>YjfcgaD";
      boolean boolean0 = DoubleMetaphone.contains("IL", (-53786696), 2921, stringArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "UY";
      doubleMetaphone0.encode((Object) "UY");
      String string1 = "EWSKY";
      doubleMetaphone0.encode((Object) "EWSKY");
      String string2 = ".VT/BgH)35";
      doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "UY");
      Object object0 = new Object();
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.isDoubleMetaphoneEqual("Nwp.dKGEJOS", "Nwp.dKGEJOS", false);
      int int0 = (-2235);
      doubleMetaphone0.isDoubleMetaphoneEqual("Nwp.dKGEJOS", "Nwp.dKGEJOS", true);
      doubleMetaphone0.setMaxCodeLen((-2235));
      String string0 = "db|SwhKnyj}U";
      // Undeclared exception!
      try { 
        doubleMetaphone0.doubleMetaphone("db|SwhKnyj}U");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.getMaxCodeLen();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(4);
      doubleMetaphone_DoubleMetaphoneResult0.append("rfU3!45", "D^Esaa|N,H8t{");
      doubleMetaphone0.doubleMetaphone("rfU3!45");
      doubleMetaphone0.encode("CAESAR");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "rfU3!45";
      doubleMetaphone0.doubleMetaphone("EG", true);
      stringArray0[1] = "RF";
      stringArray0[2] = "D^Esaa|N,H8t{";
      stringArray0[3] = "D^Esaa|N,H8t{";
      stringArray0[4] = "CAESAR";
      stringArray0[5] = "SSR";
      doubleMetaphone0.encode((Object) "D^Esaa|N,H8t{");
      DoubleMetaphone.contains("", 0, 0, stringArray0);
      String string0 = "";
      doubleMetaphone0.encode((Object) "");
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "onM$fkdo(=v";
      doubleMetaphone0.encode("onM$fkdo(=v");
      doubleMetaphone0.isDoubleMetaphoneEqual("onM$fkdo(=v", "");
      int int0 = 0;
      doubleMetaphone0.setMaxCodeLen(0);
      doubleMetaphone0.doubleMetaphone("ANMF");
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(0);
      doubleMetaphone1.doubleMetaphone("onM$fkdo(=v", true);
      doubleMetaphone_DoubleMetaphoneResult0.append('l');
      doubleMetaphone_DoubleMetaphoneResult0.append('l', 'l');
      doubleMetaphone1.setMaxCodeLen(2230);
      doubleMetaphone1.setMaxCodeLen((-1));
      doubleMetaphone_DoubleMetaphoneResult0.append('&', 'X');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("ANMF");
      doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      String string1 = null;
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "onM$fkdo(=v", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.isDoubleMetaphoneEqual("b}t2%", "b}t2%", false);
      doubleMetaphone0.setMaxCodeLen(0);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.isDoubleMetaphoneEqual("\"w", "\"w");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1690));
      char char0 = ']';
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary(']');
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone0.encode("v6]@G~D3i`M'3b+]Z");
      doubleMetaphone0.isDoubleMetaphoneEqual("l}T6q'", (String) null);
      doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "l}T6q'";
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate(']');
      stringArray0[1] = "l}T6q'";
      stringArray0[2] = "l}T6q'";
      stringArray0[3] = "l}T6q'";
      stringArray0[4] = "l}T6q'";
      stringArray0[5] = null;
      stringArray0[6] = "";
      stringArray0[7] = "l}T6q'";
      DoubleMetaphone.contains("l}T6q'", (-1690), (-1690), stringArray0);
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append("", "l}T6q'");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode("cx0\"22[");
      doubleMetaphone0.encode("(LUTnvt^'WY}");
      doubleMetaphone0.doubleMetaphone("(LUTnvt^'WY}", false);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(251);
      doubleMetaphone_DoubleMetaphoneResult0.append('_');
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone0.charAt("", 77);
      doubleMetaphone_DoubleMetaphoneResult0.append("am~4qgb-iOSJ");
      assertEquals("_am~4qgb-iOSJ", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "KKS";
      stringArray0[1] = "cx0\"22[";
      stringArray0[2] = "cx0\"22[";
      stringArray0[3] = "(LUTnvt^'WY}";
      stringArray0[4] = "LTNF";
      stringArray0[5] = "YSL";
      stringArray0[6] = "KKS";
      stringArray0[7] = "";
      stringArray0[8] = "KKS";
      boolean boolean0 = DoubleMetaphone.contains("YSL", 628, 0, stringArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone(">Uigd?dsnw%", true);
      doubleMetaphone0.setMaxCodeLen((-1713));
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("uVR", "");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode((Object) "");
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1032));
      doubleMetaphone_DoubleMetaphoneResult0.append('/');
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      int int0 = (-2493);
      String string0 = "I";
      doubleMetaphone0.isDoubleMetaphoneEqual("I", "I", true);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-2493));
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('m');
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append("gjb");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "";
      doubleMetaphone0.doubleMetaphone("");
      doubleMetaphone0.getMaxCodeLen();
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", (String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("\"WYgQpuSiP3Z=/eu", "I{MO5L)^ C\"B");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.charAt("mgi1/e;8~^8,u1", 2244);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2244);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("mgi1/e;8~^8,u1");
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("'.3tF20ot@6p");
      doubleMetaphone_DoubleMetaphoneResult0.append("HARIS");
      doubleMetaphone0.isDoubleMetaphoneEqual("HARIS", "mgi1/e;8~^8,u1", false);
      doubleMetaphone0.encode("ED");
      doubleMetaphone_DoubleMetaphoneResult0.append('-');
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('r');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('r');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('r');
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('s');
      assertEquals("mgi1/e;8~^8,u1HARIS-rs", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("2E=dpaR]/6");
      doubleMetaphone_DoubleMetaphoneResult0.append('o');
      String string0 = doubleMetaphone0.doubleMetaphone("c:xC^B");
      assertEquals("KKSP", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("KKSP", "", false);
      assertFalse(boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("$", "");
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode("e HMqh@Za");
      boolean boolean0 = false;
      doubleMetaphone0.doubleMetaphone("", false);
      int int0 = 2931;
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2931);
      doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "org.apache.commons.codec.EncoderException";
      stringArray0[1] = "org.apache.commons.codec.EncoderException";
      stringArray0[2] = "org.apache.commons.codec.EncoderException";
      stringArray0[3] = "org.apache.commons.codec.EncoderException";
      stringArray0[4] = "org.apache.commons.codec.EncoderException";
      stringArray0[5] = "";
      stringArray0[6] = "org.apache.commons.codec.EncoderException";
      stringArray0[7] = "org.apache.commons.codec.EncoderException";
      DoubleMetaphone.contains("org.apache.commons.codec.EncoderException", 0, 0, stringArray0);
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "EI");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      int int0 = (-26);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "E]kauw`J";
      stringArray0[1] = "E]kauw`J";
      stringArray0[2] = "E]kauw`J";
      DoubleMetaphone.contains("E]kauw`J", (-26), (-26), stringArray0);
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.charAt("F}\"ZdK$D`p;#", (-26));
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-26));
      doubleMetaphone0.encode((Object) "E]kauw`J");
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('p');
      String string0 = "";
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone("DspH{n$t()]b<yH");
      doubleMetaphone0.doubleMetaphone("", false);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1716);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("TSFN");
      doubleMetaphone0.doubleMetaphone("TSFN");
      doubleMetaphone_DoubleMetaphoneResult0.append('/', 'e');
      assertEquals("e", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone0.encode("");
      doubleMetaphone0.doubleMetaphone("", false);
      Object object0 = doubleMetaphone0.encode((Object) "wKKGPFNQ/zL1x$`DoHL");
      assertEquals("KKPF", object0);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(71);
      doubleMetaphone_DoubleMetaphoneResult0.append('E');
      doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('Q');
      doubleMetaphone_DoubleMetaphoneResult0.append("org.apache.commons.codec.EncoderException", "ARKP");
      doubleMetaphone_DoubleMetaphoneResult0.append("");
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone0.encode("SUGAR");
      doubleMetaphone0.encode(">");
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('Q');
      doubleMetaphone_DoubleMetaphoneResult0.append("ARKP");
      doubleMetaphone0.doubleMetaphone("']W>uJg", false);
      doubleMetaphone_DoubleMetaphoneResult0.append('v', 'G');
      doubleMetaphone_DoubleMetaphoneResult0.append(';');
      doubleMetaphone0.getMaxCodeLen();
      doubleMetaphone0.setMaxCodeLen(0);
      doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      doubleMetaphone0.setMaxCodeLen(0);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('k');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('!');
      String string0 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("+1mMjJk*Ee?((a!9YQA", "A", true);
      assertFalse(boolean0);
      
      doubleMetaphone0.encode((String) null);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(295);
      doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      int int0 = 67;
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(67);
      String string0 = "cZg]y";
      doubleMetaphone0.isDoubleMetaphoneEqual("cZg]y", "cZg]y");
      String string1 = "R7$jB[4sam";
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("R7$jB[4sam");
      String string2 = "";
      doubleMetaphone_DoubleMetaphoneResult0.append("");
      doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      doubleMetaphone_DoubleMetaphoneResult0.append('-', 'I');
      doubleMetaphone0.charAt("ARKP", 67);
      try { 
        doubleMetaphone0.encode((Object) doubleMetaphone_DoubleMetaphoneResult0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1267));
      doubleMetaphone_DoubleMetaphoneResult0.append('p', 'm');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('F');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('/');
      char char0 = '(';
      String string0 = "SCH";
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append("SCH", "SCH");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone0.encode("ZA");
      String string0 = doubleMetaphone0.encode("ZA");
      assertNotNull(string0);
      assertEquals("S", string0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('k');
      char char0 = doubleMetaphone0.charAt("G;", 0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('G', char0);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      int int0 = (-1);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1));
      doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      String string0 = "";
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      char char0 = 'e';
      doubleMetaphone_DoubleMetaphoneResult0.append('/', 'e');
      doubleMetaphone_DoubleMetaphoneResult0.append("");
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "EN");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.setMaxCodeLen((-1847));
      assertEquals((-1847), doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      try { 
        doubleMetaphone1.encode((Object) doubleMetaphone0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }
}
