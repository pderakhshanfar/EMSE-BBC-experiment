/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 13 19:30:27 GMT 2021
 */

package org.apache.commons.codec.language;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.codec.language.DoubleMetaphone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DoubleMetaphone_ESTest extends DoubleMetaphone_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("PN_C&IWF&", (String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("PN_C&IWF&", "y3", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      String string0 = doubleMetaphone0.doubleMetaphone("`-U$PAOFigY{_^X[]Ok", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PFKK", string0);
      assertNotNull(string0);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("PN_C&IWF&", "8S#Y", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      
      char char0 = doubleMetaphone0.charAt("Jm6@b&Wp@s~Z&.X8)", 89);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      char char1 = doubleMetaphone0.charAt("y3", (-1555));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(char1 == char0);
      assertEquals('\u0000', char1);
      
      try { 
        doubleMetaphone0.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("+'`Vigh/|2^b48m\"4");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FPM", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("PUkR/4+{");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertEquals("PKR", string1);
      assertNotNull(string1);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("| _ZziK|");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SK", string0);
      assertNotNull(string0);
      
      Object object0 = doubleMetaphone0.encode((Object) "| _ZziK|");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(object0.equals((Object)string0));
      assertEquals("SK", object0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Object object0 = new Object();
      assertNotNull(object0);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("GNGNCHAE", "nYh/)sZ-j.J");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("b1{0Yi(0&(,7o", "PS", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String string0 = doubleMetaphone0.encode("NCO");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals("NK", string0);
      assertNotNull(string0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("OGnY");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AKN", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Object object0 = new Object();
      assertNotNull(object0);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("GNCHAE", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NK", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("MACHR");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("MKR", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("HE", "");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      String string0 = doubleMetaphone1.encode("");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNull(string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string1 = doubleMetaphone1.encode("AIS");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals("A", string1);
      assertNotNull(string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      String string0 = doubleMetaphone1.doubleMetaphone("WRbc c\"[>[");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals("RPK", string0);
      assertNotNull(string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      String string0 = doubleMetaphone0.doubleMetaphone("Gei<!9`+Q");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals("KK", string0);
      assertNotNull(string0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("UMbB");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AMP", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("t=SEbU'wL:", "@9#q\u0003yZg,$)+ygH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("1@c 5=ll*o![|sOO");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KLS", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKP", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.encode("agHG~ZQn )w,P[");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertEquals("AKKS", string1);
      assertNotNull(string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("agHG~ZQn )w,P[");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      assertEquals("AKKS", string2);
      assertNotNull(string2);
      
      String string3 = doubleMetaphone0.doubleMetaphone("PSAGHG~ZQN )W,P[", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertEquals("SKKS", string3);
      assertNotNull(string3);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("agHG~ZQn )w,P[");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AKKS", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("ChLL");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KL", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("mCC+}");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("MK", string0);
      assertNotNull(string0);
      
      Object object0 = doubleMetaphone0.encode((Object) "MK");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(object0.equals((Object)string0));
      assertEquals("MK", object0);
      assertNotNull(object0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("OGY", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)object0));
      assertFalse(string1.equals((Object)string0));
      assertEquals("AK", string1);
      assertNotNull(string1);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("AcCH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AKS", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("MCCE}");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("MKS", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) "IJA");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AJ", object0);
      assertNotNull(object0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("NHJOSE", "GY xX~GBZnE");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.encode("NHJOSE");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NJS", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) "M_AEMT");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("MMT", object0);
      assertNotNull(object0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("M_AEMT", "M_AEMT");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string0 = doubleMetaphone0.encode("PSHOLZ");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string0.equals((Object)object0));
      assertEquals("SLS", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("PNWRKAGHG=~ZQN W,P<[", "TTH", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      doubleMetaphone0.setMaxCodeLen(1642);
      assertEquals(1642, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("zwHB?SxTr");
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("IrLL");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARL", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("pZ-%bB02OC", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PSPK", string0);
      assertNotNull(string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("pZ-%bB02OC", "pZ-%bB02OC");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string1 = doubleMetaphone0.encode("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string1);
      
      String[] stringArray0 = new String[0];
      boolean boolean1 = DoubleMetaphone.contains("org.apache.commons.codec.EncoderException", (-774), (-1), stringArray0);
      assertEquals(0, stringArray0.length);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      boolean boolean2 = DoubleMetaphone.contains("&btlk[v)", 333, (-1), stringArray0);
      assertEquals(0, stringArray0.length);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("YJoH", "YL");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("W");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", string0);
      assertNotNull(string0);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = null;
      stringArray0[2] = null;
      boolean boolean1 = DoubleMetaphone.contains((String) null, (-24695703), (-1978), stringArray0);
      assertEquals(3, stringArray0.length);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("=F", "KJ&~", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("KJ&~", "KJ&~", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      String string0 = doubleMetaphone0.encode("WRKAGHG=~ZQN W,P<[");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("RKKK", string0);
      assertNotNull(string0);
      
      String[] stringArray0 = new String[0];
      boolean boolean2 = DoubleMetaphone.contains("KJ&~", 1635, 1635, stringArray0);
      assertEquals(0, stringArray0.length);
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("<JKZrcx &2~%1");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KSRK", string0);
      assertNotNull(string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      String string1 = doubleMetaphone1.encode("kagHG=~ZQn w,P<[");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals("KKKS", string1);
      assertNotNull(string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) "kagHG=~ZQn w,P<[");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(object0.equals((Object)string0));
      assertTrue(object0.equals((Object)string1));
      assertEquals("KKKS", object0);
      assertNotNull(object0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) "3D->5x6=/");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TKS", object0);
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "1@c 5=ll*o![|sOWO");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(object1.equals((Object)object0));
      assertEquals("KLS", object1);
      assertNotNull(object1);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("SUGAR");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("XKR", string0);
      assertNotNull(string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("hA", "ISL");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string1 = doubleMetaphone1.doubleMetaphone("ISL", true);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals("AL", string1);
      assertNotNull(string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("AGcHTUSO8HW");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AKKT", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.encode("S");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertEquals("S", string1);
      assertNotNull(string1);
      
      char char0 = doubleMetaphone0.charAt("[t", 72);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      char char1 = doubleMetaphone0.charAt("AKKT", 5748);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(char1 == char0);
      assertEquals('\u0000', char1);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("ScIFM#Y|)8i9");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SFM", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.encode("PSIER");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertEquals("S", string1);
      assertNotNull(string1);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-3197));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("CCES");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("XS", string0);
      assertNotNull(string0);
      
      char char0 = doubleMetaphone0.charAt((String) null, (-3197));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("PSUCCES");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SKSS", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("NGN");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NN", string0);
      assertNotNull(string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("NN", "L");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string1 = doubleMetaphone1.encode("A");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals("A", string1);
      assertNotNull(string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("LLE");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("L", string0);
      assertNotNull(string0);
      
      Object object0 = doubleMetaphone0.encode((Object) "L");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(object0.equals((Object)string0));
      assertEquals("L", object0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen((-116));
      assertEquals((-116), doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals((-116), doubleMetaphone0.getMaxCodeLen());
      assertEquals((-116), int0);
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertEquals((-116), doubleMetaphone0.getMaxCodeLen());
      assertTrue(int1 == int0);
      assertEquals((-116), int1);
      
      String string0 = doubleMetaphone0.doubleMetaphone((String) null, true);
      assertEquals((-116), doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Object object0 = new Object();
      assertNotNull(object0);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('l');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("l", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("l", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("{ILLO");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("L", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = doubleMetaphone0.encode((Object) "PNJOSE");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NJS", object0);
      assertNotNull(object0);
      
      String string0 = doubleMetaphone0.encode("PSIER");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string0.equals((Object)object0));
      assertEquals("S", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      String string0 = ";I#B!";
      boolean boolean0 = DoubleMetaphone.contains(";I#B!", (-1), (-3129), (String[]) null);
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "WRSIA");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("D5HI^Du .y?i;Nk", "MACHER");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("D5HI^Du .y?i;Nk", "MACHER");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      boolean boolean2 = doubleMetaphone1.isDoubleMetaphoneEqual("2-.gH9sevQ,ZgXX9D&x", "MACHER", false);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string0 = doubleMetaphone1.doubleMetaphone("MACHER", false);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals("MKR", string0);
      assertNotNull(string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Object object0 = new Object();
      assertNotNull(object0);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("TH", "T@ ,4.={+'10t[O");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("TH", "TH", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      String string0 = doubleMetaphone0.doubleMetaphone("KNSCH", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NX", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "S";
      stringArray0[1] = "S";
      stringArray0[2] = "S";
      stringArray0[3] = "S";
      stringArray0[4] = "WRMF%((A";
      stringArray0[5] = "S";
      boolean boolean0 = DoubleMetaphone.contains("S", 1, 85, stringArray0);
      assertEquals(6, stringArray0.length);
      assertFalse(boolean0);
      
      boolean boolean1 = DoubleMetaphone.contains("org.apache.commons.codec.EncoderException", 85, 0, stringArray0);
      assertEquals(6, stringArray0.length);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("WRMF%((A", "org.apache.commons.codec.EncoderException", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      
      String string0 = doubleMetaphone0.encode("org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKP", string0);
      assertNotNull(string0);
      
      char char0 = doubleMetaphone0.charAt("5;.LL$%NrJ Q9E?", 0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('5', char0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("JOSE");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertEquals("HS", string1);
      assertNotNull(string1);
      
      boolean boolean3 = DoubleMetaphone.contains("PS", 0, 1, stringArray0);
      assertEquals(6, stringArray0.length);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      String string2 = doubleMetaphone0.doubleMetaphone("S", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("S", string2);
      assertNotNull(string2);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean4 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean4 == boolean2);
      assertFalse(boolean4 == boolean1);
      assertFalse(boolean4 == boolean3);
      assertFalse(boolean4 == boolean0);
      assertTrue(boolean4);
      
      boolean boolean5 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean5 == boolean3);
      assertFalse(boolean5 == boolean2);
      assertTrue(boolean5 == boolean4);
      assertFalse(boolean5 == boolean1);
      assertFalse(boolean5 == boolean0);
      assertTrue(boolean5);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Object object0 = new Object();
      assertNotNull(object0);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      String string0 = doubleMetaphone1.doubleMetaphone("WICZ");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals("AKS", string0);
      assertNotNull(string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("CAESAR", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SSR", string0);
      assertNotNull(string0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("pr>'U_0VA\t-B");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertEquals("PRFP", string1);
      assertNotNull(string1);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("GH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("K", string0);
      assertNotNull(string0);
      
      Object object1 = doubleMetaphone0.encode((Object) "GH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(object1.equals((Object)string0));
      assertEquals("K", object1);
      assertNotNull(object1);
      
      Object object2 = new Object();
      assertFalse(object2.equals((Object)object0));
      assertNotNull(object2);
      
      String string1 = doubleMetaphone0.doubleMetaphone("ILLA");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)object1));
      assertEquals("AL", string1);
      assertNotNull(string1);
      
      Object object3 = doubleMetaphone0.encode((Object) "AL");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(object3.equals((Object)string0));
      assertFalse(object3.equals((Object)object1));
      assertTrue(object3.equals((Object)string1));
      assertEquals("AL", object3);
      assertNotNull(object3);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(40);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string0 = doubleMetaphone0.doubleMetaphone((String) null, true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("Gh|9-az3P^xT/sr{pm", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KSPK", string1);
      assertNotNull(string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("CHOR", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string1));
      assertEquals("KR", string2);
      assertNotNull(string2);
      
      Object object0 = doubleMetaphone0.encode((Object) "CHOR");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(object0.equals((Object)string2));
      assertFalse(object0.equals((Object)string1));
      assertEquals("KR", object0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      
      String string0 = doubleMetaphone2.doubleMetaphone("WRWITZ");
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals("RTS", string0);
      assertNotNull(string0);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(2863);
      assertEquals(2863, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      
      String string0 = doubleMetaphone2.doubleMetaphone("RGY");
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals("RJ", string0);
      assertNotNull(string0);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      String string0 = doubleMetaphone1.encode((String) null);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNull(string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("CH", "CH");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string1 = doubleMetaphone1.doubleMetaphone("UCCES", true);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals("AKSS", string1);
      assertNotNull(string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string2 = doubleMetaphone0.doubleMetaphone("Z.", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string1));
      assertEquals("S", string2);
      assertNotNull(string2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Object object0 = new Object();
      assertNotNull(object0);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("PSZ+QX*D~;PG7 K![(E");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SKKS", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("@", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertEquals("", string1);
      assertNotNull(string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone((String) null, true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string2);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(2867);
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("CC", "CC", false);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("CC", (String) null, false);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean2 = doubleMetaphone1.isDoubleMetaphoneEqual("CC", "7-}]");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean3 = doubleMetaphone1.isDoubleMetaphoneEqual("z+qX*d~;pG7 K![(E", "z+qX*d~;pG7 K![(E", false);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3 == boolean2);
      assertTrue(boolean3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone3);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("SC");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SK", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("SC");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string1.equals((Object)string0));
      assertEquals("SK", string1);
      assertNotNull(string1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2867);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('o');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("o", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string2 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("o", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("o", string2);
      assertNotNull(string2);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("OI", "GNGNGN");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("PSIER", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S", string0);
      assertNotNull(string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("`2DGnQ:b,8vcG<e", "PSIER", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("PNCHORE", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertEquals("NXR", string1);
      assertNotNull(string1);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2867);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('a', 'P');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("a", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("P", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      String string0 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("a", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("P", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("a", string0);
      assertNotNull(string0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('y', 'a');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("Pa", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("ay", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("IER");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PaIER", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("ay", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string1 = doubleMetaphone0.doubleMetaphone("UF");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertEquals("AF", string1);
      assertNotNull(string1);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("", "org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ay", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("PaIERorg.apache.commons.codec.EncoderException", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      String string2 = doubleMetaphone1.doubleMetaphone("yGLSc\tH&K[kd%");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("AKLS", string2);
      assertNotNull(string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      
      Object object0 = new Object();
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      doubleMetaphone1.setMaxCodeLen((-2019));
      assertEquals((-2019), doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Object object1 = new Object();
      assertFalse(object1.equals((Object)object0));
      assertNotNull(object1);
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "SIO";
      stringArray0[1] = "SIO";
      stringArray0[2] = "7IDT[8;+>9VxB&ZpR";
      stringArray0[3] = "0_<<\"Q#($(DB 1D|A";
      stringArray0[4] = "SIO";
      stringArray0[5] = "7IDT[8;+>9VxB&ZpR";
      stringArray0[6] = "7IDT[8;+>9VxB&ZpR";
      stringArray0[7] = "SIO";
      stringArray0[8] = "SIO";
      boolean boolean0 = DoubleMetaphone.contains("7IDT[8;+>9VxB&ZpR", (-2019), (-1867), stringArray0);
      assertEquals(9, stringArray0.length);
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "L}+lLvi,", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = "PN*)L`A 6(BA%BM1S})+4Q";
      String string1 = doubleMetaphone0.doubleMetaphone("PN*)L`A 6(BA%BM1S})+4Q");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertEquals("NLPP", string1);
      assertNotNull(string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("1yk,+]Dgy1C@I");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("KJK", string2);
      assertNotNull(string2);
      
      int int0 = (-1318);
      doubleMetaphone0.setMaxCodeLen((-1318));
      assertEquals((-1318), doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Object object1 = new Object();
      assertFalse(object1.equals((Object)object0));
      assertNotNull(object1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = null;
      try {
        doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1318));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("PS1CZQ");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SSK", string0);
      assertNotNull(string0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("PS1CZQ", "oK%%V#|", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string1 = doubleMetaphone0.encode("6dGAbE}3L ");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertEquals("TKPL", string1);
      assertNotNull(string1);
      
      Object object1 = doubleMetaphone0.encode((Object) "TKPL");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(object1.equals((Object)string1));
      assertFalse(object1.equals((Object)string0));
      assertEquals("TKPL", object1);
      assertNotNull(object1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-3424));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(3);
      assertEquals(3, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Object object1 = new Object();
      assertFalse(object1.equals((Object)object0));
      assertNotNull(object1);
      
      doubleMetaphone0.setMaxCodeLen(66);
      assertEquals(66, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = false;
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("$-qh/:1UM", "G/=pZ,YZZ", false);
      assertEquals(66, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      String string0 = "!@Vh[/JHQT@d&G0V0<";
      Object object2 = new Object();
      assertFalse(object2.equals((Object)object0));
      assertFalse(object2.equals((Object)object1));
      assertNotNull(object2);
      
      try { 
        doubleMetaphone0.encode(object2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(80);
      assertEquals(80, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2867);
      assertEquals(80, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      doubleMetaphone0.setMaxCodeLen((-48517273));
      assertEquals((-48517273), doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Object object1 = new Object();
      assertFalse(object1.equals((Object)object0));
      assertNotNull(object1);
      
      String string0 = doubleMetaphone1.encode("SIA");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals("S", string0);
      assertNotNull(string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.encode((Object) "S");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(80);
      assertEquals(80, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2867);
      assertEquals(80, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("HYM", "PSTION");
      assertEquals(80, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PSTION", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("HYM", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('8', ']');
      assertEquals(80, doubleMetaphone0.getMaxCodeLen());
      assertEquals("HYM8", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("PSTION]", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('F', '8');
      assertEquals(80, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PSTION]8", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("HYM8F", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("EWSKY", "SIA");
      assertEquals(80, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("PSTION");
      assertEquals(80, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PSTION]8PSTION", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("HYM8F", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone0.setMaxCodeLen(80);
      assertEquals(80, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "$-qh/:1UM";
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      String string1 = doubleMetaphone1.encode("SIA");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals("S", string1);
      assertNotNull(string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean1 = true;
      boolean boolean2 = doubleMetaphone1.isDoubleMetaphoneEqual("UMB", "`3VcvtqfGUB", true);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(40);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("XW#&gzj8$", "XW#&gzj8$");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("XW#&gzj8$", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("XW#&gzj8$", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string0 = doubleMetaphone0.doubleMetaphone("dH", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("T", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("d'kKWcm^?$C", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertEquals("TKKM", string1);
      assertNotNull(string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("SIA");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("S", string2);
      assertNotNull(string2);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("X09m3p>qeZsu9'ja<");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SMPK", string0);
      assertNotNull(string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      String string1 = doubleMetaphone1.doubleMetaphone("sZfyH2iL/6`*pK<wIA", false);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals("SFLP", string1);
      assertNotNull(string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string2 = doubleMetaphone1.doubleMetaphone("ORCHES");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("ARKS", string2);
      assertNotNull(string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("SFLP", "l45X)");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      String string3 = doubleMetaphone0.doubleMetaphone("ORCHES");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertTrue(string3.equals((Object)string2));
      assertEquals("ARKS", string3);
      assertNotNull(string3);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, int0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Object object1 = new Object();
      assertFalse(object1.equals((Object)object0));
      assertNotNull(object1);
      
      String string0 = doubleMetaphone0.doubleMetaphone("TH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("0", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("OWSKY");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertEquals("ASK", string1);
      assertNotNull(string1);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(2867);
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("HrP9uIQQvgQkJ?]|dWI", "", true);
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2867);
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("HrP9uIQQvgQkJ?]|dWI", true);
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertEquals("RPKFKKKT", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("HrP9uIQQvgQkJ?]|dWI", true);
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string1.equals((Object)string0));
      assertEquals("RPKFKKKT", string1);
      assertNotNull(string1);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertEquals(2867, int0);
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertTrue(int1 == int0);
      assertEquals(2867, int1);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("2+'AKGd4&-/`q6b'W", "2+'AKGd4&-/`q6b'W");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      doubleMetaphone0.setMaxCodeLen(1523);
      assertEquals(1523, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("Oe\"MgYM", "TCH", true);
      assertEquals(1523, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      String string0 = doubleMetaphone1.doubleMetaphone("MA");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals("M", string0);
      assertNotNull(string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string1 = doubleMetaphone1.doubleMetaphone("Oe\"MgYM");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals("AMKM", string1);
      assertNotNull(string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      
      char char0 = doubleMetaphone2.charAt("Oe\"MgYM", 2699);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals('\u0000', char0);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKP", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("ARKP");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string1.equals((Object)string0));
      assertEquals("ARKP", string1);
      assertNotNull(string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string2);
      
      String string3 = doubleMetaphone0.doubleMetaphone("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string3);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "org.apache.commons.codec.EncoderException", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "ARKP");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(object1.equals((Object)string0));
      assertTrue(object1.equals((Object)string1));
      assertEquals("ARKP", object1);
      assertNotNull(object1);
      
      Object object2 = doubleMetaphone0.encode((Object) "bLK1jVI'MPD_s7ARo");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(object2.equals((Object)object1));
      assertFalse(object2.equals((Object)string0));
      assertFalse(object2.equals((Object)string1));
      assertEquals("PLKJ", object2);
      assertNotNull(object2);
      
      Object object3 = doubleMetaphone0.encode((Object) "PLKJ");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(object3.equals((Object)object2));
      assertFalse(object3.equals((Object)string1));
      assertFalse(object3.equals((Object)object1));
      assertFalse(object3.equals((Object)string0));
      assertEquals("PLKJ", object3);
      assertNotNull(object3);
      
      Object object4 = doubleMetaphone0.encode((Object) "org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(object4.equals((Object)object3));
      assertTrue(object4.equals((Object)object1));
      assertTrue(object4.equals((Object)string0));
      assertFalse(object4.equals((Object)object2));
      assertTrue(object4.equals((Object)string1));
      assertEquals("ARKP", object4);
      assertNotNull(object4);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("]4&[V", "GNGNK", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult((-533));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string4 = doubleMetaphone0.doubleMetaphone("X09m3p>qeZsu9'ja<", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string4.equals((Object)object2));
      assertFalse(string4.equals((Object)object3));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)object1));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)object4));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals("SMPK", string4);
      assertNotNull(string4);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("SC");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SK", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("yUfvZtn");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertEquals("AFFS", string1);
      assertNotNull(string1);
      
      doubleMetaphone0.setMaxCodeLen(115);
      assertEquals(115, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Object object1 = new Object();
      assertFalse(object1.equals((Object)object0));
      assertNotNull(object1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("X09m3p>qeZsu9'ja<", true);
      assertEquals(115, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("SMPKSSJ", string2);
      assertNotNull(string2);
      
      String string3 = doubleMetaphone0.doubleMetaphone("AFFS", true);
      assertEquals(115, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertEquals("AFS", string3);
      assertNotNull(string3);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(115, doubleMetaphone0.getMaxCodeLen());
      assertEquals(115, int0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("GNGN", "KL");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("GNGN", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NN", string0);
      assertNotNull(string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(1438);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("WR");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("WR", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("IER");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertEquals("A", string1);
      assertNotNull(string1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone1.new DoubleMetaphoneResult(11);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone_DoubleMetaphoneResult1.append("`)zh", "6]E(3`0*Tap");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("`)zh", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("6]E(3`0*Tap", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, int0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      
      String string2 = doubleMetaphone1.encode("A");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      assertEquals("A", string2);
      assertNotNull(string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult2 = doubleMetaphone0.new DoubleMetaphoneResult(4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult2);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("GNGN");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("GNGN", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("WR", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult2);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult3 = doubleMetaphone1.new DoubleMetaphoneResult(1438);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult3.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult3.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult3);
      
      doubleMetaphone_DoubleMetaphoneResult3.appendAlternate("`)zh");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult3.getPrimary());
      assertEquals("`)zh", doubleMetaphone_DoubleMetaphoneResult3.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult3, doubleMetaphone_DoubleMetaphoneResult1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult3, doubleMetaphone_DoubleMetaphoneResult2);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult3, doubleMetaphone_DoubleMetaphoneResult0);
      
      String string3 = doubleMetaphone1.encode("OR");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals("AR", string3);
      assertNotNull(string3);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult4 = doubleMetaphone0.new DoubleMetaphoneResult((-2552));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult4.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult4.getAlternate());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult4.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult4.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult4.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult4.equals((Object)doubleMetaphone_DoubleMetaphoneResult3));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult4);
      
      String string4 = doubleMetaphone1.doubleMetaphone((String) null);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNull(string4);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("KL", "g'^5rEI");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("g'^5rEI", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KR", string0);
      assertNotNull(string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1523);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("GN");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("GN", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string1 = doubleMetaphone0.doubleMetaphone("IER");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertEquals("A", string1);
      assertNotNull(string1);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("GN", "g'^5rEI");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("GNg'^5rEI", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("GN", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      String string2 = doubleMetaphone1.encode("IER");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      assertEquals("A", string2);
      assertNotNull(string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      int int1 = doubleMetaphone1.getMaxCodeLen();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(int1 == int0);
      assertEquals(4, int1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      
      String string3 = doubleMetaphone1.encode("PSP},*,X");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertEquals("SPKS", string3);
      assertNotNull(string3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult2 = doubleMetaphone2.new DoubleMetaphoneResult(523);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult2);
      
      doubleMetaphone_DoubleMetaphoneResult1.appendAlternate('M');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("M", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult2);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("SC");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SK", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("SC");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string1.equals((Object)string0));
      assertEquals("SK", string1);
      assertNotNull(string1);
      
      doubleMetaphone0.setMaxCodeLen(2867);
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Object object1 = new Object();
      assertFalse(object1.equals((Object)object0));
      assertNotNull(object1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("95qIn2V)n:s}Gh", true);
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("KNFNSK", string2);
      assertNotNull(string2);
      
      String string3 = doubleMetaphone0.doubleMetaphone("KNFNSK", true);
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertEquals("NFNSK", string3);
      assertNotNull(string3);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertEquals(2867, int0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen((-3105));
      assertEquals((-3105), doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.encode("Cmb?%a(cx<c^1,SN");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("2+'AKGd4&-/`q6b'W", "2+'AKGd4&-/`q6b'W");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      doubleMetaphone0.setMaxCodeLen(1523);
      assertEquals(1523, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("GI", true);
      assertEquals(1523, doubleMetaphone0.getMaxCodeLen());
      assertEquals("K", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone(",Jj+L4#S 5)", true);
      assertEquals(1523, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertEquals("JLS", string1);
      assertNotNull(string1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      
      String string0 = doubleMetaphone2.doubleMetaphone("CK", false);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals("K", string0);
      assertNotNull(string0);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      
      String string1 = doubleMetaphone0.doubleMetaphone("CK");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertTrue(string1.equals((Object)string0));
      assertEquals("K", string1);
      assertNotNull(string1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("CK", "WI");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(79);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("K");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("K", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      
      doubleMetaphone2.setMaxCodeLen(79);
      assertEquals(79, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('a');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("Ka", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("a", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("CK", "K", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      
      String string2 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("Ka", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("a", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("Ka", string2);
      assertNotNull(string2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      
      int int0 = doubleMetaphone2.getMaxCodeLen();
      assertEquals(79, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(79, int0);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("TtzKc]");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TSKK", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.encode("PSBLK1JVI'MPD_S7ARO");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertEquals("SPLK", string1);
      assertNotNull(string1);
      
      doubleMetaphone0.setMaxCodeLen(6);
      assertEquals(6, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Object object1 = new Object();
      assertFalse(object1.equals((Object)object0));
      assertNotNull(object1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("95In2)n:s}Gh", false);
      assertEquals(6, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("NNSK", string2);
      assertNotNull(string2);
      
      String string3 = doubleMetaphone0.doubleMetaphone((String) null, false);
      assertEquals(6, doubleMetaphone0.getMaxCodeLen());
      assertNull(string3);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(6, doubleMetaphone0.getMaxCodeLen());
      assertEquals(6, int0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("X+jDVvRc", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SJTF", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("xZN", "A`Zhx F#\"+Ls^%cyH", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[0];
      boolean boolean1 = DoubleMetaphone.contains("A`Zhx F#\"+Ls^%cyH", 535, 6, stringArray0);
      assertEquals(0, stringArray0.length);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("#R", "CIO");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String string0 = doubleMetaphone0.doubleMetaphone("TX5IP.;");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals("TKSP", string0);
      assertNotNull(string0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, int0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String string1 = doubleMetaphone1.doubleMetaphone("A`Zhx F#\"+Ls^%cyH");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals("JKSF", string1);
      assertNotNull(string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      
      String string2 = doubleMetaphone2.doubleMetaphone("CY");
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("S", string2);
      assertNotNull(string2);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      
      String string3 = doubleMetaphone0.doubleMetaphone("TX5IP.;", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertTrue(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertEquals("TKSP", string3);
      assertNotNull(string3);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string4 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertEquals("", string4);
      assertNotNull(string4);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      
      boolean boolean3 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(boolean3 == boolean2);
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(2867);
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2867);
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("SIA", "bLK1jVI'M~D_'7ARo");
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertEquals("bLK1jVI'M~D_'7ARo", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("SIA", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('8', ']');
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SIA8", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("bLK1jVI'M~D_'7ARo]", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append(']', 'F');
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SIA8]", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("bLK1jVI'M~D_'7ARo]F", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("SIA", "RANGER");
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("CIE");
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertEquals("bLK1jVI'M~D_'7ARo]FCIE", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("SIA8]", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone0.setMaxCodeLen(2867);
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("uMv&iw8nnL'%", false);
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AMFNL", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("uMv&iw8nnL'%", false);
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string1.equals((Object)string0));
      assertEquals("AMFNL", string1);
      assertNotNull(string1);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertEquals(2867, int0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(82);
      assertEquals(82, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(82);
      assertEquals(82, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string0 = "k!";
      doubleMetaphone_DoubleMetaphoneResult0.append("k!", "rl");
      assertEquals(82, doubleMetaphone0.getMaxCodeLen());
      assertEquals("k!", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("rl", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('J', '8');
      assertEquals(82, doubleMetaphone0.getMaxCodeLen());
      assertEquals("k!J", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("rl8", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('V', 'F');
      assertEquals(82, doubleMetaphone0.getMaxCodeLen());
      assertEquals("k!JV", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("rl8F", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("ISL", "eY5SMw");
      assertEquals(82, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("ISL");
      assertEquals(82, doubleMetaphone0.getMaxCodeLen());
      assertEquals("rl8FISL", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("k!JV", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone0.setMaxCodeLen(1);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "rl", false);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = "bLK1jVI'MPD_s7ARo";
      doubleMetaphone0.setMaxCodeLen(2867);
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1852);
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('#', '8');
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertEquals("#", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("8", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("org.apache.commons.codec.EncoderException", "OM");
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertEquals("8OM", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("#org.apache.commons.codec.EncoderException", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("bLK1jVI'MPD_s7ARo", "'W3w#GgqzO!5&hEj~H");
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("l~5wn{3^_4");
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertEquals("8OMl~5wn{3^_4", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("#org.apache.commons.codec.EncoderException", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      int int0 = 0;
      String string1 = "$-#qh/:1UM";
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "$", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(2867);
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2867);
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("SIA", "bLK1jVI'M~D_'7ARo");
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SIA", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("bLK1jVI'M~D_'7ARo", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('8', ']');
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SIA8", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("bLK1jVI'M~D_'7ARo]", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("RANGER", "jjePF");
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      doubleMetaphone0.setMaxCodeLen(463);
      assertEquals(463, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("RANGER", false);
      assertEquals(463, doubleMetaphone0.getMaxCodeLen());
      assertEquals("RNJR", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("bLK1jVI'M~D_'7ARo", true);
      assertEquals(463, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertEquals("PLKJFMTR", string1);
      assertNotNull(string1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      
      int int0 = doubleMetaphone2.getMaxCodeLen();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, int0);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("`2DGnQ:b,8vcG<e");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TKNK", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("zqvK8", "SIO", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("SIO", "*)L`A 6(ba%BM1s})+4Q");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      boolean boolean2 = doubleMetaphone1.isDoubleMetaphoneEqual("F{$SRR4zE", "xS", false);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult((-2776));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('');
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string0 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals("", string0);
      assertNotNull(string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, int0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String string1 = doubleMetaphone0.doubleMetaphone("#v6");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertEquals("F", string1);
      assertNotNull(string1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(2867);
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("HrP9uIQQvgQkJ?]|dWI", "", true);
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2867);
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate(')');
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertEquals(")", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertEquals(")", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals(")", string0);
      assertNotNull(string0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertEquals(2867, int0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("z;NH+rbb$KfvsLEc");
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertEquals("SNRPKFFSLK", string1);
      assertNotNull(string1);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(40);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("XW#&gzj8$", "XW#&gzj8$");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("XW#&gzj8$", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("XW#&gzj8$", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("XW#&gzj8$", "Gh|9-az3P^xT/sr{pm", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "Y";
      stringArray0[1] = "Gh|9-az3P^xT/sr{pm";
      stringArray0[2] = "XW#&gzj8$";
      stringArray0[3] = "`>;Sa|$|izm}y+zGk";
      stringArray0[4] = "`>;Sa|$|izm}y+zGk";
      stringArray0[5] = "XW#&gzj8$";
      stringArray0[6] = "XW#&gzj8$";
      boolean boolean1 = DoubleMetaphone.contains("`>;Sa|$|izm}y+zGk", 6, 40, stringArray0);
      assertEquals(7, stringArray0.length);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("TX5IP.;", "Y");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String string0 = doubleMetaphone0.doubleMetaphone("CIO");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals("S", string0);
      assertNotNull(string0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, int0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String string1 = doubleMetaphone1.doubleMetaphone("CIO");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertTrue(string1.equals((Object)string0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals("S", string1);
      assertNotNull(string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone2.new DoubleMetaphoneResult(0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      String string2 = doubleMetaphone_DoubleMetaphoneResult1.getAlternate();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("", string2);
      assertNotNull(string2);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean3 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("XW#&gzj8$", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("XW#&gzj8$", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[4] = "SH";
      stringArray0[1] = "org.apache.commons.codec.EncoderException";
      stringArray0[3] = "SH";
      stringArray0[4] = "SH";
      boolean boolean0 = DoubleMetaphone.contains("SH", 833, 1, stringArray0);
      assertEquals(5, stringArray0.length);
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("CIO", "CIO");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      String string0 = doubleMetaphone0.doubleMetaphone("SH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("X", string0);
      assertNotNull(string0);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "a?i`Aw", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('?');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("?", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("?", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("DD", "MC");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("?", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("?", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("TTH", "TTH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone1.new DoubleMetaphoneResult((-817));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult2 = doubleMetaphone0.new DoubleMetaphoneResult(89);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult2);
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult2.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult3 = doubleMetaphone1.new DoubleMetaphoneResult(5);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult3.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult3.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult3);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult4 = doubleMetaphone1.new DoubleMetaphoneResult(5);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult4.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult4.getPrimary());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult4.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult4.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult4.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult4.equals((Object)doubleMetaphone_DoubleMetaphoneResult3));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult4);
      
      doubleMetaphone_DoubleMetaphoneResult1.appendAlternate('n');
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult3));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult4));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult3);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult4);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult2);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      String string0 = doubleMetaphone2.doubleMetaphone("PSMC", true);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals("SMK", string0);
      assertNotNull(string0);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = "";
      String string1 = doubleMetaphone0.doubleMetaphone("]-U!u?CkCMc@lV-I", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertEquals("KKMK", string1);
      assertNotNull(string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("KKMK");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("KMK", string2);
      assertNotNull(string2);
      
      String string3 = doubleMetaphone0.doubleMetaphone("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string3);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      String string4 = doubleMetaphone1.doubleMetaphone("");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNull(string4);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      int int0 = 1291;
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("uj/W$35$>o", (String) null, true);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone1.encode((Object) "M");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(object1.equals((Object)string0));
      assertFalse(object1.equals((Object)string2));
      assertFalse(object1.equals((Object)string1));
      assertEquals("M", object1);
      assertNotNull(object1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      try { 
        doubleMetaphone0.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("KL", "g'^5rEI");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("g'^5rEI", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KR", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("yh*K");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertEquals("AK", string1);
      assertNotNull(string1);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("2+'AKGd4&-/`q6b'W", "u", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      Object object0 = doubleMetaphone0.encode((Object) "u");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string1));
      assertEquals("A", object0);
      assertNotNull(object0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1523);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      String string2 = doubleMetaphone1.encode("`2DGnQ:b,8vcG<e");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)object0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("TKNK", string2);
      assertNotNull(string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string3 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)object0));
      assertFalse(string3.equals((Object)string1));
      assertEquals("", string3);
      assertNotNull(string3);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      Object object1 = doubleMetaphone1.encode((Object) "A");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(object1.equals((Object)string2));
      assertFalse(object1.equals((Object)string3));
      assertFalse(object1.equals((Object)string0));
      assertFalse(object1.equals((Object)string1));
      assertTrue(object1.equals((Object)object0));
      assertEquals("A", object1);
      assertNotNull(object1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      String string1 = doubleMetaphone0.encode("uj/W$35$>o");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AJ", string1);
      assertNotNull(string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string2);
      
      String string3 = doubleMetaphone0.doubleMetaphone("X09m3p>qeZsu9'ja<");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string3.equals((Object)string1));
      assertEquals("SMPK", string3);
      assertNotNull(string3);
      
      doubleMetaphone0.setMaxCodeLen(1291);
      assertEquals(1291, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("WHkZg:X.%j[TS", 8);
      assertEquals(1291, doubleMetaphone0.getMaxCodeLen());
      assertEquals('%', char0);
      
      String string4 = doubleMetaphone0.doubleMetaphone("X09m3p>qeZsu9'ja<");
      assertEquals(1291, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertEquals("SMPKSSJ", string4);
      assertNotNull(string4);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(1291, doubleMetaphone0.getMaxCodeLen());
      assertEquals(1291, int0);
      
      Object object0 = doubleMetaphone0.encode((Object) "bkl$EV?phdBv%i4NG");
      assertEquals(1291, doubleMetaphone0.getMaxCodeLen());
      assertFalse(object0.equals((Object)string3));
      assertFalse(object0.equals((Object)string4));
      assertFalse(object0.equals((Object)string1));
      assertEquals("PKLFFTPFNK", object0);
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "PKLFFTPFNK");
      assertEquals(1291, doubleMetaphone0.getMaxCodeLen());
      assertFalse(object1.equals((Object)string1));
      assertFalse(object1.equals((Object)string4));
      assertFalse(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string3));
      assertEquals("PKLFTPFNK", object1);
      assertNotNull(object1);
      
      String string5 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      assertEquals(1291, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)object1));
      assertFalse(string5.equals((Object)object0));
      assertEquals("ARKPXKMNSKTKNKTRKSPXN", string5);
      assertNotNull(string5);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      int int1 = doubleMetaphone1.getMaxCodeLen();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(int1 == int0);
      assertEquals(4, int1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("Vh#c^");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('!');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("Vh#c^", "MC");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertTrue(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      String string1 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", string1);
      assertNotNull(string1);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('y', 'w');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("MC");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string2 = doubleMetaphone0.doubleMetaphone("IER");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string1));
      assertEquals("A", string2);
      assertNotNull(string2);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("A", "<JW1NsT,qN1$x1m");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(int1 == int0);
      assertEquals(4, int1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      String string3 = doubleMetaphone1.encode("Vh#c^");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertEquals("FK", string3);
      assertNotNull(string3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone1.new DoubleMetaphoneResult(4);
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone_DoubleMetaphoneResult1.appendAlternate("");
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string4 = doubleMetaphone0.encode("gIf%ne4B|Y1wD=");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertEquals("JFNP", string4);
      assertNotNull(string4);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String string5 = doubleMetaphone_DoubleMetaphoneResult1.getAlternate();
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertTrue(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string4));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals("", string5);
      assertNotNull(string5);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string6 = doubleMetaphone0.doubleMetaphone("GNWRUP[=E]WVL>UE]BY3MQ)", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string4));
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string2));
      assertEquals("NRPF", string6);
      assertNotNull(string6);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      String string1 = doubleMetaphone0.encode("uj/W$35$>o");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AJ", string1);
      assertNotNull(string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("OWSKY");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string1));
      assertEquals("ASK", string2);
      assertNotNull(string2);
      
      doubleMetaphone0.setMaxCodeLen(906);
      assertEquals(906, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("X09m3p>qeZsu9'ja<");
      assertEquals(906, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertEquals("SMPKSSJ", string3);
      assertNotNull(string3);
      
      doubleMetaphone0.setMaxCodeLen(1291);
      assertEquals(1291, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("WHkZg:X.%j[TS", 8);
      assertEquals(1291, doubleMetaphone0.getMaxCodeLen());
      assertEquals('%', char0);
      
      String string4 = doubleMetaphone0.doubleMetaphone("X09m3p>qeZsu9'ja<");
      assertEquals(1291, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string4.equals((Object)string2));
      assertTrue(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertEquals("SMPKSSJ", string4);
      assertNotNull(string4);
      
      boolean boolean0 = DoubleMetaphone.contains("OWSKY", (-308), (-4141), (String[]) null);
      assertFalse(boolean0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(1291, doubleMetaphone0.getMaxCodeLen());
      assertEquals(1291, int0);
      
      boolean boolean1 = DoubleMetaphone.contains("bkl$EV?phdBv%i4NG", (-516), 403, (String[]) null);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      String string5 = doubleMetaphone0.doubleMetaphone("WHkZg:X.%j[TS");
      assertEquals(1291, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string4));
      assertEquals("AKSKKSJTS", string5);
      assertNotNull(string5);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(273);
      assertEquals(1291, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string6 = doubleMetaphone0.encode("");
      assertEquals(1291, doubleMetaphone0.getMaxCodeLen());
      assertNull(string6);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("bkl$EV?phdBv%i4NG");
      assertEquals(1291, doubleMetaphone0.getMaxCodeLen());
      assertEquals("bkl$EV?phdBv%i4NG", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('q', 'u');
      assertEquals(1291, doubleMetaphone0.getMaxCodeLen());
      assertEquals("u", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("bkl$EV?phdBv%i4NGq", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string7 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertEquals(1291, doubleMetaphone0.getMaxCodeLen());
      assertEquals("u", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("bkl$EV?phdBv%i4NGq", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(string7.equals((Object)string5));
      assertFalse(string7.equals((Object)string1));
      assertFalse(string7.equals((Object)string4));
      assertFalse(string7.equals((Object)string2));
      assertFalse(string7.equals((Object)string3));
      assertEquals("bkl$EV?phdBv%i4NGq", string7);
      assertNotNull(string7);
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(1291, doubleMetaphone0.getMaxCodeLen());
      assertEquals("u", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("bkl$EV?phdBv%i4NGq", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      
      String string8 = doubleMetaphone0.doubleMetaphone("HEM", false);
      assertEquals(1291, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string8.equals((Object)string5));
      assertFalse(string8.equals((Object)string3));
      assertFalse(string8.equals((Object)string4));
      assertFalse(string8.equals((Object)string7));
      assertFalse(string8.equals((Object)string2));
      assertFalse(string8.equals((Object)string1));
      assertEquals("HM", string8);
      assertNotNull(string8);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("Vh#c^");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('!');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("Vh#c^", "MC");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertTrue(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("ILLA", "MC");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult((-817));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult2 = doubleMetaphone0.new DoubleMetaphoneResult((-977));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult2);
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult2.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult1);
      
      String string0 = doubleMetaphone0.doubleMetaphone("MC", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals("MK", string0);
      assertNotNull(string0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult3 = doubleMetaphone2.new DoubleMetaphoneResult(14);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult3.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult3.getPrimary());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult3);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult4 = doubleMetaphone1.new DoubleMetaphoneResult(14);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult4.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult4.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult4.equals((Object)doubleMetaphone_DoubleMetaphoneResult3));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult4.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult4.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult4.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult4);
      
      doubleMetaphone_DoubleMetaphoneResult4.appendAlternate('!');
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult4.getPrimary());
      assertEquals("!", doubleMetaphone_DoubleMetaphoneResult4.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult4.equals((Object)doubleMetaphone_DoubleMetaphoneResult3));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult4.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult4.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult4.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult4, doubleMetaphone_DoubleMetaphoneResult3);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult4, doubleMetaphone_DoubleMetaphoneResult2);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult4, doubleMetaphone_DoubleMetaphoneResult0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult4, doubleMetaphone_DoubleMetaphoneResult1);
      
      String string1 = doubleMetaphone0.doubleMetaphone("", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertNull(string1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("zqvK8", "SIO", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("*)L`A 6(ba%BM1s})+4Q");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("LPPM", string0);
      assertNotNull(string0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string1 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(string1.equals((Object)string0));
      assertEquals("", string1);
      assertNotNull(string1);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('{', 'H');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("H", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("{", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string2 = doubleMetaphone0.doubleMetaphone("T@");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("T", string2);
      assertNotNull(string2);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("&uG3,Z`0i=Rc0]M", "zqvK8");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("{&uG", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("Hzqv", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(int1 == int0);
      assertEquals(4, int1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      Object object0 = doubleMetaphone1.encode((Object) "LPPM");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string2));
      assertFalse(object0.equals((Object)string1));
      assertEquals("LPM", object0);
      assertNotNull(object0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("LPPM", "WR");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string3 = doubleMetaphone0.encode("SIO");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)object0));
      assertFalse(string3.equals((Object)string0));
      assertEquals("S", string3);
      assertNotNull(string3);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult((-1130));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("*)L`A 6(ba%BM1s})+4Q");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("{&uG", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("Hzqv", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      
      String string4 = doubleMetaphone1.encode("GN");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)object0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals("N", string4);
      assertNotNull(string4);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string5 = doubleMetaphone_DoubleMetaphoneResult1.getAlternate();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string5.equals((Object)string4));
      assertTrue(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)object0));
      assertFalse(string5.equals((Object)string2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals("", string5);
      assertNotNull(string5);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      char char0 = doubleMetaphone1.charAt("", 5);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals('\u0000', char0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      Object object1 = new Object();
      assertNotNull(object1);
      
      Object object2 = doubleMetaphone1.encode((Object) "&uG3,Z`0i=Rc0]M");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(object2.equals((Object)string3));
      assertFalse(object2.equals((Object)string5));
      assertFalse(object2.equals((Object)string0));
      assertFalse(object2.equals((Object)object0));
      assertFalse(object2.equals((Object)string2));
      assertFalse(object2.equals((Object)string1));
      assertFalse(object2.equals((Object)string4));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals("KSRK", object2);
      assertNotNull(object2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string6 = doubleMetaphone1.doubleMetaphone("*)L`A 6(ba%BM1s})+4Q", false);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(string6.equals((Object)string2));
      assertFalse(string6.equals((Object)string4));
      assertFalse(string6.equals((Object)object2));
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string5));
      assertTrue(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)object0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals("LPPM", string6);
      assertNotNull(string6);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(66);
      assertEquals(66, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(66);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("bLK1jVI'MPD_s7ARo", "SIA");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("SIA", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("bLK1jVI'MPD_s7ARo", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('8', 'a');
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("SIAa", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("bLK1jVI'MPD_s7ARo8", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('F', '8');
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("SIAa8", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("bLK1jVI'MPD_s7ARo8F", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("|+R%0\"FcpYQBZ}2a Q&", "SIA");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("IAU");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("SIAa8IAU", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("bLK1jVI'MPD_s7ARo8F", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      doubleMetaphone1.setMaxCodeLen(66);
      assertEquals(66, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("org.apach.com'ons.codec.EncoderExceptiov", true);
      assertEquals(66, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals("ARKPKKMNSKTKNKTRKSPTF", string0);
      assertNotNull(string0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String string1 = doubleMetaphone0.doubleMetaphone("TH", false);
      assertEquals(66, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertEquals("0", string1);
      assertNotNull(string1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertEquals(66, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertEquals(66, int0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(66);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(66);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone_DoubleMetaphoneResult1.append("SIA", "SIA");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SIA", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("SIA", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('8', '[');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("[", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("8", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('Q', '');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("8Q", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("[", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("4Ozw", "?h9-oam6Ld&9");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult1.appendAlternate("4Ozw");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SIA4Ozw", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("SIA", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone0.setMaxCodeLen(4582);
      assertEquals(4582, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("EN");
      assertEquals(4582, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AN", string0);
      assertNotNull(string0);
      
      char char0 = doubleMetaphone0.charAt("k$U,N", (-2964));
      assertEquals(4582, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4582, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4582, int0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("PSJKTF", ">KShjt6x+FS3q2~%$_", true);
      assertEquals(4582, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(2867);
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(2867);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("", "");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("|+R%0\"FcpYQBZ}2a Q&", "v}K(>X`NlJgW|TfbP>");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("v}K(>X`NlJgW|TfbP>");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("v}K(>X`NlJgW|TfbP>", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      doubleMetaphone1.setMaxCodeLen(1064);
      assertEquals(1064, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("95qIn2V)n:s}Gh", false);
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals("KNFNSK", string0);
      assertNotNull(string0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String string1 = doubleMetaphone0.doubleMetaphone("95qIn2V)n:s}Gh", true);
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(string1.equals((Object)string0));
      assertEquals("KNFNSK", string1);
      assertNotNull(string1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertEquals(1064, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertEquals(1064, int0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(2867);
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2867);
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("SIA", "bLK1jVI'M~D_'7ARo");
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SIA", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("bLK1jVI'M~D_'7ARo", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('8', ']');
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SIA8", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("bLK1jVI'M~D_'7ARo]", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append(']', 'F');
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SIA8]", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("bLK1jVI'M~D_'7ARo]F", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("SIA", "RANGER");
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("CIE");
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertEquals("bLK1jVI'M~D_'7ARo]FCIE", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("SIA8]", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone0.setMaxCodeLen(2867);
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("$-qh/:1UM", "bLK1jVI'M~D_'7ARo", false);
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      Object object0 = doubleMetaphone0.encode((Object) "$-qh/:1UM");
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KM", object0);
      assertNotNull(object0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("!@Vh[/JHQT@d&G0V0<", true);
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string0.equals((Object)object0));
      assertEquals("FJKTTKF", string0);
      assertNotNull(string0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertEquals(2867, int0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("CHORE", false);
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)object0));
      assertEquals("XR", string1);
      assertNotNull(string1);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[4] = "SH";
      stringArray0[1] = "org.apache.commons.codec.EncoderException";
      stringArray0[2] = "SH";
      stringArray0[3] = "SH";
      stringArray0[4] = "SH";
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("9m[>15a", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("M", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("ORCHES", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertEquals("ARKS", string1);
      assertNotNull(string1);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      String string2 = doubleMetaphone0.doubleMetaphone("SH", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("X", string2);
      assertNotNull(string2);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      char char0 = doubleMetaphone0.charAt("HOLZ", (-295));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("WR");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("R", string0);
      assertNotNull(string0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      boolean boolean0 = DoubleMetaphone.contains((String) null, (-308), (-516), (String[]) null);
      assertFalse(boolean0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("_n]31Dy;");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertEquals("NT", string1);
      assertNotNull(string1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(648);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('0');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("0", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string2 = doubleMetaphone0.encode("qi%R7oq");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("KRK", string2);
      assertNotNull(string2);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("0", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('j', '9');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("0j", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("9", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string3 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("0j", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("9", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertEquals("0j", string3);
      assertNotNull(string3);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      String[] stringArray0 = new String[0];
      boolean boolean0 = DoubleMetaphone.contains("}", 1744, 75, stringArray0);
      assertEquals(0, stringArray0.length);
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("TH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("0", string0);
      assertNotNull(string0);
      
      doubleMetaphone0.setMaxCodeLen(82);
      assertEquals(82, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("p");
      assertEquals(82, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertEquals("P", string1);
      assertNotNull(string1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(82);
      assertEquals(82, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('W', '/');
      assertEquals(82, doubleMetaphone0.getMaxCodeLen());
      assertEquals("/", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("W", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('m', '/');
      assertEquals(82, doubleMetaphone0.getMaxCodeLen());
      assertEquals("//", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("Wm", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("P", "RANGER");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("PN");
      assertEquals(82, doubleMetaphone0.getMaxCodeLen());
      assertEquals("//PN", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("Wm", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      doubleMetaphone0.setMaxCodeLen((-486));
      assertEquals((-486), doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      
      String string2 = doubleMetaphone2.doubleMetaphone("}", true);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("", string2);
      assertNotNull(string2);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.doubleMetaphone("p", true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(86);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("A", "y?h");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("y?h", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("A", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append(']', '8');
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("y?h8", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("A]", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('8', '.');
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("A]8", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("y?h8.", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("SIAN", "RANGER");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("SIA");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("y?h8.SIA", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("A]8", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      doubleMetaphone1.setMaxCodeLen(86);
      assertEquals(86, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string0 = doubleMetaphone1.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      assertEquals(86, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals("ARKPXKMNSKTKNKTRKSPXN", string0);
      assertNotNull(string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string1 = doubleMetaphone1.doubleMetaphone("|UZeC^A?TORkNvf", false);
      assertEquals(86, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals("SKTRKNFF", string1);
      assertNotNull(string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertEquals(4, int0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("zqvK8", "SIO", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("SIO", "*)L`A 6(ba%BM1s})+4Q");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(171);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("zqvK8", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals("SKFK", string0);
      assertNotNull(string0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult((-3192));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate(',');
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals(",", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      
      String string1 = doubleMetaphone1.doubleMetaphone("OGGI", false);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals("AJ", string1);
      assertNotNull(string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      String[] stringArray0 = new String[0];
      boolean boolean0 = DoubleMetaphone.contains("}", 1744, 75, stringArray0);
      assertEquals(0, stringArray0.length);
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = "TH";
      String string1 = doubleMetaphone0.encode("TH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertEquals("0", string1);
      assertNotNull(string1);
      
      doubleMetaphone0.setMaxCodeLen(82);
      assertEquals(82, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("p");
      assertEquals(82, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("P", string2);
      assertNotNull(string2);
      
      String string3 = doubleMetaphone0.doubleMetaphone("CH");
      assertEquals(82, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertEquals("K", string3);
      assertNotNull(string3);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("p", "CH", true);
      assertEquals(82, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      String string4 = doubleMetaphone0.doubleMetaphone("TH", false);
      assertEquals(82, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string2));
      assertTrue(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertEquals("0", string4);
      assertNotNull(string4);
      
      String string5 = doubleMetaphone0.doubleMetaphone((String) null, false);
      assertEquals(82, doubleMetaphone0.getMaxCodeLen());
      assertNull(string5);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(82, doubleMetaphone0.getMaxCodeLen());
      assertEquals(82, int0);
      
      String string6 = doubleMetaphone0.doubleMetaphone((String) null, true);
      assertEquals(82, doubleMetaphone0.getMaxCodeLen());
      assertNull(string6);
      
      Object object0 = doubleMetaphone0.encode((Object) "0");
      assertEquals(82, doubleMetaphone0.getMaxCodeLen());
      assertFalse(object0.equals((Object)string4));
      assertFalse(object0.equals((Object)string2));
      assertFalse(object0.equals((Object)string3));
      assertFalse(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string1));
      assertEquals("", object0);
      assertNotNull(object0);
      
      char char0 = doubleMetaphone0.charAt((String) null, (-1));
      assertEquals(82, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      // Undeclared exception!
      try { 
        DoubleMetaphone.contains((String) null, 0, 4, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(2867);
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(3326);
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("!%%/O*LEYdH95d'", "{Q.K,me')n");
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertEquals("{Q.K,me')n", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("!%%/O*LEYdH95d'", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('`', '`');
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertEquals("!%%/O*LEYdH95d'`", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("{Q.K,me')n`", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('8', '`');
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertEquals("{Q.K,me')n``", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("!%%/O*LEYdH95d'`8", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("DT", "bLK1jVI'M~D_'7ARo");
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("!%%/O*LEYdH95d'");
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertEquals("{Q.K,me')n``!%%/O*LEYdH95d'", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("!%%/O*LEYdH95d'`8", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone0.setMaxCodeLen(3326);
      assertEquals(3326, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(3326, doubleMetaphone0.getMaxCodeLen());
      assertEquals("{Q.K,me')n``!%%/O*LEYdH95d'", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("!%%/O*LEYdH95d'`8", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("!@Vh[/JHQT@d&G0V0<", true);
      assertEquals(3326, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FJKTTKF", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("!@Vh[/JHQT@d&G0V0<", true);
      assertEquals(3326, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string1.equals((Object)string0));
      assertEquals("FJKTTKF", string1);
      assertNotNull(string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("/", true);
      assertEquals(3326, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("", string2);
      assertNotNull(string2);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(3326, doubleMetaphone0.getMaxCodeLen());
      assertEquals(3326, int0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("bU;Grg$ZCr5WT");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PKRK", string0);
      assertNotNull(string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("&6\"g,B5", "L");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string1 = doubleMetaphone1.doubleMetaphone("yh*K");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals("AK", string1);
      assertNotNull(string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, int0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("^2P}?4;]K'[sS", "a)~NkqIH]A4hZ;q*@O`", false);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone1.new DoubleMetaphoneResult(1383);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      String string2 = doubleMetaphone_DoubleMetaphoneResult1.getPrimary();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("", string2);
      assertNotNull(string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(int1 == int0);
      assertEquals(4, int1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      int int2 = doubleMetaphone1.getMaxCodeLen();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(int2 == int0);
      assertTrue(int2 == int1);
      assertEquals(4, int2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone((String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string2);
      
      String string3 = doubleMetaphone0.doubleMetaphone("X09m3p>qeZsu9'ja<");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SMPK", string3);
      assertNotNull(string3);
      
      doubleMetaphone0.setMaxCodeLen(1291);
      assertEquals(1291, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("M", ">HUNFi\"yJ4SiVw,+", false);
      assertEquals(1291, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "uj/W$35$>o");
      assertEquals(1291, doubleMetaphone0.getMaxCodeLen());
      assertFalse(object1.equals((Object)string3));
      assertEquals("AJ", object1);
      assertNotNull(object1);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("AJ", "mz\",vfC>PpU");
      assertEquals(1291, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      String string4 = doubleMetaphone0.doubleMetaphone("CE");
      assertEquals(1291, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)object1));
      assertEquals("S", string4);
      assertNotNull(string4);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(1291, doubleMetaphone0.getMaxCodeLen());
      assertEquals(1291, int0);
      
      String string5 = doubleMetaphone0.doubleMetaphone("oO[v:^8gLv$WK$lju");
      assertEquals(1291, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)object1));
      assertFalse(string5.equals((Object)string3));
      assertEquals("AFKLFKL", string5);
      assertNotNull(string5);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(90);
      assertEquals(1291, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string6 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertEquals(1291, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)string4));
      assertFalse(string6.equals((Object)object1));
      assertEquals("", string6);
      assertNotNull(string6);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('$', '=');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('$', '$');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "D";
      stringArray0[2] = "D";
      stringArray0[3] = "D";
      stringArray0[4] = "D";
      stringArray0[5] = "D";
      stringArray0[6] = " G";
      stringArray0[7] = "";
      boolean boolean0 = DoubleMetaphone.contains(" G", 0, 0, stringArray0);
      assertEquals(8, stringArray0.length);
      assertTrue(boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("D", "");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string0 = doubleMetaphone1.doubleMetaphone("");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNull(string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, int0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String string1 = doubleMetaphone0.doubleMetaphone("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNull(string1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone3);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone3.new DoubleMetaphoneResult(67);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      String string2 = doubleMetaphone_DoubleMetaphoneResult1.getAlternate();
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals("", string2);
      assertNotNull(string2);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(6);
      assertEquals(6, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("XW#&gzj8$", "XW#&gzj8$", false);
      assertEquals(6, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Object object1 = new Object();
      assertFalse(object1.equals((Object)object0));
      assertNotNull(object1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-3192));
      assertEquals(6, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('d');
      assertEquals(6, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone0.encode("PS1CZQ");
      assertEquals(6, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SSK", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertEquals(6, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(string1.equals((Object)string0));
      assertEquals("", string1);
      assertNotNull(string1);
      
      Object object2 = doubleMetaphone0.encode((Object) ">gg+-c2F!:c|#.");
      assertEquals(6, doubleMetaphone0.getMaxCodeLen());
      assertFalse(object2.equals((Object)string0));
      assertFalse(object2.equals((Object)string1));
      assertEquals("KKFK", object2);
      assertNotNull(object2);
      
      Object object3 = doubleMetaphone0.encode((Object) "KKFK");
      assertEquals(6, doubleMetaphone0.getMaxCodeLen());
      assertFalse(object3.equals((Object)string0));
      assertFalse(object3.equals((Object)string1));
      assertFalse(object3.equals((Object)object2));
      assertEquals("KFK", object3);
      assertNotNull(object3);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string0 = "JW";
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("JW", "U)f+|pTT#'exX?|u");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("J", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("U", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string1 = "YM[[TR)Y DC[:SCd|";
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("JW", "", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("TIA", "S|m4;Q?Eus`mRy-U}", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("U)f+|pTT#'exX?|u", "ql1!I$qoH]UZ]5s}", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3);
      
      Object object1 = new Object();
      assertFalse(object1.equals((Object)object0));
      assertNotNull(object1);
      
      try { 
        doubleMetaphone0.encode(object1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("uj/W$35$>o", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AJ", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.encode("uj/W$35$>o");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string1.equals((Object)string0));
      assertEquals("AJ", string1);
      assertNotNull(string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string2);
      
      String string3 = doubleMetaphone0.doubleMetaphone("OGGI");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string3.equals((Object)string1));
      assertTrue(string3.equals((Object)string0));
      assertEquals("AJ", string3);
      assertNotNull(string3);
      
      String string4 = doubleMetaphone0.doubleMetaphone("uj/W$35$>o", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string4.equals((Object)string0));
      assertTrue(string4.equals((Object)string1));
      assertTrue(string4.equals((Object)string3));
      assertEquals("AJ", string4);
      assertNotNull(string4);
      
      String string5 = doubleMetaphone0.doubleMetaphone("@f@<$,#o30o5^k");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string0));
      assertEquals("FK", string5);
      assertNotNull(string5);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(1378);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string6 = doubleMetaphone1.doubleMetaphone("org.apache.commons.codec.EncoderException", true);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)string4));
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string0));
      assertEquals("ARKP", string6);
      assertNotNull(string6);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("Q@*ESF]h");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("Q@*ESF]h", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("Q@*ESF]h", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(1378);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      String string7 = doubleMetaphone_DoubleMetaphoneResult1.getAlternate();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(string7.equals((Object)string6));
      assertFalse(string7.equals((Object)string1));
      assertFalse(string7.equals((Object)string0));
      assertFalse(string7.equals((Object)string3));
      assertFalse(string7.equals((Object)string4));
      assertFalse(string7.equals((Object)string5));
      assertEquals("", string7);
      assertNotNull(string7);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone0.setMaxCodeLen((-1059));
      assertEquals((-1059), doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      char char0 = doubleMetaphone1.charAt("X09m3p>qeZsu9'ja<", 1378);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals('\u0000', char0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.doubleMetaphone("C&x");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(2867);
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2867);
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("SIA", "bLK1jVI'M~D_'7ARo");
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SIA", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("bLK1jVI'M~D_'7ARo", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "bLK1jVI'M~D_'7ARo");
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "org.apache.commons.codec.EncoderException";
      stringArray0[1] = "org.apache.commons.codec.EncoderException";
      stringArray0[2] = "SIA";
      String string0 = "4?.";
      stringArray0[3] = "4?.";
      // Undeclared exception!
      try { 
        DoubleMetaphone.contains("SIA", 3, (-10), stringArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('$', '=');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("LWCZ", "1/LdX#OHel*+DUTQ", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("X09m3p>qeZsu9'ja<");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SMPK", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("SMPK", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string1.equals((Object)string0));
      assertEquals("SMPK", string1);
      assertNotNull(string1);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("SMPK", "ACH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("SMPK");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone0.setMaxCodeLen(1);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('$');
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("E?]l'-", "SMPK", false);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      
      String string2 = doubleMetaphone0.encode("SMPK");
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("S", string2);
      assertNotNull(string2);
      
      String string3 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertEquals("", string3);
      assertNotNull(string3);
      
      Object object0 = doubleMetaphone0.encode((Object) "SMPK");
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertFalse(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string3));
      assertTrue(object0.equals((Object)string2));
      assertFalse(object0.equals((Object)string1));
      assertEquals("S", object0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(2867);
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2867);
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("SIA", "bLK1jVI'MPD_s7ARo");
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertEquals("bLK1jVI'MPD_s7ARo", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("SIA", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('8', ']');
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertEquals("bLK1jVI'MPD_s7ARo]", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("SIA8", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append(']', 'F');
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SIA8]", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("bLK1jVI'MPD_s7ARo]F", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("SIA", "RANGER");
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("CIE");
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SIA8]", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("bLK1jVI'MPD_s7ARo]FCIE", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone0.setMaxCodeLen(2867);
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("bLK1jVI'MPD_s7ARo", true);
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PLKJFMPTSR", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("PLKJFMPTSR", true);
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertEquals("PLKFMPTSR", string1);
      assertNotNull(string1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, int0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "9cp1tU!zvfVACg4t";
      boolean boolean0 = DoubleMetaphone.contains("OM", 1, 1, stringArray0);
      assertEquals(1, stringArray0.length);
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("PS", "9cp1tU!zvfVACg4t");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String string0 = doubleMetaphone1.doubleMetaphone("Ys9'L^L@TfY$+M");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals("ASLL", string0);
      assertNotNull(string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, int0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string1 = doubleMetaphone1.doubleMetaphone("PS", false);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertEquals("S", string1);
      assertNotNull(string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1527);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('R');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("R", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      int int0 = 2867;
      doubleMetaphone0.setMaxCodeLen(2867);
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2867);
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string0 = "SIA";
      doubleMetaphone_DoubleMetaphoneResult0.append("SIA", "bLK1jVI'M~D_'7ARo");
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SIA", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("bLK1jVI'M~D_'7ARo", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('8', ']');
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SIA8", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("bLK1jVI'M~D_'7ARo]", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      char char0 = 'F';
      doubleMetaphone_DoubleMetaphoneResult0.append(']', 'F');
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertEquals("bLK1jVI'M~D_'7ARo]F", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("SIA8]", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("SIA", "RANGER");
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("CIE");
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertEquals("bLK1jVI'M~D_'7ARo]FCIE", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("SIA8]", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone0.setMaxCodeLen(2867);
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      boolean boolean0 = false;
      String string0 = doubleMetaphone0.doubleMetaphone("uj/W$35$>o", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AJ", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.encode("uj/W$35$>o");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string1.equals((Object)string0));
      assertEquals("AJ", string1);
      assertNotNull(string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string2);
      
      String string3 = doubleMetaphone0.doubleMetaphone("X09m3p>qeZsu9'ja<");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertEquals("SMPK", string3);
      assertNotNull(string3);
      
      doubleMetaphone0.setMaxCodeLen(1291);
      assertEquals(1291, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(1291);
      assertEquals(1291, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("M", ">HUNFi\"yJ4SiVw,+", false);
      assertEquals(1291, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "PAj]MU'tv0", false);
      assertEquals(1291, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      
      Object object1 = null;
      try { 
        doubleMetaphone0.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("1cZq");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SK", string0);
      assertNotNull(string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("1cZq");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string1.equals((Object)string0));
      assertEquals("SK", string1);
      assertNotNull(string1);
      
      char char0 = doubleMetaphone0.charAt("SK", (-1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("1cZq", "HrP9uIQQvgQkJ?]|dWI", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(315);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone_DoubleMetaphoneResult1.appendAlternate(')');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals(")", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('\u0000');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      
      String string2 = doubleMetaphone_DoubleMetaphoneResult1.getAlternate();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals(")", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(")", string2);
      assertNotNull(string2);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(int1 == int0);
      assertEquals(4, int1);
      
      String string3 = doubleMetaphone0.doubleMetaphone(",G}:", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertEquals("K", string3);
      assertNotNull(string3);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = "WWj-~W0CTw%f ";
      String string1 = doubleMetaphone0.encode("WWj-~W0CTw%f ");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertEquals("JKTF", string1);
      assertNotNull(string1);
      
      int int0 = 0;
      Object object0 = doubleMetaphone0.encode((Object) "JKTF");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(object0.equals((Object)string0));
      assertTrue(object0.equals((Object)string1));
      assertEquals("JKTF", object0);
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "JKTF");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string0));
      assertTrue(object1.equals((Object)string1));
      assertEquals("JKTF", object1);
      assertNotNull(object1);
      
      doubleMetaphone0.setMaxCodeLen((-17));
      assertEquals((-17), doubleMetaphone0.getMaxCodeLen());
      
      String string2 = "Q";
      String string3 = "SC";
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("Q", "SC");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      String string1 = doubleMetaphone0.encode("uj/W$35$>o");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AJ", string1);
      assertNotNull(string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string2);
      
      String string3 = doubleMetaphone0.doubleMetaphone("X09m3p>qeZsu9'ja<");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string3.equals((Object)string1));
      assertEquals("SMPK", string3);
      assertNotNull(string3);
      
      doubleMetaphone0.setMaxCodeLen(1291);
      assertEquals(1291, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("WHkZg:X.%j[TS", 8);
      assertEquals(1291, doubleMetaphone0.getMaxCodeLen());
      assertEquals('%', char0);
      
      String string4 = doubleMetaphone0.doubleMetaphone("X09m3p>qeZsu9'ja<");
      assertEquals(1291, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertEquals("SMPKSSJ", string4);
      assertNotNull(string4);
      
      boolean boolean0 = DoubleMetaphone.contains("", (-308), (-4141), (String[]) null);
      assertFalse(boolean0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(1291, doubleMetaphone0.getMaxCodeLen());
      assertEquals(1291, int0);
      
      boolean boolean1 = DoubleMetaphone.contains("bkl$EV?phdBv%i4NG", (-516), 403, (String[]) null);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      String string5 = doubleMetaphone0.doubleMetaphone("WHkZg:X.%j[TS");
      assertEquals(1291, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string1));
      assertEquals("AKSKKSJTS", string5);
      assertNotNull(string5);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(273);
      assertEquals(1291, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string6 = doubleMetaphone0.encode("");
      assertEquals(1291, doubleMetaphone0.getMaxCodeLen());
      assertNull(string6);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("bkl$EV?phdBv%i4NG");
      assertEquals(1291, doubleMetaphone0.getMaxCodeLen());
      assertEquals("bkl$EV?phdBv%i4NG", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('q', 'u');
      assertEquals(1291, doubleMetaphone0.getMaxCodeLen());
      assertEquals("u", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("bkl$EV?phdBv%i4NGq", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string7 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertEquals(1291, doubleMetaphone0.getMaxCodeLen());
      assertEquals("u", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("bkl$EV?phdBv%i4NGq", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(string7.equals((Object)string1));
      assertFalse(string7.equals((Object)string4));
      assertFalse(string7.equals((Object)string3));
      assertFalse(string7.equals((Object)string5));
      assertEquals("bkl$EV?phdBv%i4NGq", string7);
      assertNotNull(string7);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("S:^j0OBFs6L", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SJPF", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.encode("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("qr|ZR!");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string0));
      assertEquals("KRSR", string2);
      assertNotNull(string2);
      
      String string3 = doubleMetaphone0.doubleMetaphone("WR:8N-ZQS");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertEquals("RNSK", string3);
      assertNotNull(string3);
      
      int int0 = 1291;
      doubleMetaphone0.setMaxCodeLen((-1));
      assertEquals((-1), doubleMetaphone0.getMaxCodeLen());
      
      String string4 = ">HUNFi\"yJ4SiVw,+";
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "SJPF", true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(6);
      assertEquals(6, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("XW#&gzj8$", "XW#&gzj8$", false);
      assertEquals(6, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Object object1 = new Object();
      assertFalse(object1.equals((Object)object0));
      assertNotNull(object1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-3192));
      assertEquals(6, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('d');
      assertEquals(6, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone0.setMaxCodeLen(6);
      assertEquals(6, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("/or[1^");
      assertEquals(6, doubleMetaphone0.getMaxCodeLen());
      assertEquals("R", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("TH");
      assertEquals(6, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertEquals("0", string1);
      assertNotNull(string1);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(71);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "89H^pqh<]MpOD";
      stringArray0[1] = "";
      stringArray0[2] = "[26vDM~FnmPL";
      stringArray0[3] = "?EO";
      stringArray0[4] = "|UZeC^A?TORkNvf";
      stringArray0[5] = "[26vDM~FnmPL";
      stringArray0[6] = "|UZeC^A?TORkNvf";
      stringArray0[7] = "[26vDM~FnmPL";
      stringArray0[8] = "[26vDM~FnmPL";
      boolean boolean0 = DoubleMetaphone.contains("89H^pqh<]MpOD", 73, 71, stringArray0);
      assertEquals(9, stringArray0.length);
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("$F.uo/Rnn~I<$ ");
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FRN", string0);
      assertNotNull(string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(71);
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append(':', '\"');
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      assertEquals("\"", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals(":", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(84);
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      String string1 = doubleMetaphone_DoubleMetaphoneResult1.getPrimary();
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals(71, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(string1.equals((Object)string0));
      assertEquals("", string1);
      assertNotNull(string1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(2645);
      assertEquals(2645, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("}l)jw)xx;/VNk]l", 2867);
      assertEquals(2645, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("SCH");
      assertEquals(2645, doubleMetaphone0.getMaxCodeLen());
      assertEquals("X", string0);
      assertNotNull(string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, int0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult((-1586));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "}l)jw)xx;/VNk]l";
      stringArray0[1] = "SCH";
      stringArray0[2] = "SCH";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "SCH";
      boolean boolean1 = DoubleMetaphone.contains("", (-1586), 4, stringArray0);
      assertEquals(7, stringArray0.length);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("Vh#c^");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('!');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("Vh#c^", "MC");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertTrue(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      String string1 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", string1);
      assertNotNull(string1);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('y', 'w');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("MC");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string2 = doubleMetaphone0.doubleMetaphone("IER");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)string1));
      assertEquals("A", string2);
      assertNotNull(string2);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("A", "<JW1NsT,qN1$x1m");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(int1 == int0);
      assertEquals(4, int1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      String string3 = doubleMetaphone1.encode("Vh#c^");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertEquals("FK", string3);
      assertNotNull(string3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone1.new DoubleMetaphoneResult(4);
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      
      String string4 = doubleMetaphone0.encode("@gIf%ne|Y1wD=");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertEquals("JFNT", string4);
      assertNotNull(string4);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String string5 = doubleMetaphone_DoubleMetaphoneResult1.getAlternate();
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string3));
      assertTrue(string5.equals((Object)string1));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals("", string5);
      assertNotNull(string5);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      char char0 = doubleMetaphone0.charAt(";]a", 4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals('\u0000', char0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "IER");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(object1.equals((Object)string4));
      assertFalse(object1.equals((Object)string1));
      assertTrue(object1.equals((Object)string2));
      assertFalse(object1.equals((Object)string3));
      assertFalse(object1.equals((Object)string5));
      assertEquals("A", object1);
      assertNotNull(object1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual(";9#2m9k6 d", "jG2+-8S9R", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("O%1D'#ry", (String) null, true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      String string1 = doubleMetaphone0.doubleMetaphone("8BN&s+>r?qW");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PNSR", string1);
      assertNotNull(string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone((String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string2);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('C');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("C", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        DoubleMetaphone.contains((String) null, 2503, 1159, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(2867);
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2867);
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("SIA", "bLK1jVI'M~D_'7ARo");
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SIA", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("bLK1jVI'M~D_'7ARo", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('8', ']');
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertEquals("bLK1jVI'M~D_'7ARo]", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("SIA8", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append(']', 'F');
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SIA8]", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("bLK1jVI'M~D_'7ARo]F", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("SIA", "RANGER");
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("CIE");
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertEquals("bLK1jVI'M~D_'7ARo]FCIE", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("SIA8]", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone0.setMaxCodeLen(2867);
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("$-qh/:1UM", "PS1CZQ", false);
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      Object object0 = doubleMetaphone0.encode((Object) "$-qh/:1UM");
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KM", object0);
      assertNotNull(object0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("!@Vh[/JHQT@d&G0V0<", true);
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string0.equals((Object)object0));
      assertEquals("FJKTTKF", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("bLK1jVI'M~D_'7ARo", false);
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)object0));
      assertFalse(string1.equals((Object)string0));
      assertEquals("PLKJFMTR", string1);
      assertNotNull(string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("bLK1jVI'M~D_'7ARo", false);
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string2.equals((Object)object0));
      assertTrue(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("PLKJFMTR", string2);
      assertNotNull(string2);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertEquals(2867, int0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual(";9#2m9k6 d", "jG2+-8S9R", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("O%1D'#ry", (String) null, true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      String string1 = doubleMetaphone0.doubleMetaphone("8BN&s+>r?qW");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PNSR", string1);
      assertNotNull(string1);
      
      String string2 = doubleMetaphone0.encode("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string2);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2198);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string3 = doubleMetaphone0.encode("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string3);
      
      String string4 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(string4.equals((Object)string1));
      assertEquals("", string4);
      assertNotNull(string4);
      
      char char0 = doubleMetaphone0.charAt("", 2198);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = "SIO";
      Object object0 = doubleMetaphone0.encode((Object) "PSSC");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(object0.equals((Object)string0));
      assertEquals("SK", object0);
      assertNotNull(object0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("SIO", "*)L`A 6(ba%Bs})+4Q");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string1 = "0(2M[!ji$e'(F oqk{M";
      String string2 = "";
      doubleMetaphone0.setMaxCodeLen((-1875));
      assertEquals((-1875), doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("O%1D'#ry", (String) null, false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("8BN&s+>r?qW", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PNSR", string1);
      assertNotNull(string1);
      
      Object object0 = doubleMetaphone0.encode((Object) "");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(object0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(199);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('[');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("[", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("[", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone0.setMaxCodeLen(199);
      assertEquals(199, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('W', 'G');
      assertEquals(199, doubleMetaphone0.getMaxCodeLen());
      assertEquals("[W", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("[G", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("PNSR");
      assertEquals(199, doubleMetaphone0.getMaxCodeLen());
      assertEquals("[G", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("[WPNSR", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string2 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertEquals(199, doubleMetaphone0.getMaxCodeLen());
      assertEquals("[G", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("[WPNSR", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(string2.equals((Object)string1));
      assertEquals("[G", string2);
      assertNotNull(string2);
      
      String string3 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertEquals(199, doubleMetaphone0.getMaxCodeLen());
      assertEquals("[G", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("[WPNSR", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertEquals("[WPNSR", string3);
      assertNotNull(string3);
      
      String string4 = doubleMetaphone0.encode("PNSR");
      assertEquals(199, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertEquals("NSR", string4);
      assertNotNull(string4);
      
      String string5 = doubleMetaphone0.doubleMetaphone("C:");
      assertEquals(199, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string3));
      assertEquals("K", string5);
      assertNotNull(string5);
      
      doubleMetaphone0.setMaxCodeLen(72);
      assertEquals(72, doubleMetaphone0.getMaxCodeLen());
      
      String string6 = doubleMetaphone0.doubleMetaphone("5)6N:`]L6=5dkZOdybI");
      assertEquals(72, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string6.equals((Object)string4));
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string2));
      assertFalse(string6.equals((Object)string5));
      assertEquals("NLTKSTP", string6);
      assertNotNull(string6);
      
      String string7 = doubleMetaphone0.doubleMetaphone("");
      assertEquals(72, doubleMetaphone0.getMaxCodeLen());
      assertNull(string7);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      doubleMetaphone0.setMaxCodeLen(2576);
      assertEquals(2576, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("|UZeC^A?TORkNvf", false);
      assertEquals(2576, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SKTRKNFF", string0);
      assertNotNull(string0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(2576, doubleMetaphone0.getMaxCodeLen());
      assertEquals(2576, int0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('$', '=');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = "X09m3p>qeZsu9'ja<";
      String string1 = doubleMetaphone0.doubleMetaphone("X09m3p>qeZsu9'ja<");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string1.equals((Object)string0));
      assertEquals("SMPK", string1);
      assertNotNull(string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("SMPK", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("SMPK", string2);
      assertNotNull(string2);
      
      String string3 = doubleMetaphone0.doubleMetaphone("X09m3p>qeZsu9'ja<");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string3.equals((Object)string1));
      assertTrue(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertEquals("SMPK", string3);
      assertNotNull(string3);
      
      int int0 = (-692);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult((-692));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      String string4 = "yYx(j";
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult1.append("yYx(j");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = "SIO";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("zqvK8", "SIO", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("SIO", "*)L`A 6(ba%Bs})+4Q");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(171);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string1 = "0(2M[!ji$e'(F oqk{M";
      String string2 = "";
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      String string1 = doubleMetaphone0.encode("uj/W$35$>o");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AJ", string1);
      assertNotNull(string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string2);
      
      String string3 = doubleMetaphone0.doubleMetaphone("X09m3p>qeZsu9'ja<");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string3.equals((Object)string1));
      assertEquals("SMPK", string3);
      assertNotNull(string3);
      
      doubleMetaphone0.setMaxCodeLen(1291);
      assertEquals(1291, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("M", ">HUNFi\"yJ4SiVw,+", false);
      assertEquals(1291, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "uj/W$35$>o");
      assertEquals(1291, doubleMetaphone0.getMaxCodeLen());
      assertTrue(object1.equals((Object)string1));
      assertFalse(object1.equals((Object)string3));
      assertEquals("AJ", object1);
      assertNotNull(object1);
      
      Object object2 = doubleMetaphone0.encode((Object) "AJ");
      assertEquals(1291, doubleMetaphone0.getMaxCodeLen());
      assertTrue(object2.equals((Object)string1));
      assertTrue(object2.equals((Object)object1));
      assertFalse(object2.equals((Object)string3));
      assertEquals("AJ", object2);
      assertNotNull(object2);
      
      Object object3 = doubleMetaphone0.encode((Object) "AJ");
      assertEquals(1291, doubleMetaphone0.getMaxCodeLen());
      assertTrue(object3.equals((Object)string1));
      assertTrue(object3.equals((Object)object1));
      assertTrue(object3.equals((Object)object2));
      assertFalse(object3.equals((Object)string3));
      assertEquals("AJ", object3);
      assertNotNull(object3);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertEquals(1291, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(1291);
      assertEquals(1291, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone_DoubleMetaphoneResult1.appendAlternate('Z');
      assertEquals(1291, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("Z", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      String string4 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertEquals(1291, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(string4.equals((Object)object3));
      assertFalse(string4.equals((Object)object2));
      assertFalse(string4.equals((Object)object1));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertEquals("", string4);
      assertNotNull(string4);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("cJAxbx4d#", "|UZeC^A?TORkNvf");
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("|UZeC^A?TORkNvf", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals("SKTR", string0);
      assertNotNull(string0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = "SIO";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("SIO", "*)L`A 6(ba%Bs})+4Q");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string1 = "0(2M[!ji$e'(F oqk{M";
      String string2 = "";
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("WWj-~W0CTw%f ");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("JKTF", string0);
      assertNotNull(string0);
      
      int int0 = 0;
      Object object0 = doubleMetaphone0.encode((Object) "JKTF");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(object0.equals((Object)string0));
      assertEquals("JKTF", object0);
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "JKTF");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(object1.equals((Object)object0));
      assertTrue(object1.equals((Object)string0));
      assertEquals("JKTF", object1);
      assertNotNull(object1);
      
      doubleMetaphone0.setMaxCodeLen(0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = "";
      String string2 = "SC";
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "SC");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = "org.apache.commons.codec.EncoderException";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("Z+_iTgTt", "org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      char char0 = ';';
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate(';');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string1 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(string1.equals((Object)string0));
      assertEquals("", string1);
      assertNotNull(string1);
      
      char char1 = 'z';
      String string2 = doubleMetaphone0.doubleMetaphone("", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string2);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('z');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean1 = false;
      doubleMetaphone_DoubleMetaphoneResult0.append('=', '*');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string3 = doubleMetaphone0.doubleMetaphone("", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string3);
      
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      String string0 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", string0);
      assertNotNull(string0);
      
      Object object0 = doubleMetaphone0.encode((Object) "");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(object0);
      
      try { 
        doubleMetaphone0.encode((Object) doubleMetaphone_DoubleMetaphoneResult0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      String string1 = doubleMetaphone0.encode("uj/W$35$>o");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AJ", string1);
      assertNotNull(string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string2);
      
      String string3 = doubleMetaphone0.doubleMetaphone("X09m3p>qeZsu9'ja<");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string3.equals((Object)string1));
      assertEquals("SMPK", string3);
      assertNotNull(string3);
      
      String string4 = doubleMetaphone0.doubleMetaphone("X09m3p>qeZsu9'ja<", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertEquals("SMPK", string4);
      assertNotNull(string4);
      
      String string5 = doubleMetaphone0.doubleMetaphone("AJ");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string5.equals((Object)string4));
      assertTrue(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string3));
      assertEquals("AJ", string5);
      assertNotNull(string5);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(3480);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("}l)jw)xx;/VNk]l");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("}l)jw)xx;/VNk]l", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("}l)jw)xx;/VNk]l", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string6 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("}l)jw)xx;/VNk]l", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("}l)jw)xx;/VNk]l", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)string4));
      assertFalse(string6.equals((Object)string3));
      assertEquals("}l)jw)xx;/VNk]l", string6);
      assertNotNull(string6);
      
      doubleMetaphone0.setMaxCodeLen(981);
      assertEquals(981, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("uj/W$35$>o", 0);
      assertEquals(981, doubleMetaphone0.getMaxCodeLen());
      assertEquals('u', char0);
      
      String string7 = doubleMetaphone0.doubleMetaphone("");
      assertEquals(981, doubleMetaphone0.getMaxCodeLen());
      assertNull(string7);
      
      boolean boolean0 = DoubleMetaphone.contains("uj/W$35$>o", 3480, 3480, (String[]) null);
      assertFalse(boolean0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(981, doubleMetaphone0.getMaxCodeLen());
      assertEquals(981, int0);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = null;
      stringArray0[1] = "";
      stringArray0[2] = null;
      boolean boolean1 = DoubleMetaphone.contains("AJ", 48, 48, stringArray0);
      assertEquals(3, stringArray0.length);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      String string8 = doubleMetaphone0.doubleMetaphone((String) null);
      assertEquals(981, doubleMetaphone0.getMaxCodeLen());
      assertNull(string8);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('u', 'u');
      assertEquals(981, doubleMetaphone0.getMaxCodeLen());
      assertEquals("}l)jw)xx;/VNk]lu", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("}l)jw)xx;/VNk]lu", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string9 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertEquals(981, doubleMetaphone0.getMaxCodeLen());
      assertEquals("}l)jw)xx;/VNk]lu", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("}l)jw)xx;/VNk]lu", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(string9.equals((Object)string4));
      assertFalse(string9.equals((Object)string3));
      assertFalse(string9.equals((Object)string5));
      assertFalse(string9.equals((Object)string1));
      assertFalse(string9.equals((Object)string6));
      assertEquals("}l)jw)xx;/VNk]lu", string9);
      assertNotNull(string9);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = "9,S";
      char char0 = doubleMetaphone0.charAt("9,S", 32);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(32);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("9,S");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("9,S", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("9,S", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("9,S");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("9,S9,S", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("9,S9,S", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("ED");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("9,S9,SED", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("9,S9,SED", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('N');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("9,S9,SEDN", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("9,S9,SED", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("9,S9,SEDN", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("9,S9,SED", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertFalse(boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('\u0000');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("9,S9,SED\u0000", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("9,S9,SEDN", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      try { 
        doubleMetaphone0.encode((Object) doubleMetaphone_DoubleMetaphoneResult0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode((String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("Hf]bI5hNYH27^qP", "Hf]bI5hNYH27^qP", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2233);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      char char0 = '}';
      doubleMetaphone_DoubleMetaphoneResult0.append('}', '}');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("}", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("}", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string1 = "H>Ke-i_!2w5l%6ni";
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("H>Ke-i_!2w5l%6ni");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("}", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("}H>Ke-i_!2w5l%6ni", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append("H>Ke-i_!2w5l%6ni", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("OM", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AM", string0);
      assertNotNull(string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("OM", "AM", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("JW", "U)f+|pTT#'exX?|u");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("J", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("U", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("JW", "", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      
      doubleMetaphone_DoubleMetaphoneResult0.append(']', ']');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("J", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("U", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("YM[[TR)Y DC3:SCd|");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("J", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("U", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string1 = doubleMetaphone0.doubleMetaphone("AM", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string1.equals((Object)string0));
      assertEquals("AM", string1);
      assertNotNull(string1);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('f', '');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("J", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("U", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string2 = doubleMetaphone0.encode("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNull(string2);
      
      doubleMetaphone_DoubleMetaphoneResult0.append(']', 'f');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("J", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("U", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string3 = doubleMetaphone0.doubleMetaphone("HYM", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertEquals("HM", string3);
      assertNotNull(string3);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("HYM", "%:Y#p$C%?xUuT;WiX");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("J", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("U", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('P', 'f');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("J", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("U", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string4 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("J", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("U", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertEquals("J", string4);
      assertNotNull(string4);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('f');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("J", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("U", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('$', '=');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("!&+@8sW`36|7C:(");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("!&+@8sW`36|7C:(", "!&+@8sW`36|7C:(");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("!&+@8sW`36|7C:(", "");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('$', '$');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('$', '9');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("D", "p},*,x");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("D");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone0.setMaxCodeLen(0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("D", "E?]l'-", true);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2);
      
      Object object0 = doubleMetaphone0.encode((Object) "E?]l'-");
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", object0);
      assertNotNull(object0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("G", true);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string0.equals((Object)object0));
      assertEquals("", string0);
      assertNotNull(string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("!@Vh[/JHQT@d&G0V0<", false);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertTrue(string1.equals((Object)string0));
      assertTrue(string1.equals((Object)object0));
      assertEquals("", string1);
      assertNotNull(string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("", true);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertNull(string2);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "|UZeC^A?TORkNvf");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      int int0 = 2867;
      doubleMetaphone0.setMaxCodeLen(2867);
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("bLK1jVI'M~D_'7ARo", "bLK1jVI'M~D_'7ARo", false);
      assertEquals(2867, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotNull(doubleMetaphone0);
      
      String string0 = doubleMetaphone0.encode("1cZq");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SK", string0);
      assertNotNull(string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('b');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("1cZq", "SK");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("SK");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      int int0 = 0;
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      String string0 = "61";
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("61");
      doubleMetaphone0.doubleMetaphone("61");
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("yV)V<G&Z(5[6");
      doubleMetaphone0.doubleMetaphone("yV)V<G&Z(5[6");
      doubleMetaphone0.doubleMetaphone("61", false);
      String string1 = "";
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('E');
      doubleMetaphone_DoubleMetaphoneResult0.append('E', '\'');
      try { 
        doubleMetaphone0.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1));
      doubleMetaphone_DoubleMetaphoneResult0.append('6', '~');
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      Object object0 = doubleMetaphone0.encode((Object) "g.6Z*f_8!j DA9-C2MB");
      assertEquals("KSFJ", object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "KSFJ");
      assertNotNull(object1);
      assertEquals("KSFJ", object1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1113);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = doubleMetaphone0.encode("HOLM");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("HLM", string0);
      assertNotNull(string0);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "HLM";
      stringArray0[1] = "";
      stringArray0[2] = "HLM";
      stringArray0[3] = "cYEI{Zd$(";
      stringArray0[4] = "HOLM";
      stringArray0[5] = "cYEI{Zd$(";
      stringArray0[6] = "HOLM";
      stringArray0[7] = "cYEI{Zd$(";
      boolean boolean0 = DoubleMetaphone.contains("cYEI{Zd$(", 0, 1619, stringArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      int int0 = 0;
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      char char0 = '_';
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('_');
      String string0 = "Y";
      doubleMetaphone0.doubleMetaphone("Y", true);
      doubleMetaphone0.encode((String) null);
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.appendAlternate((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone("", false);
      doubleMetaphone0.isDoubleMetaphoneEqual("KL", ":8n-zQs");
      String[] stringArray0 = new String[3];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = "";
      DoubleMetaphone.contains("g'^5rEI", 1523, 626, stringArray0);
      doubleMetaphone0.doubleMetaphone("g'^5rEI", false);
      doubleMetaphone0.doubleMetaphone("yh*K");
      // Undeclared exception!
      try { 
        doubleMetaphone0.charAt((String) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      int int0 = 7;
      int int1 = 1;
      DoubleMetaphone.contains("CHIA", 7, 1, (String[]) null);
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode("CHIA");
      doubleMetaphone0.isDoubleMetaphoneEqual("K", "CHIA", true);
      doubleMetaphone0.setMaxCodeLen(0);
      doubleMetaphone0.setMaxCodeLen(1);
      doubleMetaphone0.isDoubleMetaphoneEqual("CHIA", "CHIA", false);
      String string0 = "";
      doubleMetaphone0.doubleMetaphone("CHIA");
      String string1 = "EP";
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "EP");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone("t", true);
      doubleMetaphone0.isDoubleMetaphoneEqual(") n%", "T");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-2097));
      char char0 = ' ';
      char char1 = 'H';
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("}HBn0to+QZ0 ");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode("");
      doubleMetaphone0.isDoubleMetaphoneEqual("O%1D'#ry", (String) null, false);
      String string0 = doubleMetaphone0.doubleMetaphone("8BN&s+>r?qW", false);
      assertEquals("PNSR", string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2198);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      doubleMetaphone0.encode("");
      doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      doubleMetaphone0.charAt("", 2198);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = null;
      int int0 = (-290);
      doubleMetaphone0.charAt((String) null, (-290));
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      try { 
        doubleMetaphone1.encode((Object) doubleMetaphone0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone0.doubleMetaphone("Zj/z<N3O6", true);
      doubleMetaphone_DoubleMetaphoneResult0.append('_', 'i');
      String string0 = null;
      int int0 = 74;
      // Undeclared exception!
      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "bU;Grg$ZCr5WT";
      doubleMetaphone0.encode("bU;Grg$ZCr5WT");
      doubleMetaphone0.isDoubleMetaphoneEqual("&6\"g,B5", "L");
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(0);
      String string1 = "org.apache.commons.codec.EncoderException";
      doubleMetaphone_DoubleMetaphoneResult0.append("", "org.apache.commons.codec.EncoderException");
      doubleMetaphone_DoubleMetaphoneResult0.append("PKRK", "1v");
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("h'v)/<;cNxV}");
      String string2 = "";
      String string3 = "7";
      doubleMetaphone1.doubleMetaphone(";slGCDn:JNo =v");
      String string4 = "";
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = doubleMetaphone0.encode("($");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "SH";
      stringArray0[1] = "org.apache.commons.codec.EncoderException";
      stringArray0[2] = "SH";
      stringArray0[3] = "SH";
      stringArray0[4] = "SH";
      DoubleMetaphone.contains("SH", 833, 1, stringArray0);
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.isDoubleMetaphoneEqual("CIO", "CIO");
      doubleMetaphone0.doubleMetaphone("SH");
      doubleMetaphone0.getMaxCodeLen();
      doubleMetaphone0.doubleMetaphone("455|n#_cqt&OH:(BFq");
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(833);
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('a');
      assertEquals("a", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone("");
      int int0 = 0;
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      String string0 = "(y;+Z";
      doubleMetaphone0.doubleMetaphone("i^lkzSpFw/69e19", true);
      doubleMetaphone_DoubleMetaphoneResult0.append('o', '*');
      doubleMetaphone_DoubleMetaphoneResult0.append("", "(y;+Z");
      doubleMetaphone_DoubleMetaphoneResult0.append('C', 'k');
      doubleMetaphone_DoubleMetaphoneResult0.append('t');
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      int int0 = 1382;
      Object object0 = new Object();
      try { 
        doubleMetaphone0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // DoubleMetaphone encode parameter is not of type String
         //
         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone("H\"ZoLjLx~=_");
      doubleMetaphone0.isDoubleMetaphoneEqual("XW#&gzj8$", "XW#&gzj8$", true);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(6);
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('%');
      doubleMetaphone0.encode("org.apache.commons.codec.EncoderException");
      doubleMetaphone_DoubleMetaphoneResult0.append("hPkL? )en5pe~<=9", "UCCES");
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('L');
      doubleMetaphone_DoubleMetaphoneResult0.append('L');
      doubleMetaphone_DoubleMetaphoneResult0.append('s');
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('s');
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("<'Wi[s`'Q$a~,3");
      doubleMetaphone0.isDoubleMetaphoneEqual("7-SYl", (String) null, false);
      doubleMetaphone0.doubleMetaphone("<'Wi[s`'Q$a~,3", false);
      doubleMetaphone0.doubleMetaphone("hPkL? )en5pe~<=9", true);
      doubleMetaphone_DoubleMetaphoneResult0.append('J');
      doubleMetaphone0.setMaxCodeLen((-702));
      // Undeclared exception!
      try { 
        doubleMetaphone0.doubleMetaphone("@)");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("Vh#c^");
      doubleMetaphone_DoubleMetaphoneResult0.append('!');
      doubleMetaphone_DoubleMetaphoneResult0.append("Vh#c^", "MC");
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean0);
      
      doubleMetaphone0.doubleMetaphone("");
      doubleMetaphone0.getMaxCodeLen();
      doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      doubleMetaphone_DoubleMetaphoneResult0.append('y', 'w');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("MC");
      String string0 = doubleMetaphone0.doubleMetaphone("IER");
      assertEquals("A", string0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("A", "<JW1NsT,qN1$x1m");
      doubleMetaphone0.getMaxCodeLen();
      String string1 = doubleMetaphone0.doubleMetaphone("?_uU");
      assertNotNull(string1);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('C');
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "<JW1NsT,qN1$x1m";
      stringArray0[2] = "?_uU";
      stringArray0[3] = "Vh#c^";
      stringArray0[4] = "";
      stringArray0[5] = "IER";
      stringArray0[6] = "";
      stringArray0[7] = null;
      stringArray0[8] = "Vh#c^";
      boolean boolean1 = DoubleMetaphone.contains("", 4633, 2503, stringArray0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.getMaxCodeLen();
      String string0 = null;
      String string1 = "iw|#EWJ/";
      doubleMetaphone0.isDoubleMetaphoneEqual("iw|#EWJ/", "iw|#EWJ/", true);
      doubleMetaphone0.encode((String) null);
      // Undeclared exception!
      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, (String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }
}
