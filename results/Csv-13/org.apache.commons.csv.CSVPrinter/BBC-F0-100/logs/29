* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-100
* Going to generate test cases for class: org.apache.commons.csv.CSVPrinter
* Starting Client-0
* Connecting to master process on port 18775
* Analyzing classpath: 
  - subjects/buggy-versions/Csv-13/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.csv.CSVPrinter
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 971
* Using seed 2960801680
* Starting evolution
bbc usage percentage is: 100%
* Initial Number of Goals in DynaMOSA = 190 / 971
[MASTER] 15:45:36.361 [logback-2] ERROR TestCluster - Failed to check cache for java.util.ArrayDeque<E> : Type points to itself
[MASTER] 15:45:36.361 [logback-2] ERROR TestCluster - Failed to check cache for java.util.ArrayList<E> : Type points to itself
[MASTER] 15:45:36.361 [logback-2] ERROR TestCluster - Failed to check cache for java.util.EnumSet<E> : Type points to itself
[MASTER] 15:45:36.361 [logback-2] ERROR TestCluster - Failed to check cache for java.util.HashSet<E> : Type points to itself
[MASTER] 15:45:36.361 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedHashSet<E> : Type points to itself
[MASTER] 15:45:36.361 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedList<E> : Type points to itself
[MASTER] 15:45:36.361 [logback-2] ERROR TestCluster - Failed to check cache for java.util.PriorityQueue<E> : Type points to itself
[MASTER] 15:45:36.362 [logback-2] ERROR TestCluster - Failed to check cache for java.util.ServiceLoader<S> : Type points to itself
[MASTER] 15:45:36.362 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Stack<E> : Type points to itself
[MASTER] 15:45:36.362 [logback-2] ERROR TestCluster - Failed to check cache for java.util.TreeSet<E> : Type points to itself
[MASTER] 15:45:36.362 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Vector<E> : Type points to itself
[MASTER] 15:45:37.454 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 15:45:49.488 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[MASTER] 15:48:33.095 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for java.io.BufferedInputStream due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.evosuite.runtime.mock.java.io.MockFileInputStream due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.evosuite.runtime.mock.java.io.MockRandomAccessFile due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.evosuite.runtime.mock.java.io.MockFile due to org.evosuite.ga.ConstructionFailedException: Max recursion depth reached
[MASTER] 15:49:05.676 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for java.io.BufferedReader due to org.evosuite.ga.ConstructionFailedException: Have no generator for class java.io.Console canUseFunctionalMocks=false, canBeMocked: false
[MASTER] 15:50:06.691 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for java.io.BufferedInputStream due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for java.io.BufferedInputStream due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.evosuite.runtime.mock.java.io.MockFileInputStream due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.evosuite.runtime.mock.java.io.MockFile due to org.evosuite.ga.ConstructionFailedException: Max recursion depth reached
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printRecords([Ljava/lang/Object;)V: I23 Branch 65 IFEQ L491 - false: 80511,75075,7082| Number of FF evals: 96908
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I250 Branch 47 IFNE L270 - false: 1497,0,0| Number of FF evals: 3997
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I164 Branch 42 IF_ICMPEQ L241 - true: 2,0,0| Number of FF evals: 291
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.print(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I34 Branch 12 IFEQ L142 - true: 4,0,0| Number of FF evals: 380
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printRecords(Ljava/sql/ResultSet;)V: I18 Branch 68 IF_ICMPGT L514 - true: 24,0,0| Number of FF evals: 465
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printRecords(Ljava/lang/Iterable;)V: I8 Branch 61 IFEQ L439 - false: 327,0,0| Number of FF evals: 8453
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I182 Branch 44 IFNE L248 - true: 4,0,0| Number of FF evals: 1102
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I250 Branch 47 IFNE L270 - true: 4,0,0| Number of FF evals: 12062
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.print(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I34 Branch 12 IFEQ L142 - false: 4,0,0| Number of FF evals: 18917
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I51 Branch 27 TABLESWITCH L207 Default-Case - true: 95794,89454,4505| Number of FF evals: 96906
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndEscape(Ljava/lang/CharSequence;II)V: Line 184: 20,0,0| Number of FF evals: 58
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I161 Branch 41 IF_ICMPEQ L241 - true: 11179,10129,39| Number of FF evals: 79384
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.<init>(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V: I74 Branch 5 IFNE L76 - true: 2,0,0| Number of FF evals: 97
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndEscape(Ljava/lang/CharSequence;II)V: I80 Branch 20 IF_ICMPNE L170 - false: 5996,4456,1| Number of FF evals: 37223
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndEscape(Ljava/lang/CharSequence;II)V: Line 187: 20,0,0| Number of FF evals: 58
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I110 Branch 32 IF_ICMPLT L231 - true: 1500,0,0| Number of FF evals: 5120
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printRecords(Ljava/lang/Iterable;)V: I29 Branch 63 IFEQ L442 - true: 883,0,0| Number of FF evals: 7336
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.print(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I19 Branch 11 IFEQ L139 - true: 3,0,0| Number of FF evals: 19236
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I63 Branch 28 IFNE L212 - false: 1562,0,0| Number of FF evals: 4210
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndEscape(Ljava/lang/CharSequence;II)V: Line 168: 442,0,0| Number of FF evals: 830
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: Line 270: 4,0,0| Number of FF evals: 46
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndEscape(Ljava/lang/CharSequence;II)V: I56 Branch 18 IF_ICMPLE L165 - true: 550,0,0| Number of FF evals: 5697
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.close()V: I5 Branch 6 IFEQ L87 - false: 20,0,0| Number of FF evals: 778
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I51 Branch 25 TABLESWITCH L207 Case 3 - true: 14792,8939,827| Number of FF evals: 18929
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I63 Branch 28 IFNE L212 - true: 1553,0,0| Number of FF evals: 3990
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.close()V: I5 Branch 6 IFEQ L87 - true: 98,0,0| Number of FF evals: 200
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndEscape(Ljava/lang/CharSequence;II)V: I51 Branch 17 IF_ICMPNE L163 - false: 218,0,0| Number of FF evals: 3343
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndEscape(Ljava/lang/CharSequence;II)V: I56 Branch 18 IF_ICMPLE L165 - false: 218,0,0| Number of FF evals: 3933
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.close()V: Line 90: 20,0,0| Number of FF evals: 33
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.<init>(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V: I57 Branch 3 IFNULL L71 - true: 51,0,0| Number of FF evals: 4257
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndEscape(Ljava/lang/CharSequence;II)V: Line 177: 442,0,0| Number of FF evals: 830
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printComment(Ljava/lang/String;)V: I13 Branch 51 IFNE L319 - true: 109,0,0| Number of FF evals: 7048
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I113 Branch 33 IF_ICMPLE L231 - true: 1707,0,0| Number of FF evals: 9195
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndEscape(Ljava/lang/CharSequence;II)V: I42 Branch 14 IF_ICMPEQ L163 - true: 5307,4126,119| Number of FF evals: 37978
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndEscape(Ljava/lang/CharSequence;II)V: Line 174: 442,0,0| Number of FF evals: 830
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printRecord(Ljava/lang/Iterable;)V: I8 Branch 59 IFEQ L373 - false: 142,0,0| Number of FF evals: 7471
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.close()V: Line 87: 20,0,0| Number of FF evals: 33
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndEscape(Ljava/lang/CharSequence;II)V: Line 175: 442,0,0| Number of FF evals: 830
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I123 Branch 36 IF_ICMPLT L231 - true: 1831,0,0| Number of FF evals: 3841
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printComment(Ljava/lang/String;)V: I68 Branch 57 IF_ICMPNE L328 - true: 9903,6518,354| Number of FF evals: 35611
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndEscape(Ljava/lang/CharSequence;II)V: Line 156: 20,0,0| Number of FF evals: 58
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I51 Branch 26 TABLESWITCH L207 Case 4 - false: 713,0,0| Number of FF evals: 3917
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndEscape(Ljava/lang/CharSequence;II)V: Line 154: 20,0,0| Number of FF evals: 58
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndEscape(Ljava/lang/CharSequence;II)V: Line 155: 20,0,0| Number of FF evals: 58
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I127 Branch 37 IF_ICMPLE L231 - false: 1781,601,13| Number of FF evals: 12900
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndEscape(Ljava/lang/CharSequence;II)V: Line 158: 20,0,0| Number of FF evals: 58
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndEscape(Ljava/lang/CharSequence;II)V: Line 159: 20,0,0| Number of FF evals: 58
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.print(Ljava/lang/Object;)V: I13 Branch 9 IFNONNULL L127 - true: 1567,0,0| Number of FF evals: 12024
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I199 Branch 45 IF_ICMPGT L253 - false: 739,0,0| Number of FF evals: 6055
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printComment(Ljava/lang/String;)V: I5 Branch 50 IFNE L316 - true: 107,0,0| Number of FF evals: 7190
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndEscape(Ljava/lang/CharSequence;II)V: I48 Branch 16 IF_ICMPEQ L163 - true: 486,0,0| Number of FF evals: 2282
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printComment(Ljava/lang/String;)V: I53 Branch 54 LOOKUPSWITCH L326 Case 13 - true: 1960,0,0| Number of FF evals: 12808
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I51 Branch 23 TABLESWITCH L207 Case 1 - true: 713,0,0| Number of FF evals: 1077
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndEscape(Ljava/lang/CharSequence;II)V: I115 Branch 21 IF_ICMPLE L184 - false: 20,0,0| Number of FF evals: 17530
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printRecords([Ljava/lang/Object;)V: I36 Branch 66 IFEQ L493 - false: 87,0,0| Number of FF evals: 1578
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I137 Branch 38 IF_ICMPGT L233 - false: 2037,151,0| Number of FF evals: 8280
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndEscape(Ljava/lang/CharSequence;II)V: I115 Branch 21 IF_ICMPLE L184 - true: 20,0,0| Number of FF evals: 6005
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndEscape(Ljava/lang/CharSequence;II)V: I70 Branch 19 IF_ICMPNE L168 - false: 5996,4456,1| Number of FF evals: 36047
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printComment(Ljava/lang/String;)V: I13 Branch 51 IFNE L319 - false: 144,0,0| Number of FF evals: 676
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndEscape(Ljava/lang/CharSequence;II)V: I31 Branch 13 IF_ICMPGE L161 - false: 20,0,0| Number of FF evals: 18927
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I51 Branch 24 TABLESWITCH L207 Case 2 - true: 1551,0,0| Number of FF evals: 4187
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I207 Branch 46 IFNE L260 - true: 4,0,0| Number of FF evals: 11528
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndEscape(Ljava/lang/CharSequence;II)V: I31 Branch 13 IF_ICMPGE L161 - true: 20,0,0| Number of FF evals: 21538
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printComment(Ljava/lang/String;)V: I53 Branch 53 LOOKUPSWITCH L326 Case 10 - true: 1810,0,0| Number of FF evals: 7731
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I285 Branch 49 IF_ICMPNE L283 - true: 14,0,0| Number of FF evals: 4068
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printComment(Ljava/lang/String;)V: I61 Branch 56 IF_ICMPGE L328 - true: 12509,10549,230| Number of FF evals: 50908
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printRecords(Ljava/sql/ResultSet;)V: I10 Branch 67 IFEQ L513 - true: 9,0,0| Number of FF evals: 461
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I158 Branch 40 IF_ICMPEQ L241 - true: 14722,13672,94| Number of FF evals: 96907
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printRecords(Ljava/lang/Iterable;)V: I16 Branch 62 IFEQ L440 - true: 373,0,0| Number of FF evals: 8476
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printComment(Ljava/lang/String;)V: I61 Branch 56 IF_ICMPGE L328 - false: 1960,0,0| Number of FF evals: 11042
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printRecords(Ljava/sql/ResultSet;)V: I10 Branch 67 IFEQ L513 - false: 23,0,0| Number of FF evals: 428
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I91 Branch 30 IFEQ L224 - false: 5,0,0| Number of FF evals: 8226
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I167 Branch 43 IF_ICMPNE L241 - false: 414,0,0| Number of FF evals: 1779
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printRecords(Ljava/sql/ResultSet;)V: I18 Branch 68 IF_ICMPGT L514 - false: 4692,2096,226| Number of FF evals: 13120
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I116 Branch 34 IF_ICMPLT L231 - true: 1722,2,0| Number of FF evals: 7626
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndEscape(Ljava/lang/CharSequence;II)V: I45 Branch 15 IF_ICMPEQ L163 - true: 5307,4126,118| Number of FF evals: 36802
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I120 Branch 35 IF_ICMPLE L231 - true: 1194,0,0| Number of FF evals: 6828
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printRecords(Ljava/sql/ResultSet;)V: Line 519: 9,0,0| Number of FF evals: 50
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printRecords(Ljava/lang/Iterable;)V: I16 Branch 62 IFEQ L440 - false: 51581,49632,271| Number of FF evals: 96929
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printComment(Ljava/lang/String;)V: I53 Branch 55 LOOKUPSWITCH L326 Default-Case - false: 2100,0,0| Number of FF evals: 12223
* Search finished after 606s and 2207 generations, 1150411 statements, best individual has fitness: 85.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 98%
* Total number of goals: 164
* Number of covered goals: 161
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 97%
* Total number of goals: 137
* Number of covered goals: 133
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 41
* Number of covered goals: 41
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 94%
* Total number of goals: 507
* Number of covered goals: 478
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 2
* Number of covered goals: 1
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 93%
* Total number of goals: 137
* Number of covered goals: 127
* Generated 77 tests with total length 480
* Resulting test suite's coverage: 86% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 15:56:57.094 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6851333333333334% of time used, but only 30/77 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 60%
* Compiling and checking tests
[MASTER] 15:57:17.763 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:57:18.031 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:57:18.278 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:57:18.521 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:57:18.718 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:57:19.200 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.lang.RuntimePermission" "writeFileDescriptor")
java.lang.Thread.getStackTrace(Thread.java:1559)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkWrite(SecurityManager.java:954)
java.io.FileOutputStream.<init>(FileOutputStream.java:245)
java.io.FileWriter.<init>(FileWriter.java:116)
org.evosuite.runtime.mock.java.io.MockFileWriter.<init>(MockFileWriter.java:79)
org.apache.commons.csv.CSVPrinter_83_tmp__ESTest.test0(CSVPrinter_83_tmp__ESTest.java:26)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:498)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:288)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:282)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:748)

[MASTER] 15:57:19.200 [logback-1] WARN  JUnitAnalyzer - Failing test:
 CSVFormat cSVFormat0 = CSVFormat.TDF;
FileDescriptor fileDescriptor0 = new FileDescriptor();
MockFileWriter mockFileWriter0 = new MockFileWriter(fileDescriptor0);
CSVPrinter cSVPrinter0 = cSVFormat0.print(mockFileWriter0);
cSVPrinter0.flush();

[MASTER] 15:57:25.538 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.lang.RuntimePermission" "writeFileDescriptor")
java.lang.Thread.getStackTrace(Thread.java:1559)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkWrite(SecurityManager.java:954)
java.io.FileOutputStream.<init>(FileOutputStream.java:245)
org.evosuite.runtime.mock.java.io.MockFileOutputStream.<init>(MockFileOutputStream.java:114)
org.apache.commons.csv.CSVPrinter_98_tmp__ESTest.test0(CSVPrinter_98_tmp__ESTest.java:29)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:498)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:288)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:282)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:748)

[MASTER] 15:57:25.538 [logback-1] WARN  JUnitAnalyzer - Failing test:
 CSVFormat cSVFormat0 = CSVFormat.MYSQL;
RowSetMetaDataImpl rowSetMetaDataImpl0 = new RowSetMetaDataImpl();
Character character0 = new Character('q');
FileDescriptor fileDescriptor0 = new FileDescriptor();
MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(fileDescriptor0);
MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0);
Object[] objectArray0 = new Object[5];
objectArray0[0] = (Object) rowSetMetaDataImpl0;
CSVFormat cSVFormat1 = cSVFormat0.withQuote(character0);
CSVPrinter cSVPrinter0 = new CSVPrinter(mockPrintWriter0, cSVFormat1);
cSVPrinter0.printRecords(objectArray0);
assertEquals(5, objectArray0.length);


[MASTER] 15:57:32.609 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.lang.RuntimePermission" "writeFileDescriptor")
java.lang.Thread.getStackTrace(Thread.java:1559)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkWrite(SecurityManager.java:954)
java.io.FileOutputStream.<init>(FileOutputStream.java:245)
java.io.FileWriter.<init>(FileWriter.java:116)
org.evosuite.runtime.mock.java.io.MockFileWriter.<init>(MockFileWriter.java:79)
org.apache.commons.csv.CSVPrinter_119_tmp__ESTest.test0(CSVPrinter_119_tmp__ESTest.java:53)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:498)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:288)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:282)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:748)

[MASTER] 15:57:32.609 [logback-1] WARN  JUnitAnalyzer - Failing test:
 CSVFormat cSVFormat0 = CSVFormat.MYSQL;
assertNotNull(cSVFormat0);
assertFalse(cSVFormat0.isCommentMarkerSet());
assertFalse(cSVFormat0.getIgnoreEmptyLines());
assertFalse(cSVFormat0.getIgnoreHeaderCase());
assertEquals("\n", cSVFormat0.getRecordSeparator());
assertFalse(cSVFormat0.isQuoteCharacterSet());
assertEquals('\\', (char)cSVFormat0.getEscapeCharacter());
assertNull(cSVFormat0.getQuoteMode());
assertFalse(cSVFormat0.isNullStringSet());
assertEquals('\t', cSVFormat0.getDelimiter());
assertFalse(cSVFormat0.getIgnoreSurroundingSpaces());
assertNull(cSVFormat0.getNullString());
assertFalse(cSVFormat0.getAllowMissingColumnNames());
assertFalse(cSVFormat0.getSkipHeaderRecord());
assertTrue(cSVFormat0.isEscapeCharacterSet());
assertNull(cSVFormat0.getCommentMarker());
assertNull(cSVFormat0.getQuoteCharacter());

LinkedList<SQLInvalidAuthorizationSpecException> linkedList0 = new LinkedList<SQLInvalidAuthorizationSpecException>();
assertNotNull(linkedList0);
assertEquals(0, linkedList0.size());

FileDescriptor fileDescriptor0 = new FileDescriptor();
assertNotNull(fileDescriptor0);
assertFalse(fileDescriptor0.valid());

MockFileWriter mockFileWriter0 = new MockFileWriter(fileDescriptor0);
assertNotNull(mockFileWriter0);

CSVPrinter cSVPrinter0 = new CSVPrinter(mockFileWriter0, cSVFormat0);
assertNotNull(cSVPrinter0);
assertFalse(cSVFormat0.isCommentMarkerSet());
assertFalse(cSVFormat0.getIgnoreEmptyLines());
assertFalse(cSVFormat0.getIgnoreHeaderCase());
assertEquals("\n", cSVFormat0.getRecordSeparator());
assertFalse(cSVFormat0.isQuoteCharacterSet());
assertEquals('\\', (char)cSVFormat0.getEscapeCharacter());
assertNull(cSVFormat0.getQuoteMode());
assertFalse(cSVFormat0.isNullStringSet());
assertEquals('\t', cSVFormat0.getDelimiter());
assertFalse(cSVFormat0.getIgnoreSurroundingSpaces());
assertNull(cSVFormat0.getNullString());
assertFalse(cSVFormat0.getAllowMissingColumnNames());
assertFalse(cSVFormat0.getSkipHeaderRecord());
assertTrue(cSVFormat0.isEscapeCharacterSet());
assertNull(cSVFormat0.getCommentMarker());
assertNull(cSVFormat0.getQuoteCharacter());
assertFalse(fileDescriptor0.valid());

cSVPrinter0.print(linkedList0);

[MASTER] 15:57:36.968 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.lang.RuntimePermission" "writeFileDescriptor")
java.lang.Thread.getStackTrace(Thread.java:1559)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkWrite(SecurityManager.java:954)
java.io.FileOutputStream.<init>(FileOutputStream.java:245)
org.evosuite.runtime.mock.java.io.MockFileOutputStream.<init>(MockFileOutputStream.java:114)
org.apache.commons.csv.CSVPrinter_126_tmp__ESTest.test0(CSVPrinter_126_tmp__ESTest.java:48)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:498)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:288)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:282)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:748)

[MASTER] 15:57:36.968 [logback-1] WARN  JUnitAnalyzer - Failing test:
 CSVFormat cSVFormat0 = CSVFormat.MYSQL;
assertNotNull(cSVFormat0);
assertNull(cSVFormat0.getNullString());
assertNull(cSVFormat0.getQuoteCharacter());
assertEquals("\n", cSVFormat0.getRecordSeparator());
assertFalse(cSVFormat0.isQuoteCharacterSet());
assertFalse(cSVFormat0.isCommentMarkerSet());
assertTrue(cSVFormat0.isEscapeCharacterSet());
assertFalse(cSVFormat0.getIgnoreSurroundingSpaces());
assertFalse(cSVFormat0.getAllowMissingColumnNames());
assertFalse(cSVFormat0.isNullStringSet());
assertEquals('\t', cSVFormat0.getDelimiter());
assertNull(cSVFormat0.getCommentMarker());
assertNull(cSVFormat0.getQuoteMode());
assertFalse(cSVFormat0.getSkipHeaderRecord());
assertEquals('\\', (char)cSVFormat0.getEscapeCharacter());
assertFalse(cSVFormat0.getIgnoreEmptyLines());
assertFalse(cSVFormat0.getIgnoreHeaderCase());

FileDescriptor fileDescriptor0 = new FileDescriptor();
assertNotNull(fileDescriptor0);
assertFalse(fileDescriptor0.valid());

MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(fileDescriptor0);
assertNotNull(mockFileOutputStream0);

MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0);
assertNotNull(mockPrintWriter0);

CSVPrinter cSVPrinter0 = cSVFormat0.print(mockPrintWriter0);
assertNotNull(cSVPrinter0);
assertNull(cSVFormat0.getNullString());
assertNull(cSVFormat0.getQuoteCharacter());
assertEquals("\n", cSVFormat0.getRecordSeparator());
assertFalse(cSVFormat0.isQuoteCharacterSet());
assertFalse(cSVFormat0.isCommentMarkerSet());
assertTrue(cSVFormat0.isEscapeCharacterSet());
assertFalse(cSVFormat0.getIgnoreSurroundingSpaces());
assertFalse(cSVFormat0.getAllowMissingColumnNames());
assertFalse(cSVFormat0.isNullStringSet());
assertEquals('\t', cSVFormat0.getDelimiter());
assertNull(cSVFormat0.getCommentMarker());
assertNull(cSVFormat0.getQuoteMode());
assertFalse(cSVFormat0.getSkipHeaderRecord());
assertEquals('\\', (char)cSVFormat0.getEscapeCharacter());
assertFalse(cSVFormat0.getIgnoreEmptyLines());
assertFalse(cSVFormat0.getIgnoreHeaderCase());
assertFalse(fileDescriptor0.valid());

cSVPrinter0.printRecord((Iterable<?>) null);

[MASTER] 15:57:41.493 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.lang.RuntimePermission" "writeFileDescriptor")
java.lang.Thread.getStackTrace(Thread.java:1559)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkWrite(SecurityManager.java:954)
java.io.FileOutputStream.<init>(FileOutputStream.java:245)
org.evosuite.runtime.mock.java.io.MockFileOutputStream.<init>(MockFileOutputStream.java:114)
org.apache.commons.csv.CSVPrinter_131_tmp__ESTest.test0(CSVPrinter_131_tmp__ESTest.java:48)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:498)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:288)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:282)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:748)

[MASTER] 15:57:41.493 [logback-1] WARN  JUnitAnalyzer - Failing test:
 CSVFormat cSVFormat0 = CSVFormat.DEFAULT;
assertNotNull(cSVFormat0);
assertFalse(cSVFormat0.isNullStringSet());
assertEquals('\"', (char)cSVFormat0.getQuoteCharacter());
assertTrue(cSVFormat0.getIgnoreEmptyLines());
assertFalse(cSVFormat0.isEscapeCharacterSet());
assertFalse(cSVFormat0.getSkipHeaderRecord());
assertFalse(cSVFormat0.isCommentMarkerSet());
assertTrue(cSVFormat0.isQuoteCharacterSet());
assertFalse(cSVFormat0.getIgnoreSurroundingSpaces());
assertFalse(cSVFormat0.getIgnoreHeaderCase());
assertNull(cSVFormat0.getQuoteMode());
assertEquals(',', cSVFormat0.getDelimiter());
assertEquals("\r\n", cSVFormat0.getRecordSeparator());
assertNull(cSVFormat0.getCommentMarker());
assertNull(cSVFormat0.getNullString());
assertFalse(cSVFormat0.getAllowMissingColumnNames());
assertNull(cSVFormat0.getEscapeCharacter());

FileDescriptor fileDescriptor0 = new FileDescriptor();
assertNotNull(fileDescriptor0);
assertFalse(fileDescriptor0.valid());

MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(fileDescriptor0);
assertNotNull(mockFileOutputStream0);

MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0);
assertNotNull(mockPrintWriter0);

CSVPrinter cSVPrinter0 = cSVFormat0.print(mockPrintWriter0);
assertNotNull(cSVPrinter0);
assertFalse(cSVFormat0.isNullStringSet());
assertEquals('\"', (char)cSVFormat0.getQuoteCharacter());
assertTrue(cSVFormat0.getIgnoreEmptyLines());
assertFalse(cSVFormat0.isEscapeCharacterSet());
assertFalse(cSVFormat0.getSkipHeaderRecord());
assertFalse(cSVFormat0.isCommentMarkerSet());
assertTrue(cSVFormat0.isQuoteCharacterSet());
assertFalse(cSVFormat0.getIgnoreSurroundingSpaces());
assertFalse(cSVFormat0.getIgnoreHeaderCase());
assertNull(cSVFormat0.getQuoteMode());
assertEquals(',', cSVFormat0.getDelimiter());
assertEquals("\r\n", cSVFormat0.getRecordSeparator());
assertNull(cSVFormat0.getCommentMarker());
assertNull(cSVFormat0.getNullString());
assertFalse(cSVFormat0.getAllowMissingColumnNames());
assertNull(cSVFormat0.getEscapeCharacter());
assertFalse(fileDescriptor0.valid());

cSVPrinter0.printRecord((Object[]) null);

[MASTER] 15:57:47.736 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.lang.RuntimePermission" "writeFileDescriptor")
java.lang.Thread.getStackTrace(Thread.java:1559)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkWrite(SecurityManager.java:954)
java.io.FileOutputStream.<init>(FileOutputStream.java:245)
java.io.FileWriter.<init>(FileWriter.java:116)
org.evosuite.runtime.mock.java.io.MockFileWriter.<init>(MockFileWriter.java:79)
org.apache.commons.csv.CSVPrinter_148_tmp__ESTest.test0(CSVPrinter_148_tmp__ESTest.java:47)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:498)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:288)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:282)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:748)

[MASTER] 15:57:47.737 [logback-1] WARN  JUnitAnalyzer - Failing test:
 CSVFormat cSVFormat0 = CSVFormat.MYSQL;
assertNotNull(cSVFormat0);
assertNull(cSVFormat0.getQuoteCharacter());
assertNull(cSVFormat0.getNullString());
assertFalse(cSVFormat0.isNullStringSet());
assertTrue(cSVFormat0.isEscapeCharacterSet());
assertEquals("\n", cSVFormat0.getRecordSeparator());
assertFalse(cSVFormat0.isQuoteCharacterSet());
assertFalse(cSVFormat0.getSkipHeaderRecord());
assertNull(cSVFormat0.getCommentMarker());
assertFalse(cSVFormat0.getIgnoreHeaderCase());
assertFalse(cSVFormat0.getIgnoreEmptyLines());
assertNull(cSVFormat0.getQuoteMode());
assertEquals('\\', (char)cSVFormat0.getEscapeCharacter());
assertFalse(cSVFormat0.isCommentMarkerSet());
assertFalse(cSVFormat0.getIgnoreSurroundingSpaces());
assertEquals('\t', cSVFormat0.getDelimiter());
assertFalse(cSVFormat0.getAllowMissingColumnNames());

FileDescriptor fileDescriptor0 = new FileDescriptor();
assertNotNull(fileDescriptor0);
assertFalse(fileDescriptor0.valid());

MockFileWriter mockFileWriter0 = new MockFileWriter(fileDescriptor0);
assertNotNull(mockFileWriter0);

CSVPrinter cSVPrinter0 = cSVFormat0.print(mockFileWriter0);
assertNotNull(cSVPrinter0);
assertNull(cSVFormat0.getQuoteCharacter());
assertNull(cSVFormat0.getNullString());
assertFalse(cSVFormat0.isNullStringSet());
assertTrue(cSVFormat0.isEscapeCharacterSet());
assertEquals("\n", cSVFormat0.getRecordSeparator());
assertFalse(cSVFormat0.isQuoteCharacterSet());
assertFalse(cSVFormat0.getSkipHeaderRecord());
assertNull(cSVFormat0.getCommentMarker());
assertFalse(cSVFormat0.getIgnoreHeaderCase());
assertFalse(cSVFormat0.getIgnoreEmptyLines());
assertNull(cSVFormat0.getQuoteMode());
assertEquals('\\', (char)cSVFormat0.getEscapeCharacter());
assertFalse(cSVFormat0.isCommentMarkerSet());
assertFalse(cSVFormat0.getIgnoreSurroundingSpaces());
assertEquals('\t', cSVFormat0.getDelimiter());
assertFalse(cSVFormat0.getAllowMissingColumnNames());
assertFalse(fileDescriptor0.valid());

cSVPrinter0.println();

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 6
* Writing tests to file
* Writing JUnit test case 'CSVPrinter_ESTest' to results/Csv-13/org.apache.commons.csv.CSVPrinter/BBC-F0-100/tests/29
* Done!

* Computation finished
