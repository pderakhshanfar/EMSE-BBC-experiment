* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-100
* Going to generate test cases for class: org.apache.commons.csv.CSVPrinter
* Starting Client-0
* Connecting to master process on port 3597
* Analyzing classpath: 
  - subjects/buggy-versions/Csv-13/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.csv.CSVPrinter
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 971
* Using seed 1688016846
* Starting evolution
bbc usage percentage is: 100%
* Initial Number of Goals in DynaMOSA = 190 / 971
[MASTER] 15:44:01.870 [logback-2] ERROR TestCluster - Failed to check cache for java.util.ArrayDeque<E> : Type points to itself
[MASTER] 15:44:01.870 [logback-2] ERROR TestCluster - Failed to check cache for java.util.ArrayList<E> : Type points to itself
[MASTER] 15:44:01.870 [logback-2] ERROR TestCluster - Failed to check cache for java.util.EnumSet<E> : Type points to itself
[MASTER] 15:44:01.870 [logback-2] ERROR TestCluster - Failed to check cache for java.util.HashSet<E> : Type points to itself
[MASTER] 15:44:01.870 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedHashSet<E> : Type points to itself
[MASTER] 15:44:01.870 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedList<E> : Type points to itself
[MASTER] 15:44:01.870 [logback-2] ERROR TestCluster - Failed to check cache for java.util.PriorityQueue<E> : Type points to itself
[MASTER] 15:44:01.870 [logback-2] ERROR TestCluster - Failed to check cache for java.util.ServiceLoader<S> : Type points to itself
[MASTER] 15:44:01.870 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Stack<E> : Type points to itself
[MASTER] 15:44:01.870 [logback-2] ERROR TestCluster - Failed to check cache for java.util.TreeSet<E> : Type points to itself
[MASTER] 15:44:01.871 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Vector<E> : Type points to itself
[MASTER] 15:44:06.159 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 15:44:24.260 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[MASTER] 15:48:51.850 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for java.sql.SQLClientInfoException due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for java.sql.SQLClientInfoException due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for java.sql.SQLClientInfoException due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for java.sql.SQLClientInfoException due to org.evosuite.ga.ConstructionFailedException: Max recursion depth reached
[MASTER] 15:49:13.577 [logback-2] ERROR TestCluster - Failed to check cache for java.util.List<E> : Type points to itself
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printRecords([Ljava/lang/Object;)V: I23 Branch 65 IFEQ L491 - false: 63278,59334,6467| Number of FF evals: 78267
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printComment(Ljava/lang/String;)V: Line 343: 40,0,0| Number of FF evals: 108
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I250 Branch 47 IFNE L270 - false: 1506,0,0| Number of FF evals: 3184
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.<init>(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V: I49 Branch 2 IF_ICMPGE L70 - true: 52,0,0| Number of FF evals: 5084
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I164 Branch 42 IF_ICMPEQ L241 - true: 155,0,0| Number of FF evals: 820
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.print(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I34 Branch 12 IFEQ L142 - true: 5,0,0| Number of FF evals: 731
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.<init>(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V: I49 Branch 2 IF_ICMPGE L70 - false: 14,0,0| Number of FF evals: 4663
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printRecords(Ljava/sql/ResultSet;)V: I18 Branch 68 IF_ICMPGT L514 - true: 7,0,0| Number of FF evals: 620
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I182 Branch 44 IFNE L248 - true: 326,0,0| Number of FF evals: 4702
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I250 Branch 47 IFNE L270 - true: 40,0,0| Number of FF evals: 11263
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I51 Branch 27 TABLESWITCH L207 Default-Case - true: 74827,68697,3022| Number of FF evals: 78263
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I161 Branch 41 IF_ICMPEQ L241 - true: 11409,10563,888| Number of FF evals: 78293
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.<init>(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V: I74 Branch 5 IFNE L76 - true: 188,0,0| Number of FF evals: 533
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndEscape(Ljava/lang/CharSequence;II)V: I80 Branch 20 IF_ICMPNE L170 - false: 11964,11308,0| Number of FF evals: 77899
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I110 Branch 32 IF_ICMPLT L231 - true: 1386,0,0| Number of FF evals: 4285
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printRecords(Ljava/lang/Iterable;)V: I29 Branch 63 IFEQ L442 - true: 36,0,0| Number of FF evals: 4749
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I63 Branch 28 IFNE L212 - false: 333,0,0| Number of FF evals: 674
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndEscape(Ljava/lang/CharSequence;II)V: Line 168: 208,0,0| Number of FF evals: 433
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: Line 270: 40,0,0| Number of FF evals: 62
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndEscape(Ljava/lang/CharSequence;II)V: I56 Branch 18 IF_ICMPLE L165 - true: 107,0,0| Number of FF evals: 3215
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I51 Branch 25 TABLESWITCH L207 Case 3 - true: 375,0,0| Number of FF evals: 2986
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndEscape(Ljava/lang/CharSequence;II)V: I51 Branch 17 IF_ICMPNE L163 - false: 114,0,0| Number of FF evals: 3529
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I63 Branch 28 IFNE L212 - true: 1090,0,0| Number of FF evals: 3177
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.close()V: I5 Branch 6 IFEQ L87 - true: 67,0,0| Number of FF evals: 187
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndEscape(Ljava/lang/CharSequence;II)V: I56 Branch 18 IF_ICMPLE L165 - false: 107,0,0| Number of FF evals: 5918
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndEscape(Ljava/lang/CharSequence;II)V: Line 177: 208,0,0| Number of FF evals: 433
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.<init>(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V: I57 Branch 3 IFNULL L71 - true: 38,0,0| Number of FF evals: 3586
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndEscape(Ljava/lang/CharSequence;II)V: I42 Branch 14 IF_ICMPEQ L163 - true: 12300,11425,0| Number of FF evals: 78267
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printComment(Ljava/lang/String;)V: I13 Branch 51 IFNE L319 - true: 36,0,0| Number of FF evals: 2978
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndEscape(Ljava/lang/CharSequence;II)V: Line 174: 208,0,0| Number of FF evals: 433
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I113 Branch 33 IF_ICMPLE L231 - true: 1526,0,0| Number of FF evals: 6837
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndEscape(Ljava/lang/CharSequence;II)V: Line 175: 208,0,0| Number of FF evals: 433
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I123 Branch 36 IF_ICMPLT L231 - true: 1817,0,0| Number of FF evals: 5268
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printComment(Ljava/lang/String;)V: I68 Branch 57 IF_ICMPNE L328 - true: 16253,13097,1425| Number of FF evals: 51576
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I274 Branch 48 IF_ICMPGE L281 - false: 103,0,0| Number of FF evals: 5589
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I51 Branch 26 TABLESWITCH L207 Case 4 - false: 273,0,0| Number of FF evals: 3232
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I127 Branch 37 IF_ICMPLE L231 - false: 901,19,0| Number of FF evals: 5946
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.print(Ljava/lang/Object;)V: I13 Branch 9 IFNONNULL L127 - true: 993,0,0| Number of FF evals: 10192
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.print(Ljava/lang/Object;)V: I13 Branch 9 IFNONNULL L127 - false: 10,0,0| Number of FF evals: 12949
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I199 Branch 45 IF_ICMPGT L253 - false: 1751,868,0| Number of FF evals: 13447
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printComment(Ljava/lang/String;)V: I5 Branch 50 IFNE L316 - true: 6,0,0| Number of FF evals: 3344
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.println()V: I9 Branch 58 IFNULL L353 - true: 44,0,0| Number of FF evals: 915
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndEscape(Ljava/lang/CharSequence;II)V: I48 Branch 16 IF_ICMPEQ L163 - true: 107,0,0| Number of FF evals: 5215
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printComment(Ljava/lang/String;)V: I53 Branch 54 LOOKUPSWITCH L326 Case 13 - true: 6549,5347,262| Number of FF evals: 28715
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I51 Branch 23 TABLESWITCH L207 Case 1 - true: 367,0,0| Number of FF evals: 863
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I40 Branch 22 IFNONNULL L204 - true: 273,0,0| Number of FF evals: 3333
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I137 Branch 38 IF_ICMPGT L233 - false: 1585,0,0| Number of FF evals: 4190
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndEscape(Ljava/lang/CharSequence;II)V: I115 Branch 21 IF_ICMPLE L184 - true: 1,0,0| Number of FF evals: 5651
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.flush()V: I5 Branch 7 IFEQ L100 - true: 269,0,0| Number of FF evals: 968
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndEscape(Ljava/lang/CharSequence;II)V: I70 Branch 19 IF_ICMPNE L168 - false: 211,0,0| Number of FF evals: 3881
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printComment(Ljava/lang/String;)V: I13 Branch 51 IFNE L319 - false: 1681,231,2| Number of FF evals: 7030
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printComment(Ljava/lang/String;)V: I43 Branch 52 IF_ICMPGE L324 - true: 40,0,0| Number of FF evals: 3337
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.<init>(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V: I33 Branch 1 IFNULL L69 - false: 14,0,0| Number of FF evals: 5037
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I285 Branch 49 IF_ICMPNE L283 - false: 103,0,0| Number of FF evals: 4560
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I51 Branch 24 TABLESWITCH L207 Case 2 - true: 273,0,0| Number of FF evals: 647
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I207 Branch 46 IFNE L260 - true: 40,0,0| Number of FF evals: 10889
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printComment(Ljava/lang/String;)V: I53 Branch 53 LOOKUPSWITCH L326 Case 10 - true: 6933,5731,261| Number of FF evals: 28313
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I285 Branch 49 IF_ICMPNE L283 - true: 103,0,0| Number of FF evals: 5495
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I91 Branch 30 IFEQ L224 - true: 81,0,0| Number of FF evals: 2556
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.print(Ljava/lang/Object;)V: I3 Branch 8 IFNONNULL L125 - false: 6,0,0| Number of FF evals: 20900
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printComment(Ljava/lang/String;)V: I61 Branch 56 IF_ICMPGE L328 - true: 20013,18811,872| Number of FF evals: 78303
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printRecords(Ljava/sql/ResultSet;)V: I10 Branch 67 IFEQ L513 - true: 2,0,0| Number of FF evals: 628
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I158 Branch 40 IF_ICMPEQ L241 - true: 5914,5068,347| Number of FF evals: 41111
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printComment(Ljava/lang/String;)V: I61 Branch 56 IF_ICMPGE L328 - false: 6549,5347,259| Number of FF evals: 28715
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printRecords(Ljava/sql/ResultSet;)V: I10 Branch 67 IFEQ L513 - false: 7,0,0| Number of FF evals: 579
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I91 Branch 30 IFEQ L224 - false: 39,0,0| Number of FF evals: 6899
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I167 Branch 43 IF_ICMPNE L241 - false: 259,0,0| Number of FF evals: 4386
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printRecords(Ljava/sql/ResultSet;)V: I18 Branch 68 IF_ICMPGT L514 - false: 5897,4297,704| Number of FF evals: 20091
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I116 Branch 34 IF_ICMPLT L231 - true: 1658,117,0| Number of FF evals: 7316
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndEscape(Ljava/lang/CharSequence;II)V: I45 Branch 15 IF_ICMPEQ L163 - true: 541,0,0| Number of FF evals: 4249
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I120 Branch 35 IF_ICMPLE L231 - true: 1203,0,0| Number of FF evals: 7951
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printComment(Ljava/lang/String;)V: Line 342: 40,0,0| Number of FF evals: 108
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;II)V: I86 Branch 29 IFGT L219 - false: 39,0,0| Number of FF evals: 7386
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printRecords(Ljava/sql/ResultSet;)V: Line 519: 2,0,0| Number of FF evals: 56
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printRecords(Ljava/lang/Iterable;)V: I16 Branch 62 IFEQ L440 - false: 47150,44872,58| Number of FF evals: 78293
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVPrinter.printComment(Ljava/lang/String;)V: I53 Branch 55 LOOKUPSWITCH L326 Default-Case - false: 7324,5901,462| Number of FF evals: 28792
* Search finished after 602s and 1803 generations, 992587 statements, best individual has fitness: 105.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 98%
* Total number of goals: 164
* Number of covered goals: 160
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 94%
* Total number of goals: 137
* Number of covered goals: 129
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 43
* Number of covered goals: 43
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 93%
* Total number of goals: 507
* Number of covered goals: 469
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 2
* Number of covered goals: 1
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 90%
* Total number of goals: 137
* Number of covered goals: 123
* Generated 74 tests with total length 477
* Resulting test suite's coverage: 84% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 15:55:13.459 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.7008666666666666% of time used, but only 33/74 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 46%
* Compiling and checking tests
[MASTER] 15:55:24.040 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:55:24.395 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:55:24.614 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:55:24.776 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:55:24.990 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:55:25.099 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:55:25.101 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.lang.RuntimePermission" "writeFileDescriptor")
java.lang.Thread.getStackTrace(Thread.java:1559)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkWrite(SecurityManager.java:954)
java.io.FileOutputStream.<init>(FileOutputStream.java:245)
java.io.FileWriter.<init>(FileWriter.java:116)
org.evosuite.runtime.mock.java.io.MockFileWriter.<init>(MockFileWriter.java:79)
org.apache.commons.csv.CSVPrinter_79_tmp__ESTest.test0(CSVPrinter_79_tmp__ESTest.java:25)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:498)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:288)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:282)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:748)

[MASTER] 15:55:25.101 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FileDescriptor fileDescriptor0 = new FileDescriptor();
MockFileWriter mockFileWriter0 = new MockFileWriter(fileDescriptor0);
CSVFormat cSVFormat0 = CSVFormat.RFC4180;
CSVPrinter cSVPrinter0 = new CSVPrinter(mockFileWriter0, cSVFormat0);
cSVPrinter0.close();

[MASTER] 15:55:28.480 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:55:28.481 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.lang.RuntimePermission" "writeFileDescriptor")
java.lang.Thread.getStackTrace(Thread.java:1559)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkWrite(SecurityManager.java:954)
java.io.FileOutputStream.<init>(FileOutputStream.java:245)
java.io.FileWriter.<init>(FileWriter.java:116)
org.evosuite.runtime.mock.java.io.MockFileWriter.<init>(MockFileWriter.java:79)
org.apache.commons.csv.CSVPrinter_81_tmp__ESTest.test0(CSVPrinter_81_tmp__ESTest.java:25)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:498)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:288)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:282)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:748)

[MASTER] 15:55:28.481 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FileDescriptor fileDescriptor0 = new FileDescriptor();
MockFileWriter mockFileWriter0 = new MockFileWriter(fileDescriptor0);
CSVFormat cSVFormat0 = CSVFormat.TDF;
CSVPrinter cSVPrinter0 = new CSVPrinter(mockFileWriter0, cSVFormat0);
cSVPrinter0.flush();

[MASTER] 15:55:31.831 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:55:32.058 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:55:32.615 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:55:32.785 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:55:32.893 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:55:33.056 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:55:33.180 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:55:33.332 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:55:33.424 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:55:33.588 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:55:33.788 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:55:33.921 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:55:34.038 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:55:34.128 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:55:34.243 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:55:34.326 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:55:34.421 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:55:34.603 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:55:34.739 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:55:36.192 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.lang.RuntimePermission" "writeFileDescriptor")
java.lang.Thread.getStackTrace(Thread.java:1559)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkWrite(SecurityManager.java:954)
java.io.FileOutputStream.<init>(FileOutputStream.java:245)
java.io.FileWriter.<init>(FileWriter.java:116)
org.evosuite.runtime.mock.java.io.MockFileWriter.<init>(MockFileWriter.java:79)
org.apache.commons.csv.CSVPrinter_109_tmp__ESTest.test0(CSVPrinter_109_tmp__ESTest.java:28)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:498)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:288)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:282)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:748)

[MASTER] 15:55:36.192 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FileDescriptor fileDescriptor0 = new FileDescriptor();
assertFalse(fileDescriptor0.valid());
assertNotNull(fileDescriptor0);

MockFileWriter mockFileWriter0 = new MockFileWriter(fileDescriptor0);
assertNotNull(mockFileWriter0);

CSVFormat cSVFormat0 = CSVFormat.TDF;
assertEquals('\"', (char)cSVFormat0.getQuoteCharacter());
assertFalse(cSVFormat0.isNullStringSet());
assertNull(cSVFormat0.getNullString());
assertFalse(cSVFormat0.isCommentMarkerSet());
assertEquals('\t', cSVFormat0.getDelimiter());
assertNull(cSVFormat0.getCommentMarker());
assertEquals("\r\n", cSVFormat0.getRecordSeparator());
assertFalse(cSVFormat0.getAllowMissingColumnNames());
assertTrue(cSVFormat0.isQuoteCharacterSet());
assertNull(cSVFormat0.getEscapeCharacter());
assertFalse(cSVFormat0.getIgnoreHeaderCase());
assertTrue(cSVFormat0.getIgnoreSurroundingSpaces());
assertNull(cSVFormat0.getQuoteMode());
assertFalse(cSVFormat0.isEscapeCharacterSet());
assertTrue(cSVFormat0.getIgnoreEmptyLines());
assertFalse(cSVFormat0.getSkipHeaderRecord());
assertNotNull(cSVFormat0);

CSVPrinter cSVPrinter0 = new CSVPrinter(mockFileWriter0, cSVFormat0);
assertFalse(fileDescriptor0.valid());
assertEquals('\"', (char)cSVFormat0.getQuoteCharacter());
assertFalse(cSVFormat0.isNullStringSet());
assertNull(cSVFormat0.getNullString());
assertFalse(cSVFormat0.isCommentMarkerSet());
assertEquals('\t', cSVFormat0.getDelimiter());
assertNull(cSVFormat0.getCommentMarker());
assertEquals("\r\n", cSVFormat0.getRecordSeparator());
assertFalse(cSVFormat0.getAllowMissingColumnNames());
assertTrue(cSVFormat0.isQuoteCharacterSet());
assertNull(cSVFormat0.getEscapeCharacter());
assertFalse(cSVFormat0.getIgnoreHeaderCase());
assertTrue(cSVFormat0.getIgnoreSurroundingSpaces());
assertNull(cSVFormat0.getQuoteMode());
assertFalse(cSVFormat0.isEscapeCharacterSet());
assertTrue(cSVFormat0.getIgnoreEmptyLines());
assertFalse(cSVFormat0.getSkipHeaderRecord());
assertNotNull(cSVPrinter0);

cSVPrinter0.println();

[MASTER] 15:55:39.457 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.lang.RuntimePermission" "writeFileDescriptor")
java.lang.Thread.getStackTrace(Thread.java:1559)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkWrite(SecurityManager.java:954)
java.io.FileOutputStream.<init>(FileOutputStream.java:245)
java.io.FileWriter.<init>(FileWriter.java:116)
org.evosuite.runtime.mock.java.io.MockFileWriter.<init>(MockFileWriter.java:79)
org.apache.commons.csv.CSVPrinter_111_tmp__ESTest.test0(CSVPrinter_111_tmp__ESTest.java:30)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:498)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:288)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:282)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:748)

[MASTER] 15:55:39.457 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FileDescriptor fileDescriptor0 = new FileDescriptor();
assertFalse(fileDescriptor0.valid());
assertNotNull(fileDescriptor0);

MockFileWriter mockFileWriter0 = new MockFileWriter(fileDescriptor0);
assertNotNull(mockFileWriter0);

CSVFormat cSVFormat0 = CSVFormat.RFC4180;
assertFalse(cSVFormat0.isEscapeCharacterSet());
assertNull(cSVFormat0.getCommentMarker());
assertEquals("\r\n", cSVFormat0.getRecordSeparator());
assertNull(cSVFormat0.getQuoteMode());
assertTrue(cSVFormat0.isQuoteCharacterSet());
assertFalse(cSVFormat0.getIgnoreEmptyLines());
assertEquals('\"', (char)cSVFormat0.getQuoteCharacter());
assertFalse(cSVFormat0.getSkipHeaderRecord());
assertNull(cSVFormat0.getNullString());
assertFalse(cSVFormat0.getIgnoreSurroundingSpaces());
assertFalse(cSVFormat0.getIgnoreHeaderCase());
assertFalse(cSVFormat0.isNullStringSet());
assertFalse(cSVFormat0.isCommentMarkerSet());
assertNull(cSVFormat0.getEscapeCharacter());
assertEquals(',', cSVFormat0.getDelimiter());
assertFalse(cSVFormat0.getAllowMissingColumnNames());
assertNotNull(cSVFormat0);

RowSetMetaDataImpl rowSetMetaDataImpl0 = new RowSetMetaDataImpl();
assertNotNull(rowSetMetaDataImpl0);

CSVFormat cSVFormat1 = cSVFormat0.withHeader((ResultSetMetaData) rowSetMetaDataImpl0);
assertNotSame(cSVFormat0, cSVFormat1);
assertNotSame(cSVFormat1, cSVFormat0);
assertFalse(cSVFormat0.isEscapeCharacterSet());
assertNull(cSVFormat0.getCommentMarker());
assertEquals("\r\n", cSVFormat0.getRecordSeparator());
assertNull(cSVFormat0.getQuoteMode());
assertTrue(cSVFormat0.isQuoteCharacterSet());
assertFalse(cSVFormat0.getIgnoreEmptyLines());
assertEquals('\"', (char)cSVFormat0.getQuoteCharacter());
assertFalse(cSVFormat0.getSkipHeaderRecord());
assertNull(cSVFormat0.getNullString());
assertFalse(cSVFormat0.getIgnoreSurroundingSpaces());
assertFalse(cSVFormat0.getIgnoreHeaderCase());
assertFalse(cSVFormat0.isNullStringSet());
assertFalse(cSVFormat0.isCommentMarkerSet());
assertNull(cSVFormat0.getEscapeCharacter());
assertEquals(',', cSVFormat0.getDelimiter());
assertFalse(cSVFormat0.getAllowMissingColumnNames());
assertFalse(cSVFormat1.isEscapeCharacterSet());
assertFalse(cSVFormat1.isNullStringSet());
assertNull(cSVFormat1.getQuoteMode());
assertFalse(cSVFormat1.getSkipHeaderRecord());
assertEquals('\"', (char)cSVFormat1.getQuoteCharacter());
assertFalse(cSVFormat1.getIgnoreSurroundingSpaces());
assertTrue(cSVFormat1.isQuoteCharacterSet());
assertNull(cSVFormat1.getEscapeCharacter());
assertFalse(cSVFormat1.isCommentMarkerSet());
assertFalse(cSVFormat1.getIgnoreHeaderCase());
assertFalse(cSVFormat1.getIgnoreEmptyLines());
assertNull(cSVFormat1.getNullString());
assertNull(cSVFormat1.getCommentMarker());
assertEquals(',', cSVFormat1.getDelimiter());
assertEquals("\r\n", cSVFormat1.getRecordSeparator());
assertFalse(cSVFormat1.getAllowMissingColumnNames());
assertFalse(cSVFormat1.equals((Object)cSVFormat0));
assertNotNull(cSVFormat1);

CSVPrinter cSVPrinter0 = new CSVPrinter(mockFileWriter0, cSVFormat1);

[MASTER] 15:55:43.370 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.lang.RuntimePermission" "writeFileDescriptor")
java.lang.Thread.getStackTrace(Thread.java:1559)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkWrite(SecurityManager.java:954)
java.io.FileOutputStream.<init>(FileOutputStream.java:245)
java.io.FileWriter.<init>(FileWriter.java:116)
org.evosuite.runtime.mock.java.io.MockFileWriter.<init>(MockFileWriter.java:79)
org.apache.commons.csv.CSVPrinter_117_tmp__ESTest.test0(CSVPrinter_117_tmp__ESTest.java:28)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:498)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:288)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:282)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:748)

[MASTER] 15:55:43.371 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FileDescriptor fileDescriptor0 = new FileDescriptor();
assertFalse(fileDescriptor0.valid());
assertNotNull(fileDescriptor0);

MockFileWriter mockFileWriter0 = new MockFileWriter(fileDescriptor0);
assertNotNull(mockFileWriter0);

CSVFormat cSVFormat0 = CSVFormat.RFC4180;
assertFalse(cSVFormat0.getIgnoreHeaderCase());
assertNull(cSVFormat0.getQuoteMode());
assertFalse(cSVFormat0.getSkipHeaderRecord());
assertFalse(cSVFormat0.getIgnoreEmptyLines());
assertEquals(',', cSVFormat0.getDelimiter());
assertNull(cSVFormat0.getCommentMarker());
assertEquals("\r\n", cSVFormat0.getRecordSeparator());
assertFalse(cSVFormat0.isCommentMarkerSet());
assertTrue(cSVFormat0.isQuoteCharacterSet());
assertFalse(cSVFormat0.isEscapeCharacterSet());
assertEquals('\"', (char)cSVFormat0.getQuoteCharacter());
assertFalse(cSVFormat0.getAllowMissingColumnNames());
assertNull(cSVFormat0.getEscapeCharacter());
assertNull(cSVFormat0.getNullString());
assertFalse(cSVFormat0.getIgnoreSurroundingSpaces());
assertFalse(cSVFormat0.isNullStringSet());
assertNotNull(cSVFormat0);

CSVPrinter cSVPrinter0 = cSVFormat0.print(mockFileWriter0);
assertFalse(fileDescriptor0.valid());
assertFalse(cSVFormat0.getIgnoreHeaderCase());
assertNull(cSVFormat0.getQuoteMode());
assertFalse(cSVFormat0.getSkipHeaderRecord());
assertFalse(cSVFormat0.getIgnoreEmptyLines());
assertEquals(',', cSVFormat0.getDelimiter());
assertNull(cSVFormat0.getCommentMarker());
assertEquals("\r\n", cSVFormat0.getRecordSeparator());
assertFalse(cSVFormat0.isCommentMarkerSet());
assertTrue(cSVFormat0.isQuoteCharacterSet());
assertFalse(cSVFormat0.isEscapeCharacterSet());
assertEquals('\"', (char)cSVFormat0.getQuoteCharacter());
assertFalse(cSVFormat0.getAllowMissingColumnNames());
assertNull(cSVFormat0.getEscapeCharacter());
assertNull(cSVFormat0.getNullString());
assertFalse(cSVFormat0.getIgnoreSurroundingSpaces());
assertFalse(cSVFormat0.isNullStringSet());
assertNotNull(cSVPrinter0);

cSVPrinter0.print(mockFileWriter0);

[MASTER] 15:55:48.576 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.lang.RuntimePermission" "writeFileDescriptor")
java.lang.Thread.getStackTrace(Thread.java:1559)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkWrite(SecurityManager.java:954)
java.io.FileOutputStream.<init>(FileOutputStream.java:245)
java.io.FileWriter.<init>(FileWriter.java:116)
org.evosuite.runtime.mock.java.io.MockFileWriter.<init>(MockFileWriter.java:79)
org.apache.commons.csv.CSVPrinter_129_tmp__ESTest.test0(CSVPrinter_129_tmp__ESTest.java:28)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:498)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:288)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:282)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:748)

[MASTER] 15:55:48.577 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FileDescriptor fileDescriptor0 = new FileDescriptor();
assertFalse(fileDescriptor0.valid());
assertNotNull(fileDescriptor0);

MockFileWriter mockFileWriter0 = new MockFileWriter(fileDescriptor0);
assertNotNull(mockFileWriter0);

CSVFormat cSVFormat0 = CSVFormat.TDF;
assertFalse(cSVFormat0.getIgnoreHeaderCase());
assertTrue(cSVFormat0.isQuoteCharacterSet());
assertNull(cSVFormat0.getEscapeCharacter());
assertNull(cSVFormat0.getQuoteMode());
assertFalse(cSVFormat0.isCommentMarkerSet());
assertNull(cSVFormat0.getCommentMarker());
assertEquals("\r\n", cSVFormat0.getRecordSeparator());
assertTrue(cSVFormat0.getIgnoreSurroundingSpaces());
assertEquals('\t', cSVFormat0.getDelimiter());
assertNull(cSVFormat0.getNullString());
assertEquals('\"', (char)cSVFormat0.getQuoteCharacter());
assertFalse(cSVFormat0.getAllowMissingColumnNames());
assertFalse(cSVFormat0.isNullStringSet());
assertFalse(cSVFormat0.isEscapeCharacterSet());
assertTrue(cSVFormat0.getIgnoreEmptyLines());
assertFalse(cSVFormat0.getSkipHeaderRecord());
assertNotNull(cSVFormat0);

CSVPrinter cSVPrinter0 = new CSVPrinter(mockFileWriter0, cSVFormat0);
assertFalse(fileDescriptor0.valid());
assertFalse(cSVFormat0.getIgnoreHeaderCase());
assertTrue(cSVFormat0.isQuoteCharacterSet());
assertNull(cSVFormat0.getEscapeCharacter());
assertNull(cSVFormat0.getQuoteMode());
assertFalse(cSVFormat0.isCommentMarkerSet());
assertNull(cSVFormat0.getCommentMarker());
assertEquals("\r\n", cSVFormat0.getRecordSeparator());
assertTrue(cSVFormat0.getIgnoreSurroundingSpaces());
assertEquals('\t', cSVFormat0.getDelimiter());
assertNull(cSVFormat0.getNullString());
assertEquals('\"', (char)cSVFormat0.getQuoteCharacter());
assertFalse(cSVFormat0.getAllowMissingColumnNames());
assertFalse(cSVFormat0.isNullStringSet());
assertFalse(cSVFormat0.isEscapeCharacterSet());
assertTrue(cSVFormat0.getIgnoreEmptyLines());
assertFalse(cSVFormat0.getSkipHeaderRecord());
assertNotNull(cSVPrinter0);

Object[] objectArray0 = new Object[3];
cSVPrinter0.printRecord(objectArray0);

[MASTER] 15:55:52.856 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.lang.RuntimePermission" "writeFileDescriptor")
java.lang.Thread.getStackTrace(Thread.java:1559)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkWrite(SecurityManager.java:954)
java.io.FileOutputStream.<init>(FileOutputStream.java:245)
java.io.FileWriter.<init>(FileWriter.java:116)
org.evosuite.runtime.mock.java.io.MockFileWriter.<init>(MockFileWriter.java:79)
org.apache.commons.csv.CSVPrinter_138_tmp__ESTest.test0(CSVPrinter_138_tmp__ESTest.java:28)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:498)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:288)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:282)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:748)

[MASTER] 15:55:52.857 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FileDescriptor fileDescriptor0 = new FileDescriptor();
assertFalse(fileDescriptor0.valid());
assertNotNull(fileDescriptor0);

MockFileWriter mockFileWriter0 = new MockFileWriter(fileDescriptor0);
assertNotNull(mockFileWriter0);

CSVFormat cSVFormat0 = CSVFormat.TDF;
assertTrue(cSVFormat0.getIgnoreSurroundingSpaces());
assertNull(cSVFormat0.getQuoteMode());
assertTrue(cSVFormat0.getIgnoreEmptyLines());
assertNull(cSVFormat0.getCommentMarker());
assertEquals("\r\n", cSVFormat0.getRecordSeparator());
assertFalse(cSVFormat0.getIgnoreHeaderCase());
assertFalse(cSVFormat0.isCommentMarkerSet());
assertNull(cSVFormat0.getEscapeCharacter());
assertFalse(cSVFormat0.getAllowMissingColumnNames());
assertNull(cSVFormat0.getNullString());
assertFalse(cSVFormat0.isNullStringSet());
assertEquals('\t', cSVFormat0.getDelimiter());
assertEquals('\"', (char)cSVFormat0.getQuoteCharacter());
assertFalse(cSVFormat0.getSkipHeaderRecord());
assertTrue(cSVFormat0.isQuoteCharacterSet());
assertFalse(cSVFormat0.isEscapeCharacterSet());
assertNotNull(cSVFormat0);

CSVPrinter cSVPrinter0 = new CSVPrinter(mockFileWriter0, cSVFormat0);
assertFalse(fileDescriptor0.valid());
assertTrue(cSVFormat0.getIgnoreSurroundingSpaces());
assertNull(cSVFormat0.getQuoteMode());
assertTrue(cSVFormat0.getIgnoreEmptyLines());
assertNull(cSVFormat0.getCommentMarker());
assertEquals("\r\n", cSVFormat0.getRecordSeparator());
assertFalse(cSVFormat0.getIgnoreHeaderCase());
assertFalse(cSVFormat0.isCommentMarkerSet());
assertNull(cSVFormat0.getEscapeCharacter());
assertFalse(cSVFormat0.getAllowMissingColumnNames());
assertNull(cSVFormat0.getNullString());
assertFalse(cSVFormat0.isNullStringSet());
assertEquals('\t', cSVFormat0.getDelimiter());
assertEquals('\"', (char)cSVFormat0.getQuoteCharacter());
assertFalse(cSVFormat0.getSkipHeaderRecord());
assertTrue(cSVFormat0.isQuoteCharacterSet());
assertFalse(cSVFormat0.isEscapeCharacterSet());
assertNotNull(cSVPrinter0);

Object[] objectArray0 = new Object[4];
cSVPrinter0.printRecords(objectArray0);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 7
* Writing tests to file
* Writing JUnit test case 'CSVPrinter_ESTest' to results/Csv-13/org.apache.commons.csv.CSVPrinter/BBC-F0-100/tests/7
* Done!

* Computation finished
