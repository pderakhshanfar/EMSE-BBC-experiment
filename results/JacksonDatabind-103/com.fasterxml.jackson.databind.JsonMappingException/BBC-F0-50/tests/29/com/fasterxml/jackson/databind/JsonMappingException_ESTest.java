/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 02 02:35:46 GMT 2021
 */

package com.fasterxml.jackson.databind;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.core.JsonLocation;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonToken;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.core.filter.FilteringParserDelegate;
import com.fasterxml.jackson.core.filter.TokenFilter;
import com.fasterxml.jackson.core.io.IOContext;
import com.fasterxml.jackson.core.json.ReaderBasedJsonParser;
import com.fasterxml.jackson.core.json.UTF8JsonGenerator;
import com.fasterxml.jackson.core.json.UTF8StreamJsonParser;
import com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
import com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer;
import com.fasterxml.jackson.core.util.BufferRecycler;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.DeserializationFeature;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.ObjectReader;
import com.fasterxml.jackson.databind.SerializerProvider;
import com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig;
import com.fasterxml.jackson.databind.deser.BeanDeserializerFactory;
import com.fasterxml.jackson.databind.deser.DefaultDeserializationContext;
import com.fasterxml.jackson.databind.node.ArrayNode;
import com.fasterxml.jackson.databind.node.JsonNodeFactory;
import com.fasterxml.jackson.databind.node.TreeTraversingParser;
import com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;
import com.fasterxml.jackson.databind.type.PlaceholderForType;
import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.ByteArrayOutputStream;
import java.io.CharArrayWriter;
import java.io.Closeable;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PipedWriter;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.sql.SQLDataException;
import java.sql.SQLException;
import java.sql.SQLNonTransientConnectionException;
import java.sql.SQLNonTransientException;
import java.sql.SQLSyntaxErrorException;
import java.sql.SQLTransactionRollbackException;
import java.sql.SQLTransientConnectionException;
import java.sql.SQLTransientException;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockIOException;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JsonMappingException_ESTest extends JsonMappingException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SQLTransientConnectionException sQLTransientConnectionException0 = new SQLTransientConnectionException();
      JsonMappingException.Reference jsonMappingException_Reference0 = new JsonMappingException.Reference();
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[1];
      StackTraceElement stackTraceElement0 = new StackTraceElement(";t8[D>\"2\\", ";t8[D>\"2\\", ";t8[D>\"2\\", 6);
      stackTraceElementArray0[0] = stackTraceElement0;
      sQLTransientConnectionException0.setStackTrace(stackTraceElementArray0);
      SQLException sQLException0 = new SQLException("3*$SI$Fp6^gI`T", "3*$SI$Fp6^gI`T", (-1997), sQLTransientConnectionException0);
      StackTraceElement[] stackTraceElementArray1 = new StackTraceElement[0];
      sQLException0.setStackTrace(stackTraceElementArray1);
      sQLTransientConnectionException0.setNextException(sQLException0);
      JsonMappingException jsonMappingException0 = JsonMappingException.wrapWithPath((Throwable) sQLTransientConnectionException0, jsonMappingException_Reference0);
      ObjectMapper objectMapper0 = new ObjectMapper();
      try { 
        objectMapper0.valueToTree((Object) jsonMappingException0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Loop has been executed more times than the allowed 10000 (through reference chain: java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"nextException\"]->java.sql.SQLException[\"cause\"]->java.sql.SQLTransientConnectionException[\"stackTrace\"]->java.lang.StackTraceElement[0]->java.lang.StackTraceElement[\"className\"])
         //
         verifyException("com.fasterxml.jackson.databind.ObjectMapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SQLSyntaxErrorException sQLSyntaxErrorException0 = new SQLSyntaxErrorException((String) null);
      MockIOException mockIOException0 = new MockIOException("", sQLSyntaxErrorException0);
      JsonMappingException jsonMappingException0 = JsonMappingException.wrapWithPath((Throwable) mockIOException0, (JsonMappingException.Reference) null);
      jsonMappingException0.prependPath((Object) "", 0);
      // Undeclared exception!
      try { 
        jsonMappingException0.getLocalizedMessage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JsonMappingException.Reference jsonMappingException_Reference0 = new JsonMappingException.Reference();
      String string0 = jsonMappingException_Reference0.getDescription();
      assertEquals("UNKNOWN[?]", string0);
      assertNotNull(string0);
      
      String string1 = jsonMappingException_Reference0.getFieldName();
      assertEquals((-1), jsonMappingException_Reference0.getIndex());
      assertNull(string1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
      SQLTransientConnectionException sQLTransientConnectionException0 = new SQLTransientConnectionException("S.", "com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer");
      JsonMappingException jsonMappingException0 = JsonMappingException.from((SerializerProvider) defaultSerializerProvider_Impl0, (String) null, (Throwable) sQLTransientConnectionException0);
      StringBuilder stringBuilder0 = new StringBuilder("FAIL_ON_INVALID_SUBTYPE");
      jsonMappingException0._appendPathDesc(stringBuilder0);
      assertEquals("FAIL_ON_INVALID_SUBTYPE", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JsonMappingException jsonMappingException0 = new JsonMappingException((Closeable) null, "O3C{D2");
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      PlaceholderForType placeholderForType0 = new PlaceholderForType(4278);
      JsonMappingException jsonMappingException0 = defaultDeserializationContext_Impl0.invalidTypeIdException(placeholderForType0, "o>g$:", "T=Kr.FZhLg>xlj");
      String string0 = jsonMappingException0.toString();
      assertEquals("com.fasterxml.jackson.databind.exc.InvalidTypeIdException: Could not resolve type id 'o>g$:' as a subtype of $4279: T=Kr.FZhLg>xlj", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.withExactBigDecimals(false);
      ArrayNode arrayNode0 = jsonNodeFactory0.arrayNode();
      JsonParser jsonParser0 = arrayNode0.traverse((ObjectCodec) null);
      JsonMappingException jsonMappingException0 = JsonMappingException.from(jsonParser0, "Afa ZIeN5Z`Ud=|wm");
      TreeTraversingParser treeTraversingParser0 = (TreeTraversingParser)jsonMappingException0.getProcessor();
      assertNull(treeTraversingParser0.getLastClearedToken());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JsonFactory jsonFactory0 = new JsonFactory();
      File file0 = MockFile.createTempFile("JSON", "JSON");
      JsonParser jsonParser0 = jsonFactory0.createParser(file0);
      SQLTransactionRollbackException sQLTransactionRollbackException0 = new SQLTransactionRollbackException("JSON", "", 512);
      SQLNonTransientConnectionException sQLNonTransientConnectionException0 = new SQLNonTransientConnectionException(sQLTransactionRollbackException0);
      JsonMappingException jsonMappingException0 = JsonMappingException.from(jsonParser0, "JSON", (Throwable) sQLNonTransientConnectionException0);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "JSON");
      StringBuilder stringBuilder1 = jsonMappingException0.getPathReference(stringBuilder0);
      assertSame(stringBuilder0, stringBuilder1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JsonMappingException jsonMappingException0 = new JsonMappingException("com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility");
      String string0 = jsonMappingException0.getPathReference();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      Class<ByteArrayOutputStream> class0 = ByteArrayOutputStream.class;
      JsonMappingException jsonMappingException0 = defaultDeserializationContext_Impl0.weirdStringException("com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility", class0, "com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility");
      JsonMappingException jsonMappingException1 = JsonMappingException.from((DeserializationContext) defaultDeserializationContext_Impl0, "p", (Throwable) jsonMappingException0);
      assertNotNull(jsonMappingException1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
      SQLTransientConnectionException sQLTransientConnectionException0 = new SQLTransientConnectionException("S.", "com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer");
      JsonMappingException jsonMappingException0 = JsonMappingException.from((SerializerProvider) defaultSerializerProvider_Impl0, (String) null, (Throwable) sQLTransientConnectionException0);
      String string0 = jsonMappingException0._buildMessage();
      assertEquals("N/A", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JsonFactory jsonFactory0 = new JsonFactory();
      File file0 = MockFile.createTempFile("JSON", "JSON");
      JsonParser jsonParser0 = jsonFactory0.createParser(file0);
      TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;
      FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(jsonParser0, tokenFilter0, false, false);
      // Undeclared exception!
      try { 
        JsonMappingException.wrapWithPath((Throwable) null, (Object) filteringParserDelegate0, "JSON");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.JsonMappingException", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SQLException sQLException0 = new SQLException("Ct,N]6WCrG|(NDG");
      // Undeclared exception!
      try { 
        JsonMappingException.wrapWithPath((Throwable) null, (Object) sQLException0, 68);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.JsonMappingException", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0, 3970);
      JsonMappingException.Reference jsonMappingException_Reference0 = new JsonMappingException.Reference(pushbackInputStream0, 70);
      // Undeclared exception!
      try { 
        JsonMappingException.wrapWithPath((Throwable) null, jsonMappingException_Reference0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.JsonMappingException", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      Class<BufferedInputStream> class0 = BufferedInputStream.class;
      JsonMappingException jsonMappingException0 = defaultDeserializationContext_Impl0.weirdStringException(">/v_", class0, ">/v_");
      // Undeclared exception!
      try { 
        jsonMappingException0.prependPath((Object) defaultDeserializationContext_Impl0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot pass null fieldName
         //
         verifyException("com.fasterxml.jackson.databind.JsonMappingException$Reference", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SQLException sQLException0 = new SQLException((String) null);
      JsonMappingException.Reference jsonMappingException_Reference0 = new JsonMappingException.Reference("ACt{N]6:CrG|wND6G", "O3C{D2");
      JsonMappingException jsonMappingException0 = JsonMappingException.wrapWithPath((Throwable) sQLException0, jsonMappingException_Reference0);
      // Undeclared exception!
      try { 
        jsonMappingException0.getPathReference((StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SQLSyntaxErrorException sQLSyntaxErrorException0 = new SQLSyntaxErrorException("", "");
      MockIOException mockIOException0 = new MockIOException("", sQLSyntaxErrorException0);
      JsonMappingException jsonMappingException0 = JsonMappingException.wrapWithPath((Throwable) mockIOException0, (JsonMappingException.Reference) null);
      // Undeclared exception!
      try { 
        jsonMappingException0.getPathReference();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SQLSyntaxErrorException sQLSyntaxErrorException0 = new SQLSyntaxErrorException((String) null);
      MockIOException mockIOException0 = new MockIOException("", sQLSyntaxErrorException0);
      JsonMappingException jsonMappingException0 = JsonMappingException.wrapWithPath((Throwable) mockIOException0, (JsonMappingException.Reference) null);
      // Undeclared exception!
      try { 
        jsonMappingException0.getMessage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      try { 
        JsonMappingException.fromUnexpectedIOE((IOException) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.JsonMappingException", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SQLTransientConnectionException sQLTransientConnectionException0 = new SQLTransientConnectionException("#9=b3A[_(]+v[R", "#9=b3A[_(]+v[R");
      // Undeclared exception!
      try { 
        JsonMappingException.from((SerializerProvider) null, "#9=b3A[_(]+v[R", (Throwable) sQLTransientConnectionException0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.JsonMappingException", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try { 
        JsonMappingException.from((DeserializationContext) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.JsonMappingException", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
      JsonMappingException jsonMappingException0 = JsonMappingException.from((SerializerProvider) defaultSerializerProvider_Impl0, "I/:U+lqlT (");
      FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, (TokenFilter) null, true, true);
      // Undeclared exception!
      try { 
        JsonMappingException.from((JsonParser) filteringParserDelegate0, "UNKNOWN[?]", (Throwable) jsonMappingException0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.filter.FilteringParserDelegate", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SQLSyntaxErrorException sQLSyntaxErrorException0 = new SQLSyntaxErrorException("", "");
      MockIOException mockIOException0 = new MockIOException("", sQLSyntaxErrorException0);
      JsonMappingException jsonMappingException0 = JsonMappingException.wrapWithPath((Throwable) mockIOException0, (JsonMappingException.Reference) null);
      // Undeclared exception!
      try { 
        jsonMappingException0._buildMessage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SQLDataException sQLDataException0 = new SQLDataException();
      PipedWriter pipedWriter0 = new PipedWriter();
      JsonMappingException jsonMappingException0 = JsonMappingException.wrapWithPath((Throwable) sQLDataException0, (Object) pipedWriter0, "eSMF%c^t");
      // Undeclared exception!
      try { 
        jsonMappingException0._appendPathDesc((StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
      SQLTransientConnectionException sQLTransientConnectionException0 = new SQLTransientConnectionException("S.", "com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer");
      JsonMappingException jsonMappingException0 = JsonMappingException.from((SerializerProvider) defaultSerializerProvider_Impl0, (String) null, (Throwable) sQLTransientConnectionException0);
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      Class<FilteringParserDelegate> class0 = FilteringParserDelegate.class;
      JsonMappingException jsonMappingException1 = defaultDeserializationContext_Impl0.weirdKeyException(class0, "com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer", (String) null);
      JsonMappingException.Reference jsonMappingException_Reference0 = new JsonMappingException.Reference(jsonMappingException1);
      jsonMappingException0.prependPath(jsonMappingException_Reference0);
      jsonMappingException0.prependPath(jsonMappingException_Reference0);
      assertEquals((-1), jsonMappingException_Reference0.getIndex());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JsonMappingException jsonMappingException0 = new JsonMappingException("com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility");
      JsonMappingException.Reference jsonMappingException_Reference0 = new JsonMappingException.Reference("com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility");
      JsonMappingException.wrapWithPath((Throwable) jsonMappingException0, jsonMappingException_Reference0);
      assertEquals((-1), jsonMappingException_Reference0.getIndex());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.instance;
      ArrayNode arrayNode0 = jsonNodeFactory0.arrayNode();
      JsonParser jsonParser0 = arrayNode0.traverse((ObjectCodec) null);
      SQLTransientConnectionException sQLTransientConnectionException0 = new SQLTransientConnectionException("com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer", "S.");
      DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
      JsonMappingException jsonMappingException0 = JsonMappingException.from((SerializerProvider) defaultSerializerProvider_Impl0, "^QAlBj^Y<g\"94Mha", (Throwable) sQLTransientConnectionException0);
      JsonMappingException jsonMappingException1 = new JsonMappingException(jsonParser0, "", jsonMappingException0);
      assertFalse(jsonMappingException1.equals((Object)jsonMappingException0));
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
      SQLTransientConnectionException sQLTransientConnectionException0 = new SQLTransientConnectionException("S.", "com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer");
      JsonMappingException jsonMappingException0 = JsonMappingException.from((SerializerProvider) defaultSerializerProvider_Impl0, (String) null, (Throwable) sQLTransientConnectionException0);
      MockFileWriter mockFileWriter0 = new MockFileWriter("S.", true);
      JsonMappingException jsonMappingException1 = new JsonMappingException(mockFileWriter0, "", jsonMappingException0);
      String string0 = jsonMappingException1.getMessage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ObjectMapper objectMapper0 = new ObjectMapper();
      DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();
      StringReader stringReader0 = new StringReader("Sp@(\"!34Q` K`zkhQ");
      BufferRecycler bufferRecycler0 = new BufferRecycler();
      IOContext iOContext0 = new IOContext(bufferRecycler0, deserializationContext0, false);
      CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
      ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, objectMapper0, charsToNameCanonicalizer0);
      Class<FilteringParserDelegate> class0 = FilteringParserDelegate.class;
      JsonToken jsonToken0 = JsonToken.START_OBJECT;
      JsonMappingException jsonMappingException0 = deserializationContext0.wrongTokenException((JsonParser) readerBasedJsonParser0, (Class<?>) class0, jsonToken0, "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$6");
      assertNotNull(jsonMappingException0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
      JsonFactory jsonFactory0 = new JsonFactory();
      DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0, defaultSerializerProvider_Impl0, defaultDeserializationContext_Impl0);
      byte[] byteArray0 = new byte[3];
      UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 61, pushbackInputStream0, objectMapper0, (ByteQuadsCanonicalizer) null, byteArray0, (byte)75, 335, false);
      JsonMappingException.Reference jsonMappingException_Reference0 = new JsonMappingException.Reference(uTF8StreamJsonParser0, "");
      String string0 = jsonMappingException_Reference0.getDescription();
      assertNotNull(string0);
      assertEquals("com.fasterxml.jackson.core.json.UTF8StreamJsonParser[\"\"]", string0);
      assertEquals((-1), jsonMappingException_Reference0.getIndex());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      JsonMappingException.Reference jsonMappingException_Reference0 = new JsonMappingException.Reference();
      jsonMappingException_Reference0.getDescription();
      String string0 = jsonMappingException_Reference0.getDescription();
      assertNotNull(string0);
      assertEquals((-1), jsonMappingException_Reference0.getIndex());
      assertEquals("UNKNOWN[?]", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Object object0 = new Object();
      JsonMappingException.Reference jsonMappingException_Reference0 = new JsonMappingException.Reference(object0, 464);
      JsonMappingException.Reference jsonMappingException_Reference1 = null;
      try {
        jsonMappingException_Reference1 = new JsonMappingException.Reference(jsonMappingException_Reference0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot pass null fieldName
         //
         verifyException("com.fasterxml.jackson.databind.JsonMappingException$Reference", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
      SQLTransientConnectionException sQLTransientConnectionException0 = new SQLTransientConnectionException("S.", "com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer");
      JsonMappingException jsonMappingException0 = JsonMappingException.from((SerializerProvider) defaultSerializerProvider_Impl0, (String) null, (Throwable) sQLTransientConnectionException0);
      String string0 = jsonMappingException0.getMessage();
      assertEquals("N/A", string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
      JsonMappingException.Reference jsonMappingException_Reference0 = new JsonMappingException.Reference(defaultSerializerProvider_Impl0);
      String string0 = jsonMappingException_Reference0.toString();
      assertEquals((-1), jsonMappingException_Reference0.getIndex());
      assertEquals("com.fasterxml.jackson.databind.ser.DefaultSerializerProvider$Impl[?]", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      Float float0 = new Float((-2844.8F));
      Class<BufferedReader> class0 = BufferedReader.class;
      JsonMappingException jsonMappingException0 = defaultDeserializationContext_Impl0.weirdNumberException(float0, class0, "Oaw8");
      StringBuilder stringBuilder0 = jsonMappingException0.getPathReference((StringBuilder) null);
      assertNull(stringBuilder0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      JsonMappingException jsonMappingException0 = new JsonMappingException("com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility");
      List<JsonMappingException.Reference> list0 = jsonMappingException0.getPath();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
      SQLTransientConnectionException sQLTransientConnectionException0 = new SQLTransientConnectionException("S.", "");
      JsonMappingException jsonMappingException0 = JsonMappingException.from((SerializerProvider) defaultSerializerProvider_Impl0, "", (Throwable) sQLTransientConnectionException0);
      JsonMappingException.Reference jsonMappingException_Reference0 = new JsonMappingException.Reference();
      jsonMappingException0.prependPath(jsonMappingException_Reference0);
      assertEquals((-1), jsonMappingException_Reference0.getIndex());
      
      List<JsonMappingException.Reference> list0 = jsonMappingException0.getPath();
      assertTrue(list0.contains(jsonMappingException_Reference0));
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      JsonMappingException.Reference jsonMappingException_Reference0 = new JsonMappingException.Reference();
      MockIOException mockIOException0 = new MockIOException("", (Throwable) null);
      JsonMappingException jsonMappingException0 = JsonMappingException.wrapWithPath((Throwable) mockIOException0, jsonMappingException_Reference0);
      jsonMappingException0.prependPath((Object) mockIOException0, "");
      String string0 = jsonMappingException0.getLocalizedMessage();
      assertEquals("(was org.evosuite.runtime.mock.java.io.MockIOException) (through reference chain: org.evosuite.runtime.mock.java.io.MockIOException[\"\"]->UNKNOWN[?])", string0);
      assertEquals((-1), jsonMappingException_Reference0.getIndex());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Class<CharArrayWriter> class0 = CharArrayWriter.class;
      JsonMappingException.Reference jsonMappingException_Reference0 = new JsonMappingException.Reference(class0, 4383);
      String string0 = jsonMappingException_Reference0.getDescription();
      assertEquals("java.io.CharArrayWriter[4383]", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SQLTransientException sQLTransientException0 = new SQLTransientException((String) null, "YqRF$n] EXxfC", 273);
      // Undeclared exception!
      try { 
        JsonMappingException.wrapWithPath((Throwable) sQLTransientException0, (Object) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot pass null fieldName
         //
         verifyException("com.fasterxml.jackson.databind.JsonMappingException$Reference", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SQLException sQLException0 = new SQLException((String) null);
      JsonMappingException.Reference jsonMappingException_Reference0 = new JsonMappingException.Reference("ACt{N]6:CrG|wND6G", "O3C{D2");
      JsonMappingException jsonMappingException0 = JsonMappingException.wrapWithPath((Throwable) sQLException0, jsonMappingException_Reference0);
      JsonMappingException.fromUnexpectedIOE(jsonMappingException0);
      assertEquals((-1), jsonMappingException_Reference0.getIndex());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      JsonMappingException jsonMappingException0 = new JsonMappingException("");
      String string0 = jsonMappingException0.getLocalizedMessage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;
      FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, false, false);
      // Undeclared exception!
      try { 
        JsonMappingException.from((JsonParser) filteringParserDelegate0, "}kzGpm#QRT");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.filter.FilteringParserDelegate", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      JsonFactory jsonFactory0 = new JsonFactory();
      char[] charArray0 = new char[1];
      JsonParser jsonParser0 = jsonFactory0.createParser(charArray0, 3359, 3359);
      JsonLocation jsonLocation0 = new JsonLocation((Object) null, 4742L, 44, 2393);
      JsonMappingException jsonMappingException0 = new JsonMappingException(jsonParser0, "3]-}2K`}", jsonLocation0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      JsonLocation jsonLocation0 = JsonLocation.NA;
      JsonMappingException jsonMappingException0 = new JsonMappingException((String) null, jsonLocation0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      SQLSyntaxErrorException sQLSyntaxErrorException0 = new SQLSyntaxErrorException((String) null);
      MockIOException mockIOException0 = new MockIOException("", sQLSyntaxErrorException0);
      JsonMappingException jsonMappingException0 = new JsonMappingException("", mockIOException0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      SQLException sQLException0 = new SQLException("uiW<%62H0a!6O", (Throwable) null);
      JsonMappingException jsonMappingException0 = JsonMappingException.wrapWithPath((Throwable) sQLException0, (JsonMappingException.Reference) null);
      // Undeclared exception!
      try { 
        jsonMappingException0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      JsonMappingException jsonMappingException0 = new JsonMappingException("com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility");
      DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
      SQLNonTransientException sQLNonTransientException0 = new SQLNonTransientException("", "com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility", 2, jsonMappingException0);
      JsonMappingException jsonMappingException1 = JsonMappingException.from((SerializerProvider) defaultSerializerProvider_Impl0, "", (Throwable) sQLNonTransientException0);
      String string0 = jsonMappingException1._buildMessage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      // Undeclared exception!
      try { 
        JsonMappingException.from((SerializerProvider) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.JsonMappingException", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      SQLException sQLException0 = new SQLException((String) null);
      JsonMappingException.Reference jsonMappingException_Reference0 = new JsonMappingException.Reference("ACt{N]6:CrG|wND6G", "O3C{D2");
      JsonMappingException jsonMappingException0 = JsonMappingException.wrapWithPath((Throwable) sQLException0, jsonMappingException_Reference0);
      Object object0 = new Object();
      JsonMappingException.wrapWithPath((Throwable) jsonMappingException0, object0, 68);
      assertEquals((-1), jsonMappingException_Reference0.getIndex());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      PlaceholderForType placeholderForType0 = new PlaceholderForType(4278);
      JsonMappingException jsonMappingException0 = defaultDeserializationContext_Impl0.invalidTypeIdException(placeholderForType0, "o>g$:", "T=Kr.FZhLg>xlj");
      Object object0 = jsonMappingException0.getProcessor();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      JsonMappingException jsonMappingException0 = JsonMappingException.from((DeserializationContext) defaultDeserializationContext_Impl0, "");
      assertNotNull(jsonMappingException0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      JsonMappingException jsonMappingException0 = new JsonMappingException("com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility");
      // Undeclared exception!
      try { 
        JsonMappingException.from((DeserializationContext) null, "(msW-FwnA$;W|o%&*<l", (Throwable) jsonMappingException0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.JsonMappingException", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      BufferRecycler bufferRecycler0 = new BufferRecycler();
      IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
      JsonFactory jsonFactory0 = new JsonFactory();
      ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);
      DeserializationFeature deserializationFeature0 = DeserializationFeature.EAGER_DESERIALIZER_FETCH;
      ObjectReader objectReader0 = objectMapper0.reader(deserializationFeature0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0, true);
      UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, objectReader0, mockPrintStream0);
      JsonMappingException jsonMappingException0 = JsonMappingException.from((JsonGenerator) uTF8JsonGenerator0, "");
      assertNotNull(jsonMappingException0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      JsonLocation jsonLocation0 = new JsonLocation(")^wo-uveEFk(0IH", 0L, 0L, (-1007), 3710);
      BufferRecycler bufferRecycler0 = new BufferRecycler();
      IOContext iOContext0 = new IOContext(bufferRecycler0, ")^wo-uveEFk(0IH", true);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(21);
      UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
      SQLTransactionRollbackException sQLTransactionRollbackException0 = new SQLTransactionRollbackException("", "");
      SQLNonTransientConnectionException sQLNonTransientConnectionException0 = new SQLNonTransientConnectionException("N>:.irkL}L+", "N>:.irkL}L+", 2, sQLTransactionRollbackException0);
      JsonMappingException jsonMappingException0 = JsonMappingException.from((JsonGenerator) uTF8JsonGenerator0, ")^wo-uveEFk(0IH", (Throwable) sQLNonTransientConnectionException0);
      SQLTransientConnectionException sQLTransientConnectionException0 = new SQLTransientConnectionException(")^wo-uveEFk(0IH", ")^wo-uveEFk(0IH", 500, jsonMappingException0);
      JsonMappingException jsonMappingException1 = new JsonMappingException(")^wo-uveEFk(0IH", jsonLocation0, sQLTransientConnectionException0);
      assertFalse(jsonMappingException1.equals((Object)jsonMappingException0));
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      JsonMappingException.Reference jsonMappingException_Reference0 = new JsonMappingException.Reference();
      int int0 = jsonMappingException_Reference0.getIndex();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      JsonMappingException.Reference jsonMappingException_Reference0 = new JsonMappingException.Reference();
      jsonMappingException_Reference0.setDescription(" (through reference chain: ");
      assertEquals((-1), jsonMappingException_Reference0.getIndex());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Object object0 = new Object();
      JsonMappingException.Reference jsonMappingException_Reference0 = new JsonMappingException.Reference(object0, ")^wo-uveEFk(0IH");
      jsonMappingException_Reference0.setFieldName("AUTO_DETECT_SETTERS");
      assertEquals("AUTO_DETECT_SETTERS", jsonMappingException_Reference0.getFieldName());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      JsonFactory jsonFactory0 = new JsonFactory();
      char[] charArray0 = new char[0];
      JsonParser jsonParser0 = jsonFactory0.createParser(charArray0, 3359, 3359);
      JsonMappingException.Reference jsonMappingException_Reference0 = new JsonMappingException.Reference(jsonParser0, 3359);
      Object object0 = jsonMappingException_Reference0.getFrom();
      assertNotNull(object0);
      assertEquals(3359, jsonMappingException_Reference0.getIndex());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      JsonMappingException.Reference jsonMappingException_Reference0 = new JsonMappingException.Reference();
      JsonMappingException.Reference jsonMappingException_Reference1 = (JsonMappingException.Reference)jsonMappingException_Reference0.writeReplace();
      assertEquals((-1), jsonMappingException_Reference1.getIndex());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      JsonMappingException.Reference jsonMappingException_Reference0 = new JsonMappingException.Reference();
      jsonMappingException_Reference0.setIndex(934);
      assertEquals(934, jsonMappingException_Reference0.getIndex());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      SQLException sQLException0 = new SQLException((String) null);
      JsonMappingException.Reference jsonMappingException_Reference0 = new JsonMappingException.Reference("ACt{N]6:CrG|wND6G", "O3C{D2");
      JsonMappingException jsonMappingException0 = JsonMappingException.wrapWithPath((Throwable) sQLException0, jsonMappingException_Reference0);
      String string0 = jsonMappingException0.getPathReference();
      assertEquals("java.lang.String[\"O3C{D2\"]", string0);
      assertEquals((-1), jsonMappingException_Reference0.getIndex());
  }
}
