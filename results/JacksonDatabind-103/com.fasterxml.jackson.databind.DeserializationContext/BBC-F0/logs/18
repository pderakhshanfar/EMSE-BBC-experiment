* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0
* Going to generate test cases for class: com.fasterxml.jackson.databind.DeserializationContext
* Starting Client-0
* Connecting to master process on port 17486
* Analyzing classpath: 
  - subjects/buggy-versions/JacksonDatabind-103/target/classes
  - defects4j/framework/projects/JacksonDatabind/lib/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar
  - defects4j/framework/projects/JacksonDatabind/lib/com/fasterxml/jackson/core/jackson-core/2.9.7/jackson-core-2.9.7.jar
* Finished analyzing classpath
* Generating tests for class com.fasterxml.jackson.databind.DeserializationContext
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1898
* Using seed 1391580523
* Starting evolution
* Initial Number of Goals in DynaMOSA = 1002 / 1898
[MASTER] 21:45:28.048 [logback-2] ERROR TestCluster - Failed to check cache for java.util.ArrayDeque<E> : Type points to itself
[MASTER] 21:45:28.472 [logback-2] ERROR TestCluster - Failed to check cache for java.util.HashMap<K, V> : Type points to itself
[MASTER] 21:45:35.488 [logback-2] ERROR TestCluster - Failed to check cache for com.fasterxml.jackson.databind.JsonDeserializer<T> : Type points to itself
[MASTER] 21:45:38.928 [logback-2] ERROR TestCluster - Failed to check cache for com.fasterxml.jackson.annotation.ObjectIdGenerator<T> : Type points to itself
[MASTER] 21:45:46.463 [logback-2] ERROR TestCluster - Failed to check cache for java.util.List<E> : Type points to itself
[MASTER] 21:46:38.402 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 21:46:44.963 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[MASTER] 21:46:58.277 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder due to org.evosuite.ga.ConstructionFailedException: Invalid generic instance
[MASTER] 21:47:03.970 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for java.util.LinkedHashSet due to org.evosuite.ga.ConstructionFailedException: Max recursion depth reached
[MASTER] 21:47:05.227 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.deser.BeanDeserializer due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer due to org.evosuite.ga.ConstructionFailedException: Max recursion depth reached
[MASTER] 21:48:10.357 [logback-2] ERROR TestCluster - Failed to check cache for com.fasterxml.jackson.databind.JsonSerializer<T> : Type points to itself
[MASTER] 21:48:11.586 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.deser.BeanDeserializer due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder due to org.evosuite.ga.ConstructionFailedException: Max recursion depth reached
[MASTER] 21:50:16.469 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.Class<T> : Type points to itself
* Search finished after 305s and 147 generations, 64232 statements, best individual has fitness: 955.0
* Minimizing test suite
[MASTER] 21:51:36.873 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 69%
* Total number of goals: 344
* Number of covered goals: 238
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 58%
* Total number of goals: 205
* Number of covered goals: 119
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 97
* Number of covered goals: 97
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 60%
* Total number of goals: 587
* Number of covered goals: 351
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 23%
* Total number of goals: 377
* Number of covered goals: 88
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 97%
* Total number of goals: 90
* Number of covered goals: 87
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 56%
* Total number of goals: 90
* Number of covered goals: 50
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 54%
* Total number of goals: 205
* Number of covered goals: 111
* Generated 211 tests with total length 4189
* Resulting test suite's coverage: 57% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 21:52:29.550 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6827166666666666% of time used, but only 64/211 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 9%
* Compiling and checking tests
[MASTER] 21:53:18.062 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_85_1605563597721/com/fasterxml/jackson/databind/DeserializationContext_85_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_85_1605563597721/com/fasterxml/jackson/databind/DeserializationContext_85_tmp__ESTest_scaffolding.java]]
[MASTER] 21:53:18.067 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/JacksonDatabind-103/target/classes:defects4j/framework/projects/JacksonDatabind/lib/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar:defects4j/framework/projects/JacksonDatabind/lib/com/fasterxml/jackson/core/jackson-core/2.9.7/jackson-core-2.9.7.jar:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/JacksonDatabind-103/target/classes:/experiment/defects4j/framework/projects/JacksonDatabind/lib/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar:/experiment/defects4j/framework/projects/JacksonDatabind/lib/com/fasterxml/jackson/core/jackson-core/2.9.7/jackson-core-2.9.7.jar
[MASTER] 21:53:18.067 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/JacksonDatabind-103/target/classes:/experiment/defects4j/framework/projects/JacksonDatabind/lib/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar:/experiment/defects4j/framework/projects/JacksonDatabind/lib/com/fasterxml/jackson/core/jackson-core/2.9.7/jackson-core-2.9.7.jar
[MASTER] 21:53:18.098 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.lang.Class<java.util.ArrayDeque> cannot be converted to java.lang.Class<java.util.ArrayDeque<java.util.ArrayDeque>>: 128
[MASTER] 21:53:18.112 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.lang.Class<java.util.ArrayDeque> cannot be converted to java.lang.Class<? extends java.util.ArrayDeque<java.util.ArrayDeque>>: 128
[MASTER] 21:53:18.115 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_85_1605563597721/com/fasterxml/jackson/databind/DeserializationContext_85_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Nov 16 21:53:17 GMT 2020
4:  */
5: 
6: package com.fasterxml.jackson.databind;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import com.fasterxml.jackson.core.JsonFactory;
12: import com.fasterxml.jackson.databind.DeserializationFeature;
13: import com.fasterxml.jackson.databind.JavaType;
14: import com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig;
15: import com.fasterxml.jackson.databind.deser.BeanDeserializerFactory;
16: import com.fasterxml.jackson.databind.deser.DefaultDeserializationContext;
17: import com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver;
18: import com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;
19: import com.fasterxml.jackson.databind.util.ObjectBuffer;
20: import java.util.ArrayDeque;
21: import java.util.concurrent.atomic.AtomicReference;
22: import org.evosuite.runtime.EvoRunner;
23: import org.evosuite.runtime.EvoRunnerParameters;
24: import org.junit.runner.RunWith;
25: 
26: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
27: public class DeserializationContext_85_tmp__ESTest extends DeserializationContext_85_tmp__ESTest_scaffolding {
28: 
29:   @Test(timeout = 4000)
30:   public void test0()  throws Throwable  {
31:       DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
32:       assertFalse(deserializerFactoryConfig0.hasAbstractTypeResolvers());
33:       assertFalse(deserializerFactoryConfig0.hasValueInstantiators());
34:       assertTrue(deserializerFactoryConfig0.hasKeyDeserializers());
35:       assertFalse(deserializerFactoryConfig0.hasDeserializers());
36:       assertFalse(deserializerFactoryConfig0.hasDeserializerModifiers());
37:       assertNotNull(deserializerFactoryConfig0);
38:       
39:       BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
40:       assertFalse(deserializerFactoryConfig0.hasAbstractTypeResolvers());
41:       assertFalse(deserializerFactoryConfig0.hasValueInstantiators());
42:       assertTrue(deserializerFactoryConfig0.hasKeyDeserializers());
43:       assertFalse(deserializerFactoryConfig0.hasDeserializers());
44:       assertFalse(deserializerFactoryConfig0.hasDeserializerModifiers());
45:       assertNotNull(beanDeserializerFactory0);
46:       
47:       DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
48:       assertFalse(deserializerFactoryConfig0.hasAbstractTypeResolvers());
49:       assertFalse(deserializerFactoryConfig0.hasValueInstantiators());
50:       assertTrue(deserializerFactoryConfig0.hasKeyDeserializers());
51:       assertFalse(deserializerFactoryConfig0.hasDeserializers());
52:       assertFalse(deserializerFactoryConfig0.hasDeserializerModifiers());
53:       assertEquals(0, defaultDeserializationContext_Impl0.getDeserializationFeatures());
54:       assertNotNull(defaultDeserializationContext_Impl0);
55:       
56:       DefaultDeserializationContext defaultDeserializationContext0 = defaultDeserializationContext_Impl0.with(beanDeserializerFactory0);
57:       assertFalse(defaultDeserializationContext0.equals((Object)defaultDeserializationContext_Impl0));
58:       assertFalse(deserializerFactoryConfig0.hasAbstractTypeResolvers());
59:       assertFalse(deserializerFactoryConfig0.hasValueInstantiators());
60:       assertTrue(deserializerFactoryConfig0.hasKeyDeserializers());
61:       assertFalse(deserializerFactoryConfig0.hasDeserializers());
62:       assertFalse(deserializerFactoryConfig0.hasDeserializerModifiers());
63:       assertEquals(0, defaultDeserializationContext_Impl0.getDeserializationFeatures());
64:       assertEquals(0, defaultDeserializationContext0.getDeserializationFeatures());
65:       assertNotSame(defaultDeserializationContext_Impl0, defaultDeserializationContext0);
66:       assertNotSame(defaultDeserializationContext0, defaultDeserializationContext_Impl0);
67:       assertNotNull(defaultDeserializationContext0);
68:       
69:       JavaType javaType0 = defaultDeserializationContext0.getContextualType();
70:       assertFalse(defaultDeserializationContext_Impl0.equals((Object)defaultDeserializationContext0));
71:       assertFalse(defaultDeserializationContext0.equals((Object)defaultDeserializationContext_Impl0));
72:       assertFalse(deserializerFactoryConfig0.hasAbstractTypeResolvers());
73:       assertFalse(deserializerFactoryConfig0.hasValueInstantiators());
74:       assertTrue(deserializerFactoryConfig0.hasKeyDeserializers());
75:       assertFalse(deserializerFactoryConfig0.hasDeserializers());
76:       assertFalse(deserializerFactoryConfig0.hasDeserializerModifiers());
77:       assertEquals(0, defaultDeserializationContext_Impl0.getDeserializationFeatures());
78:       assertEquals(0, defaultDeserializationContext0.getDeserializationFeatures());
79:       assertNotSame(defaultDeserializationContext_Impl0, defaultDeserializationContext0);
80:       assertNotSame(defaultDeserializationContext0, defaultDeserializationContext_Impl0);
81:       assertNull(javaType0);
82:       
83:       ObjectBuffer objectBuffer0 = new ObjectBuffer();
84:       assertEquals(0, objectBuffer0.bufferedSize());
85:       assertEquals(0, objectBuffer0.initialCapacity());
86:       assertNotNull(objectBuffer0);
87:       
88:       Object[] objectArray0 = objectBuffer0.resetAndStart();
89:       assertEquals(12, objectBuffer0.initialCapacity());
90:       assertEquals(0, objectBuffer0.bufferedSize());
91:       assertEquals(12, objectArray0.length);
92:       assertNotNull(objectArray0);
93:       
94:       defaultDeserializationContext0.returnObjectBuffer(objectBuffer0);
95:       assertFalse(defaultDeserializationContext_Impl0.equals((Object)defaultDeserializationContext0));
96:       assertFalse(defaultDeserializationContext0.equals((Object)defaultDeserializationContext_Impl0));
97:       assertFalse(deserializerFactoryConfig0.hasAbstractTypeResolvers());
98:       assertFalse(deserializerFactoryConfig0.hasValueInstantiators());
99:       assertTrue(deserializerFactoryConfig0.hasKeyDeserializers());
100:       assertFalse(deserializerFactoryConfig0.hasDeserializers());
101:       assertFalse(deserializerFactoryConfig0.hasDeserializerModifiers());
102:       assertEquals(0, defaultDeserializationContext_Impl0.getDeserializationFeatures());
103:       assertEquals(0, defaultDeserializationContext0.getDeserializationFeatures());
104:       assertEquals(12, objectBuffer0.initialCapacity());
105:       assertEquals(0, objectBuffer0.bufferedSize());
106:       assertNotSame(defaultDeserializationContext_Impl0, defaultDeserializationContext0);
107:       assertNotSame(defaultDeserializationContext0, defaultDeserializationContext_Impl0);
108:       
109:       JsonFactory jsonFactory0 = new JsonFactory();
110:       assertEquals(" ", jsonFactory0.getRootValueSeparator());
111:       assertTrue(jsonFactory0.canUseCharArrays());
112:       assertFalse(jsonFactory0.requiresCustomCodec());
113:       assertEquals("JSON", jsonFactory0.getFormatName());
114:       assertTrue(jsonFactory0.canParseAsync());
115:       assertFalse(jsonFactory0.requiresPropertyOrdering());
116:       assertFalse(jsonFactory0.canHandleBinaryNatively());
117:       assertNotNull(jsonFactory0);
118:       
119:       DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
120:       assertNotNull(defaultSerializerProvider_Impl0);
121:       
122:       SimpleAbstractTypeResolver simpleAbstractTypeResolver0 = new SimpleAbstractTypeResolver();
123:       assertNotNull(simpleAbstractTypeResolver0);
124:       
125:       Class<ArrayDeque> class0 = ArrayDeque.class;
126:       // Undeclared exception!
127:       try { 
128:         simpleAbstractTypeResolver0.addMapping((Class<ArrayDeque<ArrayDeque>>) class0, (Class<? extends ArrayDeque<ArrayDeque>>) class0);
129:         fail("Expecting exception: IllegalArgumentException");
130:       
131:       } catch(IllegalArgumentException e) {
132:          //
133:          // Cannot add mapping from class to itself
134:          //
135:          verifyException("com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver", e);
136:       }
137:   }
138: }
RegularFileObject[/tmp/EvoSuite_85_1605563597721/com/fasterxml/jackson/databind/DeserializationContext_85_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Nov 16 21:53:17 GMT 2020
5:  */
6: 
7: package com.fasterxml.jackson.databind;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class DeserializationContext_85_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "com.fasterxml.jackson.databind.DeserializationContext"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
76:     java.lang.System.setProperty("user.dir", "/experiment"); 
77:   }
78: 
79:   private static void initializeClasses() {
80:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(DeserializationContext_85_tmp__ESTest_scaffolding.class.getClassLoader() ,
81:       "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonBooleanFormatVisitor",
82:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$WithMember",
83:       "com.fasterxml.jackson.databind.MappingIterator",
84:       "com.fasterxml.jackson.databind.deser.BeanDeserializerModifier",
85:       "com.fasterxml.jackson.databind.deser.impl.FieldProperty",
86:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$ShortSerializer",
87:       "com.fasterxml.jackson.databind.deser.std.EnumDeserializer",
88:       "com.fasterxml.jackson.annotation.ObjectIdGenerators$Base",
89:       "com.fasterxml.jackson.annotation.JsonFormat$Features",
90:       "com.fasterxml.jackson.databind.introspect.AnnotatedConstructor",
91:       "com.fasterxml.jackson.databind.cfg.MapperConfigBase",
92:       "com.fasterxml.jackson.databind.deser.UnresolvedForwardReference",
93:       "com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer",
94:       "com.fasterxml.jackson.databind.ser.impl.UnknownSerializer",
95:       "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWithSerializerProvider",
96:       "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers",
97:       "com.fasterxml.jackson.core.async.ByteArrayFeeder",
98:       "com.fasterxml.jackson.databind.type.MapLikeType",
99:       "com.fasterxml.jackson.databind.util.LinkedNode",
100:       "com.fasterxml.jackson.databind.type.MapType",
101:       "com.fasterxml.jackson.databind.annotation.JsonTypeResolver",
102:       "com.fasterxml.jackson.databind.ser.std.UUIDSerializer",
103:       "com.fasterxml.jackson.databind.ObjectWriter",
104:       "com.fasterxml.jackson.databind.deser.std.FromStringDeserializer",
105:       "com.fasterxml.jackson.databind.type.TypeBase",
106:       "com.fasterxml.jackson.core.util.BufferRecyclers",
107:       "com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty",
108:       "com.fasterxml.jackson.databind.node.TextNode",
109:       "com.fasterxml.jackson.core.util.Instantiatable",
110:       "com.fasterxml.jackson.databind.deser.std.DateDeserializers$TimestampDeserializer",
111:       "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase",
112:       "com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder",
113:       "com.fasterxml.jackson.core.json.UTF8DataInputJsonParser",
114:       "com.fasterxml.jackson.annotation.Nulls",
115:       "com.fasterxml.jackson.annotation.JsonIgnoreProperties",
116:       "com.fasterxml.jackson.databind.deser.impl.ReadableObjectId",
117:       "com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter",
118:       "com.fasterxml.jackson.databind.introspect.AnnotatedCreatorCollector",
119:       "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonAnyFormatVisitor",
120:       "com.fasterxml.jackson.annotation.JsonSetter$Value",
121:       "com.fasterxml.jackson.databind.node.DecimalNode",
122:       "com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value",
123:       "com.fasterxml.jackson.databind.introspect.AnnotationCollector$EmptyCollector",
124:       "com.fasterxml.jackson.databind.util.Annotations",
125:       "com.fasterxml.jackson.databind.deser.Deserializers",
126:       "com.fasterxml.jackson.databind.ser.std.CollectionSerializer",
127:       "com.fasterxml.jackson.databind.deser.KeyDeserializers",
128:       "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitable",
129:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer",
130:       "com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std",
131:       "com.fasterxml.jackson.databind.type.CollectionLikeType",
132:       "com.fasterxml.jackson.core.FormatFeature",
133:       "com.fasterxml.jackson.databind.util.NameTransformer$2",
134:       "com.fasterxml.jackson.core.TreeNode",
135:       "com.fasterxml.jackson.databind.node.NumericNode",
136:       "com.fasterxml.jackson.databind.util.NameTransformer$1",
137:       "com.fasterxml.jackson.databind.deser.ValueInstantiator",
138:       "com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase",
139:       "com.fasterxml.jackson.databind.type.ResolvedRecursiveType",
140:       "com.fasterxml.jackson.databind.introspect.AnnotatedClass$Creators",
141:       "com.fasterxml.jackson.databind.deser.Deserializers$Base",
142:       "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector",
143:       "com.fasterxml.jackson.core.base.ParserMinimalBase",
144:       "com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer",
145:       "com.fasterxml.jackson.databind.deser.BeanDeserializerBase",
146:       "com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping",
147:       "com.fasterxml.jackson.databind.BeanProperty$Std",
148:       "com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition",
149:       "com.fasterxml.jackson.annotation.JsonSetter",
150:       "com.fasterxml.jackson.databind.util.NameTransformer$3",
151:       "com.fasterxml.jackson.core.util.JsonParserSequence",
152:       "com.fasterxml.jackson.databind.util.Converter",
153:       "com.fasterxml.jackson.databind.ser.std.FileSerializer",
154:       "com.fasterxml.jackson.core.SerializableString",
155:       "com.fasterxml.jackson.databind.PropertyMetadata$MergeInfo",
156:       "com.fasterxml.jackson.databind.deser.ValueInstantiators",
157:       "com.fasterxml.jackson.core.Versioned",
158:       "com.fasterxml.jackson.databind.introspect.VirtualAnnotatedMember",
159:       "com.fasterxml.jackson.databind.introspect.BasicBeanDescription",
160:       "com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer",
161:       "com.fasterxml.jackson.annotation.JsonAlias",
162:       "com.fasterxml.jackson.core.util.RequestPayload",
163:       "com.fasterxml.jackson.databind.introspect.AnnotatedMember",
164:       "com.fasterxml.jackson.databind.JsonSerializable",
165:       "com.fasterxml.jackson.databind.deser.impl.MergingSettableBeanProperty",
166:       "com.fasterxml.jackson.databind.BeanDescription",
167:       "com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer",
168:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$DoubleDeserializer",
169:       "com.fasterxml.jackson.core.filter.JsonPointerBasedFilter",
170:       "com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap",
171:       "com.fasterxml.jackson.databind.introspect.AnnotatedWithParams",
172:       "com.fasterxml.jackson.core.Base64Variant",
173:       "com.fasterxml.jackson.databind.exc.IgnoredPropertyException",
174:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer",
175:       "com.fasterxml.jackson.databind.annotation.JsonNaming",
176:       "com.fasterxml.jackson.core.io.MergedStream",
177:       "com.fasterxml.jackson.databind.SequenceWriter",
178:       "com.fasterxml.jackson.databind.ser.SerializerFactory",
179:       "com.fasterxml.jackson.annotation.JsonPropertyOrder",
180:       "com.fasterxml.jackson.databind.util.NameTransformer$NopTransformer",
181:       "com.fasterxml.jackson.databind.type.SimpleType",
182:       "com.fasterxml.jackson.databind.ser.ContextualSerializer",
183:       "com.fasterxml.jackson.databind.DeserializationConfig",
184:       "com.fasterxml.jackson.databind.MapperFeature",
185:       "com.fasterxml.jackson.core.util.InternCache",
186:       "com.fasterxml.jackson.databind.ser.std.ClassSerializer",
187:       "com.fasterxml.jackson.databind.Module$SetupContext",
188:       "com.fasterxml.jackson.databind.ext.Java7SupportImpl",
189:       "com.fasterxml.jackson.databind.util.ClassUtil",
190:       "com.fasterxml.jackson.databind.node.ContainerNode",
191:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$LongSerializer",
192:       "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
193:       "com.fasterxml.jackson.databind.ser.std.StdSerializer",
194:       "com.fasterxml.jackson.databind.ser.BeanSerializerFactory",
195:       "com.fasterxml.jackson.databind.PropertyNamingStrategy",
196:       "com.fasterxml.jackson.annotation.JsonPropertyDescription",
197:       "com.fasterxml.jackson.databind.jsonschema.SchemaAware",
198:       "com.fasterxml.jackson.databind.AbstractTypeResolver",
199:       "com.fasterxml.jackson.annotation.JacksonAnnotationsInside",
200:       "com.fasterxml.jackson.databind.util.ArrayBuilders$BooleanBuilder",
201:       "com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver",
202:       "com.fasterxml.jackson.databind.BeanProperty$Bogus",
203:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$DoubleSerializer",
204:       "com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer",
205:       "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonMapFormatVisitor",
206:       "com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer",
207:       "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor",
208:       "com.fasterxml.jackson.core.Base64Variants",
209:       "com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer",
210:       "com.fasterxml.jackson.databind.util.ArrayBuilders",
211:       "com.fasterxml.jackson.databind.ser.std.IterableSerializer",
212:       "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicIntegerSerializer",
213:       "com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter",
214:       "com.fasterxml.jackson.core.io.IOContext",
215:       "com.fasterxml.jackson.core.PrettyPrinter",
216:       "com.fasterxml.jackson.databind.util.RawValue",
217:       "com.fasterxml.jackson.core.base.GeneratorBase",
218:       "com.fasterxml.jackson.databind.exc.PropertyBindingException",
219:       "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
220:       "com.fasterxml.jackson.databind.ser.BeanSerializer",
221:       "com.fasterxml.jackson.databind.util.TokenBufferReadContext",
222:       "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider",
223:       "com.fasterxml.jackson.databind.node.NullNode",
224:       "com.fasterxml.jackson.databind.deser.ValueInstantiator$Base",
225:       "com.fasterxml.jackson.annotation.JacksonInject$Value",
226:       "com.fasterxml.jackson.core.util.Separators",
227:       "com.fasterxml.jackson.databind.ser.BeanSerializerModifier",
228:       "com.fasterxml.jackson.databind.jsontype.NamedType",
229:       "com.fasterxml.jackson.databind.ext.CoreXMLDeserializers$Std",
230:       "com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder",
231:       "com.fasterxml.jackson.databind.introspect.ObjectIdInfo",
232:       "com.fasterxml.jackson.databind.introspect.NopAnnotationIntrospector",
233:       "com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer",
234:       "com.fasterxml.jackson.core.json.JsonWriteContext",
235:       "com.fasterxml.jackson.annotation.ObjectIdGenerators$PropertyGenerator",
236:       "com.fasterxml.jackson.annotation.JacksonInject",
237:       "com.fasterxml.jackson.core.io.UTF8Writer",
238:       "com.fasterxml.jackson.databind.BeanProperty",
239:       "com.fasterxml.jackson.core.Version",
240:       "com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring",
241:       "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
242:       "com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder",
243:       "com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer",
244:       "com.fasterxml.jackson.core.io.InputDecorator",
245:       "com.fasterxml.jackson.databind.introspect.TypeResolutionContext",
246:       "com.fasterxml.jackson.core.base.ParserBase",
247:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntLikeSerializer",
248:       "com.fasterxml.jackson.databind.node.BinaryNode",
249:       "com.fasterxml.jackson.databind.introspect.AnnotationMap",
250:       "com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector",
251:       "com.fasterxml.jackson.databind.ser.std.ToStringSerializer",
252:       "com.fasterxml.jackson.databind.deser.DataFormatReaders",
253:       "com.fasterxml.jackson.core.JsonGenerator",
254:       "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext",
255:       "com.fasterxml.jackson.databind.ser.Serializers",
256:       "com.fasterxml.jackson.databind.type.ClassStack",
257:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer",
258:       "com.fasterxml.jackson.databind.ext.OptionalHandlerFactory",
259:       "com.fasterxml.jackson.databind.deser.std.DateDeserializers",
260:       "com.fasterxml.jackson.core.JsonEncoding",
261:       "com.fasterxml.jackson.databind.ObjectWriter$Prefetch",
262:       "com.fasterxml.jackson.core.JsonGenerationException",
263:       "com.fasterxml.jackson.annotation.JsonProperty$Access",
264:       "com.fasterxml.jackson.databind.ser.std.JsonValueSerializer",
265:       "com.fasterxml.jackson.core.TreeCodec",
266:       "com.fasterxml.jackson.databind.deser.impl.SetterlessProperty",
267:       "com.fasterxml.jackson.annotation.JsonAutoDetect$Value",
268:       "com.fasterxml.jackson.core.json.UTF8JsonGenerator",
269:       "com.fasterxml.jackson.databind.ser.std.EnumSetSerializer",
270:       "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonIntegerFormatVisitor",
271:       "com.fasterxml.jackson.databind.ser.std.SerializableSerializer",
272:       "com.fasterxml.jackson.databind.introspect.Annotated",
273:       "com.fasterxml.jackson.databind.util.ArrayBuilders$LongBuilder",
274:       "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$DelegatingKD",
275:       "com.fasterxml.jackson.databind.deser.std.StdValueInstantiator",
276:       "com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap",
277:       "com.fasterxml.jackson.databind.util.TokenBuffer",
278:       "com.fasterxml.jackson.core.JsonParser$NumberType",
279:       "com.fasterxml.jackson.core.JsonGenerator$1",
280:       "com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter",
281:       "com.fasterxml.jackson.databind.type.PlaceholderForType",
282:       "com.fasterxml.jackson.databind.JsonMappingException$Reference",
283:       "com.fasterxml.jackson.core.json.WriterBasedJsonGenerator",
284:       "com.fasterxml.jackson.databind.deser.SettableBeanProperty$Delegating",
285:       "com.fasterxml.jackson.databind.jsontype.TypeDeserializer",
286:       "com.fasterxml.jackson.databind.deser.std.JdkDeserializers",
287:       "com.fasterxml.jackson.databind.node.LongNode",
288:       "com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing",
289:       "com.fasterxml.jackson.databind.deser.CreatorProperty",
290:       "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonStringFormatVisitor",
291:       "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringCtorKeyDeserializer",
292:       "com.fasterxml.jackson.annotation.JsonAnyGetter",
293:       "com.fasterxml.jackson.databind.ObjectWriter$GeneratorSettings",
294:       "com.fasterxml.jackson.core.type.TypeReference",
295:       "com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase",
296:       "com.fasterxml.jackson.core.JsonParseException",
297:       "com.fasterxml.jackson.databind.annotation.JacksonStdImpl",
298:       "com.fasterxml.jackson.databind.ser.std.TokenBufferSerializer",
299:       "com.fasterxml.jackson.databind.deser.ValueInstantiators$Base",
300:       "com.fasterxml.jackson.databind.type.TypeBindings$TypeParamStash",
301:       "com.fasterxml.jackson.annotation.JsonBackReference",
302:       "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonArrayFormatVisitor",
303:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigDecimalDeserializer",
304:       "com.fasterxml.jackson.databind.ObjectMapper$2",
305:       "com.fasterxml.jackson.databind.deser.impl.CreatorCandidate",
306:       "com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig",
307:       "com.fasterxml.jackson.databind.ser.std.MapSerializer",
308:       "com.fasterxml.jackson.annotation.JsonAnySetter",
309:       "com.fasterxml.jackson.databind.deser.BeanDeserializer$1",
310:       "com.fasterxml.jackson.databind.ser.std.SqlDateSerializer",
311:       "com.fasterxml.jackson.databind.util.RootNameLookup",
312:       "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
313:       "com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket",
314:       "com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer",
315:       "com.fasterxml.jackson.databind.ser.impl.FailingSerializer",
316:       "com.fasterxml.jackson.databind.JsonMappingException",
317:       "com.fasterxml.jackson.databind.deser.DataFormatReaders$Match",
318:       "com.fasterxml.jackson.core.io.OutputDecorator",
319:       "com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer",
320:       "com.fasterxml.jackson.databind.deser.std.DateDeserializers$SqlDateDeserializer",
321:       "com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer",
322:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ShortDeserializer",
323:       "com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer",
324:       "com.fasterxml.jackson.annotation.JsonTypeInfo$As",
325:       "com.fasterxml.jackson.databind.ser.std.SqlTimeSerializer",
326:       "com.fasterxml.jackson.databind.util.BeanUtil",
327:       "com.fasterxml.jackson.databind.DatabindContext",
328:       "com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateDeserializer",
329:       "com.fasterxml.jackson.databind.node.ObjectNode",
330:       "com.fasterxml.jackson.databind.cfg.ConfigOverride",
331:       "com.fasterxml.jackson.core.JsonParser$Feature",
332:       "com.fasterxml.jackson.core.JsonPointer",
333:       "com.fasterxml.jackson.databind.util.TokenBuffer$Parser",
334:       "com.fasterxml.jackson.core.io.SerializedString",
335:       "com.fasterxml.jackson.annotation.JsonMerge",
336:       "com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter",
337:       "com.fasterxml.jackson.databind.deser.DeserializationProblemHandler",
338:       "com.fasterxml.jackson.annotation.JsonFormat$Shape",
339:       "com.fasterxml.jackson.databind.introspect.AnnotationCollector",
340:       "com.fasterxml.jackson.databind.util.NameTransformer$Chained",
341:       "com.fasterxml.jackson.annotation.PropertyAccessor",
342:       "com.fasterxml.jackson.databind.introspect.AnnotatedField",
343:       "com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase",
344:       "com.fasterxml.jackson.annotation.JsonFormat$Feature",
345:       "com.fasterxml.jackson.databind.deser.ContextualDeserializer",
346:       "com.fasterxml.jackson.databind.ser.std.ArraySerializerBase",
347:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked",
348:       "com.fasterxml.jackson.annotation.ObjectIdGenerator",
349:       "com.fasterxml.jackson.databind.cfg.HandlerInstantiator",
350:       "com.fasterxml.jackson.databind.ser.std.CalendarSerializer",
351:       "com.fasterxml.jackson.databind.annotation.JsonValueInstantiator",
352:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigIntegerDeserializer",
353:       "com.fasterxml.jackson.databind.ext.Java7Support",
354:       "com.fasterxml.jackson.databind.ser.std.BooleanSerializer$AsNumber",
355:       "com.fasterxml.jackson.databind.exc.InvalidDefinitionException",
356:       "com.fasterxml.jackson.databind.ser.std.BooleanSerializer",
357:       "com.fasterxml.jackson.annotation.JsonAutoDetect$1",
358:       "com.fasterxml.jackson.databind.introspect.ClassIntrospector",
359:       "com.fasterxml.jackson.annotation.JsonProperty",
360:       "com.fasterxml.jackson.core.filter.TokenFilterContext",
361:       "com.fasterxml.jackson.databind.JsonSerializable$Base",
362:       "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer",
363:       "com.fasterxml.jackson.databind.node.NodeCursor",
364:       "com.fasterxml.jackson.databind.util.AccessPattern",
365:       "com.fasterxml.jackson.databind.cfg.ConfigOverride$Empty",
366:       "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer",
367:       "com.fasterxml.jackson.databind.node.TreeTraversingParser",
368:       "com.fasterxml.jackson.databind.jsontype.TypeSerializer",
369:       "com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer",
370:       "com.fasterxml.jackson.databind.jsonschema.JsonSchema",
371:       "com.fasterxml.jackson.databind.deser.std.UUIDDeserializer",
372:       "com.fasterxml.jackson.databind.type.TypeFactory",
373:       "com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std",
374:       "com.fasterxml.jackson.databind.type.ArrayType",
375:       "com.fasterxml.jackson.databind.node.NodeCursor$ArrayCursor",
376:       "com.fasterxml.jackson.databind.deser.impl.ObjectIdReader",
377:       "com.fasterxml.jackson.databind.util.Named",
378:       "com.fasterxml.jackson.core.util.JsonParserDelegate",
379:       "com.fasterxml.jackson.databind.module.SimpleKeyDeserializers",
380:       "com.fasterxml.jackson.databind.util.TokenBuffer$Segment",
381:       "com.fasterxml.jackson.databind.cfg.ConfigOverrides",
382:       "com.fasterxml.jackson.databind.type.CollectionType",
383:       "com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer",
384:       "com.fasterxml.jackson.databind.ser.std.StdScalarSerializer",
385:       "com.fasterxml.jackson.annotation.JsonAutoDetect",
386:       "com.fasterxml.jackson.core.format.InputAccessor",
387:       "com.fasterxml.jackson.databind.node.ValueNode",
388:       "com.fasterxml.jackson.databind.ser.impl.IteratorSerializer",
389:       "com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer",
390:       "com.fasterxml.jackson.databind.ser.BasicSerializerFactory",
391:       "com.fasterxml.jackson.databind.util.ClassUtil$Ctor",
392:       "com.fasterxml.jackson.databind.ext.NioPathDeserializer",
393:       "com.fasterxml.jackson.databind.deser.SettableBeanProperty",
394:       "com.fasterxml.jackson.databind.node.JsonNodeCreator",
395:       "com.fasterxml.jackson.core.async.NonBlockingInputFeeder",
396:       "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper",
397:       "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
398:       "com.fasterxml.jackson.core.JsonLocation",
399:       "com.fasterxml.jackson.databind.exc.MismatchedInputException",
400:       "com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper",
401:       "com.fasterxml.jackson.databind.node.IntNode",
402:       "com.fasterxml.jackson.databind.node.FloatNode",
403:       "com.fasterxml.jackson.databind.type.TypeParser",
404:       "com.fasterxml.jackson.databind.jsontype.SubtypeResolver",
405:       "com.fasterxml.jackson.core.ObjectCodec",
406:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers",
407:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$PrimitiveOrWrapperDeserializer",
408:       "com.fasterxml.jackson.core.json.JsonReadContext",
409:       "com.fasterxml.jackson.databind.ser.std.EnumSerializer",
410:       "com.fasterxml.jackson.databind.cfg.ContextAttributes$Impl",
411:       "com.fasterxml.jackson.core.util.DefaultPrettyPrinter",
412:       "com.fasterxml.jackson.databind.KeyDeserializer",
413:       "com.fasterxml.jackson.databind.util.ArrayBuilders$FloatBuilder",
414:       "com.fasterxml.jackson.databind.deser.impl.ErrorThrowingDeserializer",
415:       "com.fasterxml.jackson.core.util.BufferRecycler",
416:       "com.fasterxml.jackson.databind.deser.BeanDeserializer$BeanReferring",
417:       "com.fasterxml.jackson.databind.deser.impl.PropertyBasedObjectIdGenerator",
418:       "com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer",
419:       "com.fasterxml.jackson.annotation.ObjectIdResolver",
420:       "com.fasterxml.jackson.databind.DeserializationContext",
421:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$Base",
422:       "com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer",
423:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$10",
424:       "com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer",
425:       "com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector",
426:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer",
427:       "com.fasterxml.jackson.databind.node.DoubleNode",
428:       "com.fasterxml.jackson.databind.node.NodeCursor$ObjectCursor",
429:       "com.fasterxml.jackson.databind.util.EnumResolver",
430:       "com.fasterxml.jackson.databind.ser.PropertyWriter",
431:       "com.fasterxml.jackson.databind.deser.impl.CreatorCandidate$Param",
432:       "com.fasterxml.jackson.databind.type.ReferenceType",
433:       "com.fasterxml.jackson.core.util.ByteArrayBuilder",
434:       "com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer",
435:       "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$TableInfo",
436:       "com.fasterxml.jackson.databind.ser.std.NumberSerializer",
437:       "com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer",
438:       "com.fasterxml.jackson.databind.introspect.AnnotationCollector$NoAnnotations",
439:       "com.fasterxml.jackson.databind.Module",
440:       "com.fasterxml.jackson.annotation.JsonView",
441:       "com.fasterxml.jackson.databind.AnnotationIntrospector",
442:       "com.fasterxml.jackson.databind.ser.std.DateSerializer",
443:       "com.fasterxml.jackson.databind.ser.ContainerSerializer",
444:       "com.fasterxml.jackson.databind.ser.std.NullSerializer",
445:       "com.fasterxml.jackson.databind.InjectableValues$Std",
446:       "com.fasterxml.jackson.databind.deser.std.StringDeserializer",
447:       "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer",
448:       "com.fasterxml.jackson.annotation.JsonGetter",
449:       "com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector$FieldBuilder",
450:       "com.fasterxml.jackson.databind.exc.InvalidTypeIdException",
451:       "com.fasterxml.jackson.databind.DeserializationFeature",
452:       "com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer",
453:       "com.fasterxml.jackson.databind.node.POJONode",
454:       "com.fasterxml.jackson.annotation.JacksonAnnotation",
455:       "com.fasterxml.jackson.databind.ObjectReader",
456:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder",
457:       "com.fasterxml.jackson.databind.node.BaseJsonNode",
458:       "com.fasterxml.jackson.databind.node.BigIntegerNode",
459:       "com.fasterxml.jackson.databind.util.LRUMap",
460:       "com.fasterxml.jackson.databind.JsonDeserializer",
461:       "com.fasterxml.jackson.databind.util.ArrayBuilders$ByteBuilder",
462:       "com.fasterxml.jackson.annotation.SimpleObjectIdResolver",
463:       "com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition",
464:       "com.fasterxml.jackson.databind.deser.impl.MethodProperty",
465:       "com.fasterxml.jackson.annotation.JsonRawValue",
466:       "com.fasterxml.jackson.core.util.DefaultIndenter",
467:       "com.fasterxml.jackson.databind.introspect.MemberKey",
468:       "com.fasterxml.jackson.databind.node.ArrayNode",
469:       "com.fasterxml.jackson.annotation.JsonTypeInfo$Id",
470:       "com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility",
471:       "com.fasterxml.jackson.databind.module.SimpleValueInstantiators",
472:       "com.fasterxml.jackson.databind.ser.impl.AttributePropertyWriter",
473:       "com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla",
474:       "com.fasterxml.jackson.databind.exc.InvalidFormatException",
475:       "com.fasterxml.jackson.databind.deser.std.MapDeserializer",
476:       "com.fasterxml.jackson.databind.util.ArrayBuilders$DoubleBuilder",
477:       "com.fasterxml.jackson.core.io.CharacterEscapes",
478:       "com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer",
479:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer",
480:       "com.fasterxml.jackson.databind.introspect.TypeResolutionContext$Basic",
481:       "com.fasterxml.jackson.core.type.ResolvedType",
482:       "com.fasterxml.jackson.databind.deser.impl.CreatorCollector",
483:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
484:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$LongDeserializer",
485:       "com.fasterxml.jackson.databind.util.ArrayBuilders$IntBuilder",
486:       "com.fasterxml.jackson.databind.annotation.JsonSerialize",
487:       "com.fasterxml.jackson.annotation.JsonIgnore",
488:       "com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator",
489:       "com.fasterxml.jackson.databind.introspect.AnnotatedMethod",
490:       "com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey",
491:       "com.fasterxml.jackson.databind.jsontype.TypeIdResolver",
492:       "com.fasterxml.jackson.databind.util.ConstantValueInstantiator",
493:       "com.fasterxml.jackson.databind.introspect.VisibilityChecker",
494:       "com.fasterxml.jackson.core.JsonParser",
495:       "com.fasterxml.jackson.databind.introspect.AnnotatedParameter",
496:       "com.fasterxml.jackson.databind.ser.BeanPropertyWriter",
497:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$FloatSerializer",
498:       "com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type",
499:       "com.fasterxml.jackson.core.JsonProcessingException",
500:       "com.fasterxml.jackson.core.JsonStreamContext",
501:       "com.fasterxml.jackson.core.format.MatchStrength",
502:       "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket",
503:       "com.fasterxml.jackson.core.io.UTF32Reader",
504:       "com.fasterxml.jackson.databind.introspect.CollectorBase",
505:       "com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder$Value",
506:       "com.fasterxml.jackson.annotation.JsonCreator",
507:       "com.fasterxml.jackson.databind.cfg.MutableConfigOverride",
508:       "com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer",
509:       "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException",
510:       "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext$Impl",
511:       "com.fasterxml.jackson.core.filter.TokenFilter",
512:       "com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector$MethodBuilder",
513:       "com.fasterxml.jackson.databind.util.ArrayIterator",
514:       "com.fasterxml.jackson.core.io.CharTypes",
515:       "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicBooleanSerializer",
516:       "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicLongSerializer",
517:       "com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver",
518:       "com.fasterxml.jackson.databind.ser.std.InetAddressSerializer",
519:       "com.fasterxml.jackson.databind.deser.impl.CreatorCollector$StdTypeConstructor",
520:       "com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver",
521:       "com.fasterxml.jackson.databind.deser.std.StdDeserializer",
522:       "com.fasterxml.jackson.annotation.JsonInclude$Include",
523:       "com.fasterxml.jackson.databind.ext.CoreXMLDeserializers",
524:       "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper$Base",
525:       "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo",
526:       "com.fasterxml.jackson.databind.JsonSerializer",
527:       "com.fasterxml.jackson.databind.JsonNode",
528:       "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig",
529:       "com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty",
530:       "com.fasterxml.jackson.databind.ser.ResolvableSerializer",
531:       "com.fasterxml.jackson.databind.PropertyName",
532:       "com.fasterxml.jackson.annotation.JsonCreator$Mode",
533:       "com.fasterxml.jackson.core.json.async.NonBlockingJsonParser",
534:       "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormatVisitor",
535:       "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
536:       "com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer",
537:       "com.fasterxml.jackson.core.io.NumberInput",
538:       "com.fasterxml.jackson.databind.node.JsonNodeFactory",
539:       "com.fasterxml.jackson.databind.ser.impl.StringArraySerializer",
540:       "com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer",
541:       "com.fasterxml.jackson.databind.cfg.MapperConfig",
542:       "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringFactoryKeyDeserializer",
543:       "com.fasterxml.jackson.annotation.JsonManagedReference",
544:       "com.fasterxml.jackson.databind.deser.impl.InnerClassProperty",
545:       "com.fasterxml.jackson.databind.annotation.JsonDeserialize",
546:       "com.fasterxml.jackson.databind.util.ObjectBuffer",
547:       "com.fasterxml.jackson.core.io.JsonEOFException",
548:       "com.fasterxml.jackson.databind.InjectableValues",
549:       "com.fasterxml.jackson.databind.MappingJsonFactory",
550:       "com.fasterxml.jackson.databind.deser.std.ThrowableDeserializer",
551:       "com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer",
552:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$2",
553:       "com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase",
554:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$1",
555:       "com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair",
556:       "com.fasterxml.jackson.databind.node.NodeCursor$RootCursor",
557:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$9",
558:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$8",
559:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$7",
560:       "com.fasterxml.jackson.databind.ext.NioPathSerializer",
561:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$6",
562:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$5",
563:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$4",
564:       "com.fasterxml.jackson.databind.ser.std.StringSerializer",
565:       "com.fasterxml.jackson.databind.JavaType",
566:       "com.fasterxml.jackson.databind.deser.BeanDeserializer",
567:       "com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase",
568:       "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonNullFormatVisitor",
569:       "com.fasterxml.jackson.databind.node.JsonNodeType",
570:       "com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase",
571:       "com.fasterxml.jackson.databind.deser.NullValueProvider",
572:       "com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver",
573:       "com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer",
574:       "com.fasterxml.jackson.core.util.TextBuffer",
575:       "com.fasterxml.jackson.annotation.JacksonAnnotationValue",
576:       "com.fasterxml.jackson.core.JsonFactory",
577:       "com.fasterxml.jackson.annotation.JsonTypeInfo$None",
578:       "com.fasterxml.jackson.databind.util.NameTransformer",
579:       "com.fasterxml.jackson.databind.deser.impl.FailingDeserializer",
580:       "com.fasterxml.jackson.databind.util.EnumValues",
581:       "com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap",
582:       "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$EnumKD",
583:       "com.fasterxml.jackson.databind.node.BooleanNode",
584:       "com.fasterxml.jackson.databind.node.ShortNode",
585:       "com.fasterxml.jackson.databind.node.MissingNode",
586:       "com.fasterxml.jackson.databind.util.StdDateFormat",
587:       "com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer",
588:       "com.fasterxml.jackson.core.util.MinimalPrettyPrinter",
589:       "com.fasterxml.jackson.databind.SerializationConfig",
590:       "com.fasterxml.jackson.annotation.JsonFormat$Value",
591:       "com.fasterxml.jackson.databind.PropertyMetadata",
592:       "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase",
593:       "com.fasterxml.jackson.annotation.JsonInclude$Value",
594:       "com.fasterxml.jackson.databind.deser.std.ReferenceTypeDeserializer",
595:       "com.fasterxml.jackson.annotation.JsonValue",
596:       "com.fasterxml.jackson.databind.deser.ResolvableDeserializer",
597:       "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer",
598:       "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonNumberFormatVisitor",
599:       "com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider",
600:       "com.fasterxml.jackson.databind.util.TypeKey",
601:       "com.fasterxml.jackson.databind.ser.FilterProvider",
602:       "com.fasterxml.jackson.databind.introspect.SimpleMixInResolver",
603:       "com.fasterxml.jackson.annotation.JsonFormat",
604:       "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers",
605:       "com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer",
606:       "com.fasterxml.jackson.databind.deser.DeserializerFactory",
607:       "com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator",
608:       "com.fasterxml.jackson.databind.type.TypeModifier",
609:       "com.fasterxml.jackson.annotation.JsonTypeInfo",
610:       "com.fasterxml.jackson.annotation.JsonUnwrapped",
611:       "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
612:       "com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty",
613:       "com.fasterxml.jackson.databind.introspect.AnnotationCollector$NCollector",
614:       "com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver",
615:       "com.fasterxml.jackson.core.json.JsonGeneratorImpl",
616:       "com.fasterxml.jackson.databind.util.ArrayBuilders$ShortBuilder",
617:       "com.fasterxml.jackson.databind.deser.AbstractDeserializer",
618:       "com.fasterxml.jackson.databind.deser.SettableAnyProperty",
619:       "com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer",
620:       "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer",
621:       "com.fasterxml.jackson.databind.type.TypeBindings$AsKey",
622:       "com.fasterxml.jackson.databind.module.SimpleDeserializers",
623:       "com.fasterxml.jackson.core.JsonFactory$Feature",
624:       "com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty",
625:       "com.fasterxml.jackson.databind.ser.SerializerCache",
626:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntegerSerializer",
627:       "com.fasterxml.jackson.core.io.DataOutputAsStream",
628:       "com.fasterxml.jackson.core.io.SegmentedStringWriter",
629:       "com.fasterxml.jackson.databind.type.TypeBindings",
630:       "com.fasterxml.jackson.databind.ser.impl.WritableObjectId",
631:       "com.fasterxml.jackson.databind.deser.std.JsonLocationInstantiator",
632:       "com.fasterxml.jackson.databind.SerializerProvider",
633:       "com.fasterxml.jackson.core.JsonToken",
634:       "com.fasterxml.jackson.databind.cfg.ContextAttributes",
635:       "com.fasterxml.jackson.databind.introspect.AnnotatedField$Serialization",
636:       "com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer",
637:       "com.fasterxml.jackson.annotation.JsonIdentityInfo",
638:       "com.fasterxml.jackson.databind.deser.ValueInstantiator$Gettable",
639:       "com.fasterxml.jackson.core.JsonGenerator$Feature",
640:       "com.fasterxml.jackson.databind.cfg.BaseSettings",
641:       "com.fasterxml.jackson.databind.ObjectMapper",
642:       "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider$Impl",
643:       "com.fasterxml.jackson.databind.deser.DeserializerCache",
644:       "com.fasterxml.jackson.databind.cfg.ConfigFeature",
645:       "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
646:       "com.fasterxml.jackson.core.FormatSchema",
647:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BooleanDeserializer",
648:       "com.fasterxml.jackson.annotation.JsonInclude",
649:       "com.fasterxml.jackson.databind.SerializationFeature",
650:       "com.fasterxml.jackson.annotation.JsonIgnoreType",
651:       "com.fasterxml.jackson.databind.introspect.AnnotationCollector$OneCollector"
652:     );
653:   } 
654: 
655:   private static void resetClasses() {
656:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(DeserializationContext_85_tmp__ESTest_scaffolding.class.getClassLoader()); 
657: 
658:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
659:       "com.fasterxml.jackson.databind.DatabindContext",
660:       "com.fasterxml.jackson.databind.DeserializationContext",
661:       "com.fasterxml.jackson.databind.DeserializationFeature",
662:       "com.fasterxml.jackson.databind.deser.DeserializationProblemHandler",
663:       "com.fasterxml.jackson.databind.MapperFeature",
664:       "com.fasterxml.jackson.databind.introspect.SimpleMixInResolver",
665:       "com.fasterxml.jackson.databind.util.RootNameLookup",
666:       "com.fasterxml.jackson.databind.util.LRUMap",
667:       "com.fasterxml.jackson.databind.cfg.ConfigOverrides",
668:       "com.fasterxml.jackson.annotation.JsonInclude$Include",
669:       "com.fasterxml.jackson.annotation.JsonInclude$Value",
670:       "com.fasterxml.jackson.annotation.JsonSetter$Value",
671:       "com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility",
672:       "com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std",
673:       "com.fasterxml.jackson.annotation.JsonFormat$Shape",
674:       "com.fasterxml.jackson.annotation.JsonFormat$Features",
675:       "com.fasterxml.jackson.annotation.JsonFormat$Value",
676:       "com.fasterxml.jackson.databind.cfg.MapperConfig",
677:       "com.fasterxml.jackson.databind.cfg.ConfigOverride",
678:       "com.fasterxml.jackson.databind.cfg.ConfigOverride$Empty",
679:       "com.fasterxml.jackson.databind.cfg.MapperConfigBase",
680:       "com.fasterxml.jackson.databind.DeserializationConfig",
681:       "com.fasterxml.jackson.core.io.SerializedString",
682:       "com.fasterxml.jackson.core.util.DefaultPrettyPrinter",
683:       "com.fasterxml.jackson.core.JsonFactory",
684:       "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer",
685:       "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$TableInfo",
686:       "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer",
687:       "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo",
688:       "com.fasterxml.jackson.databind.JsonSerializer",
689:       "com.fasterxml.jackson.databind.ser.std.StdSerializer",
690:       "com.fasterxml.jackson.databind.ser.impl.FailingSerializer",
691:       "com.fasterxml.jackson.databind.ser.impl.UnknownSerializer",
692:       "com.fasterxml.jackson.databind.SerializerProvider",
693:       "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider",
694:       "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider$Impl",
695:       "com.fasterxml.jackson.databind.ser.std.NullSerializer",
696:       "com.fasterxml.jackson.databind.ser.SerializerCache",
697:       "com.fasterxml.jackson.databind.deser.DeserializerFactory",
698:       "com.fasterxml.jackson.databind.util.ClassUtil",
699:       "com.fasterxml.jackson.databind.PropertyName",
700:       "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
701:       "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers",
702:       "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig",
703:       "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
704:       "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext",
705:       "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext$Impl",
706:       "com.fasterxml.jackson.databind.deser.DeserializerCache",
707:       "com.fasterxml.jackson.core.TreeCodec",
708:       "com.fasterxml.jackson.core.ObjectCodec",
709:       "com.fasterxml.jackson.core.type.ResolvedType",
710:       "com.fasterxml.jackson.databind.JavaType",
711:       "com.fasterxml.jackson.databind.type.TypeBindings",
712:       "com.fasterxml.jackson.databind.type.TypeBase",
713:       "com.fasterxml.jackson.databind.type.SimpleType",
714:       "com.fasterxml.jackson.databind.AnnotationIntrospector",
715:       "com.fasterxml.jackson.databind.ext.Java7SupportImpl",
716:       "com.fasterxml.jackson.databind.ext.Java7Support",
717:       "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
718:       "com.fasterxml.jackson.databind.cfg.BaseSettings",
719:       "com.fasterxml.jackson.databind.type.TypeParser",
720:       "com.fasterxml.jackson.databind.type.TypeFactory",
721:       "com.fasterxml.jackson.databind.util.StdDateFormat",
722:       "com.fasterxml.jackson.core.Base64Variant",
723:       "com.fasterxml.jackson.core.Base64Variants",
724:       "com.fasterxml.jackson.databind.ObjectMapper",
725:       "com.fasterxml.jackson.databind.jsontype.SubtypeResolver",
726:       "com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver",
727:       "com.fasterxml.jackson.databind.introspect.ClassIntrospector",
728:       "com.fasterxml.jackson.databind.introspect.AnnotationCollector$NoAnnotations",
729:       "com.fasterxml.jackson.databind.introspect.AnnotationCollector",
730:       "com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver",
731:       "com.fasterxml.jackson.databind.introspect.Annotated",
732:       "com.fasterxml.jackson.databind.introspect.AnnotatedClass$Creators",
733:       "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
734:       "com.fasterxml.jackson.databind.BeanDescription",
735:       "com.fasterxml.jackson.databind.introspect.BasicBeanDescription",
736:       "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector",
737:       "com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter",
738:       "com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter",
739:       "com.fasterxml.jackson.core.util.DefaultIndenter",
740:       "com.fasterxml.jackson.core.util.Separators",
741:       "com.fasterxml.jackson.core.PrettyPrinter",
742:       "com.fasterxml.jackson.databind.SerializationConfig",
743:       "com.fasterxml.jackson.databind.cfg.ContextAttributes",
744:       "com.fasterxml.jackson.databind.cfg.ContextAttributes$Impl",
745:       "com.fasterxml.jackson.databind.SerializationFeature",
746:       "com.fasterxml.jackson.databind.node.JsonNodeFactory",
747:       "com.fasterxml.jackson.databind.ser.SerializerFactory",
748:       "com.fasterxml.jackson.databind.ser.std.StdScalarSerializer",
749:       "com.fasterxml.jackson.databind.ser.std.StringSerializer",
750:       "com.fasterxml.jackson.databind.ser.std.ToStringSerializer",
751:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
752:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$Base",
753:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntegerSerializer",
754:       "com.fasterxml.jackson.core.JsonParser$NumberType",
755:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$LongSerializer",
756:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntLikeSerializer",
757:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$ShortSerializer",
758:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$DoubleSerializer",
759:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$FloatSerializer",
760:       "com.fasterxml.jackson.databind.ser.std.BooleanSerializer",
761:       "com.fasterxml.jackson.databind.ser.std.NumberSerializer",
762:       "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase",
763:       "com.fasterxml.jackson.databind.ser.std.CalendarSerializer",
764:       "com.fasterxml.jackson.databind.ser.std.DateSerializer",
765:       "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers",
766:       "com.fasterxml.jackson.databind.ser.std.UUIDSerializer",
767:       "com.fasterxml.jackson.databind.ser.BasicSerializerFactory",
768:       "com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig",
769:       "com.fasterxml.jackson.databind.ser.BeanSerializerFactory",
770:       "com.fasterxml.jackson.databind.InjectableValues",
771:       "com.fasterxml.jackson.databind.InjectableValues$Std",
772:       "com.fasterxml.jackson.databind.ObjectReader",
773:       "com.fasterxml.jackson.core.io.IOContext",
774:       "com.fasterxml.jackson.databind.MappingJsonFactory",
775:       "com.fasterxml.jackson.databind.introspect.AnnotationCollector$EmptyCollector",
776:       "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
777:       "com.fasterxml.jackson.databind.util.ArrayIterator",
778:       "com.fasterxml.jackson.databind.JsonDeserializer",
779:       "com.fasterxml.jackson.databind.deser.std.StdDeserializer",
780:       "com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer",
781:       "com.fasterxml.jackson.databind.type.TypeBindings$AsKey",
782:       "com.fasterxml.jackson.databind.type.ClassStack",
783:       "com.fasterxml.jackson.databind.type.TypeBindings$TypeParamStash",
784:       "com.fasterxml.jackson.databind.type.CollectionLikeType",
785:       "com.fasterxml.jackson.databind.type.CollectionType",
786:       "com.fasterxml.jackson.databind.deser.impl.CreatorCollector",
787:       "com.fasterxml.jackson.databind.introspect.CollectorBase",
788:       "com.fasterxml.jackson.databind.introspect.AnnotatedCreatorCollector",
789:       "com.fasterxml.jackson.databind.util.ClassUtil$Ctor",
790:       "com.fasterxml.jackson.databind.introspect.AnnotatedMember",
791:       "com.fasterxml.jackson.databind.introspect.AnnotatedWithParams",
792:       "com.fasterxml.jackson.databind.introspect.AnnotatedConstructor",
793:       "com.fasterxml.jackson.databind.introspect.AnnotationMap",
794:       "com.fasterxml.jackson.databind.introspect.AnnotatedMethod",
795:       "com.fasterxml.jackson.annotation.JsonCreator$Mode",
796:       "com.fasterxml.jackson.annotation.PropertyAccessor",
797:       "com.fasterxml.jackson.annotation.JsonAutoDetect$1",
798:       "com.fasterxml.jackson.databind.deser.impl.CreatorCandidate",
799:       "com.fasterxml.jackson.databind.introspect.AnnotatedParameter",
800:       "com.fasterxml.jackson.databind.deser.impl.CreatorCandidate$Param",
801:       "com.fasterxml.jackson.databind.deser.impl.CreatorCollector$StdTypeConstructor",
802:       "com.fasterxml.jackson.databind.deser.ValueInstantiator",
803:       "com.fasterxml.jackson.databind.deser.std.StdValueInstantiator",
804:       "com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase",
805:       "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer",
806:       "com.fasterxml.jackson.databind.util.AccessPattern",
807:       "com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider",
808:       "com.fasterxml.jackson.databind.type.MapLikeType",
809:       "com.fasterxml.jackson.databind.type.MapType",
810:       "com.fasterxml.jackson.databind.deser.std.MapDeserializer",
811:       "com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value",
812:       "com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer",
813:       "com.fasterxml.jackson.databind.deser.std.StringDeserializer",
814:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers",
815:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer",
816:       "com.fasterxml.jackson.databind.util.LinkedNode",
817:       "com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla",
818:       "com.fasterxml.jackson.core.io.InputDecorator",
819:       "com.fasterxml.jackson.core.JsonProcessingException",
820:       "com.fasterxml.jackson.databind.JsonMappingException",
821:       "com.fasterxml.jackson.databind.exc.MismatchedInputException",
822:       "com.fasterxml.jackson.databind.AbstractTypeResolver",
823:       "com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver",
824:       "com.fasterxml.jackson.databind.deser.Deserializers$Base",
825:       "com.fasterxml.jackson.databind.util.ArrayBuilders",
826:       "com.fasterxml.jackson.core.util.BufferRecycler",
827:       "com.fasterxml.jackson.databind.exc.InvalidFormatException",
828:       "com.fasterxml.jackson.databind.module.SimpleDeserializers",
829:       "com.fasterxml.jackson.databind.type.ResolvedRecursiveType",
830:       "com.fasterxml.jackson.databind.deser.ValueInstantiators$Base",
831:       "com.fasterxml.jackson.databind.module.SimpleValueInstantiators",
832:       "com.fasterxml.jackson.databind.deser.BeanDeserializerModifier",
833:       "com.fasterxml.jackson.core.type.TypeReference",
834:       "com.fasterxml.jackson.annotation.ObjectIdGenerator",
835:       "com.fasterxml.jackson.databind.deser.AbstractDeserializer",
836:       "com.fasterxml.jackson.databind.module.SimpleKeyDeserializers",
837:       "com.fasterxml.jackson.core.filter.TokenFilter",
838:       "com.fasterxml.jackson.core.JsonParser",
839:       "com.fasterxml.jackson.core.base.ParserMinimalBase",
840:       "com.fasterxml.jackson.core.base.ParserBase",
841:       "com.fasterxml.jackson.core.io.CharTypes",
842:       "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
843:       "com.fasterxml.jackson.core.util.TextBuffer",
844:       "com.fasterxml.jackson.core.JsonStreamContext",
845:       "com.fasterxml.jackson.core.json.JsonReadContext",
846:       "com.fasterxml.jackson.core.util.JsonParserDelegate",
847:       "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
848:       "com.fasterxml.jackson.core.filter.TokenFilterContext",
849:       "com.fasterxml.jackson.databind.node.TreeTraversingParser",
850:       "com.fasterxml.jackson.databind.ObjectMapper$2",
851:       "com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair",
852:       "com.fasterxml.jackson.databind.ext.OptionalHandlerFactory",
853:       "com.fasterxml.jackson.databind.deser.std.FromStringDeserializer",
854:       "com.fasterxml.jackson.databind.deser.std.JdkDeserializers",
855:       "com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator",
856:       "com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector",
857:       "com.fasterxml.jackson.databind.introspect.TypeResolutionContext$Basic",
858:       "com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector$FieldBuilder",
859:       "com.fasterxml.jackson.databind.introspect.AnnotatedField",
860:       "com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition",
861:       "com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty",
862:       "com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type",
863:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder",
864:       "com.fasterxml.jackson.core.util.InternCache",
865:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked",
866:       "com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector",
867:       "com.fasterxml.jackson.databind.introspect.MemberKey",
868:       "com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector$MethodBuilder",
869:       "com.fasterxml.jackson.databind.introspect.AnnotationCollector$OneCollector",
870:       "com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap",
871:       "com.fasterxml.jackson.databind.util.BeanUtil",
872:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$9",
873:       "com.fasterxml.jackson.annotation.JsonProperty$Access",
874:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$10",
875:       "com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder",
876:       "com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase",
877:       "com.fasterxml.jackson.databind.deser.impl.FailingDeserializer",
878:       "com.fasterxml.jackson.databind.deser.SettableBeanProperty",
879:       "com.fasterxml.jackson.databind.deser.impl.MethodProperty",
880:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$4",
881:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$5",
882:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$6",
883:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$7",
884:       "com.fasterxml.jackson.databind.PropertyMetadata",
885:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$2",
886:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$8",
887:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$1",
888:       "com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap",
889:       "com.fasterxml.jackson.databind.deser.BeanDeserializerBase",
890:       "com.fasterxml.jackson.databind.deser.BeanDeserializer",
891:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$PrimitiveOrWrapperDeserializer",
892:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BooleanDeserializer",
893:       "com.fasterxml.jackson.databind.type.ArrayType",
894:       "com.fasterxml.jackson.annotation.JsonFormat$Feature",
895:       "com.fasterxml.jackson.databind.JsonSerializable$Base",
896:       "com.fasterxml.jackson.databind.JsonNode",
897:       "com.fasterxml.jackson.databind.node.BaseJsonNode",
898:       "com.fasterxml.jackson.databind.node.ContainerNode",
899:       "com.fasterxml.jackson.databind.node.ArrayNode",
900:       "com.fasterxml.jackson.databind.node.NodeCursor",
901:       "com.fasterxml.jackson.databind.node.NodeCursor$ArrayCursor",
902:       "com.fasterxml.jackson.core.JsonLocation",
903:       "com.fasterxml.jackson.core.util.BufferRecyclers",
904:       "com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper",
905:       "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
906:       "com.fasterxml.jackson.databind.deser.DataFormatReaders",
907:       "com.fasterxml.jackson.core.format.InputAccessor$Std",
908:       "com.fasterxml.jackson.databind.deser.DataFormatReaders$AccessorForReader",
909:       "com.fasterxml.jackson.databind.deser.DataFormatReaders$Match",
910:       "com.fasterxml.jackson.databind.node.ValueNode",
911:       "com.fasterxml.jackson.databind.node.NullNode",
912:       "com.fasterxml.jackson.databind.exc.InvalidDefinitionException",
913:       "com.fasterxml.jackson.databind.ext.CoreXMLDeserializers$Std",
914:       "com.fasterxml.jackson.core.util.MinimalPrettyPrinter",
915:       "com.fasterxml.jackson.databind.ObjectWriter",
916:       "com.fasterxml.jackson.databind.ObjectWriter$GeneratorSettings",
917:       "com.fasterxml.jackson.databind.ObjectWriter$Prefetch",
918:       "com.fasterxml.jackson.databind.node.BooleanNode",
919:       "com.fasterxml.jackson.databind.node.NodeCursor$RootCursor",
920:       "com.fasterxml.jackson.databind.cfg.MutableConfigOverride",
921:       "com.fasterxml.jackson.databind.type.ReferenceType",
922:       "com.fasterxml.jackson.core.io.OutputDecorator",
923:       "com.fasterxml.jackson.core.io.CharacterEscapes",
924:       "com.fasterxml.jackson.core.JsonpCharacterEscapes",
925:       "com.fasterxml.jackson.databind.node.NumericNode",
926:       "com.fasterxml.jackson.databind.node.FloatNode",
927:       "com.fasterxml.jackson.databind.type.TypeModifier",
928:       "com.fasterxml.jackson.databind.node.ObjectNode",
929:       "com.fasterxml.jackson.databind.node.DoubleNode",
930:       "com.fasterxml.jackson.databind.node.NodeCursor$ObjectCursor",
931:       "com.fasterxml.jackson.core.util.JsonParserSequence",
932:       "com.fasterxml.jackson.databind.type.PlaceholderForType",
933:       "com.fasterxml.jackson.databind.deser.ValueInstantiator$Base",
934:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer",
935:       "com.fasterxml.jackson.databind.util.ObjectBuffer",
936:       "com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer",
937:       "com.fasterxml.jackson.databind.deser.std.DateDeserializers",
938:       "com.fasterxml.jackson.databind.ser.BeanSerializerBuilder",
939:       "com.fasterxml.jackson.databind.exc.InvalidTypeIdException",
940:       "com.fasterxml.jackson.databind.introspect.NopAnnotationIntrospector$1",
941:       "com.fasterxml.jackson.databind.introspect.NopAnnotationIntrospector",
942:       "com.fasterxml.jackson.databind.BeanProperty$Std",
943:       "com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase",
944:       "com.fasterxml.jackson.core.json.async.NonBlockingJsonParser",
945:       "com.fasterxml.jackson.databind.KeyDeserializer",
946:       "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer",
947:       "com.fasterxml.jackson.databind.type.ClassKey",
948:       "com.fasterxml.jackson.databind.util.RawValue",
949:       "com.fasterxml.jackson.databind.BeanProperty$Bogus",
950:       "com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey",
951:       "com.fasterxml.jackson.databind.node.DecimalNode",
952:       "com.fasterxml.jackson.databind.exc.PropertyBindingException",
953:       "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException",
954:       "com.fasterxml.jackson.databind.util.NameTransformer$NopTransformer",
955:       "com.fasterxml.jackson.databind.util.NameTransformer",
956:       "com.fasterxml.jackson.databind.util.NameTransformer$Chained",
957:       "com.fasterxml.jackson.core.util.VersionUtil",
958:       "com.fasterxml.jackson.core.Version",
959:       "com.fasterxml.jackson.databind.cfg.PackageVersion",
960:       "com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase",
961:       "com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver",
962:       "com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer",
963:       "com.fasterxml.jackson.databind.deser.impl.SetterlessProperty",
964:       "com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std",
965:       "com.fasterxml.jackson.annotation.ObjectIdGenerators$Base",
966:       "com.fasterxml.jackson.annotation.ObjectIdGenerators$StringIdGenerator",
967:       "com.fasterxml.jackson.annotation.SimpleObjectIdResolver",
968:       "com.fasterxml.jackson.databind.deser.impl.ObjectIdReader",
969:       "com.fasterxml.jackson.core.JsonParseException",
970:       "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper$Base",
971:       "com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap",
972:       "com.fasterxml.jackson.databind.util.TypeKey",
973:       "com.fasterxml.jackson.databind.ser.std.SerializableSerializer",
974:       "com.fasterxml.jackson.core.JsonGenerator",
975:       "com.fasterxml.jackson.core.util.JsonGeneratorDelegate",
976:       "com.fasterxml.jackson.databind.ext.DOMSerializer",
977:       "com.fasterxml.jackson.databind.node.TextNode",
978:       "com.fasterxml.jackson.core.base.GeneratorBase",
979:       "com.fasterxml.jackson.core.json.JsonGeneratorImpl",
980:       "com.fasterxml.jackson.core.json.UTF8JsonGenerator",
981:       "com.fasterxml.jackson.core.json.JsonWriteContext",
982:       "com.fasterxml.jackson.databind.node.BigIntegerNode",
983:       "com.fasterxml.jackson.core.json.DupDetector",
984:       "com.fasterxml.jackson.databind.deser.impl.FieldProperty",
985:       "com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition",
986:       "com.fasterxml.jackson.databind.deser.std.ThrowableDeserializer",
987:       "com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer",
988:       "com.fasterxml.jackson.databind.introspect.ObjectIdInfo",
989:       "com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate",
990:       "com.fasterxml.jackson.databind.ser.Serializers$Base",
991:       "com.fasterxml.jackson.core.io.NumberInput",
992:       "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer",
993:       "com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer",
994:       "com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateDeserializer",
995:       "com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer",
996:       "com.fasterxml.jackson.core.util.ByteArrayBuilder",
997:       "com.fasterxml.jackson.databind.node.POJONode",
998:       "com.fasterxml.jackson.databind.introspect.VirtualAnnotatedMember",
999:       "com.fasterxml.jackson.core.io.DataOutputAsStream",
1000:       "com.fasterxml.jackson.databind.ser.PropertyBuilder",
1001:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$3",
1002:       "com.fasterxml.jackson.databind.ser.PropertyBuilder$1",
1003:       "com.fasterxml.jackson.databind.ser.PropertyWriter",
1004:       "com.fasterxml.jackson.databind.ser.BeanPropertyWriter",
1005:       "com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap",
1006:       "com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Empty",
1007:       "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase",
1008:       "com.fasterxml.jackson.databind.ser.BeanSerializer",
1009:       "com.fasterxml.jackson.core.io.JsonStringEncoder",
1010:       "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringKD",
1011:       "com.fasterxml.jackson.databind.node.JsonNodeType",
1012:       "com.fasterxml.jackson.databind.introspect.AnnotationCollector$OneAnnotation",
1013:       "com.fasterxml.jackson.databind.MappingIterator",
1014:       "com.fasterxml.jackson.databind.util.TokenBuffer",
1015:       "com.fasterxml.jackson.databind.util.TokenBuffer$Segment",
1016:       "com.fasterxml.jackson.databind.ser.std.EnumSerializer",
1017:       "com.fasterxml.jackson.databind.util.EnumValues",
1018:       "com.fasterxml.jackson.databind.util.TokenBuffer$Parser",
1019:       "com.fasterxml.jackson.databind.util.TokenBufferReadContext",
1020:       "com.fasterxml.jackson.databind.deser.BeanDeserializer$1",
1021:       "com.fasterxml.jackson.core.json.WriterBasedJsonGenerator",
1022:       "com.fasterxml.jackson.databind.node.TreeTraversingParser$1",
1023:       "com.fasterxml.jackson.databind.deser.CreatorProperty",
1024:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$1",
1025:       "com.fasterxml.jackson.databind.jsontype.NamedType",
1026:       "com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer",
1027:       "com.fasterxml.jackson.databind.node.ShortNode",
1028:       "com.fasterxml.jackson.databind.deser.impl.ReadableObjectId",
1029:       "com.fasterxml.jackson.databind.node.IntNode",
1030:       "com.fasterxml.jackson.annotation.ObjectIdGenerators$IntSequenceGenerator",
1031:       "com.fasterxml.jackson.databind.JsonMappingException$Reference",
1032:       "com.fasterxml.jackson.databind.ser.std.ClassSerializer",
1033:       "com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer",
1034:       "com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer",
1035:       "com.fasterxml.jackson.databind.node.LongNode",
1036:       "com.fasterxml.jackson.core.io.NumberOutput",
1037:       "com.fasterxml.jackson.core.filter.JsonPointerBasedFilter",
1038:       "com.fasterxml.jackson.core.JsonPointer",
1039:       "com.fasterxml.jackson.databind.node.BinaryNode",
1040:       "com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers",
1041:       "com.fasterxml.jackson.core.util.RequestPayload",
1042:       "com.fasterxml.jackson.databind.Module",
1043:       "com.fasterxml.jackson.databind.module.SimpleModule",
1044:       "com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter",
1045:       "com.fasterxml.jackson.annotation.JsonAutoDetect$Value",
1046:       "com.fasterxml.jackson.core.json.UTF8DataInputJsonParser",
1047:       "com.fasterxml.jackson.core.io.UTF32Reader",
1048:       "com.fasterxml.jackson.annotation.JsonTypeInfo$Id"
1049:     );
1050:   }
1051: }

[MASTER] 21:53:18.118 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
assertFalse(deserializerFactoryConfig0.hasAbstractTypeResolvers());
assertFalse(deserializerFactoryConfig0.hasValueInstantiators());
assertTrue(deserializerFactoryConfig0.hasKeyDeserializers());
assertFalse(deserializerFactoryConfig0.hasDeserializers());
assertFalse(deserializerFactoryConfig0.hasDeserializerModifiers());
assertNotNull(deserializerFactoryConfig0);

BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
assertFalse(deserializerFactoryConfig0.hasAbstractTypeResolvers());
assertFalse(deserializerFactoryConfig0.hasValueInstantiators());
assertTrue(deserializerFactoryConfig0.hasKeyDeserializers());
assertFalse(deserializerFactoryConfig0.hasDeserializers());
assertFalse(deserializerFactoryConfig0.hasDeserializerModifiers());
assertNotNull(beanDeserializerFactory0);

DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
assertFalse(deserializerFactoryConfig0.hasAbstractTypeResolvers());
assertFalse(deserializerFactoryConfig0.hasValueInstantiators());
assertTrue(deserializerFactoryConfig0.hasKeyDeserializers());
assertFalse(deserializerFactoryConfig0.hasDeserializers());
assertFalse(deserializerFactoryConfig0.hasDeserializerModifiers());
assertEquals(0, defaultDeserializationContext_Impl0.getDeserializationFeatures());
assertNotNull(defaultDeserializationContext_Impl0);

DefaultDeserializationContext defaultDeserializationContext0 = defaultDeserializationContext_Impl0.with(beanDeserializerFactory0);
assertFalse(defaultDeserializationContext0.equals((Object)defaultDeserializationContext_Impl0));
assertFalse(deserializerFactoryConfig0.hasAbstractTypeResolvers());
assertFalse(deserializerFactoryConfig0.hasValueInstantiators());
assertTrue(deserializerFactoryConfig0.hasKeyDeserializers());
assertFalse(deserializerFactoryConfig0.hasDeserializers());
assertFalse(deserializerFactoryConfig0.hasDeserializerModifiers());
assertEquals(0, defaultDeserializationContext_Impl0.getDeserializationFeatures());
assertEquals(0, defaultDeserializationContext0.getDeserializationFeatures());
assertNotSame(defaultDeserializationContext_Impl0, defaultDeserializationContext0);
assertNotSame(defaultDeserializationContext0, defaultDeserializationContext_Impl0);
assertNotNull(defaultDeserializationContext0);

JavaType javaType0 = defaultDeserializationContext0.getContextualType();
assertFalse(defaultDeserializationContext_Impl0.equals((Object)defaultDeserializationContext0));
assertFalse(defaultDeserializationContext0.equals((Object)defaultDeserializationContext_Impl0));
assertFalse(deserializerFactoryConfig0.hasAbstractTypeResolvers());
assertFalse(deserializerFactoryConfig0.hasValueInstantiators());
assertTrue(deserializerFactoryConfig0.hasKeyDeserializers());
assertFalse(deserializerFactoryConfig0.hasDeserializers());
assertFalse(deserializerFactoryConfig0.hasDeserializerModifiers());
assertEquals(0, defaultDeserializationContext_Impl0.getDeserializationFeatures());
assertEquals(0, defaultDeserializationContext0.getDeserializationFeatures());
assertNotSame(defaultDeserializationContext_Impl0, defaultDeserializationContext0);
assertNotSame(defaultDeserializationContext0, defaultDeserializationContext_Impl0);
assertNull(javaType0);

ObjectBuffer objectBuffer0 = new ObjectBuffer();
assertEquals(0, objectBuffer0.bufferedSize());
assertEquals(0, objectBuffer0.initialCapacity());
assertNotNull(objectBuffer0);

Object[] objectArray0 = objectBuffer0.resetAndStart();
assertEquals(12, objectBuffer0.initialCapacity());
assertEquals(0, objectBuffer0.bufferedSize());
assertEquals(12, objectArray0.length);
assertNotNull(objectArray0);

defaultDeserializationContext0.returnObjectBuffer(objectBuffer0);
assertFalse(defaultDeserializationContext_Impl0.equals((Object)defaultDeserializationContext0));
assertFalse(defaultDeserializationContext0.equals((Object)defaultDeserializationContext_Impl0));
assertFalse(deserializerFactoryConfig0.hasAbstractTypeResolvers());
assertFalse(deserializerFactoryConfig0.hasValueInstantiators());
assertTrue(deserializerFactoryConfig0.hasKeyDeserializers());
assertFalse(deserializerFactoryConfig0.hasDeserializers());
assertFalse(deserializerFactoryConfig0.hasDeserializerModifiers());
assertEquals(0, defaultDeserializationContext_Impl0.getDeserializationFeatures());
assertEquals(0, defaultDeserializationContext0.getDeserializationFeatures());
assertEquals(12, objectBuffer0.initialCapacity());
assertEquals(0, objectBuffer0.bufferedSize());
assertNotSame(defaultDeserializationContext_Impl0, defaultDeserializationContext0);
assertNotSame(defaultDeserializationContext0, defaultDeserializationContext_Impl0);

JsonFactory jsonFactory0 = new JsonFactory();
assertEquals(" ", jsonFactory0.getRootValueSeparator());
assertTrue(jsonFactory0.canUseCharArrays());
assertFalse(jsonFactory0.requiresCustomCodec());
assertEquals("JSON", jsonFactory0.getFormatName());
assertTrue(jsonFactory0.canParseAsync());
assertFalse(jsonFactory0.requiresPropertyOrdering());
assertFalse(jsonFactory0.canHandleBinaryNatively());
assertNotNull(jsonFactory0);

DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
assertNotNull(defaultSerializerProvider_Impl0);

SimpleAbstractTypeResolver simpleAbstractTypeResolver0 = new SimpleAbstractTypeResolver();
assertNotNull(simpleAbstractTypeResolver0);

Class<ArrayDeque> class0 = ArrayDeque.class;
simpleAbstractTypeResolver0.addMapping((Class<ArrayDeque<ArrayDeque>>) class0, (Class<? extends ArrayDeque<ArrayDeque>>) class0);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing tests to file
* Writing JUnit test case 'DeserializationContext_ESTest' to results/JacksonDatabind-103/com.fasterxml.jackson.databind.DeserializationContext/BBC-F0/tests/18
* Done!

* Computation finished
