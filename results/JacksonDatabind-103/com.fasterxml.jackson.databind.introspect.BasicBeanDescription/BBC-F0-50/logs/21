* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-50
* Going to generate test cases for class: com.fasterxml.jackson.databind.introspect.BasicBeanDescription
* Starting Client-0
* Connecting to master process on port 7448
* Analyzing classpath: 
  - subjects/buggy-versions/JacksonDatabind-103/target/classes
  - defects4j/framework/projects/JacksonDatabind/lib/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar
  - defects4j/framework/projects/JacksonDatabind/lib/com/fasterxml/jackson/core/jackson-core/2.9.7/jackson-core-2.9.7.jar
* Finished analyzing classpath
* Generating tests for class com.fasterxml.jackson.databind.introspect.BasicBeanDescription
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1196
* Using seed 3690461597
* Starting evolution
bbc usage percentage is: 50%
* Initial Number of Goals in DynaMOSA = 441 / 1196
[MASTER] 01:20:45.234 [logback-3] ERROR TestCluster - Failed to check cache for java.util.HashMap<K, V> : Type points to itself
[MASTER] 01:20:45.658 [logback-3] ERROR TestCluster - Failed to check cache for java.util.TreeSet<E> : Type points to itself
[MASTER] 01:20:47.817 [logback-3] ERROR TestCluster - Failed to check cache for com.fasterxml.jackson.databind.JsonDeserializer<T> : Type points to itself
[MASTER] 01:21:22.162 [logback-3] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 01:21:41.467 [logback-3] ERROR TestCluster - Failed to check cache for com.fasterxml.jackson.databind.JsonSerializer<T> : Type points to itself
[MASTER] 01:22:37.640 [logback-3] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
[MASTER] 01:23:36.479 [logback-3] ERROR TestCluster - Failed to check cache for com.fasterxml.jackson.annotation.ObjectIdGenerator<T> : Type points to itself
[MASTER] 01:23:41.595 [logback-3] ERROR TestCluster - Failed to check cache for java.time.temporal.TemporalQuery<R> : Type points to itself
[MASTER] 01:24:23.763 [logback-3] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[MASTER] 01:25:13.897 [logback-3] ERROR TestCluster - Failed to check cache for java.util.function.BiFunction<T, U, R> : Type points to itself
[MASTER] 01:28:17.484 [logback-3] ERROR TestCluster - Failed to check cache for com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder<?> : Invalid generic instance
* Search finished after 601s and 1600 generations, 425936 statements, best individual has fitness: 595.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 67%
* Total number of goals: 234
* Number of covered goals: 156
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 55%
* Total number of goals: 197
* Number of covered goals: 108
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 95%
* Total number of goals: 19
* Number of covered goals: 18
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 52%
* Total number of goals: 248
* Number of covered goals: 129
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 18%
* Total number of goals: 230
* Number of covered goals: 42
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 96%
* Total number of goals: 45
* Number of covered goals: 43
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 78%
* Total number of goals: 45
* Number of covered goals: 35
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 55%
* Total number of goals: 197
* Number of covered goals: 108
* Generated 51 tests with total length 195
* Resulting test suite's coverage: 58% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 23%
* Compiling and checking tests
[MASTER] 01:31:07.456 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:31:08.237 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:31:08.948 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:31:09.734 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:31:10.636 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:31:11.938 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:31:12.778 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:31:12.787 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: NullPointerException
[MASTER] 01:31:12.788 [logback-1] WARN  JUnitAnalyzer - Failing test:
 BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.INT_DESC;
BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
PropertyName propertyName0 = beanProperty_Bogus0.getFullName();
basicBeanDescription0.hasProperty(propertyName0);

[MASTER] 01:31:13.679 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:31:14.384 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:31:15.097 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:31:16.022 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:31:16.824 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:31:17.640 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:31:18.434 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:31:19.258 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:31:20.032 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:31:20.964 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:31:22.215 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:31:22.906 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:31:23.646 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:31:24.415 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:31:25.223 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:31:25.929 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:31:26.627 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:31:27.392 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:31:28.118 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:31:28.916 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:31:29.623 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:31:30.411 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:31:31.115 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:31:31.880 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:31:31.881 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: NullPointerException
[MASTER] 01:31:31.881 [logback-1] WARN  JUnitAnalyzer - Failing test:
 BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.INT_DESC;
basicBeanDescription0.findBackReferences();

[MASTER] 01:31:32.709 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:31:33.513 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:31:34.269 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:31:35.009 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:31:35.820 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:31:36.908 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:31:37.653 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:31:38.461 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:31:39.191 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:31:39.961 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:31:40.773 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:31:41.496 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:31:42.281 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:31:43.068 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:31:43.901 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:31:44.638 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:31:45.351 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:31:46.076 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:31:46.791 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:31:47.638 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing tests to file
* Writing JUnit test case 'BasicBeanDescription_ESTest' to results/JacksonDatabind-103/com.fasterxml.jackson.databind.introspect.BasicBeanDescription/BBC-F0-50/tests/21
* Done!

* Computation finished
