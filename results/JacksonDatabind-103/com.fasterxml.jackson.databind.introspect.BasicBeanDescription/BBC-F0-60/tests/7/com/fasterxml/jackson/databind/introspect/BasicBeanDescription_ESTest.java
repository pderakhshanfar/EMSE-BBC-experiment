/*
 * This file was automatically generated by EvoSuite
 * Mon Mar 08 08:05:48 GMT 2021
 */

package com.fasterxml.jackson.databind.introspect;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.ObjectIdResolver;
import com.fasterxml.jackson.annotation.PropertyAccessor;
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.databind.AnnotationIntrospector;
import com.fasterxml.jackson.databind.JavaType;
import com.fasterxml.jackson.databind.MapperFeature;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.ObjectReader;
import com.fasterxml.jackson.databind.PropertyName;
import com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder;
import com.fasterxml.jackson.databind.cfg.MapperConfig;
import com.fasterxml.jackson.databind.introspect.AnnotatedClass;
import com.fasterxml.jackson.databind.introspect.AnnotatedConstructor;
import com.fasterxml.jackson.databind.introspect.AnnotatedField;
import com.fasterxml.jackson.databind.introspect.AnnotatedMember;
import com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
import com.fasterxml.jackson.databind.introspect.AnnotatedParameter;
import com.fasterxml.jackson.databind.introspect.BasicBeanDescription;
import com.fasterxml.jackson.databind.introspect.BasicClassIntrospector;
import com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition;
import com.fasterxml.jackson.databind.introspect.ClassIntrospector;
import com.fasterxml.jackson.databind.introspect.ObjectIdInfo;
import com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector;
import com.fasterxml.jackson.databind.type.CollectionLikeType;
import com.fasterxml.jackson.databind.type.MapLikeType;
import com.fasterxml.jackson.databind.type.ReferenceType;
import com.fasterxml.jackson.databind.type.ResolvedRecursiveType;
import com.fasterxml.jackson.databind.type.SimpleType;
import com.fasterxml.jackson.databind.type.TypeBindings;
import com.fasterxml.jackson.databind.type.TypeFactory;
import com.fasterxml.jackson.databind.util.Annotations;
import com.fasterxml.jackson.databind.util.Converter;
import java.io.IOException;
import java.io.StringWriter;
import java.io.Writer;
import java.lang.reflect.Array;
import java.lang.reflect.Constructor;
import java.lang.reflect.Method;
import java.lang.reflect.Type;
import java.nio.CharBuffer;
import java.time.DayOfWeek;
import java.time.ZoneId;
import java.time.chrono.ChronoLocalDate;
import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Map;
import java.util.PriorityQueue;
import java.util.Set;
import java.util.Stack;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BasicBeanDescription_ESTest extends BasicBeanDescription_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JsonFactory jsonFactory0 = new JsonFactory();
      ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);
      ObjectMapper objectMapper1 = objectMapper0.enableDefaultTyping();
      JsonInclude.Include jsonInclude_Include0 = JsonInclude.Include.NON_EMPTY;
      ObjectMapper objectMapper2 = objectMapper1.setSerializationInclusion(jsonInclude_Include0);
      PropertyAccessor propertyAccessor0 = PropertyAccessor.ALL;
      JsonAutoDetect.Visibility jsonAutoDetect_Visibility0 = JsonAutoDetect.Visibility.NON_PRIVATE;
      ObjectMapper objectMapper3 = objectMapper2.setVisibility(propertyAccessor0, jsonAutoDetect_Visibility0);
      MockFile mockFile0 = new MockFile("JSON", "%{arRxSQ1%$LD\"WX");
      MockFileWriter mockFileWriter0 = new MockFileWriter(mockFile0);
      try { 
        objectMapper3.writeValue((Writer) mockFileWriter0, (Object) objectMapper0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Loop has been executed more times than the allowed 10000 (through reference chain: com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.core.JsonFactory[\"_objectCodec\"])
         //
         verifyException("com.fasterxml.jackson.databind.JsonMappingException", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.STRING_DESC;
      Class<MapLikeType>[] classArray0 = (Class<MapLikeType>[]) Array.newInstance(Class.class, 0);
      basicBeanDescription0._defaultViews = classArray0;
      // Undeclared exception!
      try { 
        basicBeanDescription0.findDefaultViews();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.introspect.BasicBeanDescription", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.INT_DESC;
      List<AnnotatedMethod> list0 = basicBeanDescription0.getFactoryMethods();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.INT_DESC;
      List<AnnotatedConstructor> list0 = basicBeanDescription0.getConstructors();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.BOOLEAN_DESC;
      boolean boolean0 = basicBeanDescription0.hasKnownClassAnnotations();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.INT_DESC;
      ObjectIdInfo objectIdInfo0 = basicBeanDescription0.getObjectIdInfo();
      assertNull(objectIdInfo0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.LONG_DESC;
      ObjectIdInfo objectIdInfo0 = basicBeanDescription0.getObjectIdInfo();
      assertNull(objectIdInfo0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.STRING_DESC;
      ObjectIdInfo objectIdInfo0 = basicBeanDescription0.getObjectIdInfo();
      assertNull(objectIdInfo0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.LONG_DESC;
      AnnotatedClass annotatedClass0 = basicBeanDescription0.getClassInfo();
      assertFalse(annotatedClass0.hasAnnotations());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.INT_DESC;
      Class<Object>[] classArray0 = (Class<Object>[]) Array.newInstance(Class.class, 2);
      Constructor<?> constructor0 = basicBeanDescription0.findSingleArgConstructor(classArray0);
      assertNull(constructor0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.INT_DESC;
      Converter<Object, Object> converter0 = basicBeanDescription0.findSerializationConverter();
      assertNull(converter0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.INT_DESC;
      JsonInclude.Value jsonInclude_Value0 = basicBeanDescription0.findPropertyInclusion((JsonInclude.Value) null);
      assertNull(jsonInclude_Value0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.LONG_DESC;
      Stack<BeanPropertyDefinition> stack0 = new Stack<BeanPropertyDefinition>();
      List<BeanPropertyDefinition> list0 = basicBeanDescription0.findProperties();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.INT_DESC;
      ArrayList<BeanPropertyDefinition> arrayList0 = new ArrayList<BeanPropertyDefinition>();
      basicBeanDescription0._properties = (List<BeanPropertyDefinition>) arrayList0;
      arrayList0.add((BeanPropertyDefinition) null);
      List<BeanPropertyDefinition> list0 = basicBeanDescription0.findProperties();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.LONG_DESC;
      Class<?> class0 = basicBeanDescription0.findPOJOBuilder();
      assertNull(class0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.LONG_DESC;
      AnnotatedMember annotatedMember0 = basicBeanDescription0.findJsonValueAccessor();
      assertNull(annotatedMember0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.INT_DESC;
      Class<ObjectIdResolver>[] classArray0 = (Class<ObjectIdResolver>[]) Array.newInstance(Class.class, 1);
      Method method0 = basicBeanDescription0.findFactoryMethod(classArray0);
      assertNull(method0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Class<Object> class0 = Object.class;
      AnnotatedClass annotatedClass0 = new AnnotatedClass(class0);
      BasicBeanDescription basicBeanDescription0 = BasicBeanDescription.forOtherUse((MapperConfig<?>) null, (JavaType) null, annotatedClass0);
      Converter<Object, Object> converter0 = basicBeanDescription0.findDeserializationConverter();
      assertNull(converter0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.INT_DESC;
      AnnotatedConstructor annotatedConstructor0 = basicBeanDescription0.findDefaultConstructor();
      assertNull(annotatedConstructor0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.BOOLEAN_DESC;
      List<BeanPropertyDefinition> list0 = basicBeanDescription0.findBackReferences();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.LONG_DESC;
      Stack<BeanPropertyDefinition> stack0 = new Stack<BeanPropertyDefinition>();
      List<BeanPropertyDefinition> list0 = basicBeanDescription0._properties();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.INT_DESC;
      ArrayList<BeanPropertyDefinition> arrayList0 = new ArrayList<BeanPropertyDefinition>();
      basicBeanDescription0._properties = (List<BeanPropertyDefinition>) arrayList0;
      arrayList0.add((BeanPropertyDefinition) null);
      List<BeanPropertyDefinition> list0 = basicBeanDescription0._properties();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.INT_DESC;
      Converter<Object, Object> converter0 = basicBeanDescription0._createConverter((Object) null);
      assertNull(converter0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.INT_DESC;
      // Undeclared exception!
      try { 
        basicBeanDescription0.isFactoryMethod((AnnotatedMethod) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      // Undeclared exception!
      try { 
        BasicBeanDescription.forSerialization((POJOPropertiesCollector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.introspect.BasicBeanDescription", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
      try { 
        BasicBeanDescription.forDeserialization((POJOPropertiesCollector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.introspect.BasicBeanDescription", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.LONG_DESC;
      List<BeanPropertyDefinition> list0 = basicBeanDescription0.findProperties();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.LONG_DESC;
      List<BeanPropertyDefinition> list0 = basicBeanDescription0.findBackReferences();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.INT_DESC;
      ArrayList<BeanPropertyDefinition> arrayList0 = new ArrayList<BeanPropertyDefinition>();
      basicBeanDescription0._properties = (List<BeanPropertyDefinition>) arrayList0;
      arrayList0.add((BeanPropertyDefinition) null);
      // Undeclared exception!
      try { 
        basicBeanDescription0.findBackReferenceProperties();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.LONG_DESC;
      // Undeclared exception!
      try { 
        basicBeanDescription0.addProperty((BeanPropertyDefinition) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.introspect.BasicBeanDescription", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.LONG_DESC;
      List<BeanPropertyDefinition> list0 = basicBeanDescription0._properties();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.BOOLEAN_DESC;
      // Undeclared exception!
      try { 
        basicBeanDescription0._findCreatorPropertyName((AnnotatedParameter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.introspect.BasicBeanDescription", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Class<CharBuffer> class0 = CharBuffer.class;
      Class<ChronoLocalDate> class1 = ChronoLocalDate.class;
      Class<String> class2 = String.class;
      SimpleType simpleType0 = SimpleType.constructUnsafe(class2);
      TypeBindings typeBindings0 = TypeBindings.createIfNeeded((Class<?>) class1, (JavaType) simpleType0);
      ReferenceType referenceType0 = ReferenceType.upgradeFrom(simpleType0, simpleType0);
      MapLikeType mapLikeType0 = MapLikeType.upgradeFrom(referenceType0, simpleType0, simpleType0);
      CollectionLikeType collectionLikeType0 = CollectionLikeType.upgradeFrom(mapLikeType0, simpleType0);
      PriorityQueue<JavaType> priorityQueue0 = new PriorityQueue<JavaType>();
      ArrayList<JavaType> arrayList0 = new ArrayList<JavaType>(priorityQueue0);
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.BOOLEAN_DESC;
      Annotations annotations0 = basicBeanDescription0.getClassAnnotations();
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.pair((AnnotationIntrospector) null, (AnnotationIntrospector) null);
      TypeFactory typeFactory0 = TypeFactory.defaultInstance();
      AnnotatedClass annotatedClass0 = new AnnotatedClass(referenceType0, class0, arrayList0, class1, annotations0, typeBindings0, annotationIntrospector0, (ClassIntrospector.MixInResolver) null, typeFactory0);
      BasicBeanDescription basicBeanDescription1 = null;
      try {
        basicBeanDescription1 = new BasicBeanDescription((POJOPropertiesCollector) null, collectionLikeType0, annotatedClass0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.introspect.BasicBeanDescription", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = null;
      try {
        basicBeanDescription0 = new BasicBeanDescription((POJOPropertiesCollector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.introspect.BasicBeanDescription", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.INT_DESC;
      PropertyName propertyName0 = PropertyName.USE_DEFAULT;
      basicBeanDescription0.findProperty(propertyName0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.BOOLEAN_DESC;
      JsonInclude.Value jsonInclude_Value0 = JsonInclude.Value.empty();
      // Undeclared exception!
      try { 
        basicBeanDescription0._createConverter(jsonInclude_Value0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // AnnotationIntrospector returned Converter definition of type com.fasterxml.jackson.annotation.JsonInclude$Value; expected type Converter or Class<Converter> instead
         //
         verifyException("com.fasterxml.jackson.databind.introspect.BasicBeanDescription", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.INT_DESC;
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        basicBeanDescription0._createConverter(class0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // AnnotationIntrospector returned Class java.lang.Object; expected Class<Converter>
         //
         verifyException("com.fasterxml.jackson.databind.introspect.BasicBeanDescription", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.INT_DESC;
      ArrayList<BeanPropertyDefinition> arrayList0 = new ArrayList<BeanPropertyDefinition>();
      basicBeanDescription0._properties = (List<BeanPropertyDefinition>) arrayList0;
      arrayList0.add((BeanPropertyDefinition) null);
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      // Undeclared exception!
      try { 
        basicBeanDescription0._findPropertyFields(set0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.introspect.BasicBeanDescription", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.STRING_DESC;
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      LinkedHashMap<String, AnnotatedField> linkedHashMap0 = basicBeanDescription0._findPropertyFields(linkedHashSet0, false);
      assertTrue(linkedHashMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.INT_DESC;
      String string0 = basicBeanDescription0.findClassDescription();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.INT_DESC;
      JsonPOJOBuilder.Value jsonPOJOBuilder_Value0 = basicBeanDescription0.findPOJOBuilderConfig();
      assertNull(jsonPOJOBuilder_Value0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ObjectMapper objectMapper0 = new ObjectMapper();
      PropertyAccessor propertyAccessor0 = PropertyAccessor.ALL;
      JsonAutoDetect.Visibility jsonAutoDetect_Visibility0 = JsonAutoDetect.Visibility.ANY;
      objectMapper0.setVisibility(propertyAccessor0, jsonAutoDetect_Visibility0);
      Class<BasicBeanDescription> class0 = BasicBeanDescription.class;
      ObjectReader objectReader0 = objectMapper0.readerFor(class0);
      assertNotNull(objectReader0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ObjectMapper objectMapper0 = new ObjectMapper();
      Class<DayOfWeek> class0 = DayOfWeek.class;
      ObjectReader objectReader0 = objectMapper0.readerFor(class0);
      assertNotNull(objectReader0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.INT_DESC;
      Map<String, AnnotatedMember> map0 = basicBeanDescription0.findBackReferenceProperties();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.INT_DESC;
      AnnotatedMember annotatedMember0 = basicBeanDescription0.findAnyGetter();
      assertNull(annotatedMember0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.INT_DESC;
      JsonInclude.Value jsonInclude_Value0 = BeanPropertyDefinition.EMPTY_INCLUDE;
      JsonInclude.Value jsonInclude_Value1 = basicBeanDescription0.findPropertyInclusion(jsonInclude_Value0);
      assertSame(jsonInclude_Value1, jsonInclude_Value0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.BOOLEAN_DESC;
      StringWriter stringWriter0 = new StringWriter();
      ObjectMapper objectMapper0 = new ObjectMapper();
      MapperFeature[] mapperFeatureArray0 = new MapperFeature[5];
      MapperFeature mapperFeature0 = MapperFeature.ALLOW_FINAL_FIELDS_AS_MUTATORS;
      mapperFeatureArray0[0] = mapperFeature0;
      mapperFeatureArray0[1] = mapperFeature0;
      MapperFeature mapperFeature1 = MapperFeature.DEFAULT_VIEW_INCLUSION;
      mapperFeatureArray0[2] = mapperFeature1;
      mapperFeatureArray0[3] = mapperFeature0;
      mapperFeatureArray0[4] = mapperFeatureArray0[0];
      ObjectMapper objectMapper1 = objectMapper0.disable(mapperFeatureArray0);
      try { 
        objectMapper1.writeValue((Writer) stringWriter0, (Object) basicBeanDescription0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // No serializer found for class com.fasterxml.jackson.databind.introspect.AnnotationCollector$NoAnnotations and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: com.fasterxml.jackson.databind.introspect.BasicBeanDescription[\"classInfo\"]->com.fasterxml.jackson.databind.introspect.AnnotatedClass[\"annotations\"])
         //
         verifyException("com.fasterxml.jackson.databind.exc.InvalidDefinitionException", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Class<MapLikeType> class0 = MapLikeType.class;
      ObjectMapper objectMapper0 = new ObjectMapper();
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      ObjectMapper objectMapper1 = objectMapper0.setAnnotationIntrospector(annotationIntrospector0);
      ObjectReader objectReader0 = objectMapper1.readerFor(class0);
      assertNotNull(objectReader0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.INT_DESC;
      // Undeclared exception!
      try { 
        basicBeanDescription0.findExpectedFormat((JsonFormat.Value) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.introspect.BasicBeanDescription", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.INT_DESC;
      Object object0 = basicBeanDescription0.instantiateBean(true);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.INT_DESC;
      Map<Object, AnnotatedMember> map0 = basicBeanDescription0.findInjectables();
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.STRING_DESC;
      AnnotatedMember annotatedMember0 = basicBeanDescription0.findAnySetterAccessor();
      assertNull(annotatedMember0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.INT_DESC;
      JavaType javaType0 = basicBeanDescription0.resolveType((Type) null);
      assertNull(javaType0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.INT_DESC;
      Class<Integer> class0 = Integer.class;
      ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, (TypeBindings) null);
      // Undeclared exception!
      try { 
        basicBeanDescription0.resolveType(resolvedRecursiveType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.introspect.BasicBeanDescription", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.INT_DESC;
      Set<String> set0 = basicBeanDescription0.getIgnoredPropertyNames();
      assertTrue(set0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.INT_DESC;
      AnnotatedMethod annotatedMethod0 = basicBeanDescription0.findJsonValueMethod();
      assertNull(annotatedMethod0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.INT_DESC;
      PropertyName propertyName0 = PropertyName.USE_DEFAULT;
      basicBeanDescription0.hasProperty(propertyName0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.INT_DESC;
      ArrayList<BeanPropertyDefinition> arrayList0 = new ArrayList<BeanPropertyDefinition>();
      basicBeanDescription0._properties = (List<BeanPropertyDefinition>) arrayList0;
      arrayList0.add((BeanPropertyDefinition) null);
      // Undeclared exception!
      try { 
        basicBeanDescription0.removeProperty("4xY>eEyu");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.introspect.BasicBeanDescription", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.INT_DESC;
      // Undeclared exception!
      try { 
        basicBeanDescription0.removeProperty("4xY>eEyu");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.introspect.BasicBeanDescription", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Class<Object> class0 = Object.class;
      AnnotatedClass annotatedClass0 = new AnnotatedClass(class0);
      BasicBeanDescription basicBeanDescription0 = BasicBeanDescription.forOtherUse((MapperConfig<?>) null, (JavaType) null, annotatedClass0);
      // Undeclared exception!
      try { 
        basicBeanDescription0.bindingsForBeanType();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.introspect.BasicBeanDescription", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.STRING_DESC;
      TypeBindings typeBindings0 = basicBeanDescription0.bindingsForBeanType();
      assertTrue(typeBindings0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.INT_DESC;
      Class<ObjectIdResolver>[] classArray0 = (Class<ObjectIdResolver>[]) Array.newInstance(Class.class, 2);
      AnnotatedMethod annotatedMethod0 = basicBeanDescription0.findMethod("/W!S1u \"PB^", classArray0);
      assertNull(annotatedMethod0);
  }
}
