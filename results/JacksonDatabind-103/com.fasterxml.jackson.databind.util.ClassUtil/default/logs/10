* EvoSuite 1.1.1-SNAPSHOT
* Configuration: default
* Going to generate test cases for class: com.fasterxml.jackson.databind.util.ClassUtil
* Starting Client-0
* Connecting to master process on port 3340
* Analyzing classpath: 
  - subjects/buggy-versions/JacksonDatabind-103/target/classes
  - defects4j/framework/projects/JacksonDatabind/lib/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar
  - defects4j/framework/projects/JacksonDatabind/lib/com/fasterxml/jackson/core/jackson-core/2.9.7/jackson-core-2.9.7.jar
* Finished analyzing classpath
* Generating tests for class com.fasterxml.jackson.databind.util.ClassUtil
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 2018
* Using seed 124861899
* Starting evolution
* Initial Number of Goals in DynaMOSA = 736 / 2018
[MASTER] 00:17:40.447 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedList<E> : Type points to itself
[MASTER] 00:17:40.452 [logback-2] ERROR TestCluster - Failed to check cache for java.util.HashMap<K, V> : Type points to itself
[MASTER] 00:17:40.466 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.Enum<E> : Type points to itself
[MASTER] 00:17:40.525 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.Class<?> : Invalid generic instance
[MASTER] 00:17:50.516 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[MASTER] 00:17:57.070 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Invalid generic instance
[MASTER] 00:17:57.507 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.DeserializationConfig due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.cfg.BaseSettings due to org.evosuite.ga.ConstructionFailedException: Invalid generic instance
[MASTER] 00:17:58.684 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.Class<java.lang.Integer> : Invalid generic instance
[MASTER] 00:17:59.019 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Have no generator for class com.fasterxml.jackson.databind.introspect.BasicClassIntrospector canUseFunctionalMocks=false, canBeMocked: true
[MASTER] 00:18:02.243 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.SerializationConfig due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.cfg.BaseSettings due to org.evosuite.ga.ConstructionFailedException: Invalid generic instance
[MASTER] 00:18:30.274 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.Class<java.lang.Double> : Invalid generic instance
[MASTER] 00:18:34.857 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.Class<com.fasterxml.jackson.databind.type.ReferenceType> : Invalid generic instance
[MASTER] 00:18:40.344 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.Class<java.io.InputStream> : Invalid generic instance
[MASTER] 00:18:43.631 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Map<java.lang.Class<com.fasterxml.jackson.databind.node.ShortNode>, com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Character>> : Invalid generic instance
[MASTER] 00:18:44.247 [logback-2] ERROR TestCluster - Failed to check cache for com.fasterxml.jackson.annotation.ObjectIdGenerator<T> : Type points to itself
[MASTER] 00:18:55.124 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.Class<java.lang.String> : Invalid generic instance
[MASTER] 00:19:00.800 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.Class<java.lang.Float> : Invalid generic instance
[MASTER] 00:19:03.497 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.Class<java.lang.Object> : Invalid generic instance
[MASTER] 00:19:08.990 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Map<java.lang.String, java.sql.ClientInfoStatus> : Invalid generic instance
[MASTER] 00:19:23.418 [logback-2] ERROR TestCluster - Failed to check cache for com.fasterxml.jackson.databind.JsonSerializer<T> : Type points to itself
[MASTER] 00:19:23.523 [logback-2] ERROR TestCluster - Failed to check cache for com.fasterxml.jackson.databind.JsonDeserializer<T> : Type points to itself
[MASTER] 00:19:25.088 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.Class<java.lang.Boolean> : Invalid generic instance
[MASTER] 00:19:38.253 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.Class<java.lang.Character> : Invalid generic instance
[MASTER] 00:19:38.504 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.Class<com.fasterxml.jackson.databind.type.CollectionType> : Invalid generic instance
[MASTER] 00:19:42.796 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.BiFunction<T, U, R> : Type points to itself
[MASTER] 00:19:48.442 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.Class<com.fasterxml.jackson.databind.util.AccessPattern> : Invalid generic instance
[MASTER] 00:19:52.178 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.Class<com.fasterxml.jackson.databind.type.ArrayType> : Invalid generic instance
[MASTER] 00:19:58.957 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.Class<java.lang.Long> : Invalid generic instance
[MASTER] 00:20:01.262 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.Class<java.io.IOException> : Invalid generic instance
[MASTER] 00:20:13.010 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.Class<com.fasterxml.jackson.databind.annotation.NoClass> : Invalid generic instance
[MASTER] 00:20:59.251 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 00:21:03.350 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Map<java.lang.String, com.fasterxml.jackson.databind.type.ResolvedRecursiveType> : Invalid generic instance
[MASTER] 00:21:14.788 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.Class<java.lang.RuntimeException> : Invalid generic instance
[MASTER] 00:21:18.217 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.ser.BeanSerializerBuilder due to org.evosuite.ga.ConstructionFailedException: Invalid generic instance
[MASTER] 00:21:42.084 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.Class<java.lang.annotation.Annotation> : Invalid generic instance
[MASTER] 00:21:54.432 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Map<java.lang.String, java.lang.Object> : Invalid generic instance
[MASTER] 00:22:12.206 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.Class<java.io.PipedInputStream> : Invalid generic instance
[MASTER] 00:22:26.035 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.Class<com.fasterxml.jackson.databind.type.ResolvedRecursiveType> : Invalid generic instance
* Search finished after 303s and 187 generations, 46031 statements, best individual has fitness: 592.0
* Minimizing test suite
[MASTER] 00:23:13.335 [logback-1] WARN  ExecutionTrace - Popping method getConstructors(Ljava/lang/Class;)[Lcom/fasterxml/jackson/databind/util/ClassUtil$Ctor; because we were looking for <init>(Ljava/lang/reflect/Constructor;)V
[MASTER] 00:23:13.343 [logback-1] WARN  ExecutionTrace - Current stack: []
[MASTER] 00:23:54.865 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 80%
* Total number of goals: 377
* Number of covered goals: 303
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 79%
* Total number of goals: 312
* Number of covered goals: 246
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 67
* Number of covered goals: 67
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 74%
* Total number of goals: 550
* Number of covered goals: 409
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 47%
* Total number of goals: 315
* Number of covered goals: 148
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 96%
* Total number of goals: 76
* Number of covered goals: 73
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 83%
* Total number of goals: 76
* Number of covered goals: 63
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 78%
* Total number of goals: 312
* Number of covered goals: 244
* Generated 295 tests with total length 2396
* Resulting test suite's coverage: 72% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 00:24:15.165 [logback-2] ERROR TestRunnable - Suppressed/ignored exception during test case execution on class com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Float cannot be cast to java.lang.Boolean
java.lang.ClassCastException: java.lang.Float cannot be cast to java.lang.Boolean
	at org.evosuite.testcase.TestCodeVisitor.visitPrimitiveAssertion(TestCodeVisitor.java:525)
	at org.evosuite.testcase.TestCodeVisitor.visitAssertion(TestCodeVisitor.java:911)
	at org.evosuite.testcase.TestCodeVisitor.addAssertions(TestCodeVisitor.java:953)
	at org.evosuite.testcase.TestCodeVisitor.visitMethodStatement(TestCodeVisitor.java:1504)
	at org.evosuite.testcase.TestVisitor.visitStatement(TestVisitor.java:145)
	at org.evosuite.testcase.TestCodeVisitor.visitStatement(TestCodeVisitor.java:1849)
	at org.evosuite.testcase.statements.AbstractStatement.getCode(AbstractStatement.java:255)
	at org.evosuite.testcase.statements.AbstractStatement.getCode(AbstractStatement.java:247)
	at org.evosuite.assertion.PrimitiveTraceObserver.visit(PrimitiveTraceObserver.java:116)
	at org.evosuite.assertion.AssertionTraceObserver.visitReturnValue(AssertionTraceObserver.java:115)
	at org.evosuite.assertion.PrimitiveTraceObserver.afterStatement(PrimitiveTraceObserver.java:51)
	at org.evosuite.testcase.execution.TestRunnable.lambda$informObservers_after$93(TestRunnable.java:154)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at org.evosuite.testcase.execution.TestRunnable.informObservers_after(TestRunnable.java:154)
	at org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:350)
	at org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:201)
	at org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:54)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[MASTER] 00:24:43.286 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6670833333333334% of time used, but only 69/295 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 32%
* Compiling and checking tests
[MASTER] 00:25:51.538 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_227_1605572751368/com/fasterxml/jackson/databind/util/ClassUtil_227_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_227_1605572751368/com/fasterxml/jackson/databind/util/ClassUtil_227_tmp__ESTest_scaffolding.java]]
[MASTER] 00:25:51.545 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/JacksonDatabind-103/target/classes:defects4j/framework/projects/JacksonDatabind/lib/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar:defects4j/framework/projects/JacksonDatabind/lib/com/fasterxml/jackson/core/jackson-core/2.9.7/jackson-core-2.9.7.jar:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/JacksonDatabind-103/target/classes:/experiment/defects4j/framework/projects/JacksonDatabind/lib/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar:/experiment/defects4j/framework/projects/JacksonDatabind/lib/com/fasterxml/jackson/core/jackson-core/2.9.7/jackson-core-2.9.7.jar
[MASTER] 00:25:51.545 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/JacksonDatabind-103/target/classes:/experiment/defects4j/framework/projects/JacksonDatabind/lib/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar:/experiment/defects4j/framework/projects/JacksonDatabind/lib/com/fasterxml/jackson/core/jackson-core/2.9.7/jackson-core-2.9.7.jar
[MASTER] 00:25:51.550 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.util.LinkedList<java.lang.Class<java.lang.Integer>> cannot be converted to java.util.List<java.lang.Class<?>>: 63
[MASTER] 00:25:51.561 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_227_1605572751368/com/fasterxml/jackson/databind/util/ClassUtil_227_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 17 00:25:51 GMT 2020
4:  */
5: 
6: package com.fasterxml.jackson.databind.util;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import com.fasterxml.jackson.databind.util.ClassUtil;
11: import java.util.LinkedList;
12: import java.util.List;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.evosuite.runtime.testdata.FileSystemHandling;
16: import org.junit.runner.RunWith;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
19: public class ClassUtil_227_tmp__ESTest extends ClassUtil_227_tmp__ESTest_scaffolding {
20: 
21:   @Test(timeout = 4000)
22:   public void test0()  throws Throwable  {
23:       boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
24:       assertTrue(boolean0);
25:       
26:       Class<Short> class0 = Short.TYPE;
27:       assertNotNull(class0);
28:       assertFalse(class0.isInterface());
29:       assertFalse(class0.isAnnotation());
30:       assertFalse(class0.isArray());
31:       assertEquals("short", class0.toString());
32:       assertEquals(1041, class0.getModifiers());
33:       assertTrue(class0.isPrimitive());
34:       assertFalse(class0.isSynthetic());
35:       assertFalse(class0.isEnum());
36:       
37:       Class<?> class1 = ClassUtil.getOuterClass(class0);
38:       assertNull(class1);
39:       assertFalse(class0.isInterface());
40:       assertFalse(class0.isAnnotation());
41:       assertFalse(class0.isArray());
42:       assertEquals("short", class0.toString());
43:       assertEquals(1041, class0.getModifiers());
44:       assertTrue(class0.isPrimitive());
45:       assertFalse(class0.isSynthetic());
46:       assertFalse(class0.isEnum());
47:       
48:       String string0 = ClassUtil.nameOf(class0);
49:       assertNotNull(string0);
50:       assertFalse(class0.isInterface());
51:       assertFalse(class0.isAnnotation());
52:       assertFalse(class0.isArray());
53:       assertEquals("short", class0.toString());
54:       assertEquals(1041, class0.getModifiers());
55:       assertTrue(class0.isPrimitive());
56:       assertFalse(class0.isSynthetic());
57:       assertFalse(class0.isEnum());
58:       assertEquals("`short`", string0);
59:       
60:       Throwable throwable0 = ClassUtil.throwIfError((Throwable) null);
61:       assertNull(throwable0);
62:       
63:       List<Class<?>> list0 = new LinkedList<Class<Integer>>();
64:       assertNotNull(list0);
65:       assertEquals(0, list0.size());
66:       assertTrue(list0.isEmpty());
67:   }
68: }
RegularFileObject[/tmp/EvoSuite_227_1605572751368/com/fasterxml/jackson/databind/util/ClassUtil_227_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 17 00:25:51 GMT 2020
5:  */
6: 
7: package com.fasterxml.jackson.databind.util;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class ClassUtil_227_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "com.fasterxml.jackson.databind.util.ClassUtil"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
76:     java.lang.System.setProperty("user.dir", "/experiment"); 
77:   }
78: 
79:   private static void initializeClasses() {
80:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ClassUtil_227_tmp__ESTest_scaffolding.class.getClassLoader() ,
81:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$WithMember",
82:       "com.fasterxml.jackson.databind.MappingIterator",
83:       "com.fasterxml.jackson.databind.deser.BeanDeserializerModifier",
84:       "com.fasterxml.jackson.databind.ser.PropertyBuilder",
85:       "com.fasterxml.jackson.databind.deser.impl.FieldProperty",
86:       "com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate",
87:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$ShortSerializer",
88:       "com.fasterxml.jackson.databind.deser.std.EnumDeserializer",
89:       "com.fasterxml.jackson.annotation.ObjectIdGenerators$Base",
90:       "com.fasterxml.jackson.annotation.JsonFormat$Features",
91:       "com.fasterxml.jackson.databind.introspect.AnnotatedConstructor",
92:       "com.fasterxml.jackson.databind.cfg.MapperConfigBase",
93:       "com.fasterxml.jackson.databind.deser.UnresolvedForwardReference",
94:       "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWithSerializerProvider",
95:       "com.fasterxml.jackson.databind.ser.impl.UnknownSerializer",
96:       "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers",
97:       "com.fasterxml.jackson.core.async.ByteArrayFeeder",
98:       "com.fasterxml.jackson.databind.type.MapLikeType",
99:       "com.fasterxml.jackson.databind.util.LinkedNode",
100:       "com.fasterxml.jackson.databind.type.MapType",
101:       "com.fasterxml.jackson.databind.annotation.JsonTypeResolver",
102:       "com.fasterxml.jackson.databind.ser.std.UUIDSerializer",
103:       "com.fasterxml.jackson.databind.ObjectWriter",
104:       "com.fasterxml.jackson.databind.deser.std.FromStringDeserializer",
105:       "com.fasterxml.jackson.databind.type.TypeBase",
106:       "com.fasterxml.jackson.core.util.BufferRecyclers",
107:       "com.fasterxml.jackson.databind.node.TextNode",
108:       "com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty",
109:       "com.fasterxml.jackson.core.util.Instantiatable",
110:       "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase",
111:       "com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder",
112:       "com.fasterxml.jackson.core.json.UTF8DataInputJsonParser",
113:       "com.fasterxml.jackson.annotation.Nulls",
114:       "com.fasterxml.jackson.annotation.JsonIgnoreProperties",
115:       "com.fasterxml.jackson.databind.deser.impl.ReadableObjectId",
116:       "com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter",
117:       "com.fasterxml.jackson.databind.introspect.AnnotatedCreatorCollector",
118:       "com.fasterxml.jackson.annotation.JsonSetter$Value",
119:       "com.fasterxml.jackson.databind.node.DecimalNode",
120:       "com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value",
121:       "com.fasterxml.jackson.databind.introspect.AnnotationCollector$EmptyCollector",
122:       "com.fasterxml.jackson.databind.util.Annotations",
123:       "com.fasterxml.jackson.databind.deser.Deserializers",
124:       "com.fasterxml.jackson.databind.ser.std.CollectionSerializer",
125:       "com.fasterxml.jackson.databind.deser.KeyDeserializers",
126:       "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitable",
127:       "com.fasterxml.jackson.databind.util.CompactStringObjectMap",
128:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer",
129:       "com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std",
130:       "com.fasterxml.jackson.databind.type.CollectionLikeType",
131:       "com.fasterxml.jackson.core.FormatFeature",
132:       "com.fasterxml.jackson.core.TreeNode",
133:       "com.fasterxml.jackson.databind.node.NumericNode",
134:       "com.fasterxml.jackson.databind.deser.ValueInstantiator",
135:       "com.fasterxml.jackson.databind.module.SimpleSerializers",
136:       "com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase",
137:       "com.fasterxml.jackson.databind.type.ResolvedRecursiveType",
138:       "com.fasterxml.jackson.databind.introspect.AnnotatedClass$Creators",
139:       "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector",
140:       "com.fasterxml.jackson.core.base.ParserMinimalBase",
141:       "com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer",
142:       "com.fasterxml.jackson.databind.deser.BeanDeserializerBase",
143:       "com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping",
144:       "com.fasterxml.jackson.databind.BeanProperty$Std",
145:       "com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition",
146:       "com.fasterxml.jackson.annotation.JsonSetter",
147:       "com.fasterxml.jackson.databind.util.Converter",
148:       "com.fasterxml.jackson.databind.ser.std.FileSerializer",
149:       "com.fasterxml.jackson.core.SerializableString",
150:       "com.fasterxml.jackson.databind.deser.ValueInstantiators",
151:       "com.fasterxml.jackson.databind.ser.PropertyBuilder$1",
152:       "com.fasterxml.jackson.core.Versioned",
153:       "com.fasterxml.jackson.databind.introspect.VirtualAnnotatedMember",
154:       "com.fasterxml.jackson.databind.introspect.BasicBeanDescription",
155:       "com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer",
156:       "com.fasterxml.jackson.annotation.JsonAlias",
157:       "com.fasterxml.jackson.core.util.RequestPayload",
158:       "com.fasterxml.jackson.databind.JsonSerializable",
159:       "com.fasterxml.jackson.databind.introspect.AnnotatedMember",
160:       "com.fasterxml.jackson.databind.deser.impl.MergingSettableBeanProperty",
161:       "com.fasterxml.jackson.databind.BeanDescription",
162:       "com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer",
163:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$DoubleDeserializer",
164:       "com.fasterxml.jackson.core.filter.JsonPointerBasedFilter",
165:       "com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap",
166:       "com.fasterxml.jackson.databind.introspect.AnnotatedWithParams",
167:       "com.fasterxml.jackson.core.Base64Variant",
168:       "com.fasterxml.jackson.databind.exc.IgnoredPropertyException",
169:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer",
170:       "com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap",
171:       "com.fasterxml.jackson.databind.annotation.JsonNaming",
172:       "com.fasterxml.jackson.annotation.JsonEnumDefaultValue",
173:       "com.fasterxml.jackson.databind.ser.SerializerFactory",
174:       "com.fasterxml.jackson.annotation.JsonPropertyOrder",
175:       "com.fasterxml.jackson.databind.type.SimpleType",
176:       "com.fasterxml.jackson.databind.ser.ContextualSerializer",
177:       "com.fasterxml.jackson.databind.DeserializationConfig",
178:       "com.fasterxml.jackson.databind.MapperFeature",
179:       "com.fasterxml.jackson.core.util.InternCache",
180:       "com.fasterxml.jackson.databind.ser.std.ClassSerializer",
181:       "com.fasterxml.jackson.databind.Module$SetupContext",
182:       "com.fasterxml.jackson.databind.ext.Java7SupportImpl",
183:       "com.fasterxml.jackson.databind.util.ClassUtil",
184:       "com.fasterxml.jackson.databind.node.ContainerNode",
185:       "com.fasterxml.jackson.databind.deser.std.FactoryBasedEnumDeserializer",
186:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$LongSerializer",
187:       "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
188:       "com.fasterxml.jackson.databind.ser.std.StdSerializer",
189:       "com.fasterxml.jackson.databind.ser.BeanSerializerFactory",
190:       "com.fasterxml.jackson.databind.PropertyNamingStrategy",
191:       "com.fasterxml.jackson.annotation.JsonPropertyDescription",
192:       "com.fasterxml.jackson.databind.jsonschema.SchemaAware",
193:       "com.fasterxml.jackson.databind.AbstractTypeResolver",
194:       "com.fasterxml.jackson.annotation.JacksonAnnotationsInside",
195:       "com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver",
196:       "com.fasterxml.jackson.databind.BeanProperty$Bogus",
197:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$DoubleSerializer",
198:       "com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer",
199:       "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor",
200:       "com.fasterxml.jackson.core.Base64Variants",
201:       "com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer",
202:       "com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer",
203:       "com.fasterxml.jackson.databind.util.ArrayBuilders",
204:       "com.fasterxml.jackson.databind.ser.std.IterableSerializer",
205:       "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicIntegerSerializer",
206:       "com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter",
207:       "com.fasterxml.jackson.core.JsonpCharacterEscapes",
208:       "com.fasterxml.jackson.core.io.IOContext",
209:       "com.fasterxml.jackson.core.PrettyPrinter",
210:       "com.fasterxml.jackson.core.base.GeneratorBase",
211:       "com.fasterxml.jackson.databind.exc.PropertyBindingException",
212:       "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
213:       "com.fasterxml.jackson.databind.ser.BeanSerializer",
214:       "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider",
215:       "com.fasterxml.jackson.databind.node.NullNode",
216:       "com.fasterxml.jackson.databind.deser.ValueInstantiator$Base",
217:       "com.fasterxml.jackson.annotation.JacksonInject$Value",
218:       "com.fasterxml.jackson.core.util.Separators",
219:       "com.fasterxml.jackson.databind.ser.BeanSerializerModifier",
220:       "com.fasterxml.jackson.databind.jsontype.NamedType",
221:       "com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder",
222:       "com.fasterxml.jackson.databind.introspect.ObjectIdInfo",
223:       "com.fasterxml.jackson.databind.introspect.NopAnnotationIntrospector",
224:       "com.fasterxml.jackson.core.json.JsonWriteContext",
225:       "com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer",
226:       "com.fasterxml.jackson.annotation.ObjectIdGenerators$PropertyGenerator",
227:       "com.fasterxml.jackson.annotation.JacksonInject",
228:       "com.fasterxml.jackson.core.io.UTF8Writer",
229:       "com.fasterxml.jackson.databind.BeanProperty",
230:       "com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers",
231:       "com.fasterxml.jackson.core.Version",
232:       "com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring",
233:       "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
234:       "com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer",
235:       "com.fasterxml.jackson.core.io.InputDecorator",
236:       "com.fasterxml.jackson.databind.introspect.TypeResolutionContext",
237:       "com.fasterxml.jackson.annotation.JsonTypeId",
238:       "com.fasterxml.jackson.core.base.ParserBase",
239:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntLikeSerializer",
240:       "com.fasterxml.jackson.databind.node.BinaryNode",
241:       "com.fasterxml.jackson.databind.introspect.AnnotationMap",
242:       "com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector",
243:       "com.fasterxml.jackson.databind.ser.std.ToStringSerializer",
244:       "com.fasterxml.jackson.databind.deser.DataFormatReaders",
245:       "com.fasterxml.jackson.core.JsonGenerator",
246:       "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext",
247:       "com.fasterxml.jackson.databind.ser.Serializers",
248:       "com.fasterxml.jackson.databind.type.ClassStack",
249:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer",
250:       "com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult",
251:       "com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Single",
252:       "com.fasterxml.jackson.databind.ext.OptionalHandlerFactory",
253:       "com.fasterxml.jackson.core.JsonEncoding",
254:       "com.fasterxml.jackson.core.JsonGenerationException",
255:       "com.fasterxml.jackson.annotation.JsonProperty$Access",
256:       "com.fasterxml.jackson.databind.ser.std.JsonValueSerializer",
257:       "com.fasterxml.jackson.core.TreeCodec",
258:       "com.fasterxml.jackson.annotation.JsonAutoDetect$Value",
259:       "com.fasterxml.jackson.databind.deser.impl.SetterlessProperty",
260:       "com.fasterxml.jackson.core.json.UTF8JsonGenerator",
261:       "com.fasterxml.jackson.databind.ser.std.EnumSetSerializer",
262:       "com.fasterxml.jackson.databind.ser.std.SerializableSerializer",
263:       "com.fasterxml.jackson.databind.introspect.Annotated",
264:       "com.fasterxml.jackson.core.type.WritableTypeId",
265:       "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$DelegatingKD",
266:       "com.fasterxml.jackson.databind.deser.std.StdValueInstantiator",
267:       "com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap",
268:       "com.fasterxml.jackson.databind.util.TokenBuffer",
269:       "com.fasterxml.jackson.databind.annotation.NoClass",
270:       "com.fasterxml.jackson.core.JsonGenerator$1",
271:       "com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter",
272:       "com.fasterxml.jackson.core.JsonParser$NumberType",
273:       "com.fasterxml.jackson.databind.type.PlaceholderForType",
274:       "com.fasterxml.jackson.databind.JsonMappingException$Reference",
275:       "com.fasterxml.jackson.core.json.WriterBasedJsonGenerator",
276:       "com.fasterxml.jackson.databind.deser.SettableBeanProperty$Delegating",
277:       "com.fasterxml.jackson.databind.jsontype.TypeDeserializer",
278:       "com.fasterxml.jackson.databind.deser.std.JdkDeserializers",
279:       "com.fasterxml.jackson.databind.node.LongNode",
280:       "com.fasterxml.jackson.databind.deser.CreatorProperty",
281:       "com.fasterxml.jackson.databind.module.SimpleModule",
282:       "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringCtorKeyDeserializer",
283:       "com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer",
284:       "com.fasterxml.jackson.annotation.JsonAnyGetter",
285:       "com.fasterxml.jackson.core.type.TypeReference",
286:       "com.fasterxml.jackson.core.JsonParseException",
287:       "com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase",
288:       "com.fasterxml.jackson.databind.annotation.JacksonStdImpl",
289:       "com.fasterxml.jackson.databind.ser.std.TokenBufferSerializer",
290:       "com.fasterxml.jackson.databind.deser.ValueInstantiators$Base",
291:       "com.fasterxml.jackson.databind.type.TypeBindings$TypeParamStash",
292:       "com.fasterxml.jackson.annotation.JsonBackReference",
293:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigDecimalDeserializer",
294:       "com.fasterxml.jackson.databind.deser.impl.CreatorCandidate",
295:       "com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig",
296:       "com.fasterxml.jackson.databind.ser.std.MapSerializer",
297:       "com.fasterxml.jackson.annotation.JsonAnySetter",
298:       "com.fasterxml.jackson.databind.ser.std.SqlDateSerializer",
299:       "com.fasterxml.jackson.databind.util.RootNameLookup",
300:       "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
301:       "com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket",
302:       "com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer",
303:       "com.fasterxml.jackson.databind.ser.impl.FailingSerializer",
304:       "com.fasterxml.jackson.databind.JsonMappingException",
305:       "com.fasterxml.jackson.core.io.OutputDecorator",
306:       "com.fasterxml.jackson.databind.deser.DataFormatReaders$Match",
307:       "com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer",
308:       "com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer",
309:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ShortDeserializer",
310:       "com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer",
311:       "com.fasterxml.jackson.annotation.JsonTypeInfo$As",
312:       "com.fasterxml.jackson.databind.ser.std.SqlTimeSerializer",
313:       "com.fasterxml.jackson.databind.util.BeanUtil",
314:       "com.fasterxml.jackson.databind.DatabindContext",
315:       "com.fasterxml.jackson.databind.node.ObjectNode",
316:       "com.fasterxml.jackson.databind.cfg.ConfigOverride",
317:       "com.fasterxml.jackson.core.JsonParser$Feature",
318:       "com.fasterxml.jackson.core.JsonPointer",
319:       "com.fasterxml.jackson.core.io.SerializedString",
320:       "com.fasterxml.jackson.annotation.JsonMerge",
321:       "com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter",
322:       "com.fasterxml.jackson.databind.deser.DeserializationProblemHandler",
323:       "com.fasterxml.jackson.annotation.JsonFormat$Shape",
324:       "com.fasterxml.jackson.databind.introspect.AnnotationCollector",
325:       "com.fasterxml.jackson.annotation.PropertyAccessor",
326:       "com.fasterxml.jackson.databind.introspect.AnnotatedField",
327:       "com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase",
328:       "com.fasterxml.jackson.annotation.JsonFormat$Feature",
329:       "com.fasterxml.jackson.databind.deser.ContextualDeserializer",
330:       "com.fasterxml.jackson.databind.ser.std.ArraySerializerBase",
331:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked",
332:       "com.fasterxml.jackson.databind.cfg.HandlerInstantiator",
333:       "com.fasterxml.jackson.annotation.ObjectIdGenerator",
334:       "com.fasterxml.jackson.databind.ser.std.CalendarSerializer",
335:       "com.fasterxml.jackson.databind.annotation.JsonValueInstantiator",
336:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigIntegerDeserializer",
337:       "com.fasterxml.jackson.databind.ext.Java7Support",
338:       "com.fasterxml.jackson.databind.ser.std.BooleanSerializer$AsNumber",
339:       "com.fasterxml.jackson.databind.exc.InvalidDefinitionException",
340:       "com.fasterxml.jackson.databind.ser.std.BooleanSerializer",
341:       "com.fasterxml.jackson.annotation.JsonAutoDetect$1",
342:       "com.fasterxml.jackson.databind.introspect.ClassIntrospector",
343:       "com.fasterxml.jackson.annotation.JsonProperty",
344:       "com.fasterxml.jackson.core.filter.TokenFilterContext",
345:       "com.fasterxml.jackson.databind.JsonSerializable$Base",
346:       "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer",
347:       "com.fasterxml.jackson.databind.util.AccessPattern",
348:       "com.fasterxml.jackson.databind.cfg.ConfigOverride$Empty",
349:       "com.fasterxml.jackson.databind.node.TreeTraversingParser",
350:       "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer",
351:       "com.fasterxml.jackson.databind.jsontype.TypeSerializer",
352:       "com.fasterxml.jackson.databind.jsonschema.JsonSchema",
353:       "com.fasterxml.jackson.databind.deser.std.UUIDDeserializer",
354:       "com.fasterxml.jackson.databind.type.TypeFactory",
355:       "com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std",
356:       "com.fasterxml.jackson.databind.type.ArrayType",
357:       "com.fasterxml.jackson.databind.deser.impl.ObjectIdReader",
358:       "com.fasterxml.jackson.databind.util.Named",
359:       "com.fasterxml.jackson.core.util.JsonParserDelegate",
360:       "com.fasterxml.jackson.core.io.JsonStringEncoder",
361:       "com.fasterxml.jackson.databind.module.SimpleKeyDeserializers",
362:       "com.fasterxml.jackson.databind.cfg.ConfigOverrides",
363:       "com.fasterxml.jackson.databind.type.CollectionType",
364:       "com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer",
365:       "com.fasterxml.jackson.databind.ser.std.StdScalarSerializer",
366:       "com.fasterxml.jackson.annotation.JsonAutoDetect",
367:       "com.fasterxml.jackson.core.format.InputAccessor",
368:       "com.fasterxml.jackson.databind.node.ValueNode",
369:       "com.fasterxml.jackson.databind.ser.impl.IteratorSerializer",
370:       "com.fasterxml.jackson.databind.ser.BasicSerializerFactory",
371:       "com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer",
372:       "com.fasterxml.jackson.databind.util.ClassUtil$Ctor",
373:       "com.fasterxml.jackson.databind.ext.NioPathDeserializer",
374:       "com.fasterxml.jackson.databind.node.JsonNodeCreator",
375:       "com.fasterxml.jackson.databind.deser.SettableBeanProperty",
376:       "com.fasterxml.jackson.core.async.NonBlockingInputFeeder",
377:       "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper",
378:       "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
379:       "com.fasterxml.jackson.core.JsonLocation",
380:       "com.fasterxml.jackson.databind.exc.MismatchedInputException",
381:       "com.fasterxml.jackson.databind.node.FloatNode",
382:       "com.fasterxml.jackson.databind.node.IntNode",
383:       "com.fasterxml.jackson.databind.type.TypeParser",
384:       "com.fasterxml.jackson.databind.jsontype.SubtypeResolver",
385:       "com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer",
386:       "com.fasterxml.jackson.core.ObjectCodec",
387:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers",
388:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$PrimitiveOrWrapperDeserializer",
389:       "com.fasterxml.jackson.core.json.JsonReadContext",
390:       "com.fasterxml.jackson.databind.ser.std.EnumSerializer",
391:       "com.fasterxml.jackson.databind.cfg.ContextAttributes$Impl",
392:       "com.fasterxml.jackson.core.util.DefaultPrettyPrinter",
393:       "com.fasterxml.jackson.databind.KeyDeserializer",
394:       "com.fasterxml.jackson.databind.deser.impl.ErrorThrowingDeserializer",
395:       "com.fasterxml.jackson.core.util.BufferRecycler",
396:       "com.fasterxml.jackson.databind.deser.BeanDeserializer$BeanReferring",
397:       "com.fasterxml.jackson.databind.deser.impl.PropertyBasedObjectIdGenerator",
398:       "com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer",
399:       "com.fasterxml.jackson.annotation.ObjectIdResolver",
400:       "com.fasterxml.jackson.databind.DeserializationContext",
401:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$Base",
402:       "com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer",
403:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$10",
404:       "com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer",
405:       "com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector",
406:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer",
407:       "com.fasterxml.jackson.databind.node.DoubleNode",
408:       "com.fasterxml.jackson.databind.util.EnumResolver",
409:       "com.fasterxml.jackson.databind.ser.PropertyWriter",
410:       "com.fasterxml.jackson.databind.deser.impl.CreatorCandidate$Param",
411:       "com.fasterxml.jackson.core.util.ByteArrayBuilder",
412:       "com.fasterxml.jackson.databind.type.ReferenceType",
413:       "com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer",
414:       "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$TableInfo",
415:       "com.fasterxml.jackson.databind.ser.std.NumberSerializer",
416:       "com.fasterxml.jackson.databind.introspect.AnnotationCollector$NoAnnotations",
417:       "com.fasterxml.jackson.databind.Module",
418:       "com.fasterxml.jackson.annotation.JsonView",
419:       "com.fasterxml.jackson.databind.AnnotationIntrospector",
420:       "com.fasterxml.jackson.databind.ser.std.DateSerializer",
421:       "com.fasterxml.jackson.databind.ser.ContainerSerializer",
422:       "com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter",
423:       "com.fasterxml.jackson.databind.ser.std.NullSerializer",
424:       "com.fasterxml.jackson.databind.deser.std.StringDeserializer",
425:       "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer",
426:       "com.fasterxml.jackson.annotation.JsonGetter",
427:       "com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector$FieldBuilder",
428:       "com.fasterxml.jackson.databind.DeserializationFeature",
429:       "com.fasterxml.jackson.databind.exc.InvalidTypeIdException",
430:       "com.fasterxml.jackson.databind.node.POJONode",
431:       "com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer",
432:       "com.fasterxml.jackson.databind.ObjectReader",
433:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder",
434:       "com.fasterxml.jackson.databind.node.BaseJsonNode",
435:       "com.fasterxml.jackson.databind.node.BigIntegerNode",
436:       "com.fasterxml.jackson.databind.util.LRUMap",
437:       "com.fasterxml.jackson.databind.JsonDeserializer",
438:       "com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition",
439:       "com.fasterxml.jackson.databind.deser.impl.MethodProperty",
440:       "com.fasterxml.jackson.annotation.JsonRawValue",
441:       "com.fasterxml.jackson.core.util.DefaultIndenter",
442:       "com.fasterxml.jackson.databind.introspect.MemberKey",
443:       "com.fasterxml.jackson.databind.node.ArrayNode",
444:       "com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility",
445:       "com.fasterxml.jackson.databind.module.SimpleValueInstantiators",
446:       "com.fasterxml.jackson.databind.ser.impl.AttributePropertyWriter",
447:       "com.fasterxml.jackson.core.util.JsonGeneratorDelegate",
448:       "com.fasterxml.jackson.databind.deser.std.MapDeserializer",
449:       "com.fasterxml.jackson.databind.exc.InvalidFormatException",
450:       "com.fasterxml.jackson.core.io.CharacterEscapes",
451:       "com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer",
452:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer",
453:       "com.fasterxml.jackson.databind.introspect.TypeResolutionContext$Basic",
454:       "com.fasterxml.jackson.core.type.ResolvedType",
455:       "com.fasterxml.jackson.databind.deser.impl.CreatorCollector",
456:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
457:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$LongDeserializer",
458:       "com.fasterxml.jackson.databind.annotation.JsonSerialize",
459:       "com.fasterxml.jackson.annotation.JsonIgnore",
460:       "com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator",
461:       "com.fasterxml.jackson.databind.introspect.AnnotatedMethod",
462:       "com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey",
463:       "com.fasterxml.jackson.databind.jsontype.TypeIdResolver",
464:       "com.fasterxml.jackson.databind.util.ConstantValueInstantiator",
465:       "com.fasterxml.jackson.databind.introspect.VisibilityChecker",
466:       "com.fasterxml.jackson.core.JsonParser",
467:       "com.fasterxml.jackson.databind.introspect.AnnotatedParameter",
468:       "com.fasterxml.jackson.databind.ser.BeanPropertyWriter",
469:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$FloatSerializer",
470:       "com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type",
471:       "com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Double",
472:       "com.fasterxml.jackson.core.JsonProcessingException",
473:       "com.fasterxml.jackson.core.JsonStreamContext",
474:       "com.fasterxml.jackson.core.format.MatchStrength",
475:       "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket",
476:       "com.fasterxml.jackson.databind.introspect.CollectorBase",
477:       "com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder$Value",
478:       "com.fasterxml.jackson.annotation.JsonCreator",
479:       "com.fasterxml.jackson.databind.cfg.MutableConfigOverride",
480:       "com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer",
481:       "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext$Impl",
482:       "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException",
483:       "com.fasterxml.jackson.core.filter.TokenFilter",
484:       "com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector$MethodBuilder",
485:       "com.fasterxml.jackson.databind.util.ArrayIterator",
486:       "com.fasterxml.jackson.core.io.CharTypes",
487:       "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicBooleanSerializer",
488:       "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicLongSerializer",
489:       "com.fasterxml.jackson.databind.ser.std.InetAddressSerializer",
490:       "com.fasterxml.jackson.databind.deser.impl.CreatorCollector$StdTypeConstructor",
491:       "com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver",
492:       "com.fasterxml.jackson.annotation.JsonInclude$Include",
493:       "com.fasterxml.jackson.databind.deser.std.StdDeserializer",
494:       "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo",
495:       "com.fasterxml.jackson.databind.JsonSerializer",
496:       "com.fasterxml.jackson.databind.JsonNode",
497:       "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig",
498:       "com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty",
499:       "com.fasterxml.jackson.databind.ser.ResolvableSerializer",
500:       "com.fasterxml.jackson.databind.PropertyName",
501:       "com.fasterxml.jackson.annotation.JsonCreator$Mode",
502:       "com.fasterxml.jackson.core.json.async.NonBlockingJsonParser",
503:       "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
504:       "com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer",
505:       "com.fasterxml.jackson.databind.node.JsonNodeFactory",
506:       "com.fasterxml.jackson.databind.ser.impl.StringArraySerializer",
507:       "com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer",
508:       "com.fasterxml.jackson.databind.cfg.MapperConfig",
509:       "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringFactoryKeyDeserializer",
510:       "com.fasterxml.jackson.annotation.JsonManagedReference",
511:       "com.fasterxml.jackson.databind.deser.impl.InnerClassProperty",
512:       "com.fasterxml.jackson.databind.annotation.JsonDeserialize",
513:       "com.fasterxml.jackson.databind.util.ObjectBuffer",
514:       "com.fasterxml.jackson.core.io.JsonEOFException",
515:       "com.fasterxml.jackson.databind.MappingJsonFactory",
516:       "com.fasterxml.jackson.databind.InjectableValues",
517:       "com.fasterxml.jackson.databind.deser.std.ThrowableDeserializer",
518:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$3",
519:       "com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer",
520:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$2",
521:       "com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase",
522:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$1",
523:       "com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair",
524:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$9",
525:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$7",
526:       "com.fasterxml.jackson.databind.ext.NioPathSerializer",
527:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$6",
528:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$5",
529:       "com.fasterxml.jackson.databind.ser.Serializers$Base",
530:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$4",
531:       "com.fasterxml.jackson.databind.ser.std.StringSerializer",
532:       "com.fasterxml.jackson.databind.JavaType",
533:       "com.fasterxml.jackson.databind.deser.BeanDeserializer",
534:       "com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase",
535:       "com.fasterxml.jackson.databind.util.ClassUtil$EnumTypeLocator",
536:       "com.fasterxml.jackson.databind.deser.NullValueProvider",
537:       "com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver",
538:       "com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer",
539:       "com.fasterxml.jackson.core.util.TextBuffer",
540:       "com.fasterxml.jackson.databind.annotation.JsonAppend",
541:       "com.fasterxml.jackson.annotation.JacksonAnnotationValue",
542:       "com.fasterxml.jackson.annotation.JsonFilter",
543:       "com.fasterxml.jackson.core.JsonFactory",
544:       "com.fasterxml.jackson.databind.deser.impl.FailingDeserializer",
545:       "com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap",
546:       "com.fasterxml.jackson.databind.node.ShortNode",
547:       "com.fasterxml.jackson.databind.node.BooleanNode",
548:       "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$EnumKD",
549:       "com.fasterxml.jackson.databind.util.StdDateFormat",
550:       "com.fasterxml.jackson.databind.ser.BeanSerializerBuilder",
551:       "com.fasterxml.jackson.databind.SerializationConfig",
552:       "com.fasterxml.jackson.annotation.JsonFormat$Value",
553:       "com.fasterxml.jackson.databind.PropertyMetadata",
554:       "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase",
555:       "com.fasterxml.jackson.annotation.JsonInclude$Value",
556:       "com.fasterxml.jackson.databind.deser.std.ReferenceTypeDeserializer",
557:       "com.fasterxml.jackson.annotation.JsonValue",
558:       "com.fasterxml.jackson.databind.deser.ResolvableDeserializer",
559:       "com.fasterxml.jackson.core.json.DupDetector",
560:       "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer",
561:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$1",
562:       "com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Empty",
563:       "com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider",
564:       "com.fasterxml.jackson.databind.util.TypeKey",
565:       "com.fasterxml.jackson.databind.ser.FilterProvider",
566:       "com.fasterxml.jackson.databind.introspect.SimpleMixInResolver",
567:       "com.fasterxml.jackson.annotation.JsonFormat",
568:       "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers",
569:       "com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer",
570:       "com.fasterxml.jackson.databind.deser.DeserializerFactory",
571:       "com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator",
572:       "com.fasterxml.jackson.databind.type.TypeModifier",
573:       "com.fasterxml.jackson.annotation.JsonTypeInfo",
574:       "com.fasterxml.jackson.annotation.JsonUnwrapped",
575:       "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
576:       "com.fasterxml.jackson.databind.introspect.AnnotationCollector$NCollector",
577:       "com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty",
578:       "com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver",
579:       "com.fasterxml.jackson.core.json.JsonGeneratorImpl",
580:       "com.fasterxml.jackson.databind.deser.AbstractDeserializer",
581:       "com.fasterxml.jackson.databind.deser.SettableAnyProperty",
582:       "com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer",
583:       "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer",
584:       "com.fasterxml.jackson.databind.type.TypeBindings$AsKey",
585:       "com.fasterxml.jackson.databind.module.SimpleDeserializers",
586:       "com.fasterxml.jackson.core.JsonFactory$Feature",
587:       "com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty",
588:       "com.fasterxml.jackson.databind.ser.SerializerCache",
589:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntegerSerializer",
590:       "com.fasterxml.jackson.core.io.DataOutputAsStream",
591:       "com.fasterxml.jackson.core.io.SegmentedStringWriter",
592:       "com.fasterxml.jackson.databind.type.TypeBindings",
593:       "com.fasterxml.jackson.databind.ser.impl.WritableObjectId",
594:       "com.fasterxml.jackson.databind.deser.std.JsonLocationInstantiator",
595:       "com.fasterxml.jackson.databind.SerializerProvider",
596:       "com.fasterxml.jackson.core.JsonToken",
597:       "com.fasterxml.jackson.databind.cfg.ContextAttributes",
598:       "com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer",
599:       "com.fasterxml.jackson.annotation.JsonIdentityInfo",
600:       "com.fasterxml.jackson.core.JsonGenerator$Feature",
601:       "com.fasterxml.jackson.databind.deser.ValueInstantiator$Gettable",
602:       "com.fasterxml.jackson.databind.cfg.BaseSettings",
603:       "com.fasterxml.jackson.databind.ObjectMapper",
604:       "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider$Impl",
605:       "com.fasterxml.jackson.databind.deser.DeserializerCache",
606:       "com.fasterxml.jackson.databind.cfg.ConfigFeature",
607:       "com.fasterxml.jackson.core.FormatSchema",
608:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BooleanDeserializer",
609:       "com.fasterxml.jackson.annotation.JsonInclude",
610:       "com.fasterxml.jackson.databind.SerializationFeature",
611:       "com.fasterxml.jackson.annotation.JsonIgnoreType",
612:       "com.fasterxml.jackson.databind.introspect.AnnotationCollector$OneCollector"
613:     );
614:   } 
615: 
616:   private static void resetClasses() {
617:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ClassUtil_227_tmp__ESTest_scaffolding.class.getClassLoader()); 
618: 
619:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
620:       "com.fasterxml.jackson.databind.util.ClassUtil",
621:       "com.fasterxml.jackson.databind.util.ClassUtil$EnumTypeLocator",
622:       "com.fasterxml.jackson.databind.util.ClassUtil$Ctor",
623:       "com.fasterxml.jackson.core.JsonGenerator$Feature",
624:       "com.fasterxml.jackson.core.io.SerializedString",
625:       "com.fasterxml.jackson.core.util.DefaultPrettyPrinter",
626:       "com.fasterxml.jackson.core.JsonFactory",
627:       "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer",
628:       "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$TableInfo",
629:       "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer",
630:       "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo",
631:       "com.fasterxml.jackson.core.TreeCodec",
632:       "com.fasterxml.jackson.core.ObjectCodec",
633:       "com.fasterxml.jackson.core.type.ResolvedType",
634:       "com.fasterxml.jackson.databind.JavaType",
635:       "com.fasterxml.jackson.databind.type.TypeBindings",
636:       "com.fasterxml.jackson.databind.type.TypeBase",
637:       "com.fasterxml.jackson.databind.type.SimpleType",
638:       "com.fasterxml.jackson.databind.AnnotationIntrospector",
639:       "com.fasterxml.jackson.databind.ext.Java7SupportImpl",
640:       "com.fasterxml.jackson.databind.ext.Java7Support",
641:       "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
642:       "com.fasterxml.jackson.databind.util.LRUMap",
643:       "com.fasterxml.jackson.databind.cfg.BaseSettings",
644:       "com.fasterxml.jackson.databind.type.TypeParser",
645:       "com.fasterxml.jackson.databind.type.TypeFactory",
646:       "com.fasterxml.jackson.databind.util.StdDateFormat",
647:       "com.fasterxml.jackson.core.Base64Variant",
648:       "com.fasterxml.jackson.core.Base64Variants",
649:       "com.fasterxml.jackson.databind.ObjectMapper",
650:       "com.fasterxml.jackson.databind.jsontype.SubtypeResolver",
651:       "com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver",
652:       "com.fasterxml.jackson.databind.util.RootNameLookup",
653:       "com.fasterxml.jackson.databind.introspect.SimpleMixInResolver",
654:       "com.fasterxml.jackson.databind.introspect.ClassIntrospector",
655:       "com.fasterxml.jackson.databind.introspect.AnnotationCollector$NoAnnotations",
656:       "com.fasterxml.jackson.databind.introspect.AnnotationCollector",
657:       "com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver",
658:       "com.fasterxml.jackson.databind.introspect.Annotated",
659:       "com.fasterxml.jackson.databind.introspect.AnnotatedClass$Creators",
660:       "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
661:       "com.fasterxml.jackson.databind.BeanDescription",
662:       "com.fasterxml.jackson.databind.introspect.BasicBeanDescription",
663:       "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector",
664:       "com.fasterxml.jackson.databind.cfg.ConfigOverrides",
665:       "com.fasterxml.jackson.annotation.JsonInclude$Value",
666:       "com.fasterxml.jackson.annotation.Nulls",
667:       "com.fasterxml.jackson.annotation.JsonSetter$Value",
668:       "com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility",
669:       "com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std",
670:       "com.fasterxml.jackson.annotation.JsonFormat$Shape",
671:       "com.fasterxml.jackson.annotation.JsonFormat$Features",
672:       "com.fasterxml.jackson.annotation.JsonFormat$Value",
673:       "com.fasterxml.jackson.databind.cfg.MapperConfig",
674:       "com.fasterxml.jackson.databind.cfg.ConfigOverride",
675:       "com.fasterxml.jackson.databind.cfg.ConfigOverride$Empty",
676:       "com.fasterxml.jackson.databind.MapperFeature",
677:       "com.fasterxml.jackson.databind.cfg.MapperConfigBase",
678:       "com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter",
679:       "com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter",
680:       "com.fasterxml.jackson.core.util.DefaultIndenter",
681:       "com.fasterxml.jackson.core.util.Separators",
682:       "com.fasterxml.jackson.core.PrettyPrinter",
683:       "com.fasterxml.jackson.databind.SerializationConfig",
684:       "com.fasterxml.jackson.databind.cfg.ContextAttributes",
685:       "com.fasterxml.jackson.databind.cfg.ContextAttributes$Impl",
686:       "com.fasterxml.jackson.databind.SerializationFeature",
687:       "com.fasterxml.jackson.databind.DeserializationConfig",
688:       "com.fasterxml.jackson.databind.node.JsonNodeFactory",
689:       "com.fasterxml.jackson.databind.DatabindContext",
690:       "com.fasterxml.jackson.databind.JsonSerializer",
691:       "com.fasterxml.jackson.databind.ser.std.StdSerializer",
692:       "com.fasterxml.jackson.databind.ser.impl.FailingSerializer",
693:       "com.fasterxml.jackson.databind.ser.impl.UnknownSerializer",
694:       "com.fasterxml.jackson.databind.SerializerProvider",
695:       "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider",
696:       "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider$Impl",
697:       "com.fasterxml.jackson.databind.ser.std.NullSerializer",
698:       "com.fasterxml.jackson.databind.ser.SerializerCache",
699:       "com.fasterxml.jackson.databind.DeserializationContext",
700:       "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext",
701:       "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext$Impl",
702:       "com.fasterxml.jackson.databind.deser.DeserializerFactory",
703:       "com.fasterxml.jackson.databind.PropertyName",
704:       "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
705:       "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers",
706:       "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig",
707:       "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
708:       "com.fasterxml.jackson.databind.deser.DeserializerCache",
709:       "com.fasterxml.jackson.databind.ser.SerializerFactory",
710:       "com.fasterxml.jackson.databind.ser.std.StdScalarSerializer",
711:       "com.fasterxml.jackson.databind.ser.std.StringSerializer",
712:       "com.fasterxml.jackson.databind.ser.std.ToStringSerializer",
713:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
714:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$Base",
715:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntegerSerializer",
716:       "com.fasterxml.jackson.core.JsonParser$NumberType",
717:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$LongSerializer",
718:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntLikeSerializer",
719:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$ShortSerializer",
720:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$DoubleSerializer",
721:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$FloatSerializer",
722:       "com.fasterxml.jackson.databind.ser.std.BooleanSerializer",
723:       "com.fasterxml.jackson.databind.ser.std.NumberSerializer",
724:       "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase",
725:       "com.fasterxml.jackson.databind.ser.std.CalendarSerializer",
726:       "com.fasterxml.jackson.databind.ser.std.DateSerializer",
727:       "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers",
728:       "com.fasterxml.jackson.databind.ser.std.UUIDSerializer",
729:       "com.fasterxml.jackson.databind.ser.BasicSerializerFactory",
730:       "com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig",
731:       "com.fasterxml.jackson.databind.ser.BeanSerializerFactory",
732:       "com.fasterxml.jackson.core.JsonProcessingException",
733:       "com.fasterxml.jackson.databind.JsonMappingException",
734:       "com.fasterxml.jackson.databind.exc.MismatchedInputException",
735:       "com.fasterxml.jackson.databind.exc.InvalidFormatException",
736:       "com.fasterxml.jackson.databind.type.MapLikeType",
737:       "com.fasterxml.jackson.databind.introspect.AnnotatedMember",
738:       "com.fasterxml.jackson.databind.introspect.VirtualAnnotatedMember",
739:       "com.fasterxml.jackson.databind.deser.ValueInstantiators$Base",
740:       "com.fasterxml.jackson.databind.util.ArrayBuilders",
741:       "com.fasterxml.jackson.databind.introspect.TypeResolutionContext$Basic",
742:       "com.fasterxml.jackson.databind.MappingJsonFactory",
743:       "com.fasterxml.jackson.databind.type.ClassStack",
744:       "com.fasterxml.jackson.databind.ObjectReader",
745:       "com.fasterxml.jackson.databind.introspect.AnnotationCollector$EmptyCollector",
746:       "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
747:       "com.fasterxml.jackson.databind.util.ArrayIterator",
748:       "com.fasterxml.jackson.databind.ext.OptionalHandlerFactory",
749:       "com.fasterxml.jackson.databind.JsonDeserializer",
750:       "com.fasterxml.jackson.databind.deser.std.StdDeserializer",
751:       "com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer",
752:       "com.fasterxml.jackson.databind.deser.std.FromStringDeserializer",
753:       "com.fasterxml.jackson.databind.deser.std.JdkDeserializers",
754:       "com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator",
755:       "com.fasterxml.jackson.databind.deser.impl.CreatorCollector",
756:       "com.fasterxml.jackson.databind.introspect.CollectorBase",
757:       "com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector",
758:       "com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector$FieldBuilder",
759:       "com.fasterxml.jackson.databind.introspect.AnnotatedField",
760:       "com.fasterxml.jackson.databind.introspect.AnnotationMap",
761:       "com.fasterxml.jackson.annotation.PropertyAccessor",
762:       "com.fasterxml.jackson.annotation.JsonAutoDetect$1",
763:       "com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition",
764:       "com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty",
765:       "com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type",
766:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder",
767:       "com.fasterxml.jackson.core.util.InternCache",
768:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked",
769:       "com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector",
770:       "com.fasterxml.jackson.databind.introspect.MemberKey",
771:       "com.fasterxml.jackson.databind.introspect.AnnotationCollector$OneCollector",
772:       "com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector$MethodBuilder",
773:       "com.fasterxml.jackson.databind.introspect.AnnotatedWithParams",
774:       "com.fasterxml.jackson.databind.introspect.AnnotatedMethod",
775:       "com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap",
776:       "com.fasterxml.jackson.databind.util.BeanUtil",
777:       "com.fasterxml.jackson.databind.introspect.AnnotatedCreatorCollector",
778:       "com.fasterxml.jackson.databind.introspect.AnnotatedConstructor",
779:       "com.fasterxml.jackson.databind.introspect.AnnotatedParameter",
780:       "com.fasterxml.jackson.databind.type.ArrayType",
781:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$9",
782:       "com.fasterxml.jackson.annotation.JsonProperty$Access",
783:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$10",
784:       "com.fasterxml.jackson.annotation.JsonCreator$Mode",
785:       "com.fasterxml.jackson.databind.deser.impl.CreatorCandidate",
786:       "com.fasterxml.jackson.databind.deser.impl.CreatorCandidate$Param",
787:       "com.fasterxml.jackson.databind.deser.impl.CreatorCollector$StdTypeConstructor",
788:       "com.fasterxml.jackson.databind.deser.ValueInstantiator",
789:       "com.fasterxml.jackson.databind.deser.std.StdValueInstantiator",
790:       "com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder",
791:       "com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value",
792:       "com.fasterxml.jackson.databind.type.TypeBindings$TypeParamStash",
793:       "com.fasterxml.jackson.databind.type.TypeBindings$AsKey",
794:       "com.fasterxml.jackson.databind.type.CollectionLikeType",
795:       "com.fasterxml.jackson.databind.type.CollectionType",
796:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$4",
797:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$5",
798:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$6",
799:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$7",
800:       "com.fasterxml.jackson.databind.PropertyMetadata",
801:       "com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase",
802:       "com.fasterxml.jackson.databind.deser.impl.FailingDeserializer",
803:       "com.fasterxml.jackson.databind.deser.SettableBeanProperty",
804:       "com.fasterxml.jackson.databind.deser.impl.SetterlessProperty",
805:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$1",
806:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$2",
807:       "com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap",
808:       "com.fasterxml.jackson.databind.deser.BeanDeserializerBase",
809:       "com.fasterxml.jackson.databind.deser.BeanDeserializer",
810:       "com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase",
811:       "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer",
812:       "com.fasterxml.jackson.databind.util.AccessPattern",
813:       "com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider",
814:       "com.fasterxml.jackson.databind.util.LinkedNode",
815:       "com.fasterxml.jackson.annotation.JsonFormat$Feature",
816:       "com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std",
817:       "com.fasterxml.jackson.databind.deser.DataFormatReaders",
818:       "com.fasterxml.jackson.core.format.MatchStrength",
819:       "com.fasterxml.jackson.databind.type.TypeModifier",
820:       "com.fasterxml.jackson.databind.type.MapType",
821:       "com.fasterxml.jackson.databind.type.PlaceholderForType",
822:       "com.fasterxml.jackson.core.io.IOContext",
823:       "com.fasterxml.jackson.core.util.MinimalPrettyPrinter",
824:       "com.fasterxml.jackson.core.util.ByteArrayBuilder",
825:       "com.fasterxml.jackson.databind.deser.BeanDeserializerModifier",
826:       "com.fasterxml.jackson.databind.module.SimpleDeserializers",
827:       "com.fasterxml.jackson.databind.JsonSerializable$Base",
828:       "com.fasterxml.jackson.databind.JsonNode",
829:       "com.fasterxml.jackson.databind.node.BaseJsonNode",
830:       "com.fasterxml.jackson.databind.node.ValueNode",
831:       "com.fasterxml.jackson.databind.node.NumericNode",
832:       "com.fasterxml.jackson.databind.node.ShortNode",
833:       "com.fasterxml.jackson.core.util.BufferRecycler",
834:       "com.fasterxml.jackson.core.JsonGenerator",
835:       "com.fasterxml.jackson.core.base.GeneratorBase",
836:       "com.fasterxml.jackson.core.io.CharTypes",
837:       "com.fasterxml.jackson.core.json.JsonGeneratorImpl",
838:       "com.fasterxml.jackson.core.json.UTF8JsonGenerator",
839:       "com.fasterxml.jackson.core.JsonStreamContext",
840:       "com.fasterxml.jackson.core.json.JsonWriteContext",
841:       "com.fasterxml.jackson.core.util.JsonGeneratorDelegate",
842:       "com.fasterxml.jackson.databind.type.ResolvedRecursiveType",
843:       "com.fasterxml.jackson.databind.AbstractTypeResolver",
844:       "com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver",
845:       "com.fasterxml.jackson.databind.introspect.NopAnnotationIntrospector$1",
846:       "com.fasterxml.jackson.databind.introspect.NopAnnotationIntrospector",
847:       "com.fasterxml.jackson.databind.PropertyNamingStrategy$PropertyNamingStrategyBase",
848:       "com.fasterxml.jackson.databind.PropertyNamingStrategy$SnakeCaseStrategy",
849:       "com.fasterxml.jackson.databind.PropertyNamingStrategy$UpperCamelCaseStrategy",
850:       "com.fasterxml.jackson.databind.PropertyNamingStrategy$LowerCaseStrategy",
851:       "com.fasterxml.jackson.databind.PropertyNamingStrategy$KebabCaseStrategy",
852:       "com.fasterxml.jackson.databind.PropertyNamingStrategy",
853:       "com.fasterxml.jackson.core.json.DupDetector",
854:       "com.fasterxml.jackson.databind.module.SimpleKeyDeserializers",
855:       "com.fasterxml.jackson.databind.node.JsonNodeType",
856:       "com.fasterxml.jackson.databind.annotation.NoClass",
857:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers",
858:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$PrimitiveOrWrapperDeserializer",
859:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ShortDeserializer",
860:       "com.fasterxml.jackson.core.io.OutputDecorator",
861:       "com.fasterxml.jackson.core.io.DataOutputAsStream",
862:       "com.fasterxml.jackson.core.util.BufferRecyclers",
863:       "com.fasterxml.jackson.core.json.WriterBasedJsonGenerator",
864:       "com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper",
865:       "com.fasterxml.jackson.core.JsonParser",
866:       "com.fasterxml.jackson.core.base.ParserMinimalBase",
867:       "com.fasterxml.jackson.core.base.ParserBase",
868:       "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
869:       "com.fasterxml.jackson.core.util.TextBuffer",
870:       "com.fasterxml.jackson.core.json.JsonReadContext",
871:       "com.fasterxml.jackson.core.JsonToken",
872:       "com.fasterxml.jackson.core.JsonParseException",
873:       "com.fasterxml.jackson.core.JsonLocation",
874:       "com.fasterxml.jackson.core.io.CharacterEscapes",
875:       "com.fasterxml.jackson.core.JsonpCharacterEscapes",
876:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer",
877:       "com.fasterxml.jackson.databind.BeanProperty$Bogus",
878:       "com.fasterxml.jackson.databind.node.TreeTraversingParser",
879:       "com.fasterxml.jackson.databind.node.NodeCursor",
880:       "com.fasterxml.jackson.databind.node.NodeCursor$RootCursor",
881:       "com.fasterxml.jackson.databind.module.SimpleValueInstantiators",
882:       "com.fasterxml.jackson.databind.Module",
883:       "com.fasterxml.jackson.databind.module.SimpleModule",
884:       "com.fasterxml.jackson.core.Version",
885:       "com.fasterxml.jackson.databind.cfg.MutableConfigOverride",
886:       "com.fasterxml.jackson.databind.deser.AbstractDeserializer",
887:       "com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap",
888:       "com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase",
889:       "com.fasterxml.jackson.core.json.async.NonBlockingJsonParser",
890:       "com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer",
891:       "com.fasterxml.jackson.databind.ext.CoreXMLDeserializers$Std",
892:       "com.fasterxml.jackson.core.io.InputDecorator",
893:       "com.fasterxml.jackson.databind.type.ReferenceType",
894:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer",
895:       "com.fasterxml.jackson.core.type.TypeReference",
896:       "com.fasterxml.jackson.databind.deser.DeserializationProblemHandler",
897:       "com.fasterxml.jackson.databind.JsonMappingException$Reference",
898:       "com.fasterxml.jackson.databind.deser.Deserializers$Base",
899:       "com.fasterxml.jackson.annotation.OptBoolean",
900:       "com.fasterxml.jackson.databind.deser.impl.MethodProperty",
901:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$8",
902:       "com.fasterxml.jackson.databind.deser.impl.FieldProperty",
903:       "com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition",
904:       "com.fasterxml.jackson.databind.deser.std.ThrowableDeserializer",
905:       "com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer",
906:       "com.fasterxml.jackson.databind.deser.std.DateDeserializers",
907:       "com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer",
908:       "com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder",
909:       "com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder",
910:       "com.fasterxml.jackson.annotation.JsonTypeInfo$Id",
911:       "com.fasterxml.jackson.databind.type.ClassKey",
912:       "com.fasterxml.jackson.core.io.NumberOutput",
913:       "com.fasterxml.jackson.core.filter.TokenFilter",
914:       "com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate",
915:       "com.fasterxml.jackson.core.filter.TokenFilterContext",
916:       "com.fasterxml.jackson.core.JsonGenerationException",
917:       "com.fasterxml.jackson.databind.InjectableValues",
918:       "com.fasterxml.jackson.databind.InjectableValues$Std",
919:       "com.fasterxml.jackson.core.filter.JsonPointerBasedFilter",
920:       "com.fasterxml.jackson.core.JsonPointer",
921:       "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
922:       "com.fasterxml.jackson.databind.deser.std.EnumDeserializer",
923:       "com.fasterxml.jackson.databind.util.EnumResolver",
924:       "com.fasterxml.jackson.databind.util.CompactStringObjectMap",
925:       "com.fasterxml.jackson.databind.ObjectMapper$3",
926:       "com.fasterxml.jackson.databind.ser.BeanSerializerBuilder",
927:       "com.fasterxml.jackson.core.util.JsonParserDelegate",
928:       "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
929:       "com.fasterxml.jackson.databind.exc.InvalidTypeIdException",
930:       "com.fasterxml.jackson.annotation.ObjectIdGenerator",
931:       "com.fasterxml.jackson.annotation.ObjectIdGenerators$Base",
932:       "com.fasterxml.jackson.annotation.ObjectIdGenerators$IntSequenceGenerator",
933:       "com.fasterxml.jackson.databind.ObjectWriter",
934:       "com.fasterxml.jackson.databind.ObjectWriter$GeneratorSettings",
935:       "com.fasterxml.jackson.databind.ObjectWriter$Prefetch",
936:       "com.fasterxml.jackson.databind.util.TypeKey",
937:       "com.fasterxml.jackson.databind.ser.std.ClassSerializer",
938:       "com.fasterxml.jackson.databind.deser.ValueInstantiator$Base",
939:       "com.fasterxml.jackson.core.util.JsonParserSequence",
940:       "com.fasterxml.jackson.databind.ser.BeanSerializerModifier",
941:       "com.fasterxml.jackson.core.util.VersionUtil",
942:       "com.fasterxml.jackson.databind.cfg.PackageVersion",
943:       "com.fasterxml.jackson.annotation.JsonAutoDetect$Value",
944:       "com.fasterxml.jackson.databind.introspect.VisibilityChecker$1",
945:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer",
946:       "com.fasterxml.jackson.databind.util.NameTransformer$NopTransformer",
947:       "com.fasterxml.jackson.databind.util.NameTransformer",
948:       "com.fasterxml.jackson.databind.util.NameTransformer$1",
949:       "com.fasterxml.jackson.databind.ObjectMapper$1",
950:       "com.fasterxml.jackson.core.io.SegmentedStringWriter",
951:       "com.fasterxml.jackson.databind.ser.PropertyBuilder",
952:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$3",
953:       "com.fasterxml.jackson.databind.BeanProperty$Std",
954:       "com.fasterxml.jackson.databind.ser.PropertyBuilder$1",
955:       "com.fasterxml.jackson.databind.ser.PropertyWriter",
956:       "com.fasterxml.jackson.databind.ser.BeanPropertyWriter",
957:       "com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap",
958:       "com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Empty",
959:       "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase",
960:       "com.fasterxml.jackson.databind.ser.BeanSerializer",
961:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$1",
962:       "com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult",
963:       "com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Single",
964:       "com.fasterxml.jackson.core.io.JsonStringEncoder",
965:       "com.fasterxml.jackson.databind.ser.ContainerSerializer",
966:       "com.fasterxml.jackson.databind.ser.std.ArraySerializerBase",
967:       "com.fasterxml.jackson.databind.ser.std.StdArraySerializers$BooleanArraySerializer",
968:       "com.fasterxml.jackson.databind.ser.std.ByteArraySerializer",
969:       "com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer",
970:       "com.fasterxml.jackson.databind.ser.std.StdArraySerializers$TypedPrimitiveArraySerializer",
971:       "com.fasterxml.jackson.databind.ser.std.StdArraySerializers$ShortArraySerializer",
972:       "com.fasterxml.jackson.databind.ser.std.StdArraySerializers$IntArraySerializer",
973:       "com.fasterxml.jackson.databind.ser.std.StdArraySerializers$LongArraySerializer",
974:       "com.fasterxml.jackson.databind.ser.std.StdArraySerializers$FloatArraySerializer",
975:       "com.fasterxml.jackson.databind.ser.std.StdArraySerializers$DoubleArraySerializer",
976:       "com.fasterxml.jackson.databind.ser.std.StdArraySerializers",
977:       "com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer",
978:       "com.fasterxml.jackson.databind.util.ObjectBuffer",
979:       "com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase",
980:       "com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer",
981:       "com.fasterxml.jackson.databind.BeanProperty",
982:       "com.fasterxml.jackson.databind.ser.FilterProvider",
983:       "com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider",
984:       "com.fasterxml.jackson.databind.ObjectMapper$2",
985:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer",
986:       "com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter",
987:       "com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$SerializeExceptFilter",
988:       "com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair",
989:       "com.fasterxml.jackson.databind.exc.InvalidDefinitionException",
990:       "com.fasterxml.jackson.databind.ser.std.EnumSerializer",
991:       "com.fasterxml.jackson.databind.util.EnumValues",
992:       "com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder$1",
993:       "com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase",
994:       "com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver",
995:       "com.fasterxml.jackson.databind.jsontype.TypeSerializer",
996:       "com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase",
997:       "com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer",
998:       "com.fasterxml.jackson.databind.ser.std.CollectionSerializer",
999:       "com.fasterxml.jackson.core.json.PackageVersion",
1000:       "com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Double",
1001:       "com.fasterxml.jackson.databind.ser.std.SerializableSerializer",
1002:       "com.fasterxml.jackson.core.json.UTF8DataInputJsonParser",
1003:       "com.fasterxml.jackson.core.type.WritableTypeId",
1004:       "com.fasterxml.jackson.databind.jsontype.TypeSerializer$1",
1005:       "com.fasterxml.jackson.core.type.WritableTypeId$Inclusion",
1006:       "com.fasterxml.jackson.core.JsonGenerator$1",
1007:       "com.fasterxml.jackson.databind.node.IntNode",
1008:       "com.fasterxml.jackson.databind.deser.std.StringDeserializer",
1009:       "com.fasterxml.jackson.databind.node.ContainerNode",
1010:       "com.fasterxml.jackson.databind.node.ObjectNode",
1011:       "com.fasterxml.jackson.databind.node.ArrayNode",
1012:       "com.fasterxml.jackson.databind.node.NodeCursor$ArrayCursor",
1013:       "com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter",
1014:       "com.fasterxml.jackson.annotation.JsonInclude$Include",
1015:       "com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers"
1016:     );
1017:   }
1018: }

[MASTER] 00:25:51.589 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
assertTrue(boolean0);

Class<Short> class0 = Short.TYPE;
assertNotNull(class0);
assertFalse(class0.isInterface());
assertFalse(class0.isAnnotation());
assertFalse(class0.isArray());
assertEquals("short", class0.toString());
assertEquals(1041, class0.getModifiers());
assertTrue(class0.isPrimitive());
assertFalse(class0.isSynthetic());
assertFalse(class0.isEnum());

Class<?> class1 = ClassUtil.getOuterClass(class0);
assertNull(class1);
assertFalse(class0.isInterface());
assertFalse(class0.isAnnotation());
assertFalse(class0.isArray());
assertEquals("short", class0.toString());
assertEquals(1041, class0.getModifiers());
assertTrue(class0.isPrimitive());
assertFalse(class0.isSynthetic());
assertFalse(class0.isEnum());

String string0 = ClassUtil.nameOf(class0);
assertNotNull(string0);
assertFalse(class0.isInterface());
assertFalse(class0.isAnnotation());
assertFalse(class0.isArray());
assertEquals("short", class0.toString());
assertEquals(1041, class0.getModifiers());
assertTrue(class0.isPrimitive());
assertFalse(class0.isSynthetic());
assertFalse(class0.isEnum());
assertEquals("`short`", string0);

Throwable throwable0 = ClassUtil.throwIfError((Throwable) null);
assertNull(throwable0);

List<Class<?>> list0 = new LinkedList<Class<Integer>>();
assertNotNull(list0);
assertEquals(0, list0.size());
assertTrue(list0.isEmpty());


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 8
* Writing tests to file
* Writing JUnit test case 'ClassUtil_ESTest' to results/JacksonDatabind-103/com.fasterxml.jackson.databind.util.ClassUtil/default/tests/10
* Done!

* Computation finished
