* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0
* Going to generate test cases for class: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider
* Starting Client-0
* Connecting to master process on port 2416
* Analyzing classpath: 
  - subjects/buggy-versions/JacksonDatabind-103/target/classes
  - defects4j/framework/projects/JacksonDatabind/lib/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar
  - defects4j/framework/projects/JacksonDatabind/lib/com/fasterxml/jackson/core/jackson-core/2.9.7/jackson-core-2.9.7.jar
* Finished analyzing classpath
* Generating tests for class com.fasterxml.jackson.databind.ser.DefaultSerializerProvider
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 719
* Using seed 99091331
* Starting evolution
* Initial Number of Goals in DynaMOSA = 179 / 719
[MASTER] 00:02:25.345 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Map<K, V> : Type points to itself
[MASTER] 00:02:25.798 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedHashSet<E> : Type points to itself
[MASTER] 00:02:30.283 [logback-2] ERROR TestCluster - Failed to check cache for com.fasterxml.jackson.annotation.ObjectIdGenerator<T> : Type points to itself
[MASTER] 00:02:30.488 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 00:02:40.431 [logback-2] ERROR TestCluster - Failed to check cache for com.fasterxml.jackson.databind.JsonDeserializer<T> : Type points to itself
[MASTER] 00:03:03.498 [logback-2] ERROR TestCluster - Failed to check cache for com.fasterxml.jackson.databind.JsonSerializer<T> : Type points to itself
[MASTER] 00:03:03.857 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[MASTER] 00:03:07.251 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 00:03:20.682 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.BiFunction<T, U, R> : Type points to itself
[MASTER] 00:03:42.785 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.ser.BeanSerializerBuilder due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.SerializationConfig due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.cfg.BaseSettings due to org.evosuite.ga.ConstructionFailedException: Invalid generic instance
[MASTER] 00:03:42.849 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Have no generator for class com.fasterxml.jackson.databind.introspect.BasicClassIntrospector canUseFunctionalMocks=false, canBeMocked: true
[MASTER] 00:03:45.763 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Invalid generic instance
[MASTER] 00:04:04.277 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.DeserializationConfig due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.cfg.BaseSettings due to org.evosuite.ga.ConstructionFailedException: Invalid generic instance
[MASTER] 00:05:44.215 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.ser.BeanSerializerBuilder due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.DeserializationConfig due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.cfg.BaseSettings due to org.evosuite.ga.ConstructionFailedException: Max recursion depth reached
* Search finished after 302s and 459 generations, 100163 statements, best individual has fitness: 328.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 60%
* Total number of goals: 201
* Number of covered goals: 121
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 61%
* Total number of goals: 128
* Number of covered goals: 78
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 24
* Number of covered goals: 24
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 54%
* Total number of goals: 170
* Number of covered goals: 92
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 38%
* Total number of goals: 48
* Number of covered goals: 18
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 95%
* Total number of goals: 22
* Number of covered goals: 21
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 77%
* Total number of goals: 22
* Number of covered goals: 17
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 61%
* Total number of goals: 128
* Number of covered goals: 78
* Generated 54 tests with total length 292
* Resulting test suite's coverage: 56% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 23%
* Compiling and checking tests
[MASTER] 00:08:00.043 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_18_1605571679771/com/fasterxml/jackson/databind/ser/DefaultSerializerProvider_18_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_18_1605571679771/com/fasterxml/jackson/databind/ser/DefaultSerializerProvider_18_tmp__ESTest_scaffolding.java]]
[MASTER] 00:08:00.060 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/JacksonDatabind-103/target/classes:defects4j/framework/projects/JacksonDatabind/lib/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar:defects4j/framework/projects/JacksonDatabind/lib/com/fasterxml/jackson/core/jackson-core/2.9.7/jackson-core-2.9.7.jar:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/JacksonDatabind-103/target/classes:/experiment/defects4j/framework/projects/JacksonDatabind/lib/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar:/experiment/defects4j/framework/projects/JacksonDatabind/lib/com/fasterxml/jackson/core/jackson-core/2.9.7/jackson-core-2.9.7.jar
[MASTER] 00:08:00.066 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/JacksonDatabind-103/target/classes:/experiment/defects4j/framework/projects/JacksonDatabind/lib/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar:/experiment/defects4j/framework/projects/JacksonDatabind/lib/com/fasterxml/jackson/core/jackson-core/2.9.7/jackson-core-2.9.7.jar
[MASTER] 00:08:00.107 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.util.ArrayList<com.fasterxml.jackson.annotation.ObjectIdGenerator<java.time.format.TextStyle>> cannot be converted to java.util.ArrayList<com.fasterxml.jackson.annotation.ObjectIdGenerator<?>>: 32
[MASTER] 00:08:00.115 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_18_1605571679771/com/fasterxml/jackson/databind/ser/DefaultSerializerProvider_18_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 00:08:00.115 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 00:08:00.129 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_18_1605571679771/com/fasterxml/jackson/databind/ser/DefaultSerializerProvider_18_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 17 00:07:59 GMT 2020
4:  */
5: 
6: package com.fasterxml.jackson.databind.ser;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import com.fasterxml.jackson.annotation.ObjectIdGenerator;
12: import com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;
13: import com.fasterxml.jackson.databind.ser.impl.WritableObjectId;
14: import java.time.format.TextStyle;
15: import java.util.ArrayList;
16: import java.util.HashMap;
17: import java.util.Map;
18: import org.evosuite.runtime.EvoRunner;
19: import org.evosuite.runtime.EvoRunnerParameters;
20: import org.evosuite.runtime.ViolatedAssumptionAnswer;
21: import org.junit.runner.RunWith;
22: 
23: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
24: public class DefaultSerializerProvider_18_tmp__ESTest extends DefaultSerializerProvider_18_tmp__ESTest_scaffolding {
25: 
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
29:       HashMap<Object, WritableObjectId> hashMap0 = new HashMap<Object, WritableObjectId>();
30:       defaultSerializerProvider_Impl0._seenObjectIds = (Map<Object, WritableObjectId>) hashMap0;
31:       ArrayList<ObjectIdGenerator<TextStyle>> arrayList0 = new ArrayList<ObjectIdGenerator<TextStyle>>();
32:       defaultSerializerProvider_Impl0._objectIdGenerators = arrayList0;
33:       ObjectIdGenerator<TextStyle> objectIdGenerator0 = (ObjectIdGenerator<TextStyle>) mock(ObjectIdGenerator.class, new ViolatedAssumptionAnswer());
34:       doReturn(false).when(objectIdGenerator0).canUseFor(any(com.fasterxml.jackson.annotation.ObjectIdGenerator.class));
35:       arrayList0.add(objectIdGenerator0);
36:       ObjectIdGenerator<Object> objectIdGenerator1 = (ObjectIdGenerator<Object>) mock(ObjectIdGenerator.class, new ViolatedAssumptionAnswer());
37:       ObjectIdGenerator<Object> objectIdGenerator2 = (ObjectIdGenerator<Object>) mock(ObjectIdGenerator.class, new ViolatedAssumptionAnswer());
38:       doReturn(objectIdGenerator1).when(objectIdGenerator2).newForSerialization(any());
39:       WritableObjectId writableObjectId0 = defaultSerializerProvider_Impl0.findObjectId((Object) null, objectIdGenerator2);
40:       assertNotNull(writableObjectId0);
41:   }
42: }
RegularFileObject[/tmp/EvoSuite_18_1605571679771/com/fasterxml/jackson/databind/ser/DefaultSerializerProvider_18_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 17 00:07:59 GMT 2020
5:  */
6: 
7: package com.fasterxml.jackson.databind.ser;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class DefaultSerializerProvider_18_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule 
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass 
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass 
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before 
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After 
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/experiment"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(DefaultSerializerProvider_18_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonBooleanFormatVisitor",
84:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$WithMember",
85:       "com.fasterxml.jackson.databind.MappingIterator",
86:       "com.fasterxml.jackson.databind.deser.BeanDeserializerModifier",
87:       "com.fasterxml.jackson.databind.ser.PropertyBuilder",
88:       "com.fasterxml.jackson.databind.deser.impl.FieldProperty",
89:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$ShortSerializer",
90:       "com.fasterxml.jackson.annotation.ObjectIdGenerators$Base",
91:       "com.fasterxml.jackson.databind.deser.std.EnumDeserializer",
92:       "com.fasterxml.jackson.annotation.JsonFormat$Features",
93:       "com.fasterxml.jackson.databind.introspect.AnnotatedConstructor",
94:       "com.fasterxml.jackson.databind.cfg.MapperConfigBase",
95:       "com.fasterxml.jackson.databind.deser.UnresolvedForwardReference",
96:       "com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer",
97:       "com.fasterxml.jackson.databind.ser.impl.UnknownSerializer",
98:       "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWithSerializerProvider",
99:       "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers",
100:       "com.fasterxml.jackson.core.async.ByteArrayFeeder",
101:       "com.fasterxml.jackson.databind.type.MapLikeType",
102:       "com.fasterxml.jackson.databind.util.LinkedNode",
103:       "com.fasterxml.jackson.databind.type.MapType",
104:       "com.fasterxml.jackson.databind.annotation.JsonTypeResolver",
105:       "com.fasterxml.jackson.databind.ser.std.UUIDSerializer",
106:       "com.fasterxml.jackson.databind.ObjectWriter",
107:       "com.fasterxml.jackson.databind.deser.std.FromStringDeserializer",
108:       "com.fasterxml.jackson.databind.type.TypeBase",
109:       "com.fasterxml.jackson.core.util.BufferRecyclers",
110:       "com.fasterxml.jackson.databind.node.TextNode",
111:       "com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty",
112:       "com.fasterxml.jackson.core.util.Instantiatable",
113:       "com.fasterxml.jackson.databind.deser.std.DateDeserializers$TimestampDeserializer",
114:       "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase",
115:       "com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder",
116:       "com.fasterxml.jackson.core.json.UTF8DataInputJsonParser",
117:       "com.fasterxml.jackson.annotation.Nulls",
118:       "com.fasterxml.jackson.annotation.JsonIgnoreProperties",
119:       "com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter",
120:       "com.fasterxml.jackson.databind.introspect.AnnotatedCreatorCollector",
121:       "com.fasterxml.jackson.databind.deser.impl.ReadableObjectId",
122:       "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonAnyFormatVisitor",
123:       "com.fasterxml.jackson.annotation.JsonSetter$Value",
124:       "com.fasterxml.jackson.databind.node.DecimalNode",
125:       "com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value",
126:       "com.fasterxml.jackson.databind.introspect.AnnotationCollector$EmptyCollector",
127:       "com.fasterxml.jackson.databind.util.Annotations",
128:       "com.fasterxml.jackson.databind.ser.std.CollectionSerializer",
129:       "com.fasterxml.jackson.databind.deser.Deserializers",
130:       "com.fasterxml.jackson.databind.deser.KeyDeserializers",
131:       "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitable",
132:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer",
133:       "com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std",
134:       "com.fasterxml.jackson.databind.type.CollectionLikeType",
135:       "com.fasterxml.jackson.core.FormatFeature",
136:       "com.fasterxml.jackson.core.TreeNode",
137:       "com.fasterxml.jackson.databind.node.NumericNode",
138:       "com.fasterxml.jackson.annotation.ObjectIdGenerators$StringIdGenerator",
139:       "com.fasterxml.jackson.databind.deser.ValueInstantiator",
140:       "com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase",
141:       "com.fasterxml.jackson.databind.type.ResolvedRecursiveType",
142:       "com.fasterxml.jackson.databind.introspect.AnnotatedClass$Creators",
143:       "com.fasterxml.jackson.databind.ext.CoreXMLSerializers",
144:       "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector",
145:       "com.fasterxml.jackson.core.base.ParserMinimalBase",
146:       "com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer",
147:       "com.fasterxml.jackson.databind.deser.BeanDeserializerBase",
148:       "com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping",
149:       "com.fasterxml.jackson.databind.BeanProperty$Std",
150:       "com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition",
151:       "com.fasterxml.jackson.annotation.JsonSetter",
152:       "com.fasterxml.jackson.databind.util.Converter",
153:       "com.fasterxml.jackson.databind.ser.std.FileSerializer",
154:       "com.fasterxml.jackson.core.SerializableString",
155:       "com.fasterxml.jackson.databind.deser.ValueInstantiators",
156:       "com.fasterxml.jackson.databind.ser.PropertyBuilder$1",
157:       "com.fasterxml.jackson.core.Versioned",
158:       "com.fasterxml.jackson.databind.introspect.VirtualAnnotatedMember",
159:       "com.fasterxml.jackson.databind.introspect.BasicBeanDescription",
160:       "com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer",
161:       "com.fasterxml.jackson.annotation.JsonAlias",
162:       "com.fasterxml.jackson.databind.introspect.AnnotatedMember",
163:       "com.fasterxml.jackson.databind.JsonSerializable",
164:       "com.fasterxml.jackson.databind.deser.impl.MergingSettableBeanProperty",
165:       "com.fasterxml.jackson.databind.BeanDescription",
166:       "com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer",
167:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$DoubleDeserializer",
168:       "com.fasterxml.jackson.core.filter.JsonPointerBasedFilter",
169:       "com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap",
170:       "com.fasterxml.jackson.databind.introspect.AnnotatedWithParams",
171:       "com.fasterxml.jackson.core.Base64Variant",
172:       "com.fasterxml.jackson.annotation.ObjectIdGenerators$None",
173:       "com.fasterxml.jackson.databind.exc.IgnoredPropertyException",
174:       "com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap",
175:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer",
176:       "com.fasterxml.jackson.databind.annotation.JsonNaming",
177:       "com.fasterxml.jackson.databind.ser.SerializerFactory",
178:       "com.fasterxml.jackson.annotation.JsonPropertyOrder",
179:       "com.fasterxml.jackson.databind.ext.CoreXMLSerializers$XMLGregorianCalendarSerializer",
180:       "com.fasterxml.jackson.databind.type.SimpleType",
181:       "com.fasterxml.jackson.databind.ser.ContextualSerializer",
182:       "com.fasterxml.jackson.databind.DeserializationConfig",
183:       "com.fasterxml.jackson.databind.MapperFeature",
184:       "com.fasterxml.jackson.core.util.InternCache",
185:       "com.fasterxml.jackson.databind.ser.std.ClassSerializer",
186:       "com.fasterxml.jackson.databind.Module$SetupContext",
187:       "com.fasterxml.jackson.databind.ext.Java7SupportImpl",
188:       "com.fasterxml.jackson.databind.util.ClassUtil",
189:       "com.fasterxml.jackson.databind.node.ContainerNode",
190:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$LongSerializer",
191:       "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
192:       "com.fasterxml.jackson.databind.RuntimeJsonMappingException",
193:       "com.fasterxml.jackson.databind.ser.std.StdSerializer",
194:       "com.fasterxml.jackson.databind.ser.BeanSerializerFactory",
195:       "com.fasterxml.jackson.databind.PropertyNamingStrategy",
196:       "com.fasterxml.jackson.annotation.JsonPropertyDescription",
197:       "com.fasterxml.jackson.databind.jsonschema.SchemaAware",
198:       "com.fasterxml.jackson.databind.AbstractTypeResolver",
199:       "com.fasterxml.jackson.annotation.JacksonAnnotationsInside",
200:       "com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver",
201:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$DoubleSerializer",
202:       "com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer",
203:       "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonMapFormatVisitor",
204:       "com.fasterxml.jackson.core.Base64Variants",
205:       "com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer",
206:       "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor",
207:       "com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer",
208:       "com.fasterxml.jackson.databind.ser.std.IterableSerializer",
209:       "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicIntegerSerializer",
210:       "com.fasterxml.jackson.databind.util.ArrayBuilders",
211:       "com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter",
212:       "com.fasterxml.jackson.core.io.IOContext",
213:       "com.fasterxml.jackson.core.PrettyPrinter",
214:       "com.fasterxml.jackson.databind.util.RawValue",
215:       "com.fasterxml.jackson.core.base.GeneratorBase",
216:       "com.fasterxml.jackson.databind.exc.PropertyBindingException",
217:       "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
218:       "com.fasterxml.jackson.databind.ser.BeanSerializer",
219:       "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider",
220:       "com.fasterxml.jackson.databind.node.NullNode",
221:       "com.fasterxml.jackson.databind.deser.ValueInstantiator$Base",
222:       "com.fasterxml.jackson.databind.ser.BeanSerializerModifier",
223:       "com.fasterxml.jackson.core.util.Separators",
224:       "com.fasterxml.jackson.databind.jsontype.NamedType",
225:       "com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder",
226:       "com.fasterxml.jackson.databind.introspect.ObjectIdInfo",
227:       "com.fasterxml.jackson.core.json.JsonWriteContext",
228:       "com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer",
229:       "com.fasterxml.jackson.databind.introspect.NopAnnotationIntrospector",
230:       "com.fasterxml.jackson.annotation.ObjectIdGenerators$PropertyGenerator",
231:       "com.fasterxml.jackson.annotation.JacksonInject",
232:       "com.fasterxml.jackson.core.io.UTF8Writer",
233:       "com.fasterxml.jackson.databind.BeanProperty",
234:       "com.fasterxml.jackson.core.Version",
235:       "com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring",
236:       "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
237:       "com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer",
238:       "com.fasterxml.jackson.core.io.InputDecorator",
239:       "com.fasterxml.jackson.databind.introspect.TypeResolutionContext",
240:       "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat",
241:       "com.fasterxml.jackson.annotation.JsonTypeId",
242:       "com.fasterxml.jackson.core.base.ParserBase",
243:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntLikeSerializer",
244:       "com.fasterxml.jackson.databind.node.BinaryNode",
245:       "com.fasterxml.jackson.databind.introspect.AnnotationMap",
246:       "com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector",
247:       "com.fasterxml.jackson.databind.ser.std.ToStringSerializer",
248:       "com.fasterxml.jackson.databind.deser.DataFormatReaders",
249:       "com.fasterxml.jackson.core.JsonGenerator",
250:       "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext",
251:       "com.fasterxml.jackson.databind.ser.Serializers",
252:       "com.fasterxml.jackson.databind.type.ClassStack",
253:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer",
254:       "com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Single",
255:       "com.fasterxml.jackson.databind.ext.OptionalHandlerFactory",
256:       "com.fasterxml.jackson.databind.type.ClassKey",
257:       "com.fasterxml.jackson.databind.deser.std.DateDeserializers",
258:       "com.fasterxml.jackson.core.JsonEncoding",
259:       "com.fasterxml.jackson.core.JsonGenerationException",
260:       "com.fasterxml.jackson.annotation.JsonProperty$Access",
261:       "com.fasterxml.jackson.databind.ser.std.JsonValueSerializer",
262:       "com.fasterxml.jackson.core.TreeCodec",
263:       "com.fasterxml.jackson.annotation.JsonAutoDetect$Value",
264:       "com.fasterxml.jackson.databind.deser.impl.SetterlessProperty",
265:       "com.fasterxml.jackson.core.json.UTF8JsonGenerator",
266:       "com.fasterxml.jackson.databind.ser.std.EnumSetSerializer",
267:       "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonIntegerFormatVisitor",
268:       "com.fasterxml.jackson.databind.ser.std.SerializableSerializer",
269:       "com.fasterxml.jackson.databind.introspect.Annotated",
270:       "com.fasterxml.jackson.core.type.WritableTypeId",
271:       "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$DelegatingKD",
272:       "com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap",
273:       "com.fasterxml.jackson.databind.deser.std.StdValueInstantiator",
274:       "com.fasterxml.jackson.databind.util.TokenBuffer",
275:       "com.fasterxml.jackson.databind.annotation.NoClass",
276:       "com.fasterxml.jackson.core.JsonParser$NumberType",
277:       "com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter",
278:       "com.fasterxml.jackson.databind.type.PlaceholderForType",
279:       "com.fasterxml.jackson.databind.JsonMappingException$Reference",
280:       "com.fasterxml.jackson.core.json.WriterBasedJsonGenerator",
281:       "com.fasterxml.jackson.databind.deser.SettableBeanProperty$Delegating",
282:       "com.fasterxml.jackson.databind.jsontype.TypeDeserializer",
283:       "com.fasterxml.jackson.databind.deser.std.JdkDeserializers",
284:       "com.fasterxml.jackson.databind.node.LongNode",
285:       "com.fasterxml.jackson.databind.deser.CreatorProperty",
286:       "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonStringFormatVisitor",
287:       "com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer",
288:       "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringCtorKeyDeserializer",
289:       "com.fasterxml.jackson.annotation.JsonAnyGetter",
290:       "com.fasterxml.jackson.core.type.TypeReference",
291:       "com.fasterxml.jackson.core.JsonParseException",
292:       "com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase",
293:       "com.fasterxml.jackson.databind.JsonSerializer$None",
294:       "com.fasterxml.jackson.databind.annotation.JacksonStdImpl",
295:       "com.fasterxml.jackson.annotation.JsonRootName",
296:       "com.fasterxml.jackson.databind.ser.std.TokenBufferSerializer",
297:       "com.fasterxml.jackson.databind.type.TypeBindings$TypeParamStash",
298:       "com.fasterxml.jackson.annotation.JsonBackReference",
299:       "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonArrayFormatVisitor",
300:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigDecimalDeserializer",
301:       "com.fasterxml.jackson.databind.deser.impl.CreatorCandidate",
302:       "com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig",
303:       "com.fasterxml.jackson.databind.ser.std.MapSerializer",
304:       "com.fasterxml.jackson.annotation.JsonAnySetter",
305:       "com.fasterxml.jackson.databind.ser.std.SqlDateSerializer",
306:       "com.fasterxml.jackson.databind.util.RootNameLookup",
307:       "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
308:       "com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket",
309:       "com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer",
310:       "com.fasterxml.jackson.databind.ser.impl.FailingSerializer",
311:       "com.fasterxml.jackson.databind.JsonMappingException",
312:       "com.fasterxml.jackson.core.io.OutputDecorator",
313:       "com.fasterxml.jackson.databind.deser.DataFormatReaders$Match",
314:       "com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer",
315:       "com.fasterxml.jackson.databind.deser.std.DateDeserializers$SqlDateDeserializer",
316:       "com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer",
317:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ShortDeserializer",
318:       "com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer",
319:       "com.fasterxml.jackson.annotation.JsonTypeInfo$As",
320:       "com.fasterxml.jackson.databind.ser.std.SqlTimeSerializer",
321:       "com.fasterxml.jackson.databind.util.BeanUtil",
322:       "com.fasterxml.jackson.databind.DatabindContext",
323:       "com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateDeserializer",
324:       "com.fasterxml.jackson.databind.node.ObjectNode",
325:       "com.fasterxml.jackson.databind.cfg.ConfigOverride",
326:       "com.fasterxml.jackson.core.JsonParser$Feature",
327:       "com.fasterxml.jackson.core.JsonPointer",
328:       "com.fasterxml.jackson.core.io.SerializedString",
329:       "com.fasterxml.jackson.annotation.JsonMerge",
330:       "com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter",
331:       "com.fasterxml.jackson.databind.deser.DeserializationProblemHandler",
332:       "com.fasterxml.jackson.annotation.JsonFormat$Shape",
333:       "com.fasterxml.jackson.databind.introspect.AnnotationCollector",
334:       "com.fasterxml.jackson.annotation.PropertyAccessor",
335:       "com.fasterxml.jackson.databind.introspect.AnnotatedField",
336:       "com.fasterxml.jackson.annotation.JsonFormat$Feature",
337:       "com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase",
338:       "com.fasterxml.jackson.databind.deser.ContextualDeserializer",
339:       "com.fasterxml.jackson.databind.ser.std.ArraySerializerBase",
340:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked",
341:       "com.fasterxml.jackson.databind.cfg.HandlerInstantiator",
342:       "com.fasterxml.jackson.annotation.ObjectIdGenerator",
343:       "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes",
344:       "com.fasterxml.jackson.databind.ser.std.CalendarSerializer",
345:       "com.fasterxml.jackson.databind.annotation.JsonValueInstantiator",
346:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigIntegerDeserializer",
347:       "com.fasterxml.jackson.databind.ext.Java7Support",
348:       "com.fasterxml.jackson.databind.ser.std.BooleanSerializer$AsNumber",
349:       "com.fasterxml.jackson.databind.exc.InvalidDefinitionException",
350:       "com.fasterxml.jackson.databind.ser.std.BooleanSerializer",
351:       "com.fasterxml.jackson.annotation.JsonAutoDetect$1",
352:       "com.fasterxml.jackson.databind.introspect.ClassIntrospector",
353:       "com.fasterxml.jackson.annotation.JsonProperty",
354:       "com.fasterxml.jackson.databind.JsonSerializable$Base",
355:       "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer",
356:       "com.fasterxml.jackson.databind.cfg.ConfigOverride$Empty",
357:       "com.fasterxml.jackson.databind.util.AccessPattern",
358:       "com.fasterxml.jackson.databind.node.TreeTraversingParser",
359:       "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer",
360:       "com.fasterxml.jackson.databind.jsontype.TypeSerializer",
361:       "com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer",
362:       "com.fasterxml.jackson.databind.jsonschema.JsonSchema",
363:       "com.fasterxml.jackson.databind.deser.std.UUIDDeserializer",
364:       "com.fasterxml.jackson.databind.type.TypeFactory",
365:       "com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std",
366:       "com.fasterxml.jackson.databind.type.ArrayType",
367:       "com.fasterxml.jackson.databind.deser.impl.ObjectIdReader",
368:       "com.fasterxml.jackson.databind.util.Named",
369:       "com.fasterxml.jackson.core.util.JsonParserDelegate",
370:       "com.fasterxml.jackson.core.io.JsonStringEncoder",
371:       "com.fasterxml.jackson.databind.cfg.ConfigOverrides",
372:       "com.fasterxml.jackson.databind.ser.std.StdScalarSerializer",
373:       "com.fasterxml.jackson.databind.type.CollectionType",
374:       "com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer",
375:       "com.fasterxml.jackson.annotation.JsonAutoDetect",
376:       "com.fasterxml.jackson.core.format.InputAccessor",
377:       "com.fasterxml.jackson.databind.node.ValueNode",
378:       "com.fasterxml.jackson.databind.ser.impl.IteratorSerializer",
379:       "com.fasterxml.jackson.databind.ser.BasicSerializerFactory",
380:       "com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer",
381:       "com.fasterxml.jackson.databind.util.ClassUtil$Ctor",
382:       "com.fasterxml.jackson.databind.ext.NioPathDeserializer",
383:       "com.fasterxml.jackson.databind.node.JsonNodeCreator",
384:       "com.fasterxml.jackson.databind.deser.SettableBeanProperty",
385:       "com.fasterxml.jackson.core.async.NonBlockingInputFeeder",
386:       "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper",
387:       "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
388:       "com.fasterxml.jackson.core.JsonLocation",
389:       "com.fasterxml.jackson.databind.exc.MismatchedInputException",
390:       "com.fasterxml.jackson.databind.node.FloatNode",
391:       "com.fasterxml.jackson.databind.node.IntNode",
392:       "com.fasterxml.jackson.databind.type.TypeParser",
393:       "com.fasterxml.jackson.databind.jsontype.SubtypeResolver",
394:       "com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer",
395:       "com.fasterxml.jackson.core.ObjectCodec",
396:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers",
397:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$PrimitiveOrWrapperDeserializer",
398:       "com.fasterxml.jackson.databind.ser.std.EnumSerializer",
399:       "com.fasterxml.jackson.databind.cfg.ContextAttributes$Impl",
400:       "com.fasterxml.jackson.core.util.DefaultPrettyPrinter",
401:       "com.fasterxml.jackson.databind.KeyDeserializer",
402:       "com.fasterxml.jackson.core.util.BufferRecycler",
403:       "com.fasterxml.jackson.databind.deser.impl.ErrorThrowingDeserializer",
404:       "com.fasterxml.jackson.databind.deser.BeanDeserializer$BeanReferring",
405:       "com.fasterxml.jackson.databind.deser.impl.PropertyBasedObjectIdGenerator",
406:       "com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer",
407:       "com.fasterxml.jackson.annotation.ObjectIdResolver",
408:       "com.fasterxml.jackson.databind.DeserializationContext",
409:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$Base",
410:       "com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer",
411:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$10",
412:       "com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer",
413:       "com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector",
414:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer",
415:       "com.fasterxml.jackson.databind.node.DoubleNode",
416:       "com.fasterxml.jackson.databind.ser.PropertyWriter",
417:       "com.fasterxml.jackson.databind.deser.impl.CreatorCandidate$Param",
418:       "com.fasterxml.jackson.core.util.ByteArrayBuilder",
419:       "com.fasterxml.jackson.databind.type.ReferenceType",
420:       "com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer",
421:       "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$TableInfo",
422:       "com.fasterxml.jackson.databind.ser.std.NumberSerializer",
423:       "com.fasterxml.jackson.databind.introspect.AnnotationCollector$NoAnnotations",
424:       "com.fasterxml.jackson.databind.Module",
425:       "com.fasterxml.jackson.annotation.JsonView",
426:       "com.fasterxml.jackson.databind.AnnotationIntrospector",
427:       "com.fasterxml.jackson.databind.ser.ContainerSerializer",
428:       "com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter",
429:       "com.fasterxml.jackson.databind.ser.std.DateSerializer",
430:       "com.fasterxml.jackson.databind.ser.std.NullSerializer",
431:       "com.fasterxml.jackson.databind.deser.std.StringDeserializer",
432:       "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer",
433:       "com.fasterxml.jackson.annotation.JsonGetter",
434:       "com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector$FieldBuilder",
435:       "com.fasterxml.jackson.databind.exc.InvalidTypeIdException",
436:       "com.fasterxml.jackson.databind.DeserializationFeature",
437:       "com.fasterxml.jackson.databind.node.POJONode",
438:       "com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer",
439:       "com.fasterxml.jackson.annotation.JacksonAnnotation",
440:       "com.fasterxml.jackson.databind.ObjectReader",
441:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder",
442:       "com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer",
443:       "com.fasterxml.jackson.databind.node.BaseJsonNode",
444:       "com.fasterxml.jackson.databind.node.BigIntegerNode",
445:       "com.fasterxml.jackson.databind.util.LRUMap",
446:       "com.fasterxml.jackson.databind.JsonDeserializer",
447:       "com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition",
448:       "com.fasterxml.jackson.databind.deser.impl.MethodProperty",
449:       "com.fasterxml.jackson.annotation.JsonRawValue",
450:       "com.fasterxml.jackson.core.util.DefaultIndenter",
451:       "com.fasterxml.jackson.databind.introspect.MemberKey",
452:       "com.fasterxml.jackson.databind.node.ArrayNode",
453:       "com.fasterxml.jackson.annotation.JsonTypeInfo$Id",
454:       "com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility",
455:       "com.fasterxml.jackson.databind.ser.impl.AttributePropertyWriter",
456:       "com.fasterxml.jackson.core.util.JsonGeneratorDelegate",
457:       "com.fasterxml.jackson.databind.deser.std.MapDeserializer",
458:       "com.fasterxml.jackson.databind.exc.InvalidFormatException",
459:       "com.fasterxml.jackson.core.io.CharacterEscapes",
460:       "com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer",
461:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer",
462:       "com.fasterxml.jackson.databind.introspect.TypeResolutionContext$Basic",
463:       "com.fasterxml.jackson.core.type.ResolvedType",
464:       "com.fasterxml.jackson.databind.deser.impl.CreatorCollector",
465:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
466:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$LongDeserializer",
467:       "com.fasterxml.jackson.databind.annotation.JsonSerialize",
468:       "com.fasterxml.jackson.annotation.JsonIgnore",
469:       "com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator",
470:       "com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey",
471:       "com.fasterxml.jackson.databind.introspect.AnnotatedMethod",
472:       "com.fasterxml.jackson.databind.jsontype.TypeIdResolver",
473:       "com.fasterxml.jackson.databind.util.ConstantValueInstantiator",
474:       "com.fasterxml.jackson.databind.introspect.VisibilityChecker",
475:       "com.fasterxml.jackson.core.JsonParser",
476:       "com.fasterxml.jackson.databind.introspect.AnnotatedParameter",
477:       "com.fasterxml.jackson.databind.ser.BeanPropertyWriter",
478:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$FloatSerializer",
479:       "com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type",
480:       "com.fasterxml.jackson.core.JsonProcessingException",
481:       "com.fasterxml.jackson.core.JsonStreamContext",
482:       "com.fasterxml.jackson.core.format.MatchStrength",
483:       "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket",
484:       "com.fasterxml.jackson.databind.introspect.CollectorBase",
485:       "com.fasterxml.jackson.annotation.ObjectIdGenerators$UUIDGenerator",
486:       "com.fasterxml.jackson.annotation.JsonCreator",
487:       "com.fasterxml.jackson.databind.cfg.MutableConfigOverride",
488:       "com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer",
489:       "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext$Impl",
490:       "com.fasterxml.jackson.core.filter.TokenFilter",
491:       "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException",
492:       "com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector$MethodBuilder",
493:       "com.fasterxml.jackson.databind.util.ArrayIterator",
494:       "com.fasterxml.jackson.core.io.CharTypes",
495:       "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicBooleanSerializer",
496:       "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicLongSerializer",
497:       "com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver",
498:       "com.fasterxml.jackson.databind.ser.std.InetAddressSerializer",
499:       "com.fasterxml.jackson.databind.deser.impl.CreatorCollector$StdTypeConstructor",
500:       "com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver",
501:       "com.fasterxml.jackson.annotation.JsonInclude$Include",
502:       "com.fasterxml.jackson.databind.deser.std.StdDeserializer",
503:       "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper$Base",
504:       "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo",
505:       "com.fasterxml.jackson.databind.JsonSerializer",
506:       "com.fasterxml.jackson.databind.JsonNode",
507:       "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig",
508:       "com.fasterxml.jackson.annotation.ObjectIdGenerators$IntSequenceGenerator",
509:       "com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty",
510:       "com.fasterxml.jackson.databind.ser.ResolvableSerializer",
511:       "com.fasterxml.jackson.databind.PropertyName",
512:       "com.fasterxml.jackson.annotation.JsonCreator$Mode",
513:       "com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer",
514:       "com.fasterxml.jackson.core.json.async.NonBlockingJsonParser",
515:       "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormatVisitor",
516:       "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
517:       "com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer",
518:       "com.fasterxml.jackson.databind.node.JsonNodeFactory",
519:       "com.fasterxml.jackson.databind.ser.impl.StringArraySerializer",
520:       "com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer",
521:       "com.fasterxml.jackson.databind.cfg.MapperConfig",
522:       "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringFactoryKeyDeserializer",
523:       "com.fasterxml.jackson.annotation.JsonManagedReference",
524:       "com.fasterxml.jackson.databind.deser.impl.InnerClassProperty",
525:       "com.fasterxml.jackson.databind.annotation.JsonDeserialize",
526:       "com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase",
527:       "com.fasterxml.jackson.databind.util.ObjectBuffer",
528:       "com.fasterxml.jackson.databind.MappingJsonFactory",
529:       "com.fasterxml.jackson.databind.InjectableValues",
530:       "com.fasterxml.jackson.databind.deser.std.ThrowableDeserializer",
531:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$3",
532:       "com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer",
533:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$2",
534:       "com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase",
535:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$1",
536:       "com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair",
537:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$9",
538:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$8",
539:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$7",
540:       "com.fasterxml.jackson.databind.ext.NioPathSerializer",
541:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$6",
542:       "com.fasterxml.jackson.databind.ser.Serializers$Base",
543:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$5",
544:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$4",
545:       "com.fasterxml.jackson.databind.ser.std.StringSerializer",
546:       "com.fasterxml.jackson.databind.JavaType",
547:       "com.fasterxml.jackson.databind.deser.BeanDeserializer",
548:       "com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase",
549:       "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonNullFormatVisitor",
550:       "com.fasterxml.jackson.databind.node.JsonNodeType",
551:       "com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase",
552:       "com.fasterxml.jackson.databind.deser.NullValueProvider",
553:       "com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer",
554:       "com.fasterxml.jackson.databind.annotation.JsonAppend",
555:       "com.fasterxml.jackson.core.util.TextBuffer",
556:       "com.fasterxml.jackson.annotation.JacksonAnnotationValue",
557:       "com.fasterxml.jackson.annotation.JsonFilter",
558:       "com.fasterxml.jackson.core.JsonFactory",
559:       "com.fasterxml.jackson.annotation.JsonTypeInfo$None",
560:       "com.fasterxml.jackson.databind.util.NameTransformer",
561:       "com.fasterxml.jackson.databind.deser.impl.FailingDeserializer",
562:       "com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap",
563:       "com.fasterxml.jackson.databind.node.ShortNode",
564:       "com.fasterxml.jackson.databind.node.BooleanNode",
565:       "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$EnumKD",
566:       "com.fasterxml.jackson.databind.node.MissingNode",
567:       "com.fasterxml.jackson.databind.util.StdDateFormat",
568:       "com.fasterxml.jackson.databind.ser.BeanSerializerBuilder",
569:       "com.fasterxml.jackson.databind.SerializationConfig",
570:       "com.fasterxml.jackson.annotation.JsonFormat$Value",
571:       "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase",
572:       "com.fasterxml.jackson.databind.PropertyMetadata",
573:       "com.fasterxml.jackson.annotation.JsonInclude$Value",
574:       "com.fasterxml.jackson.databind.deser.std.ReferenceTypeDeserializer",
575:       "com.fasterxml.jackson.annotation.JsonValue",
576:       "com.fasterxml.jackson.databind.deser.ResolvableDeserializer",
577:       "com.fasterxml.jackson.core.json.DupDetector",
578:       "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer",
579:       "com.fasterxml.jackson.databind.ext.DOMSerializer",
580:       "com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter",
581:       "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonNumberFormatVisitor",
582:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$1",
583:       "com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Empty",
584:       "com.fasterxml.jackson.databind.util.TypeKey",
585:       "com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider",
586:       "com.fasterxml.jackson.databind.ser.FilterProvider",
587:       "com.fasterxml.jackson.databind.introspect.SimpleMixInResolver",
588:       "com.fasterxml.jackson.annotation.JsonFormat",
589:       "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers",
590:       "com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer",
591:       "com.fasterxml.jackson.databind.deser.DeserializerFactory",
592:       "com.fasterxml.jackson.databind.type.TypeModifier",
593:       "com.fasterxml.jackson.annotation.JsonTypeInfo",
594:       "com.fasterxml.jackson.annotation.JsonUnwrapped",
595:       "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
596:       "com.fasterxml.jackson.databind.introspect.AnnotationCollector$NCollector",
597:       "com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty",
598:       "com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver",
599:       "com.fasterxml.jackson.core.json.JsonGeneratorImpl",
600:       "com.fasterxml.jackson.databind.deser.AbstractDeserializer",
601:       "com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer",
602:       "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer",
603:       "com.fasterxml.jackson.databind.type.TypeBindings$AsKey",
604:       "com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer",
605:       "com.fasterxml.jackson.core.JsonFactory$Feature",
606:       "com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty",
607:       "com.fasterxml.jackson.databind.ser.SerializerCache",
608:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntegerSerializer",
609:       "com.fasterxml.jackson.core.io.DataOutputAsStream",
610:       "com.fasterxml.jackson.core.io.SegmentedStringWriter",
611:       "com.fasterxml.jackson.databind.ser.impl.WritableObjectId",
612:       "com.fasterxml.jackson.databind.type.TypeBindings",
613:       "com.fasterxml.jackson.databind.deser.std.JsonLocationInstantiator",
614:       "com.fasterxml.jackson.databind.SerializerProvider",
615:       "com.fasterxml.jackson.core.JsonToken",
616:       "com.fasterxml.jackson.databind.cfg.ContextAttributes",
617:       "com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer",
618:       "com.fasterxml.jackson.annotation.JsonIdentityInfo",
619:       "com.fasterxml.jackson.core.JsonGenerator$Feature",
620:       "com.fasterxml.jackson.databind.deser.ValueInstantiator$Gettable",
621:       "com.fasterxml.jackson.databind.cfg.BaseSettings",
622:       "com.fasterxml.jackson.databind.ObjectMapper",
623:       "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider$Impl",
624:       "com.fasterxml.jackson.databind.deser.DeserializerCache",
625:       "com.fasterxml.jackson.databind.cfg.ConfigFeature",
626:       "com.fasterxml.jackson.core.FormatSchema",
627:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BooleanDeserializer",
628:       "com.fasterxml.jackson.annotation.JsonInclude",
629:       "com.fasterxml.jackson.databind.SerializationFeature",
630:       "com.fasterxml.jackson.annotation.ObjectIdGenerators",
631:       "com.fasterxml.jackson.databind.ser.PropertyFilter",
632:       "com.fasterxml.jackson.annotation.JsonIgnoreType",
633:       "com.fasterxml.jackson.databind.introspect.AnnotationCollector$OneCollector"
634:     );
635:   } 
636:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
637:     mock(Class.forName("com.fasterxml.jackson.annotation.ObjectIdGenerator", false, DefaultSerializerProvider_18_tmp__ESTest_scaffolding.class.getClassLoader()));
638:   }
639: 
640:   private static void resetClasses() {
641:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(DefaultSerializerProvider_18_tmp__ESTest_scaffolding.class.getClassLoader()); 
642: 
643:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
644:       "com.fasterxml.jackson.databind.DatabindContext",
645:       "com.fasterxml.jackson.databind.JsonSerializer",
646:       "com.fasterxml.jackson.databind.ser.std.StdSerializer",
647:       "com.fasterxml.jackson.databind.ser.impl.FailingSerializer",
648:       "com.fasterxml.jackson.databind.ser.impl.UnknownSerializer",
649:       "com.fasterxml.jackson.databind.SerializerProvider",
650:       "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider",
651:       "com.fasterxml.jackson.databind.SerializationFeature",
652:       "com.fasterxml.jackson.databind.node.JsonNodeFactory",
653:       "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider$Impl",
654:       "com.fasterxml.jackson.databind.ser.std.NullSerializer",
655:       "com.fasterxml.jackson.databind.ser.SerializerCache",
656:       "com.fasterxml.jackson.core.io.SerializedString",
657:       "com.fasterxml.jackson.core.util.DefaultPrettyPrinter",
658:       "com.fasterxml.jackson.core.JsonFactory",
659:       "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer",
660:       "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$TableInfo",
661:       "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer",
662:       "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo",
663:       "com.fasterxml.jackson.core.TreeCodec",
664:       "com.fasterxml.jackson.core.ObjectCodec",
665:       "com.fasterxml.jackson.core.type.ResolvedType",
666:       "com.fasterxml.jackson.databind.JavaType",
667:       "com.fasterxml.jackson.databind.type.TypeBindings",
668:       "com.fasterxml.jackson.databind.type.TypeBase",
669:       "com.fasterxml.jackson.databind.type.SimpleType",
670:       "com.fasterxml.jackson.databind.AnnotationIntrospector",
671:       "com.fasterxml.jackson.databind.ext.Java7SupportImpl",
672:       "com.fasterxml.jackson.databind.util.ClassUtil",
673:       "com.fasterxml.jackson.databind.ext.Java7Support",
674:       "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
675:       "com.fasterxml.jackson.databind.util.LRUMap",
676:       "com.fasterxml.jackson.databind.cfg.BaseSettings",
677:       "com.fasterxml.jackson.databind.type.TypeParser",
678:       "com.fasterxml.jackson.databind.type.TypeFactory",
679:       "com.fasterxml.jackson.databind.util.StdDateFormat",
680:       "com.fasterxml.jackson.core.Base64Variant",
681:       "com.fasterxml.jackson.core.Base64Variants",
682:       "com.fasterxml.jackson.databind.ObjectMapper",
683:       "com.fasterxml.jackson.databind.jsontype.SubtypeResolver",
684:       "com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver",
685:       "com.fasterxml.jackson.databind.util.RootNameLookup",
686:       "com.fasterxml.jackson.databind.introspect.SimpleMixInResolver",
687:       "com.fasterxml.jackson.databind.introspect.ClassIntrospector",
688:       "com.fasterxml.jackson.databind.introspect.AnnotationCollector$NoAnnotations",
689:       "com.fasterxml.jackson.databind.introspect.AnnotationCollector",
690:       "com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver",
691:       "com.fasterxml.jackson.databind.introspect.Annotated",
692:       "com.fasterxml.jackson.databind.introspect.AnnotatedClass$Creators",
693:       "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
694:       "com.fasterxml.jackson.databind.BeanDescription",
695:       "com.fasterxml.jackson.databind.introspect.BasicBeanDescription",
696:       "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector",
697:       "com.fasterxml.jackson.databind.cfg.ConfigOverrides",
698:       "com.fasterxml.jackson.annotation.JsonInclude$Value",
699:       "com.fasterxml.jackson.annotation.Nulls",
700:       "com.fasterxml.jackson.annotation.JsonSetter$Value",
701:       "com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std",
702:       "com.fasterxml.jackson.annotation.JsonFormat$Shape",
703:       "com.fasterxml.jackson.annotation.JsonFormat$Features",
704:       "com.fasterxml.jackson.annotation.JsonFormat$Value",
705:       "com.fasterxml.jackson.databind.cfg.MapperConfig",
706:       "com.fasterxml.jackson.databind.cfg.ConfigOverride",
707:       "com.fasterxml.jackson.databind.cfg.ConfigOverride$Empty",
708:       "com.fasterxml.jackson.databind.cfg.MapperConfigBase",
709:       "com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter",
710:       "com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter",
711:       "com.fasterxml.jackson.core.util.DefaultIndenter",
712:       "com.fasterxml.jackson.core.util.Separators",
713:       "com.fasterxml.jackson.core.PrettyPrinter",
714:       "com.fasterxml.jackson.databind.SerializationConfig",
715:       "com.fasterxml.jackson.databind.cfg.ContextAttributes",
716:       "com.fasterxml.jackson.databind.cfg.ContextAttributes$Impl",
717:       "com.fasterxml.jackson.databind.DeserializationConfig",
718:       "com.fasterxml.jackson.databind.DeserializationContext",
719:       "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext",
720:       "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext$Impl",
721:       "com.fasterxml.jackson.databind.deser.DeserializerFactory",
722:       "com.fasterxml.jackson.databind.PropertyName",
723:       "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
724:       "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers",
725:       "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig",
726:       "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
727:       "com.fasterxml.jackson.databind.deser.DeserializerCache",
728:       "com.fasterxml.jackson.databind.ser.SerializerFactory",
729:       "com.fasterxml.jackson.databind.ser.std.StdScalarSerializer",
730:       "com.fasterxml.jackson.databind.ser.std.StringSerializer",
731:       "com.fasterxml.jackson.databind.ser.std.ToStringSerializer",
732:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
733:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$Base",
734:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntegerSerializer",
735:       "com.fasterxml.jackson.core.JsonParser$NumberType",
736:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$LongSerializer",
737:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntLikeSerializer",
738:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$ShortSerializer",
739:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$DoubleSerializer",
740:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$FloatSerializer",
741:       "com.fasterxml.jackson.databind.ser.std.BooleanSerializer",
742:       "com.fasterxml.jackson.databind.ser.std.NumberSerializer",
743:       "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase",
744:       "com.fasterxml.jackson.databind.ser.std.CalendarSerializer",
745:       "com.fasterxml.jackson.databind.ser.std.DateSerializer",
746:       "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers",
747:       "com.fasterxml.jackson.databind.ser.std.UUIDSerializer",
748:       "com.fasterxml.jackson.databind.ser.BasicSerializerFactory",
749:       "com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig",
750:       "com.fasterxml.jackson.databind.ser.BeanSerializerFactory",
751:       "com.fasterxml.jackson.core.io.OutputDecorator",
752:       "com.fasterxml.jackson.core.io.InputDecorator",
753:       "com.fasterxml.jackson.core.io.IOContext",
754:       "com.fasterxml.jackson.core.util.BufferRecyclers",
755:       "com.fasterxml.jackson.core.util.BufferRecycler",
756:       "com.fasterxml.jackson.core.JsonGenerator",
757:       "com.fasterxml.jackson.core.base.GeneratorBase",
758:       "com.fasterxml.jackson.core.io.CharTypes",
759:       "com.fasterxml.jackson.core.json.JsonGeneratorImpl",
760:       "com.fasterxml.jackson.core.json.UTF8JsonGenerator",
761:       "com.fasterxml.jackson.core.JsonStreamContext",
762:       "com.fasterxml.jackson.core.json.JsonWriteContext",
763:       "com.fasterxml.jackson.databind.MappingJsonFactory",
764:       "com.fasterxml.jackson.core.util.JsonGeneratorDelegate",
765:       "com.fasterxml.jackson.databind.type.CollectionLikeType",
766:       "com.fasterxml.jackson.core.io.CharacterEscapes",
767:       "com.fasterxml.jackson.core.JsonpCharacterEscapes",
768:       "com.fasterxml.jackson.annotation.ObjectIdGenerator",
769:       "com.fasterxml.jackson.annotation.ObjectIdGenerators$Base",
770:       "com.fasterxml.jackson.annotation.ObjectIdGenerators$StringIdGenerator",
771:       "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
772:       "com.fasterxml.jackson.databind.ser.BeanSerializerBuilder",
773:       "com.fasterxml.jackson.databind.type.ArrayType",
774:       "com.fasterxml.jackson.annotation.ObjectIdGenerators$UUIDGenerator",
775:       "com.fasterxml.jackson.core.JsonProcessingException",
776:       "com.fasterxml.jackson.databind.JsonMappingException",
777:       "com.fasterxml.jackson.databind.ser.impl.WritableObjectId",
778:       "com.fasterxml.jackson.databind.ser.Serializers$Base",
779:       "com.fasterxml.jackson.databind.module.SimpleSerializers",
780:       "com.fasterxml.jackson.databind.util.ArrayBuilders",
781:       "com.fasterxml.jackson.databind.ext.DOMSerializer",
782:       "com.fasterxml.jackson.databind.type.PlaceholderForType",
783:       "com.fasterxml.jackson.databind.type.TypeBindings$TypeParamStash",
784:       "com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap",
785:       "com.fasterxml.jackson.core.util.InternCache",
786:       "com.fasterxml.jackson.databind.BeanProperty$Std",
787:       "com.fasterxml.jackson.databind.ser.BeanSerializerModifier",
788:       "com.fasterxml.jackson.databind.introspect.VisibilityChecker$1",
789:       "com.fasterxml.jackson.databind.ser.FilterProvider",
790:       "com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider",
791:       "com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter",
792:       "com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$FilterExceptFilter",
793:       "com.fasterxml.jackson.core.json.WriterBasedJsonGenerator",
794:       "com.fasterxml.jackson.databind.ext.NioPathSerializer",
795:       "com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase",
796:       "com.fasterxml.jackson.databind.ser.PropertyWriter",
797:       "com.fasterxml.jackson.databind.ser.BeanPropertyWriter",
798:       "com.fasterxml.jackson.databind.PropertyMetadata",
799:       "com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper",
800:       "com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase",
801:       "com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver",
802:       "com.fasterxml.jackson.databind.AbstractTypeResolver",
803:       "com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver",
804:       "com.fasterxml.jackson.databind.JsonDeserializer",
805:       "com.fasterxml.jackson.databind.deser.std.StdDeserializer",
806:       "com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer",
807:       "com.fasterxml.jackson.databind.deser.std.FromStringDeserializer",
808:       "com.fasterxml.jackson.databind.ext.CoreXMLDeserializers$Std",
809:       "com.fasterxml.jackson.annotation.ObjectIdGenerators$IntSequenceGenerator",
810:       "com.fasterxml.jackson.databind.ObjectMapper$2",
811:       "com.fasterxml.jackson.core.util.ByteArrayBuilder",
812:       "com.fasterxml.jackson.core.filter.TokenFilter",
813:       "com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate",
814:       "com.fasterxml.jackson.core.filter.TokenFilterContext",
815:       "com.fasterxml.jackson.core.io.DataOutputAsStream",
816:       "com.fasterxml.jackson.databind.type.ClassStack",
817:       "com.fasterxml.jackson.databind.type.TypeBindings$AsKey",
818:       "com.fasterxml.jackson.databind.type.MapLikeType",
819:       "com.fasterxml.jackson.databind.type.MapType",
820:       "com.fasterxml.jackson.databind.Module",
821:       "com.fasterxml.jackson.databind.module.SimpleModule",
822:       "com.fasterxml.jackson.core.Version",
823:       "com.fasterxml.jackson.databind.module.SimpleDeserializers",
824:       "com.fasterxml.jackson.databind.type.ClassKey",
825:       "com.fasterxml.jackson.databind.exc.InvalidDefinitionException",
826:       "com.fasterxml.jackson.databind.exc.MismatchedInputException",
827:       "com.fasterxml.jackson.databind.exc.InvalidFormatException",
828:       "com.fasterxml.jackson.core.util.MinimalPrettyPrinter",
829:       "com.fasterxml.jackson.databind.ObjectWriter",
830:       "com.fasterxml.jackson.databind.ObjectWriter$GeneratorSettings",
831:       "com.fasterxml.jackson.databind.ObjectWriter$Prefetch",
832:       "com.fasterxml.jackson.core.json.DupDetector",
833:       "com.fasterxml.jackson.databind.type.ReferenceType",
834:       "com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey",
835:       "com.fasterxml.jackson.databind.JsonSerializable$Base",
836:       "com.fasterxml.jackson.databind.JsonNode",
837:       "com.fasterxml.jackson.databind.node.BaseJsonNode",
838:       "com.fasterxml.jackson.databind.node.ContainerNode",
839:       "com.fasterxml.jackson.databind.node.ObjectNode",
840:       "com.fasterxml.jackson.databind.node.ValueNode",
841:       "com.fasterxml.jackson.databind.node.POJONode",
842:       "com.fasterxml.jackson.databind.node.BooleanNode",
843:       "com.fasterxml.jackson.databind.util.RawValue",
844:       "com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap",
845:       "com.fasterxml.jackson.databind.deser.BeanDeserializerBase",
846:       "com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer",
847:       "com.fasterxml.jackson.databind.deser.BeanDeserializerModifier",
848:       "com.fasterxml.jackson.databind.deser.ValueInstantiators$Base",
849:       "com.fasterxml.jackson.databind.module.SimpleValueInstantiators",
850:       "com.fasterxml.jackson.databind.deser.ValueInstantiator",
851:       "com.fasterxml.jackson.databind.deser.ValueInstantiator$Base",
852:       "com.fasterxml.jackson.databind.ObjectReader",
853:       "com.fasterxml.jackson.databind.ext.CoreXMLSerializers$XMLGregorianCalendarSerializer",
854:       "com.fasterxml.jackson.core.JsonGenerationException",
855:       "com.fasterxml.jackson.databind.type.CollectionType",
856:       "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper$Base",
857:       "com.fasterxml.jackson.databind.node.NullNode",
858:       "com.fasterxml.jackson.databind.type.ResolvedRecursiveType",
859:       "com.fasterxml.jackson.databind.node.ArrayNode",
860:       "com.fasterxml.jackson.databind.type.TypeModifier",
861:       "com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap",
862:       "com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Empty",
863:       "com.fasterxml.jackson.core.JsonParser",
864:       "com.fasterxml.jackson.core.base.ParserMinimalBase",
865:       "com.fasterxml.jackson.core.base.ParserBase",
866:       "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
867:       "com.fasterxml.jackson.core.util.TextBuffer",
868:       "com.fasterxml.jackson.core.json.JsonReadContext",
869:       "com.fasterxml.jackson.databind.exc.InvalidTypeIdException",
870:       "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase",
871:       "com.fasterxml.jackson.databind.ser.BeanSerializer",
872:       "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
873:       "com.fasterxml.jackson.databind.util.ArrayIterator",
874:       "com.fasterxml.jackson.databind.deser.std.StringDeserializer",
875:       "com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder",
876:       "com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder",
877:       "com.fasterxml.jackson.databind.InjectableValues",
878:       "com.fasterxml.jackson.databind.InjectableValues$Std",
879:       "com.fasterxml.jackson.databind.deser.BeanDeserializer",
880:       "com.fasterxml.jackson.databind.BeanProperty$Bogus",
881:       "com.fasterxml.jackson.annotation.JsonTypeInfo$Id",
882:       "com.fasterxml.jackson.databind.deser.DataFormatReaders",
883:       "com.fasterxml.jackson.core.format.MatchStrength",
884:       "com.fasterxml.jackson.databind.introspect.AnnotationMap",
885:       "com.fasterxml.jackson.databind.introspect.AnnotatedMember",
886:       "com.fasterxml.jackson.databind.introspect.AnnotatedField",
887:       "com.fasterxml.jackson.annotation.JsonAutoDetect$Value",
888:       "com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter",
889:       "com.fasterxml.jackson.databind.PropertyNamingStrategy$PropertyNamingStrategyBase",
890:       "com.fasterxml.jackson.databind.PropertyNamingStrategy$SnakeCaseStrategy",
891:       "com.fasterxml.jackson.databind.PropertyNamingStrategy$UpperCamelCaseStrategy",
892:       "com.fasterxml.jackson.databind.PropertyNamingStrategy$LowerCaseStrategy",
893:       "com.fasterxml.jackson.databind.PropertyNamingStrategy$KebabCaseStrategy",
894:       "com.fasterxml.jackson.databind.PropertyNamingStrategy",
895:       "com.fasterxml.jackson.databind.node.NumericNode",
896:       "com.fasterxml.jackson.databind.node.FloatNode",
897:       "com.fasterxml.jackson.databind.introspect.ObjectIdInfo",
898:       "com.fasterxml.jackson.core.type.TypeReference",
899:       "com.fasterxml.jackson.core.util.VersionUtil",
900:       "com.fasterxml.jackson.core.json.PackageVersion",
901:       "com.fasterxml.jackson.databind.node.ShortNode",
902:       "com.fasterxml.jackson.databind.node.LongNode",
903:       "com.fasterxml.jackson.databind.introspect.NopAnnotationIntrospector$1",
904:       "com.fasterxml.jackson.databind.introspect.NopAnnotationIntrospector",
905:       "com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair",
906:       "com.fasterxml.jackson.core.json.UTF8DataInputJsonParser",
907:       "com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer",
908:       "com.fasterxml.jackson.databind.deser.AbstractDeserializer",
909:       "com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder",
910:       "com.fasterxml.jackson.databind.util.TypeKey",
911:       "com.fasterxml.jackson.databind.introspect.AnnotationCollector$EmptyCollector",
912:       "com.fasterxml.jackson.databind.introspect.CollectorBase",
913:       "com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector",
914:       "com.fasterxml.jackson.databind.introspect.TypeResolutionContext$Basic",
915:       "com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector$FieldBuilder",
916:       "com.fasterxml.jackson.annotation.JsonAutoDetect$1",
917:       "com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition",
918:       "com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty",
919:       "com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type",
920:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder",
921:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked",
922:       "com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector",
923:       "com.fasterxml.jackson.databind.introspect.MemberKey",
924:       "com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector$MethodBuilder",
925:       "com.fasterxml.jackson.databind.introspect.AnnotationCollector$OneCollector",
926:       "com.fasterxml.jackson.databind.introspect.AnnotatedWithParams",
927:       "com.fasterxml.jackson.databind.introspect.AnnotatedMethod",
928:       "com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap",
929:       "com.fasterxml.jackson.databind.util.BeanUtil",
930:       "com.fasterxml.jackson.databind.introspect.AnnotatedCreatorCollector",
931:       "com.fasterxml.jackson.databind.util.ClassUtil$Ctor",
932:       "com.fasterxml.jackson.databind.introspect.AnnotatedConstructor",
933:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$9",
934:       "com.fasterxml.jackson.annotation.JsonProperty$Access",
935:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$10",
936:       "com.fasterxml.jackson.databind.ext.OptionalHandlerFactory",
937:       "com.fasterxml.jackson.databind.ser.PropertyBuilder",
938:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$3",
939:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$2",
940:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$4",
941:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$5",
942:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$6",
943:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$7",
944:       "com.fasterxml.jackson.databind.ser.PropertyBuilder$1",
945:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$1",
946:       "com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value",
947:       "com.fasterxml.jackson.core.JsonParseException",
948:       "com.fasterxml.jackson.core.JsonLocation",
949:       "com.fasterxml.jackson.databind.ser.std.SerializableSerializer",
950:       "com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer",
951:       "com.fasterxml.jackson.databind.deser.impl.CreatorCollector",
952:       "com.fasterxml.jackson.annotation.JsonCreator$Mode",
953:       "com.fasterxml.jackson.databind.deser.impl.CreatorCandidate",
954:       "com.fasterxml.jackson.databind.introspect.AnnotatedParameter",
955:       "com.fasterxml.jackson.databind.deser.impl.CreatorCandidate$Param",
956:       "com.fasterxml.jackson.databind.deser.impl.CreatorCollector$StdTypeConstructor",
957:       "com.fasterxml.jackson.databind.deser.std.StdValueInstantiator",
958:       "com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase",
959:       "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer",
960:       "com.fasterxml.jackson.databind.util.AccessPattern",
961:       "com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider",
962:       "com.fasterxml.jackson.databind.deser.std.MapDeserializer",
963:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers",
964:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer",
965:       "com.fasterxml.jackson.databind.util.LinkedNode",
966:       "com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla",
967:       "com.fasterxml.jackson.databind.node.DecimalNode",
968:       "com.fasterxml.jackson.databind.deser.std.JdkDeserializers",
969:       "com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator",
970:       "com.fasterxml.jackson.annotation.JsonFormat$Feature",
971:       "com.fasterxml.jackson.databind.ser.ContainerSerializer",
972:       "com.fasterxml.jackson.databind.ser.std.ArraySerializerBase",
973:       "com.fasterxml.jackson.databind.ser.std.StdArraySerializers$BooleanArraySerializer",
974:       "com.fasterxml.jackson.databind.ser.std.ByteArraySerializer",
975:       "com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer",
976:       "com.fasterxml.jackson.databind.ser.std.StdArraySerializers$TypedPrimitiveArraySerializer",
977:       "com.fasterxml.jackson.databind.ser.std.StdArraySerializers$ShortArraySerializer",
978:       "com.fasterxml.jackson.databind.ser.std.StdArraySerializers$IntArraySerializer",
979:       "com.fasterxml.jackson.databind.ser.std.StdArraySerializers$LongArraySerializer",
980:       "com.fasterxml.jackson.databind.ser.std.StdArraySerializers$FloatArraySerializer",
981:       "com.fasterxml.jackson.databind.ser.std.StdArraySerializers$DoubleArraySerializer",
982:       "com.fasterxml.jackson.databind.ser.std.StdArraySerializers",
983:       "com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer",
984:       "com.fasterxml.jackson.databind.ObjectMapper$1",
985:       "com.fasterxml.jackson.databind.deser.std.DateDeserializers",
986:       "com.fasterxml.jackson.databind.deser.impl.FailingDeserializer",
987:       "com.fasterxml.jackson.databind.deser.SettableBeanProperty",
988:       "com.fasterxml.jackson.databind.deser.impl.MethodProperty",
989:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$8",
990:       "com.fasterxml.jackson.databind.deser.impl.FieldProperty",
991:       "com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition",
992:       "com.fasterxml.jackson.databind.deser.std.ThrowableDeserializer",
993:       "com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer",
994:       "com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer",
995:       "com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$SerializeExceptFilter",
996:       "com.fasterxml.jackson.databind.util.NameTransformer$NopTransformer",
997:       "com.fasterxml.jackson.databind.util.NameTransformer",
998:       "com.fasterxml.jackson.databind.util.NameTransformer$1",
999:       "com.fasterxml.jackson.databind.util.NameTransformer$Chained",
1000:       "com.fasterxml.jackson.databind.ser.std.ClassSerializer",
1001:       "com.fasterxml.jackson.databind.ObjectMapper$3",
1002:       "com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder$1",
1003:       "com.fasterxml.jackson.databind.jsontype.TypeSerializer",
1004:       "com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase",
1005:       "com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer",
1006:       "com.fasterxml.jackson.core.filter.JsonPointerBasedFilter",
1007:       "com.fasterxml.jackson.core.JsonPointer",
1008:       "com.fasterxml.jackson.databind.node.TreeTraversingParser",
1009:       "com.fasterxml.jackson.databind.node.NodeCursor",
1010:       "com.fasterxml.jackson.databind.node.NodeCursor$ObjectCursor",
1011:       "com.fasterxml.jackson.databind.deser.DeserializationProblemHandler",
1012:       "com.fasterxml.jackson.databind.util.ObjectBuffer",
1013:       "com.fasterxml.jackson.databind.node.DoubleNode",
1014:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$PrimitiveOrWrapperDeserializer",
1015:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer",
1016:       "com.fasterxml.jackson.core.io.JsonStringEncoder",
1017:       "com.fasterxml.jackson.databind.node.BinaryNode",
1018:       "com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer",
1019:       "com.fasterxml.jackson.core.type.WritableTypeId",
1020:       "com.fasterxml.jackson.databind.jsontype.TypeSerializer$1",
1021:       "com.fasterxml.jackson.core.type.WritableTypeId$Inclusion",
1022:       "com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase",
1023:       "com.fasterxml.jackson.core.json.async.NonBlockingJsonParser",
1024:       "com.fasterxml.jackson.databind.node.NodeCursor$ArrayCursor",
1025:       "com.fasterxml.jackson.databind.deser.impl.SetterlessProperty",
1026:       "com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std",
1027:       "com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter",
1028:       "com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$MultiView",
1029:       "com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$SingleView",
1030:       "com.fasterxml.jackson.databind.deser.Deserializers$Base",
1031:       "com.fasterxml.jackson.databind.ser.std.EnumSerializer",
1032:       "com.fasterxml.jackson.databind.util.EnumValues",
1033:       "com.fasterxml.jackson.databind.introspect.VirtualAnnotatedMember",
1034:       "com.fasterxml.jackson.core.util.JsonParserDelegate",
1035:       "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
1036:       "com.fasterxml.jackson.databind.module.SimpleKeyDeserializers",
1037:       "com.fasterxml.jackson.databind.node.BigIntegerNode",
1038:       "com.fasterxml.jackson.databind.jsontype.NamedType",
1039:       "com.fasterxml.jackson.databind.deser.std.EnumDeserializer",
1040:       "com.fasterxml.jackson.databind.util.EnumResolver",
1041:       "com.fasterxml.jackson.databind.util.CompactStringObjectMap",
1042:       "com.fasterxml.jackson.databind.introspect.AnnotationCollector$OneAnnotation",
1043:       "com.fasterxml.jackson.databind.deser.CreatorProperty",
1044:       "com.fasterxml.jackson.annotation.SimpleObjectIdResolver",
1045:       "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor$Base",
1046:       "com.fasterxml.jackson.databind.node.TextNode",
1047:       "com.fasterxml.jackson.core.io.SegmentedStringWriter",
1048:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$1",
1049:       "com.fasterxml.jackson.databind.JsonMappingException$Reference",
1050:       "com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket",
1051:       "com.fasterxml.jackson.core.format.InputAccessor$Std",
1052:       "com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer",
1053:       "com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer",
1054:       "com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer",
1055:       "com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer",
1056:       "com.fasterxml.jackson.core.io.NumberOutput",
1057:       "com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase",
1058:       "com.fasterxml.jackson.databind.ser.std.CollectionSerializer",
1059:       "com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult",
1060:       "com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Single",
1061:       "com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer",
1062:       "com.fasterxml.jackson.databind.node.IntNode",
1063:       "com.fasterxml.jackson.databind.BeanProperty",
1064:       "com.fasterxml.jackson.databind.PropertyMetadata$MergeInfo",
1065:       "com.fasterxml.jackson.databind.KeyDeserializer",
1066:       "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer",
1067:       "com.fasterxml.jackson.databind.cfg.PackageVersion",
1068:       "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringKD",
1069:       "com.fasterxml.jackson.databind.node.JsonNodeType",
1070:       "com.fasterxml.jackson.databind.ser.std.MapSerializer",
1071:       "com.fasterxml.jackson.databind.ser.std.StdKeySerializer",
1072:       "com.fasterxml.jackson.databind.ser.std.StdKeySerializers$StringKeySerializer",
1073:       "com.fasterxml.jackson.databind.ser.std.StdKeySerializers",
1074:       "com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic",
1075:       "com.fasterxml.jackson.databind.util.TokenBuffer",
1076:       "com.fasterxml.jackson.databind.util.TokenBuffer$Segment",
1077:       "com.fasterxml.jackson.databind.util.TokenBuffer$Parser",
1078:       "com.fasterxml.jackson.databind.util.TokenBufferReadContext",
1079:       "com.fasterxml.jackson.databind.introspect.AnnotationCollector$NCollector",
1080:       "com.fasterxml.jackson.databind.introspect.AnnotationCollector$TwoAnnotations",
1081:       "com.fasterxml.jackson.core.JsonFactory$Feature",
1082:       "com.fasterxml.jackson.core.JsonParser$Feature",
1083:       "com.fasterxml.jackson.core.JsonGenerator$Feature",
1084:       "com.fasterxml.jackson.annotation.JsonInclude$Include",
1085:       "com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility",
1086:       "com.fasterxml.jackson.databind.MapperFeature",
1087:       "com.fasterxml.jackson.annotation.PropertyAccessor",
1088:       "com.fasterxml.jackson.annotation.JsonTypeInfo$As",
1089:       "com.fasterxml.jackson.core.JsonToken"
1090:     );
1091:   }
1092: }

[MASTER] 00:08:00.151 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
HashMap<Object, WritableObjectId> hashMap0 = new HashMap<Object, WritableObjectId>();
defaultSerializerProvider_Impl0._seenObjectIds = (Map<Object, WritableObjectId>) hashMap0;
ArrayList<ObjectIdGenerator<TextStyle>> arrayList0 = new ArrayList<ObjectIdGenerator<TextStyle>>();
defaultSerializerProvider_Impl0._objectIdGenerators = arrayList0;
ObjectIdGenerator<TextStyle> objectIdGenerator0 = (ObjectIdGenerator<TextStyle>) mock(ObjectIdGenerator.class, new ViolatedAssumptionAnswer());
doReturn(false).when(objectIdGenerator0).canUseFor(any(com.fasterxml.jackson.annotation.ObjectIdGenerator.class));
arrayList0.add(objectIdGenerator0);
ObjectIdGenerator<Object> objectIdGenerator1 = (ObjectIdGenerator<Object>) mock(ObjectIdGenerator.class, new ViolatedAssumptionAnswer());
ObjectIdGenerator<Object> objectIdGenerator2 = (ObjectIdGenerator<Object>) mock(ObjectIdGenerator.class, new ViolatedAssumptionAnswer());
doReturn(objectIdGenerator1).when(objectIdGenerator2).newForSerialization(any());
WritableObjectId writableObjectId0 = defaultSerializerProvider_Impl0.findObjectId((Object) null, objectIdGenerator2);
assertNotNull(writableObjectId0);


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 40
* Writing tests to file
* Writing JUnit test case 'DefaultSerializerProvider_ESTest' to results/JacksonDatabind-103/com.fasterxml.jackson.databind.ser.DefaultSerializerProvider/BBC-F0/tests/22
* Done!

* Computation finished
