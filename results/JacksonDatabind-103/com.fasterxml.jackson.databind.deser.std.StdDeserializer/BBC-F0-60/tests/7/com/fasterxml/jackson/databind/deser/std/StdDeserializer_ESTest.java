/*
 * This file was automatically generated by EvoSuite
 * Mon Mar 08 06:42:26 GMT 2021
 */

package com.fasterxml.jackson.databind.deser.std;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.core.filter.FilteringParserDelegate;
import com.fasterxml.jackson.core.filter.TokenFilter;
import com.fasterxml.jackson.core.io.IOContext;
import com.fasterxml.jackson.core.json.ReaderBasedJsonParser;
import com.fasterxml.jackson.core.json.UTF8DataInputJsonParser;
import com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
import com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer;
import com.fasterxml.jackson.core.util.BufferRecycler;
import com.fasterxml.jackson.core.util.JsonParserDelegate;
import com.fasterxml.jackson.core.util.JsonParserSequence;
import com.fasterxml.jackson.databind.BeanProperty;
import com.fasterxml.jackson.databind.DeserializationConfig;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.InjectableValues;
import com.fasterxml.jackson.databind.JavaType;
import com.fasterxml.jackson.databind.JsonDeserializer;
import com.fasterxml.jackson.databind.Module;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.ObjectReader;
import com.fasterxml.jackson.databind.PropertyMetadata;
import com.fasterxml.jackson.databind.cfg.BaseSettings;
import com.fasterxml.jackson.databind.cfg.ConfigOverrides;
import com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig;
import com.fasterxml.jackson.databind.deser.BeanDeserializer;
import com.fasterxml.jackson.databind.deser.BeanDeserializerFactory;
import com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer;
import com.fasterxml.jackson.databind.deser.CreatorProperty;
import com.fasterxml.jackson.databind.deser.DefaultDeserializationContext;
import com.fasterxml.jackson.databind.deser.NullValueProvider;
import com.fasterxml.jackson.databind.deser.SettableBeanProperty;
import com.fasterxml.jackson.databind.deser.std.DateDeserializers;
import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;
import com.fasterxml.jackson.databind.deser.std.NumberDeserializers;
import com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers;
import com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer;
import com.fasterxml.jackson.databind.deser.std.StdDeserializer;
import com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer;
import com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer;
import com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer;
import com.fasterxml.jackson.databind.introspect.ClassIntrospector;
import com.fasterxml.jackson.databind.introspect.SimpleMixInResolver;
import com.fasterxml.jackson.databind.jsontype.TypeDeserializer;
import com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver;
import com.fasterxml.jackson.databind.module.SimpleModule;
import com.fasterxml.jackson.databind.node.BooleanNode;
import com.fasterxml.jackson.databind.node.MissingNode;
import com.fasterxml.jackson.databind.type.ArrayType;
import com.fasterxml.jackson.databind.type.MapLikeType;
import com.fasterxml.jackson.databind.type.MapType;
import com.fasterxml.jackson.databind.type.PlaceholderForType;
import com.fasterxml.jackson.databind.type.ResolvedRecursiveType;
import com.fasterxml.jackson.databind.type.SimpleType;
import com.fasterxml.jackson.databind.type.TypeBindings;
import com.fasterxml.jackson.databind.type.TypeFactory;
import com.fasterxml.jackson.databind.util.AccessPattern;
import com.fasterxml.jackson.databind.util.Converter;
import com.fasterxml.jackson.databind.util.RootNameLookup;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.Reader;
import java.math.BigInteger;
import java.time.chrono.MinguoEra;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StdDeserializer_ESTest extends StdDeserializer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      NumberDeserializers.ShortDeserializer numberDeserializers_ShortDeserializer0 = NumberDeserializers.ShortDeserializer.primitiveInstance;
      boolean boolean0 = numberDeserializers_ShortDeserializer0._isIntNumber("9/=M{Hh.D%/3<1?P>ZH");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      TypeFactory typeFactory0 = TypeFactory.defaultInstance();
      Class<Byte> class0 = Byte.class;
      Class<Float> class1 = Float.class;
      Class<ByteArrayInputStream> class2 = ByteArrayInputStream.class;
      MapLikeType mapLikeType0 = typeFactory0.constructMapLikeType(class1, class2, class2);
      Converter<Object, MinguoEra> converter0 = (Converter<Object, MinguoEra>) mock(Converter.class, new ViolatedAssumptionAnswer());
      FromStringDeserializer.Std fromStringDeserializer_Std0 = new FromStringDeserializer.Std(class0, (-1617483111));
      StdDelegatingDeserializer<MinguoEra> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<MinguoEra>(converter0, mapLikeType0, fromStringDeserializer_Std0);
      String string0 = stdDelegatingDeserializer0._coercedTypeDesc();
      assertEquals("for type `java.lang.Byte`", string0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      PrimitiveArrayDeserializers.CharDeser primitiveArrayDeserializers_CharDeser0 = new PrimitiveArrayDeserializers.CharDeser();
      Converter<Object, Date> converter0 = (Converter<Object, Date>) mock(Converter.class, new ViolatedAssumptionAnswer());
      TypeFactory typeFactory0 = TypeFactory.defaultInstance();
      Class<HashMap> class0 = HashMap.class;
      MapType mapType0 = typeFactory0.constructRawMapType(class0);
      StdDelegatingDeserializer<Date> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Date>(converter0, mapType0, primitiveArrayDeserializers_CharDeser0);
      String string0 = stdDelegatingDeserializer0._coercedTypeDesc();
      assertEquals("as content of type `char[]`", string0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Converter<Byte, Double> converter0 = (Converter<Byte, Double>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Double> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Double>(converter0);
      // Undeclared exception!
      try { 
        stdDelegatingDeserializer0._parseIntPrimitive((DeserializationContext) null, "-Infinity");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StringArrayDeserializer stringArrayDeserializer0 = new StringArrayDeserializer();
      PrimitiveArrayDeserializers.BooleanDeser primitiveArrayDeserializers_BooleanDeser0 = new PrimitiveArrayDeserializers.BooleanDeser();
      Class<Date> class0 = Date.class;
      StdKeyDeserializer.DelegatingKD stdKeyDeserializer_DelegatingKD0 = new StdKeyDeserializer.DelegatingKD(class0, primitiveArrayDeserializers_BooleanDeser0);
      boolean boolean0 = stringArrayDeserializer0.isDefaultKeyDeserializer(stdKeyDeserializer_DelegatingKD0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StringArrayDeserializer stringArrayDeserializer0 = new StringArrayDeserializer();
      boolean boolean0 = stringArrayDeserializer0.isDefaultDeserializer((JsonDeserializer<?>) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      UntypedObjectDeserializer.Vanilla untypedObjectDeserializer_Vanilla0 = new UntypedObjectDeserializer.Vanilla(false);
      Converter<Object, ByteArrayInputStream> converter0 = (Converter<Object, ByteArrayInputStream>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<ByteArrayInputStream> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<ByteArrayInputStream>(converter0, (JavaType) null, untypedObjectDeserializer_Vanilla0);
      Class<?> class0 = stdDelegatingDeserializer0.handledType();
      assertFalse(class0.isInterface());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
      Class<Object> class0 = Object.class;
      JsonFormat.Feature jsonFormat_Feature0 = JsonFormat.Feature.WRITE_DATES_WITH_ZONE_ID;
      PrimitiveArrayDeserializers.CharDeser primitiveArrayDeserializers_CharDeser0 = new PrimitiveArrayDeserializers.CharDeser();
      PrimitiveArrayDeserializers.CharDeser primitiveArrayDeserializers_CharDeser1 = new PrimitiveArrayDeserializers.CharDeser(primitiveArrayDeserializers_CharDeser0, primitiveArrayDeserializers_CharDeser0, (Boolean) null);
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      Boolean boolean0 = primitiveArrayDeserializers_CharDeser1.findFormatFeature(defaultDeserializationContext_Impl0, beanProperty_Bogus0, class0, jsonFormat_Feature0);
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Converter<Module, Double> converter0 = (Converter<Module, Double>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Double> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Double>(converter0);
      BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
      NullValueProvider nullValueProvider0 = stdDelegatingDeserializer0.findContentNullProvider((DeserializationContext) null, beanProperty_Bogus0, (JsonDeserializer<?>) null);
      assertNull(nullValueProvider0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      PrimitiveArrayDeserializers.BooleanDeser primitiveArrayDeserializers_BooleanDeser0 = new PrimitiveArrayDeserializers.BooleanDeser();
      int int0 = primitiveArrayDeserializers_BooleanDeser0._parseIntPrimitive(defaultDeserializationContext_Impl0, "6");
      assertEquals(6, int0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      NumberDeserializers.ShortDeserializer numberDeserializers_ShortDeserializer0 = NumberDeserializers.ShortDeserializer.primitiveInstance;
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      float float0 = numberDeserializers_ShortDeserializer0._parseFloatPrimitive(defaultDeserializationContext_Impl0, "2.2250738585072012e-308");
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      Boolean boolean0 = Boolean.FALSE;
      PrimitiveArrayDeserializers.CharDeser primitiveArrayDeserializers_CharDeser0 = new PrimitiveArrayDeserializers.CharDeser();
      PrimitiveArrayDeserializers.CharDeser primitiveArrayDeserializers_CharDeser1 = new PrimitiveArrayDeserializers.CharDeser(primitiveArrayDeserializers_CharDeser0, primitiveArrayDeserializers_CharDeser0, boolean0);
      double double0 = primitiveArrayDeserializers_CharDeser1._parseDoublePrimitive(defaultDeserializationContext_Impl0, "0");
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      PrimitiveArrayDeserializers.BooleanDeser primitiveArrayDeserializers_BooleanDeser0 = new PrimitiveArrayDeserializers.BooleanDeser();
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      Date date0 = primitiveArrayDeserializers_BooleanDeser0._parseDate("", defaultDeserializationContext_Impl0);
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StdDelegatingDeserializer<Float> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Float>((Converter<?, Float>) null);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)7;
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      Number number0 = stdDelegatingDeserializer0._nonNullNumber(bigInteger0);
      assertEquals((byte)7, number0.byteValue());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StdDelegatingDeserializer<Float> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Float>((Converter<?, Float>) null);
      byte[] byteArray0 = new byte[7];
      byteArray0[6] = (byte) (-1);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      Number number0 = stdDelegatingDeserializer0._nonNullNumber(bigInteger0);
      assertSame(bigInteger0, number0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 678);
      boolean boolean0 = StdDeserializer._neitherNull(pipedInputStream0, pipedInputStream0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      PrimitiveArrayDeserializers.ShortDeser primitiveArrayDeserializers_ShortDeser0 = new PrimitiveArrayDeserializers.ShortDeser();
      Class<BuilderBasedDeserializer> class0 = BuilderBasedDeserializer.class;
      SimpleType simpleType0 = SimpleType.constructUnsafe(class0);
      StdDelegatingDeserializer<SimpleModule> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<SimpleModule>((Converter<Object, SimpleModule>) null, simpleType0, primitiveArrayDeserializers_ShortDeser0);
      boolean boolean0 = stdDelegatingDeserializer0._isPosInf("WRITE_OTLo");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      PrimitiveArrayDeserializers.CharDeser primitiveArrayDeserializers_CharDeser0 = new PrimitiveArrayDeserializers.CharDeser();
      StdDelegatingDeserializer<LinkedList<Short>> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<LinkedList<Short>>((Converter<Object, LinkedList<Short>>) null, (JavaType) null, primitiveArrayDeserializers_CharDeser0);
      boolean boolean0 = stdDelegatingDeserializer0._isNegInf("iLJCcX!]'?Jw*>");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Converter<BeanDeserializer, String> converter0 = (Converter<BeanDeserializer, String>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<String> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<String>(converter0);
      boolean boolean0 = stdDelegatingDeserializer0._isNaN("4vARW !hQl");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Class<Boolean> class0 = Boolean.class;
      FromStringDeserializer.Std fromStringDeserializer_Std0 = new FromStringDeserializer.Std(class0, 937);
      Converter<Object, BeanDeserializer> converter0 = (Converter<Object, BeanDeserializer>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<BeanDeserializer> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<BeanDeserializer>(converter0, (JavaType) null, fromStringDeserializer_Std0);
      boolean boolean0 = stdDelegatingDeserializer0._isEmptyOrTextualNull("|qNdzS9");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      PrimitiveArrayDeserializers.CharDeser primitiveArrayDeserializers_CharDeser0 = new PrimitiveArrayDeserializers.CharDeser();
      BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      Nulls nulls0 = Nulls.SET;
      Converter<BuilderBasedDeserializer, InputStream> converter0 = (Converter<BuilderBasedDeserializer, InputStream>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<InputStream> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<InputStream>(converter0);
      NullValueProvider nullValueProvider0 = primitiveArrayDeserializers_CharDeser0._findNullProvider(defaultDeserializationContext_Impl0, beanProperty_Bogus0, nulls0, stdDelegatingDeserializer0);
      assertNull(nullValueProvider0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      try { 
        StdDeserializer.parseDouble("com.fasterxml.jackson.databind.deser.impl.PropertyValue$Regular");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Converter<Object, ByteArrayInputStream> converter0 = (Converter<Object, ByteArrayInputStream>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<ByteArrayInputStream> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<ByteArrayInputStream>(converter0);
      // Undeclared exception!
      try { 
        stdDelegatingDeserializer0.handledType();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      PrimitiveArrayDeserializers.CharDeser primitiveArrayDeserializers_CharDeser0 = new PrimitiveArrayDeserializers.CharDeser();
      Class<MinguoEra> class0 = MinguoEra.class;
      JsonFormat.Feature jsonFormat_Feature0 = JsonFormat.Feature.WRITE_DATES_WITH_ZONE_ID;
      // Undeclared exception!
      try { 
        primitiveArrayDeserializers_CharDeser0.findFormatFeature(defaultDeserializationContext_Impl0, (BeanProperty) null, class0, jsonFormat_Feature0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      NumberDeserializers.DoubleDeserializer numberDeserializers_DoubleDeserializer0 = NumberDeserializers.DoubleDeserializer.wrapperInstance;
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      StdDelegatingDeserializer<SimpleModule> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<SimpleModule>((Converter<?, SimpleModule>) null);
      // Undeclared exception!
      try { 
        numberDeserializers_DoubleDeserializer0.findConvertingContentDeserializer(defaultDeserializationContext_Impl0, (BeanProperty) null, stdDelegatingDeserializer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Converter<JavaType, Double> converter0 = (Converter<JavaType, Double>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Double> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Double>(converter0);
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      JsonFactory jsonFactory0 = new JsonFactory();
      byte[] byteArray0 = new byte[1];
      JsonParser jsonParser0 = jsonFactory0.createParser(byteArray0);
      FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(jsonParser0, (TokenFilter) null, false, false);
      // Undeclared exception!
      try { 
        stdDelegatingDeserializer0.deserializeWithType(filteringParserDelegate0, defaultDeserializationContext_Impl0, (TypeDeserializer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      PrimitiveArrayDeserializers.BooleanDeser primitiveArrayDeserializers_BooleanDeser0 = new PrimitiveArrayDeserializers.BooleanDeser();
      // Undeclared exception!
      try { 
        primitiveArrayDeserializers_BooleanDeser0._verifyStringForScalarCoercion(defaultDeserializationContext_Impl0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StdDelegatingDeserializer<Calendar> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Calendar>((Converter<?, Calendar>) null);
      // Undeclared exception!
      try { 
        stdDelegatingDeserializer0._verifyNumberForScalarCoercion((DeserializationContext) null, (JsonParser) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StringArrayDeserializer stringArrayDeserializer0 = new StringArrayDeserializer();
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      // Undeclared exception!
      try { 
        stringArrayDeserializer0._verifyNullForScalarCoercion(defaultDeserializationContext_Impl0, "S^+FsB?1l@:");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StringArrayDeserializer stringArrayDeserializer0 = new StringArrayDeserializer();
      // Undeclared exception!
      try { 
        stringArrayDeserializer0._verifyNullForPrimitiveCoercion((DeserializationContext) null, "P&1ciKD!C;Y}f/YB");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StringArrayDeserializer stringArrayDeserializer0 = StringArrayDeserializer.instance;
      // Undeclared exception!
      try { 
        stringArrayDeserializer0._verifyNullForPrimitive((DeserializationContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      JsonFactory jsonFactory0 = new JsonFactory();
      PrimitiveArrayDeserializers.CharDeser primitiveArrayDeserializers_CharDeser0 = new PrimitiveArrayDeserializers.CharDeser();
      BufferRecycler bufferRecycler0 = new BufferRecycler();
      IOContext iOContext0 = new IOContext(bufferRecycler0, jsonFactory0, true);
      PipedReader pipedReader0 = new PipedReader();
      ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);
      CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
      ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 3, pipedReader0, objectMapper0, charsToNameCanonicalizer0);
      try { 
        primitiveArrayDeserializers_CharDeser0._verifyEndArrayForSingle(readerBasedJsonParser0, (DeserializationContext) null);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      JsonFactory jsonFactory0 = new JsonFactory();
      char[] charArray0 = new char[1];
      JsonParser jsonParser0 = jsonFactory0.createParser(charArray0);
      StringArrayDeserializer stringArrayDeserializer0 = StringArrayDeserializer.instance;
      try { 
        stringArrayDeserializer0._verifyEndArrayForSingle(jsonParser0, (DeserializationContext) null);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Illegal character ((CTRL-CHAR, code 0)): only regular white space (\\r, \\n, \\t) is allowed between tokens
         //  at [Source: (char[])\"\u0000\"; line: 1, column: 2]
         //
         verifyException("com.fasterxml.jackson.core.JsonParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DateDeserializers.CalendarDeserializer dateDeserializers_CalendarDeserializer0 = new DateDeserializers.CalendarDeserializer();
      // Undeclared exception!
      try { 
        dateDeserializers_CalendarDeserializer0._parseShortPrimitive((JsonParser) null, (DeserializationContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      PrimitiveArrayDeserializers.CharDeser primitiveArrayDeserializers_CharDeser0 = new PrimitiveArrayDeserializers.CharDeser();
      PrimitiveArrayDeserializers.CharDeser primitiveArrayDeserializers_CharDeser1 = new PrimitiveArrayDeserializers.CharDeser(primitiveArrayDeserializers_CharDeser0, primitiveArrayDeserializers_CharDeser0, (Boolean) null);
      // Undeclared exception!
      try { 
        primitiveArrayDeserializers_CharDeser1._parseLongPrimitive(defaultDeserializationContext_Impl0, "");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      PrimitiveArrayDeserializers.CharDeser primitiveArrayDeserializers_CharDeser0 = new PrimitiveArrayDeserializers.CharDeser();
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      // Undeclared exception!
      try { 
        primitiveArrayDeserializers_CharDeser0._parseLongPrimitive(defaultDeserializationContext_Impl0, "JSON");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
      NumberDeserializers.ShortDeserializer numberDeserializers_ShortDeserializer0 = NumberDeserializers.ShortDeserializer.wrapperInstance;
      JsonFactory jsonFactory0 = new JsonFactory((ObjectCodec) null);
      byte[] byteArray0 = new byte[3];
      JsonParser jsonParser0 = jsonFactory0.createParser(byteArray0, (-2243), (int) (byte) (-127));
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
      SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);
      RootNameLookup rootNameLookup0 = new RootNameLookup();
      ConfigOverrides configOverrides0 = new ConfigOverrides();
      DeserializationConfig deserializationConfig0 = new DeserializationConfig((BaseSettings) null, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0, configOverrides0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      InjectableValues.Std injectableValues_Std0 = new InjectableValues.Std(hashMap0);
      DefaultDeserializationContext defaultDeserializationContext0 = defaultDeserializationContext_Impl0.createInstance(deserializationConfig0, jsonParser0, injectableValues_Std0);
      try { 
        numberDeserializers_ShortDeserializer0._parseLongPrimitive(jsonParser0, defaultDeserializationContext0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Unexpected end-of-input when binding data into `java.lang.Short`
         //  at [Source: (byte[])\"\u0000\u0000\u0000\"; line: 1, column: 0]
         //
         verifyException("com.fasterxml.jackson.databind.exc.MismatchedInputException", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      NumberDeserializers.LongDeserializer numberDeserializers_LongDeserializer0 = NumberDeserializers.LongDeserializer.primitiveInstance;
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      // Undeclared exception!
      try { 
        numberDeserializers_LongDeserializer0._parseIntPrimitive(defaultDeserializationContext_Impl0, "");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StringArrayDeserializer stringArrayDeserializer0 = new StringArrayDeserializer();
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      // Undeclared exception!
      try { 
        stringArrayDeserializer0._parseFloatPrimitive(defaultDeserializationContext_Impl0, "");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      NumberDeserializers.ShortDeserializer numberDeserializers_ShortDeserializer0 = NumberDeserializers.ShortDeserializer.primitiveInstance;
      BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory((DeserializerFactoryConfig) null);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
      RootNameLookup rootNameLookup0 = new RootNameLookup();
      DeserializationConfig deserializationConfig0 = new DeserializationConfig((BaseSettings) null, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0, (ConfigOverrides) null);
      JsonFactory jsonFactory0 = new JsonFactory();
      JsonParser jsonParser0 = jsonFactory0.createNonBlockingByteArrayParser();
      DefaultDeserializationContext defaultDeserializationContext0 = defaultDeserializationContext_Impl0.createInstance(deserializationConfig0, jsonParser0, (InjectableValues) null);
      try { 
        numberDeserializers_ShortDeserializer0._parseFloatPrimitive(defaultDeserializationContext0, "overflow, value cannot be represented as 16-bit value");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Cannot deserialize value of type `short` from String \"overflow, value cannot be represented as 16-bit value\": not a valid float value
         //  at [Source: UNKNOWN; line: 1, column: 0]
         //
         verifyException("com.fasterxml.jackson.databind.exc.InvalidFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      StdDelegatingDeserializer<Double> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Double>((Converter<?, Double>) null);
      // Undeclared exception!
      try { 
        stdDelegatingDeserializer0._parseDoublePrimitive(defaultDeserializationContext_Impl0, "");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.wrapperInstance;
      // Undeclared exception!
      try { 
        numberDeserializers_BooleanDeserializer0._parseBytePrimitive((JsonParser) null, defaultDeserializationContext_Impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StringArrayDeserializer stringArrayDeserializer0 = StringArrayDeserializer.instance;
      // Undeclared exception!
      try { 
        stringArrayDeserializer0._parseBooleanFromInt((JsonParser) null, (DeserializationContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StdDelegatingDeserializer<Calendar> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Calendar>((Converter<?, Calendar>) null);
      // Undeclared exception!
      try { 
        stdDelegatingDeserializer0._isIntNumber((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StringArrayDeserializer stringArrayDeserializer0 = new StringArrayDeserializer();
      ObjectMapper objectMapper0 = new ObjectMapper();
      JsonFactory jsonFactory0 = new JsonFactory(objectMapper0);
      PrimitiveArrayDeserializers.CharDeser primitiveArrayDeserializers_CharDeser0 = new PrimitiveArrayDeserializers.CharDeser();
      Boolean boolean0 = Boolean.FALSE;
      PrimitiveArrayDeserializers.CharDeser primitiveArrayDeserializers_CharDeser1 = new PrimitiveArrayDeserializers.CharDeser(primitiveArrayDeserializers_CharDeser0, stringArrayDeserializer0, boolean0);
      JsonParser jsonParser0 = jsonFactory0.createParser("`mRLA??8");
      DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();
      try { 
        primitiveArrayDeserializers_CharDeser1._failDoubleToIntCoercion(jsonParser0, deserializationContext0, "`mRLA??8");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Cannot coerce a floating-point value ('null') into `mRLA??8 (enable `DeserializationFeature.ACCEPT_FLOAT_AS_INT` to allow)
         //
         verifyException("com.fasterxml.jackson.databind.exc.MismatchedInputException", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Converter<Object, BuilderBasedDeserializer> converter0 = (Converter<Object, BuilderBasedDeserializer>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<BuilderBasedDeserializer> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<BuilderBasedDeserializer>(converter0);
      // Undeclared exception!
      try { 
        stdDelegatingDeserializer0._coercedTypeDesc();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      PrimitiveArrayDeserializers.CharDeser primitiveArrayDeserializers_CharDeser0 = new PrimitiveArrayDeserializers.CharDeser();
      // Undeclared exception!
      try { 
        primitiveArrayDeserializers_CharDeser0._coerceTextualNull((DeserializationContext) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StdDelegatingDeserializer<BeanDeserializer> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<BeanDeserializer>((Converter<?, BeanDeserializer>) null);
      JsonFactory jsonFactory0 = new JsonFactory();
      byte[] byteArray0 = new byte[9];
      JsonParser jsonParser0 = jsonFactory0.createParser(byteArray0, 47, (int) (byte) (-48));
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      try { 
        stdDelegatingDeserializer0._coerceIntegral(jsonParser0, defaultDeserializationContext_Impl0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Current token (null) not numeric, can not use numeric value accessors
         //  at [Source: (byte[])\"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\"; line: 1, column: 1]
         //
         verifyException("com.fasterxml.jackson.core.JsonParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      PrimitiveArrayDeserializers.CharDeser primitiveArrayDeserializers_CharDeser0 = new PrimitiveArrayDeserializers.CharDeser();
      // Undeclared exception!
      try { 
        primitiveArrayDeserializers_CharDeser0._coerceEmptyString((DeserializationContext) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      PrimitiveArrayDeserializers.FloatDeser primitiveArrayDeserializers_FloatDeser0 = new PrimitiveArrayDeserializers.FloatDeser();
      TypeFactory typeFactory0 = TypeFactory.defaultInstance();
      Class<HashMap> class0 = HashMap.class;
      MapType mapType0 = typeFactory0.constructRawMapType(class0);
      Converter<Object, MinguoEra> converter0 = (Converter<Object, MinguoEra>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<MinguoEra> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<MinguoEra>(converter0, mapType0, primitiveArrayDeserializers_FloatDeser0);
      boolean boolean0 = stdDelegatingDeserializer0._shortOverflow((-32768));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      NumberDeserializers.LongDeserializer numberDeserializers_LongDeserializer0 = NumberDeserializers.LongDeserializer.wrapperInstance;
      Class<Short> class0 = Short.class;
      // Undeclared exception!
      try { 
        numberDeserializers_LongDeserializer0.findFormatOverrides(defaultDeserializationContext_Impl0, (BeanProperty) null, class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Converter<BeanDeserializer, String> converter0 = (Converter<BeanDeserializer, String>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<String> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<String>(converter0);
      JavaType javaType0 = stdDelegatingDeserializer0.getValueType();
      assertNull(javaType0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Converter<SettableBeanProperty, CreatorProperty> converter0 = (Converter<SettableBeanProperty, CreatorProperty>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<CreatorProperty> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<CreatorProperty>(converter0);
      Number number0 = stdDelegatingDeserializer0._nonNullNumber((Number) null);
      assertNotNull(number0);
      assertEquals(0, number0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.wrapperInstance;
      boolean boolean0 = numberDeserializers_BooleanDeserializer0._intOverflow((-5470L));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      NumberDeserializers.DoubleDeserializer numberDeserializers_DoubleDeserializer0 = NumberDeserializers.DoubleDeserializer.primitiveInstance;
      boolean boolean0 = numberDeserializers_DoubleDeserializer0._shortOverflow(65599);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      NumberDeserializers.DoubleDeserializer numberDeserializers_DoubleDeserializer0 = NumberDeserializers.DoubleDeserializer.primitiveInstance;
      boolean boolean0 = numberDeserializers_DoubleDeserializer0._shortOverflow((-1954330674));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Converter<String, Long> converter0 = (Converter<String, Long>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Long> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Long>(converter0);
      boolean boolean0 = stdDelegatingDeserializer0._byteOverflow(1293);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      NumberDeserializers.ShortDeserializer numberDeserializers_ShortDeserializer0 = NumberDeserializers.ShortDeserializer.wrapperInstance;
      Converter<Object, Long> converter0 = (Converter<Object, Long>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Long> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Long>(converter0, (JavaType) null, numberDeserializers_ShortDeserializer0);
      boolean boolean0 = stdDelegatingDeserializer0._byteOverflow(21);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      PrimitiveArrayDeserializers.CharDeser primitiveArrayDeserializers_CharDeser0 = new PrimitiveArrayDeserializers.CharDeser();
      TypeFactory typeFactory0 = TypeFactory.defaultInstance();
      Class<HashMap> class0 = HashMap.class;
      MapType mapType0 = typeFactory0.constructRawMapType(class0);
      Converter<Object, Long> converter0 = (Converter<Object, Long>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Long> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Long>(converter0, mapType0, primitiveArrayDeserializers_CharDeser0);
      boolean boolean0 = stdDelegatingDeserializer0._byteOverflow((-763));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Converter<Double, Calendar> converter0 = (Converter<Double, Calendar>) mock(Converter.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = StdDeserializer._neitherNull(converter0, (Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      JsonFactory jsonFactory0 = new JsonFactory();
      PrimitiveArrayDeserializers.CharDeser primitiveArrayDeserializers_CharDeser0 = new PrimitiveArrayDeserializers.CharDeser();
      JsonParser jsonParser0 = jsonFactory0.createNonBlockingByteArrayParser();
      // Undeclared exception!
      try { 
        primitiveArrayDeserializers_CharDeser0._verifyEndArrayForSingle(jsonParser0, (DeserializationContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ObjectMapper objectMapper0 = new ObjectMapper();
      JsonFactory jsonFactory0 = new JsonFactory(objectMapper0);
      JsonParser jsonParser0 = jsonFactory0.createParser("JSON");
      JsonParserSequence jsonParserSequence0 = JsonParserSequence.createFlattened(false, jsonParser0, jsonParser0);
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      NumberDeserializers.ShortDeserializer numberDeserializers_ShortDeserializer0 = NumberDeserializers.ShortDeserializer.primitiveInstance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      // Undeclared exception!
      try { 
        numberDeserializers_ShortDeserializer0.handleUnknownProperty(jsonParserSequence0, defaultDeserializationContext_Impl0, objectMapper0, "JSON");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Converter<Double, Calendar> converter0 = (Converter<Double, Calendar>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Calendar> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Calendar>(converter0);
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      Nulls nulls0 = Nulls.SKIP;
      NullValueProvider nullValueProvider0 = stdDelegatingDeserializer0._findNullProvider(defaultDeserializationContext_Impl0, (BeanProperty) null, nulls0, stdDelegatingDeserializer0);
      assertEquals(AccessPattern.ALWAYS_NULL, nullValueProvider0.getNullAccessPattern());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Converter<ArrayType, Double> converter0 = (Converter<ArrayType, Double>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Double> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Double>(converter0);
      BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
      Nulls nulls0 = Nulls.AS_EMPTY;
      Converter<Calendar, Byte> converter1 = (Converter<Calendar, Byte>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Byte> stdDelegatingDeserializer1 = new StdDelegatingDeserializer<Byte>(converter1);
      NullValueProvider nullValueProvider0 = stdDelegatingDeserializer0._findNullProvider((DeserializationContext) null, beanProperty_Bogus0, nulls0, stdDelegatingDeserializer1);
      assertEquals(AccessPattern.DYNAMIC, nullValueProvider0.getNullAccessPattern());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Converter<Module, Double> converter0 = (Converter<Module, Double>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Double> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Double>(converter0);
      BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
      Converter<JavaType, Byte> converter1 = (Converter<JavaType, Byte>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Byte> stdDelegatingDeserializer1 = new StdDelegatingDeserializer<Byte>(converter1);
      Nulls nulls0 = Nulls.FAIL;
      NullValueProvider nullValueProvider0 = stdDelegatingDeserializer0._findNullProvider((DeserializationContext) null, beanProperty_Bogus0, nulls0, stdDelegatingDeserializer1);
      assertEquals(AccessPattern.DYNAMIC, nullValueProvider0.getNullAccessPattern());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.wrapperInstance;
      Converter<Float, ByteArrayInputStream> converter0 = (Converter<Float, ByteArrayInputStream>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<ByteArrayInputStream> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<ByteArrayInputStream>(converter0);
      StdDelegatingDeserializer stdDelegatingDeserializer1 = (StdDelegatingDeserializer)numberDeserializers_BooleanDeserializer0.findContentNullProvider(defaultDeserializationContext_Impl0, (BeanProperty) null, stdDelegatingDeserializer0);
      assertEquals(AccessPattern.DYNAMIC, stdDelegatingDeserializer1.getEmptyAccessPattern());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      PrimitiveArrayDeserializers.CharDeser primitiveArrayDeserializers_CharDeser0 = new PrimitiveArrayDeserializers.CharDeser();
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      PropertyMetadata propertyMetadata0 = PropertyMetadata.construct((Boolean) null, ": expected type JsonSerializer or Class<JsonSerializer> instead", (Integer) null, "(bpzO2R");
      NullValueProvider nullValueProvider0 = primitiveArrayDeserializers_CharDeser0.findValueNullProvider(defaultDeserializationContext_Impl0, (SettableBeanProperty) null, propertyMetadata0);
      assertNull(nullValueProvider0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      NumberDeserializers.ShortDeserializer numberDeserializers_ShortDeserializer0 = NumberDeserializers.ShortDeserializer.wrapperInstance;
      boolean boolean0 = numberDeserializers_ShortDeserializer0._isIntNumber("+hyjNMfZ.\"Cv|K3Wy");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      NumberDeserializers.ShortDeserializer numberDeserializers_ShortDeserializer0 = NumberDeserializers.ShortDeserializer.wrapperInstance;
      boolean boolean0 = numberDeserializers_ShortDeserializer0._isIntNumber("-510");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      NumberDeserializers.ShortDeserializer numberDeserializers_ShortDeserializer0 = NumberDeserializers.ShortDeserializer.primitiveInstance;
      boolean boolean0 = numberDeserializers_ShortDeserializer0._isIntNumber("*rh[");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Short short0 = new Short((short)74);
      Class<Short> class0 = Short.class;
      NumberDeserializers.ShortDeserializer numberDeserializers_ShortDeserializer0 = new NumberDeserializers.ShortDeserializer(class0, short0);
      boolean boolean0 = numberDeserializers_ShortDeserializer0._isIntNumber("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory((DeserializerFactoryConfig) null);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      JsonGenerator.Feature jsonGenerator_Feature0 = JsonGenerator.Feature.WRITE_BIGDECIMAL_AS_PLAIN;
      PrimitiveArrayDeserializers.BooleanDeser primitiveArrayDeserializers_BooleanDeser0 = new PrimitiveArrayDeserializers.BooleanDeser();
      try { 
        primitiveArrayDeserializers_BooleanDeser0._reportFailedNullCoerce(defaultDeserializationContext_Impl0, true, jsonGenerator_Feature0, "JSON");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Cannot coerce JSON to Null value as content of type `boolean[]` (enable `Feature.WRITE_BIGDECIMAL_AS_PLAIN` to allow)
         //
         verifyException("com.fasterxml.jackson.databind.exc.MismatchedInputException", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      PrimitiveArrayDeserializers.CharDeser primitiveArrayDeserializers_CharDeser0 = new PrimitiveArrayDeserializers.CharDeser();
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      primitiveArrayDeserializers_CharDeser0._verifyNullForPrimitive(defaultDeserializationContext_Impl0);
      assertEquals(0, defaultDeserializationContext_Impl0.getDeserializationFeatures());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      PrimitiveArrayDeserializers.BooleanDeser primitiveArrayDeserializers_BooleanDeser0 = new PrimitiveArrayDeserializers.BooleanDeser();
      // Undeclared exception!
      try { 
        primitiveArrayDeserializers_BooleanDeser0._coerceNullToken((DeserializationContext) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      PrimitiveArrayDeserializers.BooleanDeser primitiveArrayDeserializers_BooleanDeser0 = new PrimitiveArrayDeserializers.BooleanDeser();
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      PrimitiveArrayDeserializers.CharDeser primitiveArrayDeserializers_CharDeser0 = new PrimitiveArrayDeserializers.CharDeser();
      PrimitiveArrayDeserializers.CharDeser primitiveArrayDeserializers_CharDeser1 = new PrimitiveArrayDeserializers.CharDeser(primitiveArrayDeserializers_CharDeser0, primitiveArrayDeserializers_BooleanDeser0, (Boolean) null);
      Object object0 = primitiveArrayDeserializers_CharDeser1._coerceNullToken(defaultDeserializationContext_Impl0, false);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.wrapperInstance;
      // Undeclared exception!
      try { 
        numberDeserializers_BooleanDeserializer0._coerceIntegral((JsonParser) null, defaultDeserializationContext_Impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      PrimitiveArrayDeserializers.ShortDeser primitiveArrayDeserializers_ShortDeser0 = new PrimitiveArrayDeserializers.ShortDeser();
      Boolean boolean0 = Boolean.TRUE;
      PrimitiveArrayDeserializers.ShortDeser primitiveArrayDeserializers_ShortDeser1 = new PrimitiveArrayDeserializers.ShortDeser(primitiveArrayDeserializers_ShortDeser0, primitiveArrayDeserializers_ShortDeser0, boolean0);
      JsonFactory jsonFactory0 = new JsonFactory();
      File file0 = MockFile.createTempFile("VQ_#/", "JSON");
      JsonParser jsonParser0 = jsonFactory0.createParser(file0);
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      // Undeclared exception!
      try { 
        primitiveArrayDeserializers_ShortDeser1._deserializeWrappedValue(jsonParser0, defaultDeserializationContext_Impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DateDeserializers.TimestampDeserializer dateDeserializers_TimestampDeserializer0 = new DateDeserializers.TimestampDeserializer();
      ObjectMapper objectMapper0 = new ObjectMapper();
      Class<ArrayType> class0 = ArrayType.class;
      ObjectReader objectReader0 = objectMapper0.readerFor(class0);
      JsonFactory jsonFactory0 = new JsonFactory(objectReader0);
      char[] charArray0 = new char[6];
      JsonParser jsonParser0 = jsonFactory0.createParser(charArray0, 3, 8);
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      // Undeclared exception!
      try { 
        dateDeserializers_TimestampDeserializer0._deserializeFromArray(jsonParser0, defaultDeserializationContext_Impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      PrimitiveArrayDeserializers.BooleanDeser primitiveArrayDeserializers_BooleanDeser0 = new PrimitiveArrayDeserializers.BooleanDeser();
      PlaceholderForType placeholderForType0 = new PlaceholderForType(Integer.MAX_VALUE);
      Converter<Object, LinkedList<Short>> converter0 = (Converter<Object, LinkedList<Short>>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<LinkedList<Short>> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<LinkedList<Short>>(converter0, placeholderForType0, primitiveArrayDeserializers_BooleanDeser0);
      boolean boolean0 = stdDelegatingDeserializer0._isNegInf("-INF");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      PrimitiveArrayDeserializers.CharDeser primitiveArrayDeserializers_CharDeser0 = new PrimitiveArrayDeserializers.CharDeser();
      JsonFactory jsonFactory0 = new JsonFactory();
      JsonParser jsonParser0 = jsonFactory0.createParser((InputStream) null);
      // Undeclared exception!
      try { 
        primitiveArrayDeserializers_CharDeser0._deserializeFromEmpty(jsonParser0, (DeserializationContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ObjectMapper objectMapper0 = new ObjectMapper();
      JsonFactory jsonFactory0 = new JsonFactory(objectMapper0);
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      StringArrayDeserializer stringArrayDeserializer0 = new StringArrayDeserializer();
      char[] charArray0 = new char[0];
      JsonParser jsonParser0 = jsonFactory0.createParser(charArray0);
      // Undeclared exception!
      try { 
        stringArrayDeserializer0._parseString(jsonParser0, defaultDeserializationContext_Impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      Converter<Module, Double> converter0 = (Converter<Module, Double>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Double> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Double>(converter0);
      double double0 = stdDelegatingDeserializer0._parseDoublePrimitive(defaultDeserializationContext_Impl0, "2.2250738585072012e-308");
      assertEquals(2.2250738585072014E-308, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      NumberDeserializers.DoubleDeserializer numberDeserializers_DoubleDeserializer0 = NumberDeserializers.DoubleDeserializer.primitiveInstance;
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      // Undeclared exception!
      try { 
        numberDeserializers_DoubleDeserializer0._parseDate("", defaultDeserializationContext_Impl0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Double cannot be cast to java.util.Date
         //
         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      PrimitiveArrayDeserializers.BooleanDeser primitiveArrayDeserializers_BooleanDeser0 = new PrimitiveArrayDeserializers.BooleanDeser();
      // Undeclared exception!
      try { 
        primitiveArrayDeserializers_BooleanDeser0._parseDate("6", defaultDeserializationContext_Impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
      NumberDeserializers.IntegerDeserializer numberDeserializers_IntegerDeserializer0 = NumberDeserializers.IntegerDeserializer.primitiveInstance;
      JsonFactory jsonFactory0 = new JsonFactory();
      char[] charArray0 = new char[0];
      JsonParser jsonParser0 = jsonFactory0.createParser(charArray0);
      JsonParserDelegate jsonParserDelegate0 = new JsonParserDelegate(jsonParser0);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      // Undeclared exception!
      try { 
        numberDeserializers_IntegerDeserializer0._parseDateFromArray(jsonParserDelegate0, defaultDeserializationContext_Impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Converter<SimpleModule, SimpleModule> converter0 = (Converter<SimpleModule, SimpleModule>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<SimpleModule> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<SimpleModule>(converter0);
      JsonFactory jsonFactory0 = new JsonFactory();
      PipedWriter pipedWriter0 = new PipedWriter();
      PipedReader pipedReader0 = new PipedReader(pipedWriter0, 2533);
      JsonParser jsonParser0 = jsonFactory0.createParser((Reader) pipedReader0);
      ObjectMapper objectMapper0 = new ObjectMapper();
      DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();
      // Undeclared exception!
      try { 
        stdDelegatingDeserializer0._parseDate(jsonParser0, deserializationContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      Converter<BuilderBasedDeserializer, Double> converter0 = (Converter<BuilderBasedDeserializer, Double>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Double> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Double>(converter0);
      // Undeclared exception!
      try { 
        stdDelegatingDeserializer0._parseDoublePrimitive(defaultDeserializationContext_Impl0, "-W8");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
      Converter<Double, Double> converter0 = (Converter<Double, Double>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Double> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Double>(converter0);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      double double0 = stdDelegatingDeserializer0._parseDoublePrimitive(defaultDeserializationContext_Impl0, "Infinity");
      assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
      Converter<Double, Double> converter0 = (Converter<Double, Double>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Double> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Double>(converter0);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      // Undeclared exception!
      try { 
        stdDelegatingDeserializer0._parseDoublePrimitive(defaultDeserializationContext_Impl0, "Infiny");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      Converter<Double, Double> converter0 = (Converter<Double, Double>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Double> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Double>(converter0);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      double double0 = stdDelegatingDeserializer0._parseDoublePrimitive(defaultDeserializationContext_Impl0, "-Infinity");
      assertEquals(Double.NEGATIVE_INFINITY, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Converter<SimpleModule, Class<Long>> converter0 = (Converter<SimpleModule, Class<Long>>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Class<Long>> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Class<Long>>(converter0);
      ObjectMapper objectMapper0 = new ObjectMapper((JsonFactory) null);
      DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();
      TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;
      FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, true, false);
      // Undeclared exception!
      try { 
        stdDelegatingDeserializer0._parseDoublePrimitive(filteringParserDelegate0, deserializationContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      StringArrayDeserializer stringArrayDeserializer0 = new StringArrayDeserializer();
      float float0 = stringArrayDeserializer0._parseFloatPrimitive(defaultDeserializationContext_Impl0, "-Infinity");
      assertEquals(Float.NEGATIVE_INFINITY, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      NumberDeserializers.ShortDeserializer numberDeserializers_ShortDeserializer0 = NumberDeserializers.ShortDeserializer.wrapperInstance;
      float float0 = numberDeserializers_ShortDeserializer0._parseFloatPrimitive(defaultDeserializationContext_Impl0, "INF");
      assertEquals(Float.POSITIVE_INFINITY, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      NumberDeserializers.ShortDeserializer numberDeserializers_ShortDeserializer0 = NumberDeserializers.ShortDeserializer.primitiveInstance;
      BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory((DeserializerFactoryConfig) null);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      // Undeclared exception!
      try { 
        numberDeserializers_ShortDeserializer0._parseFloatPrimitive(defaultDeserializationContext_Impl0, "overflow, value cannot be represented as 16-bit value");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      StringArrayDeserializer stringArrayDeserializer0 = StringArrayDeserializer.instance;
      // Undeclared exception!
      try { 
        stringArrayDeserializer0._parseFloatPrimitive(defaultDeserializationContext_Impl0, "No non-constructor mutator available");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Converter<JavaType, Double> converter0 = (Converter<JavaType, Double>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Double> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Double>(converter0);
      // Undeclared exception!
      try { 
        stdDelegatingDeserializer0._parseFloatPrimitive((DeserializationContext) null, "IP:NF");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      JsonFactory jsonFactory0 = new JsonFactory();
      PrimitiveArrayDeserializers.CharDeser primitiveArrayDeserializers_CharDeser0 = new PrimitiveArrayDeserializers.CharDeser();
      BufferRecycler bufferRecycler0 = new BufferRecycler();
      IOContext iOContext0 = new IOContext(bufferRecycler0, jsonFactory0, true);
      PipedReader pipedReader0 = new PipedReader(53);
      ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);
      Class<MissingNode> class0 = MissingNode.class;
      ObjectReader objectReader0 = objectMapper0.readerWithView(class0);
      CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
      ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, (-1958722443), pipedReader0, objectReader0, charsToNameCanonicalizer0);
      // Undeclared exception!
      try { 
        primitiveArrayDeserializers_CharDeser0._parseFloatPrimitive(readerBasedJsonParser0, (DeserializationContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
      NumberDeserializers.ShortDeserializer numberDeserializers_ShortDeserializer0 = NumberDeserializers.ShortDeserializer.wrapperInstance;
      JsonFactory jsonFactory0 = new JsonFactory((ObjectCodec) null);
      byte[] byteArray0 = new byte[3];
      JsonParser jsonParser0 = jsonFactory0.createParser(byteArray0, (-2243), (int) (byte) (-127));
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      // Undeclared exception!
      try { 
        numberDeserializers_ShortDeserializer0._parseLongPrimitive(jsonParser0, defaultDeserializationContext_Impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Class<Long> class0 = Long.class;
      Long long0 = new Long(3L);
      NumberDeserializers.LongDeserializer numberDeserializers_LongDeserializer0 = new NumberDeserializers.LongDeserializer(class0, long0);
      // Undeclared exception!
      try { 
        numberDeserializers_LongDeserializer0._parseIntPrimitive((DeserializationContext) null, "WRITE_ONLY");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Class<Long> class0 = Long.class;
      Long long0 = new Long((-2147483648L));
      NumberDeserializers.LongDeserializer numberDeserializers_LongDeserializer0 = new NumberDeserializers.LongDeserializer(class0, long0);
      int int0 = numberDeserializers_LongDeserializer0._parseIntPrimitive((DeserializationContext) null, "0");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Class<Long> class0 = Long.class;
      Long long0 = new Long(3L);
      NumberDeserializers.LongDeserializer numberDeserializers_LongDeserializer0 = new NumberDeserializers.LongDeserializer(class0, long0);
      BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory((DeserializerFactoryConfig) null);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      ObjectMapper objectMapper0 = new ObjectMapper();
      BooleanNode booleanNode0 = BooleanNode.valueOf(true);
      JsonParser jsonParser0 = objectMapper0.treeAsTokens(booleanNode0);
      TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;
      FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(jsonParser0, tokenFilter0, false, true);
      // Undeclared exception!
      try { 
        numberDeserializers_LongDeserializer0._parseIntPrimitive(filteringParserDelegate0, defaultDeserializationContext_Impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DateDeserializers.TimestampDeserializer dateDeserializers_TimestampDeserializer0 = new DateDeserializers.TimestampDeserializer();
      JsonFactory jsonFactory0 = new JsonFactory();
      char[] charArray0 = new char[3];
      JsonParser jsonParser0 = jsonFactory0.createParser(charArray0);
      ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);
      DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();
      // Undeclared exception!
      try { 
        dateDeserializers_TimestampDeserializer0._parseBooleanPrimitive(jsonParser0, deserializationContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      NumberDeserializers.ShortDeserializer numberDeserializers_ShortDeserializer0 = NumberDeserializers.ShortDeserializer.wrapperInstance;
      Converter<Object, Long> converter0 = (Converter<Object, Long>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Long> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Long>(converter0, (JavaType) null, numberDeserializers_ShortDeserializer0);
      Converter<Object, CreatorProperty> converter1 = (Converter<Object, CreatorProperty>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<CreatorProperty> stdDelegatingDeserializer1 = new StdDelegatingDeserializer<CreatorProperty>(converter1, (JavaType) null, stdDelegatingDeserializer0);
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      float float0 = stdDelegatingDeserializer1._parseFloatPrimitive(defaultDeserializationContext_Impl0, "-510");
      assertEquals((-510.0F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Converter<SimpleModule, Class<Long>> converter0 = (Converter<SimpleModule, Class<Long>>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Class<Long>> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Class<Long>>(converter0);
      boolean boolean0 = stdDelegatingDeserializer0.isDefaultDeserializer(stdDelegatingDeserializer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Class<Long> class0 = Long.TYPE;
      Short short0 = new Short((short)255);
      Class<Short> class1 = Short.class;
      NumberDeserializers.ShortDeserializer numberDeserializers_ShortDeserializer0 = new NumberDeserializers.ShortDeserializer(class1, short0);
      StdKeyDeserializer stdKeyDeserializer0 = new StdKeyDeserializer((short)1, class0, (FromStringDeserializer<?>) null);
      boolean boolean0 = numberDeserializers_ShortDeserializer0.isDefaultKeyDeserializer(stdKeyDeserializer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      NumberDeserializers.FloatDeserializer numberDeserializers_FloatDeserializer0 = NumberDeserializers.FloatDeserializer.wrapperInstance;
      Class<?> class0 = numberDeserializers_FloatDeserializer0.getValueClass();
      assertFalse(class0.isInterface());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StringArrayDeserializer stringArrayDeserializer0 = StringArrayDeserializer.instance;
      Class<SimpleModule> class0 = SimpleModule.class;
      ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, (TypeBindings) null);
      // Undeclared exception!
      try { 
        stringArrayDeserializer0.findDeserializer((DeserializationContext) null, resolvedRecursiveType0, (BeanProperty) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      PrimitiveArrayDeserializers.CharDeser primitiveArrayDeserializers_CharDeser0 = new PrimitiveArrayDeserializers.CharDeser();
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      // Undeclared exception!
      try { 
        primitiveArrayDeserializers_CharDeser0._failDoubleToIntCoercion((JsonParser) null, defaultDeserializationContext_Impl0, "`mRLA??8");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      NumberDeserializers.LongDeserializer numberDeserializers_LongDeserializer0 = NumberDeserializers.LongDeserializer.wrapperInstance;
      BufferRecycler bufferRecycler0 = new BufferRecycler();
      IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
      byte[] byteArray0 = new byte[7];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      ObjectMapper objectMapper0 = new ObjectMapper();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      UTF8DataInputJsonParser uTF8DataInputJsonParser0 = new UTF8DataInputJsonParser(iOContext0, 31, dataInputStream0, objectMapper0, byteQuadsCanonicalizer0, 63);
      // Undeclared exception!
      try { 
        numberDeserializers_LongDeserializer0.handleMissingEndArrayForSingle(uTF8DataInputJsonParser0, (DeserializationContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      Converter<String, Double> converter0 = (Converter<String, Double>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Double> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Double>(converter0);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      // Undeclared exception!
      try { 
        stdDelegatingDeserializer0._parseDoublePrimitive(defaultDeserializationContext_Impl0, "Nwn3Os1SJ+S55gB0");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Converter<Double, Calendar> converter0 = (Converter<Double, Calendar>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Calendar> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Calendar>(converter0);
      StdDelegatingDeserializer<Calendar> stdDelegatingDeserializer1 = new StdDelegatingDeserializer<Calendar>(stdDelegatingDeserializer0);
      assertFalse(stdDelegatingDeserializer1.isCachable());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Converter<BuilderBasedDeserializer, Double> converter0 = (Converter<BuilderBasedDeserializer, Double>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Double> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Double>(converter0);
      boolean boolean0 = stdDelegatingDeserializer0._hasTextualNull("not a valid long value");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      NumberDeserializers.ShortDeserializer numberDeserializers_ShortDeserializer0 = NumberDeserializers.ShortDeserializer.wrapperInstance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      long long0 = numberDeserializers_ShortDeserializer0._parseLongPrimitive(defaultDeserializationContext_Impl0, "0");
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      JsonGenerator.Feature jsonGenerator_Feature0 = JsonGenerator.Feature.FLUSH_PASSED_TO_STREAM;
      PrimitiveArrayDeserializers.BooleanDeser primitiveArrayDeserializers_BooleanDeser0 = new PrimitiveArrayDeserializers.BooleanDeser();
      // Undeclared exception!
      try { 
        primitiveArrayDeserializers_BooleanDeser0._reportFailedNullCoerce((DeserializationContext) null, false, jsonGenerator_Feature0, ">N6\\]vC;3P");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
      }
  }
}
