/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 07 23:35:25 GMT 2021
 */

package org.apache.commons.codec.language;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.codec.language.Soundex;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Soundex_ESTest extends Soundex_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Soundex soundex0 = new Soundex("b_Q;?ujH`~zT%3o%");
      // Undeclared exception!
      try { 
        soundex0.soundex("b_Q;?ujH`~zT%3o%");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The character is not mapped: Q
         //
         verifyException("org.apache.commons.codec.language.Soundex", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Soundex soundex0 = new Soundex("/wWW");
      String string0 = soundex0.US_ENGLISH.soundex("C8hDJc");
      assertEquals("C320", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Soundex soundex0 = new Soundex("{~G2dn|$#y[0K %b");
      // Undeclared exception!
      try { 
        soundex0.encode((Object) "{~G2dn|$#y[0K %b");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The character is not mapped: Y
         //
         verifyException("org.apache.commons.codec.language.Soundex", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Soundex soundex0 = new Soundex();
      assertEquals(4, soundex0.getMaxLength());
      
      soundex0.setMaxLength(0);
      int int0 = soundex0.getMaxLength();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Soundex soundex0 = Soundex.US_ENGLISH;
      soundex0.encode("");
      soundex0.difference("", "");
      soundex0.encode((Object) "");
      soundex0.US_ENGLISH.encode((Object) "");
      int int0 = soundex0.difference("6|~<V.|ufj*$#2", "org.apache.commons.codec.EncoderException");
      assertEquals(1, int0);
      
      String string0 = soundex0.soundex("The character is not mapped: ");
      assertEquals("T262", string0);
      
      soundex0.encode("");
      soundex0.getMaxLength();
      int int1 = soundex0.getMaxLength();
      assertEquals(4, int1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Soundex soundex0 = Soundex.US_ENGLISH;
      String string0 = soundex0.encode((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Soundex soundex0 = new Soundex();
      int int0 = soundex0.difference("X@{s:|qZ`PPf", "xhm:l%2Y");
      assertEquals(2, int0);
      assertEquals(4, soundex0.getMaxLength());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Soundex soundex0 = new Soundex("sYO#%.");
      // Undeclared exception!
      try { 
        soundex0.encode("tXO+xs1k");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The character is not mapped: T
         //
         verifyException("org.apache.commons.codec.language.Soundex", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      char[] charArray0 = new char[8];
      Soundex soundex0 = new Soundex(charArray0);
      // Undeclared exception!
      try { 
        soundex0.encode((Object) "FhSz");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The character is not mapped: S
         //
         verifyException("org.apache.commons.codec.language.Soundex", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      char[] charArray0 = new char[2];
      Soundex soundex0 = new Soundex(charArray0);
      // Undeclared exception!
      try { 
        soundex0.difference("L#Gc>%(z5p6&:;qZ", "Parameter supplied to Soundex encode is not of type java.lang.String");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The character is not mapped: L
         //
         verifyException("org.apache.commons.codec.language.Soundex", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Soundex soundex0 = null;
      try {
        soundex0 = new Soundex((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.Soundex", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Soundex soundex0 = null;
      try {
        soundex0 = new Soundex((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.Soundex", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Soundex soundex0 = Soundex.US_ENGLISH;
      String string0 = soundex0.soundex("v$p/HB");
      assertEquals("V000", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Soundex soundex0 = new Soundex();
      String string0 = soundex0.soundex("<7");
      assertEquals("", string0);
      assertEquals(4, soundex0.getMaxLength());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Soundex soundex0 = Soundex.US_ENGLISH;
      String string0 = soundex0.soundex((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Soundex soundex0 = new Soundex("w^7W4VKz{StXItQAh");
      String string0 = soundex0.US_ENGLISH.soundex("w^7W4VKz{StXItQAh");
      assertNotNull(string0);
      assertEquals("W232", string0);
      assertEquals(4, soundex0.getMaxLength());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Soundex soundex0 = new Soundex();
      int int0 = soundex0.difference("TUbAzLHQ;\"", "/+x/H}@HBg_LzU8/>");
      assertEquals(0, int0);
      assertEquals(4, soundex0.getMaxLength());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Soundex soundex0 = new Soundex();
      String string0 = soundex0.US_ENGLISH.soundex("b_Q;?ujH`~zT%3o%");
      assertNotNull(string0);
      assertEquals(4, soundex0.getMaxLength());
      assertEquals("B223", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Soundex soundex0 = new Soundex();
      Object object0 = new Object();
      try { 
        soundex0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parameter supplied to Soundex encode is not of type java.lang.String
         //
         verifyException("org.apache.commons.codec.language.Soundex", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Soundex soundex0 = new Soundex();
      Object object0 = soundex0.encode((Object) "v)-c=3\"MwDY2ib");
      assertNotNull(object0);
      assertEquals("V253", object0);
      assertEquals(4, soundex0.getMaxLength());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Soundex soundex0 = new Soundex();
      String string0 = soundex0.encode("<{^Fb_%/'");
      assertEquals(4, soundex0.getMaxLength());
      assertEquals("F000", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Soundex soundex0 = new Soundex("/wWW");
      int int0 = soundex0.getMaxLength();
      assertEquals(4, int0);
  }
}
