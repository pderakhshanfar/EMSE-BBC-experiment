/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 13 18:55:28 GMT 2021
 */

package org.apache.commons.codec.language;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.codec.language.Soundex;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Soundex_ESTest extends Soundex_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Soundex soundex0 = new Soundex();
      String string0 = soundex0.encode("WI3EHnAg6");
      assertEquals("W520", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Soundex soundex0 = new Soundex("Parameter supplied to Soundex encode is not of type java.lang.String");
      int int0 = soundex0.difference("n2k%]Q'StmMeM", ":UTP%;Z@LR(D{T'$^e");
      assertEquals(0, int0);
      assertEquals(4, soundex0.getMaxLength());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Soundex soundex0 = Soundex.US_ENGLISH;
      soundex0.setMaxLength(0);
      int int0 = soundex0.getMaxLength();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Soundex soundex0 = Soundex.US_ENGLISH;
      soundex0.setMaxLength((-2940));
      int int0 = soundex0.getMaxLength();
      assertEquals((-2940), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Soundex soundex0 = new Soundex();
      String string0 = soundex0.US_ENGLISH.encode((String) null);
      assertEquals(4, soundex0.getMaxLength());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Soundex soundex0 = new Soundex();
      String string0 = soundex0.US_ENGLISH.encode("01230120022455012623010202");
      assertEquals("", string0);
      assertEquals(4, soundex0.getMaxLength());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Soundex soundex0 = new Soundex("=m");
      // Undeclared exception!
      try { 
        soundex0.encode("=m");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The character is not mapped: M
         //
         verifyException("org.apache.commons.codec.language.Soundex", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Soundex soundex0 = new Soundex("=7wa");
      // Undeclared exception!
      try { 
        soundex0.encode((Object) "=7wa");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The character is not mapped: W
         //
         verifyException("org.apache.commons.codec.language.Soundex", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Soundex soundex0 = null;
      try {
        soundex0 = new Soundex((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.Soundex", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Soundex soundex0 = null;
      try {
        soundex0 = new Soundex((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.Soundex", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Soundex soundex0 = new Soundex("Parameter supplied to Soundex encode is not of type java.lang.String");
      String string0 = soundex0.US_ENGLISH.soundex("PPdP");
      assertEquals("P310", string0);
      assertEquals(4, soundex0.getMaxLength());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Soundex soundex0 = new Soundex();
      String string0 = soundex0.soundex("yz}Do-39CawCV'wu%");
      assertEquals("Y232", string0);
      assertEquals(4, soundex0.getMaxLength());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Soundex soundex0 = new Soundex();
      String string0 = soundex0.soundex("01230120022455012623010202");
      assertEquals("", string0);
      assertEquals(4, soundex0.getMaxLength());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Soundex soundex0 = new Soundex();
      soundex0.soundex((String) null);
      assertEquals(4, soundex0.getMaxLength());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Soundex soundex0 = new Soundex("AyP33");
      // Undeclared exception!
      try { 
        soundex0.soundex("Y^t=&qzB`4VXP&");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The character is not mapped: Y
         //
         verifyException("org.apache.commons.codec.language.Soundex", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Soundex soundex0 = Soundex.US_ENGLISH;
      int int0 = soundex0.difference("", "4,w8>@tW(h3M:@'RjH");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Soundex soundex0 = new Soundex();
      String string0 = soundex0.encode("%h\"$H8l '");
      assertEquals(4, soundex0.getMaxLength());
      assertEquals("H000", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Soundex soundex0 = new Soundex();
      String string0 = soundex0.US_ENGLISH.soundex("'lJ}Wf_hFhy5");
      assertEquals("L210", string0);
      assertEquals(4, soundex0.getMaxLength());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Soundex soundex0 = new Soundex();
      soundex0.difference((String) null, "y)Wr");
      assertEquals(4, soundex0.getMaxLength());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Soundex soundex0 = new Soundex("Parameter supplied to Soundex encode is not of type java.lang.String");
      Object object0 = new Object();
      try { 
        soundex0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parameter supplied to Soundex encode is not of type java.lang.String
         //
         verifyException("org.apache.commons.codec.language.Soundex", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Soundex soundex0 = new Soundex("Parameter supplied to Soundex encode is not of type java.lang.String");
      Object object0 = soundex0.encode((Object) "OdtP");
      assertEquals(4, soundex0.getMaxLength());
      assertEquals("Oati", object0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Soundex soundex0 = new Soundex(".$bg+)+0\"c");
      // Undeclared exception!
      try { 
        soundex0.difference(".$bg+)+0\"c", "\"Ik)[hU=}n>'");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The character is not mapped: K
         //
         verifyException("org.apache.commons.codec.language.Soundex", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      char[] charArray0 = new char[7];
      Soundex soundex0 = new Soundex(charArray0);
      assertEquals(4, soundex0.getMaxLength());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Soundex soundex0 = new Soundex();
      int int0 = soundex0.difference(".$bg+)+0\"c", "\"Ik)[hU=}n>'");
      assertEquals(2, int0);
      assertEquals(4, soundex0.getMaxLength());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Soundex soundex0 = new Soundex();
      int int0 = soundex0.getMaxLength();
      assertEquals(4, int0);
  }
}
