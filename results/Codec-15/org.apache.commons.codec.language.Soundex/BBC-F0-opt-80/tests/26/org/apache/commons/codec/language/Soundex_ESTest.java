/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 24 03:23:21 GMT 2021
 */

package org.apache.commons.codec.language;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.codec.language.Soundex;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Soundex_ESTest extends Soundex_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Soundex soundex0 = new Soundex();
      String string0 = soundex0.encode("8O-DH'gDiQEUk'>Y5t");
      assertEquals("O323", string0);
      assertEquals(4, soundex0.getMaxLength());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Soundex soundex0 = new Soundex("org.apache.commons.codec.language.Soundex");
      String string0 = soundex0.encode("U,md#xhKv8H:T:Ufv-X");
      assertEquals("U.c.", string0);
      assertEquals(4, soundex0.getMaxLength());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Soundex soundex0 = Soundex.US_ENGLISH;
      soundex0.getMaxLength();
      soundex0.difference("Parameter supplied to Soundex encode is not of type java.lang.String", "Parameter supplied to Soundex encode is not of type java.lang.String");
      soundex0.setMaxLength((-949));
      soundex0.US_ENGLISH.setMaxLength(340);
      soundex0.getMaxLength();
      String string0 = null;
      soundex0.setMaxLength((-949));
      soundex0.difference("Parameter supplied to Soundex encode is not of type java.lang.String", "Parameter supplied to Soundex encode is not of type java.lang.String");
      soundex0.encode((String) null);
      try { 
        soundex0.US_ENGLISH.encode((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parameter supplied to Soundex encode is not of type java.lang.String
         //
         verifyException("org.apache.commons.codec.language.Soundex", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Soundex soundex0 = new Soundex();
      assertEquals(4, soundex0.getMaxLength());
      
      soundex0.setMaxLength((-1));
      int int0 = soundex0.getMaxLength();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Soundex soundex0 = new Soundex();
      int int0 = soundex0.difference("M?ed~", "M?ed~");
      assertEquals(4, int0);
      assertEquals(4, soundex0.getMaxLength());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Soundex soundex0 = new Soundex("RbD?u&P'L\"UX\\CI3");
      // Undeclared exception!
      try { 
        soundex0.encode("RbD?u&P'L\"UX\\CI3");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The character is not mapped: R
         //
         verifyException("org.apache.commons.codec.language.Soundex", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Soundex soundex0 = new Soundex("");
      // Undeclared exception!
      try { 
        soundex0.difference("lm*T?$ZI?(_cl", "lm*T?$ZI?(_cl");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The character is not mapped: L
         //
         verifyException("org.apache.commons.codec.language.Soundex", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Soundex soundex0 = null;
      try {
        soundex0 = new Soundex((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.Soundex", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Soundex soundex0 = null;
      try {
        soundex0 = new Soundex((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.Soundex", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Soundex soundex0 = new Soundex("iIQ/'(I&{i&");
      // Undeclared exception!
      try { 
        soundex0.soundex("iIQ/'(I&{i&");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The character is not mapped: Q
         //
         verifyException("org.apache.commons.codec.language.Soundex", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Soundex soundex0 = new Soundex();
      String string0 = soundex0.soundex("Parameter supplied to Soundex encode is not of type java.lang.String");
      assertEquals(4, soundex0.getMaxLength());
      assertEquals("P653", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      char[] charArray0 = new char[4];
      Soundex soundex0 = new Soundex(charArray0);
      String string0 = soundex0.US_ENGLISH.soundex("01230120022455012623010202");
      assertEquals(4, soundex0.getMaxLength());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      char[] charArray0 = new char[7];
      Soundex soundex0 = new Soundex(charArray0);
      soundex0.US_ENGLISH.soundex((String) null);
      assertEquals(4, soundex0.getMaxLength());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Soundex soundex0 = new Soundex();
      String string0 = soundex0.US_ENGLISH.encode("01230120022455012623010202");
      assertNotNull(string0);
      assertEquals(4, soundex0.getMaxLength());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      char[] charArray0 = new char[7];
      Soundex soundex0 = new Soundex(charArray0);
      // Undeclared exception!
      try { 
        soundex0.encode((Object) "I151");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The character is not mapped: I
         //
         verifyException("org.apache.commons.codec.language.Soundex", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Soundex soundex0 = new Soundex();
      String string0 = soundex0.soundex("!~]P_H!+b6(&D");
      assertNotNull(string0);
      assertEquals("P300", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Soundex soundex0 = new Soundex();
      String string0 = soundex0.encode("Zw!wWV|=2\tM}8P");
      assertEquals(4, soundex0.getMaxLength());
      assertEquals("Z510", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Soundex soundex0 = new Soundex("org.apache.commons.codec.language.Soundex");
      Object object0 = soundex0.encode((Object) "org.apache.commons.codec.language.Soundex");
      assertEquals(4, soundex0.getMaxLength());
      assertEquals("Osao", object0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Soundex soundex0 = new Soundex("org.apache.commons.codec.language.Soundex");
      int int0 = soundex0.difference("Osao", "m`;!;w)H!B");
      assertEquals(4, soundex0.getMaxLength());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      char[] charArray0 = new char[4];
      Soundex soundex0 = new Soundex(charArray0);
      String string0 = soundex0.US_ENGLISH.encode("QS9h=H@FbeSYf1<L9T");
      assertEquals(4, soundex0.getMaxLength());
      assertEquals("Q121", string0);
  }
}
