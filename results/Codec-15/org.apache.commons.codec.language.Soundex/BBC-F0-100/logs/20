* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-100
* Going to generate test cases for class: org.apache.commons.codec.language.Soundex
* Starting Client-0
* Connecting to master process on port 9554
* Analyzing classpath: 
  - subjects/buggy-versions/Codec-15/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.codec.language.Soundex
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 461
* Using seed 183195230
* Starting evolution
bbc usage percentage is: 100%
* Initial Number of Goals in DynaMOSA = 114 / 461
Number of times BBC is called, activated, and useful for org.apache.commons.codec.language.Soundex.getMappingCode(Ljava/lang/String;I)C: I50 Branch 6 IF_ICMPEQ L192 - true: 4,0,0| Number of FF evals: 17727
Number of times BBC is called, activated, and useful for org.apache.commons.codec.language.Soundex.map(C)C: I9 Branch 9 IFLT L231 - true: 472186,429173,353320| Number of FF evals: 401676
Number of times BBC is called, activated, and useful for org.apache.commons.codec.language.Soundex.getMappingCode(Ljava/lang/String;I)C: I53 Branch 7 IF_ICMPEQ L192 - true: 2,0,0| Number of FF evals: 7690
* Search finished after 601s and 7911 generations, 2935355 statements, best individual has fitness: 17.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 51
* Number of covered goals: 51
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 98%
* Total number of goals: 42
* Number of covered goals: 41
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 7
* Number of covered goals: 7
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 97%
* Total number of goals: 294
* Number of covered goals: 286
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 86%
* Total number of goals: 14
* Number of covered goals: 12
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 9
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 9
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 98%
* Total number of goals: 42
* Number of covered goals: 41
* Generated 24 tests with total length 50
* Resulting test suite's coverage: 91% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 66%
* Compiling and checking tests
[MASTER] 13:51:44.575 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:51:44.645 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:51:44.691 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:51:44.738 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:51:44.794 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:51:44.830 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:51:44.867 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:51:44.903 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:51:44.935 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:51:44.966 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:51:45.013 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:51:45.048 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:51:45.084 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:51:45.123 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:51:45.149 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:51:45.183 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:51:45.213 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:51:45.238 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:51:45.266 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:51:45.294 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:51:45.328 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:51:45.355 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:51:45.385 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:51:45.409 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:51:45.502 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:51:45.590 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing tests to file
* Writing JUnit test case 'Soundex_ESTest' to results/Codec-15/org.apache.commons.codec.language.Soundex/BBC-F0-100/tests/20
* Done!

* Computation finished
