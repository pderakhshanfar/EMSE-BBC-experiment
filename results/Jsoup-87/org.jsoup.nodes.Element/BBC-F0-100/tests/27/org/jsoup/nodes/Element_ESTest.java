/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 06 22:30:06 GMT 2021
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.CharArrayWriter;
import java.io.IOException;
import java.io.PipedWriter;
import java.io.StringWriter;
import java.nio.BufferOverflowException;
import java.nio.CharBuffer;
import java.nio.ReadOnlyBufferException;
import java.nio.charset.Charset;
import java.util.Collection;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import java.util.regex.Pattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.Comment;
import org.jsoup.nodes.DataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.DocumentType;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.nodes.PseudoTextElement;
import org.jsoup.nodes.TextNode;
import org.jsoup.nodes.XmlDeclaration;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Parser;
import org.jsoup.parser.Tag;
import org.jsoup.select.Elements;
import org.jsoup.select.Evaluator;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Element_ESTest extends Element_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(", currentElement=", ", currentElement=");
      DataNode dataNode0 = DataNode.createFromEncoded("html", "<html>\n <head></head>\n <body>\n  , currentElement=\n </body>\n</html>");
      document0.prependChild(dataNode0);
      document0.toString();
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Document document0 = new Document("0:cL`,H");
      document0.toggleClass("!<'}#LWZc8o?dWie");
      document0.hasClass("P?fpcShwXEmuJxsg");
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(", currentlementO", ", currentlementO");
      Document document1 = Parser.parse("th", ", currentlementO");
      document0.prependChild(document1);
      document0.appendChild(document0);
      document0.previousElementSiblings();
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Document document0 = new Document("T*1P.gb]$[BW~b3S`i");
      document0.reparentChild(document0);
      document0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Document document0 = Document.createShell("iframe");
      Node[] nodeArray0 = new Node[9];
      // Undeclared exception!
      try { 
        document0.insertChildren((-1), nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array must not contain any null objects
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Document document0 = Parser.parse("value", "1oDw");
      StringWriter stringWriter0 = new StringWriter();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document0.outerHtmlTail(stringWriter0, 1499, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      Tag tag0 = Tag.valueOf("There is an u3read tokYn pendinj!", parseSettings0);
      Attributes attributes0 = new Attributes();
      Element element0 = new Element(tag0, "There is an u3read tokYn pendinj!", attributes0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Element element0 = new Element("v-v)aHWB`bl[");
      element0.nodelistChanged();
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput(" <%s>", "");
      document0.getElementsMatchingOwnText("K?mJFMK!Ji");
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput(" <%s>", "");
      Element element0 = document0.prependElement(" <%s>");
      element0.wrap("5");
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Document document0 = new Document("textarea");
      Element element0 = document0.prependElement("textarea");
      element0.wrap("<textarea></textarea>");
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("7y13+3Q]@G+$w_", "7y13+3Q]@G+$w_");
      Element element0 = document0.head();
      element0.wrap("7y13+3Q]@G+$w_");
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Element$2", "org.jsoup.nodes.Element$2");
      Document document1 = Parser.parse("</", "org.jsoup.nodes.Element$2");
      Element element0 = document0.appendTo(document1);
      element0.val("");
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("CQoiGOQE", parseSettings0);
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "CQoiGOQE", attributes0);
      pseudoTextElement0.setSiblingIndex((-504));
      pseudoTextElement0.val("CQoiGOQE");
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("pre", parseSettings0);
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "pre", attributes0);
      pseudoTextElement0.val("ascii");
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("~wx[V`PK", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("~wx[V`PK");
      Attributes attributes0 = cDataNode0.attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "~wx[V`PK", attributes0);
      Element element0 = pseudoTextElement0.val("~wx[V`PK");
      element0.val();
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Document document0 = new Document("b-ul");
      Element element0 = document0.prependElement("br");
      element0.toggleClass("br");
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("textarea", "textarea");
      Element element0 = document0.body();
      element0.text("fZ");
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("7y13+3Q]@G+$w_", "7y13+3Q]@G+$w_");
      Element element0 = document0.head();
      element0.text("7y13+3Q]@G+$w_");
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("7y13+3Q]@G+$w_", "7y13+3Q]@G+$w_");
      document0.text("7y13+3Q]@G+$w_");
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Document document0 = new Document(" <%s>");
      document0.text();
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Document document0 = Parser.parse("Insert position out of bounds.", "Insert position out of bounds.");
      Document document1 = document0.ownerDocument();
      document1.siblingIndex = 6;
      document1.tagName(",k*0n8+r6DLm");
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Document document0 = Document.createShell("ismNp");
      document0.siblingIndex = (-1207);
      document0.tagName("ismNp");
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("pre", parseSettings0);
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "pre", attributes0);
      pseudoTextElement0.tagName("pre");
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("CQoFyGOQE", "CQoFyGOQE");
      document0.tagName();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Document document0 = Document.createShell("br");
      Element element0 = document0.prependElement("br");
      Element element1 = element0.shallowClone();
      element1.tag();
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Document document0 = Document.createShell("Z;,.ib|YlY");
      Element element0 = document0.head();
      element0.tag();
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Document document0 = Document.createShell("br");
      document0.tag();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("[E;3,.nb|YY", "</");
      Element element0 = document0.head();
      element0.shallowClone();
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput(" <%s>", "");
      document0.selectFirst("#root");
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("CQoFGOQE", parseSettings0);
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "CQoFGOQE", attributes0);
      pseudoTextElement0.selectFirst("CQoFGOQE");
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("7y13+3Q]@G+$w_", "7y13+3Q]@G+$w_");
      document0.selectFirst("html > head");
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("<lxWsZzo23T7l8_4<^></lxWsZzo23T7l8_4<^>", "");
      document0.normalise();
      document0.selectFirst("html");
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Element element0 = new Element("org.jsoup.select.Evaluator$AttributeWithValueStarting");
      element0.select("value");
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("s+", "s+");
      document0.select("html");
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("CQoiGOQE", parseSettings0);
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "CQoiGOQE", attributes0);
      pseudoTextElement0.setSiblingIndex((-504));
      pseudoTextElement0.removeClass("CQoiGOQE");
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Tag tag0 = Tag.valueOf("style");
      Element element0 = new Element(tag0, " > ");
      element0.removeClass("body");
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(", currentlementO", ", currentlementO");
      Element element0 = document0.appendChild(document0);
      element0.removeClass(", currentlementO");
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Document document0 = Document.createShell("br");
      Element element0 = document0.head();
      element0.prependText("<html>\n <head></head>\n <body></body>\n</html>");
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput(" <%s>", "");
      document0.appendChild(document0);
      document0.prependText("1cwF/UU!");
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Element element0 = new Element("v-v)aHWB`bl[");
      element0.prependText("AW|B^8nb");
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Document document0 = Parser.parse("AfterBody", "ee]P?&VR");
      Element element0 = document0.body();
      element0.prependChild(document0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Document document0 = Document.createShell("Z;,.ib|YlY");
      Document document1 = Parser.parse("Z;,.ib|YlY", ":eq(");
      document0.appendTo(document1);
      document0.prepend("</");
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(",^ZO !ijuy!'", ",^ZO !ijuy!'");
      Element element0 = document0.head();
      element0.prepend(",^ZO !ijuy!'");
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Document document0 = new Document("TF%-qBbvW)");
      document0.prepend("");
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Element element0 = new Element("v-v)aHWB`bl[");
      element0.parents();
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("CQoFyGOQE", "CQoFyGOQE");
      Element element0 = document0.tagName("ismap");
      Element element1 = element0.prependElement("CQoFyGOQE");
      element1.parents();
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Document document0 = Document.createShell("</");
      document0.prepend("</");
      Element element0 = document0.head();
      element0.parent();
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Document document0 = Document.createShell("ul");
      Element element0 = document0.prependElement("br");
      element0.parent();
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("7y123+3Q]@K+$w_", "7y123+3Q]@K+$w_");
      document0.reparentChild(document0);
      document0.empty();
      document0.parent();
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("s+", "o");
      CDataNode cDataNode0 = new CDataNode("o");
      Element element0 = document0.prependChild(cDataNode0);
      element0.ownText();
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.nodes.Element$2");
      document0.nodeName();
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      Element element0 = document0.prependElement("oV^TfnHGN7&Duv?L_");
      Element element1 = element0.nextElementSibling();
      element1.toggleClass("");
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Document document0 = Document.createShell("option[selected]");
      Element element0 = document0.head();
      element0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(".$iSz5yleI6_cK_1\"5:", ".$iSz5yleI6_cK_1\"5:");
      Element element0 = document0.head();
      element0.isBlock();
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Element element0 = new Element("org.jsoup.select.Evaluator$AttributeWithValueStarting");
      Evaluator.IsEmpty evaluator_IsEmpty0 = new Evaluator.IsEmpty();
      element0.is((Evaluator) evaluator_IsEmpty0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.nodes.Element$2");
      Evaluator.ContainsText evaluator_ContainsText0 = new Evaluator.ContainsText("org.jsoup.nodes.Element$2");
      document0.is((Evaluator) evaluator_ContainsText0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("s+");
      Attributes attributes0 = cDataNode0.attributes();
      Tag tag0 = Tag.valueOf("5");
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "s+", attributes0);
      pseudoTextElement0.is("5");
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Document document0 = Document.createShell("7y123+3Q]@K+$w_");
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = (Node) document0;
      nodeArray0[1] = (Node) document0;
      document0.insertChildren(0, nodeArray0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Document document0 = new Document(", currentlementO");
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) document0;
      document0.insertChildren((-1), nodeArray0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("org.jsoup.selc.Evaluator$AttribteWithValueNot", "org.jsoup.selc.Evaluator$AttribteWithValueNot");
      document0.siblingIndex = (-1164);
      Elements elements0 = document0.getElementsByAttributeValueStarting("org.jsoup.selc.Evaluator$AttribteWithValueNot", "org.jsoup.selc.Evaluator$AttribteWithValueNot");
      document0.insertChildren((-1), (Collection<? extends Node>) elements0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("v-v)aHWB`bl[", "v-v)aHWB`bl[");
      Elements elements0 = document0.getElementsByAttributeValueStarting("v-v)aHWB`bl[", "1~AZ::4WfySY");
      document0.reparentChild(document0);
      document0.insertChildren((-2), (Collection<? extends Node>) elements0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput(" <%s>", "");
      Elements elements0 = document0.getElementsContainingOwnText(" <%s>");
      document0.insertChildren(0, (Collection<? extends Node>) elements0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Document document0 = Document.createShell("Zrg.j:oup.nodes.Element$2");
      Element element0 = document0.body();
      element0.html("</");
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(" <%s>", " <%s>");
      Element element0 = document0.head();
      element0.html(" <%s>");
      element0.wrap("NR");
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Tag tag0 = Tag.valueOf("HSoQ>tm:Omhy_C");
      Element element0 = new Element(tag0, "head");
      Element element1 = element0.prependElement(" > ");
      element1.html(" > ");
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("jpG");
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag0 = Tag.valueOf("VIV=c", parseSettings0);
      Attributes attributes0 = cDataNode0.attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "Zrg.j:oup.nodes.Element$2", attributes0);
      pseudoTextElement0.html("");
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Document document0 = Document.createShell("iframe");
      MockFileWriter mockFileWriter0 = new MockFileWriter("br");
      document0.html(mockFileWriter0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Document document0 = new Document("TF%-qBbvW)");
      document0.html();
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      Tag tag0 = Tag.valueOf("xGD9j|NQKd\"5OVdn<", parseSettings0);
      Element element0 = new Element(tag0, "xGD9j|NQKd\"5OVdn<");
      element0.hasAttributes();
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("7y13+3Q]@G+$w_", "7y13+3Q]@G+$w_");
      Pattern pattern0 = Pattern.compile("");
      document0.getElementsMatchingText(pattern0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("P*zG", "P*zG");
      document0.getElementsMatchingText("");
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("org.jsoup.selc.Evaluator$AttribteWithValueNot", "org.jsoup.selc.Evaluator$AttribteWithValueNot");
      Pattern pattern0 = Pattern.compile("org.jsoup.selc.Evaluator$AttribteWithValueNot", (-1));
      document0.getElementsMatchingOwnText(pattern0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Document document0 = Document.createShell("Zrg.j:oup.nodes.Element$2");
      document0.appendText("InTableText");
      document0.getElementsMatchingOwnText(".");
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Document document0 = Document.createShell("br");
      document0.getElementsByTag("attributeNameCharsSorted");
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("7y13+3Q]@G+$w_", "7y13+3Q]@G+$w_");
      Element element0 = document0.head();
      element0.getElementsByIndexLessThan(133);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput(" <%s>", "");
      document0.getElementsByIndexGreaterThan((-740));
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("}np2|AZ_4y6%~", "~wx[V`PK");
      document0.getElementsByIndexEquals(1);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Document document0 = Parser.parse(";w!E%vTqc2`r", ";w!E%vTqc2`r");
      document0.getElementsByAttributeValueNot(" />", "             ");
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("7y13+3Q]@G+$w_", "7y13+3Q]@G+$w_");
      Element element0 = document0.attr("7y13+3Q]@G+$w_", true);
      element0.getElementsByAttributeStarting("7y13+3Q]@G+$w_");
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("ul", "ul");
      Element element0 = document0.prependElement("br");
      element0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(", currentlement=", ", currentlement=");
      Element element0 = document0.appendChild(document0);
      element0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("!", "7tG\u0002u$i^U>");
      Element element0 = document0.head();
      element0.empty();
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("}np2|AZ_4y6%~", "~wx[V`PK");
      document0.empty();
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput(" <%s>", "");
      Element element0 = document0.appendChild(document0);
      element0.elementSiblingIndex();
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("[E;3,.nb|YY", "</");
      Comment comment0 = new Comment("[E;3,.nb|YY");
      Element element0 = document0.body();
      element0.doClone(comment0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("[E;3,.nb|YY", "</");
      Element element0 = document0.body();
      element0.doClone((Node) null);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("[E;3,.nb|YY", "</");
      document0.doClone((Node) null);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(", currentlement=", ", currentlement=");
      Element element0 = document0.prependElement(", currentlement=");
      element0.doClone(document0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("br", "attributeDoubleValueCharsSorted");
      Element element0 = document0.head();
      element0.clone();
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("7y13+3Q]@G+$w_", "7y13+3Q]@G+$w_");
      document0.clone();
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Document document0 = Parser.parse("java.lang.string@0000000038 cp367 csascii iso-ir-6 ascii commentstartdash ansi_x3.4-1986 ascii7 default iso_646.irv:1991 iso646-us ibm367 646 us", "java.lang.string@0000000038 cp367 csascii iso-ir-6 ascii commentstartdash ansi_x3.4-1986 ascii7 default iso_646.irv:1991 iso646-us ibm367 646 us");
      Charset charset0 = Charset.defaultCharset();
      Set<String> set0 = charset0.aliases();
      document0.siblingIndex = (-887);
      document0.classNames(set0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Document document0 = Document.createShell("Zrg.j:oup.nodes.Element$2");
      Element element0 = document0.body();
      Set<String> set0 = document0.classNames();
      element0.classNames(set0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Document document0 = Document.createShell("X:fJ_%It");
      document0.reparentChild(document0);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      document0.classNames((Set<String>) linkedHashSet0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("}np2|AZ_4y6%~", "~wx[V`PK");
      Charset charset0 = Charset.defaultCharset();
      Set<String> set0 = charset0.aliases();
      document0.classNames(set0);
      document0.classNames();
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Document document0 = Document.createShell("Zrg.j:oup.nodes.Element$2");
      Charset charset0 = Charset.defaultCharset();
      Set<String> set0 = charset0.aliases();
      document0.classNames(set0);
      document0.className();
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Document document0 = new Document("@c");
      document0.children();
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("CQoFGOQE", parseSettings0);
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "CQoFGOQE", attributes0);
      pseudoTextElement0.childNodeSize();
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("7y13+3Q]@G+$w_", "7y13+3Q]@G+$w_");
      document0.childNodeSize();
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("CQoFyGOQE", "CQoFyGOQE");
      document0.prependElement("CQoFyGOQE");
      document0.child(0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("ul", "ul");
      document0.prependElement("ul");
      document0.child(0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Element element0 = new Element("v-v)aHWB`bl[");
      Document document0 = Document.createShell("il5@)");
      element0.prependChild(document0);
      document0.before((Node) document0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      Element element0 = document0.prependElement("oV^TfnHGN7&Duv?L_");
      element0.before("");
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput(" <%s>", "");
      Element element0 = document0.head();
      element0.prependElement(" <%s>");
      element0.before("4Rb0T");
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Document document0 = Document.createShell("br");
      document0.baseUri();
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Element element0 = new Element("ScriptDataLessthanSign");
      element0.baseUri();
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("org.jsoup.selc.Evaluator$AttribteWithValueNot", "org.jsoup.selc.Evaluator$AttribteWithValueNot");
      Charset charset0 = document0.charset();
      Set<String> set0 = charset0.aliases();
      Element element0 = document0.classNames(set0);
      element0.attributes();
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("textarea", "qi~.K|NpOo;H&J");
      Element element0 = document0.body();
      element0.attr("9[7TG", true);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Document document0 = new Document("y{@0|uXs[B'`&");
      Document document1 = document0.normalise();
      Document document2 = document1.clone();
      document2.appendTo(document0);
      document2.attr("y{@0|uXs[B'`&", "y{@0|uXs[B'`&");
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("$wW'", "$wW'");
      Element element0 = document0.head();
      element0.attr("{{&5q-i5", (String) null);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Document document0 = new Document("y{@0|uXs[B'`&");
      document0.normalise();
      document0.attr("y{@0|uXs[B'`&", "y{@0|uXs[B'`&");
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput(" <%s>", "");
      Element element0 = document0.body();
      element0.appendTo(document0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("org.jsoup.selc.Evaluator$AttribteWithValueNot", "org.jsoup.selc.Evaluator$AttribteWithValueNot");
      document0.siblingIndex = (-1164);
      document0.appendText("org.jsoup.selc.Evaluator$AttribteWithValueNot");
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(" _8fV3_=OrnS(j?!R", "eo");
      Element element0 = document0.body();
      element0.appendText("                   ");
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("br", "attributeDoubleValueCharsSorted");
      Element element0 = document0.head();
      element0.appendElement("br");
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("br", "attributeDoubleValueCharsSorted");
      document0.appendElement("br");
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("ul", "ul");
      document0.appendElement("ul");
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Tag tag0 = Tag.valueOf("h2", (ParseSettings) null);
      FormElement formElement0 = new FormElement(tag0, "h2", (Attributes) null);
      TextNode textNode0 = new TextNode("link", "h2");
      formElement0.appendChild(textNode0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Tag tag0 = Tag.valueOf("ip~rT;CE[&A");
      Element element0 = new Element(tag0, "ip~rT;CE[&A");
      element0.siblingIndex = 4;
      element0.append("n?+t");
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("CQoFyGOQE", "CQoFyGOQE");
      document0.siblingIndex = (-738);
      document0.append("V0ydqA3S2$[-$");
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", " <%s>");
      Element element0 = document0.prependElement(" <%s>");
      element0.append("%7e4b@xnY'L'CA' {+");
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Tag tag0 = Tag.valueOf(".{#y5R)bi5");
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, ".{#y5R)bi5", (Attributes) null);
      pseudoTextElement0.append("");
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Document document0 = new Document("java.lang.string@0000000038 cp367 csascii iso-ir-6 audio iso_646.irv:1983 ansi_x3.4-1986 ascii7 default iso_646.irv:1991 iso646-us ibm367 646 us");
      Document document1 = document0.clone();
      Document document2 = document0.normalise();
      Element element0 = document1.appendTo(document0);
      element0.after((Node) document2);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Document document0 = Document.createShell("~Etd");
      Element element0 = document0.body();
      element0.after("^u6U");
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("7yg63+3Q'[]@K+$w_", "7yg63+3Q'[]@K+$w_");
      Element element0 = document0.prependElement(" U0:Z~9Ad");
      element0.after(" U0:Z~9Ad");
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput(" <%s>", "");
      Element element0 = document0.head();
      element0.prependElement(" <%s>");
      element0.after("html");
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Document document0 = Parser.parse("java.lang.string@0000000038 cp367 csascii iso-ir-6 ascii commentstartdash ansi_x3.4-1986 ascii7 default iso_646.irv:1991 iso646-us ibm367 646 us", "java.lang.string@0000000038 cp367 csascii iso-ir-6 ascii commentstartdash ansi_x3.4-1986 ascii7 default iso_646.irv:1991 iso646-us ibm367 646 us");
      document0.siblingIndex = (-887);
      document0.addClass("java.lang.string@0000000038 cp367 csascii iso-ir-6 ascii commentstartdash ansi_x3.4-1986 ascii7 default iso_646.irv:1991 iso646-us ibm367 646 us");
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Document document0 = Parser.parse("AfterBody", "ee]P?&VR");
      Element element0 = document0.body();
      element0.addClass("ee]P?&VR");
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Element element0 = new Element("v-v)aHWB`bl[");
      DocumentType documentType0 = new DocumentType("v-v)aHWB`bl[", "v-v)aHWB`bl[", "v-v)aHWB`bl[");
      element0.parentNode = (Node) documentType0;
      element0.addClass("v-v)aHWB`bl[");
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(", currentElement=", ", currentElement=");
      Element element0 = document0.head();
      element0.after((Node) document0);
      // Undeclared exception!
      element0.wrap("<html>\n <head></head>\n <body>\n  , currentElement=\n </body>\n</html>");
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Document document0 = new Document("$wW'");
      // Undeclared exception!
      try { 
        document0.wrap("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("org.jsoup.selc.Evaluator$AttribteWithValueNot", "org.jsoup.selc.Evaluator$AttribteWithValueNot");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.val("org.jsoup.selc.Evaluator$AttribteWithValueNot");
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("CQoFGOQE", parseSettings0);
      Attributes attributes0 = new Attributes();
      attributes0.keys = null;
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "CQoFGOQE", attributes0);
      // Undeclared exception!
      try { 
        pseudoTextElement0.val("CQoFGOQE");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      Tag tag0 = Tag.valueOf("~wx[V`PK", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("~wx[V`PK");
      Attributes attributes0 = cDataNode0.attributes();
      String[] stringArray0 = new String[0];
      attributes0.keys = stringArray0;
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "@^\u0005]*5~kF;8n", attributes0);
      // Undeclared exception!
      try { 
        pseudoTextElement0.val("~wx[V`PK");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("7yg6Vl3+3Q'[]@K+$w_", parseSettings0);
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("7yg6Vl3+3Q'[]@K+$w_", "7yg6Vl3+3Q'[]@K+$w_");
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "7yg6Vl3+3Q'[]@K+$w_", attributes1);
      String[] stringArray0 = new String[0];
      attributes1.keys = stringArray0;
      // Undeclared exception!
      try { 
        pseudoTextElement0.val();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("7y13+3Q]@G+$w_", "7y13+3Q]@G+$w_");
      // Undeclared exception!
      try { 
        document0.toggleClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("KA ", "Tag cannot be self closing; not a void tag");
      // Undeclared exception!
      try { 
        document0.text((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Document document0 = Parser.parse("cB: 4A'h_)X", "K:fK");
      // Undeclared exception!
      try { 
        document0.text((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("org.jsoup.selc.Evaluator$AttribteWithValueNot", "org.jsoup.selc.Evaluator$AttribteWithValueNot");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.tagName("Unexpected token [%s] when in state [%s]");
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Element element0 = new Element("=c$");
      Document document0 = new Document("=c$");
      document0.reparentChild(element0);
      // Undeclared exception!
      try { 
        element0.siblingElements();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput(" <%s>", " <%s>");
      // Undeclared exception!
      try { 
        document0.selectFirst("HSoQ>tm:Omhy_C");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query 'tm:Omhy_C': unexpected token at ':Omhy_C'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Document document0 = Document.createShell("pU}+Tc` ");
      // Undeclared exception!
      try { 
        document0.select("org.jsoup.nodes.Element$1");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query 'org.jsoup.nodes.Element$1': unexpected token at '$1'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Tag tag0 = Tag.valueOf("org.jsoup.nodes.Element$1");
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "org.jsoup.nodes.Element$2", attributes0);
      // Undeclared exception!
      try { 
        pseudoTextElement0.select("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("c", "c");
      // Undeclared exception!
      try { 
        document0.removeClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Document document0 = Document.createShell("ismNp");
      DataNode dataNode0 = new DataNode("ismNp");
      dataNode0.reparentChild(document0);
      // Undeclared exception!
      try { 
        document0.previousElementSiblings();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(" <%s>", " <%s>");
      Element element0 = document0.head();
      element0.before((Node) document0);
      // Undeclared exception!
      element0.prependElement(" <%s>");
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Document document0 = new Document(",;P\" currentlementO");
      List<Node> list0 = Parser.parseXmlFragment(".", "#");
      document0.childNodes = list0;
      // Undeclared exception!
      try { 
        document0.prependElement(",;P\" currentlementO");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableList", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("ul", "ul");
      document0.childNodes = null;
      // Undeclared exception!
      try { 
        document0.prependElement("ul");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Tag tag0 = Tag.valueOf("org.jsoup.select.Evaluator$AttributeWithValueNot");
      Element element0 = new Element(tag0, "org.jsoup.nodes.Attributes");
      // Undeclared exception!
      try { 
        element0.prependElement((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("org.jsoup.selc.Evaluator$AttribteWithValueNot", "org.jsoup.selc.Evaluator$AttribteWithValueNot");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.prepend(".");
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Document document0 = Document.createShell("pU}+Tc` ");
      // Undeclared exception!
      try { 
        document0.prepend((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Document document0 = Document.createShell("CQoFyGOQE");
      TextNode textNode0 = TextNode.createFromEncoded("br");
      document0.parentNode = (Node) textNode0;
      // Undeclared exception!
      try { 
        document0.parents();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Document document0 = Document.createShell("gici");
      MockPrintStream mockPrintStream0 = new MockPrintStream("z2}MyI8 7/y");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.indentAmount(8192);
      // Undeclared exception!
      document0.outerHtmlTail(mockPrintStream0, 116, document_OutputSettings1);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(", currentlement=", ", currentlement=");
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "[%s*=%s]");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlTail(charBuffer0, 141, document_OutputSettings0);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.StringCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("X:fJ_Y%It", "X:fJ_Y%It");
      char[] charArray0 = new char[5];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 2, 2);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlTail(charBuffer0, 2, document_OutputSettings0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Document document0 = Document.createShell(", curentlement");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlTail((Appendable) null, 46, document_OutputSettings0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("_<>h+H55o`3|z1", "_<>h+H55o`3|z1");
      PipedWriter pipedWriter0 = new PipedWriter();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      try { 
        document0.outerHtmlTail(pipedWriter0, (-371), document_OutputSettings0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Document document0 = new Document("3Y-Px Rm--b+ma?L?");
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.indentAmount(8364);
      // Undeclared exception!
      document0.outerHtmlHead(charArrayWriter0, 130, document_OutputSettings1);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput(" <%s>", "");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      // Undeclared exception!
      try { 
        document0.outerHtmlHead(charBuffer0, 1570, document_OutputSettings0);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.StringCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("[E;3,.nb|YY", "</");
      CharBuffer charBuffer0 = CharBuffer.allocate(62);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlHead(charBuffer0, 62, document_OutputSettings0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Element element0 = new Element(":matches(regex) query must not be empty");
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) ":matches(regex) query must not be empty");
      // Undeclared exception!
      try { 
        element0.outerHtmlHead(stringBuilder0, 0, (Document.OutputSettings) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Document document0 = Document.createShell("7y13+3Q]@G+$w_");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "(vtkO6--L45Iv");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlHead(stringBuffer0, (-507), document_OutputSettings0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // width must be > 0
         //
         verifyException("org.jsoup.internal.StringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("c", "c");
      // Undeclared exception!
      try { 
        document0.lastElementSibling();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Document document0 = new Document("v-v)aHWB`bl[");
      DocumentType documentType0 = new DocumentType("v-v)aHWB`bl[", "v-v)aHWB`bl[", "v-v)aHWB`bl[");
      document0.parentNode = (Node) documentType0;
      // Undeclared exception!
      try { 
        document0.lastElementSibling();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("org.jsoup.selc.Evaluator$AttribteWithValueNot", "org.jsoup.selc.Evaluator$AttribteWithValueNot");
      document0.reparentChild(document0);
      Evaluator.IsNthChild evaluator_IsNthChild0 = new Evaluator.IsNthChild((-686), (-686));
      // Undeclared exception!
      document0.is((Evaluator) evaluator_IsNthChild0);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Element element0 = new Element(",^ZO !ijuy!'");
      // Undeclared exception!
      try { 
        element0.is((Evaluator) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Document document0 = Document.createShell("TwyXYHw`ovZ");
      // Undeclared exception!
      try { 
        document0.is("TwyXYHw`ovZ");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query 'TwyXYHw`ovZ': unexpected token at '`ovZ'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("#(Qt", "#(Qt");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.is("dt");
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(" <%s>", " <%s>");
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = (Node) document0;
      nodeArray0[1] = (Node) document0;
      nodeArray0[2] = (Node) document0;
      nodeArray0[3] = (Node) document0;
      nodeArray0[4] = (Node) document0;
      nodeArray0[5] = (Node) document0;
      nodeArray0[6] = (Node) document0;
      // Undeclared exception!
      try { 
        document0.insertChildren(1, nodeArray0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Document document0 = Document.createShell(" <%s>");
      List<Node> list0 = document0.ensureChildNodes();
      // Undeclared exception!
      try { 
        document0.insertChildren((-1), (Collection<? extends Node>) list0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("7y13+3Q]@G+$w_", "7y13+3Q]@G+$w_");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.html("");
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Document document0 = Parser.parse("{ky", "{ky");
      Parser parser0 = Parser.htmlParser();
      List<Node> list0 = parser0.parseFragmentInput("21q J{QN", document0, "21q J{QN");
      document0.childNodes = list0;
      // Undeclared exception!
      try { 
        document0.html("P'Lj5xF[v%WhT'QJo");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("value", "value");
      PipedWriter pipedWriter0 = new PipedWriter();
      // Undeclared exception!
      try { 
        document0.html(pipedWriter0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Pipe not connected
         //
         verifyException("org.jsoup.nodes.Node$OuterHtmlVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Document document0 = new Document("POST");
      Element element0 = document0.append("org.jsoup.nodes.Element");
      document0.reparentChild(document0);
      // Undeclared exception!
      element0.html((MockFileWriter) null);
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Document document0 = Parser.parse("5CQoFGOQE", "5CQoFGOQE");
      char[] charArray0 = new char[4];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0);
      // Undeclared exception!
      try { 
        document0.html(charBuffer1);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.StringCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Document document0 = Document.createShell("iframe");
      // Undeclared exception!
      try { 
        document0.html((MockFileWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("org.jsoup.selc.Evaluator$AttribteWithValueNot", "org.jsoup.selc.Evaluator$AttribteWithValueNot");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.html();
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Document document0 = Parser.parse("br", "br");
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration("pre", false);
      document0.setParentNode(xmlDeclaration0);
      // Undeclared exception!
      try { 
        document0.html();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Document document0 = Document.createShell("iframe");
      // Undeclared exception!
      try { 
        document0.hasClass((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Document document0 = Document.createShell("ifrme");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText((Pattern) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$Matches", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Document document0 = Document.createShell("#root");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("org.jsoup.selc.Evaluator$AttribteWithValueNot", "org.jsoup.selc.Evaluator$AttribteWithValueNot");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText("=Ckk+-q`C)#h`tH");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pattern syntax error: =Ckk+-q`C)#h`tH
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("6}", "6}");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingOwnText((Pattern) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$MatchesOwn", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Document document0 = Parser.parse("#r_#z(", "D+sG;Q!2bo`#[Rl*@Um");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingOwnText((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Document document0 = Document.createShell("</");
      Element element0 = document0.body();
      element0.setSiblingIndex((-40));
      // Undeclared exception!
      try { 
        document0.getElementsMatchingOwnText("</");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Document document0 = Document.createShell("Z;,.ib|YlY");
      Element element0 = document0.head();
      element0.setSiblingIndex((-2406));
      // Undeclared exception!
      try { 
        document0.getElementsContainingText("</");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Document document0 = Parser.parse("d+", "d+");
      CDataNode cDataNode0 = new CDataNode("Pattern syntax error: ");
      document0.setParentNode(cDataNode0);
      // Undeclared exception!
      try { 
        document0.getElementsContainingOwnText("d+");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("#root", "#root");
      document0.setSiblingIndex((-616));
      document0.reparentChild(document0);
      // Undeclared exception!
      try { 
        document0.getElementsContainingOwnText("#root");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Document document0 = Document.createShell("ul");
      List<Node> list0 = document0.childNodesCopy();
      document0.childNodes = list0;
      // Undeclared exception!
      try { 
        document0.getElementsByTag("ul");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.NodeTraversor", e);
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("7y13+3Q]@G+$w_", "7y13+3Q]@G+$w_");
      // Undeclared exception!
      try { 
        document0.getElementsByTag("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Document document0 = new Document("7yg6Vl3+3Q'[]@K+$w_");
      document0.childNodes = null;
      // Undeclared exception!
      try { 
        document0.getElementsByClass("7yg6Vl3+3Q'[]@K+$w_");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Tag tag0 = Tag.valueOf("5QNt^d[BTBI");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "5QNt^d[BTBI", attributes0);
      // Undeclared exception!
      try { 
        formElement0.getElementsByClass("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Document document0 = Document.createShell("Zrg.j:oup.nodes.Element$2");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueStarting("", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput(" <%s>", "");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueNot("", "Pattern syntax error: ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("org.jsoup.select.Evaluator$AttributeWithValueNot", "org.jsoup.select.Evaluator$AttributeWithValueNot");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueMatching("5c^srcAH+ZL7", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Document document0 = Document.createShell("Zrg.j:oup.nodes.Element$2");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueMatching(".{#y5R)bi5", "<bCj%>zEN(:q_;");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pattern syntax error: <bCj%>zEN(:q_;
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("org.jsoup.selc.Evaluator$AttribteWithValueNot", "org.jsoup.selc.Evaluator$AttribteWithValueNot");
      document0.siblingIndex = (-1164);
      document0.reparentChild(document0);
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueMatching("6<}<", "org.jsoup.parser.ParseErrorList");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput(" <%s>", "");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueEnding("", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("There is an unread token pending!", "There is an unread token pending!");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueContaining("s+", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("br", parseSettings0);
      Element element0 = new Element(tag0, " > ");
      // Undeclared exception!
      try { 
        element0.getElementsByAttributeValue("_/t,:", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("org.jsoup.select.Evaluator$AttributeWithValueNot", "org.jsoup.select.Evaluator$AttributeWithValueNot");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeStarting("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Tag tag0 = Tag.valueOf("5QNt^d[BTBI");
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "5QNt^d[BTBI", (Attributes) null);
      // Undeclared exception!
      try { 
        pseudoTextElement0.getElementsByAttribute("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Document document0 = Document.createShell("Zrg.j:oup.nodes.Element$2");
      // Undeclared exception!
      try { 
        document0.getElementById((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Document document0 = new Document("7yg6Vl3+3Q'[]@K+$w_");
      document0.childNodes = null;
      // Undeclared exception!
      try { 
        document0.getAllElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      Element element0 = new Element("v-v)aHWB`bl[");
      // Undeclared exception!
      try { 
        element0.firstElementSibling();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("}np2|AZ_4y6%~", "~wx[V`PK");
      CDataNode cDataNode0 = new CDataNode("}np2|AZ_4y6%~");
      document0.setParentNode(cDataNode0);
      // Undeclared exception!
      try { 
        document0.firstElementSibling();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      Document document0 = Parser.parse("bSmE$yjVsi&#\"(6O", "bSmE$yjVsi&#\"(6O");
      document0.childNodes = null;
      // Undeclared exception!
      try { 
        document0.data();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(", currentlement=", ", currentlement=");
      Element element0 = document0.head();
      element0.tagName(", currentlement=");
      // Undeclared exception!
      try { 
        element0.cssSelector();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query '': unexpected token at ''
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("7yg6Vl3+3Q'[]@K+$w_", "7yg6Vl3+3Q'[]@K+$w_");
      Element element0 = document0.head();
      element0.siblingIndex = (-342);
      // Undeclared exception!
      try { 
        element0.cssSelector();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Document document0 = Document.createShell("Zrg.j:oup.nodes.Element$2");
      // Undeclared exception!
      try { 
        document0.classNames((Set<String>) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("!", "7tG\u0002u$i^U>");
      // Undeclared exception!
      try { 
        document0.child(111);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 111, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      Element element0 = new Element("v-v)aHWB`bl[");
      // Undeclared exception!
      try { 
        element0.child((-743));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.selc.Evaluator$AttribteWithValueNot", "org.jsoup.selc.Evaluator$AttribteWithValueNot");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.before("YN/PXimqVR");
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput(" <%s>", "");
      // Undeclared exception!
      try { 
        document0.attr((String) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Document document0 = new Document("java.lang.string@0000000038 cp367 csascii iso-ir-6 audio iso_646.irv:1983 ansi_x3.4-1986 ascii7 default iso_646.irv:1991 iso646-us ibm367 646 us");
      Document document1 = document0.clone();
      Element element0 = document1.appendTo(document1);
      Element element1 = element0.after((Node) document0);
      // Undeclared exception!
      element1.attr("listing", "[a-zA-Z_:][-a-zA-Z0-9_:.]*");
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Document document0 = new Document("@c");
      // Undeclared exception!
      try { 
        document0.attr((String) null, "@c");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.ParseSettings", e);
      }
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("iso-ir-6");
      Document document0 = new Document("Nce$~cgU;");
      cDataNode0.reparentChild(document0);
      // Undeclared exception!
      try { 
        document0.appendTo(document0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractList", e);
      }
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Document document0 = new Document("X:fo_YKIt");
      document0.reparentChild(document0);
      // Undeclared exception!
      try { 
        document0.appendTo(document0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("Zrg.j:oup.nodes.Element$2", ".");
      // Undeclared exception!
      try { 
        document0.appendText((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(", currentlement=", ", currentlement=");
      document0.appendChild(document0);
      // Undeclared exception!
      document0.appendElement(" ");
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput(" <%s>", "");
      // Undeclared exception!
      try { 
        document0.appendElement("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Document document0 = new Document("There is an u3read tokYn pendinj!");
      document0.reparentChild(document0);
      // Undeclared exception!
      try { 
        document0.appendChild(document0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("vHN4hL1OcBiy-28!j", "vHN4hL1OcBiy-28!j");
      // Undeclared exception!
      try { 
        document0.appendChild((Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.selc.Evaluator$AttribteWithValueNot");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.append("area");
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("head", "?L>2#&f!");
      // Undeclared exception!
      try { 
        document0.append((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      Document document0 = Document.createShell("X:fJ_%It");
      document0.reparentChild(document0);
      // Undeclared exception!
      try { 
        document0.after((Node) document0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("org.jsoup.selc.Evaluator$AttribteWithValueNot", "org.jsoup.selc.Evaluator$AttribteWithValueNot");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.after("org.jsoup.select.StructuralEvaluator$Has");
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Element element0 = new Element("v-v)aHWB`bl[");
      DocumentType documentType0 = new DocumentType("v-v)aHWB`bl[", "v-v)aHWB`bl[", "v-v)aHWB`bl[");
      element0.parentNode = (Node) documentType0;
      // Undeclared exception!
      try { 
        element0.after("v-v)aHWB`bl[");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Document document0 = Document.createShell(", currentlement=");
      // Undeclared exception!
      try { 
        document0.addClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Element element0 = null;
      try {
        element0 = new Element((Tag) null, "HTKPw ", attributes0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      Element element0 = null;
      try {
        element0 = new Element((Tag) null, "$wW'");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      Element element0 = null;
      try {
        element0 = new Element("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Document document0 = new Document("b-ul");
      document0.html((PipedWriter) null);
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("}np2|AZ_4y6%~", "~wx[V`PK");
      Charset charset0 = Charset.defaultCharset();
      Set<String> set0 = charset0.aliases();
      document0.classNames(set0);
      document0.hasClass("z[rj'b-iw");
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      Set<String> set0 = charset0.aliases();
      Document document0 = new Document("java.lang.string@0000000038 cp367 csascii iso-ir-6 audio iso_646.irv:1983 ansi_x3.4-1986 ascii7 default iso_646.irv:1991 iso646-us ibm367 646 us");
      document0.classNames(set0);
      document0.hasClass("iso_646.irv:1991");
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("}np2|AZ_4y6%~", "~wx[V`PK");
      Charset charset0 = Charset.defaultCharset();
      Set<String> set0 = charset0.aliases();
      Element element0 = document0.classNames(set0);
      element0.hasClass("java.lang.string@0000000023 cp367 csascii iso-ir-6 ascii iso_646.irv:1983 ansi_x3.4-1986 ascii7 default iso_646.irv:1991 iso646-us ibm367 646 $i");
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Element element0 = new Element("org.jsoup.select.Evaluator$AttributeWithValueStarting");
      element0.hasClass("AfterAttributeName");
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(", currentlement=", ", currentlement=");
      document0.toggleClass("|U%'%");
      document0.hasClass("java.lang.string@0000000027 cp367 csascii iso-ir-6 ascii iso_646.irv:1983 ansi_x3.4-1986 ascii7 default iso_646.irv:1991 iso646-us ibm367 @{f us");
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Document document0 = Document.createShell("Zrg.j:oup.nodes.Element$2");
      document0.appendText("InTableText");
      document0.data();
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput(" <%s>", "");
      Element element0 = document0.prepend("Pattern syntax error: ");
      element0.hasText();
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("There is an unread token pending!", "There is an unread token pending!");
      document0.elementSiblingIndex();
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("textarea", "textarea");
      document0.reparentChild(document0);
      document0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("[E;3,.nb|YY", "</");
      Element element0 = document0.head();
      Element element1 = element0.prependElement("</");
      element1.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("7y13+3Q]@G+$w_", "7y13+3Q]@G+$w_");
      document0.reparentChild(document0);
      document0.cssSelector();
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("LS#~9Zx~q47d`3sh]", "LS#~9Zx~q47d`3sh]");
      document0.attributes();
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Document document0 = Document.createShell("pU}+Tc` ");
      document0.dataset();
      document0.attributes();
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("LS#~9Zx~q47d`3sh]", "LS#~9Zx~q47d`3sh]");
      document0.children();
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(", currentElement=", ", currentElement=");
      document0.className();
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Document document0 = Document.createShell("valuY");
      document0.parent();
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      Document document0 = new Document("textarea");
      Pattern pattern0 = Pattern.compile("textarea", 141);
      document0.getElementsMatchingOwnText(pattern0);
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      Document document0 = new Document("\"lD`.{&jM5>s;ysQio");
      document0.ownText();
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("P*zG", "P*zG");
      document0.isBlock();
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Document document0 = new Document("^s+");
      Element element0 = document0.createElement("H`BM;3{I");
      element0.getElementsByTag("H`BM;3{I");
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      Document document0 = Parser.parse("ul", "ul");
      Evaluator.Attribute evaluator_Attribute0 = new Evaluator.Attribute((String) null);
      // Undeclared exception!
      try { 
        document0.is((Evaluator) evaluator_Attribute0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("CQoFGOQE", parseSettings0);
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "CQoFGOQE", attributes0);
      Pattern pattern0 = Pattern.compile("^}CN", 4);
      pseudoTextElement0.getElementsByAttributeValueMatching("CQoFGOQE", pattern0);
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      Tag tag0 = Tag.valueOf("h2", (ParseSettings) null);
      FormElement formElement0 = new FormElement(tag0, "h2", (Attributes) null);
      formElement0.append("Oz#");
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("textarea", "textarea");
      document0.id();
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      Document document0 = Parser.parse("java.}ang.string@0000000038 cp367 csascii isoir-6 scii commentstartdash ansi_x3.4-1986 ascii7 default iso_646.irv:1991 iso649-us *bmh67 646 us", "java.}ang.string@0000000038 cp367 csascii isoir-6 scii commentstartdash ansi_x3.4-1986 ascii7 default iso_646.irv:1991 iso649-us *bmh67 646 us");
      List<Node> list0 = document0.childNodesCopy();
      document0.childNodes = list0;
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueContaining("head", "org.jsoup.select.CombiningEvaluator$Or");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.NodeTraversor", e);
      }
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      Document document0 = Document.createShell("ZS,#S}");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.prettyPrint(false);
      document0.outputSettings(document_OutputSettings1);
      document0.html();
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(", -currentlement=", ", -currentlement=");
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      // Undeclared exception!
      try { 
        document0.html(charBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      Document document0 = Document.createShell("br");
      Element element0 = document0.prependElement("br");
      Element element1 = element0.shallowClone();
      element1.toString();
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      Document document0 = Document.createShell("br");
      Element element0 = document0.prependElement("br");
      element0.toString();
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("J^_KEHS0aN", "java.lang.string@0000000091 cp367 csascii iso-ir-6 ascii iso_646.irv:1983 ansi_x3.4-1986 ascii7 default iso_646.irv:1991 iso646-us ibm367 s+ us");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("java.lang.string@0000000091 cp367 csascii iso-ir-6 ascii iso_646.irv:1983 ansi_x3.4-1986 ascii7 default iso_646.irv:1991 iso646-us ibm367 s+ us");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0, true);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.prettyPrint(false);
      document0.outerHtmlHead(mockPrintWriter0, 130, document_OutputSettings1);
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("textarea", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("~$Hv9;ZwNNM");
      Attributes attributes0 = cDataNode0.attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "D%C,!Aw@#QH5@", attributes0);
      pseudoTextElement0.val("erBgf6q\"+_newO(mb");
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("textarea", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("_>e ~lMy]'VD'/T");
      Attributes attributes0 = cDataNode0.attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "java.lang.string@0000000038 cp367 csascii iso-ir-6 audio iso_646.irv:1983 ansi_x3.4-1986 ascii7 default iso_646.irv:1991 iso646-us ibm367 646 us", attributes0);
      pseudoTextElement0.val();
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("CQoiGOQE", "CQoiGOQE");
      Charset charset0 = Charset.defaultCharset();
      Set<String> set0 = charset0.aliases();
      document0.classNames(set0);
      document0.toggleClass("646");
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("}np2|AZ_4y6%~", "~wx[V`PK");
      Charset charset0 = Charset.defaultCharset();
      Set<String> set0 = charset0.aliases();
      document0.classNames(set0);
      document0.hasClass("eo");
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(" <%s>", " <%s>");
      Charset charset0 = Charset.defaultCharset();
      Set<String> set0 = charset0.aliases();
      document0.classNames(set0);
      document0.getElementsByClass("iso-ir-6");
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("s+", "o");
      Charset charset0 = Charset.defaultCharset();
      Set<String> set0 = charset0.aliases();
      document0.classNames(set0);
      document0.getElementsByClass("java.lang.string@0000000039 cp367 csascii iso-ir-6 ascii iso_646.irv:1983 ansi_x3.4-1986 ascii7 default iso_646.irv:1991 iso646-us ibm367 646 us");
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("s+", "o");
      CDataNode cDataNode0 = new CDataNode("o");
      document0.prependChild(cDataNode0);
      document0.data();
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      Document document0 = Parser.parse("bb", "bb");
      Comment comment0 = new Comment("=");
      document0.prependChild(comment0);
      document0.data();
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      Document document0 = Parser.parse("ul", "ul");
      DataNode dataNode0 = DataNode.createFromEncoded("ul", "XuHsXF");
      document0.appendChild(dataNode0);
      document0.data();
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      Document document0 = Parser.parse("bb", "bb");
      Comment comment0 = new Comment("=");
      Element element0 = document0.prependChild(comment0);
      element0.hasText();
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("\n", "\n");
      document0.hasText();
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("#(Qt", "#(Qt");
      document0.reparentChild(document0);
      document0.getElementsContainingOwnText("#(Qt");
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("java.lang.string@0000000044");
      Element.preserveWhitespace(cDataNode0);
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      Document document0 = new Document("br");
      document0.prependElement("br");
      document0.prependElement("br");
      document0.getElementsContainingOwnText("&nbsp;");
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("}np2|AZ_4y6%~", "~wx[V`PK");
      document0.title("</");
      document0.getElementsContainingText("}np2|AZ_4y6%~");
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      Document document0 = Parser.parse("bb", "bb");
      Comment comment0 = new Comment("=");
      document0.prependChild(comment0);
      document0.getElementsContainingOwnText("bb");
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("7y13+3Q]@G+$w_", "7y13+3Q]@G+$w_");
      document0.wholeText();
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("<html>\n <head></head>\n <body>\n  s+\n </body>\n</html>", "7y123+3q]@k+$w_");
      Element element0 = document0.prepend("7y123+3q]@k+$w_");
      element0.getElementsContainingText("ftdmQ!x>$NUV/46rdH");
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      Document document0 = Document.createShell("</");
      Element element0 = document0.prepend("</");
      Element element1 = document0.head();
      element1.prependElement("</");
      element0.getElementsContainingText("</");
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      Document document0 = Document.createShell("java.lang.string@0000000038 cp367 csascii iso-ir-6 audio iso_646.irv:1983 ansi_x3.4-1986 ascii7 default iso_646.irv:1991 iso646-us ibm367 646 us");
      Element element0 = document0.prepend("eCAzdM\"~$#^");
      Element element1 = document0.head();
      element1.prependElement("br");
      element0.getElementsContainingText("head");
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(", currentElement=", ", currentElement=");
      DataNode dataNode0 = DataNode.createFromEncoded("html", "<html>\n <head></head>\n <body>\n  , currentElement=\n </body>\n</html>");
      document0.prependChild(dataNode0);
      Pattern pattern0 = Pattern.compile("value");
      document0.getElementsMatchingText(pattern0);
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      Document document0 = Parser.parse("hA^B&ggF>|T1", "dZB;");
      document0.text();
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      Document document0 = Parser.parse("br", "br");
      document0.getElementById("\"");
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("D%C,!Aw@#QH5@", "D%C,!Aw@#QH5@");
      document0.appendChild(document0);
      document0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(", currentlement=", ", currentlement=");
      document0.appendChild(document0);
      document0.empty();
      document0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("org.jsoup.selc.Evaluator$AttribteWithValueNot", "org.jsoup.selc.Evaluator$AttribteWithValueNot");
      document0.reparentChild(document0);
      document0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("ul", "ul");
      document0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("YOj>u-XJVc%", "YOj>u-XJVc%");
      Element element0 = document0.appendChild(document0);
      element0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("[E;3,.nb|YY", "</");
      Element element0 = document0.head();
      Elements elements0 = element0.nextElementSiblings();
      assertEquals("</", element0.baseUri());
      assertEquals(1, elements0.size());
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(", currentlement=", ", currentlement=");
      document0.nextElementSibling();
      assertEquals(1, document0.childNodeSize());
      assertEquals(", currentlement=", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      Document document0 = Document.createShell("</");
      Element element0 = document0.head();
      Element element1 = element0.nextElementSibling();
      assertNotNull(element1);
      assertEquals("</", element1.baseUri());
      assertEquals(1, element1.siblingIndex());
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      Document document0 = Document.createShell("br");
      Element element0 = document0.head();
      Elements elements0 = element0.siblingElements();
      assertEquals(1, elements0.size());
      assertEquals("br", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      Tag tag0 = Tag.valueOf("ip~rT;CE[&A");
      Element element0 = new Element(tag0, "ip~rT;CE[&A");
      element0.siblingElements();
      assertEquals("ip~rT;CE[&A", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      Document document0 = Parser.parse("br", "br");
      Element element0 = document0.head();
      element0.after("ascii");
      String string0 = element0.cssSelector();
      assertEquals("html > head:nth-child(1)", string0);
      assertEquals("br", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("org.jsoup.selc.Evaluator$AttribteWithValueNot", "org.jsoup.selc.Evaluator$AttribteWithValueNot");
      Element element0 = document0.toggleClass("org.jsoup.selc.Evaluator$AttribteWithValueNot");
      element0.cssSelector();
      assertEquals("org.jsoup.selc.Evaluator$AttribteWithValueNot", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("ul", "ul");
      Node[] nodeArray0 = new Node[3];
      // Undeclared exception!
      try { 
        document0.insertChildren(57343, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      Element element0 = new Element("$wW'");
      Node[] nodeArray0 = new Node[2];
      // Undeclared exception!
      try { 
        element0.insertChildren((-162), nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("D%C,!Aw@#QH5@", "D%C,!Aw@#QH5@");
      Elements elements0 = document0.nextElementSiblings();
      // Undeclared exception!
      try { 
        document0.insertChildren((-409), (Collection<? extends Node>) elements0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      Document document0 = new Document("%ag8y-nAlosO[Jd5A5");
      LinkedHashSet<Document> linkedHashSet0 = new LinkedHashSet<Document>();
      Element element0 = document0.insertChildren((-1), (Collection<? extends Node>) linkedHashSet0);
      assertEquals("%ag8y-nAlosO[Jd5A5", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("ScriptDataEscapeStart", "ScriptDataEscapeStart");
      Elements elements0 = document0.getElementsByAttributeValueContaining("ScriptDataEscapeStart", "ScriptDataEscapeStart");
      // Undeclared exception!
      try { 
        document0.insertChildren(6, (Collection<? extends Node>) elements0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      Document document0 = Parser.parse("bb", "bb");
      DataNode dataNode0 = new DataNode("bb");
      document0.appendChild(dataNode0);
      List<DataNode> list0 = document0.dataNodes();
      assertEquals("bb", document0.baseUri());
      assertTrue(list0.contains(dataNode0));
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("body", "6:xUp9N7HQE");
      Element element0 = document0.prepend("6:xUp9N7HQE");
      element0.textNodes();
      assertEquals(2, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("7y123+3Q]@K+$w_", "7y123+3Q]@K+$w_");
      Element element0 = document0.appendText("7y123+3Q]@K+$w_");
      document0.reparentChild(element0);
      int int0 = document0.elementSiblingIndex();
      assertEquals("7y123+3Q]@K+$w_", document0.baseUri());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      Document document0 = Document.createShell("ul");
      Elements elements0 = document0.getElementsByIndexGreaterThan(1878);
      assertEquals(1, document0.childNodeSize());
      assertEquals("ul", document0.baseUri());
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.nodes.Element$2");
      // Undeclared exception!
      try { 
        document0.selectFirst("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      Element element0 = new Element("v-v)aHWB`bl[");
      Elements elements0 = element0.getAllElements();
      assertEquals(1, elements0.size());
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.selc.Evaluator$AttribteWithValueNot", "org.jsoup.selc.Evaluator$AttribteWithValueNot");
      // Undeclared exception!
      try { 
        document0.before("YN/PXimqVR");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      Tag tag0 = Tag.valueOf("HSoQ>tm:Omhy_C");
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "HSoQ>tm:Omhy_C", (Attributes) null);
      pseudoTextElement0.getElementsByAttribute("HSoQ>tm:Omhy_C");
      assertEquals("HSoQ>tm:Omhy_C", pseudoTextElement0.baseUri());
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(", currentlement=", ", currentlement=");
      document0.getElementsByAttributeValueNot("org.jsoup.parser.ParseErrorList", "9We(AJ3M-;MD");
      assertEquals(1, document0.childNodeSize());
      assertEquals(", currentlement=", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("D%C,!Aw@#QH5@", "\t8( g*j^No+jG");
      // Undeclared exception!
      try { 
        document0.appendTo((Element) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      Document document0 = Document.createShell("ul");
      List<Node> list0 = document0.childNodesCopy();
      document0.childNodes = list0;
      // Undeclared exception!
      try { 
        document0.getElementsByIndexGreaterThan(1878);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.NodeTraversor", e);
      }
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.selc.Evaluator$AttribteWithValueNot");
      document0.doSetBaseUri("#");
      assertEquals("#", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      Document document0 = Document.createShell("7y13+3Q]@G+$w_");
      // Undeclared exception!
      try { 
        document0.after((Node) document0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      Document document0 = Parser.parse("br", "br");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueContaining("Nzg<1", "\"");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("7yg63+3Q'[]@K+$w_", "7yg63+3Q'[]@K+$w_");
      document0.getElementsByAttributeValueEnding("#", "2?J=Kd.");
      assertEquals("7yg63+3Q'[]@K+$w_", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("#(Qt", "#(Qt");
      document0.is("dt");
      assertEquals("#(Qt", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      Document document0 = new Document("b-ul");
      document0.getElementsByAttributeValueMatching("f7f3+hZq31$ep:!.?:", "b-ul");
      assertEquals("b-ul", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("7y13+3Q]@G+$w_", "7y13+3Q]@G+$w_");
      Elements elements0 = document0.getElementsByIndexEquals(133);
      assertEquals("7y13+3Q]@G+$w_", document0.baseUri());
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("$wW'", "75:Y3B571QS7lv4o");
      document0.getElementsByAttributeStarting("^}y,MuNNqIub(&B");
      assertEquals("75:Y3B571QS7lv4o", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("7y13+3Q]@G+$w_", "7y13+3Q]@G+$w_");
      Elements elements0 = document0.getElementsByIndexLessThan(133);
      assertEquals("7y13+3Q]@G+$w_", document0.baseUri());
      assertFalse(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      Document document0 = Parser.parse("br", "br");
      // Undeclared exception!
      try { 
        document0.after("ascii");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      Document document0 = Parser.parse("br", "br");
      Element element0 = document0.head();
      String string0 = element0.cssSelector();
      assertEquals("br", element0.baseUri());
      assertEquals("html > head", string0);
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("org.jsoup.selc.Evaluator$AttribteWithValueNot", "org.jsoup.selc.Evaluator$AttribteWithValueNot");
      document0.getElementsByAttributeValueStarting("org.jsoup.selc.Evaluator$AttribteWithValueNot", "org.jsoup.selc.Evaluator$AttribteWithValueNot");
      boolean boolean0 = document0.hasAttributes();
      assertEquals("org.jsoup.selc.Evaluator$AttribteWithValueNot", document0.baseUri());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      Elements elements0 = document0.getElementsByAttributeValue("^bXD9&S4a %Bz~27i;", "br");
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      Element element0 = new Element("v-v)aHWB`bl[");
      Element element1 = element0.attr(":)>{7@2<d", true);
      assertFalse(element1.isBlock());
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      Document document0 = Parser.parse("7yg6Vl3+3Q'[]@K+$w_", "7yg6Vl3+3Q'[]@K+$w_");
      // Undeclared exception!
      try { 
        document0.html((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      Document document0 = new Document("D%C,!Aw@#QH5@");
      document0.wholeText();
      assertEquals("D%C,!Aw@#QH5@", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      Document document0 = Document.createShell("il5@)");
      // Undeclared exception!
      try { 
        document0.before((Node) document0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      Document document0 = Parser.parse("br", "br");
      document0.title("br");
      String string0 = document0.html();
      assertEquals("<html>\n <head>\n  <title>br</title>\n </head>\n <body>\n  br\n </body>\n</html>", string0);
      assertEquals("br", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      Document document0 = Document.createShell("");
      // Undeclared exception!
      try { 
        document0.tagName("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Tag name must not be empty.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(", currentlement=", ", currentlement=");
      // Undeclared exception!
      try { 
        document0.prependText((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("ul", "ul");
      assertEquals(1, document0.childNodeSize());
      
      Element element0 = document0.child(0);
      assertNotNull(element0);
      assertEquals("ul", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(", currentlementO", ", currentlementO");
      document0.previousElementSiblings();
      assertEquals(", currentlementO", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      Element element0 = new Element("v-v)aHWB`bl[");
      // Undeclared exception!
      try { 
        element0.prependChild((Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      Document document0 = new Document("$wW'");
      Elements elements0 = document0.getElementsMatchingText("$wW'");
      assertEquals("$wW'", document0.baseUri());
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      Document document0 = Document.createShell("^K");
      // Undeclared exception!
      try { 
        document0.wrap("org.jsoup.nodes.Element");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }
}
