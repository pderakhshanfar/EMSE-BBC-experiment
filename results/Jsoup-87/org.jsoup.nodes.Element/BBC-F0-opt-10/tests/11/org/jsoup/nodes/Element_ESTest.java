/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 20 15:46:59 GMT 2021
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedWriter;
import java.io.CharArrayWriter;
import java.io.File;
import java.io.FileDescriptor;
import java.io.OutputStreamWriter;
import java.io.PipedWriter;
import java.io.Reader;
import java.io.StringReader;
import java.io.StringWriter;
import java.nio.charset.Charset;
import java.util.Collection;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import java.util.regex.Pattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.Comment;
import org.jsoup.nodes.DataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.nodes.PseudoTextElement;
import org.jsoup.nodes.TextNode;
import org.jsoup.nodes.XmlDeclaration;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Parser;
import org.jsoup.parser.Tag;
import org.jsoup.select.Elements;
import org.jsoup.select.Evaluator;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Element_ESTest extends Element_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.select.Evaluator$IsNthOfType", "org.jsoup.select.Evaluator$IsNthOfType");
      Element element0 = document0.shallowClone();
      element0.reparentChild(document0);
      document0.nextElementSiblings();
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Document document0 = Parser.parse("qDqJt5\"zO[N<?<1", "qDqJt5\"zO[N<?<1");
      Element element0 = document0.appendChild(document0);
      Node[] nodeArray0 = new Node[8];
      // Undeclared exception!
      try { 
        element0.insertChildren(1, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array must not contain any null objects
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("qen,/ `#(cf<lF]iy");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document document0 = Document.createShell("-C@^");
      document0.outerHtmlTail(mockPrintStream0, 0, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag0 = Tag.valueOf("gS$e&LeQ5`A7v0cY4Kb", parseSettings0);
      Attributes attributes0 = new Attributes();
      Element element0 = new Element(tag0, "gS$e&LeQ5`A7v0cY4Kb", attributes0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Element", "org.jsoup.nodes.Element");
      document0.nodelistChanged();
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Element element0 = new Element("xml");
      element0.ensureChildNodes();
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.select.Evaluator$IsNthOfType", "org.jsoup.select.Evaluator$IsNthOfType");
      Element element0 = document0.shallowClone();
      element0.appendChild(document0);
      document0.wrap("uSd");
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("org.jsoup.nodes.Element", "org.jsoup.nodes.Element");
      Element element0 = document0.head();
      element0.wrap("org.jsoup.select.structuralevaluator");
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Document document0 = Parser.parse("seect", "</");
      Element element0 = document0.body();
      element0.wrap("seect");
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Document document0 = new Document("rpgCupBU})=mZ{");
      document0.wholeText();
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Element element0 = new Element("select");
      element0.setSiblingIndex((-1467));
      element0.val("g+");
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Document document0 = Parser.parse("seect", "</");
      Element element0 = document0.body();
      element0.val("");
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("%Brv7Z,s");
      FormElement formElement0 = new FormElement(tag0, "Y", attributes0);
      formElement0.val("%Brv7Z,s");
      formElement0.val();
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Document document0 = Document.createShell("tag name must not be empty.");
      document0.setSiblingIndex((-1128));
      document0.toggleClass("Tag name must not be empty.");
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Document document0 = Parser.parse("Comment", "Comment");
      Element element0 = document0.body();
      element0.toggleClass("Comment");
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Document document0 = Document.createShell("jT?xcptv+PkL#w=");
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = (Node) document0;
      nodeArray0[1] = (Node) document0;
      nodeArray0[2] = (Node) document0;
      nodeArray0[3] = (Node) document0;
      document0.addChildren(nodeArray0);
      document0.text("qMvO&[N~u");
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Document document0 = Parser.parse("seect", "seect");
      Element element0 = document0.head();
      element0.text("seect");
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Document document0 = Parser.parse("seect", "seect");
      document0.text("seect");
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Document document0 = Document.createShell(":");
      document0.text();
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("qqJt5\"zO[N<b?<1", "qqJt5\"zO[N<b?<1");
      document0.siblingIndex = (-1685);
      document0.tagName("tfoot");
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("<![CDATA[", "[.'L6*");
      document0.tagName();
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Document document0 = new Document("fk2$");
      Element element0 = document0.tagName("br");
      element0.tag();
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Element element0 = new Element("select");
      element0.tag();
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Document document0 = Parser.parse("ta%{sp{C,j*n", "kW/u_`@GJo_b~'$");
      Element element0 = document0.head();
      element0.tag();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Tag tag0 = Tag.valueOf("body");
      Element element0 = new Element(tag0, "Hr=pfIWc:6DNttFrO");
      element0.shallowClone();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Document document0 = Parser.parse("vgo7|duj", "vgo7|duj");
      document0.selectFirst("textarea");
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.select.Evaluator$IsNthOfType", "org.jsoup.select.Evaluator$IsNthOfType");
      document0.selectFirst("head");
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Element element0 = new Element("title");
      Element element1 = element0.append("html");
      element1.selectFirst("title");
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("\"", "\"");
      document0.select("Ip");
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Tag tag0 = Tag.valueOf("2VC");
      CDataNode cDataNode0 = new CDataNode("2VC");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "2VC", attributes0);
      formElement0.select("2VC");
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Document document0 = new Document("2fkh2$");
      Document document1 = Parser.parseBodyFragment("2fkh2$", "2fkh2$");
      document1.appendChild(document0);
      document0.removeClass("^=");
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Document document0 = Parser.parse("", "/ ZhSfN#^!");
      document0.siblingIndex = (-3452);
      document0.removeClass(" wk");
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Document document0 = Parser.parse("br", "_");
      Element element0 = document0.head();
      element0.removeClass("br");
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Document document0 = Document.createShell("e/%H}G");
      Element element0 = document0.body();
      element0.previousElementSiblings();
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Document document0 = Parser.parse("qDqJt5\"zO[N<?<1", "qDqJt5\"zO[N<?<1");
      Document document1 = Parser.parseBodyFragment("<#root></#root>", "wnE]2b{+:_^>Y");
      Element element0 = document1.appendChild(document0);
      document1.prependChild(element0);
      document0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Document document0 = new Document("Tag name must not be empty.");
      document0.siblingIndex = (-1193);
      document0.prependText("Tag name must not be empty.");
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Document document0 = Parser.parse("seect", "\"%{R");
      Element element0 = document0.body();
      element0.prependText("seect");
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Element element0 = new Element("menuitem");
      element0.prependElement("InFrameset");
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("\"", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "noframes", attributes0);
      formElement0.prependElement("noframes");
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(" ", "qqjt5\"zo[n<b?<1");
      Element element0 = document0.body();
      element0.prependChild(document0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Document document0 = Parser.parse("vgo7|duj", "vgo7|duj");
      Document document1 = new Document("-/u_`@GJo_bT6'$");
      Element element0 = document1.appendChild(document0);
      element0.prepend("ScriptDataEscapedLessthanSign");
      document0.prepend("OT#vv@}ijP\"({Yb");
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Document document0 = Parser.parse("qDqJt5\"zO[N<?<1", "qDqJt5\"zO[N<?<1");
      Document document1 = Parser.parseBodyFragment("<#root></#root>", "wnE]2b{+:_^>Y");
      document1.appendChild(document0);
      Element element0 = document0.previousElementSibling();
      element0.prepend("");
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Document document0 = Document.createShell("qqJt5\"zO[N<b?<1");
      document0.parents();
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.select.Evaluator$IsNthOfType", "org.jsoup.select.Evaluator$IsNthOfType");
      Element element0 = document0.head();
      element0.parents();
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Document document0 = new Document("xml");
      document0.parent();
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Document document0 = Parser.parse("xml", "xml");
      Document document1 = document0.clone();
      Document document2 = document0.ownerDocument();
      document2.appendChild(document1);
      document1.parent();
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("qqJt5\"zO[N<b?<1", "qqJt5\"zO[N<b?<1");
      Element element0 = document0.body();
      element0.parent();
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("R1oi6y4hbP", "R1oi6y4hbP");
      document0.ownText();
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Element element0 = new Element("select");
      element0.nodeName();
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Document document0 = new Document("2fkh2$");
      Document document1 = Parser.parseBodyFragment("2fkh2$", "2fkh2$");
      Element element0 = document1.appendChild(document0);
      document1.reparentChild(element0);
      element0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Document document0 = Document.createShell("N]}Ubj`:j");
      Element element0 = document0.body();
      element0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(":ImmediateParent%s", ":ImmediateParent%s");
      document0.isBlock();
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      StringReader stringReader0 = new StringReader("'jR,V)KO(qypg9");
      Document document0 = parser0.parseInput((Reader) stringReader0, "cfj]i-#67s)y4;n");
      Element element0 = document0.body();
      Evaluator.IsLastOfType evaluator_IsLastOfType0 = new Evaluator.IsLastOfType();
      element0.is((Evaluator) evaluator_IsLastOfType0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("noframes");
      FormElement formElement0 = new FormElement(tag0, "noframes", attributes0);
      formElement0.is("noframes");
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.select.Evaluator$IsNthOfType", "org.jsoup.select.Evaluator$IsNthOfType");
      document0.is("body");
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("kW/u_`@GJo_b~'$", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("seect");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "kW/u_`@GJo_b~'$", attributes0);
      LinkedHashSet<FormElement> linkedHashSet0 = new LinkedHashSet<FormElement>();
      linkedHashSet0.add(formElement0);
      formElement0.insertChildren(0, (Collection<? extends Node>) linkedHashSet0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Document document0 = Parser.parse("", "/ ZhSfN#^!");
      document0.siblingIndex = (-3452);
      document0.html("");
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Document document0 = Parser.parse("", "/ ZhSfN#^!");
      Element element0 = document0.body();
      element0.html("/ ZhSfN#^!");
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Document document0 = Parser.parse("", "/ ZhSfN#^!");
      document0.html("");
      document0.removeClass(" wk");
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("#root", ")=[A8svh");
      File file0 = MockFile.createTempFile("org.jsoup.nodes.mlement", "org.jsoup.nodes.mlement");
      MockFileWriter mockFileWriter0 = new MockFileWriter(file0, false);
      document0.html(mockFileWriter0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Document document0 = new Document("abbr");
      document0.html();
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Document document0 = new Document("2fkh2$");
      Document document1 = (Document)document0.val("2fkh2$");
      document1.hasAttributes();
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("xml", "xml");
      document0.hasAttributes();
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Document document0 = Parser.parse("", "/ ZhSfN#^");
      Pattern pattern0 = Pattern.compile("zZ<myp");
      document0.getElementsMatchingText(pattern0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("@XJ;ynG3U", "@XJ;ynG3U");
      document0.getElementsMatchingText("@XJ;ynG3U");
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("\"", "\"");
      Pattern pattern0 = Pattern.compile("\"");
      document0.getElementsMatchingOwnText(pattern0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("R1oi6y4hbP", "R1oi6y4hbP");
      document0.getElementsMatchingOwnText("0N?zMmk");
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Document document0 = Parser.parse("vgo7|duj", "vgo7|duj");
      document0.getElementsContainingText((String) null);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("org.jsoup.nodes.Element", "org.jsoup.nodes.Element");
      document0.getElementsByTag("org.jsoup.nodes.Element");
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", " > ");
      document0.getElementsByTag("#root");
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("qqJt5\"zO[N<b?<1", "qqJt5\"zO[N<b?<1");
      document0.getElementsByIndexLessThan(876);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("R1oi6y4hbP", "R1oi6y4hbP");
      document0.getElementsByIndexGreaterThan(0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("-/u_`@GJo_bT~'$", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("seect");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "", attributes0);
      formElement0.getElementsByIndexEquals(0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("ofrqames");
      FormElement formElement0 = new FormElement(tag0, "ofrqames", attributes0);
      formElement0.getElementsByAttributeValueStarting("Nck.1{W}BN^Y", "\"!qy9");
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("romnswae}!b/*", "romnswae}!b/*");
      document0.getElementsByAttributeValueNot("G]:9oo,", " ");
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Element element0 = new Element("2fkhw$");
      element0.getElementsByAttributeValueMatching("#root", "2fkhw$");
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Document document0 = Parser.parse("class", "class");
      document0.getElementsByAttributeValueEnding("org.jsoup.select.Evaluator$IsEmpty", "<#root></#root>");
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put("menuitem", "B5~ wLQJkZ^c}?#Art.");
      Tag tag0 = Tag.valueOf("B5~ wLQJkZ^c}?#Art.");
      FormElement formElement0 = new FormElement(tag0, "menuitem", attributes0);
      formElement0.getElementsByAttributeValueEnding("menuitem", "B5~ wLQJkZ^c}?#Art.");
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Document document0 = new Document("2fkh2$");
      document0.getElementsByAttributeValueContaining("2fkh2$", "2fkh2$");
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.select.Evaluator$IsNthOfType", "org.jsoup.select.Evaluator$IsNthOfType");
      document0.getElementsByAttributeValue("l/jl8j=Q9J(u", "org.jsoup.nodes.Element$2");
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("org.jsoup.select.Evaluator$IsNthOfType");
      Attributes attributes0 = cDataNode0.attributes();
      Attributes attributes1 = attributes0.put("1l-ass", "1l-ass");
      Tag tag0 = Tag.valueOf("vgo7|duj");
      FormElement formElement0 = new FormElement(tag0, "Pattern syntax error: ", attributes1);
      formElement0.getElementsByAttributeStarting("1l-ass");
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Document document0 = new Document("2fkh2$");
      Document document1 = Parser.parseBodyFragment("2fkh2$", "2fkh2$");
      document1.appendChild(document0);
      document0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Document document0 = Document.createShell("menu");
      Element element0 = document0.body();
      element0.empty();
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Document document0 = new Document("2fkh2$");
      Document document1 = Parser.parseBodyFragment("2fkh2$", "2fkh2$");
      document1.appendChild(document0);
      document0.doClone(document0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("qqJt5\"zO[N<b?<1", "qqJt5\"zO[N<b?<1");
      document0.tagName("tfoot");
      document0.doClone(document0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Document document0 = Document.createShell("");
      document0.doClone((Node) null);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Document document0 = Parser.parse("seect", "\"%{R");
      Element element0 = document0.body();
      element0.clone();
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("", "");
      document0.clone();
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.select.Evaluator$IsNthOfType", "org.jsoup.select.Evaluator$IsNthOfType");
      Element element0 = document0.head();
      Locale locale0 = Locale.FRANCE;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      element0.classNames(set0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.select.Evaluator$IsNthOfType", "org.jsoup.select.Evaluator$IsNthOfType");
      document0.appendChild(document0);
      Locale locale0 = Locale.GERMANY;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      document0.classNames(set0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.select.Evaluator$IsNthOfType", "org.jsoup.select.Evaluator$IsNthOfType");
      Element element0 = document0.shallowClone();
      Locale locale0 = Locale.GERMANY;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      element0.classNames(set0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", " > ");
      document0.addClass("(=V");
      document0.classNames();
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Document document0 = Document.createShell("@XJ;ynG3U");
      Element element0 = document0.toggleClass("@XJ;ynG3U");
      element0.className();
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Document document0 = new Document("2fkh2$");
      document0.children();
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Tag tag0 = Tag.valueOf("f5");
      FormElement formElement0 = new FormElement(tag0, ")=[A8svh", (Attributes) null);
      formElement0.childNodeSize();
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("<![CDATA[", "[.'L6*");
      document0.childNodeSize();
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Document document0 = Parser.parse("qDqJt5\"zO[N<?<1", "qDqJt5\"zO[N<?<1");
      document0.appendChild(document0);
      document0.child(1);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("%?Y6fs:", "%?Y6fs:");
      document0.reparentChild(document0);
      document0.before((Node) document0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.select.Evaluator$IsNthOfType", "org.jsoup.select.Evaluator$IsNthOfType");
      Element element0 = document0.shallowClone();
      element0.appendChild(document0);
      document0.before("\"");
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("xkul!=bv7std<~", "xkul!=bv7std<~");
      document0.baseUri();
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Document document0 = new Document("");
      document0.baseUri();
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.select.Evaluator$IsNthOfType", "org.jsoup.select.Evaluator$IsNthOfType");
      document0.addClass("l/jl8j=Q9J(u");
      document0.attributes();
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Document document0 = new Document("2fkh2$");
      Document document1 = Parser.parseBodyFragment("2fkh2$", "2fkh2$");
      document1.appendChild(document0);
      document0.attr("ch;3RB", false);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("vgo7|duj", "vgo7|duj");
      Element element0 = document0.head();
      element0.attr("n -&JnZ_{uf<8JGf", false);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Document document0 = new Document("2fkh2$");
      document0.appendChild(document0);
      document0.attr("ch;3RB", false);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Element element0 = new Element("xml");
      element0.attr("xml", false);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.select.Evaluator$IsNthOfType", "org.jsoup.select.Evaluator$IsNthOfType");
      Element element0 = document0.head();
      element0.attr(",?dl{f(f", "^=");
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Document document0 = new Document("2fkh2$");
      Document document1 = Parser.parseBodyFragment("2fkh2$", "2fkh2$");
      document1.appendChild(document0);
      document0.attr(":nth-child(%d)", "br");
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Document document0 = new Document("2fkh2$");
      document0.attr(":nth-child(%d)", "br");
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Document document0 = Document.createShell("RtX[F~{e`v.QwH)Uxh2");
      Element element0 = document0.head();
      element0.appendTo(document0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Tag tag0 = Tag.valueOf("z]Kon?R");
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "KHCdGXM X+m-,Jfrx|0", attributes0);
      PseudoTextElement pseudoTextElement1 = new PseudoTextElement(tag0, "z]Kon?R", attributes0);
      pseudoTextElement0.appendTo(pseudoTextElement1);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("vgo7|duj", "vgo7|duj");
      Element element0 = document0.head();
      element0.appendText("%brv7z,s");
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Document document0 = Document.createShell("2fkh2$");
      document0.appendChild(document0);
      document0.appendText("L=^3C*IUo*D");
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Tag tag0 = Tag.valueOf("body");
      Element element0 = new Element(tag0, "Hr=pfIWc:6DNttFrO");
      element0.appendElement("V/3");
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("5ftrkqsl<sbo", "5ftrkqsl<sbo");
      document0.appendElement("head");
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Document document0 = Parser.parse("seect", "</");
      Element element0 = document0.body();
      element0.appendChild(document0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(true, false);
      Tag tag0 = Tag.valueOf("epqb", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("embed");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "", attributes0);
      formElement0.append("");
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Document document0 = Parser.parse("%?Yuf_:", "%?Yuf_:");
      document0.reparentChild(document0);
      DataNode dataNode0 = new DataNode("style", "%?Yuf_:");
      document0.after((Node) dataNode0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.select.Evaluator$IsNthOfType", "org.jsoup.select.Evaluator$IsNthOfType");
      Element element0 = document0.shallowClone();
      element0.appendChild(document0);
      document0.after("org.jsoup.select.Evaluator$IsNthOfType");
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Document document0 = Parser.parse("seect", "\"%{R");
      Element element0 = document0.body();
      element0.after("seect");
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Document document0 = Parser.parse("qDqJt5\"zO[N<?<1", "qDqJt5\"zO[N<?<1");
      Document document1 = Parser.parseBodyFragment("<#root></#root>", "wnE]2b{+:_^>Y");
      document1.appendChild(document0);
      Element element0 = document0.tagName("^=");
      Element element1 = element0.previousElementSibling();
      element1.addClass("<#root></#root>");
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.select.Evaluator$IsNthOfType", "org.jsoup.select.Evaluator$IsNthOfType");
      document0.appendChild(document0);
      document0.addClass("\"");
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Document document0 = Document.createShell("N]}Ubj`:j");
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) document0;
      document0.addChildren(nodeArray0);
      // Undeclared exception!
      document0.wrap("@$Le}D}UC^Ea0XM");
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("R1oi6y4hbP", "R1oi6y4hbP");
      // Undeclared exception!
      try { 
        document0.wrap("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Document document0 = Parser.parse("36[9y0?Vk", "-/u_`@GJo_bT6'$");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.val(" Rf");
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Tag tag0 = Tag.valueOf("vgo7|duj");
      Attributes attributes0 = new Attributes();
      attributes0.vals = null;
      FormElement formElement0 = new FormElement(tag0, "vgo7|duj", attributes0);
      // Undeclared exception!
      try { 
        formElement0.val("vgo7|duj");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      String[] stringArray0 = new String[9];
      attributes0.keys = stringArray0;
      Tag tag0 = Tag.valueOf("ofrqames");
      FormElement formElement0 = new FormElement(tag0, "x&", attributes0);
      // Undeclared exception!
      try { 
        formElement0.val("ofrqames");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("36[9y0?Vk", "select");
      // Undeclared exception!
      try { 
        document0.toggleClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Tag tag0 = Tag.valueOf("vgo7|duj");
      Attributes attributes0 = new Attributes();
      String[] stringArray0 = new String[9];
      attributes0.keys = stringArray0;
      FormElement formElement0 = new FormElement(tag0, "vgo7|duj", attributes0);
      // Undeclared exception!
      try { 
        formElement0.toggleClass("vgo7|duj");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Document document0 = new Document("fk2$");
      // Undeclared exception!
      try { 
        document0.text(".");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("!)=[A8svh");
      Document document0 = Parser.parseBodyFragment("!)=[A8svh", "!)=[A8svh");
      document0.parentNode = (Node) cDataNode0;
      // Undeclared exception!
      try { 
        document0.text();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("@XJ;ynG3U", "@XJ;ynG3U");
      document0.setSiblingIndex((-1495));
      document0.reparentChild(document0);
      // Undeclared exception!
      try { 
        document0.text();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("BeforeAttributeName", "BeforeAttributeName");
      document0.prependChild(document0);
      // Undeclared exception!
      document0.tagName("BeforeAttributeName");
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Document document0 = new Document("abbr");
      // Undeclared exception!
      try { 
        document0.tagName("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Tag name must not be empty.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.select.Evaluator$IsNthOfType", "org.jsoup.select.Evaluator$IsNthOfType");
      Element element0 = document0.shallowClone();
      Element element1 = element0.appendChild(document0);
      element1.html("br");
      // Undeclared exception!
      try { 
        document0.siblingElements();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "L#cA?~z B:~z&L<b");
      // Undeclared exception!
      try { 
        document0.selectFirst(".");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Document document0 = Document.createShell("jT?xcptv+PkL#w=");
      // Undeclared exception!
      try { 
        document0.selectFirst((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Document document0 = Document.createShell("jT?xcptv+PkL#w=");
      // Undeclared exception!
      try { 
        document0.select("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Document document0 = new Document("2fkh2$");
      // Undeclared exception!
      try { 
        document0.removeClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Document document0 = Parser.parse("D3WV72>@&~", "D3WV72>@&~");
      TextNode textNode0 = new TextNode((String) null, (String) null);
      Element element0 = document0.doClone(textNode0);
      // Undeclared exception!
      try { 
        element0.previousElementSiblings();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("S*,M:[mKeS~:EjlXB`V", "SKIP_CHILDREN");
      CDataNode cDataNode0 = new CDataNode("vrs2fmxevg");
      Element element0 = document0.doClone(cDataNode0);
      // Undeclared exception!
      try { 
        element0.previousElementSibling();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Document document0 = Parser.parse("qDqJt5\"zO[N<?<1", "qDqJt5\"zO[N<?<1");
      // Undeclared exception!
      try { 
        document0.prependText((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Document document0 = Parser.parse("seect", "</");
      document0.appendChild(document0);
      // Undeclared exception!
      document0.prependElement("Children collection to be inserted must not be null.");
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Document document0 = new Document("qqJt5\"zO[N<b?<1");
      CDataNode cDataNode0 = new CDataNode("bH}[");
      Node node0 = cDataNode0.doClone(document0);
      // Undeclared exception!
      try { 
        document0.prependChild(node0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Document document0 = Parser.parse("~\"", "~\"");
      // Undeclared exception!
      try { 
        document0.prependChild((Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Element element0 = new Element("b?");
      Element element1 = element0.tagName("class");
      element1.setSiblingIndex((-1659));
      element1.parentNode = (Node) element0;
      // Undeclared exception!
      try { 
        element0.prependChild(element0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("E&HS)@)", "E&HS)@)");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.prepend("van^xR=;");
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Document document0 = Parser.parse("xml", "xml");
      // Undeclared exception!
      try { 
        document0.prepend((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("q+F", "Pattern syntax error: ");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document_OutputSettings0.indentAmount(999);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("q+F");
      OutputStreamWriter outputStreamWriter0 = new OutputStreamWriter(mockFileOutputStream0);
      BufferedWriter bufferedWriter0 = new BufferedWriter(outputStreamWriter0);
      // Undeclared exception!
      document0.outerHtmlTail(bufferedWriter0, 46, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("abbr", "");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlTail((Appendable) null, 1710, document_OutputSettings0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Document document0 = Document.createShell(":last-of-type");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ":last-of-type");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlTail(stringBuffer0, (-250592118), document_OutputSettings0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // width must be > 0
         //
         verifyException("org.jsoup.internal.StringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Document document0 = Parser.parse("qDqJt5\"zO[N<?<1", "qDqJt5\"zO[N<?<1");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlHead((Appendable) null, 6, document_OutputSettings0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Document document0 = Parser.parse("%?Yuf_:", "%?Yuf_:");
      StringWriter stringWriter0 = new StringWriter(62);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlHead(stringWriter0, (-1029), document_OutputSettings0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // width must be > 0
         //
         verifyException("org.jsoup.internal.StringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("qqJt5\"zO[N<b?<1", "qqJt5\"zO[N<b?<1");
      // Undeclared exception!
      try { 
        document0.lastElementSibling();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("org.jsoup.nodes.Element", "org.jsoup.nodes.Element");
      document0.reparentChild(document0);
      Evaluator.AttributeStarting evaluator_AttributeStarting0 = new Evaluator.AttributeStarting("selected");
      // Undeclared exception!
      document0.is((Evaluator) evaluator_AttributeStarting0);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Document document0 = Parser.parse("qqJt5\"zO[N<b?<1", "qqJt5\"zO[N<b?<1");
      // Undeclared exception!
      try { 
        document0.is((Evaluator) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("xkul!=bv7std<~", "xkul!=bv7std<~");
      Evaluator.Attribute evaluator_Attribute0 = new Evaluator.Attribute((String) null);
      // Undeclared exception!
      try { 
        document0.is((Evaluator) evaluator_Attribute0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Tag tag0 = Tag.valueOf("vgo7|duj");
      CDataNode cDataNode0 = new CDataNode("vgo7|duj");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "vgo7|duj", attributes0);
      Element element0 = formElement0.doClone(cDataNode0);
      Pattern pattern0 = Pattern.compile("z2#piiu[j]nU#/2", 32);
      Evaluator.MatchesOwn evaluator_MatchesOwn0 = new Evaluator.MatchesOwn(pattern0);
      // Undeclared exception!
      try { 
        element0.is((Evaluator) evaluator_MatchesOwn0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.nodes.CDataNode cannot be cast to org.jsoup.nodes.Element
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("@XJ;ynG3U", "@XJ;ynG3U");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.is("e");
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Document document0 = Parser.parse("qDqJt5\"zO[N<?<1", "qDqJt5\"zO[N<?<1");
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = (Node) document0;
      nodeArray0[1] = (Node) document0;
      nodeArray0[2] = (Node) document0;
      nodeArray0[3] = (Node) document0;
      nodeArray0[4] = (Node) document0;
      nodeArray0[5] = (Node) document0;
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration("<html>\n <head></head>\n <body>\n  &lt;#root&gt;\n  <!--#root-->\n </body>\n</html>", false);
      nodeArray0[6] = (Node) xmlDeclaration0;
      nodeArray0[7] = (Node) document0;
      // Undeclared exception!
      try { 
        document0.insertChildren(1, nodeArray0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("org.jsoup.nodes.Element", "org.jsoup.nodes.Element");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.html("org.jsoup.nodes.Element");
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Document document0 = new Document("g5GnM o&nGq");
      // Undeclared exception!
      try { 
        document0.html((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Document document0 = Parser.parse("&w", "&w");
      document0.reparentChild(document0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileWriter mockFileWriter0 = new MockFileWriter(fileDescriptor0);
      // Undeclared exception!
      document0.html(mockFileWriter0);
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Document document0 = Parser.parse("xml", "xml");
      // Undeclared exception!
      try { 
        document0.html((MockFileWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("#root", "String input must not be null");
      Element element0 = document0.head();
      element0.before((Node) document0);
      // Undeclared exception!
      element0.html();
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Document document0 = Document.createShell(",OdYp1'o7PYDb:qU");
      // Undeclared exception!
      try { 
        document0.hasClass((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("org.jsoup.nodes.Element", "org.jsoup.nodes.Element");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText((Pattern) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$Matches", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.select.Evaluator$IsNthOfType", "org.jsoup.select.Evaluator$IsNthOfType");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("vgo7|duj", "vgo7|duj");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText("su%ij7ZW.[iv");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pattern syntax error: su%ij7ZW.[iv
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(")=[A8svh", ")=[A8svh");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingOwnText((Pattern) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$MatchesOwn", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", " > ");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingOwnText((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Document document0 = Document.createShell("i?hq<[eunC");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingOwnText("i?hq<[eunC");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pattern syntax error: i?hq<[eunC
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Document document0 = Document.createShell("qqJt5\"zO[N<b?<1");
      document0.childNodes = null;
      // Undeclared exception!
      try { 
        document0.getElementsContainingOwnText("W;M9~|}3]yGPJh+l");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Document document0 = Document.createShell("jT?xcptv+PkL#w=");
      // Undeclared exception!
      try { 
        document0.getElementsByTag("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Document document0 = new Document("br");
      CDataNode cDataNode0 = new CDataNode("java.lang.string@0000000138");
      Element element0 = document0.tagName("+qAVBhYOu");
      element0.parentNode = (Node) cDataNode0;
      // Undeclared exception!
      try { 
        element0.getElementsByIndexEquals(8);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", " > ");
      // Undeclared exception!
      try { 
        document0.getElementsByClass("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueStarting("t\"K^WY<$>Ztx8", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.select.Evaluator$IsNthOfType", "org.jsoup.select.Evaluator$IsNthOfType");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueNot("<#root></#root>", "\"");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Document document0 = Parser.parse("", "/ ZhSfN#^!");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueNot("8vnj(v", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Element element0 = new Element("K[}q'y_RQlY");
      // Undeclared exception!
      try { 
        element0.getElementsByAttributeValueMatching("", "K[}q'y_RQlY");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pattern syntax error: K[}q'y_RQlY
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Element element0 = new Element(".ug?te}");
      // Undeclared exception!
      try { 
        element0.getElementsByAttributeValueEnding("UTF-", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Document document0 = new Document("defer");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueContaining("AvmK[W=I?^i;UgKV", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.select.Evaluator$IsNthOfType", "org.jsoup.select.Evaluator$IsNthOfType");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValue("org.jsoup.select.Evaluator$IsNthOfType", "\"");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Document document0 = Parser.parse("", "/ ZhSfN#^!");
      Element element0 = document0.attr("", true);
      // Undeclared exception!
      try { 
        element0.getElementsByAttributeStarting("f<zsK>B+4'_g^`^<osA");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("abbr", "");
      // Undeclared exception!
      try { 
        document0.getElementsByAttribute("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Tag tag0 = Tag.valueOf(")=[A8svh");
      CDataNode cDataNode0 = new CDataNode(")=[A8svh");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "}G)`MStTo5xo;v", attributes0);
      // Undeclared exception!
      try { 
        formElement0.getElementById("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Document document0 = Parser.parse("36[9y0?Vk", "-/u_`@GJo_bT6'$");
      // Undeclared exception!
      try { 
        document0.firstElementSibling();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("6UxKMo83yjR*'R9?`:o");
      FormElement formElement0 = new FormElement(tag0, "iypqo", attributes0);
      DataNode dataNode0 = DataNode.createFromEncoded("%sF?E!", "xml");
      Element element0 = formElement0.doClone(dataNode0);
      // Undeclared exception!
      try { 
        element0.firstElementSibling();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Document document0 = Parser.parse("6 dasa\"xbjf", "6 dasa\"xbjf");
      TextNode textNode0 = TextNode.createFromEncoded("6 dasa\"xbjf");
      document0.setParentNode(textNode0);
      // Undeclared exception!
      try { 
        document0.elementSiblingIndex();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Document document0 = new Document("fk2$");
      document0.charset((Charset) null);
      // Undeclared exception!
      try { 
        document0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Document$OutputSettings", e);
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Document document0 = Parser.parse("\"%{R", "seect");
      // Undeclared exception!
      try { 
        document0.classNames((Set<String>) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Document document0 = new Document("");
      // Undeclared exception!
      try { 
        document0.child(2);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Document document0 = Parser.parse("seect", "\"%{R");
      // Undeclared exception!
      try { 
        document0.child((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Document document0 = Document.createShell("N#|fBR;a1zU~");
      CDataNode cDataNode0 = new CDataNode("{O!+~k&l");
      cDataNode0.reparentChild(document0);
      // Undeclared exception!
      try { 
        document0.before((Node) cDataNode0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractList", e);
      }
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Document document0 = Document.createShell("N#|fBR;a1zU~");
      CDataNode cDataNode0 = new CDataNode("{O!+~k&l");
      Tag tag0 = Tag.valueOf("*+kz@6mk_3%29@]zb");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "*+kz@6mk_3%29@]zb", attributes0);
      cDataNode0.parentNode = (Node) formElement0;
      cDataNode0.reparentChild(document0);
      // Undeclared exception!
      try { 
        document0.before((Node) cDataNode0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(" ", "qqjt5\"zo[n<b?<1");
      Document document1 = (Document)document0.prependChild(document0);
      // Undeclared exception!
      document1.before(" ");
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Document document0 = Document.createShell(":");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.attr("", "");
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Document document0 = Parser.parse("qDqJt5\"zO[N<?<1", "qDqJt5\"zO[N<?<1");
      // Undeclared exception!
      try { 
        document0.attr((String) null, "<#root></#root>");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.ParseSettings", e);
      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Document document0 = Parser.parse("Children collection to be inserted must not be null.", "Children collection to be inserted must not be null.");
      // Undeclared exception!
      try { 
        document0.appendTo((Element) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Document document0 = new Document(")=[A8svh");
      // Undeclared exception!
      try { 
        document0.appendText((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("wnE]2b{+:_^>Y", "wnE]2b{+:_^>Y");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.appendElement("R7ghj| F5hOmN");
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("kW/u_`@GJo_b~'$", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("seect");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "", attributes0);
      // Undeclared exception!
      try { 
        formElement0.appendElement((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("!)=[A8svh", "!)=[A8svh");
      CDataNode cDataNode0 = new CDataNode("!)=[A8svh");
      DataNode dataNode0 = new DataNode("", "org.jsoup.select.Evaluator$AllElements");
      Node node0 = cDataNode0.doClone(dataNode0);
      // Undeclared exception!
      try { 
        document0.appendChild(node0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractList", e);
      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Document document0 = new Document("</");
      CDataNode cDataNode0 = new CDataNode("</");
      Node node0 = cDataNode0.doClone(document0);
      // Undeclared exception!
      try { 
        document0.appendChild(node0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("\"", "\"");
      // Undeclared exception!
      try { 
        document0.appendChild((Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Document document0 = Document.createShell("</");
      Element element0 = document0.body();
      element0.after((Node) document0);
      // Undeclared exception!
      element0.append("</");
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("qqJt5\"zO[N<b?<1", "qqJt5\"zO[N<b?<1");
      Element element0 = document0.body();
      element0.childNodes = null;
      // Undeclared exception!
      try { 
        element0.append("qqJt5\"zO[N<b?<1");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Tag tag0 = Tag.valueOf("o");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "|ztwk>Z", attributes0);
      // Undeclared exception!
      try { 
        formElement0.append((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("qqJt5\"zO[N<b?<1", "qqJt5\"zO[N<b?<1");
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration("qqJt5\"zO[N<b?<1", ")[W~Slq[:B=", false);
      document0.parentNode = (Node) xmlDeclaration0;
      // Undeclared exception!
      try { 
        document0.append("qqJt5\"zO[N<b?<1");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("2fkh2$", "2fkh2$");
      document0.appendChild(document0);
      // Undeclared exception!
      try { 
        document0.after((Node) document0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Document document0 = new Document("2fkh2$");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.after("2fkh2$");
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.nodes.Element");
      // Undeclared exception!
      try { 
        document0.addClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Element element0 = null;
      try {
        element0 = new Element((Tag) null, "m8g2\"/6B(rILb2J-ea", attributes0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      Element element0 = null;
      try {
        element0 = new Element((Tag) null, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Element element0 = null;
      try {
        element0 = new Element("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("ofrqames");
      FormElement formElement0 = new FormElement(tag0, "ofrqames", attributes0);
      formElement0.html((CharArrayWriter) null);
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("qqJt5\"zO[N<b?<1", "qqJt5\"zO[N<b?<1");
      document0.addClass("\n * ");
      document0.addClass("\n * ");
      document0.hasClass("qqJt5\"zO[N<b?<1");
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Document document0 = new Document("qqJt5\"zO[N<b?<1");
      document0.toggleClass("dQ! TbYMI(7");
      document0.addClass("qqJt5\"zO[N<b?<1");
      document0.hasClass("qqJt5\"zO[N<b?<1");
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Document document0 = Parser.parse("%?Y6fs:", "%?Y6fs:");
      Element element0 = document0.toggleClass("%?Y6fs:");
      element0.toggleClass("els6?xa;l$'+aup");
      element0.hasClass("java.lang.string@0000000038");
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      Document document0 = new Document("qqJt5\"zO[N<b?<1");
      document0.toggleClass("dQ! TbYMI(7");
      document0.hasClass("qqJt5\"zO[N<b?<1");
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Document document0 = Parser.parse("xml", "xml");
      document0.hasClass("xml");
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.select.Evaluator$IsNthOfType", "org.jsoup.select.Evaluator$IsNthOfType");
      Element element0 = document0.addClass("org.jsoup.select.Evaluator$IsNthOfType");
      element0.hasClass("org.jsoup.select.Evaluator$IsNthOfType");
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("PXS*k3ZNH+J)xn,r", "PXS*k3ZNH+J)xn,r");
      Charset charset0 = Charset.defaultCharset();
      Set<String> set0 = charset0.aliases();
      document0.classNames(set0);
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Document document0 = new Document("");
      document0.prependText("");
      document0.data();
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Document document0 = Parser.parse("qqJt5\"zO[N<b?<1", "qqJt5\"zO[N<b?<1");
      document0.html("&.");
      document0.hasText();
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("2fkh2$", "2fkh2$");
      document0.appendChild(document0);
      document0.text();
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.select.Evaluator$ContainsText", "vgo7|duj");
      document0.elementSiblingIndex();
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Document document0 = Parser.parse("qDqJt5\"zO[N<?<1", "qDqJt5\"zO[N<?<1");
      document0.appendChild(document0);
      document0.elementSiblingIndex();
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("org.jsoup.nodes.Element", "org.jsoup.nodes.Element");
      document0.reparentChild(document0);
      document0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.select.Evaluator$IsNthOfType", "org.jsoup.select.Evaluator$IsNthOfType");
      Element element0 = document0.head();
      element0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.select.Evaluator$IsNthOfType", "org.jsoup.select.Evaluator$IsNthOfType");
      document0.appendChild(document0);
      document0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      Document document0 = Parser.parse("qDqJt5\"zO[N<?<1", "qDqJt5\"zO[N<?<1");
      document0.appendChild(document0);
      document0.cssSelector();
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Document document0 = Parser.parse("seect", "\"%{R");
      Element element0 = document0.body();
      element0.append("\"%{R");
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Document document0 = Document.createShell(":last-of-type");
      document0.attributes();
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("%?Y6fs:", "%?Y6fs:");
      document0.className();
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Document document0 = Parser.parse("qqJt5\"zO[N<b?<1", "qqJt5\"zO[N<b?<1");
      // Undeclared exception!
      try { 
        document0.text((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Tag tag0 = Tag.valueOf("head");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "head", attributes0);
      formElement0.isBlock();
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      Document document0 = Document.createShell("menu");
      document0.empty();
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Document document0 = new Document("2fkh2$");
      document0.id();
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Element element0 = new Element("select");
      element0.classNames();
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Element element0 = new Element("br");
      StringBuffer stringBuffer0 = new StringBuffer("br");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings.Syntax document_OutputSettings_Syntax0 = Document.OutputSettings.Syntax.xml;
      document_OutputSettings0.syntax(document_OutputSettings_Syntax0);
      element0.outerHtmlHead(stringBuffer0, (-2260), document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Document document0 = Parser.parse("qqJt5\"zO[N<b?<1", "qqJt5\"zO[N<b?<1");
      Charset charset0 = Charset.defaultCharset();
      document0.charset(charset0);
      document0.toString();
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("2fkh2$", "2fkh2$");
      Document document1 = Parser.parseBodyFragment("2fkh2$", "2fkh2$");
      document1.appendChild(document0);
      document0.tagName("br");
      document1.toString();
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("qqJt5\"zO[N<b?<1", "qqJt5\"zO[N<b?<1");
      PipedWriter pipedWriter0 = new PipedWriter();
      // Undeclared exception!
      try { 
        document0.html(pipedWriter0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Pipe not connected
         //
         verifyException("org.jsoup.nodes.Node$OuterHtmlVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      Document document0 = Parser.parse("f3cE", "k1X_ *Spu'rhZXKU");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.prettyPrint(false);
      Document document1 = document0.outputSettings(document_OutputSettings1);
      document1.html();
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Tag tag0 = Tag.valueOf("textarea");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "tfopt", attributes0);
      formElement0.val();
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      Document document0 = new Document("qqJt5\"zO[N<b?<1");
      document0.toggleClass("dQ! TbYMI(7");
      Element element0 = document0.addClass("qqJt5\"zO[N<b?<1");
      element0.getElementsByClass("qqJt5\"zO[N<b?<1");
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      Document document0 = new Document("}I</.n+j7");
      document0.toggleClass("dQ! TbYMI(7");
      document0.addClass(" > ");
      document0.getElementsByClass("}I</.n+j7");
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%?Y6f_s:", "%?Y6f_s:");
      Element element0 = document0.toggleClass("%?Y6f_s:");
      element0.addClass("textarea");
      element0.addClass("V1_@X<s_m=F9");
      document0.getElementsByClass("%?Y6f_s:");
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%?Y6f_s:", "%?Y6f_s:");
      Element element0 = document0.toggleClass("%?Y6f_s:");
      Element element1 = element0.toggleClass("<html>\n <head></head>\n <body>\n  %?Y6f_s:\n </body>\n</html>");
      element1.hasClass("%?Y6f_s:");
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      Document document0 = Parser.parse("%?Y6f_s:", "%?Y6f_s:");
      document0.toggleClass("%?Y6f_s:");
      document0.hasClass("Tag name must not be empty.");
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("!)=[A8svh");
      Document document0 = Document.createShell("!)=[A8svh");
      document0.appendChild(cDataNode0);
      document0.data();
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.select.Evaluator$IsNthOfType", "org.jsoup.select.Evaluator$IsNthOfType");
      Comment comment0 = new Comment(",?dl{f(f", "^=");
      document0.appendChild(comment0);
      document0.data();
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode(" ");
      Document document0 = Document.createShell("qqJt5\"zO[N<b?<1");
      Element element0 = document0.appendChild(cDataNode0);
      element0.hasText();
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("he7d", "he7d");
      document0.hasText();
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("@XJ;ynG3U", "@XJ;ynG3U");
      document0.reparentChild(document0);
      document0.text();
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("#root");
      Element.preserveWhitespace(cDataNode0);
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      Document document0 = new Document("fk2$");
      Document document1 = new Document("fk2$");
      document1.appendChild(document0);
      document0.tagName("br");
      document1.getElementsContainingOwnText("br");
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("!)=[A8svh");
      Document document0 = Document.createShell("!)=[A8svh");
      document0.appendChild(cDataNode0);
      document0.text();
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      Document document0 = Parser.parse("qDqJt5\"zO[N<?<1", "qDqJt5\"zO[N<?<1");
      document0.getElementsContainingOwnText("");
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      Document document0 = Document.createShell("%?Yuf_:");
      document0.prepend("class");
      document0.appendText("%?Yuf_:");
      document0.text();
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      Document document0 = Document.createShell("qqJt5\"zO[N<b?<1");
      TextNode textNode0 = new TextNode((String) null);
      document0.appendChild(textNode0);
      // Undeclared exception!
      try { 
        document0.text();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.internal.StringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      Document document0 = new Document("2fkh2$");
      Document document1 = Parser.parseBodyFragment("2fkh2$", "2fkh2$");
      document1.appendChild(document0);
      document0.tagName("br");
      document1.text();
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Document document0 = Parser.parse("qDqJt5\"zO[N<?<1", "qDqJt5\"zO[N<?<1");
      document0.text();
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%?Y6f_s:", "%?Y6f_s:");
      document0.getElementById("java.lang.string@0000000116 %?y6f_s: v1_@x<s_m=f9");
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      Document document0 = Document.createShell("N]}Ubj`:j");
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) document0;
      document0.addChildren(nodeArray0);
      document0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.select.Evaluator$IsNthOfType", "org.jsoup.select.Evaluator$IsNthOfType");
      Element element0 = document0.shallowClone();
      element0.appendChild(document0);
      document0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Document document0 = Parser.parse("b?mT_", "b?mT_");
      Element element0 = document0.body();
      element0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("wnE]2b{+:_^>Y", "wnE]2b{+:_^>Y");
      document0.reparentChild(document0);
      document0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      Document document0 = Document.createShell("!)=[A8svh");
      Element element0 = document0.body();
      element0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("qqJt5\"zO[N<b?<1", "qqJt5\"zO[N<b?<1");
      document0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Element", "org.jsoup.nodes.Element");
      Element element0 = document0.head();
      element0.previousElementSiblings();
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      Document document0 = new Document("2fkh2$");
      Document document1 = Parser.parseBodyFragment("2fkh2$", "2fkh2$");
      Element element0 = document1.val("2fkh2$");
      Document document2 = (Document)document1.appendChild(document0);
      document2.reparentChild(document1);
      element0.nextElementSiblings();
      assertEquals(2, element0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      Tag tag0 = Tag.valueOf("f5");
      FormElement formElement0 = new FormElement(tag0, ")=[A8svh", (Attributes) null);
      formElement0.nextElementSibling();
      assertEquals(")=[A8svh", formElement0.baseUri());
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      Document document0 = new Document("</");
      document0.siblingElements();
      assertEquals("</", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.select.Evaluator$IsNthOfType", "org.jsoup.select.Evaluator$IsNthOfType");
      document0.appendChild(document0);
      Elements elements0 = document0.siblingElements();
      assertFalse(elements0.isEmpty());
      assertEquals("org.jsoup.select.Evaluator$IsNthOfType", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      Document document0 = Parser.parse("qqJt5\"zO[N<b?<1", "qqJt5\"zO[N<b?<1");
      Element element0 = document0.head();
      element0.before("qqJt5\"zO[N<b?<1");
      String string0 = element0.cssSelector();
      assertEquals("html > head:nth-child(3)", string0);
      assertEquals("qqJt5\"zO[N<b?<1", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      Document document0 = new Document("qqJt5\"zO[N<b?<1");
      Element element0 = document0.toggleClass("dQ! TbYMI(7");
      element0.cssSelector();
      assertEquals("qqJt5\"zO[N<b?<1", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.select.Evaluator$IsNthOfType", "org.jsoup.select.Evaluator$IsNthOfType");
      Node[] nodeArray0 = new Node[1];
      // Undeclared exception!
      try { 
        document0.insertChildren(12, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.select.Evaluator$IsNthOfType", "org.jsoup.select.Evaluator$IsNthOfType");
      Node[] nodeArray0 = new Node[0];
      // Undeclared exception!
      try { 
        document0.insertChildren((-754), nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("-/u_`@GJo_bT~'$", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("seect");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "36[9y0?Vk", attributes0);
      Node[] nodeArray0 = new Node[0];
      Element element0 = formElement0.insertChildren(0, nodeArray0);
      assertEquals("36[9y0?Vk", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      Document document0 = new Document("abbr");
      Elements elements0 = document0.getElementsByAttribute("I");
      Tag tag0 = document0.tag();
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "#data", attributes0);
      // Undeclared exception!
      try { 
        formElement0.insertChildren(381, (Collection<? extends Node>) elements0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      Tag tag0 = Tag.valueOf(")=[A8svh");
      CDataNode cDataNode0 = new CDataNode(")=[A8svh");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "#root", attributes0);
      LinkedHashSet<FormElement> linkedHashSet0 = new LinkedHashSet<FormElement>();
      // Undeclared exception!
      try { 
        formElement0.insertChildren((-1436010313), (Collection<? extends Node>) linkedHashSet0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("kW/u_`@GJo_b~'$", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("seect");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "kW/u_`@GJo_b~'$", attributes0);
      LinkedHashSet<FormElement> linkedHashSet0 = new LinkedHashSet<FormElement>();
      Element element0 = formElement0.insertChildren(0, (Collection<? extends Node>) linkedHashSet0);
      assertEquals("kW/u_`@GJo_b~'$", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      Document document0 = Parser.parse("ta%{sp{C,j*n", "ta%{sp{C,j*n");
      List<DataNode> list0 = document0.dataNodes();
      Element element0 = document0.insertChildren(0, (Collection<? extends Node>) list0);
      assertEquals("ta%{sp{C,j*n", element0.baseUri());
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      Document document0 = new Document("");
      document0.prependText("");
      List<TextNode> list0 = document0.textNodes();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      Document document0 = Document.createShell("");
      List<TextNode> list0 = document0.textNodes();
      assertEquals(1, document0.childNodeSize());
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      Document document0 = Document.createShell("%?Yuf_:");
      document0.prepend("class");
      document0.children();
      assertEquals(2, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("~C9i89kO<Y", "~C9i89kO<Y");
      Elements elements0 = document0.getElementsByIndexGreaterThan(1674);
      assertEquals("~C9i89kO<Y", document0.baseUri());
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      Tag tag0 = Tag.valueOf("ofrqames");
      CDataNode cDataNode0 = new CDataNode("\"=:z1)HV");
      Attributes attributes0 = cDataNode0.attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "ofrqames", attributes0);
      Element element0 = pseudoTextElement0.selectFirst("ofrqames");
      assertEquals("ofrqames", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      Document document0 = new Document("qqJt5\"zO[N<b?<1");
      Elements elements0 = document0.getElementsMatchingText("org.jsoup.nodes.Element");
      assertEquals("qqJt5\"zO[N<b?<1", document0.baseUri());
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "k[g]");
      // Undeclared exception!
      try { 
        document0.is("");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query '': unexpected token at ''
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      Element element0 = new Element("xml");
      Elements elements0 = element0.getAllElements();
      assertFalse(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      Document document0 = Parser.parse("qqJt5\"zO[N<b?<1", "qqJt5\"zO[N<b?<1");
      // Undeclared exception!
      try { 
        document0.before("qqJt5\"zO[N<b?<1");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("qqJt5\"zO[N<b?<1", "qqJt5\"zO[N<b?<1");
      document0.getElementsByAttributeValueNot("-", "E_)JM");
      assertEquals(1, document0.childNodeSize());
      assertEquals("qqJt5\"zO[N<b?<1", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      Tag tag0 = Tag.valueOf("z]Kon?R");
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "KHCdGXM X+m-,Jfrx|0", attributes0);
      Element element0 = pseudoTextElement0.appendTo(pseudoTextElement0);
      assertEquals("KHCdGXM X+m-,Jfrx|0", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      Document document0 = Document.createShell("");
      document0.doSetBaseUri("xMVx-7");
      assertEquals("xMVx-7", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      Document document0 = Parser.parse("%?Yuf_:", "%?Yuf_:");
      DataNode dataNode0 = new DataNode("style", "%?Yuf_:");
      // Undeclared exception!
      try { 
        document0.after((Node) dataNode0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("\"", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "noframes", attributes0);
      // Undeclared exception!
      try { 
        formElement0.getElementsByAttributeValueContaining("noframes", "\"");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("romnswae}!b/*", "romnswae}!b/*");
      Pattern pattern0 = Pattern.compile("romnswae}!b/*");
      document0.getElementsByAttributeValueMatching("romnswae}!b/*", pattern0);
      assertEquals(1, document0.childNodeSize());
      assertEquals("romnswae}!b/*", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      Element element0 = new Element("xml");
      Elements elements0 = element0.getElementsContainingText("value");
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("ofrqames");
      FormElement formElement0 = new FormElement(tag0, "x&", attributes0);
      // Undeclared exception!
      try { 
        formElement0.getElementsByAttributeValueEnding("rz X`&2xb#y3se", "'");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      Document document0 = new Document("b");
      Evaluator.IsNthLastChild evaluator_IsNthLastChild0 = new Evaluator.IsNthLastChild(2120, 2120);
      document0.is((Evaluator) evaluator_IsNthLastChild0);
      assertEquals("b", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      Document document0 = Parser.parse("qqJt5\"zO[N<b?<1", "qqJt5\"zO[N<b?<1");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueMatching((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      Document document0 = Document.createShell(":");
      Element element0 = document0.attr("", "");
      assertEquals(":", element0.baseUri());
      assertEquals(1, element0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("org.jsoup.nodes.Element", "org.jsoup.nodes.Element");
      // Undeclared exception!
      try { 
        document0.wrap("org.jsoup.select.structuralevaluator");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      Document document0 = Parser.parse("seect", "</");
      Elements elements0 = document0.getElementsMatchingOwnText("seect");
      assertEquals("</", document0.baseUri());
      assertEquals(1, elements0.size());
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      Document document0 = new Document("br");
      Elements elements0 = document0.getElementsByIndexEquals(8);
      assertEquals("br", document0.baseUri());
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      Document document0 = Parser.parse("", "/ ZhSfN#^!");
      document0.getElementsByAttributeStarting("f<zsK>B+4'_g^`^<osA");
      assertEquals("/ ZhSfN#^!", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      Document document0 = new Document("b");
      // Undeclared exception!
      try { 
        document0.prependElement("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      Tag tag0 = Tag.valueOf("z]Kon?R");
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "KHCdGXM X+m-,Jfrx|0", attributes0);
      pseudoTextElement0.getElementsByIndexLessThan(10);
      assertEquals("KHCdGXM X+m-,Jfrx|0", pseudoTextElement0.baseUri());
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      Document document0 = Parser.parse("seect", "\"%{R");
      // Undeclared exception!
      try { 
        document0.after("seect");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      Document document0 = Parser.parse("seect", "</");
      Pattern pattern0 = Pattern.compile("'vgo7|duj");
      Elements elements0 = document0.getElementsMatchingOwnText(pattern0);
      Element element0 = document0.insertChildren((-1), (Collection<? extends Node>) elements0);
      assertEquals("</", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      Element element0 = new Element("select");
      Element element1 = element0.prepend("<select></select>");
      assertFalse(element1.hasParent());
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Element", "org.jsoup.nodes.Element");
      Element element0 = document0.head();
      String string0 = element0.cssSelector();
      assertEquals("org.jsoup.nodes.Element", element0.baseUri());
      assertEquals("html > head", string0);
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("~C9i89kO<Y", "~C9i89kO<Y");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueStarting("class", "\"");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("R1oi6y4hbP", "R1oi6y4hbP");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValue("0N?zMmk", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      Document document0 = Parser.parse("seect", "</");
      // Undeclared exception!
      try { 
        document0.attr((String) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("html", "SFU");
      document0.wholeText();
      assertEquals(1, document0.childNodeSize());
      assertEquals("SFU", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("%?Y6fs:", "%?Y6fs:");
      // Undeclared exception!
      try { 
        document0.before((Node) document0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("2fkh2$", "2fkh2$");
      document0.dataset();
      assertEquals(1, document0.childNodeSize());
      assertEquals("2fkh2$", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      Tag tag0 = Tag.valueOf("textarea");
      CDataNode cDataNode0 = new CDataNode("textarea");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "A5'pZ.imw2IgcVm", attributes0);
      formElement0.val("textarea");
      formElement0.ownText();
      assertEquals(1, formElement0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.select.Evaluator$ContainsText", "vgo7|duj");
      assertEquals(1, document0.childNodeSize());
      
      Element element0 = document0.child(0);
      assertNotNull(element0);
      assertEquals("vgo7|duj", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Element", "org.jsoup.nodes.Element");
      document0.previousElementSiblings();
      assertEquals("org.jsoup.nodes.Element", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("he7d", "he7d");
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration("he7d", "uoo['6^9mn,", false);
      document0.prependChild(xmlDeclaration0);
      boolean boolean0 = document0.hasText();
      assertEquals(2, document0.childNodeSize());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      Document document0 = Parser.parse("xml", "xml");
      Pattern pattern0 = Pattern.compile("xml");
      document0.getElementsMatchingText(pattern0);
  }
}
