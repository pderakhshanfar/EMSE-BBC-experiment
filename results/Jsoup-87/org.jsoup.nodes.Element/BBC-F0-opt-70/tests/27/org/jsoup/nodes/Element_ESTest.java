/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 22 21:23:41 GMT 2021
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedWriter;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.io.OutputStreamWriter;
import java.io.PipedWriter;
import java.io.Reader;
import java.io.StringReader;
import java.io.StringWriter;
import java.nio.BufferOverflowException;
import java.nio.CharBuffer;
import java.nio.ReadOnlyBufferException;
import java.nio.charset.Charset;
import java.util.Collection;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import java.util.UnknownFormatConversionException;
import java.util.regex.Pattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.Comment;
import org.jsoup.nodes.DataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.DocumentType;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.nodes.PseudoTextElement;
import org.jsoup.nodes.TextNode;
import org.jsoup.nodes.XmlDeclaration;
import org.jsoup.parser.ParseErrorList;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Parser;
import org.jsoup.parser.Tag;
import org.jsoup.select.Elements;
import org.jsoup.select.Evaluator;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Element_ESTest extends Element_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Document document0 = Parser.parse("+%LT$Q&pl", "+%LT$Q&pl");
      document0.appendElement("~d");
      document0.toString();
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Document document0 = new Document("br");
      document0.getElementsByAttributeValueMatching("textarea", "iK08]q");
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Document document0 = new Document("java.lang.string@000000088");
      Document document1 = document0.clone();
      document1.parentNode = (Node) document1;
      document1.nextElementSiblings();
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Element element0 = new Element("br");
      element0.nodelistChanged();
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Document document0 = new Document("yT$Z[-2");
      document0.ensureChildNodes();
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("j&vajlang.string@0000j000;8", "j&vajlang.string@0000j000;8");
      document0.doSetBaseUri("<`$Q?g=z}%rQ4&!");
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Document document0 = Document.createShell("\"rdWK|w0of;mR");
      Parser parser0 = Parser.xmlParser();
      document0.parser(parser0);
      document0.wrap("\"rdWK|w0of;mR");
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Document document0 = Parser.parse("java.lang.string@0000000088", "java.lang.string@0000000088");
      Element element0 = document0.head();
      element0.wrap("=ZpK-e9YC B");
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("ScriptDataEscapedEndTagName", "org.jsoup.parser.TokeniserState");
      Element element0 = document0.body();
      element0.wrap("</");
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Tag tag0 = Tag.valueOf("org.jsoup.select.Selector");
      Attributes attributes0 = new Attributes();
      Element element0 = new Element(tag0, "", attributes0);
      element0.wholeText();
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Document document0 = Parser.parse("7MW&ES3)QH^ryG(s >", "7MW&ES3)QH^ryG(s >");
      Element element0 = document0.appendElement("C");
      element0.val("java.lang.string@0000000089 body");
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Element element0 = new Element("br");
      element0.siblingIndex = (-3282);
      element0.val("br");
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Document document0 = Document.createShell("7MW&ES3/H^ryG(s >");
      Element element0 = document0.val("LunZhsD");
      element0.val();
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Document document0 = Parser.parse("h<0aQ_>RHV?]%/AiK(", ".");
      Element element0 = document0.appendElement("id");
      element0.toggleClass("                   ");
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("LkK9", "<!--");
      document0.siblingIndex = (-630);
      document0.toggleClass("org.jsoup.parser.Token$EOF");
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Document document0 = Document.createShell("(:&hOIeFup");
      Element element0 = document0.head();
      element0.toggleClass("java.lang.string@0000000088");
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Element element0 = new Element("br");
      element0.setSiblingIndex((-1));
      element0.text("br");
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Element element0 = new Element("body");
      element0.text("java.lang.string@0000000109 body");
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Element element0 = new Element("br");
      Document document0 = Parser.parse("P_", "valu");
      element0.appendTo(document0);
      element0.text("br");
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Document document0 = Document.createShell("#root");
      document0.text();
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Document document0 = Parser.parse("7MW&ES3/H^ryG(s >", "7MW&ES3/H^ryG(s >");
      document0.tagName("header");
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(":nth-child(%d)", ":nth-child(%d)");
      Element element0 = document0.head();
      element0.tagName(":nth-child(%d)");
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Document document0 = Parser.parse("7MW&ES3/H^ryG(s >", "7MW&ES3/H^ryG(s >");
      document0.tagName();
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Element element0 = new Element("br");
      Document document0 = Parser.parse("br", "br");
      Element element1 = element0.appendTo(document0);
      element1.tag();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Document document0 = Parser.parse("7MW&ES3/H^ryG(s >", "7MW&ES3/H^ryG(s >");
      Element element0 = document0.body();
      element0.tag();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Document document0 = Parser.parse("br", "br");
      document0.tag();
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Document document0 = Document.createShell("ap>[:zi4FN:");
      Element element0 = document0.head();
      element0.shallowClone();
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Document document0 = Parser.parse("java.lang.string@000000088", "bgU*j+<RW8,[");
      document0.selectFirst("SS_lZY8");
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Document document0 = Parser.parse("7MW&ES3/H^ryG(s >", "7MW&ES3/H^ryG(s >");
      document0.selectFirst("head");
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Document document0 = Parser.parse("h<0aQ_>RHV?]%/AiK(", "|1");
      Element element0 = document0.appendElement("id");
      element0.selectFirst(",x");
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Element element0 = new Element("br");
      Element element1 = element0.text("br");
      element1.selectFirst("br");
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("G.X+DS,k($]v=q", "G.X+DS,k($]v=q");
      document0.select("html");
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Tag tag0 = Tag.valueOf("TZ^`B-bw ~`|g");
      Element element0 = new Element(tag0, "TZ^`B-bw ~`|g");
      element0.setSiblingIndex(17);
      element0.removeClass("shNm<?O");
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Element element0 = new Element("br");
      element0.setSiblingIndex((-1));
      element0.removeClass("<br>");
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Document document0 = Document.createShell("java.lang.string@0000000088");
      Element element0 = document0.head();
      Element element1 = element0.val("InTable");
      element1.removeClass("java.lang.string@0000000088");
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Document document0 = Parser.parse("7MW&ES3/H^ryG(s >", "7MW&ES3/H^ryG(s >");
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("7MW&ES3/H^ryG(s >", parseSettings0);
      Attributes attributes0 = new Attributes();
      Element element0 = new Element(tag0, "7MW&ES3/H^ryG(s >", attributes0);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = (Node) element0;
      nodeArray0[1] = (Node) element0;
      nodeArray0[2] = (Node) document0;
      nodeArray0[3] = (Node) document0;
      document0.addChildren(nodeArray0);
      document0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Document document0 = Parser.parse("+%LT$Q&pl", "+%LT$Q&pl");
      Element element0 = document0.appendElement("~d");
      element0.prependText("~d");
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Element element0 = new Element("br");
      element0.setSiblingIndex((-1417));
      element0.prependText("<br>br</br>");
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Document document0 = Document.createShell("E_;(j");
      Element element0 = document0.head();
      element0.prependText("{lz");
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Element element0 = new Element("G.X+DS,k($]v=q");
      element0.prependElement("html");
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Document document0 = Parser.parse("7MW&ES3/H^ryG(s >", "7MW&ES3/H^ryG(s >");
      Element element0 = document0.body();
      element0.prependChild(document0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Document document0 = Parser.parse("java.lang.string@0000000088", "java.lang.string@0000000088");
      document0.siblingIndex = (-1977);
      document0.prepend("java.lang.string@0000000088");
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("itemscope", "itemscope");
      Element element0 = document0.body();
      element0.prepend("zd'vx_/W(q=ri[J%#Ew");
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag0 = Tag.valueOf("Insert position out of bounds.", parseSettings0);
      Element element0 = new Element(tag0, "value");
      element0.parents();
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Document document0 = Parser.parse("7MW&ES3/H^ryG(s >", "7MW&ES3/H^ryG(s >");
      Element element0 = document0.body();
      element0.parents();
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Tag tag0 = Tag.valueOf("/ZF9Ed?aZ>t|V");
      CDataNode cDataNode0 = new CDataNode("/ZF9Ed?aZ>t|V");
      Attributes attributes0 = cDataNode0.attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "#root", attributes0);
      pseudoTextElement0.parent();
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("V99*&Mk_3F \"AKhz ", "V99*&Mk_3F \"AKhz ");
      document0.appendTo(document0);
      document0.parent();
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Document document0 = Parser.parse("!N@}n$}}qb,", "7MW&ES3/H^ryG(s >");
      Element element0 = document0.head();
      element0.parent();
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Document document0 = new Document("wwm0HZ.=n|=o<}It`Sq");
      document0.parentNode = (Node) document0;
      document0.parent();
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Element element0 = new Element("G.X+DS,k($]v=q");
      Element element1 = element0.appendElement("G.X+DS,k($]v=q");
      element1.parent();
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Document document0 = Parser.parse("7MW&ES3/H^ryG(s >", "7MW&ES3/H^ryG(s >");
      Element element0 = document0.body();
      element0.ownText();
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Document document0 = Document.createShell("Y;TY/XKYLt");
      document0.nodeName();
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Element element0 = new Element("br");
      Document document0 = Parser.parse("br", "(g");
      Document document1 = document0.clone();
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = (Node) element0;
      nodeArray0[1] = (Node) element0;
      nodeArray0[2] = (Node) document0;
      nodeArray0[3] = (Node) document1;
      nodeArray0[4] = (Node) document0;
      nodeArray0[5] = (Node) document1;
      nodeArray0[6] = (Node) document1;
      nodeArray0[7] = (Node) document1;
      nodeArray0[8] = (Node) document0;
      document0.addChildren(nodeArray0);
      document1.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      document0.text("");
      Element element0 = document0.head();
      element0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Document document0 = Document.createShell("7MW&ES3/H^ryG(s >");
      Element element0 = document0.text("7MW&ES3/H^ryG(s >");
      element0.prependElement("#root");
      element0.parentNode = (Node) document0;
      element0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Document document0 = Parser.parse("7MW&ES3/H^ryG(s >", "7MW&ES3/H^ryG(s >");
      Element element0 = document0.body();
      element0.isBlock();
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Document document0 = Document.createShell("l@`LoYz%`lGRnl}n*");
      Evaluator.IndexGreaterThan evaluator_IndexGreaterThan0 = new Evaluator.IndexGreaterThan((-636));
      document0.is((Evaluator) evaluator_IndexGreaterThan0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Document document0 = Document.createShell("0yXA'd}DH?");
      document0.is("kbd");
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Document document0 = Parser.parse("7MW&ES3/H^ryG(s >", "7MW&ES3/H^ryG(s >");
      Element element0 = document0.body();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) document0;
      element0.insertChildren(0, nodeArray0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Document document0 = Parser.parse("7MW&ES3/H^ryG(s >", "7MW&ES3/H^ryG(s >");
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) document0;
      document0.insertChildren(0, nodeArray0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("}e~cJ>kLwsO+", "S'V^'k9]-k<F.}H=");
      document0.siblingIndex = (-2145);
      document0.html("S'V^'k9]-k<F.}H=");
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Document document0 = Parser.parse(":matches(", "java.lang.string@0000000093");
      document0.html("");
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("'s`XU1~`B:Fs;BvkqL", "'s`XU1~`B:Fs;BvkqL");
      File file0 = MockFile.createTempFile("m4iA\"Ci", "'s`XU1~`B:Fs;BvkqL");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
      document0.html((Appendable) mockPrintWriter0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Document document0 = Parser.parse("7MW&ES3/H^ryG(s >", "7MW&ES3/H^ryG(s >");
      document0.html();
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Tag tag0 = Tag.valueOf("nCpATTwD4qDG:_G%\"");
      Element element0 = new Element(tag0, "math");
      element0.html();
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("head", "");
      document0.removeClass("J`R*o]`:~CmDQ*1Yc8J");
      document0.hasAttributes();
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Document document0 = Parser.parse("fZFXsLLT'u;?K}", "e>");
      document0.hasAttributes();
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Document document0 = Document.createShell("Inert position out of bounds.");
      Element element0 = document0.appendText("Inert position out of bounds.");
      Pattern pattern0 = Pattern.compile("Inert position out of bounds.");
      element0.getElementsMatchingText(pattern0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("java.lang.string@0000000096", "java.lang.string@0000000096");
      document0.getElementsMatchingText("java.lang.string@0000000096");
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Element element0 = new Element("G.X+DS,k($]v=q");
      Pattern pattern0 = Pattern.compile("[jvTF;vt", 26);
      element0.getElementsMatchingOwnText(pattern0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Document document0 = Document.createShell("ap>[:zi4FN:");
      Pattern pattern0 = Pattern.compile("");
      document0.getElementsMatchingOwnText(pattern0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Document document0 = Parser.parse("7MW&ES3/H^ryG(s >", "7MW&ES3/H^ryG(s >");
      document0.getElementsMatchingOwnText("");
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("ja_a.(%ng.string0000000088", "ja_a.(%ng.string0000000088");
      document0.getElementsContainingOwnText("ja_a.(%ng.string0000000088");
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("+yd.q", "+yd.q");
      document0.getElementsByTag("!;E;N`~");
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Element element0 = new Element("br");
      Document document0 = Parser.parse("br", "br");
      element0.appendTo(document0);
      document0.getElementsByTag("br");
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Document document0 = Document.createShell("=CQ$T]7|@/<W(\"D#TY");
      document0.getElementsByIndexLessThan(0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Element element0 = new Element("html");
      element0.getElementsByIndexGreaterThan((-2861));
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Element element0 = new Element("br");
      element0.getElementsByIndexEquals(59);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Document document0 = Parser.parse("7MW&ES3/H^ryG(s >", "7MW&ES3/H^ryG(s >");
      document0.getElementsByAttributeValueNot("java.lang.string@0000000136 body", " ");
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag0 = Tag.valueOf(">SKy~r^s", parseSettings0);
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("", true);
      FormElement formElement0 = new FormElement(tag0, "", attributes1);
      Pattern pattern0 = Pattern.compile("");
      formElement0.getElementsByAttributeValueMatching("", pattern0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("YV`tf~cd'B", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("YV`tf~cd'B");
      Attributes attributes0 = cDataNode0.attributes();
      Attribute attribute0 = new Attribute("YV`tf~cd'B", "YV`tf~cd'B", attributes0);
      attributes0.put(attribute0);
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "YV`tf~cd'B", attributes0);
      pseudoTextElement0.getElementsByAttributeValueMatching("YV`tf~cd'B", "YV`tf~cd'B");
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Element element0 = new Element("G.X+DS,k($]v=q");
      element0.getElementsByAttributeValueEnding("#", "G.X+DS,k($]v=q");
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Tag tag0 = Tag.valueOf("g");
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = Attribute.createFromEncoded("g", "g");
      attributes0.put(attribute0);
      Element element0 = new Element(tag0, "g", attributes0);
      element0.getElementsByAttributeStarting("g");
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Document document0 = Parser.parse("7MW&ES3/H^ryG(s >", "7MW&ES3/H^ryG(s >");
      Element element0 = document0.body();
      element0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Element element0 = new Element("br");
      element0.setSiblingIndex((-1239));
      element0.empty();
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Document document0 = Document.createShell("ap>[:zi4FN:");
      Element element0 = document0.head();
      element0.empty();
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Document document0 = Parser.parse("7MW&ES3/H^ryG(s >", "7MW&ES3/H^ryG(s >");
      Element element0 = document0.appendElement("C");
      element0.empty();
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Document document0 = new Document("value");
      document0.html("abbr");
      Element element0 = document0.appendElement("value");
      element0.doClone(document0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("7MW&ES3/H^ryG(s >", "7MW&ES3/H^ryG(s >");
      document0.doClone((Node) null);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Element$1", "org.jsoup.nodes.Element$1");
      Element element0 = document0.head();
      element0.doClone(document0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Document document0 = Parser.parse("7MW&ES3/H^ryG(s >", "7MW&ES3/H^ryG(s >");
      Element element0 = document0.body();
      LinkedHashSet<Document> linkedHashSet0 = new LinkedHashSet<Document>();
      Element element1 = element0.insertChildren(1, (Collection<? extends Node>) linkedHashSet0);
      element1.clone();
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Document document0 = Parser.parse("M f0jq%:iX", "M f0jq%:iX");
      document0.clone();
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Document document0 = Parser.parse("7W&ES3/H^ryG(s >", "7W&ES3/H^ryG(s >");
      Element element0 = document0.appendElement("7W&ES3/H^ryG(s >");
      Set<String> set0 = element0.classNames();
      element0.classNames(set0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Document document0 = Document.createShell("7MW&ES3/H^ryG(s >");
      Element element0 = document0.head();
      Locale locale0 = new Locale("bU", "7MW&ES3/H^ryG(s >", "<!--");
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      element0.classNames(set0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("G.X+DS,k($]v=q", "G.X+DS,k($]v=q");
      document0.toggleClass("html");
      document0.classNames();
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Document document0 = Document.createShell("-R");
      document0.toggleClass("S4:_|XF.';U`z");
      document0.className();
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Document document0 = Parser.parse("7MW&ES3/H^ryG(s >", "7MW&ES3/H^ryG(s >");
      Element element0 = document0.body();
      element0.children();
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Document document0 = Document.createShell("L~Z");
      document0.children();
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Element element0 = new Element("async");
      element0.childNodeSize();
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Document document0 = Parser.parse("h<0aQ_>RHV?]%/AiK(", "|1");
      document0.childNodeSize();
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("ja_a.(%ng.string0000000088", "ja_a.(%ng.string0000000088");
      document0.appendElement("kr");
      document0.child(1);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Document document0 = Parser.parse("7MW&ES3/H^ryG(s >", "7MW&ES3/H^ryG(s >");
      Element element0 = document0.body();
      element0.before((Node) document0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("java.lang.string@0000000088", "java.lang.string@0000000088");
      Element element0 = document0.appendElement("java.lang.string@0000000088");
      element0.before((Node) document0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("java.lang.string@0000000088", "java.lang.string@0000000088");
      Document document1 = document0.normalise();
      document1.parentNode = (Node) document0;
      document0.before((Node) document1);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Tag tag0 = Tag.valueOf("5SUJ\"$kx!q");
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "Pattern syntax error: ", attributes0);
      Element element0 = pseudoTextElement0.clone();
      pseudoTextElement0.parentNode = (Node) element0;
      pseudoTextElement0.before("java.lang.string@0000000113");
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Document document0 = Parser.parse("h<0aQ_>RHV?]%/AiK(", "h<0aQ_>RHV?]%/AiK(");
      Element element0 = document0.appendElement("java.lang.string@0000000127 title");
      element0.before("java.lang.string@0000000127 title");
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Document document0 = Document.createShell("ap>[:zi4FN:");
      Element element0 = document0.body();
      element0.before("ap>[:zi4FN:");
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Document document0 = Document.createShell("3}RmRN%_");
      document0.baseUri();
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Element element0 = new Element("p[nktcyj");
      element0.baseUri();
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Document document0 = Document.createShell("ap>[:zi4FN:");
      Element element0 = document0.val("ap>[:zi4FN:");
      element0.attributes();
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Document document0 = Parser.parse("h<0aQ_>RHV?]%/AK(", "|1");
      Element element0 = document0.appendElement("id");
      element0.attr("|1", true);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("G.X+DS,k($]v=q", "G.X+DS,k($]v=q");
      Element element0 = document0.head();
      element0.attr("JzzC=$+qWR46a", false);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Document document0 = new Document("br");
      document0.attr("br", true);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Document document0 = Parser.parse("7mw&es3/h^ryg(s >", "7mw&es3/h^ryg(s >");
      Element element0 = document0.appendElement("java.lang.string@0000000088");
      Element element1 = element0.html("y");
      element1.attr("source", "<html>\n <head></head>\n <body>\n  7mw&amp;es3/h^ryg(s &gt;\n </body>\n</html>\n<java.lang.string@0000000088>\n y\n</java.lang.string@0000000088>");
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.nodes.Element$NodeList");
      document0.setSiblingIndex((-1135735487));
      document0.attr("java.lang.string@0000000196 n3h{ez", ":parent%s");
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Document document0 = Document.createShell("E_;(j");
      Element element0 = document0.head();
      element0.attr("java.lang.string@0000000098", "java.lang.string@0000000098");
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(":nth-child(%d)", ":nth-child(%d)");
      Element element0 = document0.head();
      element0.appendTo(document0);
      element0.tagName(":nth-child(%d)");
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Document document0 = Parser.parse("7MW&ES3/H^ryG(s >", "7MW&ES3/H^ryG(s >");
      Element element0 = document0.body();
      LinkedHashSet<Document> linkedHashSet0 = new LinkedHashSet<Document>();
      Element element1 = element0.insertChildren(1, (Collection<? extends Node>) linkedHashSet0);
      element1.appendText("7MW&ES3/H^ryG(s >");
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Element element0 = new Element("html");
      element0.appendElement("html");
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Document document0 = Document.createShell("ap>[:zi4FN:");
      Element element0 = document0.head();
      element0.appendChild(document0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Document document0 = Document.createShell("ap>[:zi4FN:");
      document0.appendChild(document0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Tag tag0 = Tag.valueOf("TZ^`B-bw ~`|g");
      Element element0 = new Element(tag0, "TZ^`B-bw ~`|g");
      element0.setSiblingIndex(17);
      element0.append("shNm<?O");
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("ap>[:zi4FN:", "ap>[:zi4FN:");
      Element element0 = document0.head();
      element0.append("XaqEXco;");
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Document document0 = Document.createShell("h<0aQ_>RHV?]%/AiK(");
      Element element0 = document0.doClone(document0);
      element0.after((Node) document0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Element element0 = new Element("G.X+DS,k($]v=q");
      Element element1 = element0.appendElement("G.X+DS,k($]v=q");
      element1.after("org.jsoup.nodes.Element$2");
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Document document0 = Document.createShell("h<0aQ_>RHV?]%/AiK(");
      Element element0 = document0.body();
      element0.after("iv");
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("p[t%<<jhU}xx>nK", "p[t%<<jhU}xx>nK");
      Element element0 = document0.body();
      element0.after("p[t%<<jhU}xx>nK");
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("n3,{ez", "n3,{ez");
      document0.setSiblingIndex((-2055));
      document0.addClass("h'/5(-[F~K");
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("br", "br");
      Element element0 = document0.body();
      element0.addClass("CV>2$2m6=x");
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Document document0 = new Document("G.X+DS,k($]v=q");
      document0.addClass("n!*");
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Document document0 = Document.createShell("3}RmRN%_");
      document0.prependChild(document0);
      // Undeclared exception!
      document0.wrap("{g2}55N6hCCrcH1,");
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("rE*,ixs='", "a?E*G ovy");
      // Undeclared exception!
      try { 
        document0.wrap((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("7&ES3/H^ryG(s >", "7&ES3/H^ryG(s >");
      Element element0 = document0.text("7&ES3/H^ryG(s >");
      element0.parentNode = (Node) element0;
      // Undeclared exception!
      document0.val("#root");
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("mU@:Qk/KzIU}ULdy", "");
      Parser parser0 = Parser.htmlParser();
      parser0.settings((ParseSettings) null);
      Document document1 = document0.parser(parser0);
      // Undeclared exception!
      try { 
        document1.val("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Document document0 = Parser.parse("7MW&ES3/H^ryG(s >", "7MW&ES3/H^ryG(s >");
      // Undeclared exception!
      try { 
        document0.toggleClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("java.lang.string@0000000088", "java.lang.string@0000000088");
      Document document1 = document0.normalise();
      document1.childNodes = null;
      // Undeclared exception!
      try { 
        document1.textNodes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Document document0 = new Document("m=J");
      // Undeclared exception!
      try { 
        document0.text("m=J");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Tag tag0 = Tag.valueOf(".");
      Element element0 = new Element(tag0, ":nth-child(%d)");
      // Undeclared exception!
      try { 
        element0.text((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Document document0 = Document.createShell("java.lang.string@0000000085");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.tagName("java.lang.string@0000000085");
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Document document0 = Document.createShell("<![CDATA[");
      // Undeclared exception!
      try { 
        document0.selectFirst("b>HD+;No&[_qfw54)");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Did not find balanced marker at '_qfw54)'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("java.lang.string@0000000088", "<!--");
      // Undeclared exception!
      try { 
        document0.selectFirst("GQ[{W%iR??~wiAzp");
        fail("Expecting exception: UnknownFormatConversionException");
      
      } catch(UnknownFormatConversionException e) {
         //
         // Conversion = 'i'
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("<e;8fp= 8:SW", "<e;8fp= 8:SW");
      // Undeclared exception!
      try { 
        document0.selectFirst((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Element element0 = new Element("G.X+DS,k($]v=q");
      // Undeclared exception!
      try { 
        element0.select("Zb)u!Y;_8^T!");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query 'Zb)u!Y;_8^T!': unexpected token at ')u!Y;_8^T!'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Document document0 = Document.createShell("=CQ$T]7|@/<W(\"D#TY");
      // Undeclared exception!
      try { 
        document0.select("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Document document0 = new Document("java.lang.string@0000000088");
      // Undeclared exception!
      try { 
        document0.removeClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Element element0 = new Element("br");
      CDataNode cDataNode0 = new CDataNode("br");
      element0.parentNode = (Node) cDataNode0;
      // Undeclared exception!
      try { 
        element0.previousElementSiblings();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Document document0 = Parser.parse("7mw&es3/h^ryg(s >", "7mw&es3/h^ryg(s >");
      // Undeclared exception!
      try { 
        document0.prependText((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Document document0 = Document.createShell("Inert position out of bounds.");
      Element element0 = document0.text("Inert position out of bounds.");
      element0.parentNode = (Node) element0;
      // Undeclared exception!
      document0.prependElement("Inert position out of bounds.");
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Document document0 = new Document("m=J");
      // Undeclared exception!
      try { 
        document0.prependElement("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(" ", "<!--");
      ParseErrorList parseErrorList0 = ParseErrorList.tracking(18871);
      List<Node> list0 = Parser.parseFragment("n*", (Element) document0, " ", parseErrorList0);
      document0.childNodes = list0;
      DataNode dataNode0 = new DataNode("b>&^>YDR<a:N6!rG;");
      // Undeclared exception!
      try { 
        document0.prependChild(dataNode0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableList", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Element element0 = new Element("A 4B%Bk");
      CDataNode cDataNode0 = new CDataNode("2uldb]]c\"ku;pk2$");
      Node node0 = cDataNode0.doClone(element0);
      // Undeclared exception!
      try { 
        element0.prependChild(node0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Document document0 = Document.createShell("E_;(j");
      // Undeclared exception!
      try { 
        document0.prependChild((Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Document document0 = Parser.parse("7MW&ES3/H^ryG(s >", "7MW&ES3/H^ryG(s >");
      Element element0 = document0.text("7MW&ES3/H^ryG(s >");
      element0.parentNode = (Node) document0;
      // Undeclared exception!
      element0.prepend("7MW&ES3/H^ryG(s >");
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("ja_a.l%ng.string@0000000088", "ja_a.l%ng.string@0000000088");
      List<Node> list0 = Parser.parseFragment("s+", (Element) document0, "DoctypePublicIdentifier_singleQuoted");
      document0.childNodes = list0;
      // Undeclared exception!
      try { 
        document0.prepend("ja_a.l%ng.string@0000000088");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableList", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Element element0 = new Element("G.X+DS,k($]v=q");
      // Undeclared exception!
      try { 
        element0.prepend((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("jasa.lang.sting@00K0000088", "jasa.lang.sting@00K0000088");
      Comment comment0 = new Comment("html", "H");
      document0.parentNode = (Node) comment0;
      // Undeclared exception!
      try { 
        document0.prepend("template");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Document document0 = Document.createShell("title");
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(19);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(byteArrayOutputStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(objectOutputStream0, true);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document_OutputSettings0.indentAmount(1666);
      // Undeclared exception!
      document0.outerHtmlTail(mockPrintWriter0, 19, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf(".KE:", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, ".KE:", (Attributes) null);
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) ".KE:");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        formElement0.outerHtmlTail(charBuffer0, (-2692), document_OutputSettings0);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("#oot", "#oot");
      CharBuffer charBuffer0 = CharBuffer.allocate(63);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlTail(charBuffer0, 63, document_OutputSettings0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("java.lang.string@0000000096", "java.lang.string@0000000096");
      MockFile mockFile0 = new MockFile("}XrX:J/\"ldk<Z ", ";}Q");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      document0.outerHtmlTail(mockPrintStream0, 1192721831, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Document document0 = Parser.parse("7&ES3/H^ryG(s >", "7&ES3/H^ryG(s >");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlTail((Appendable) null, (-3588), document_OutputSettings0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Document document0 = Parser.parse("7MW&ES3/H^ryG(s >", "7MW&ES3/H^ryG(s >");
      StringBuffer stringBuffer0 = new StringBuffer("7MW&ES3/H^ryG(s >");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlTail(stringBuffer0, (-1405), document_OutputSettings0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // width must be > 0
         //
         verifyException("org.jsoup.internal.StringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Document document0 = Parser.parse("7M:&E 3/H^ryG(s >", "7M:&E 3/H^ryG(s >");
      MockFile mockFile0 = new MockFile("x", "x");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      OutputStreamWriter outputStreamWriter0 = new OutputStreamWriter(mockPrintStream0);
      BufferedWriter bufferedWriter0 = new BufferedWriter(outputStreamWriter0);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      bufferedWriter0.close();
      try { 
        document0.outerHtmlTail(bufferedWriter0, (-97), document_OutputSettings0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("java.lang.string@0000000088", "java.lang.string@0000000088");
      MockFile mockFile0 = new MockFile("java.lang.string@0000000088", "java.lang.string@0000000088");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      document0.outerHtmlHead(mockPrintWriter0, 24576, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("oB5", "oB5");
      CharBuffer charBuffer0 = CharBuffer.allocate(32);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlHead(charBuffer0, 32, document_OutputSettings0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Document document0 = Document.createShell("ap>[:zi4FN:");
      File file0 = MockFile.createTempFile("d8pe#j:8)H7", "");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0, false);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlHead(mockPrintWriter0, (-3064), document_OutputSettings0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // width must be > 0
         //
         verifyException("org.jsoup.internal.StringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("br", "br");
      PipedWriter pipedWriter0 = new PipedWriter();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      try { 
        document0.outerHtmlHead(pipedWriter0, 19, document_OutputSettings0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("java.lang.string@0000000088", "java.lang.string@0000000088");
      CDataNode cDataNode0 = new CDataNode("java.lang.string@0000000088");
      document0.setParentNode(cDataNode0);
      // Undeclared exception!
      try { 
        document0.nextElementSibling();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Document document0 = Parser.parse("7MW&ES3/H^ryG(s >", "7MW&ES3/H^ryG(s >");
      // Undeclared exception!
      try { 
        document0.lastElementSibling();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Document document0 = Parser.parse("n", "n");
      TextNode textNode0 = new TextNode("n");
      document0.parentNode = (Node) textNode0;
      // Undeclared exception!
      try { 
        document0.lastElementSibling();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("l3ez", "l3ez");
      document0.parentNode = (Node) document0;
      Pattern pattern0 = Pattern.compile("unexpected count of entities loaded");
      Evaluator.MatchesOwn evaluator_MatchesOwn0 = new Evaluator.MatchesOwn(pattern0);
      // Undeclared exception!
      document0.is((Evaluator) evaluator_MatchesOwn0);
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Document document0 = Document.createShell("K_;(j");
      // Undeclared exception!
      try { 
        document0.is((Evaluator) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Document document0 = Parser.parse("7MW&ES3/H^ryG(s >", "7MW&ES3/H^ryG(s >");
      // Undeclared exception!
      try { 
        document0.is("#root.java.lang.String@0000000054");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query '#root.java.lang.String@0000000054': unexpected token at '@0000000054'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Document document0 = Parser.parse("7W&ES3/H^ryG(s >", "7W&ES3/H^ryG(s >");
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = (Node) document0;
      nodeArray0[1] = (Node) document0;
      nodeArray0[2] = (Node) document0;
      // Undeclared exception!
      try { 
        document0.insertChildren((-1), nodeArray0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Document document0 = Document.createShell("java.lang.string@0000000088");
      Element element0 = document0.text("java.lang.string@0000000088");
      element0.parentNode = (Node) document0;
      // Undeclared exception!
      element0.html(" > ");
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("G.X+DS,k($]v=q", "a>XHdHV:XeWC8j");
      // Undeclared exception!
      try { 
        document0.html((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("java.lang.string@0000000088", "java.lang.string@0000000088");
      Element element0 = document0.text("java.lang.string@0000000088");
      element0.parentNode = (Node) document0;
      MockFileWriter mockFileWriter0 = new MockFileWriter("java.lang.string@0000000088", true);
      // Undeclared exception!
      document0.html(mockFileWriter0);
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("java.lang.string@0000000088", "<!--");
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "<!--");
      // Undeclared exception!
      try { 
        document0.html((Appendable) charBuffer0);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.StringCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Document document0 = Document.createShell("ja_.l%ng.sring@00000088");
      CharBuffer charBuffer0 = CharBuffer.allocate(21);
      // Undeclared exception!
      try { 
        document0.html(charBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Document document0 = Document.createShell("java.lang.string@0000000088");
      // Undeclared exception!
      try { 
        document0.html((PipedWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Document document0 = Document.createShell("7MW&ES3/H^ryG(s >");
      Element element0 = document0.text("7MW&ES3/H^ryG(s >");
      element0.parentNode = (Node) document0;
      // Undeclared exception!
      document0.html();
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("java.lang.string@0000000088", "java.lang.string@0000000088");
      document0.childNodes = null;
      // Undeclared exception!
      try { 
        document0.hasText();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      Tag tag0 = Tag.valueOf("kbd", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "l@`LoYz%`lGRnl}n*", (Attributes) null);
      // Undeclared exception!
      try { 
        formElement0.hasClass((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Document document0 = Document.createShell("qT!vFkM");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText((Pattern) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$Matches", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("compact", "compact");
      TextNode textNode0 = new TextNode("n;lNftJsbN{W", "java.lang.string@0000000196");
      document0.parentNode = (Node) textNode0;
      Pattern pattern0 = Pattern.compile("kr", (-1251));
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText(pattern0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Document document0 = Parser.parse("8|AMyA7+'O5WR", "T;4YK08iJ;MwtpUA");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Document document0 = new Document("m=J");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText("G.X+DS,k($]v=q");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pattern syntax error: G.X+DS,k($]v=q
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Tag tag0 = Tag.valueOf("br");
      Element element0 = new Element(tag0, ".zHk&[z?}widTkQ8v)");
      // Undeclared exception!
      try { 
        element0.getElementsMatchingOwnText((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Tag tag0 = Tag.valueOf("br");
      Element element0 = new Element(tag0, "063$(z7e%8uoo");
      // Undeclared exception!
      try { 
        element0.getElementsMatchingOwnText("063$(z7e%8uoo");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pattern syntax error: 063$(z7e%8uoo
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("n3,{ez", "n3,{ez");
      document0.parentNode = (Node) document0;
      document0.setSiblingIndex((-4579));
      // Undeclared exception!
      try { 
        document0.getElementsMatchingOwnText("ja_a.l%ng.string@0000000088");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("a[X^&oYdwco+^", "a[X^&oYdwco+^");
      DataNode dataNode0 = DataNode.createFromEncoded("java.lang.string@0000000193", "#%s");
      document0.parentNode = (Node) dataNode0;
      // Undeclared exception!
      try { 
        document0.getElementsContainingText("a[X^&oYdwco+^");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Document document0 = new Document("G.X+DS,k($]v=q");
      Element element0 = document0.appendElement("G.X+DS,k($]v=q");
      element0.setSiblingIndex((-2180));
      // Undeclared exception!
      try { 
        document0.getElementsContainingText("G.X+DS,k($]v=q");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("java.lang.string@0000000088", "java.lang.string@0000000088");
      Document document1 = document0.normalise();
      document1.childNodes = null;
      // Undeclared exception!
      try { 
        document1.getElementsContainingOwnText("A+ApQgW'-hx'GASHEBp");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("yXo", "'p0k\"{sm:");
      DataNode dataNode0 = DataNode.createFromEncoded("yXo", "'p0k\"{sm:");
      document0.setParentNode(dataNode0);
      // Undeclared exception!
      try { 
        document0.getElementsContainingOwnText("kr");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Document document0 = Parser.parse("a[X^&oYdwco+^", "a[X^&oYdwco+^");
      Element element0 = document0.appendElement("br");
      element0.siblingIndex = (-22693976);
      // Undeclared exception!
      try { 
        document0.getElementsContainingOwnText("br");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      // Undeclared exception!
      try { 
        document0.getElementsByTag("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("br", "br");
      document0.childNodes = null;
      // Undeclared exception!
      try { 
        document0.getElementsByIndexLessThan(339);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("bod7", "bod7");
      CDataNode cDataNode0 = new CDataNode((String) null);
      Element element0 = document0.doClone(cDataNode0);
      // Undeclared exception!
      try { 
        element0.getElementsByIndexGreaterThan(5);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("R6Mga,-A", "R6Mga,-A");
      document0.childNodes = null;
      // Undeclared exception!
      try { 
        document0.getElementsByIndexEquals(1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("l3ez", "l3ez");
      document0.siblingIndex = (-114);
      document0.parentNode = (Node) document0;
      // Undeclared exception!
      try { 
        document0.getElementsByIndexEquals(60);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("*bFpU7*|L&ZZ}^", "!WKXc8=@QFqs");
      LinkedHashSet<DataNode> linkedHashSet0 = new LinkedHashSet<DataNode>();
      Element element0 = document0.insertChildren(0, (Collection<? extends Node>) linkedHashSet0);
      List<Node> list0 = document0.childNodesCopy();
      element0.childNodes = list0;
      // Undeclared exception!
      try { 
        document0.getElementsByClass("<!--");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.NodeTraversor", e);
      }
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("kbd", "?9jGyOQMN>");
      // Undeclared exception!
      try { 
        document0.getElementsByClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("+yd.q", "+yd.q");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueStarting("#root", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("ja_a.l%ng.string@0000000088", "ja_a.l%ng.string@0000000088");
      document0.childNodes = null;
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueNot("ja_a.l%ng.string@0000000088", "qU%g=fb)oE-M5u#5");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      Document document0 = Parser.parse("h<0aQ_>RHV?]%/AK(", "|1");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueNot("0lCI_F0", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Document document0 = Parser.parse("7MW&ES3/H^ryG(s >", "7MW&ES3/H^ryG(s >");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueMatching("org.jsoup.helper.W3CDom$W3CBuilder", "esu#j,(n");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pattern syntax error: esu#j,(n
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      Document document0 = new Document("G.X+DS,k($]v=q");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueContaining("G.X+DS,k($]v=q", "\"");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Tag tag0 = Tag.valueOf("V99*&Mk_3F \"AKhz ");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "V99*&Mk_3F \"AKhz ", attributes0);
      // Undeclared exception!
      try { 
        formElement0.getElementsByAttributeValueContaining((String) null, "V99*&Mk_3F \"AKhz ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Document document0 = Document.createShell("#root");
      Element element0 = document0.head();
      element0.parentNode = (Node) document0;
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValue("org.jsoup.nodes.Element$2", "org.jsoup.nodes.element$nodelist");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.NodeTraversor", e);
      }
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Document document0 = Parser.parse("br", "");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValue("", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Document document0 = Parser.parse("7MW&ES3/H^ryG(s >", "7MW&ES3/H^ryG(s >");
      Element element0 = document0.head();
      element0.parentNode = (Node) document0;
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeStarting("LunZhsD");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.NodeTraversor", e);
      }
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      Document document0 = Parser.parse("7MW&ES3/H^ryG(s >", "7MW&ES3/H^ryG(s >");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeStarting((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Document document0 = new Document("Ct\"Q2XoK");
      // Undeclared exception!
      try { 
        document0.getElementsByAttribute((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("rE*,ixs='", "a?E*G ovy");
      // Undeclared exception!
      try { 
        document0.getElementById("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("l3ez", "l3ez");
      document0.siblingIndex = (-114);
      document0.parentNode = (Node) document0;
      // Undeclared exception!
      try { 
        document0.getAllElements();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("kbd", "l@`LoYz%`lGRnl}n*");
      // Undeclared exception!
      try { 
        document0.firstElementSibling();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("InHeadNoscript", "InHeadNoscript");
      Comment comment0 = new Comment("xTvZ=vM<YY)g&sM");
      XmlDeclaration xmlDeclaration0 = comment0.asXmlDeclaration();
      document0.setParentNode(xmlDeclaration0);
      // Undeclared exception!
      try { 
        document0.firstElementSibling();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("*bFpU7*|L&ZZ}^", "!WKXc8=@QFqs");
      LinkedHashSet<DataNode> linkedHashSet0 = new LinkedHashSet<DataNode>();
      List<Node> list0 = Parser.parseFragment("/e5\"}b", (Element) document0, "java.lang.string@0000000088");
      Element element0 = document0.insertChildren(0, (Collection<? extends Node>) linkedHashSet0);
      element0.childNodes = list0;
      // Undeclared exception!
      try { 
        element0.empty();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Element", " `W`&\bW!HB}1d");
      Comment comment0 = new Comment(" `W`&\bW!HB}1d", " `W`&\bW!HB}1d");
      document0.setParentNode(comment0);
      // Undeclared exception!
      try { 
        document0.elementSiblingIndex();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      Document document0 = new Document("V`=sa!JJ");
      document0.childNodes = null;
      // Undeclared exception!
      try { 
        document0.dataNodes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Element element0 = new Element("G.X+DS,k($]v=q");
      Element element1 = element0.appendElement("G.X+DS,k($]v=q");
      // Undeclared exception!
      try { 
        element1.cssSelector();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Did not find balanced marker at '$]v=q'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("I_b'~gQ9aKF-ax", "I_b'~gQ9aKF-ax");
      DocumentType documentType0 = new DocumentType("I_b'~gQ9aKF-ax", "I_b'~gQ9aKF-ax", "I_b'~gQ9aKF-ax", "I_b'~gQ9aKF-ax");
      document0.setParentNode(documentType0);
      // Undeclared exception!
      try { 
        document0.cssSelector();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag0 = Tag.valueOf("wvWf^", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("wvWf^");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "java.lang.string@0000000126", attributes0);
      String[] stringArray0 = new String[0];
      attributes0.keys = stringArray0;
      // Undeclared exception!
      try { 
        formElement0.cssSelector();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("G.X+DS,k($]v=q", "G.X+DS,k($]v=q");
      // Undeclared exception!
      try { 
        document0.classNames((Set<String>) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Element element0 = new Element("br");
      // Undeclared exception!
      try { 
        element0.child(2993);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2993, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      StringReader stringReader0 = new StringReader("T.)]:!HV1");
      Document document0 = parser0.parseInput((Reader) stringReader0, "T.)]:!HV1");
      // Undeclared exception!
      try { 
        document0.child((-2535));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(" `W`&\bW!HB}1d", "{H:KAS*uTPo");
      DataNode dataNode0 = new DataNode("{H:KAS*uTPo", "");
      dataNode0.reparentChild(document0);
      // Undeclared exception!
      try { 
        document0.before((Node) dataNode0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractList", e);
      }
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.select.Evaluator$AttributeWithValueNot");
      Element element0 = document0.head();
      element0.siblingIndex = 8216;
      // Undeclared exception!
      try { 
        element0.before((Node) document0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 8216, Size: 2
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("java.lang.string@0000000088", "java.lang.string@0000000088");
      Document document1 = document0.normalise();
      document1.parentNode = (Node) document0;
      // Undeclared exception!
      document0.before("");
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("ja_a.(ng.string@0000000088", "ja_a.(ng.string@0000000088");
      Element element0 = document0.appendElement("kr");
      element0.setSiblingIndex((-3634));
      // Undeclared exception!
      try { 
        element0.before(":nth-child(%d)");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -3634, Size: 2
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      Document document0 = Document.createShell("Inert position out of bounds.");
      // Undeclared exception!
      try { 
        document0.attr((String) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("org.jsoup.nodes.XmlDeclaration", parseSettings0);
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "`KV$gU_Rv_^iPH", (Attributes) null);
      pseudoTextElement0.appendTo(pseudoTextElement0);
      // Undeclared exception!
      pseudoTextElement0.attr("0K|[sY9{}l?S>&RMu", "^,blVUE@d7");
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Tag tag0 = Tag.valueOf("br");
      Element element0 = new Element(tag0, "063$(z7e%8uoo");
      // Undeclared exception!
      try { 
        element0.attr((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.ParseSettings", e);
      }
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Document document0 = Document.createShell("b;r");
      DataNode dataNode0 = DataNode.createFromEncoded("java.lang.string@0000000123", "java.lang.string@0000000123");
      document0.setParentNode(dataNode0);
      // Undeclared exception!
      try { 
        document0.appendTo(document0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractList", e);
      }
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      Document document0 = new Document("g.x+ds,k($]v=q");
      // Undeclared exception!
      try { 
        document0.appendTo((Element) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Document document0 = Document.createShell("Children collection to be inserted must not be null.");
      // Undeclared exception!
      try { 
        document0.appendText((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Document document0 = Document.createShell("java.lang.string@0000000088");
      Element element0 = document0.text("java.lang.string@0000000088");
      element0.parentNode = (Node) document0;
      // Undeclared exception!
      element0.appendElement("h<0aq_>rhv?]%/aik(");
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      Document document0 = Parser.parse("n3h{ez", "n3h{ez");
      Parser parser0 = Parser.xmlParser();
      List<Node> list0 = parser0.parseFragmentInput("n3h{ez", document0, "n3h{ez");
      document0.childNodes = list0;
      // Undeclared exception!
      try { 
        document0.appendElement("kr");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Q", "Usj=pM,R");
      Parser parser0 = Parser.xmlParser();
      parser0.settings((ParseSettings) null);
      Document document1 = document0.parser(parser0);
      // Undeclared exception!
      try { 
        document1.appendElement("kr");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.Tag", e);
      }
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Document document0 = Document.createShell("br");
      // Undeclared exception!
      try { 
        document0.appendElement((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Document document0 = Parser.parse("selicted", "jI3|~l");
      CDataNode cDataNode0 = new CDataNode("jI3|~l");
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration(" oU'Vg\"C'v", false);
      Node node0 = cDataNode0.doClone(xmlDeclaration0);
      // Undeclared exception!
      try { 
        document0.appendChild(node0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractList", e);
      }
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Document document0 = Parser.parse(")0v)vock}z}uo", ")0v)vock}z}uo");
      Element element0 = document0.head();
      element0.setSiblingIndex(144);
      // Undeclared exception!
      try { 
        document0.appendChild(element0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 144, Size: 2
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Document document0 = Parser.parse("h<0aQ_>RHV?]%/AK(", "|1");
      // Undeclared exception!
      try { 
        document0.appendChild((Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      Document document0 = Document.createShell("java.lang.string@0000000088");
      Element element0 = document0.text("java.lang.string@0000000088");
      element0.parentNode = (Node) document0;
      // Undeclared exception!
      element0.append("_f");
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      Document document0 = Parser.parse("7MW&ES3/H^ryG(s >", "7MW&ES3/H^ryG(s >");
      // Undeclared exception!
      try { 
        document0.append((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Document document0 = Document.createShell("br");
      DataNode dataNode0 = DataNode.createFromEncoded("br", "br");
      document0.parentNode = (Node) dataNode0;
      // Undeclared exception!
      try { 
        document0.after((Node) document0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractList", e);
      }
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      Document document0 = Document.createShell("");
      Element element0 = document0.body();
      // Undeclared exception!
      try { 
        element0.after((Node) element0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      Document document0 = Parser.parse("#root", "#root");
      document0.parentNode = (Node) document0;
      // Undeclared exception!
      document0.after("#root");
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("jasa.lang.sting@00K0000088", "jasa.lang.sting@00K0000088");
      Comment comment0 = new Comment("html", "H");
      document0.parentNode = (Node) comment0;
      // Undeclared exception!
      try { 
        document0.after("html");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      Document document0 = Parser.parse("br", "br");
      // Undeclared exception!
      try { 
        document0.addClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Element element0 = null;
      try {
        element0 = new Element((Tag) null, (String) null, attributes0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Element element0 = null;
      try {
        element0 = new Element((Tag) null, " > ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Element element0 = null;
      try {
        element0 = new Element((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      Document document0 = Document.createShell("Yp\":P1k&sG");
      PipedWriter pipedWriter0 = new PipedWriter();
      // Undeclared exception!
      try { 
        document0.html(pipedWriter0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Pipe not connected
         //
         verifyException("org.jsoup.nodes.Node$OuterHtmlVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Document document0 = Document.createShell("Inert position out of bounds.");
      Element element0 = document0.createElement("Inert position out of bounds.");
      element0.html((BufferedWriter) null);
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("java.lang.string@0000000088", "java.lang.string@0000000088");
      Element element0 = document0.toggleClass(" `W`&\bW!HB}1d");
      document0.toggleClass("java.lang.string@0000000041");
      element0.toggleClass("InCaption");
      document0.hasClass("java.lang.string@0000000041");
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      Document document0 = Document.createShell("-R");
      document0.hasClass(" > ");
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      Document document0 = Document.createShell("java.lang.string@0000000038");
      Charset charset0 = Charset.defaultCharset();
      Set<String> set0 = charset0.aliases();
      document0.classNames(set0);
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("d", "s+");
      document0.data();
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      Document document0 = Document.createShell("java.lang.string@0000000088");
      Element element0 = document0.appendText("var");
      element0.hasText();
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      Document document0 = Document.createShell("ap>[:zi4FN:");
      document0.elementSiblingIndex();
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      Document document0 = Parser.parse("h<0aQ_>RHV?]%/AiK(", "h<0aQ_>RHV?]%/AiK(");
      Element element0 = document0.appendElement("h<0aQ_>RHV?]%/AiK(");
      element0.elementSiblingIndex();
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      Element element0 = new Element("G.X+DS,k($]v=q");
      Element element1 = element0.appendElement("InHeadNoscript");
      element1.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Document document0 = Parser.parse("7MW&ES3/H^ryG(s >", "7MW&ES3/H^ryG(s >");
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = (Node) document0;
      nodeArray0[1] = (Node) document0;
      nodeArray0[2] = (Node) document0;
      nodeArray0[3] = (Node) document0;
      document0.addChildren(nodeArray0);
      document0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      Element element0 = new Element("G.X+DS,k($]v=q");
      Element element1 = element0.appendElement("G.X+DS,k($]v=q");
      element1.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      Document document0 = Parser.parse("ja_.l%ng.string@0000000088", "ja_.l%ng.string@0000000088");
      Element element0 = document0.head();
      element0.html("body");
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", " > ");
      document0.attributes();
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("java.lang.string@0000000088", "java.lang.string@0000000088");
      document0.className();
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      Document document0 = Document.createShell("7MW&ES3/H^ryG(s >");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingOwnText((Pattern) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$MatchesOwn", e);
      }
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      Document document0 = new Document("yT$Z[-2");
      document0.ownText();
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      Document document0 = Parser.parse("7MW&ES3/H^ryG(s >", "7MW&ES3/H^ryG(s >");
      document0.isBlock();
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      Tag tag0 = Tag.valueOf("8C[~<<EKJrEl!YIKUF#", parseSettings0);
      Element element0 = new Element(tag0, "8C[~<<EKJrEl!YIKUF#");
      Evaluator.IsLastChild evaluator_IsLastChild0 = new Evaluator.IsLastChild();
      element0.is((Evaluator) evaluator_IsLastChild0);
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      Element element0 = new Element("br");
      element0.append("");
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      Document document0 = Parser.parse("7MW&ES3/H^ryG(s >", "7MW&ES3/H^ryG(s >");
      document0.text();
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      Element element0 = new Element("br");
      element0.text("br");
      element0.toString();
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      Document document0 = Document.createShell("Tag name must not be empty.");
      File file0 = MockFile.createTempFile("Tag name must not be empty.", "e");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.prettyPrint(false);
      document0.outerHtmlTail(mockPrintWriter0, 67, document_OutputSettings1);
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      Element element0 = new Element("br");
      StringWriter stringWriter0 = new StringWriter(2064);
      BufferedWriter bufferedWriter0 = new BufferedWriter(stringWriter0, 59);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings.Syntax document_OutputSettings_Syntax0 = Document.OutputSettings.Syntax.xml;
      document_OutputSettings0.syntax(document_OutputSettings_Syntax0);
      element0.outerHtmlHead(bufferedWriter0, 59, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      Element element0 = new Element("br");
      StringWriter stringWriter0 = new StringWriter(2064);
      BufferedWriter bufferedWriter0 = new BufferedWriter(stringWriter0, 59);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document_OutputSettings0.outline(true);
      element0.outerHtmlHead(bufferedWriter0, 59, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      Element element0 = new Element("br");
      Tag tag0 = Tag.valueOf("br", (ParseSettings) null);
      Element element1 = new Element(tag0, "br");
      element0.parentNode = (Node) element1;
      element0.toString();
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      Element element0 = new Element("br");
      Document document0 = Parser.parse("P_", "value");
      element0.appendTo(document0);
      element0.toString();
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      Document document0 = Document.createShell("#root");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document_OutputSettings0.prettyPrint(false);
      // Undeclared exception!
      try { 
        document0.outerHtmlHead((Appendable) null, 397, document_OutputSettings0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      Element element0 = new Element("textarea");
      element0.val("U@sl:");
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      Element element0 = new Element("textarea");
      element0.val();
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("java.lang.string@0000000088", "<!--");
      document0.toggleClass("org.jsoup.parser.Token$EOF");
      Element element0 = document0.toggleClass("<!--");
      element0.toggleClass("<!--");
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("j&vajlang.string@0000j000;8", "j&vajlang.string@0000j000;8");
      document0.toggleClass("");
      document0.toggleClass("");
      document0.hasClass("j&vajlang.string@0000j000;8");
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("java.lang.string@0000000088", "java.lang.string@0000000088");
      Element element0 = document0.toggleClass(" `W`&\bW!HB}1d");
      document0.toggleClass("java.lang.string@0000000041");
      element0.toggleClass("InCaption");
      document0.getElementsByClass("java.lang.string@0000000041");
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("java.lang.string@0000000088", "java.lang.string@0000000088");
      document0.toggleClass(" `W`&\bW!HB}1d");
      document0.toggleClass("java.lang.string@0000000041");
      document0.hasClass("java.lang.string@0000000041");
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("java.lang.string@0000000088", "java.lang.string@0000000041 a&4aik*-ge'7");
      document0.toggleClass("java.lang.string@0000000041 a&4aik*-ge'7");
      document0.toggleClass(" `W`&\bW!HB}1d");
      document0.hasClass("Gv*gAa&");
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      Document document0 = Parser.parse("M f0jq%:iX", "M f0jq%:iX");
      document0.toggleClass("M f0jq%:iX");
      document0.toggleClass("M f0jq%:iX");
      document0.hasClass("M f0jq%:iX");
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      Document document0 = Parser.parse("M f0jq%:iX", "M f0jq%:iX");
      document0.toggleClass("M f0jq%:iX");
      document0.hasClass("M f0jq%:iX");
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("G.X+DS,k($]v=q", "G.X+DS,k($]v=q");
      document0.toggleClass("Children collection to be inserted must not be null.");
      document0.hasClass("java.lang.string@0000000137 body");
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("ja_a.l%ng.string@0000000088", "ja_a.l%ng.string@0000000088");
      document0.toggleClass("ja_a.l%ng.string@0000000088");
      document0.hasClass("ja_a.l%ng.string@0000000088");
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("ja_a.(%ng.string0000000088", "ja_a.(%ng.string0000000088");
      CDataNode cDataNode0 = new CDataNode("X3x ~{cc'");
      document0.appendChild(cDataNode0);
      document0.data();
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("<!--", "<!--");
      document0.data();
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("l3ez", "l3ez");
      DataNode dataNode0 = DataNode.createFromEncoded("#root", "java.lang.string@0000000048");
      document0.appendChild(dataNode0);
      document0.data();
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("<!--", "<!--");
      document0.hasText();
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      Document document0 = Parser.parse("br", "br");
      document0.hasText();
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      Document document0 = Parser.parse("#root", "#root");
      document0.parentNode = (Node) document0;
      document0.getElementsContainingText("#root");
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      Element.preserveWhitespace((Node) null);
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      Document document0 = new Document("br");
      document0.appendElement("br");
      document0.prependElement("br");
      document0.getElementsContainingOwnText("br");
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      Document document0 = Parser.parse("java.lang.string@000000088", "bgU*j+<RW8,[");
      Element element0 = document0.appendElement("({tv9W<@*GizTr");
      CDataNode cDataNode0 = new CDataNode("({tv9W<@*GizTr");
      element0.replaceWith(cDataNode0);
      document0.getElementsContainingText("java.lang.string@000000088");
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("<!--", "=&@{Z&|FJkHmvN]");
      document0.getElementsContainingOwnText(":QycnR-tFlB:8qGBY");
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      Document document0 = Document.createShell("E_;(j");
      document0.prepend("E_;(j");
      document0.appendText("E_;(j");
      document0.getElementsContainingText("E_;(j");
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      Element element0 = new Element("br");
      Document document0 = Parser.parse("P_", "valu");
      element0.appendTo(document0);
      document0.getElementsContainingText("disabled");
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      Document document0 = Parser.parse("7MW&ES3)QH^ryG(s >", "7MW&ES3)QH^ryG(s >");
      document0.appendElement("C");
      document0.getElementsContainingText("C");
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      document0.getElementById("ZT");
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      Document document0 = Parser.parse("7MW&ES3/H^ryG(s >", "7MW&ES3/H^ryG(s >");
      Element element0 = document0.appendElement("C");
      element0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      Document document0 = Parser.parse("7MW&ES3/H^ryG(s >", "7MW&ES3/H^ryG(s >");
      Element element0 = document0.text("7MW&ES3/H^ryG(s >");
      element0.parentNode = (Node) document0;
      element0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      Document document0 = Document.createShell("\"rdWK|w0of;mR");
      Element element0 = document0.appendElement("\"rdWK|w0of;mR");
      element0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      Element element0 = new Element("G.X+DS,k($]v=q");
      Element element1 = element0.appendElement("G.X+DS,k($]v=q");
      element1.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("+", "Ng");
      Element element0 = document0.appendElement("jav.lang.string@000000089 body");
      element0.previousElementSiblings();
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("rE*,ixs='", "a?E*G ovy");
      document0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      Document document0 = Document.createShell("E_;(j");
      Element element0 = document0.head();
      Elements elements0 = element0.nextElementSiblings();
      assertEquals(0, element0.siblingIndex());
      assertEquals(1, elements0.size());
      assertEquals("E_;(j", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      Element element0 = document0.nextElementSibling();
      assertNull(element0);
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      Document document0 = Document.createShell("%x?sO0");
      Element element0 = document0.head();
      Element element1 = element0.nextElementSibling();
      assertEquals("%x?sO0", element1.baseUri());
      assertNotNull(element1);
      assertEquals(1, element1.siblingIndex());
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      Document document0 = Parser.parse("ap>[:zi4FN:", "M.saELaE(=");
      Element element0 = document0.body();
      Elements elements0 = element0.siblingElements();
      assertEquals(1, elements0.size());
      assertEquals("M.saELaE(=", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("7&ES3/H^ryG(s >", "7&ES3/H^ryG(s >");
      document0.siblingElements();
      assertEquals("7&ES3/H^ryG(s >", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("jasa.lang.sting@00K0000088", "jasa.lang.sting@00K0000088");
      Comment comment0 = new Comment("html", "H");
      document0.parentNode = (Node) comment0;
      // Undeclared exception!
      try { 
        document0.siblingElements();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      Document document0 = Parser.parse("7MW&ES3/H^ryG(s >", "7MW&ES3/H^ryG(s >");
      Element element0 = document0.body();
      element0.before("textarea");
      String string0 = element0.cssSelector();
      assertEquals("7MW&ES3/H^ryG(s >", element0.baseUri());
      assertEquals("html > body:nth-child(4)", string0);
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      Document document0 = Parser.parse("7MW&ES3/H^ryG(s >", "7MW&ES3/H^ryG(s >");
      Element element0 = document0.body();
      String string0 = element0.cssSelector();
      assertEquals("7MW&ES3/H^ryG(s >", element0.baseUri());
      assertEquals("html > body", string0);
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("7&ES3/H^ryG(s >", "7&ES3/H^ryG(s >");
      Element element0 = document0.text("7&ES3/H^ryG(s >");
      element0.parentNode = (Node) element0;
      String string0 = document0.cssSelector();
      assertEquals("7&ES3/H^ryG(s >", document0.baseUri());
      assertEquals("#root", string0);
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      Document document0 = Parser.parse("7MW&ES3/H^ryG(s >", "7MW&ES3/H^ryG(s >");
      document0.toggleClass("meta[name=charset]");
      document0.cssSelector();
      assertEquals("7MW&ES3/H^ryG(s >", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("kbd", "l@`LoYz%`lGRnl}n*");
      Node[] nodeArray0 = new Node[0];
      // Undeclared exception!
      try { 
        document0.insertChildren(15, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      Document document0 = Document.createShell("ap>[:zi4FN:");
      Node[] nodeArray0 = new Node[0];
      // Undeclared exception!
      try { 
        document0.insertChildren((-2040306348), nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      Document document0 = Document.createShell("");
      Node[] nodeArray0 = new Node[0];
      Element element0 = document0.insertChildren(1, nodeArray0);
      assertEquals(1, element0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      Document document0 = Document.createShell("ap>[:zi4FN:");
      LinkedHashSet<Comment> linkedHashSet0 = new LinkedHashSet<Comment>();
      // Undeclared exception!
      try { 
        document0.insertChildren((-2519), (Collection<? extends Node>) linkedHashSet0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("java.lang.string@0000000088", "java.lang.string@0000000088");
      Elements elements0 = document0.getElementsContainingText("java.lang.string@0000000088");
      // Undeclared exception!
      try { 
        document0.insertChildren((-1), (Collection<? extends Node>) elements0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      Document document0 = Document.createShell("7MW&ES3/H^ryG(s >");
      Elements elements0 = document0.getElementsContainingText("7MW&ES3/H^ryG(s >");
      // Undeclared exception!
      try { 
        document0.insertChildren(302, (Collection<? extends Node>) elements0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      Document document0 = Parser.parse("p[nktcyj", "p[nktcyj");
      DataNode dataNode0 = new DataNode(":-=&(");
      document0.prependChild(dataNode0);
      List<DataNode> list0 = document0.dataNodes();
      assertEquals("p[nktcyj", document0.baseUri());
      assertTrue(list0.contains(dataNode0));
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      document0.prepend("org.jsoup.nodes.Element$NodeList");
      document0.textNodes();
      assertEquals(2, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      Document document0 = Document.createShell("Inert position out of bounds.");
      document0.appendText("Inert position out of bounds.");
      Element element0 = document0.text("Inert position out of bounds.");
      element0.parentNode = (Node) element0;
      document0.previousElementSiblings();
      assertEquals(2, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      Tag tag0 = Tag.valueOf("org.jsoup.select.Selector");
      FormElement formElement0 = new FormElement(tag0, "?<u&EnFB[IDqG", (Attributes) null);
      Elements elements0 = formElement0.getElementsByIndexGreaterThan(2845);
      assertEquals("?<u&EnFB[IDqG", formElement0.baseUri());
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      Element element0 = new Element("G.X+DS,k($]v=q");
      Elements elements0 = element0.getElementsMatchingText("body");
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      Document document0 = Document.createShell("h<0aQ_>RHV?]%/AiK(");
      document0.getAllElements();
      assertEquals("h<0aQ_>RHV?]%/AiK(", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      Document document0 = Document.createShell("ap>[:zi4FN:");
      // Undeclared exception!
      try { 
        document0.before("ap>[:zi4FN:");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("org.jsoup.nodes.XmlDeclaration", parseSettings0);
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "`KV$gU_Rv_^iPH", (Attributes) null);
      pseudoTextElement0.getElementsByAttribute("org.jsoup.nodes.XmlDeclaration");
      assertEquals("`KV$gU_Rv_^iPH", pseudoTextElement0.baseUri());
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("ja_a.l%ng.string@0000000088", "ja_a.l%ng.string@0000000088");
      document0.getElementsByAttributeValueNot("ja_a.l%ng.string@0000000088", "qU%g=fb)oE-M5u#5");
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("kbd", "l@`LoYz%`lGRnl}n*");
      Element element0 = document0.shallowClone();
      assertEquals("l@`LoYz%`lGRnl}n*", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      Document document0 = Parser.parse("1H$/B", "1H$/B");
      List<Node> list0 = document0.childNodesCopy();
      document0.childNodes = list0;
      // Undeclared exception!
      try { 
        document0.getElementsByTag("1H$/B");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.NodeTraversor", e);
      }
  }

  @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      Document document0 = Document.createShell("h<0aQ_>RHV?]%/AiK(");
      // Undeclared exception!
      try { 
        document0.after((Node) document0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      Element element0 = new Element("textarea");
      Elements elements0 = element0.getElementsByAttributeValueContaining("5{k|>X_Fz_T", "@\u0001b'MC^ly-4hB-_uu");
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      Document document0 = Document.createShell("java.lang.string@0000000088");
      document0.getElementsByAttributeValueMatching("C(U>'Dz2AN`", (Pattern) null);
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test342()  throws Throwable  {
      Document document0 = Parser.parse("<!", "<!");
      Elements elements0 = document0.getElementsContainingText(" ");
      assertEquals("<!", document0.baseUri());
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test343()  throws Throwable  {
      Tag tag0 = Tag.valueOf("V99*&Mk_3F \"AKhz ");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "V99*&Mk_3F \"AKhz ", attributes0);
      Elements elements0 = formElement0.getElementsByClass("org.jsoup.nodes.Node");
      assertEquals("V99*&Mk_3F \"AKhz ", formElement0.baseUri());
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test344()  throws Throwable  {
      Document document0 = Document.createShell("ap>[Fzi4FN:");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueEnding((String) null, "uO7!QQ5/H%#.C!4hQ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test345()  throws Throwable  {
      Element element0 = new Element("textarea");
      boolean boolean0 = element0.is("textarea");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test346()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.parser.Tokeniser");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueMatching("l@`LoYz%`lGRnl}n*", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test347()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("R6Mga,-A", "R6Mga,-A");
      Elements elements0 = document0.getElementsByIndexEquals(1);
      assertEquals(1, document0.childNodeSize());
      assertEquals("R6Mga,-A", document0.baseUri());
      assertEquals(1, elements0.size());
  }

  @Test(timeout = 4000)
  public void test348()  throws Throwable  {
      Document document0 = Parser.parse("!N@}n$}}qb,", "7MW&ES3/H^ryG(s >");
      document0.getElementsByAttributeStarting("7MW&ES3/H^ryG(s >");
      assertEquals("7MW&ES3/H^ryG(s >", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test349()  throws Throwable  {
      Document document0 = new Document("h<0aQ_>RHV?]%/AiK(");
      Document document1 = document0.normalise();
      Element element0 = document1.body();
      element0.after((Node) document0);
      assertEquals(2, document0.siblingIndex());
      assertEquals("h<0aQ_>RHV?]%/AiK(", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test350()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("br", "br");
      Elements elements0 = document0.getElementsByIndexLessThan(339);
      assertEquals("br", document0.baseUri());
      assertFalse(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test351()  throws Throwable  {
      Document document0 = Document.createShell("h<0aQ_>RHV?]%/AiK(");
      // Undeclared exception!
      try { 
        document0.after("iv");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test352()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("n3,{ez", "n3,{ez");
      Elements elements0 = document0.getElementsMatchingOwnText("ja_a.l%ng.string@0000000088");
      assertEquals("n3,{ez", document0.baseUri());
      assertEquals(0, elements0.size());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test353()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", " > ");
      document0.select("class");
      assertEquals(" > ", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test354()  throws Throwable  {
      Document document0 = new Document("br");
      document0.getElementsByAttributeValueStarting("br", "{BeO_p[kW=m_u4@{QJ");
      assertEquals("br", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test355()  throws Throwable  {
      Element element0 = new Element("body");
      Elements elements0 = element0.getElementsByAttributeValue("body", "java.lang.string@0000000109 body");
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test356()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", " > ");
      Element element0 = document0.attr("", true);
      assertEquals(" > ", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test357()  throws Throwable  {
      Document document0 = Parser.parse(":matches(", "java.lang.string@0000000093");
      String string0 = document0.wholeText();
      assertEquals(":matches(", string0);
  }

  @Test(timeout = 4000)
  public void test358()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("java.lang.string@0000000088", "java.lang.string@0000000088");
      // Undeclared exception!
      try { 
        document0.before((Node) document0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test359()  throws Throwable  {
      Element element0 = new Element("6");
      Element element1 = element0.prepend("");
      assertEquals(0, element1.siblingIndex());
  }

  @Test(timeout = 4000)
  public void test360()  throws Throwable  {
      Document document0 = Parser.parse("7MW&ES3/H^ryG(s >", "7MW&ES3/H^ryG(s >");
      document0.dataset();
      assertEquals("7MW&ES3/H^ryG(s >", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test361()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("BT", "BT");
      document0.title("[%s*=%s]");
      Elements elements0 = document0.getElementsContainingOwnText("@GGD");
      assertEquals(1, document0.childNodeSize());
      assertTrue(elements0.isEmpty());
      assertEquals("BT", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test362()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      // Undeclared exception!
      try { 
        document0.tagName("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Tag name must not be empty.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test363()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("\"5.0H1.=n|=o7wgt`Zf", "\"5.0H1.=n|=o7wgt`Zf");
      Element element0 = document0.child(0);
      assertEquals("\"5.0H1.=n|=o7wgt`Zf", element0.baseUri());
      assertNotNull(element0);
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test364()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("-HL'dIB/3TR#", "-HL'dIB/3TR#");
      document0.previousElementSiblings();
      assertEquals(1, document0.childNodeSize());
      assertEquals("-HL'dIB/3TR#", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test365()  throws Throwable  {
      Document document0 = Parser.parse("br", "br");
      document0.prependText(" ");
      boolean boolean0 = document0.hasText();
      assertEquals(2, document0.childNodeSize());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test366()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("kbd", "l@`LoYz%`lGRnl}n*");
      Pattern pattern0 = Pattern.compile("s+", 71);
      document0.getElementsMatchingText(pattern0);
      assertEquals(1, document0.childNodeSize());
      assertEquals("l@`LoYz%`lGRnl}n*", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test367()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", " > ");
      // Undeclared exception!
      try { 
        document0.wrap("^.DKr");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test368()  throws Throwable  {
      Document document0 = Document.createShell("=CQ$T]7|@/<W(\"D#TY");
      document0.id();
      assertEquals("=CQ$T]7|@/<W(\"D#TY", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }
}
