/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 07 19:40:02 GMT 2021
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.CharArrayWriter;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.io.PipedOutputStream;
import java.io.PipedWriter;
import java.io.Reader;
import java.io.StringReader;
import java.nio.BufferOverflowException;
import java.nio.CharBuffer;
import java.nio.ReadOnlyBufferException;
import java.nio.charset.Charset;
import java.util.Collection;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import java.util.UnknownFormatConversionException;
import java.util.regex.Pattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.Comment;
import org.jsoup.nodes.DataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.DocumentType;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.nodes.PseudoTextElement;
import org.jsoup.nodes.TextNode;
import org.jsoup.nodes.XmlDeclaration;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Parser;
import org.jsoup.parser.Tag;
import org.jsoup.select.Elements;
import org.jsoup.select.Evaluator;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Element_ESTest extends Element_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("Pattern syntax error: ", "Pattern syntax error: ");
      CDataNode cDataNode0 = new CDataNode("java.lang.string@0000000016 ,fmb6k <`z8'c(=");
      Element element0 = document0.appendChild(cDataNode0);
      element0.html();
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Document document0 = Parser.parse("vE1+!LxK9Ri-Ougn", "vE1+!LxK9Ri-Ougn");
      document0.toggleClass("BA3");
      document0.toggleClass("BA3");
      document0.getElementsByClass("vE1+!LxK9Ri-Ougn");
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Tag tag0 = Tag.valueOf("org.jsoup.nodes.Entities");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "org.jsoup.nodes.Entities", attributes0);
      Element element0 = formElement0.tagName("selected");
      element0.parentNode = (Node) formElement0;
      element0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("textarea", "zW=#CD[M1");
      Node[] nodeArray0 = new Node[7];
      // Undeclared exception!
      try { 
        document0.insertChildren(0, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array must not contain any null objects
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.select.Evaluator$AttributeWithValueMatching", "org.jsoup.select.Evaluator$AttributeWithValueMatching");
      Element element0 = document0.head();
      CharBuffer charBuffer0 = CharBuffer.allocate(4183);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      element0.outerHtmlTail(charBuffer0, (-1707), document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "");
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document0.outerHtmlHead(mockPrintWriter0, 32, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("java.lang.string@0000000047 insert position out {u bounds.", "java.lang.string@0000000047 insert position out {u bounds.");
      document0.nodelistChanged();
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("%9-?xSdE.qC6z,K", "article");
      document0.ensureChildNodes();
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("%9-?xSdE.qC6z,K", "article");
      document0.doSetBaseUri("(([+-])?(d+)?)n(s*([+-])?s*d+)?");
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("f\"j0-r`:R/bhPcjWi", "article");
      document0.wrap(" ");
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("mgNAE7x", "fw[\"V.gum!h>'an <ag");
      Element element0 = document0.body();
      element0.wrap("fw[\"V.gum!h>'an <ag");
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Document document0 = new Document("'{Ov gl BXW>E~G;x");
      document0.wholeText();
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("class", "class");
      document0.siblingIndex = 8;
      document0.val("class");
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("Index must be numeric", "Index must be numeric");
      Element element0 = document0.head();
      element0.val("Index must be numeric");
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Wp", "Wp");
      document0.setSiblingIndex((-348));
      document0.toggleClass("Wp");
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("body", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("body");
      Attributes attributes0 = cDataNode0.attributes();
      Element element0 = new Element(tag0, "body", attributes0);
      element0.toggleClass("D;K5']/o*Qd[Q");
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Document document0 = Document.createShell("4W`2*x");
      Element element0 = document0.head();
      Element element1 = element0.nextElementSibling();
      element1.text("4W`2*x");
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Document document0 = Document.createShell("4W`2*x");
      Element element0 = document0.head();
      element0.text("4W`2*x");
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Element element0 = new Element("{=");
      element0.text("{=");
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("=Vh^+~\"32)I;YU0", "kJUA,t{]]\"");
      Element element0 = document0.body();
      element0.tagName("#root");
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Document document0 = Parser.parse("kP[\"?Gee2$FsTN=2=oO", "html");
      document0.tagName("html");
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Document document0 = Document.createShell("");
      document0.tagName();
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Document document0 = Document.createShell("4W`2*x");
      Element element0 = document0.head();
      element0.tag();
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.nodes.Element$2", "org.jsoup.nodes.Element$2");
      document0.tag();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Document document0 = Document.createShell("4W`2*x");
      Element element0 = document0.head();
      element0.shallowClone();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("}{`*?(tc@'", "~ma%^:-");
      Element element0 = document0.createElement("rp");
      element0.selectFirst("rp");
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("cogroup", "cogroup");
      document0.appendElement("id");
      document0.selectFirst("id");
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("cogroup", "cogroup");
      document0.selectFirst("html");
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Document document0 = new Document("");
      document0.select("AttributeValue_unquoted");
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Document document0 = Parser.parse("D24tkbrk^IS", "D24tkbrk^IS");
      document0.setSiblingIndex((-1340));
      document0.removeClass("D24tkbrk^IS");
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("@C", "%9-?xSdE.qC6z,K");
      Element element0 = document0.head();
      element0.removeClass("@C");
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("=Vh^+~\"32)I;YU0", "kJUA,t{]]\"");
      Element element0 = document0.body();
      element0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("/", "Pattern syntax error: ");
      Element element0 = document0.appendElement("*[Vi@x/");
      element0.prependText("");
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Tag tag0 = Tag.valueOf("\"i$~=}k5");
      Element element0 = new Element(tag0, "za($XKm)ODSI");
      Element element1 = element0.append("\"i$~=}k5");
      element1.siblingIndex = (-1313);
      element1.prependText("2i^,W*fr{`>vV/");
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Document document0 = Document.createShell("");
      Element element0 = document0.head();
      element0.prependText("org.jsoup.nodes.Element$1");
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      StringReader stringReader0 = new StringReader("iG");
      Document document0 = parser0.parseInput((Reader) stringReader0, "iG");
      document0.prependElement("th");
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("/", "Pattern syntax error: ");
      Element element0 = document0.appendElement("*[Vi@x/");
      element0.prependChild(document0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Document document0 = Parser.parse("Bv}", "flPs(R]");
      Element element0 = document0.head();
      DataNode dataNode0 = DataNode.createFromEncoded("3{?r|Xu)>Z$", "basefont");
      element0.prependChild(dataNode0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("~Bpd{\"", "~Bpd{\"");
      Element element0 = document0.body();
      element0.prepend("");
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Document document0 = Document.createShell("org.Qsoup.nudes.IlKment$NodeList");
      Element element0 = document0.head();
      element0.prepend("");
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Document document0 = Document.createShell("");
      document0.parents();
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("ssq#@,", "ssq#@,");
      Tag tag0 = Tag.valueOf("=Vh^+~\"32)I;YU0");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "java.lang.string@0000000078 #{ot", attributes0);
      document0.appendTo(formElement0);
      document0.parents();
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("org.jsoup.nodes.Element$1", "}");
      Element element0 = document0.appendElement("}");
      element0.parent();
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Tag tag0 = Tag.valueOf("org.jsoup.nodes.Entities");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "org.jsoup.nodes.Entities", attributes0);
      Element element0 = formElement0.tagName("selected");
      element0.parentNode = (Node) formElement0;
      formElement0.parent();
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Document document0 = Parser.parse("org.Qsoup.nudes.IlKment$NodeList", "org.Qsoup.nudes.IlKment$NodeList");
      Element element0 = document0.head();
      element0.parent();
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Document document0 = Parser.parse("4XG", "4XG");
      Element element0 = document0.prependText("4XG");
      element0.ownText();
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Document document0 = Document.createShell("4W`2*x");
      document0.nodeName();
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Document document0 = Document.createShell("4W`2*x");
      Element element0 = document0.head();
      element0.after((Node) document0);
      element0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("=Vh^+~\"32)I;YU0", "kJUA,t{]]\"");
      Element element0 = document0.body();
      element0.empty();
      element0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("cogroup", "cogroup");
      Element element0 = document0.body();
      element0.isBlock();
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.select.Evaluator$AttributeWithValueMatching", "org.jsoup.select.Evaluator$AttributeWithValueMatching");
      Evaluator.ContainsText evaluator_ContainsText0 = new Evaluator.ContainsText("org.jsoup.select.Evaluator$AttributeWithValueMatching");
      document0.is((Evaluator) evaluator_ContainsText0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Tag tag0 = Tag.valueOf("4W)2x");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "4W`2*x", attributes0);
      Element element0 = formElement0.tagName("selected");
      element0.is("selected");
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Document document0 = Document.createShell("AkhYI6>");
      Element element0 = document0.append("AkhYI6>");
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) element0;
      document0.insertChildren(2, nodeArray0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Document document0 = Parser.parse("http:/", "http:/");
      Node[] nodeArray0 = new Node[0];
      document0.insertChildren(1, nodeArray0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("cogXroup", "cogXroup");
      LinkedHashSet<CDataNode> linkedHashSet0 = new LinkedHashSet<CDataNode>();
      document0.setSiblingIndex(6);
      document0.insertChildren(0, (Collection<? extends Node>) linkedHashSet0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "");
      document0.reparentChild(document0);
      List<DataNode> list0 = document0.dataNodes();
      document0.insertChildren((-1), (Collection<? extends Node>) list0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Document document0 = new Document("");
      LinkedList<CDataNode> linkedList0 = new LinkedList<CDataNode>();
      document0.insertChildren((-1), (Collection<? extends Node>) linkedList0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("kbd", "kbd");
      Element element0 = document0.body();
      element0.html("kbd");
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Document document0 = new Document("");
      document0.html((CharArrayWriter) null);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("/", "Pattern syntax error: ");
      Element element0 = document0.appendElement("*[Vi@x/");
      element0.html();
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Tag tag0 = Tag.valueOf("ZL$Pub&OH>/");
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "3VWL{I~'3}b|Rzg7", attributes0);
      pseudoTextElement0.hasAttributes();
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("org.Qsoup.nudes.IlKment$NodeList", "org.Qsoup.nudes.IlKment$NodeList");
      document0.hasAttributes();
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("Qb)6ca6[;+", "StartTag");
      Pattern pattern0 = Pattern.compile("StartTag");
      document0.getElementsMatchingText(pattern0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Document document0 = Parser.parse("mnIRDvt4<gu5BKb#Oa", "(%*3");
      document0.getElementsMatchingText("source");
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Document document0 = Document.createShell("textarea");
      Pattern pattern0 = Pattern.compile("S$Y|");
      document0.getElementsMatchingOwnText(pattern0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Document document0 = Document.createShell("textarea");
      document0.getElementsMatchingOwnText(" \"");
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("zW=#CD[M1", "zW=#CD[M1");
      document0.getElementsMatchingOwnText(".");
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Document document0 = Document.createShell("");
      document0.getElementsContainingText((String) null);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Document document0 = Document.createShell("textarea");
      document0.getElementsByTag("br");
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Document document0 = Parser.parse("head", "q6m");
      document0.getElementsByTag("head");
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("f\"j0-r`:R/bhPcjWi", "article");
      document0.getElementsByIndexLessThan(1192721831);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("textarea", ":nth-child(%d)");
      document0.getElementsByIndexGreaterThan(2380);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(" ", "s+");
      document0.getElementsByIndexEquals(376);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Document document0 = Parser.parse("4W`2*x", "4W`2*x");
      document0.toggleClass("4W`2*x");
      document0.toggleClass("4W`2*x");
      document0.getElementsByClass("4W`2*x");
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      Tag tag0 = Tag.valueOf("#x'0m~'Ark3+", parseSettings0);
      Attributes attributes0 = new Attributes();
      attributes0.put("#x'0m~'Ark3+", "#x'0m~'Ark3+");
      Element element0 = new Element(tag0, "#x'0m~'Ark3+", attributes0);
      element0.getElementsByAttributeValueStarting("#x'0m~'Ark3+", "#x'0m~'Ark3+");
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Tag tag0 = Tag.valueOf("org.jsoup.parser.XmlTreeBuilder");
      CDataNode cDataNode0 = new CDataNode("org.jsoup.parser.XmlTreeBuilder");
      Attributes attributes0 = cDataNode0.attributes();
      Element element0 = new Element(tag0, "org.jsoup.parser.XmlTreeBuilder", attributes0);
      element0.getElementsByAttributeValueNot("pUll/*>cpD14)|]73}A", "org.jsoup.parser.XmlTreeBuilder");
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      document0.getElementsByAttributeValueEnding("/5j3gpnd~n", "UgN[?[|");
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Tag tag0 = Tag.valueOf("4W`2*x");
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("4W`2*x", "4W`2*x", attributes0);
      Attributes attributes1 = attributes0.put(attribute0);
      FormElement formElement0 = new FormElement(tag0, "$X.g>}X'd", attributes1);
      formElement0.getElementsByAttributeStarting("4W`2*x");
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Tag tag0 = Tag.valueOf("&!bU4C)o1`");
      Attributes attributes0 = new Attributes();
      attributes0.put("Ew=#/B$G", "&!bU4C)o1`");
      FormElement formElement0 = new FormElement(tag0, "$X.g>}X'd", attributes0);
      formElement0.getElementsByAttribute("Ew=#/B$G");
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Document$QuirksMode", "6#");
      Element element0 = document0.body();
      element0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Document document0 = Parser.parse("4W`2*x", "4W`2*x");
      document0.siblingIndex = 2147483645;
      document0.empty();
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("ssq#@,", "ssq#@,");
      Element element0 = document0.head();
      Locale locale0 = Locale.KOREA;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      Element element1 = element0.classNames(set0);
      element1.empty();
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("textarea", ":nth-child(%d)");
      Element element0 = document0.body();
      element0.doClone(document0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("Pattern syntax eror: ", "K6+2MdTZ0[");
      document0.doClone((Node) null);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("9rg.Qsoup.nudes.Il'ment$NodeList", "Children collection to be inserted must not be null.");
      document0.data();
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Document document0 = Document.createShell("4W`2*x");
      Element element0 = document0.head();
      element0.clone();
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("ydHNO`0{9ifbU", "ydHNO`0{9ifbU");
      document0.clone();
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("kbd", "kbd");
      Element element0 = document0.body();
      Charset charset0 = document0.charset();
      Set<String> set0 = charset0.aliases();
      element0.classNames(set0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Document document0 = Parser.parse("4W`2*x", "4W`2*x");
      Element element0 = document0.head();
      Set<String> set0 = document0.classNames();
      element0.classNames(set0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Document document0 = Parser.parse("BA3", "BA3");
      document0.toggleClass("BA3");
      document0.classNames();
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Document document0 = new Document("0(D~P\"e[pCCBL5q^dX");
      Element element0 = document0.toggleClass(" 71i7#;$M}+H");
      element0.className();
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Document document0 = Parser.parse("BA3", "BA3");
      document0.children();
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag0 = Tag.valueOf("html", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("html");
      Attributes attributes0 = cDataNode0.attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "allowfullscreen", attributes0);
      pseudoTextElement0.childNodeSize();
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("0pLeS>h", "{=");
      document0.childNodeSize();
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Document document0 = Parser.parse("qhY=qlI,{U", "qhY=qlI,{U");
      document0.child(0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("@C", "%9-?xSdE.qC6z,K");
      Element element0 = document0.head();
      element0.before((Node) document0);
      element0.removeClass("@C");
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Document document0 = new Document("BA3");
      CDataNode cDataNode0 = new CDataNode(" />");
      document0.reparentChild(document0);
      document0.before((Node) cDataNode0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Document document0 = Parser.parse("Y3hQ#,HWgfe zE", "Y3hQ#,HWgfe zE");
      Element element0 = document0.appendElement("d{");
      element0.before("default");
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("kbd", "kbd");
      Element element0 = document0.body();
      element0.before("K95o");
      element0.previousElementSiblings();
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Wp", "Wp");
      document0.baseUri();
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Document document0 = Document.createShell("");
      document0.baseUri();
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Document document0 = new Document("'{Ov gl BXW>E~G;x");
      Document document1 = document0.normalise();
      Element element0 = document1.body();
      element0.attr("br", false);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Element element0 = new Element("H");
      element0.siblingIndex = 69;
      element0.attr("H", "V~:7jfnx5Sl");
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Tag tag0 = Tag.valueOf("p");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "p", attributes0);
      formElement0.attr("auY0hQBH}c", "TL,+e3/28Z]{1L2TsUL");
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Document document0 = Parser.parse("qhY=qlI,{U", "qhY=qlI,{U");
      Document document1 = Parser.parseBodyFragment("qhY=qlI,{U", "qhY=qlI,{U");
      document0.setParentNode(document1);
      document0.attr("qhY=qlI,{U", "qhY=qlI,{U");
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Document document0 = Document.createShell("4W`2*x");
      document0.appendTo(document0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("9rg.Qsoup.nudes.Il'ment$NodeList", "Children collection to be inserted must not be null.");
      document0.siblingIndex = 58;
      document0.appendText("Children collection to be inserted must not be null.");
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Document document0 = Document.createShell("4W`2*x");
      Element element0 = document0.head();
      element0.appendText("0fP1h}vIv(jP");
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Document document0 = Document.createShell("Y>N3\"{R[eTiA");
      document0.appendElement("title");
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Document document0 = Parser.parse("4W`2*x", "4W`2*x");
      Element element0 = document0.head();
      element0.appendChild(document0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Document document0 = Document.createShell("(%*3");
      document0.siblingIndex = (-2240);
      document0.append("(%*3");
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Document document0 = Document.createShell("        ");
      Element element0 = document0.body();
      element0.append("=QaY;k|mx-(H8tD![");
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Document document0 = new Document("");
      document0.append("");
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("cogroup", "cogroup");
      Element element0 = document0.appendElement("id");
      element0.after((Node) document0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Document document0 = Document.createShell("4W`2*x");
      Element element0 = document0.head();
      element0.after((Node) document0);
      document0.elementSiblingIndex();
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Document document0 = Parser.parse("Insert position out of bounds.", "AfterAttributeName");
      Element element0 = document0.body();
      element0.after((Node) document0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("o", "!6u`f6$h3p'nwl d7");
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag0 = Tag.valueOf("org.jsoup.nodes.Document$QuirksMode", parseSettings0);
      Element element0 = new Element(tag0, "4zu^l:fv]j|RTPB&TT");
      document0.reparentChild(element0);
      element0.after("!6u`f6$h3p'nwl d7");
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("org.jsoup.nodes.Document$QuirksMode", "org.jsoup.nodes.Document$QuirksMode");
      Element element0 = document0.body();
      element0.after("org.jsoup.nodes.Document$QuirksMode");
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("org.jsoup.nodes.Document$QuirksMode", "org.jsoup.nodes.Document$QuirksMode");
      Element element0 = document0.body();
      element0.addClass(")uE(dFU~1G)");
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Document document0 = Parser.parse("4W`2*x", "4W`2*x");
      Element element0 = document0.head();
      element0.addClass("4W`2*x");
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Document document0 = Document.createShell("4W`2*x");
      document0.parentNode = (Node) document0;
      // Undeclared exception!
      document0.wrap("html");
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("<qN}5$3B5(3sP", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("<qN}5$3B5(3sP");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "<qN}5$3B5(3sP", attributes0);
      // Undeclared exception!
      try { 
        formElement0.wrap("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Document document0 = new Document("");
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) document0;
      document0.insertChildren((-1), nodeArray0);
      // Undeclared exception!
      document0.val(".");
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Tag tag0 = Tag.valueOf("V8|/OF/W:.=");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "V8|/OF/W:.=", attributes0);
      attributes0.vals = null;
      // Undeclared exception!
      try { 
        formElement0.val((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      String[] stringArray0 = new String[3];
      attributes0.keys = stringArray0;
      Tag tag0 = Tag.valueOf("Insert poitot ouJ of bounds.");
      FormElement formElement0 = new FormElement(tag0, "Insert poitot ouJ of bounds.", attributes0);
      // Undeclared exception!
      try { 
        formElement0.val("Insert poitot ouJ of bounds.");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(false, true);
      Tag tag0 = Tag.valueOf("dgit.]lCnEMwkT`k)", parseSettings0);
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("AkhYI6>", "dgit.]lCnEMwkT`k)");
      Attributes attributes1 = attributes0.put(attribute0);
      Attributes attributes2 = attributes1.clone();
      FormElement formElement0 = new FormElement(tag0, "niz~{B!{vlWk", attributes2);
      attributes2.keys = null;
      // Undeclared exception!
      try { 
        formElement0.val();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Document document0 = Parser.parse("BA3", "BA3");
      // Undeclared exception!
      try { 
        document0.toggleClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Tag tag0 = Tag.valueOf("4W`2*x");
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("4W`2*x", "4W`2*x", attributes0);
      Attributes attributes1 = attributes0.put(attribute0);
      attributes0.put("Ew=#/B$G", "4W`2*x");
      String[] stringArray0 = new String[2];
      attributes0.vals = stringArray0;
      FormElement formElement0 = new FormElement(tag0, "$X.g>}X'd", attributes1);
      // Undeclared exception!
      try { 
        formElement0.toggleClass(".");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("{=", "{=");
      document0.html("");
      // Undeclared exception!
      try { 
        document0.text("ScriptDataDoubleEscapedDashDash");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Document document0 = Document.createShell("AkhYI6>");
      List<Node> list0 = document0.childNodesCopy();
      document0.childNodes = list0;
      // Undeclared exception!
      try { 
        document0.text();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.NodeTraversor", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Document document0 = Parser.parse("%@],VJ[/<F", "%@],VJ[/<F");
      TextNode textNode0 = TextNode.createFromEncoded("%@],VJ[/<F");
      document0.parentNode = (Node) textNode0;
      // Undeclared exception!
      try { 
        document0.text();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("o*3", "o*3");
      Element element0 = document0.appendElement("o*3");
      element0.siblingIndex = (-70242622);
      // Undeclared exception!
      try { 
        document0.text();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Document document0 = new Document("");
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) document0;
      document0.insertChildren((-1), nodeArray0);
      // Undeclared exception!
      document0.tagName("BA3");
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Document document0 = new Document("");
      // Undeclared exception!
      try { 
        document0.tagName("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Tag name must not be empty.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Document document0 = new Document("{u");
      document0.reparentChild(document0);
      // Undeclared exception!
      try { 
        document0.siblingElements();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Document document0 = Document.createShell("textarea");
      // Undeclared exception!
      try { 
        document0.selectFirst("_YM2eQa");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query '_YM2eQa': unexpected token at '_YM2eQa'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "");
      // Undeclared exception!
      try { 
        document0.selectFirst("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("DH", "'0WsenduxM^FIiT");
      // Undeclared exception!
      try { 
        document0.select("_s1Dp94v.^.jh4p7Dqs");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query '_s1Dp94v.^.jh4p7Dqs': unexpected token at '_s1Dp94v.^.jh4p7Dqs'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Document document0 = Document.createShell("");
      // Undeclared exception!
      try { 
        document0.select("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Element element0 = new Element("Da8?$'L2u*AuKz}m&k");
      // Undeclared exception!
      try { 
        element0.removeClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("o*3", "o*3");
      document0.childNodes = null;
      document0.reparentChild(document0);
      // Undeclared exception!
      try { 
        document0.previousElementSiblings();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Document document0 = Document.createShell("!S^[");
      TextNode textNode0 = new TextNode("!S^[", "/WFG");
      document0.setParentNode(textNode0);
      // Undeclared exception!
      try { 
        document0.previousElementSiblings();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Element$NodeList", "org.jsoup.nodes.Element$NodeList");
      TextNode textNode0 = TextNode.createFromEncoded("1.0", "org.jsoup.nodes.Element$NodeList");
      document0.parentNode = (Node) textNode0;
      // Undeclared exception!
      try { 
        document0.previousElementSibling();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("xY", "xY");
      CDataNode cDataNode0 = new CDataNode("xY");
      document0.setParentNode(cDataNode0);
      // Undeclared exception!
      try { 
        Element.preserveWhitespace(document0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Tag tag0 = Tag.valueOf("\"i$~=}k5");
      Element element0 = new Element(tag0, "za($XKm)ODSI");
      // Undeclared exception!
      try { 
        element0.prependText((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("org.jsoup.nodes.Document$QuirksMode", "org.jsoup.nodes.Document$QuirksMode");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.prependElement("\"wZV|igO7/IDVX%H");
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Document document0 = new Document("listing");
      // Undeclared exception!
      try { 
        document0.prependElement((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.nodes.Document$QuirksMode");
      Element element0 = document0.text("HA9(+WD603b]n_");
      List<Node> list0 = Parser.parseFragment("HA9(+WD603b]n_", (Element) document0, "</");
      element0.childNodes = list0;
      // Undeclared exception!
      try { 
        element0.prependChild(document0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableList", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Document document0 = new Document("");
      document0.setParentNode(document0);
      // Undeclared exception!
      try { 
        document0.prependChild(document0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("span", parseSettings0);
      Element element0 = new Element(tag0, "span");
      // Undeclared exception!
      try { 
        element0.prependChild((Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.prepend("%Zp]?P)bt}G;HHZOoN");
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Document document0 = new Document("'{Ov gl BX/Y>E~G;x");
      // Undeclared exception!
      try { 
        document0.prepend((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("t", "LtP$@FX*gV-lU\"`F");
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, true);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document_OutputSettings0.indentAmount(7448);
      // Undeclared exception!
      document0.outerHtmlTail(mockPrintWriter0, 7448, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Pattern syntax eror: ", "!53(^B");
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "Pattern syntax eror: ");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlTail(charBuffer0, 8, document_OutputSettings0);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.StringCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Document document0 = Parser.parse("BA3", "BA3");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlTail((Appendable) null, 33, document_OutputSettings0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Document document0 = Document.createShell("4W`2*x");
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(2668);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlTail(charArrayWriter0, (-1901), document_OutputSettings0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // width must be > 0
         //
         verifyException("org.jsoup.internal.StringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Document document0 = new Document("#declaration");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      PipedWriter pipedWriter0 = new PipedWriter();
      try { 
        document0.outerHtmlTail(pipedWriter0, 1700, document_OutputSettings0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Document document0 = Parser.parse("qhY=qlI,{U", "qhY=qlI,{U");
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document_OutputSettings0.indentAmount(124);
      // Undeclared exception!
      document0.outerHtmlHead(charArrayWriter0, 124, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Document document0 = Parser.parse("*PKRqt@VnIog15OSBS", "*PKRqt@VnIog15OSBS");
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlHead(charBuffer0, 46, document_OutputSettings0);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.StringCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("org.jsoup.nodes.Document$QuirksMode", "org.jsoup.nodes.Document$QuirksMode");
      CharBuffer charBuffer0 = CharBuffer.allocate(128);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlHead(charBuffer0, 128, document_OutputSettings0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("(BA3", "+;8uYiV+pFER");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlHead((Appendable) null, 64, document_OutputSettings0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Document document0 = Parser.parse("org.Qsoup.nudes.IlKment$NodeList", "org.Qsoup.nudes.IlKment$NodeList");
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlHead(charArrayWriter0, (-3730), document_OutputSettings0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // width must be > 0
         //
         verifyException("org.jsoup.internal.StringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Document document0 = new Document("~pd{\"");
      PipedWriter pipedWriter0 = new PipedWriter();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      try { 
        document0.outerHtmlHead(pipedWriter0, 8192, document_OutputSettings0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("s_p[) =", "s_p[) =");
      Comment comment0 = new Comment("nm[lM", "s_p[) =");
      Element element0 = document0.doClone(comment0);
      // Undeclared exception!
      try { 
        element0.nextElementSiblings();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Document document0 = Parser.parse("BA3", "BA3");
      // Undeclared exception!
      try { 
        document0.lastElementSibling();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Document document0 = new Document("BA3");
      document0.reparentChild(document0);
      Evaluator.TagEndsWith evaluator_TagEndsWith0 = new Evaluator.TagEndsWith("html");
      // Undeclared exception!
      document0.is((Evaluator) evaluator_TagEndsWith0);
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Document document0 = Document.createShell("");
      Evaluator.TagEndsWith evaluator_TagEndsWith0 = new Evaluator.TagEndsWith((String) null);
      // Undeclared exception!
      try { 
        document0.is((Evaluator) evaluator_TagEndsWith0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Document document0 = new Document("4)`2*x");
      Evaluator.IsRoot evaluator_IsRoot0 = new Evaluator.IsRoot();
      // Undeclared exception!
      try { 
        document0.is((Evaluator) evaluator_IsRoot0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Document document0 = new Document("head");
      // Undeclared exception!
      try { 
        document0.is((String) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("iLPurR", "iLPurR");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.is("xw6ulEodM");
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag0 = Tag.valueOf("Insert position out of bounds.", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "Jk_Q,fO>D3^W(%|^!", (Attributes) null);
      // Undeclared exception!
      try { 
        formElement0.is("Jk_Q,fO>D3^W(%|^!");
        fail("Expecting exception: UnknownFormatConversionException");
      
      } catch(UnknownFormatConversionException e) {
         //
         // Conversion = '|'
         //
         verifyException("java.util.Formatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("o*3", "o*3");
      document0.childNodes = null;
      Node[] nodeArray0 = new Node[1];
      // Undeclared exception!
      try { 
        document0.insertChildren(22, nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Element element0 = new Element("\"i$~=}k5");
      Element element1 = element0.append("\"i$~=}k5");
      Node[] nodeArray0 = element1.childNodesAsArray();
      // Undeclared exception!
      try { 
        element0.insertChildren((-1), nodeArray0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.html("");
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("java.lang.string@0000000047 insert position out {u bounds.", "java.lang.string@0000000047 insert position out {u bounds.");
      // Undeclared exception!
      try { 
        document0.html((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Document document0 = new Document("insert3psiin out o bounds.");
      DataNode dataNode0 = DataNode.createFromEncoded("insert3psiin out o bounds.", "insert3psiin out o bounds.");
      Element element0 = document0.doClone(dataNode0);
      // Undeclared exception!
      try { 
        element0.html("*<uvOC9;M");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("=)3", "=)3");
      PipedWriter pipedWriter0 = new PipedWriter();
      // Undeclared exception!
      try { 
        document0.html(pipedWriter0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Pipe not connected
         //
         verifyException("org.jsoup.nodes.Node$OuterHtmlVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Tag tag0 = Tag.valueOf("\"i$~=}k5");
      Element element0 = new Element(tag0, "za($XKm)ODSI");
      element0.prependChild(element0);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      // Undeclared exception!
      element0.html(charArrayWriter0);
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("Insert position out of bounds.", "Insert position out of bounds.");
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "Insert position out of bounds.");
      // Undeclared exception!
      try { 
        document0.html(charBuffer0);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.StringCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      StringReader stringReader0 = new StringReader("");
      Document document0 = parser0.parseInput((Reader) stringReader0, "");
      CharBuffer charBuffer0 = CharBuffer.allocate(3);
      // Undeclared exception!
      try { 
        document0.html(charBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("blockquote", "org.jsoup.select.Evaluator$Attribute");
      // Undeclared exception!
      try { 
        document0.html((OutputStreamWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Document document0 = Parser.parse("BA3", "BA3");
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration("Bv", "Bv", false);
      document0.setParentNode(xmlDeclaration0);
      // Undeclared exception!
      try { 
        document0.html(charArrayWriter0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Document document0 = new Document("of");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.html();
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("ScriptDataEscape&EndTagName", "ScriptDataEscape&EndTagName");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.charset((Charset) null);
      Document document1 = document0.outputSettings(document_OutputSettings1);
      // Undeclared exception!
      try { 
        document1.html();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Document$OutputSettings", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("0pLeS>h", "{=");
      // Undeclared exception!
      try { 
        document0.hasClass((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("ydHNO`0{9ifbU", "ydHNO`0{9ifbU");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText((Pattern) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$Matches", e);
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("qhY=qlI,{U", "qhY=qlI,{U");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("3.[cI>kWW", "3.[cI>kWW");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText("3.[cI>kWW");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pattern syntax error: 3.[cI>kWW
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Document document0 = Parser.parse("ek", "ek");
      TextNode textNode0 = new TextNode("aY#A)r&f^N&S");
      document0.setParentNode(textNode0);
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText("ek");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("f\"j0-r`:R/bhPcjWi", "article");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingOwnText((Pattern) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$MatchesOwn", e);
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("~Bpd{\"", "~Bpd{\"");
      Element element0 = document0.body();
      element0.setSiblingIndex((-1034));
      Pattern pattern0 = Pattern.compile("</", (-2330));
      // Undeclared exception!
      try { 
        document0.getElementsMatchingOwnText(pattern0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Document document0 = Document.createShell("textarea");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingOwnText("6{_^a/LR8jY]H1");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pattern syntax error: 6{_^a/LR8jY]H1
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Document document0 = Parser.parse("ek", "ScriptDtaEscaRe&EndTaName");
      CDataNode cDataNode0 = new CDataNode("");
      document0.parentNode = (Node) cDataNode0;
      // Undeclared exception!
      try { 
        document0.getElementsContainingOwnText("ScriptDtaEscaRe&EndTaName");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("zW=#CD[M1", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("zW=#CD[M1");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "gg", attributes0);
      // Undeclared exception!
      try { 
        formElement0.getElementsByTag("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Document document0 = Parser.parse("kbWd", "kbWd");
      document0.childNodes = null;
      // Undeclared exception!
      try { 
        document0.getElementsByClass("Tag name must not be empty.");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("cogXroup", "cogXroup");
      // Undeclared exception!
      try { 
        document0.getElementsByClass("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("tag name must not be empty.", "tag name must not be empty.");
      document0.siblingIndex = (-2351);
      document0.reparentChild(document0);
      // Undeclared exception!
      try { 
        document0.getElementsByClass("tag name must not be empty.");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Document document0 = Document.createShell("");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueStarting((String) null, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Document document0 = Document.createShell("textarea");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueMatching("9:VLL}Z<,lw|#?", "+}RXW]}4");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pattern syntax error: +}RXW]}4
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Document document0 = new Document("BA3");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueContaining("", "#root");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValue("", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Document document0 = new Document("zW=#CD[M1");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeStarting((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("o*3", "o*3");
      document0.childNodes = null;
      // Undeclared exception!
      try { 
        document0.getElementsByAttribute("Pattern syntax error: ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("Qb)6ca6[;+", "StartTag");
      // Undeclared exception!
      try { 
        document0.getElementsByAttribute((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("4W`2*x", "&#xa0;");
      Element element0 = document0.head();
      element0.parentNode = (Node) document0;
      // Undeclared exception!
      try { 
        document0.getElementById("4W`2*x");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.NodeTraversor", e);
      }
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Document document0 = new Document("head");
      // Undeclared exception!
      try { 
        document0.getElementById((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("sVj3qO 3OS=Gh", "sVj3qO 3OS=Gh");
      document0.siblingIndex = (-256);
      document0.reparentChild(document0);
      // Undeclared exception!
      try { 
        document0.getElementById("sVj3qO 3OS=Gh");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Document document0 = Parser.parse("+;uYiV+pFEjR", "");
      // Undeclared exception!
      try { 
        document0.firstElementSibling();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "");
      DataNode dataNode0 = new DataNode("&9Jq", "");
      document0.setParentNode(dataNode0);
      // Undeclared exception!
      try { 
        document0.firstElementSibling();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Tag tag0 = Tag.valueOf("\"i$~=}k5");
      Element element0 = new Element(tag0, "za($XKm)ODSI");
      Element element1 = element0.prependChild(element0);
      // Undeclared exception!
      try { 
        element1.cssSelector();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query '\"i$': unexpected token at '\"i$'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Insert poitot ouJ of bounds.", "Insert poitot ouJ of bounds.");
      DataNode dataNode0 = DataNode.createFromEncoded("Insert poitot ouJ of bounds.", "Insert poitot ouJ of bounds.");
      document0.parentNode = (Node) dataNode0;
      // Undeclared exception!
      try { 
        document0.cssSelector();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      Document document0 = Document.createShell("Q[Ud[~?~3");
      Element element0 = document0.head();
      element0.siblingIndex = (-903);
      // Undeclared exception!
      try { 
        element0.cssSelector();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Tag tag0 = Tag.valueOf("[");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "[", attributes0);
      formElement0.childNodes = null;
      // Undeclared exception!
      try { 
        formElement0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      Document document0 = Parser.parse("kP[\"?Gee2$FsTN=2=oO", "html");
      // Undeclared exception!
      try { 
        document0.classNames((Set<String>) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Element element0 = new Element("o*3");
      element0.childNodes = null;
      // Undeclared exception!
      try { 
        element0.children();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Document document0 = Document.createShell("");
      // Undeclared exception!
      try { 
        document0.child(342);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 342, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Document document0 = new Document("BA3");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.before("big");
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Document document0 = new Document("BA3");
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration("Bv", "Bv", false);
      document0.setParentNode(xmlDeclaration0);
      // Undeclared exception!
      try { 
        document0.before("YV#4*JnR+i");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("textarea", "textarea");
      // Undeclared exception!
      try { 
        document0.attr((String) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.attr("", "-37{QDGk90");
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Document document0 = new Document("6#e");
      // Undeclared exception!
      try { 
        document0.attr((String) null, "6#e");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.ParseSettings", e);
      }
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("'{Ov gl BXW>E~G;x", "'{Ov gl BXW>E~G;x");
      document0.setParentNode(document0);
      document0.reparentChild(document0);
      // Undeclared exception!
      try { 
        document0.appendTo(document0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("org.Qsoup.nudes.IlKment$NodeList", "org.Qsoup.nudes.IlKment$NodeList");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.appendElement("org.Qsoup.nudes.IlKment$NodeList");
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Document document0 = Document.createShell("m`L@zBI=k1DK");
      List<Node> list0 = Parser.parseFragment("m`L@zBI=k1DK", (Element) document0, "!GacKc(*ltq");
      document0.childNodes = list0;
      // Undeclared exception!
      try { 
        document0.appendElement("p9@\"NZ?=QCG");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Document document0 = Parser.parse("ek", "ef{w.~M,*JYLe<7}j");
      Parser parser0 = Parser.htmlParser();
      Parser parser1 = parser0.settings((ParseSettings) null);
      document0.parser(parser1);
      // Undeclared exception!
      try { 
        document0.appendElement("3");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.Tag", e);
      }
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      Document document0 = Parser.parse("", "*{C");
      // Undeclared exception!
      try { 
        document0.appendElement((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Element element0 = new Element(":nth-child(%d)");
      List<Node> list0 = Parser.parseXmlFragment("OtPD{{_r", ":nth-child(%d)");
      element0.childNodes = list0;
      DataNode dataNode0 = new DataNode("", ":nth-child(%d)");
      // Undeclared exception!
      try { 
        element0.appendChild(dataNode0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("f\"j0-r`:R/bhPcjWi", "article");
      // Undeclared exception!
      try { 
        document0.appendChild((Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Document document0 = Document.createShell("textarea");
      Element element0 = document0.appendChild(document0);
      // Undeclared exception!
      element0.append("~s<IU#okJ<J]R~u{?");
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Document document0 = Document.createShell("textarea");
      // Undeclared exception!
      try { 
        document0.append((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      Document document0 = Document.createShell("AkhYI6>");
      DocumentType documentType0 = new DocumentType("AkhYI6>", "AkhYI6>", "</", "4W`2*", "4W`2*");
      document0.parentNode = (Node) documentType0;
      // Undeclared exception!
      try { 
        document0.append("AkhYI6>");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Element$NodeList", "org.jsoup.nodes.Element$NodeList");
      document0.reparentChild(document0);
      // Undeclared exception!
      try { 
        document0.after((Node) document0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Document document0 = new Document("");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.after("pbYJ'=");
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("or.jsoup.ndes.|oument$QuSrsMode", "or.jsoup.ndes.|oument$QuSrsMode");
      TextNode textNode0 = TextNode.createFromEncoded("org.jsoup.nodes.Element$2");
      Document document1 = (Document)document0.doClone(textNode0);
      // Undeclared exception!
      try { 
        document1.after("org.jsoup.nodes.Element$2");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.nodes.Document$QuirksMode", "org.jsoup.nodes.Document$QuirksMode");
      // Undeclared exception!
      try { 
        document0.addClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Element element0 = null;
      try {
        element0 = new Element((Tag) null, "#root", attributes0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Element element0 = null;
      try {
        element0 = new Element((Tag) null, "org.jsoup.select.Evaluator$AttributeWithValueMatching");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      Element element0 = null;
      try {
        element0 = new Element((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Document document0 = Parser.parse("qhY=qlI,{U", "qhY=qlI,{U");
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      document0.html(charArrayWriter0);
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Tag tag0 = Tag.valueOf("\"i$~=}k5");
      Element element0 = new Element(tag0, "za($XKm)ODSI");
      element0.hasClass("html");
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("Pattern syntax eror: ", "#cdata");
      document0.toggleClass("BDZx=-L>JmFhF");
      document0.hasClass("org.jsoup.select.Evaluator$IsFirstOfType");
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("java.lang.string@0000000041", "java.lang.string@0000000041");
      document0.append("s1S9|n<!erbXsr^aq");
      document0.data();
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Document document0 = Parser.parse("BA3", "BA3");
      List<Node> list0 = Parser.parseFragment("BA3", (Element) document0, "org.jsoup.nodes.Attributes$Dataset$EntrySet");
      document0.childNodes = list0;
      document0.hasText();
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("      ", "      ");
      document0.append("      ");
      document0.hasText();
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("BA3", "BA3");
      document0.elementSiblingIndex();
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Document document0 = Document.createShell("");
      Element element0 = document0.head();
      element0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("cogroup", "cogroup");
      Element element0 = document0.appendElement("id");
      element0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      Document document0 = Document.createShell("4W`2*x");
      Element element0 = document0.head();
      Element element1 = element0.nextElementSibling();
      element1.appendTo(element0);
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "");
      document0.reparentChild(document0);
      document0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("cogroup", "cogroup");
      Element element0 = document0.appendElement("id");
      Element element1 = element0.toggleClass("=FC+J`7j");
      element1.cssSelector();
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      Document document0 = Parser.parse("4W`2*x", "4W`2*x");
      Document document1 = (Document)document0.tagName("4W`2*x");
      Element element0 = document1.head();
      element0.wrap("r&E,");
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Document document0 = new Document("BA3");
      document0.attributes();
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Document document0 = new Document("head");
      Charset charset0 = document0.charset();
      Set<String> set0 = charset0.aliases();
      document0.classNames(set0);
      document0.attributes();
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Insert poitot ouJ of bounds.", "Insert poitot ouJ of bounds.");
      document0.className();
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Document document0 = Parser.parse("org.Qsoup.nudes.IlKment$NodeList", "org.Qsoup.nudes.IlKment$NodeList");
      document0.parent();
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("cogroup", "cogroup");
      document0.isBlock();
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("4XG", "4XG");
      Element element0 = document0.createElement("4XG");
      element0.select("4XG");
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("qhY=qI,{U", "qhY=qI,{U");
      Pattern pattern0 = Pattern.compile("qhY=qI,{U", 58);
      document0.getElementsMatchingText(pattern0);
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      Document document0 = Parser.parse("BA3", "BA3");
      Evaluator.TagEndsWith evaluator_TagEndsWith0 = new Evaluator.TagEndsWith("BA3");
      document0.is((Evaluator) evaluator_TagEndsWith0);
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("org.jsoup.nodes.Document$QuirksMode", "org.jsoup.nodes.Document$QuirksMode");
      document0.getElementsByAttributeValueMatching("", (Pattern) null);
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("class", "class");
      document0.id();
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      Document document0 = Document.createShell("8");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.outline(true);
      Document document1 = document0.outputSettings(document_OutputSettings1);
      document0.title(" ");
      document1.html();
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput(":OS(Gr5", "html");
      document0.charset(charset0);
      document0.html();
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Document document0 = Parser.parse("http:/", "http:/");
      document0.title("http:/");
      document0.html();
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput(":OS(Gr5", "html");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.prettyPrint(false);
      Document document1 = document0.outputSettings(document_OutputSettings1);
      document1.html();
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("textarea");
      Attributes attributes0 = cDataNode0.attributes();
      Tag tag0 = Tag.valueOf("textarea");
      FormElement formElement0 = new FormElement(tag0, "X", attributes0);
      formElement0.val("");
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Document document0 = Parser.parse("Bv}", "flPs(R]");
      document0.val("Uvbtp5di)");
      document0.val();
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("textarea");
      Attributes attributes0 = cDataNode0.attributes();
      Tag tag0 = Tag.valueOf("=@f[91");
      FormElement formElement0 = new FormElement(tag0, "X", attributes0);
      Element element0 = formElement0.tagName("textarea");
      element0.val();
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      Document document0 = Parser.parse("Bv}", "Bv}");
      document0.toggleClass("Bv}");
      document0.toggleClass("Bv}");
      document0.toggleClass("Bv}");
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "");
      Element element0 = document0.toggleClass("%Zp]?P)bt}G;HHZOoN");
      element0.toggleClass("%Zp]?P)bt}G;HHZOoN");
      element0.hasClass("%Zp]?P)bt}G;HHZOoN");
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      Document document0 = Parser.parse("mnIRDvt4<gu5BKb#Oa", "(%*3");
      Element element0 = document0.toggleClass("?'mHpL!``%i;DA");
      document0.toggleClass("Insert position out o bounds.");
      element0.hasClass("position");
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      Document document0 = Parser.parse("+;uYiV+pFEjR", "");
      document0.toggleClass("BA3");
      Element element0 = document0.toggleClass("Insert position out of bounds.");
      element0.hasClass("{U");
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      Document document0 = Parser.parse("+;8uYiV+pFER", "");
      document0.toggleClass("+;8uYiV+pFER");
      document0.toggleClass("        ");
      document0.hasClass("\r;8nV");
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      Document document0 = Parser.parse("4W`2*x", "4W`2*x");
      Element element0 = document0.toggleClass("4W`2*x");
      element0.hasClass("Tag name must not be empty.");
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      Document document0 = Parser.parse("+;uYiV+pFEjR", "");
      Element element0 = document0.toggleClass("BA3");
      element0.hasClass("");
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("Pattern syntax error: ", "Pattern syntax error: ");
      CDataNode cDataNode0 = new CDataNode("java.lang.string@0000000016 ,fmb6k <`z8'c(=");
      document0.appendChild(cDataNode0);
      document0.data();
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("L,AJ@#{GVv", "L,AJ@#{GVv");
      DataNode dataNode0 = new DataNode("~%#t");
      document0.appendChild(dataNode0);
      document0.data();
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      Document document0 = Parser.parse("BA3", "BA3");
      document0.hasText();
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Element$NodeList", "org.jsoup.nodes.Element$NodeList");
      document0.reparentChild(document0);
      document0.getElementsContainingOwnText("org.jsoup.nodes.Element$NodeList");
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      DocumentType documentType0 = new DocumentType("]X", "]X", "]W", "            ", "            ");
      Element.preserveWhitespace(documentType0);
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      Document document0 = new Document("kbd");
      document0.html("(VGI=Ks2UM|LfS* ");
      document0.appendElement("br");
      document0.getElementsContainingOwnText("G=6G8qjy");
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      Document document0 = new Document("insert3psiin out o bounds.");
      document0.appendElement("br");
      document0.getElementsContainingOwnText("dd");
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("<![CDATA[", "<![CDATA[");
      document0.text();
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      Document document0 = Parser.parse("Bv}", "flPs(R]");
      DataNode dataNode0 = DataNode.createFromEncoded("3{?r|Xu)>Z$", "basefont");
      document0.prependChild(dataNode0);
      document0.ownText();
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      Document document0 = Document.createShell("AkhYI6>");
      document0.title("k&dX<");
      document0.append("AkhYI6>");
      document0.text();
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("A2e=e", "A2e=e");
      document0.append("o");
      document0.text();
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(",yu@BQyL8kM*C4Yc+G", ",yu@BQyL8kM*C4Yc+G");
      document0.appendElement("br");
      document0.text();
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("A2e=e", "A2e=e");
      document0.getElementById("A2e=e");
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      Document document0 = Document.createShell("BA}");
      document0.appendChild(document0);
      document0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "");
      document0.reparentChild(document0);
      document0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(",yu@BQyL8kM*C4Yc+G", ",yu@BQyL8kM*C4Yc+G");
      Element element0 = document0.appendElement("br");
      element0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      Document document0 = Parser.parse("BA3", "BA3");
      document0.reparentChild(document0);
      document0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      Document document0 = Document.createShell("textarea");
      document0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("zW=#CD[M1", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("zW=#CD[M1");
      Attributes attributes0 = cDataNode0.attributes();
      Element element0 = new Element(tag0, "zW=#CD[M1", attributes0);
      element0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      Document document0 = Parser.parse("4W`2*x", "4W`2*x");
      Element element0 = document0.head();
      Elements elements0 = element0.nextElementSiblings();
      assertFalse(elements0.isEmpty());
      assertEquals("4W`2*x", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      Document document0 = Parser.parse("BA3", "BA3");
      Element element0 = document0.head();
      Elements elements0 = element0.siblingElements();
      assertEquals("BA3", element0.baseUri());
      assertEquals(1, elements0.size());
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      Document document0 = new Document("");
      Elements elements0 = document0.siblingElements();
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.nodes.Document$QuirksMode");
      Element element0 = document0.head();
      element0.after("fallback");
      String string0 = element0.cssSelector();
      assertEquals("org.jsoup.nodes.Document$QuirksMode", element0.baseUri());
      assertEquals("html > head:nth-child(1)", string0);
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      Document document0 = Parser.parse("+;uYiV+pFEjR", "");
      document0.toggleClass("BA3");
      String string0 = document0.cssSelector();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Document$QuirksMode", "6#");
      Node[] nodeArray0 = new Node[1];
      // Undeclared exception!
      try { 
        document0.insertChildren((-1158719227), nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      Document document0 = Document.createShell("AkhYI6>");
      Node[] nodeArray0 = new Node[1];
      // Undeclared exception!
      try { 
        document0.insertChildren(2, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      Tag tag0 = Tag.valueOf("\"i$~=}k5");
      Element element0 = new Element(tag0, "\"i$~=}k5");
      List<TextNode> list0 = element0.textNodes();
      // Undeclared exception!
      try { 
        element0.insertChildren((-936), (Collection<? extends Node>) list0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Pattern syntax eror: ", "!53(^B");
      LinkedHashSet<Comment> linkedHashSet0 = new LinkedHashSet<Comment>();
      // Undeclared exception!
      try { 
        document0.insertChildren(182, (Collection<? extends Node>) linkedHashSet0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("'{Ov gl BXW>E~G;x", "'{Ov gl BXW>E~G;x");
      DataNode dataNode0 = new DataNode("tag.name must 4ot be etpty.");
      document0.prependChild(dataNode0);
      assertEquals(0, dataNode0.siblingIndex());
      
      List<DataNode> list0 = document0.dataNodes();
      assertTrue(list0.contains(dataNode0));
      assertEquals("'{Ov gl BXW>E~G;x", document0.baseUri());
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      Tag tag0 = Tag.valueOf("\"i$~=}k5");
      Element element0 = new Element(tag0, "za($XKm)ODSI");
      Element element1 = element0.append("\"i$~=}k5");
      element1.textNodes();
      assertEquals(1, element0.childNodeSize());
      assertEquals("za($XKm)ODSI", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      Document document0 = Parser.parse("BA3", "");
      List<TextNode> list0 = document0.textNodes();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.nodes.Document$QuirksMode", "org.jsoup.nodes.Document$QuirksMode");
      Element element0 = document0.appendText("Children collection to be inserted must not be null.");
      document0.reparentChild(document0);
      Elements elements0 = element0.siblingElements();
      assertEquals(2, document0.childNodeSize());
      assertFalse(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      Document document0 = Parser.parse("BA3", "BA3");
      Elements elements0 = document0.getElementsByIndexGreaterThan(0);
      assertEquals(1, elements0.size());
      assertEquals("BA3", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      Document document0 = Parser.parse("+;uYiV+pFEjR", "");
      Element element0 = document0.selectFirst("BA3");
      assertNull(element0);
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "");
      document0.getAllElements();
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("kbd", "kbd");
      // Undeclared exception!
      try { 
        document0.before("K95o");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      Document document0 = Document.createShell("BA}");
      document0.getElementsByAttribute("BA}");
      assertEquals(1, document0.childNodeSize());
      assertEquals("BA}", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      Document document0 = Document.createShell("BA3");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueNot((String) null, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      Document document0 = Document.createShell("BA}");
      // Undeclared exception!
      try { 
        document0.appendTo((Element) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      Element element0 = new Element("{=");
      Element element1 = element0.shallowClone();
      assertNotSame(element1, element0);
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      Document document0 = Parser.parse("Insert position out of bounds.", "AfterAttributeName");
      // Undeclared exception!
      try { 
        document0.after((Node) document0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("BA3", "!53(^B");
      // Undeclared exception!
      try { 
        document0.text((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      Document document0 = new Document("6#e");
      document0.getElementsByAttributeValueContaining("W2A&I/21V$V72*V", "org.jsoup.nodes.Element$2");
      assertEquals("6#e", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      Document document0 = new Document("");
      Elements elements0 = document0.getElementsByAttributeValueMatching("q*o", "");
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      Document document0 = Document.createShell("@0w");
      Elements elements0 = document0.getElementsContainingText("@0w");
      assertTrue(elements0.isEmpty());
      assertEquals(1, document0.childNodeSize());
      assertEquals("@0w", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("BA3", "");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueEnding("K", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      Document document0 = Parser.parse("bA3", "bA3");
      document0.is("body");
      assertEquals("bA3", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      Document document0 = Parser.parse("bA3", "bA3");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueMatching("\n", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("mgNAE7x", "fw[\"V.gum!h>'an <ag");
      // Undeclared exception!
      try { 
        document0.wrap("fw[\"V.gum!h>'an <ag");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      Document document0 = new Document("jo1g/.}BzC9^O:ZC");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingOwnText((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      Document document0 = Parser.parse("BA3", "BA3");
      Elements elements0 = document0.getElementsByIndexEquals(0);
      assertEquals(3, elements0.size());
      assertEquals("BA3", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("Pattern syntax eror: ", "K6+2MdTZ0[");
      document0.getElementsByAttributeStarting("%H=?QiRX ~=RywDm");
      assertEquals("K6+2MdTZ0[", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("org.jsoup.nodes.Document$QuirksMode", "org.jsoup.nodes.Document$QuirksMode");
      Element element0 = document0.prependElement("\"wZV|igO7/IDVX%H");
      assertEquals("org.jsoup.nodes.Document$QuirksMode", element0.baseUri());
      assertEquals(0, element0.siblingIndex());
      assertTrue(element0.hasParent());
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("za($XKm)ODSI", "*,(DC\u0002\"xs");
      Elements elements0 = document0.getElementsByIndexLessThan(38);
      assertEquals(3, elements0.size());
      assertEquals("*,(DC\u0002\"xs", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      Document document0 = Document.createShell("Q[Ud[~?~3");
      // Undeclared exception!
      try { 
        document0.after("d+>+E-xZB<");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("~Bpd{\"", "~Bpd{\"");
      Pattern pattern0 = Pattern.compile("</", (-2330));
      document0.getElementsMatchingOwnText(pattern0);
      assertEquals("~Bpd{\"", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("~Bpd{\"", "~Bpd{\"");
      Element element0 = document0.prepend("");
      assertEquals("~Bpd{\"", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.nodes.Document$QuirksMode");
      Element element0 = document0.head();
      String string0 = element0.cssSelector();
      assertEquals(1, document0.childNodeSize());
      assertEquals("org.jsoup.nodes.Document$QuirksMode", element0.baseUri());
      assertEquals("html > head", string0);
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("4W`2*x", "&#xa0;");
      document0.getElementsByAttributeValueStarting("4W`2*x", "4W`2*x");
      assertEquals(1, document0.childNodeSize());
      assertEquals("&#xa0;", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      Tag tag0 = Tag.valueOf("Tag name must not be empty.");
      CDataNode cDataNode0 = new CDataNode("Tag name must not be empty.");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "Tag name must not be empty.", attributes0);
      formElement0.getElementsByAttributeValue("Tag name must not be empty.", "RB5uIeGw64=b3wbhP|x");
      assertEquals("Tag name must not be empty.", formElement0.baseUri());
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Element$NodeList", "org.jsoup.nodes.Element$NodeList");
      Element element0 = document0.attr("qAFHi=", true);
      assertEquals(1, element0.childNodeSize());
      assertEquals("org.jsoup.nodes.Element$NodeList", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("L,AJ@#{GVv", "L,AJ@#{GVv");
      document0.wholeText();
      assertEquals("L,AJ@#{GVv", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      Document document0 = new Document("BA3");
      CDataNode cDataNode0 = new CDataNode(" />");
      // Undeclared exception!
      try { 
        document0.before((Node) cDataNode0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      Document document0 = Parser.parse("4W`2*x", "4W`2*x");
      Element element0 = document0.addClass("4W`2*x");
      assertEquals("4W`2*x", element0.baseUri());
      assertEquals(1, element0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      Document document0 = Document.createShell("org.Qsoup.nudes.IlKment$NodeList");
      document0.dataset();
      assertEquals(1, document0.childNodeSize());
      assertEquals("org.Qsoup.nudes.IlKment$NodeList", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      Document document0 = Parser.parse("4XG", "4XG");
      document0.prependText("4XG");
      document0.getElementsContainingText("<v)k&qg-cwH,eXJb");
      assertEquals(2, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      Document document0 = Parser.parse("BA3", "BA3");
      // Undeclared exception!
      try { 
        document0.child((-173));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test342()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("cogroup", "cogroup");
      document0.previousElementSiblings();
      assertEquals("cogroup", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test343()  throws Throwable  {
      Document document0 = Document.createShell("@0w");
      DataNode dataNode0 = DataNode.createFromEncoded("#c^XF# b7//1{", "@0w");
      document0.prependChild(dataNode0);
      document0.getElementsContainingText("@0w");
      assertEquals(2, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test344()  throws Throwable  {
      Document document0 = Parser.parse("ek", "ek");
      Elements elements0 = document0.getElementsMatchingText("ek");
      assertEquals(3, elements0.size());
      assertEquals("ek", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test345()  throws Throwable  {
      Document document0 = Parser.parse("-8,|4/}-j;b!)$y ", "-8,|4/}-j;b!)$y ");
      // Undeclared exception!
      try { 
        document0.appendText((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test346()  throws Throwable  {
      Element element0 = new Element("o*3");
      Elements elements0 = element0.children();
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test347()  throws Throwable  {
      Document document0 = Parser.parse("4W`2*x", "4W`2*x");
      document0.nextElementSiblings();
  }
}
