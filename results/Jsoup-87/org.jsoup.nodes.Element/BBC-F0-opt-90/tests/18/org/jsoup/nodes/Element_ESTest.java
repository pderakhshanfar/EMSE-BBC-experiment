/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 20 16:08:57 GMT 2021
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.CharArrayWriter;
import java.io.IOException;
import java.io.PipedWriter;
import java.io.Reader;
import java.io.StringReader;
import java.io.StringWriter;
import java.nio.BufferOverflowException;
import java.nio.CharBuffer;
import java.nio.ReadOnlyBufferException;
import java.nio.charset.Charset;
import java.util.Collection;
import java.util.List;
import java.util.Set;
import java.util.regex.Pattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.Comment;
import org.jsoup.nodes.DataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.DocumentType;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.nodes.PseudoTextElement;
import org.jsoup.nodes.TextNode;
import org.jsoup.nodes.XmlDeclaration;
import org.jsoup.parser.ParseErrorList;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Parser;
import org.jsoup.parser.Tag;
import org.jsoup.select.Elements;
import org.jsoup.select.Evaluator;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Element_ESTest extends Element_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(".\"Z5~<J4_P]", ".\"Z5~<J4_P]");
      document0.html("<html>\n <head></head>\n <body>\n  .\"Z5~&lt;J4_P]\n </body>\n</html>");
      document0.outerHtml();
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.sewfct.Evaluator$Attribute", "org.jsoup.sewfct.Evaluator$Attribute");
      Element element0 = document0.addClass("org.jsoup.sewfct.Evaluator$Attribute");
      document0.addClass("org.jsoup.sewfct.Evaluator$Attribute");
      element0.getElementsByClass("org.jsoup.sewfct.Evaluator$Attribute");
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Document document0 = new Document("_RJm~<Fc bLu");
      document0.setParentNode(document0);
      document0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Document document0 = new Document(";v_rdy$");
      document0.appendElement("br");
      Node[] nodeArray0 = new Node[4];
      // Undeclared exception!
      try { 
        document0.insertChildren((-1), nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array must not contain any null objects
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Document document0 = new Document("_RJm~<Fc bLu");
      MockPrintStream mockPrintStream0 = new MockPrintStream(" />");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document0.outerHtmlTail(mockPrintStream0, 0, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(".\"Z5~<J4_P]", ".\"Z5~<J4_P]");
      document0.nodelistChanged();
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Document document0 = new Document("");
      document0.doSetBaseUri("org.jsoup.internal.StringUtil");
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Document document0 = new Document("olFItg@[|wU70qv8");
      Document document1 = document0.clone();
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = (Node) document0;
      nodeArray0[1] = (Node) document0;
      document1.addChildren(nodeArray0);
      document0.wrap("cite");
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Document document0 = Document.createShell("PXPx@q-/:G8D");
      Element element0 = document0.body();
      element0.wrap("head");
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(" />", " />");
      Element element0 = document0.body();
      element0.wrap("rT)3");
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Element element0 = new Element(".\"Z5~<J4_P]");
      element0.wholeText();
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Document document0 = Document.createShell("#root");
      Element element0 = document0.appendElement("i|serted");
      element0.siblingIndex = (-146273436);
      element0.val("i|serted");
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("_RJm~<Fc bALu", "_RJm~<Fc bALu");
      Element element0 = document0.body();
      element0.val("_RJm~<Fc bALu");
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("R`", "R`");
      document0.setSiblingIndex((-3));
      document0.toggleClass("&#y$n +t3;%`bN'x");
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Document document0 = Parser.parse("GF=hGB@vC|5Gm03j G)", "GF=hGB@vC|5Gm03j G)");
      Element element0 = document0.body();
      element0.toggleClass("GF=hGB@vC|5Gm03j G)");
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("6:M!sVlbKxT#eD]4`X]", "6:M!sVlbKxT#eD]4`X]");
      DataNode dataNode0 = new DataNode("7;", "^G[au^P}TDwvRm");
      document0.setParentNode(dataNode0);
      document0.toggleClass("6:M!sVlbKxT#eD]4`X]");
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Document document0 = new Document("0CDVkTvTvnQ%rN'j;ow");
      document0.toggleClass("0CDVkTvTvnQ%rN'j;ow");
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("\"s", "org.jsoup.sewect.Evaluator$Attibute");
      Element element0 = document0.body();
      element0.text("");
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.select.Evaluator$Attribute", "org.jsoup.select.Evaluator$Attribute");
      document0.text("0NS@d]J:5We8<oB'5");
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Document document0 = Document.createShell("E~y`@=hB9`_}");
      document0.text();
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Document document0 = Parser.parse("xIO>mvH!u1Uy", "xIO>mvH!u1Uy");
      Element element0 = document0.body();
      element0.tagName("xIO>mvH!u1Uy");
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Element element0 = new Element("org.jsoup.nodes.Element$1");
      element0.tagName("BeforeDoctypeSystemIdentifier");
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(" />", " />");
      document0.tagName();
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Document document0 = new Document("*2Mo'3)gUqnc96");
      Element element0 = document0.appendElement("br");
      element0.tag();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("L&cn~", "^*ND!");
      Element element0 = document0.prependElement("main");
      element0.tag();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Document document0 = new Document("*2Mo'3)gUqnc96");
      document0.tag();
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("nF_dv :PPR}7=", "nF_dv :PPR}7=");
      Element element0 = document0.body();
      element0.shallowClone();
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Tag tag0 = Tag.valueOf("body");
      CDataNode cDataNode0 = new CDataNode("body");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "body", attributes0);
      formElement0.selectFirst("body");
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("br", "br");
      Element element0 = document0.appendElement("br");
      element0.selectFirst("br");
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("nF_dv :PPR}7=", "nF_dv :PPR}7=");
      document0.selectFirst("html > body");
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Document document0 = new Document(".\"Z5~<J4_P]");
      document0.select("bo_");
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Document document0 = new Document(";v_rdy$");
      document0.appendElement("br");
      document0.select("br");
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Document document0 = Document.createShell("Fw8>$N7");
      Element element0 = document0.body();
      element0.removeClass("<body></body>");
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(";V_Rdy$", ";V_Rdy$");
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) document0;
      document0.addChildren(nodeArray0);
      document0.previousElementSiblings();
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Document document0 = new Document("olFItg@[|wU70qv8");
      Document document1 = document0.clone();
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = (Node) document1;
      nodeArray0[1] = (Node) document0;
      document1.addChildren(nodeArray0);
      document0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Document document0 = Document.createShell("Fw8>$N7");
      Element element0 = document0.body();
      element0.prependText("c<k<x>");
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("org.jsoup.nodes.Node", "org.jsoup.nodes.Node");
      Element element0 = document0.appendElement("body");
      element0.prependChild(document0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("br", "split offset must not be greater than current text length");
      Element element0 = document0.body();
      element0.prepend("there is an unread token pending!");
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Element element0 = new Element("org.jsoup.nodes.Node");
      element0.prepend("");
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Document document0 = Document.createShell("t");
      document0.parents();
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Document document0 = new Document("`s");
      Document document1 = document0.normalise();
      Element element0 = document1.head();
      element0.parents();
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("=d'6QA9P(", "=d'6QA9P(");
      document0.parent();
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(",w=|Q", ",w=|Q");
      Element element0 = document0.body();
      DataNode dataNode0 = DataNode.createFromEncoded(",w=|Q", (String) null);
      document0.prependChild(dataNode0);
      element0.parent();
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(" />", " />");
      Document document1 = document0.clone();
      document1.setParentNode(document0);
      document1.parent();
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("PFRz2?z~h|", "org.jsoup.nodes.Node");
      document0.prependText("PFRz2?z~h|");
      document0.ownText();
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("org.jsoup.select.Evaluator$Attribue", "org.jsoup.select.Evaluator$Attribue");
      document0.nodeName();
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Document document0 = Document.createShell("_RJm~<Fc bLu");
      Document document1 = Document.createShell("_RJm~<Fc bLu");
      document0.setParentNode(document1);
      document1.appendElement("eh");
      document0.nextElementSiblings();
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.sewfct.Evaluator$Attribute", "org.jsoup.sewfct.Evaluator$Attribute");
      Element element0 = document0.head();
      element0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Document document0 = Parser.parse(";V_Rdy$", ";V_Rdy$");
      Element element0 = document0.head();
      document0.reparentChild(element0);
      Element element1 = element0.after((Node) document0);
      element1.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(";V_Rdy$", ";V_Rdy$");
      Element element0 = document0.head();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) document0;
      document0.addChildren(nodeArray0);
      element0.appendTo(document0);
      document0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Document document0 = Document.createShell("");
      Element element0 = document0.head();
      element0.isBlock();
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("PFRz2?z~h|", "org.jsup.nodes.Node");
      Evaluator.AttributeWithValueEnding evaluator_AttributeWithValueEnding0 = new Evaluator.AttributeWithValueEnding("ytINlxjT%?;{~?Q", "%{U%P<p_bKSqQ;Bq");
      document0.is((Evaluator) evaluator_AttributeWithValueEnding0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Element element0 = new Element("br");
      element0.is("br");
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Document document0 = Document.createShell("_RJm~<Fc bLu");
      Element element0 = new Element("_RJm~<Fc bLu");
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = (Node) element0;
      nodeArray0[1] = (Node) document0;
      Document document1 = Document.createShell("_RJm~<Fc bLu");
      nodeArray0[2] = (Node) document1;
      nodeArray0[3] = (Node) element0;
      Element element1 = document1.createElement("?iFH=vo[");
      nodeArray0[4] = (Node) element1;
      document0.insertChildren(0, nodeArray0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Element element0 = new Element("Insert position out of bounds.");
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) element0;
      element0.insertChildren(0, nodeArray0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Document document0 = Parser.parse("vIy@R", "vIy@R");
      Element element0 = document0.body();
      Elements elements0 = element0.children();
      element0.insertChildren((-1), (Collection<? extends Node>) elements0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Element element0 = new Element(".\"Z5~<J4_P]");
      Document document0 = Parser.parseBodyFragment(".\"Z5~<J4_P]", "bod");
      Element element1 = element0.appendTo(document0);
      Elements elements0 = document0.siblingElements();
      element1.insertChildren(0, (Collection<? extends Node>) elements0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.select.Evaluator$Attribute", "org.jsoup.select.Evaluator$Attribute");
      Element element0 = document0.appendElement("`S");
      Element element1 = element0.previousElementSibling();
      element1.html("nYF+fwCBBf");
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("[=", "[=");
      Element element0 = document0.appendElement("`S");
      element0.html("n~G%K^\",\"FDZ%e>!:");
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("B^Z6KO`<?`", "B^Z6KO`<?`");
      document0.html("");
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("L&cn~", "^*ND!");
      Element element0 = document0.prependElement("main");
      element0.html((PipedWriter) null);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Document document0 = new Document("REMOVE");
      document0.html();
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(" />", " />");
      document0.getElementsByClass(" />");
      document0.hasAttributes();
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Document document0 = Parser.parse("jn5G5pnFf?}vJ?q", "jn5G5pnFf?}vJ?q");
      document0.hasAttributes();
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.select.Evaluator$Attribute", "org.jsoup.select.Evaluator$Attribute");
      Pattern pattern0 = Pattern.compile("org.jsoup.select.Evaluator$Attribute", 1169);
      document0.getElementsMatchingText(pattern0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(",w=|Q", ",w=|Q");
      document0.getElementsMatchingText(".");
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("PlPd(Eu}^9", "br");
      Pattern pattern0 = Pattern.compile("HfLI=s]+4wF^H'm");
      document0.getElementsMatchingOwnText(pattern0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("=d'6QA9P(", "=d'6QA9P(");
      document0.getElementsContainingText("xmlns:");
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("xno", "</");
      document0.getElementsByTag("</");
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Element element0 = new Element(".\"Z5~<J4_P]");
      element0.getElementsByTag(".\"Z5~<J4_P]");
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Document document0 = new Document(".\"Z5~<J4_P]");
      document0.getElementsByIndexLessThan((-904));
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("br", "br");
      document0.getElementsByIndexEquals((-1696));
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Document document0 = Parser.parse("jav}.l^ng.string@0000000084", "jav}.l^ng.string@0000000084");
      document0.addClass("jav}.l^ng.string@0000000084");
      Element element0 = document0.addClass("jav}.l^ng.string@0000000084");
      element0.getElementsByClass("jav}.l^ng.string@0000000084");
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Tag tag0 = Tag.valueOf(":conain[ext) quey must not be empy");
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute(":conain[ext) quey must not be empy", ":conain[ext) quey must not be empy");
      attributes0.put(attribute0);
      Element element0 = new Element(tag0, "Zt-)ei,y<(?;|", attributes0);
      element0.getElementsByAttributeValueStarting(":conain[ext) quey must not be empy", ":conain[ext) quey must not be empy");
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Tag name must not be empty.", "Tag name must not be empty.");
      document0.getElementsByAttributeValueNot("<html>\n <head></head>\n <body>\n  Tag name must not be empty.\n </body>\n</html>", " ");
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("PFRz2?z~h|", "org.jsup.nodes.Node");
      Document document1 = (Document)document0.prependText("PFRz2?z~h|");
      document1.appendElement("body");
      document1.setParentNode(document0);
      document1.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(" />", " />");
      Element element0 = document0.appendElement(":%s(%d)");
      element0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.select.Evaluator$Attribute", "org.jsoup.select.Evaluator$Attribute");
      Element element0 = document0.appendElement("`S");
      element0.empty();
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Document document0 = new Document("org.jsoup.select.Evaluator$Attribute");
      Element element0 = document0.appendElement("html");
      element0.empty();
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("]=", "/ciCWX/BSx6Z>u");
      Element element0 = document0.body();
      element0.doClone(element0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.select.Evaluator$Attribute", "org.jsoup.select.Evaluator$Attribute");
      document0.doClone((Node) null);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("_RJm~<Fc bALu", "_RJm~<Fc bALu");
      Element element0 = document0.body();
      element0.clone();
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.select.Evaluator$Attribute", "org.jsoup.select.Evaluator$Attribute");
      Element element0 = document0.appendElement("`S");
      element0.clone();
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("br", "br");
      Element element0 = document0.body();
      Set<String> set0 = document0.classNames();
      element0.classNames(set0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Document document0 = Document.createShell("_RJm~<Fc bLu");
      Element element0 = document0.addClass("_RJm~<Fc bLu");
      element0.classNames();
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Document document0 = Document.createShell("_RJm~<Fc bLu");
      Element element0 = document0.addClass("_RJm~<Fc bLu");
      element0.className();
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(" />", " />");
      document0.children();
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Document document0 = Document.createShell("_RJm~<Fc bLu");
      Element element0 = document0.appendElement("FuP>n`Xj9:");
      element0.childNodeSize();
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(" />", " />");
      document0.childNodeSize();
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("bod", "bod");
      document0.child(0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(".\"GZ5~<J4_P]", ".\"GZ5~<J4_P]");
      document0.reparentChild(document0);
      document0.before((Node) document0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("]~J^oIbJu", "]~J^oIbJu");
      Element element0 = document0.appendElement("]~J^oIbJu");
      element0.before((Node) document0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("\"s", "org.jsoup.sewect.Evaluator$Attibute");
      Element element0 = document0.body();
      element0.before((Node) document0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Element element0 = new Element("|l[b");
      element0.baseUri();
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(",w=|Q", ",w=|Q");
      Element element0 = document0.val("x-3m/*");
      element0.attributes();
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Document document0 = Document.createShell("_RJm~<Fc bLu");
      Element element0 = document0.appendElement("_rjmt<fe");
      element0.attr("'I4", false);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.select.Evaluator$Attribute", "org.jsoup.select.Evaluator$Attribute");
      Element element0 = document0.body();
      Element element1 = element0.previousElementSibling();
      element1.attr("org.jsoup.select.Evaluator$Attribute", true);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Document document0 = new Document("org.jsoup.select.Evaluator$Attribute");
      Node[] nodeArray0 = new Node[1];
      Document document1 = document0.clone();
      nodeArray0[0] = (Node) document1;
      document0.addChildren(nodeArray0);
      Element element0 = document0.appendElement("html");
      element0.attr("html", "p'-rkB;");
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Document document0 = new Document("org.jsoup.select.Evaluator$Attribute");
      Element element0 = document0.appendElement("html");
      element0.attr("html", "p'-rkB;");
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("B.4{2BH@Y:[jYp%|~-", "B.4{2BH@Y:[jYp%|~-");
      Tag tag0 = Tag.valueOf("py");
      CDataNode cDataNode0 = new CDataNode("]");
      Attributes attributes0 = cDataNode0.attributes();
      Element element0 = new Element(tag0, "textarea", attributes0);
      document0.appendTo(element0);
      document0.attr("3", "b");
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Element element0 = new Element("org.jsoup.select.Evaluator$Attribute");
      element0.attr("org.jsoup.select.Evaluator$Attribute", "nYF+fwCBBf");
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Document document0 = Document.createShell("tf");
      document0.siblingIndex = (-618);
      document0.appendText("tf");
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(",w=|Q", ",w=|Q");
      Element element0 = document0.body();
      element0.appendText(",w=|Q");
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Document document0 = new Document("X");
      Document document1 = document0.normalise();
      document0.appendChild(document1);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("`s", "`s");
      Element element0 = document0.appendElement("`s");
      Element element1 = element0.previousElementSibling();
      element1.appendChild(document0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Document document0 = Parser.parse("vIy@R", "vIy@R");
      Element element0 = document0.body();
      element0.append("<E.jO6$oe+G'w]@");
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(";V_Rdy$", ";V_Rdy$");
      Element element0 = document0.head();
      element0.append("head");
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Document document0 = new Document("_RJm~<Fc bLu");
      document0.append("");
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.select.Evaluator$Attribute", "org.jsoup.select.Evaluator$Attribute");
      Element element0 = document0.head();
      element0.after((Node) element0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.select.Evaluator$Attribute", "org.jsoup.select.Evaluator$Attribute");
      Element element0 = document0.doClone(document0);
      element0.after((Node) document0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Document document0 = Document.createShell("Fw8>$N7");
      Element element0 = document0.body();
      Element element1 = element0.previousElementSibling();
      element1.after("Fw8>$N7");
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.select.Evaluator$Attribute", "org.jsoup.select.Evaluator$Attribute");
      Element element0 = document0.appendElement("`S");
      element0.after("`S");
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("n=>L`gJOer_x", "n=>L`gJOer_x");
      Element element0 = document0.body();
      element0.after("n=>L`gJOer_x");
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Document document0 = new Document("X");
      Document document1 = document0.normalise();
      Element element0 = document1.appendElement("br");
      element0.addClass("br");
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("Tag name must not be empty.", "Tag name must not be empty.");
      document0.setSiblingIndex((-2228));
      document0.addClass("Tag name must not be empty.");
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(";V_Rdy$", ";V_Rdy$");
      Element element0 = document0.head();
      element0.addClass("body");
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Document document0 = new Document("_RJm~<Fc bLu");
      Element element0 = document0.addClass("_RJm~<Fc bLu");
      element0.addClass("_RJm~<Fc bLu");
      document0.getElementsByClass("wf`m6c<m");
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Document document0 = Parser.parse(";V_Rdy$", ";V_Rdy$");
      Element element0 = document0.head();
      Element element1 = element0.after((Node) document0);
      // Undeclared exception!
      element1.wrap("i");
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(";V_Rdy$", ";V_Rdy$");
      // Undeclared exception!
      try { 
        document0.wrap("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Document document0 = Document.createShell("PXPx@q-/:G8D");
      Element element0 = document0.body();
      element0.setSiblingIndex((-2));
      // Undeclared exception!
      try { 
        element0.wrap("head");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(";V_Rdy$", ";V_Rdy$");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.val("dQt7)PB_5<AT");
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(";V_Rdy$", ";V_Rdy$");
      Parser parser0 = Parser.xmlParser();
      Parser parser1 = parser0.settings((ParseSettings) null);
      Document document1 = document0.parser(parser1);
      // Undeclared exception!
      try { 
        document1.val((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Document document0 = new Document("nF_dvj :PPR}7=");
      // Undeclared exception!
      try { 
        document0.toggleClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      StringReader stringReader0 = new StringReader("org.jsoup.select.Evaluator$Attribute");
      Document document0 = parser0.parseInput((Reader) stringReader0, "0B*x^I");
      // Undeclared exception!
      try { 
        document0.text("0B*x^I");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Document document0 = new Document(";v_rdy$");
      Element element0 = document0.appendElement("br");
      // Undeclared exception!
      try { 
        element0.text((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(",w=|Q", ",w=|Q");
      Element element0 = document0.body();
      List<Node> list0 = Parser.parseFragment("org.jsoup.parser.TokenQueue", element0, "org.jsoup.parser.TokenQueue");
      element0.childNodes = list0;
      // Undeclared exception!
      try { 
        document0.text();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("]~J^oIbJu", "]~J^oIbJu");
      Comment comment0 = new Comment("]~J^oIbJu", "#");
      document0.setParentNode(comment0);
      // Undeclared exception!
      try { 
        document0.text();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(",w=|Q", ",w=|Q");
      Element element0 = document0.head();
      element0.setSiblingIndex((-1910134288));
      // Undeclared exception!
      try { 
        document0.text();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Document document0 = Document.createShell("_RJm~<Fc bLu");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.tagName(".\"gz5~<j4_p]");
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Document document0 = Parser.parse("</", "</");
      // Undeclared exception!
      try { 
        document0.tagName("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Tag name must not be empty.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(",w=|Q", ",w=|Q");
      Element element0 = document0.appendElement("yi`(tv.h");
      document0.setParentNode(element0);
      // Undeclared exception!
      try { 
        document0.siblingElements();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Element element0 = new Element("-");
      CDataNode cDataNode0 = new CDataNode(",b|S758cERP");
      element0.setParentNode(cDataNode0);
      // Undeclared exception!
      try { 
        element0.siblingElements();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Document document0 = Parser.parse("b'?#F$8sSN@ga%2>@", "av@");
      // Undeclared exception!
      try { 
        document0.selectFirst("b'?#F$8sSN@ga%2>@");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query 'b'?#F$8sSN@ga%2>@': unexpected token at ''?#F$8sSN@ga%2>@'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      // Undeclared exception!
      try { 
        document0.selectFirst("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Document document0 = new Document("REMOVV0");
      // Undeclared exception!
      try { 
        document0.select("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(".\"Z<J4_P", ".\"Z<J4_P");
      // Undeclared exception!
      try { 
        document0.removeClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Document document0 = Document.createShell("id-$N~3zL{7");
      CDataNode cDataNode0 = new CDataNode("id-$N~3zL{7");
      document0.setParentNode(cDataNode0);
      // Undeclared exception!
      try { 
        document0.previousElementSibling();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("<5-Z@2d68H={5/0=j", "#");
      // Undeclared exception!
      try { 
        document0.prependText((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(".\"GZ5~<J4_P]", ".\"GZ5~<J4_P]");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.prependElement("yi`(tv.h");
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(" />", " />");
      // Undeclared exception!
      try { 
        document0.prependElement("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("6:M!sVlbKxT#eD]4`X]", "6:M!sVlbKxT#eD]4`X]");
      DataNode dataNode0 = new DataNode("7;", "^G[au^P}TDwvRm");
      document0.setParentNode(dataNode0);
      // Undeclared exception!
      try { 
        document0.prependChild(document0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractList", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(",w=|Q", ",w=|Q");
      // Undeclared exception!
      try { 
        document0.prependChild((Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("hj8$GWI|1 Ph;3_b", "hj8$GWI|1 Ph;3_b");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.prepend("hj8$GWI|1 Ph;3_b");
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Document document0 = Document.createShell("_RJm~<Fc bLu");
      Element element0 = document0.toggleClass("_RJm~<Fc bLu");
      ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
      List<Node> list0 = Parser.parseFragment("_RJm~<Fc bLu", (Element) document0, "_RJm~<Fc bLu", parseErrorList0);
      element0.childNodes = list0;
      // Undeclared exception!
      try { 
        element0.prepend("_RJm~<Fc bLu");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableList", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Element element0 = new Element("6]Y?.`s_");
      // Undeclared exception!
      try { 
        element0.prepend((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Document document0 = new Document("0CDVkTvTvnQ%rN'j;ow");
      DocumentType documentType0 = new DocumentType("CommentEnd", "CommentEnd", "0CDVkTvTvnQ%rN'j;ow", "0CDVkTvTvnQ%rN'j;ow", " />");
      document0.setParentNode(documentType0);
      // Undeclared exception!
      try { 
        document0.parents();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Tag name must not be empty.", "Tag name must not be empty.");
      TextNode textNode0 = TextNode.createFromEncoded("Tag name must not be empty.");
      document0.setParentNode(textNode0);
      // Undeclared exception!
      try { 
        document0.parent();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("W#Y5T", "W#Y5T");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "W#Y5T");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document_OutputSettings0.indentAmount(3036);
      // Undeclared exception!
      document0.outerHtmlTail(stringBuffer0, 3036, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("org.jsoup.SerializationException", "org.jsoup.SerializationException");
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "org.jsoup.SerializationException");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlTail(charBuffer0, (-1299), document_OutputSettings0);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.StringCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("hj8$GWI|1 Ph;3_b", "hj8$GWI|1 Ph;3_b");
      Element element0 = document0.appendElement("_rjmt<fe");
      char[] charArray0 = new char[5];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        element0.outerHtmlTail(charBuffer0, (-1433506051), document_OutputSettings0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Tag tag0 = Tag.valueOf("?yAfE@Z");
      Element element0 = new Element(tag0, "?yAfE@Z");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        element0.outerHtmlTail((Appendable) null, 4056, document_OutputSettings0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Document document0 = new Document("Ph");
      document0.appendElement("HJo./");
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(4793);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlTail(charArrayWriter0, (-1110026255), document_OutputSettings0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // width must be > 0
         //
         verifyException("org.jsoup.internal.StringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Tag tag0 = Tag.valueOf("@F6>9D>V`Y:Bzd?DY");
      CDataNode cDataNode0 = new CDataNode("dstP*p`aT*}2SZG%");
      Attributes attributes0 = cDataNode0.attributes();
      Element element0 = new Element(tag0, "PS;I2(Z[y#b87kXI[", attributes0);
      PipedWriter pipedWriter0 = new PipedWriter();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      try { 
        element0.outerHtmlTail(pipedWriter0, (-2), document_OutputSettings0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("/ciCWX/BSx6Z>u", "nF_dvj :PPR}7=");
      StringWriter stringWriter0 = new StringWriter(9);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.indentAmount(2618);
      // Undeclared exception!
      document0.outerHtmlHead(stringWriter0, 9, document_OutputSettings1);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Document document0 = new Document("org.jsoup.nodes.Element$1");
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlHead(charBuffer0, (-1516), document_OutputSettings0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Document document0 = new Document("RJm[<Fc bu");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlHead((Appendable) null, (-2004447537), document_OutputSettings0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("_RJm~<Fc bALu", "_RJm~<Fc bALu");
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlHead(charBuffer0, (-643), document_OutputSettings0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // width must be > 0
         //
         verifyException("org.jsoup.internal.StringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Document document0 = Parser.parse("GF=hGB@vC|5Gm03j G)", "GF=hGB@vC|5Gm03j G)");
      PipedWriter pipedWriter0 = new PipedWriter();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      try { 
        document0.outerHtmlHead(pipedWriter0, 733, document_OutputSettings0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("/ciCWX/BSx6Z>u", "nF_dvj :PPR}7=");
      CDataNode cDataNode0 = new CDataNode("@(yIL@");
      document0.setParentNode(cDataNode0);
      // Undeclared exception!
      try { 
        document0.nextElementSibling();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Document document0 = new Document("");
      // Undeclared exception!
      try { 
        document0.lastElementSibling();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(true, false);
      Tag tag0 = Tag.valueOf("D.~J+S", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "br", attributes0);
      formElement0.appendChild(formElement0);
      Evaluator.MatchText evaluator_MatchText0 = new Evaluator.MatchText();
      // Undeclared exception!
      formElement0.is((Evaluator) evaluator_MatchText0);
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("/ciCWX/BSx6Z>u", "nF_dvj :PPR}7=");
      // Undeclared exception!
      try { 
        document0.is((Evaluator) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Document document0 = new Document("uPU#~|%F7wADAp7UK");
      DocumentType documentType0 = new DocumentType("br", "br", ":containsData(%s)");
      document0.setParentNode(documentType0);
      Evaluator.IsNthLastOfType evaluator_IsNthLastOfType0 = new Evaluator.IsNthLastOfType(1272, 0);
      // Undeclared exception!
      try { 
        document0.is((Evaluator) evaluator_IsNthLastOfType0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.nodes.DocumentType cannot be cast to org.jsoup.nodes.Element
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Tag tag0 = Tag.valueOf("hsQWu1vPg]p7k`T_H");
      Element element0 = new Element(tag0, "40zF}&~g3l%%nf{e");
      // Undeclared exception!
      try { 
        element0.is("z&%Eh]fqis#FK");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query 'z&%Eh]fqis#FK': unexpected token at '&%Eh]fqis#FK'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(",w=|Q", ",w=|Q");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.is("org.jsoup.parser.TokenQueue");
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Tag tag0 = Tag.valueOf("class");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "s+", attributes0);
      CDataNode cDataNode0 = new CDataNode(".\"Z5~<J4_P]");
      formElement0.setParentNode(cDataNode0);
      // Undeclared exception!
      try { 
        formElement0.is("#root");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.nodes.CDataNode cannot be cast to org.jsoup.nodes.Element
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Document document0 = new Document(";v_rdy$");
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = (Node) document0;
      nodeArray0[1] = (Node) document0;
      nodeArray0[2] = (Node) document0;
      nodeArray0[3] = (Node) document0;
      // Undeclared exception!
      try { 
        document0.insertChildren((-1), nodeArray0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("PlPd(Eu}^9", "br");
      List<Node> list0 = document0.ensureChildNodes();
      document0.prependText("zd-d");
      // Undeclared exception!
      try { 
        document0.insertChildren(2, (Collection<? extends Node>) list0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Document document0 = new Document("_RJm~<Fc bLu");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.html("java.lang.string@0000000123 wf`m6c<m blu");
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("D5yB!_Os5A\"'M(", "D5yB!_Os5A\"'M(");
      // Undeclared exception!
      try { 
        document0.html((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      Tag tag0 = Tag.valueOf("VmcMT|G!c[", parseSettings0);
      Element element0 = new Element(tag0, "p <>Geho$BAW");
      Comment comment0 = new Comment("ig{oz");
      Element element1 = element0.doClone(comment0);
      // Undeclared exception!
      try { 
        element1.html("colgroup");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("#root", "#root");
      PipedWriter pipedWriter0 = new PipedWriter();
      // Undeclared exception!
      try { 
        document0.html(pipedWriter0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Pipe not connected
         //
         verifyException("org.jsoup.nodes.Node$OuterHtmlVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("br", "br");
      char[] charArray0 = new char[9];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      // Undeclared exception!
      try { 
        document0.html(charBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(";V_Rdy$", ";V_Rdy$");
      Element element0 = document0.head();
      Element element1 = element0.after((Node) document0);
      // Undeclared exception!
      element1.html();
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(" />", " />");
      // Undeclared exception!
      try { 
        document0.hasClass((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("_RJm~<Fc bALu", "_RJm~<Fc bALu");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText((Pattern) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$Matches", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Element element0 = new Element("class");
      // Undeclared exception!
      try { 
        element0.getElementsMatchingText((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("s0", "s0");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText("`hjo.vX=(`jV/y");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pattern syntax error: `hjo.vX=(`jV/y
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Document document0 = Parser.parse("jav}.l^ng.string@0000000084", "jav}.l^ng.string@0000000084");
      CDataNode cDataNode0 = new CDataNode("ys3x_");
      document0.setParentNode(cDataNode0);
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText("jav}.l^ng.string@0000000084");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(".\"Z5~<J4_P]", ".\"Z5~<J4_P]");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingOwnText((Pattern) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$MatchesOwn", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Document document0 = Document.createShell("_RJm~<Fc bLu");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingOwnText((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(" />", " />");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingOwnText("j{CMVCvtK;<4>>");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pattern syntax error: j{CMVCvtK;<4>>
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("=d'6QA9P(", "=d'6QA9P(");
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration("fb1x}{", true);
      document0.setParentNode(xmlDeclaration0);
      // Undeclared exception!
      try { 
        document0.getElementsContainingText("xmlns:");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("s0", "s0");
      document0.siblingIndex = (-190231400);
      document0.reparentChild(document0);
      // Undeclared exception!
      try { 
        document0.getElementsContainingText("s0");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(".\"Z5~<J4_P]", ".\"Z5~<J4_P]");
      DocumentType documentType0 = new DocumentType(".\"Z5~<J4_P]", "p7&q2'WSP/wfK\u0001", "Mx^0'}/y:KtQ/so/", ".\"Z5~<J4_P]");
      document0.setParentNode(documentType0);
      // Undeclared exception!
      try { 
        document0.getElementsContainingOwnText("--!");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("br", "br");
      Element element0 = document0.appendElement("br");
      element0.setSiblingIndex((-6262915));
      // Undeclared exception!
      try { 
        document0.getElementsContainingOwnText("br");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Document document0 = Document.createShell("\"WZ:hg +4 ");
      // Undeclared exception!
      try { 
        document0.getElementsByTag("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("font", "font");
      Comment comment0 = new Comment(" />", "#root");
      Element element0 = document0.doClone(comment0);
      // Undeclared exception!
      try { 
        element0.getElementsByIndexGreaterThan(5);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Document document0 = Parser.parse("`s", "`s");
      List<Node> list0 = document0.childNodesCopy();
      document0.childNodes = list0;
      // Undeclared exception!
      try { 
        document0.getElementsByIndexEquals((-1436010313));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Tag name must not be empty.", "Tag name must not be empty.");
      TextNode textNode0 = TextNode.createFromEncoded("Tag name must not be empty.");
      document0.setParentNode(textNode0);
      // Undeclared exception!
      try { 
        document0.getElementsByIndexEquals(3213227);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Document document0 = Document.createShell("even");
      Element element0 = document0.appendElement("br");
      element0.siblingIndex = (-1641);
      // Undeclared exception!
      try { 
        document0.getElementsByIndexEquals(1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Tag name must not b@ empty.", "Tag name must not b@ empty.");
      Element element0 = document0.addClass("Tag name must not b@ empty.");
      List<Node> list0 = element0.childNodesCopy();
      element0.childNodes = list0;
      // Undeclared exception!
      try { 
        element0.getElementsByClass("Tag name must not b@ empty.");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Document document0 = Document.createShell("Fw8>$N7");
      // Undeclared exception!
      try { 
        document0.getElementsByClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Document document0 = Document.createShell(".\"GZ5~<J4_P]");
      document0.reparentChild(document0);
      document0.siblingIndex = (-31);
      // Undeclared exception!
      try { 
        document0.getElementsByClass("org.jsoup.parser.Token$EOF");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(".\"Z5~<J4_P]", ".\"Z5~<J4_P]");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueStarting("", "br");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Document document0 = new Document("");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueNot("", "D.~J+S");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("PlPd(Eu}^9", "br");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueMatching("br", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf(".&`y@Qymoz ", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("#root");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, ".&`y@Qymoz ", attributes0);
      // Undeclared exception!
      try { 
        formElement0.getElementsByAttributeValueMatching("QE.CRP<^U:]^{rc", "TGjDX4#p\"P$|Nb)\"&");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pattern syntax error: TGjDX4#p\"P$|Nb)\"&
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(" />", " />");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueEnding((String) null, "br");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(";V_Rdy$", ";V_Rdy$");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueContaining("5a}!g", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(".\"Z5~<J4_P]", ".\"Z5~<J4_P]");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValue("class", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Tag tag0 = Tag.valueOf(".\"Z5~<J4_P]");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "", attributes0);
      // Undeclared exception!
      try { 
        formElement0.getElementsByAttributeStarting((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(" />", " />");
      // Undeclared exception!
      try { 
        document0.getElementsByAttribute((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Document document0 = Parser.parse("6VhNo", "6VhNo");
      document0.childNodes = null;
      // Undeclared exception!
      try { 
        document0.getElementById("6VhNo");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      Tag tag0 = Tag.valueOf("5`\".E");
      FormElement formElement0 = new FormElement(tag0, "5`\".E", (Attributes) null);
      // Undeclared exception!
      try { 
        formElement0.getElementById("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Document document0 = Document.createShell("Insert position out of bounds.");
      document0.setSiblingIndex((-2));
      document0.setParentNode(document0);
      // Undeclared exception!
      try { 
        document0.getAllElements();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("", "");
      // Undeclared exception!
      try { 
        document0.firstElementSibling();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("/ciCWX/BSx6Z>u", "nF_dvj :PPR}7=");
      CDataNode cDataNode0 = new CDataNode("@(yIL@");
      document0.setParentNode(cDataNode0);
      // Undeclared exception!
      try { 
        document0.firstElementSibling();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Document document0 = Document.createShell("_RJm~<Fc bLu");
      Element element0 = document0.addClass("_RJm~<Fc bLu");
      Tag tag0 = Tag.valueOf("_RJm~<Fc bLu");
      CDataNode cDataNode0 = new CDataNode("textarea");
      Attributes attributes0 = cDataNode0.attributes();
      Element element1 = new Element(tag0, "p", attributes0);
      element0.appendTo(element1);
      // Undeclared exception!
      try { 
        document0.cssSelector();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query '#root.java.lang.String@0000000063': unexpected token at '@0000000063'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("P*Yu]V]e", "P*Yu]V]e");
      DataNode dataNode0 = new DataNode(">*d28d", ">*d28d");
      document0.parentNode = (Node) dataNode0;
      // Undeclared exception!
      try { 
        document0.cssSelector();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Tag tag0 = Tag.valueOf("org.jsoup.nodes.Node");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "c\f<#TsBN]~P[", attributes0);
      // Undeclared exception!
      try { 
        formElement0.classNames((Set<String>) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      Document document0 = new Document("org.jsoup.select.Evaluator$Attribute");
      // Undeclared exception!
      try { 
        document0.child((-77));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("Tag name must not b@ empty.", "Tag name must not b@ empty.");
      Comment comment0 = new Comment("Tag name must not b@ empty.");
      comment0.reparentChild(document0);
      // Undeclared exception!
      try { 
        document0.before((Node) comment0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractList", e);
      }
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(",w=|Q", ",w=|Q");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.before(",w=|Q");
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("org.jsoup.nodes.Attributes$Dataset$EntrySet", "utf");
      // Undeclared exception!
      try { 
        document0.attr((String) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("B.4{2BH@Y:[jYp%|~-", "B.4{2BH@Y:[jYp%|~-");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.attr("br", ".\"Z5~<J4_P]");
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("B.4{2BH@Y:[jYp%|~-", "B.4{2BH@Y:[jYp%|~-");
      DocumentType documentType0 = new DocumentType("B.4{2BH@Y:[jYp%|~-", "B.4{2BH@Y:[jYp%|~-", "<html>\n <head></head>\n <body></body>\n</html>");
      documentType0.reparentChild(document0);
      // Undeclared exception!
      try { 
        document0.appendTo(document0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractList", e);
      }
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Document document0 = new Document("REMOVE");
      document0.reparentChild(document0);
      // Undeclared exception!
      try { 
        document0.appendTo(document0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(".\"Z5~<J4_P]", ".\"Z5~<J4_P]");
      // Undeclared exception!
      try { 
        document0.appendTo((Element) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      Document document0 = Document.createShell("_RJm~<Fc bLu");
      // Undeclared exception!
      try { 
        document0.appendText((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Document document0 = new Document("REMOVE");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.appendElement("r!2F8^S\"^%@SqLI.");
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("br", "br");
      List<Node> list0 = document0.childNodes();
      document0.childNodes = list0;
      // Undeclared exception!
      try { 
        document0.appendElement("br");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Parser parser1 = parser0.settings((ParseSettings) null);
      Document document0 = parser1.parseInput(":coTtain[ext) query must nt be empy", ":coTtain[ext) query must nt be empy");
      // Undeclared exception!
      try { 
        document0.appendElement("Lk g");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.Tag", e);
      }
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Document document0 = new Document("olFItg@[|wU70qv8");
      // Undeclared exception!
      try { 
        document0.appendElement("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Document document0 = Document.createShell("_RJm~<Fc bLu");
      document0.setSiblingIndex(18);
      document0.setParentNode(document0);
      // Undeclared exception!
      try { 
        document0.appendChild(document0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 18, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("L#", "L#");
      // Undeclared exception!
      try { 
        document0.appendChild((Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Document document0 = new Document("REMOVV0");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.append("REMOVV0");
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Document document0 = Parser.parse("vIy@R", "vIy@R");
      // Undeclared exception!
      try { 
        document0.append((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.select.Evaluator$Attribute", "org.jsoup.select.Evaluator$Attribute");
      document0.siblingIndex = 124;
      Element element0 = document0.doClone(document0);
      // Undeclared exception!
      try { 
        element0.after((Node) document0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 125, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(".\"GZ5~<J4_P]", ".\"GZ5~<J4_P]");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.after("9kx.qtu,'$m");
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      Document document0 = new Document("Ha/;>aT m&o*C");
      Element element0 = document0.doClone(document0);
      // Undeclared exception!
      try { 
        element0.after("s*TQ+1pGhM?[]\"S.%");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      Document document0 = new Document("X");
      // Undeclared exception!
      try { 
        document0.addClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Element element0 = null;
      try {
        element0 = new Element((Tag) null, "org.jsoup.select.Evaluator$IsNthLastChild", attributes0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Element element0 = null;
      try {
        element0 = new Element((Tag) null, "org.jsoup.select.Selector$SelectorParseException");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      Element element0 = null;
      try {
        element0 = new Element("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Document document0 = Document.createShell("PFRz2?z~h|");
      MockFileWriter mockFileWriter0 = new MockFileWriter(" :/");
      document0.html(mockFileWriter0);
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("B.4{2BH@Y:[jYp%|~-", "B.4{2BH@Y:[jYp%|~-");
      Element element0 = document0.addClass("textarea");
      element0.addClass("");
      element0.hasClass(".\"gz5~<j4_p]");
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      Document document0 = Parser.parse("j_#;-tAX4$LIW", "j_#;-tAX4$LIW");
      document0.addClass("InSelectInTable");
      document0.addClass(" M/1r_m'86:&");
      document0.hasClass(";v_rdy$");
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("br", "br");
      Element element0 = document0.addClass("br");
      element0.hasClass("ScriptDataEscapedEndTagOpen");
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(".\"Z5~<J4_P]", ".\"Z5~<J4_P]");
      document0.hasClass("n.Lz&0{ )>,");
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(".\"Z5~<J4_P]", ".\"Z5~<J4_P]");
      Tag tag0 = Tag.valueOf(".\"Z5~<J4_P]");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "", attributes0);
      Charset charset0 = document0.charset();
      Set<String> set0 = charset0.aliases();
      formElement0.classNames(set0);
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("PlPd(Eu}^9", "br");
      Element element0 = document0.html("HfLI=s]+4wF^H'm");
      element0.data();
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Document document0 = Document.createShell("");
      document0.hasText();
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(".\"Z5~<J4_P]", ".\"Z5~<J4_P]");
      document0.elementSiblingIndex();
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      Document document0 = Document.createShell("_RJm~<Fc bLu");
      document0.setParentNode(document0);
      document0.elementSiblingIndex();
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(";V_Rdy$", ";V_Rdy$");
      Element element0 = document0.head();
      document0.appendTo(element0);
      document0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("nF_dv :PPR}7=", "nF_dv :PPR}7=");
      Element element0 = document0.body();
      element0.cssSelector();
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      Document document0 = new Document("REMOVV0");
      document0.reparentChild(document0);
      document0.cssSelector();
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Document document0 = Parser.parse("GF=hGB@vC|5Gm03j G)", "GF=hGB@vC|5Gm03j G)");
      Element element0 = document0.body();
      Element element1 = element0.appendElement("GF=hGB@vC|5Gm03j G)");
      element1.before(",Gg/D:&HQ~");
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("_RJm~<Fc bALu", "_RJm~<Fc bALu");
      document0.attributes();
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      Document document0 = Parser.parse("</", "</");
      document0.className();
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.select.Evaluator$Attribute", "org.jsoup.select.Evaluator$Attribute");
      Pattern pattern0 = Pattern.compile("org.jsoup.select.Evaluator$Attribute", 1169);
      document0.getElementsMatchingOwnText(pattern0);
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("B.4{2BH@Y:[jYp%|~-", "B.4{2BH@Y:[jYp%|~-");
      document0.ownText();
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(".\"Z5~<J4_P]", ".\"Z5~<J4_P]");
      // Undeclared exception!
      try { 
        document0.attr((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.ParseSettings", e);
      }
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Document document0 = Parser.parse("jn5G5pnFf?}vJ?q", "jn5G5pnFf?}vJ?q");
      document0.isBlock();
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("\"5~<J4_P]", "\"5~<J4_P]");
      document0.empty();
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("#root", "2d&`[");
      document0.baseUri();
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("B.4{2BH@Y:[jYp%|~-", "B.4{2BH@Y:[jYp%|~-");
      Evaluator.AttributeWithValueNot evaluator_AttributeWithValueNot0 = new Evaluator.AttributeWithValueNot("B.4{2BH@Y:[jYp%|~-", "B.4{2BH@Y:[jYp%|~-");
      document0.is((Evaluator) evaluator_AttributeWithValueNot0);
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(" />", " />");
      Pattern pattern0 = Pattern.compile("j8Z\"b=stPk;dh^tuou", 3);
      document0.getElementsByAttributeValueMatching(" />", pattern0);
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(".\"GZ5~<J4_P]", ".\"GZ5~<J4_P]");
      // Undeclared exception!
      try { 
        document0.select(",Nli{fb=zV?=N");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query 'Nli{fb=zV?=N': unexpected token at 'i{fb=zV?=N'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("PFRz2?z~h|", "org.jsoup.nodes.Node");
      document0.id();
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      Document document0 = Document.createShell("_RJm~<Fc bLu");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document_OutputSettings0.prettyPrint(false);
      Document document1 = document0.outputSettings(document_OutputSettings0);
      document1.html();
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("id", "id");
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "id");
      // Undeclared exception!
      try { 
        document0.html(charBuffer0);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.StringCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("Tag name must not b@ empty.", "Tag name must not b@ empty.");
      document0.title("Tag name must not b@ empty.");
      document0.html();
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      Element element0 = new Element("br");
      element0.appendElement("br");
      element0.outerHtml();
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(".\"GZ5~<J4_P]", ".\"GZ5~<J4_P]");
      StringBuffer stringBuffer0 = new StringBuffer();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.prettyPrint(false);
      document0.outerHtmlHead(stringBuffer0, 8482, document_OutputSettings1);
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(":nth-child(%d)", " ");
      Element element0 = document0.appendElement("textarea");
      element0.val();
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Document document0 = new Document("REMOVV0");
      document0.val();
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      Document document0 = Document.createShell("_RJm~<Fc bLu");
      document0.addClass("_RJm~<Fc bLu");
      document0.addClass("eh");
      document0.toggleClass("eh");
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      Document document0 = Document.createShell("E~y`@=hB9`_}");
      document0.addClass("E~y`@=hB9`_}");
      document0.addClass("E~y`@=hB9`_}");
      document0.hasClass("E~y`@=hB9`_}");
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      Document document0 = Document.createShell("`s");
      document0.childNodes();
      Element element0 = document0.addClass("`s");
      element0.hasAttr("sa<z)a-}");
      Parser.parse("`s", "`s");
      document0.addClass("`s");
      element0.hasClass("java.lang.string@0000000084");
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      Document document0 = Document.createShell("`s");
      Element element0 = document0.addClass("`s");
      document0.addClass("`s");
      element0.hasClass("java.lang.string@0000000084");
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("B.4{2BH@Y:[jYp%|~-", "B.4{2BH@Y:[jYp%|~-");
      document0.addClass("B.4{2BH@Y:[jYp%|~-");
      document0.hasClass("Unexpectedly reached end of file (EOF) in input state [%s]");
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("#&#hfkP23Ma<?y7&^s", "java.lang.string@0000000095");
      document0.data();
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      Document document0 = Parser.parse("`s", "`s");
      Comment comment0 = new Comment((String) null, "`s");
      document0.prependChild(comment0);
      document0.hasText();
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(".\"Z5~<J4_P]", ".\"Z5~<J4_P]");
      Element element0 = document0.html("<html>\n <head></head>\n <body>\n  .\"Z5~&lt;J4_P]\n </body>\n</html>");
      element0.hasText();
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(",w=|Q", ",w=|Q");
      document0.reparentChild(document0);
      document0.text();
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      Comment comment0 = new Comment("defer");
      Element.preserveWhitespace(comment0);
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("br", "br");
      document0.appendElement("br");
      document0.appendElement("br");
      document0.getElementsContainingOwnText("br");
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      Document document0 = new Document("*2Mo'3)gUqnc96");
      document0.normalise();
      document0.title("inheadnoscript");
      document0.getElementsContainingOwnText("Insert position out of bounds.");
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("q{+_r", "q{+_r");
      DataNode dataNode0 = new DataNode("", "q{+_r");
      Element element0 = document0.prependChild(dataNode0);
      element0.getElementsContainingOwnText("q{+_r");
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      Document document0 = Document.createShell(";v_rdy$");
      Parser parser0 = Parser.htmlParser();
      Document document1 = parser0.parseInput(";v_rdy$", "`s");
      document0.prependChild(document1);
      document0.appendText(";v_rdy$");
      document0.text();
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("`s", "`s");
      CDataNode cDataNode0 = new CDataNode("`s");
      document0.appendChild(cDataNode0);
      document0.text();
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("GF=hGB@vC|5Gm03j G)", "GF=hGB@vC|5Gm03j G)");
      Element element0 = document0.body();
      element0.before("Pattern syntax error: ");
      document0.text();
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("`s", "`s");
      document0.appendElement("`s");
      document0.text();
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("br", "br");
      document0.appendElement("br");
      document0.text();
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(",w=|Q", ",w=|Q");
      DataNode dataNode0 = DataNode.createFromEncoded(",w=|Q", (String) null);
      document0.prependChild(dataNode0);
      document0.text();
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      Document document0 = Parser.parse("6VhNo", "6VhNo");
      document0.getElementById("6VhNo");
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(";V_Rdy$", ";V_Rdy$");
      Element element0 = document0.head();
      document0.appendTo(element0);
      document0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("*2Mo'3)gUqnc96", "*2Mo'3)gUqnc96");
      Element element0 = document0.head();
      element0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      Document document0 = new Document("REMOVV0");
      document0.reparentChild(document0);
      document0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("hj8$GWI|1 Ph;3_b", "hj8$GWI|1 Ph;3_b");
      document0.reparentChild(document0);
      document0.previousElementSiblings();
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      Document document0 = Document.createShell("tf");
      document0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      Document document0 = Document.createShell("_RJm~<Fc bLu");
      document0.appendElement("_rjmt<fe");
      document0.setParentNode(document0);
      Element element0 = document0.nextElementSibling();
      element0.elementSiblingIndex();
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(".\"Z5~<J4_P]", ".\"Z5~<J4_P]");
      document0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("`s", "`s");
      Element element0 = document0.appendElement("`s");
      element0.nextElementSiblings();
      assertEquals(2, document0.childNodeSize());
      assertEquals("`s", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("PlPd(Eu}^9", "br");
      document0.appendTo(document0);
      document0.siblingElements();
      assertEquals(1, document0.siblingIndex());
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("GF=hGB@vC|5Gm03j G)", "GF=hGB@vC|5Gm03j G)");
      Element element0 = document0.body();
      element0.before("Pattern syntax error: ");
      String string0 = element0.cssSelector();
      assertEquals("GF=hGB@vC|5Gm03j G)", element0.baseUri());
      assertEquals("html > body:nth-child(4)", string0);
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      Document document0 = Document.createShell("_RJm~<Fc bLu");
      document0.addClass("_RJm~<Fc bLu");
      document0.cssSelector();
      assertEquals(1, document0.childNodeSize());
      assertEquals("_RJm~<Fc bLu", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      Document document0 = new Document("K-M");
      Node[] nodeArray0 = new Node[1];
      // Undeclared exception!
      try { 
        document0.insertChildren((-57), nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      Document document0 = Document.createShell("script");
      Elements elements0 = document0.getElementsByIndexGreaterThan(0);
      // Undeclared exception!
      try { 
        document0.insertChildren(62, (Collection<? extends Node>) elements0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      Document document0 = Document.createShell("");
      Elements elements0 = document0.getElementsByAttributeValueNot("TDOt\"le$_X2O5;", "AttributeValue_unquoted");
      // Undeclared exception!
      try { 
        document0.insertChildren((-12), (Collection<? extends Node>) elements0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(".\"Z5~<J4_P]", "bod");
      Elements elements0 = document0.siblingElements();
      Element element0 = document0.insertChildren(0, (Collection<? extends Node>) elements0);
      assertEquals("bod", element0.baseUri());
      assertEquals(1, element0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("hj8$GWI|1 Ph;3_b", "hj8$GWI|1 Ph;3_b");
      DataNode dataNode0 = new DataNode(":contains(%s)", "class");
      document0.prependChild(dataNode0);
      document0.dataNodes();
      assertEquals(2, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("org.jsoup.select.Evaluator$Attribue", "org.jsoup.select.Evaluator$Attribue");
      List<TextNode> list0 = document0.textNodes();
      assertEquals("org.jsoup.select.Evaluator$Attribue", document0.baseUri());
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.select.Evaluator$Attribute", "org.jsoup.select.Evaluator$Attribute");
      List<TextNode> list0 = document0.textNodes();
      assertTrue(list0.isEmpty());
      assertEquals("org.jsoup.select.Evaluator$Attribute", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("font", "font");
      Elements elements0 = document0.getElementsByIndexGreaterThan(5);
      assertEquals("font", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("br", "br");
      document0.selectFirst("br");
      assertEquals("br", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      Document document0 = Document.createShell("_RJm~<Fc bLu");
      Elements elements0 = document0.getElementsMatchingText("_RJm~<Fc bLu");
      assertEquals(1, document0.childNodeSize());
      assertEquals("_RJm~<Fc bLu", document0.baseUri());
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(".\"Z5~<J4_P]", ".\"Z5~<J4_P]");
      Elements elements0 = document0.getAllElements();
      assertEquals(4, elements0.size());
      assertEquals(".\"Z5~<J4_P]", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      Document document0 = Document.createShell("Fw8>$N7");
      Element element0 = document0.removeClass("<body></body>");
      assertEquals("Fw8>$N7", element0.baseUri());
      assertEquals(1, element0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(",w=|Q", ",w=|Q");
      // Undeclared exception!
      try { 
        document0.before("org.jsoup.helper.ChangeNotifyingArrayList");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      Document document0 = new Document(";v_rdy$");
      document0.getElementsByAttribute("br");
      assertEquals(";v_rdy$", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("nF_dv :PPR}7=", "nF_dv :PPR}7=");
      Element element0 = document0.shallowClone();
      assertEquals(1, document0.childNodeSize());
      assertEquals("nF_dv :PPR}7=", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.select.Evaluator$Attribute", "org.jsoup.select.Evaluator$Attribute");
      // Undeclared exception!
      try { 
        document0.after((Node) document0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("B.4{2BH@Y:[jYp%|~-", "B.4{2BH@Y:[jYp%|~-");
      document0.getElementsByAttributeValueContaining("B.4{2BH@Y:[jYp%|~-", "#root");
      assertEquals("B.4{2BH@Y:[jYp%|~-", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("Tag name must not be empty.", "Tag name must not be empty.");
      Elements elements0 = document0.getElementsContainingText("Tag name must not be empty.");
      assertEquals(3, elements0.size());
      assertEquals("Tag name must not be empty.", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      Document document0 = Document.createShell("");
      document0.getElementsByAttributeValueEnding("<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>");
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      Tag tag0 = Tag.valueOf("e");
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "Zf/IuU)##,4 F", (Attributes) null);
      pseudoTextElement0.is("itemscope");
      assertEquals("Zf/IuU)##,4 F", pseudoTextElement0.baseUri());
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(";V_Rdy$", ";V_Rdy$");
      document0.getElementsByAttributeValueMatching("rT)3", ";V_Rdy$");
      assertEquals(1, document0.childNodeSize());
      assertEquals(";V_Rdy$", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      Document document0 = new Document("REMOVV0");
      document0.val("REMOVV0");
      String string0 = document0.val();
      assertEquals("REMOVV0", document0.baseUri());
      assertEquals("REMOVV0", string0);
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      Document document0 = Document.createShell("even");
      Elements elements0 = document0.getElementsByIndexEquals(1);
      assertEquals("even", document0.baseUri());
      assertEquals(1, elements0.size());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(".\"Z5~<J4_P]", ".\"Z5~<J4_P]");
      document0.getElementsByAttributeStarting(".\"Z5~<J4_P]");
      assertEquals(".\"Z5~<J4_P]", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      Document document0 = Document.createShell(";v_rdy$");
      Elements elements0 = document0.getElementsByIndexLessThan(653);
      assertEquals(1, document0.childNodeSize());
      assertEquals(3, elements0.size());
      assertEquals(";v_rdy$", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.select.Evaluator$Attribute", "org.jsoup.select.Evaluator$Attribute");
      // Undeclared exception!
      try { 
        document0.after("`S");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("PFRz2?z~h|", "org.jsoup.nodes.Node");
      Elements elements0 = document0.getElementsMatchingOwnText("<html>\n <head></head>\n <body>\n  PFRz2?z~h|\n </body>\n</html>");
      assertEquals("org.jsoup.nodes.Node", document0.baseUri());
      assertEquals(0, elements0.size());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("q{+_r", "q{+_r");
      document0.prepend("q{+_r");
      Element element0 = document0.appendElement("q{+_r");
      element0.previousElementSibling();
      assertEquals(3, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(".\"Z5~<J4_P]", ".\"Z5~<J4_P]");
      document0.getElementsByAttributeValueStarting(".\"Z5~<J4_P]", ".\"Z5~<J4_P]");
      assertEquals(".\"Z5~<J4_P]", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(".\"Z5~<J4_P]", ".\"Z5~<J4_P]");
      document0.getElementsByAttributeValue("N'C`f,I^Hwen-`HB=S", "org.jsoup.nodes.Node");
      assertEquals(1, document0.childNodeSize());
      assertEquals(".\"Z5~<J4_P]", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.select.Evaluator$Attribute", "org.jsoup.select.Evaluator$Attribute");
      Element element0 = document0.attr("org.jsoup.select.Evaluator$Attribute", true);
      assertEquals(1, element0.childNodeSize());
      assertEquals("org.jsoup.select.Evaluator$Attribute", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.select.Evaluator$Attribute", "org.jsoup.select.Evaluator$Attribute");
      String string0 = document0.wholeText();
      assertEquals("org.jsoup.select.Evaluator$Attribute", document0.baseUri());
      assertEquals("org.jsoup.select.Evaluator$Attribute", string0);
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("Tag name must not b@ empty.", "Tag name must not b@ empty.");
      Comment comment0 = new Comment("Tag name must not b@ empty.");
      // Undeclared exception!
      try { 
        document0.before((Node) comment0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      Element element0 = new Element("br");
      Node[] nodeArray0 = new Node[9];
      // Undeclared exception!
      try { 
        element0.insertChildren(2622, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      Document document0 = new Document("org.jsoup.select.Evaluator$Attribute");
      document0.dataset();
      assertEquals("org.jsoup.select.Evaluator$Attribute", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      Document document0 = Document.createShell("textarea");
      Element element0 = document0.appendElement("textarea");
      element0.val("i|serted");
      assertEquals(2, document0.childNodeSize());
      assertEquals(1, element0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.sewect.Evaluator$Attribute", "org.jsoup.sewect.Evaluator$Attribute");
      Element element0 = document0.tagName("main");
      assertEquals(1, element0.childNodeSize());
      assertEquals("org.jsoup.sewect.Evaluator$Attribute", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("xno", "</");
      // Undeclared exception!
      try { 
        document0.child(3);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 3, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("hj8$GWI|1 Ph;3_b", "hj8$GWI|1 Ph;3_b");
      document0.previousElementSiblings();
      assertEquals(1, document0.childNodeSize());
      assertEquals("hj8$GWI|1 Ph;3_b", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      Document document0 = Parser.parse("`hs", "`hs");
      document0.prependElement("AttributeName");
      Element element0 = document0.appendElement("`hs");
      Element element1 = element0.previousElementSibling();
      assertEquals(3, document0.childNodeSize());
      assertNotSame(element0, element1);
  }

  @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Tag name must not be empty.", "Tag name must not be empty.");
      Pattern pattern0 = Pattern.compile("java.lang.string@0000000084", 97692013);
      document0.getElementsMatchingText(pattern0);
      assertEquals(1, document0.childNodeSize());
      assertEquals("Tag name must not be empty.", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      Document document0 = Document.createShell("tf");
      Element element0 = document0.appendText("tf");
      element0.getElementsMatchingOwnText("tf");
      assertEquals(2, document0.childNodeSize());
      assertEquals("tf", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      Document document0 = Document.createShell("PXPx@q-/:G8D");
      // Undeclared exception!
      try { 
        document0.wrap("head");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }
}
