/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 13 23:18:45 GMT 2021
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedWriter;
import java.io.CharArrayWriter;
import java.io.IOException;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.Reader;
import java.io.StringReader;
import java.io.StringWriter;
import java.nio.BufferOverflowException;
import java.nio.CharBuffer;
import java.nio.ReadOnlyBufferException;
import java.nio.charset.Charset;
import java.util.Collection;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Set;
import java.util.regex.Pattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.Comment;
import org.jsoup.nodes.DataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.DocumentType;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.nodes.PseudoTextElement;
import org.jsoup.nodes.TextNode;
import org.jsoup.nodes.XmlDeclaration;
import org.jsoup.parser.ParseErrorList;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Parser;
import org.jsoup.parser.Tag;
import org.jsoup.select.Elements;
import org.jsoup.select.Evaluator;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Element_ESTest extends Element_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("--!", "*&9T'hO^");
      document0.addClass("mEgap/");
      document0.hasClass("-p@'9mL(*j<g");
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Document document0 = Document.createShell("b&H5M,<nK<&}'O;'");
      Element element0 = document0.addClass("b&H5M,<nK<&}'O;'");
      element0.addClass("b&H5M,<nK<&}'O;'");
      element0.hasClass("Insert position out of bounds.");
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Document document0 = Document.createShell("h4");
      document0.addClass("h4");
      Element element0 = document0.addClass("java.lang.string@000000001< sik{~gqh=;g");
      element0.hasClass("java.lang.string@0000000045");
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("body", "S");
      Element element0 = document0.appendElement("|");
      element0.after((Node) document0);
      document0.previousElementSiblings();
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Element element0 = new Element("qSK2Wy^S*JF[DM)");
      element0.reparentChild(element0);
      element0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Document document0 = Parser.parse("Pattern syntax error: ", "");
      Elements elements0 = document0.getElementsByIndexLessThan((-1068));
      // Undeclared exception!
      try { 
        document0.insertChildren((-1068), (Collection<? extends Node>) elements0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Document document0 = new Document("f*gcaption");
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(8249);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document0.outerHtmlTail(charArrayWriter0, 637, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Document document0 = Parser.parse("b&H5M,<nK<&}'O;'", "b&H5M,<nK<&}'O;'");
      document0.nodelistChanged();
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Document document0 = Parser.parse("O", "O");
      document0.ensureChildNodes();
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Document document0 = Document.createShell("s+");
      document0.getElementsMatchingText("pM^W@fL");
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      StringReader stringReader0 = new StringReader("9 8IKB_");
      Document document0 = parser0.parseInput((Reader) stringReader0, "9 8IKB_");
      document0.wrap("9 8IKB_");
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Document document0 = Parser.parse("g'f/<o8Tklr{0>J-4Hv", "g'f/<o8Tklr{0>J-4Hv");
      Element element0 = document0.head();
      element0.wrap("g'f/<o8Tklr{0>J-4Hv");
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Document document0 = new Document(":");
      document0.wholeText();
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Document document0 = Parser.parse("bH5M,<nT&&l|'O", "bH5M,<nT&&l|'O");
      document0.setSiblingIndex((-538));
      document0.val("nB5>2woqaY1!}5~*nd");
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Document document0 = Document.createShell("         ");
      Element element0 = document0.body();
      element0.val("");
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Document document0 = Parser.parse("bH5M,<nT&&l|'O", "bH5M,<nT&&l|'O");
      Element element0 = document0.createElement("FMoa5'dH");
      element0.val("nB5>2woqaY1!}5~*nd");
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("Tag name must not be empty.", "Tag name must not be empty.");
      Element element0 = document0.val("g9l<?V;XQ");
      element0.val();
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Document document0 = Document.createShell("java.lang.string@0000000047");
      document0.siblingIndex = (-906021636);
      document0.toggleClass("java.lang.string@0000000047");
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("$~D**", "$~D**");
      document0.appendTo(document0);
      document0.text("QE49Q#iqmR");
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Document document0 = Document.createShell(" > ");
      Element element0 = document0.head();
      element0.text("#root");
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Document document0 = new Document("figcaption");
      document0.text();
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("br", "br");
      Element element0 = document0.body();
      element0.tagName("textarea");
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Document document0 = new Document("b&kH5M,jnK&}';'");
      document0.tagName("`^sJF0Swy;<z>?-");
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("al?RS7zC}#y|/&iC", "al?RS7zC}#y|/&iC");
      document0.tagName();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("embed", parseSettings0);
      Element element0 = new Element(tag0, "org.jsoup.helper.ChangeNotifyingArrayList");
      element0.tag();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Document document0 = Parser.parse("b&H5M,<nK<&}'O;'", "b&H5M,<nK<&}'O;'");
      Element element0 = document0.head();
      element0.tag();
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Document document0 = Document.createShell("fQS:s2");
      Element element0 = document0.body();
      element0.shallowClone();
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Document document0 = Document.createShell("5G*r9");
      document0.selectFirst("ArI-h#y");
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Tag tag0 = Tag.valueOf("nk");
      Element element0 = new Element(tag0, "nk");
      element0.selectFirst("nk");
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.parser.TokenQueue");
      document0.selectFirst("head");
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Document document0 = new Document("|a&:8*bo^KoM^=BQ");
      document0.select("class");
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.parser.tokenqueue");
      Element element0 = document0.body();
      element0.removeClass("aOu,");
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("b&H5M,<nKT&&'O;'", "b&H5M,<nKT&&'O;'");
      document0.appendTo(document0);
      document0.removeClass("b&H5M,<nKT&&'O;'");
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Element element0 = new Element("qSK2Wy^S*JF[DM)");
      element0.removeClass("qSK2Wy^S*JF[DM)");
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("org.jsoup.parser.TokenQueue", "org.jsoup.parser.TokenQueue");
      Element element0 = document0.prepend("s|:J@?;/&%%xq%NPUX");
      element0.appendChild(document0);
      document0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Document document0 = Parser.parse("b&H5M,<nKT&&'O;'", "b&H5M,<nKT&&'O;'");
      Element element0 = document0.body();
      element0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("CO9gT", "CO9gT");
      document0.appendChild(document0);
      document0.prependText("K7^;3IpZ$l>");
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("2$/AS_xH;(", "M=G7zE");
      Element element0 = document0.head();
      element0.prependText("<![CDATA[Seqso6vVUB&]]>");
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("2$/AS_xH;(", "M=G7zE");
      document0.prependText("<![CDATA[Seqso6vVUB&]]>");
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Document document0 = Parser.parse("&H5M,<nK<&}'O;'", "&H5M,<nK<&}'O;'");
      document0.prependChild(document0);
      DataNode dataNode0 = new DataNode("", "");
      document0.prependChild(dataNode0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Document document0 = Parser.parse("^s+", "^s+");
      Element element0 = document0.head();
      element0.prependChild(document0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("b&H5M,<nKT&&'O;'", "b&H5M,<nKT&&'O;'");
      Element element0 = document0.body();
      element0.prepend("|a&:8*bo^KoM^=BQ");
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Document document0 = Parser.parse("b&H5M,<nK<&}'O;'", "b&H5M,<nK<&}'O;'");
      Element element0 = document0.head();
      element0.prepend("");
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Document document0 = Document.createShell("fQS:s2");
      document0.parent();
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("uhC,g!@Y", "uhC,g!@Y");
      Element element0 = document0.doClone(document0);
      element0.parent();
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Document document0 = new Document("figcaption");
      document0.reparentChild(document0);
      document0.parent();
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Document document0 = Document.createShell("");
      Element element0 = document0.body();
      element0.parent();
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Document document0 = new Document("nk");
      document0.append("org.jsoup.nodes.Element$2");
      document0.ownText();
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("b&H5M,<nK<&}'O;'", "b&H5M,<nK<&}'O;'");
      document0.nodeName();
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "b&h5m,<nkt&&'o;'");
      Element element0 = document0.prependChild(document0);
      element0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Document document0 = Document.createShell("eZ<YGe}yIh)");
      Element element0 = document0.createElement("org.jsoup.nodes.Element$1");
      document0.appendTo(document0);
      document0.appendChild(element0);
      document0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.select.Evaluator$AttributeKeyPair");
      Element element0 = document0.head();
      element0.isBlock();
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Document document0 = Parser.parse("b&H5M,<nKT&&'O;'", "b&H5M,<nKT&&'O;'");
      Element element0 = document0.createElement("b&H5M,<nKT&&'O;'");
      document0.appendTo(element0);
      Evaluator.IndexLessThan evaluator_IndexLessThan0 = new Evaluator.IndexLessThan(8226);
      document0.is((Evaluator) evaluator_IndexLessThan0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Document document0 = new Document("|a&:8*bo^KoM^=BQ");
      Evaluator.AttributeWithValue evaluator_AttributeWithValue0 = new Evaluator.AttributeWithValue("|a&:8*bo^KoM^=BQ", ":]<j&:sX'H+q_q4C(O?");
      document0.is((Evaluator) evaluator_AttributeWithValue0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Document document0 = Document.createShell("br");
      Element element0 = document0.appendElement("br");
      element0.is("br");
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("b&H5M,<nKT&&'O;'", "b&H5M,<nKT&&'O;'");
      Element element0 = document0.body();
      Node[] nodeArray0 = new Node[0];
      element0.insertChildren((-1), nodeArray0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Document document0 = new Document(" />");
      Element element0 = document0.createElement("#root");
      Elements elements0 = document0.getElementsByAttributeValueNot("#root", "7<7JcT");
      Element element1 = element0.appendTo(document0);
      document0.insertChildren(1, (Collection<? extends Node>) elements0);
      element1.parent();
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Document document0 = new Document(" > ");
      document0.reparentChild(document0);
      Elements elements0 = document0.getElementsByAttributeValue("xrrGwO", " > ");
      document0.insertChildren(0, (Collection<? extends Node>) elements0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("uhC,g!@Y", "uhC,g!@Y");
      Elements elements0 = document0.getElementsByIndexGreaterThan(0);
      document0.insertChildren(0, (Collection<? extends Node>) elements0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Tag tag0 = Tag.valueOf("html");
      Element element0 = new Element(tag0, "html");
      element0.html("&H5M,<nK<&}'O;'");
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Document document0 = Parser.parse("b&H5M,<nK<&}'O;'", "b&H5M,<nK<&}'O;'");
      Document document1 = Parser.parseBodyFragment("b&H5M,<nK<&}'O;'", "b&H5M,<nK<&}'O;'");
      document1.appendChild(document0);
      document0.html("b&H5M,<nK<&}'O;'");
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Document document0 = new Document("b&kH5M,jnK&}';'");
      document0.html("");
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Document document0 = Parser.parse("&H5M,<nK<&}'O;'", "&H5M,<nK<&}'O;'");
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      document0.html(charArrayWriter0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Document document0 = Parser.parse("b&H5M,<nK<&}'O;'", "b&H5M,<nK<&}'O;'");
      Element element0 = document0.head();
      element0.html();
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("b&H5M,<nKT&&'O;'", "b&H5M,<nKT&&'O;'");
      Document document1 = (Document)document0.addClass("b&H5M,<nKT&&'O;'");
      document1.hasAttributes();
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Document document0 = new Document("\"_?gZSY");
      document0.hasAttributes();
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(":%s(%dn%+d)", "f:");
      Pattern pattern0 = Pattern.compile("whK$");
      document0.getElementsMatchingText(pattern0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Document document0 = Document.createShell("s+");
      Element element0 = document0.text("s+");
      element0.getElementsMatchingText("s+");
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Document document0 = Document.createShell("br");
      document0.getElementsMatchingOwnText("");
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("/");
      Document document0 = Document.createShell("/");
      document0.appendChild(cDataNode0);
      document0.getElementsContainingText("/");
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Document document0 = Document.createShell("html");
      document0.getElementsContainingOwnText("html");
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Document document0 = Parser.parse("?", "?");
      document0.getElementsByTag("org.jsoup.select.Evaluator$AttributeWithValueEnding");
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Document document0 = Parser.parse("b&H5M,<nK<&}'O;'", "b&H5M,<nK<&}'O;'");
      document0.getElementsByTag("#root");
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Document document0 = Document.createShell("b&kH5M,jnK&}';'");
      document0.getElementsByIndexGreaterThan(2147483645);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("template", parseSettings0);
      Element element0 = new Element(tag0, "required", (Attributes) null);
      element0.getElementsByIndexEquals(0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("b&H5M,<nKT&&'O;'", "b&H5M,<nKT&&'O;'");
      Element element0 = document0.addClass("b&H5M,<nKT&&'O;'");
      element0.addClass("b&H5M,<nKT&&'O;'");
      element0.getElementsByClass("b&H5M,<nKT&&'O;'");
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Document document0 = Parser.parse("html", "html");
      document0.getElementsByAttributeValueStarting("html", "html");
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("-RJc", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("-RJc");
      Attributes attributes0 = cDataNode0.attributes();
      Attribute attribute0 = Attribute.createFromEncoded("-RJc", "-RJc");
      Attributes attributes1 = attributes0.put(attribute0);
      FormElement formElement0 = new FormElement(tag0, "-RJc", attributes1);
      Pattern pattern0 = Pattern.compile("-RJc", 989);
      formElement0.getElementsByAttributeValueMatching("-RJc", pattern0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Tag tag0 = Tag.valueOf("body");
      Element element0 = new Element(tag0, "org.jsoup.select.NodeTraversor");
      element0.getElementsByAttributeStarting("body");
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("b&H5M,<nKT&&'O;'", "b&H5M,<nKT&&'O;'");
      Element element0 = document0.addClass("b&H5M,<nKT&&'O;'");
      element0.getElementsByAttribute("class");
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Document document0 = Document.createShell("b&kH5M,<nK&}'O;'");
      document0.appendTo(document0);
      document0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Document document0 = Document.createShell("         ");
      Element element0 = document0.body();
      Element element1 = element0.toggleClass("         ");
      element1.empty();
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("OVeJq?$B=#W$@q#{", "OVeJq?$B=#W$@q#{");
      document0.appendChild(document0);
      document0.empty();
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Document document0 = Parser.parse("b&H5M,<nK<&}'O;'", "b&H5M,<nK<&}'O;'");
      Element element0 = document0.body();
      element0.doClone(document0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Document document0 = new Document("nk");
      document0.doClone((Node) null);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Tag tag0 = Tag.valueOf("body");
      Element element0 = new Element(tag0, "org.jsoup.select.NodeTraversor");
      element0.clone();
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Document document0 = new Document(":");
      Document document1 = document0.normalise();
      document1.clone();
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Document document0 = Parser.parse("&H5M,<nK<&}'O;'", "*o;X<dm|2=QXBP");
      document0.setSiblingIndex((-2123));
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      document0.classNames((Set<String>) linkedHashSet0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(".z1GIzEK\"-\"", "r{D[gF[6ys");
      Element element0 = document0.body();
      Set<String> set0 = element0.classNames();
      element0.classNames(set0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Document document0 = Parser.parse("X", "X");
      CDataNode cDataNode0 = new CDataNode((String) null);
      document0.setParentNode(cDataNode0);
      Charset charset0 = Charset.defaultCharset();
      Set<String> set0 = charset0.aliases();
      document0.classNames(set0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Document document0 = new Document("nk");
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      document0.classNames((Set<String>) linkedHashSet0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Document document0 = Parser.parse("b&kH5M,jnK&}';'", "b&kH5M,jnK&}';'");
      Element element0 = document0.toggleClass("b&kH5M,jnK&}';'");
      element0.classNames();
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Document document0 = Document.createShell("br");
      Element element0 = document0.toggleClass("4>gcap'i'");
      element0.className();
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Document document0 = Document.createShell("eZ<YGe}yIh)");
      document0.children();
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Document document0 = new Document("nk");
      document0.childNodeSize();
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("uhC,g!@Y", "uhC,g!@Y");
      document0.childNodeSize();
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("uC,g!4ww", "uC,g!4ww");
      document0.reparentChild(document0);
      document0.before((Node) document0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Document document0 = Document.createShell("/");
      Element element0 = document0.head();
      element0.before((Node) document0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("&H5M,<nK<&}'O;'", "&H5M,<nK<&}'O;'");
      Document document1 = Parser.parseBodyFragment("&H5M,<nK<&}'O;'", "#root");
      document0.parentNode = (Node) document1;
      document0.before("x=mfLx");
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("3X\"_4]R20JQFP*VT", "3X\"_4]R20JQFP*VT");
      Element element0 = document0.head();
      element0.before("head");
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Tag tag0 = Tag.valueOf("textarea");
      CDataNode cDataNode0 = new CDataNode("textarea");
      Attributes attributes0 = cDataNode0.attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "textarea", attributes0);
      pseudoTextElement0.baseUri();
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Element element0 = new Element("FMoa5'dH");
      element0.baseUri();
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Document document0 = new Document("a69eQNG");
      document0.attributes();
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("java.lang.string@0e00000045", "java.lang.string@0e00000045");
      Element element0 = document0.body();
      element0.attr("", true);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Tag tag0 = Tag.valueOf("9 8IKB_");
      CDataNode cDataNode0 = new CDataNode("Seqso6vVU\u0002&");
      Attributes attributes0 = cDataNode0.attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "Seqso6vVU\u0002&", attributes0);
      pseudoTextElement0.attr("@/9n", false);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("b&H5M,<nKT&&'O;'", "b&H5M,<nKT&&'O;'");
      Element element0 = document0.body();
      element0.attr("hy)bPvu}-Gn$>d)g}", "org.jsoup.nodes.Element$1");
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("b&H5M,<nKT&&'O;'", "b&H5M,<nKT&&'O;'");
      Element element0 = document0.head();
      element0.attr("b&H5M,<nKT&&'O;'", "");
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(".z1GIzEK\"-\"", "r{D[gF[6ys");
      document0.attr("uC,g!4ww", "o8tklr{0");
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Document document0 = new Document("title");
      Element element0 = document0.createElement("title");
      element0.appendTo(document0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Tag tag0 = Tag.valueOf("html");
      Element element0 = new Element(tag0, "html");
      element0.appendText("r_9>\"%$Cp9O");
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("OVeJq?$B=#W$@q#{", "OVeJq?$B=#W$@q#{");
      document0.appendChild(document0);
      document0.appendText(" > ");
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Document document0 = new Document("\"_?gZSY");
      document0.appendElement("Ym;i,t1@~213urGppl5");
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Document document0 = Document.createShell("Rm>m/");
      document0.appendElement("body");
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Document document0 = new Document("html");
      Element element0 = document0.createElement("html");
      element0.appendChild(document0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("b&H5M,<nKT&&'O;'", "b&H5M,<nKT&&'O;'");
      Element element0 = document0.body();
      element0.append("/FMa95'dH");
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Document document0 = new Document("");
      document0.append("");
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Document document0 = Parser.parse("BeforeDoctypePublicIdentifier", "BeforeDoctypePublicIdentifier");
      Element element0 = document0.prependChild(document0);
      document0.after((Node) element0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("k1u<4phhVraU=i;5.gx", "k1u<4phhVraU=i;5.gx");
      Element element0 = document0.head();
      element0.after((Node) document0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("b&H5M,<nKT&&'O;'", "b&H5M,<nKT&&'O;'");
      Element element0 = document0.body();
      element0.after("");
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("k1u<4phhVraU=i;5.gx", "k1u<4phhVraU=i;5.gx");
      Element element0 = document0.head();
      element0.after("k1u<4phhVraU=i;5.gx");
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("b&H5M,<nK<&}'O;'", "b&H5M,<nK<&}'O;'");
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("b&H5M,<nK<&}'O;'", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, " />", (Attributes) null);
      Element element0 = document0.appendTo(formElement0);
      element0.after("%uqz6S[vQxn9-;a");
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("b&H5M,<nKT&&'O;'", "b&H5M,<nKT&&'O;'");
      Element element0 = document0.body();
      element0.addClass("b&H5M,<nKT&&'O;'");
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("uC,g!4ww", "uC,g!4ww");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.wrap("$~DR*o");
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("b&H5M,<nKT&&'O;'", "b&H5M,<nKT&&'O;'");
      // Undeclared exception!
      try { 
        document0.wrap("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("java.lang.string@00uF00001<", "java.lang.string@00uF00001<");
      List<Node> list0 = document0.childNodesCopy();
      document0.childNodes = list0;
      // Undeclared exception!
      try { 
        document0.wholeText();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.NodeTraversor", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Document document0 = new Document("nk");
      document0.appendChild(document0);
      // Undeclared exception!
      document0.val("$mdnb)?_?i0f,wc");
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Parser parser1 = parser0.settings((ParseSettings) null);
      StringReader stringReader0 = new StringReader("$mdnb)?_?i0f,wc");
      Document document0 = parser1.parseInput((Reader) stringReader0, "Fst-m7gn[_s/nf9#t");
      // Undeclared exception!
      try { 
        document0.val("class");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("b&H5M,<nKT&&'O;'", "b&H5M,<nKT&&'O;'");
      // Undeclared exception!
      try { 
        document0.toggleClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("#", "");
      // Undeclared exception!
      try { 
        document0.text("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Document document0 = Document.createShell("b&kH5M,jnK&}';'");
      // Undeclared exception!
      try { 
        document0.text((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("&H5M,<nK<&}'O;'", "&H5M,<nK<&}'O;'");
      DataNode dataNode0 = new DataNode("&H5M,<nK<&}'O;'", "&H5M,<nK<&}'O;'");
      document0.setParentNode(dataNode0);
      // Undeclared exception!
      try { 
        document0.text();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("5?)NR>0a", "5?)NR>0a");
      document0.setSiblingIndex((-3271));
      document0.reparentChild(document0);
      // Undeclared exception!
      try { 
        document0.text();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Document document0 = Parser.parse("b&H5M,<nKT&&'O;'", "b&H5M,<nKT&&'O;'");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.tagName("character is not a valid unicode code point");
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      // Undeclared exception!
      try { 
        document0.tagName("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Tag name must not be empty.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Document document0 = new Document("nk");
      Element element0 = document0.doClone(document0);
      // Undeclared exception!
      try { 
        element0.siblingElements();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag0 = Tag.valueOf("H#6!;Bsw^EzY?(?h<h", parseSettings0);
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "H#6!;Bsw^EzY?(?h<h", (Attributes) null);
      // Undeclared exception!
      try { 
        pseudoTextElement0.selectFirst(",Z/6}7$QO>n@ss");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query 'Z/6}7$QO': unexpected token at '/6}7$QO'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Document document0 = new Document("nk");
      // Undeclared exception!
      try { 
        document0.selectFirst("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Document document0 = Parser.parse("uGC,g!4ww", "wM%CV%7");
      // Undeclared exception!
      try { 
        document0.select("pmb1f0g=b\"qxm#");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query 'pmb1f0g=b\"qxm#': unexpected token at '=b\"qxm#'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Document document0 = Parser.parse("uGC,g!4ww", "uGC,g!4ww");
      // Undeclared exception!
      try { 
        document0.select("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Document document0 = new Document("MI]9'");
      // Undeclared exception!
      try { 
        document0.removeClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Document document0 = new Document("java.lang.string@0000000013");
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration("_3", "_3", false);
      document0.setParentNode(xmlDeclaration0);
      // Undeclared exception!
      try { 
        document0.previousElementSiblings();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("\"^/OAp", "\"^/OAp");
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration("[+a66)~iZ`f9UqfRT", "[+a66)~iZ`f9UqfRT", true);
      document0.parentNode = (Node) xmlDeclaration0;
      // Undeclared exception!
      try { 
        document0.previousElementSibling();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("uC,g!4ww", "uC,g!4ww");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.prependElement("uC,g!4ww");
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("U?@~Xcy52<$", "U?@~Xcy52<$");
      List<Node> list0 = Parser.parseXmlFragment("Pattern syntax error: ", ">oS");
      document0.childNodes = list0;
      // Undeclared exception!
      try { 
        document0.prependElement("U?@~Xcy52<$");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableList", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Document document0 = Parser.parse("java.lang.string@0000000071", "java.lang.string@0000000071");
      // Undeclared exception!
      try { 
        document0.prependElement("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("R_[|E=<RDAYBFq", "R_[|E=<RDAYBFq");
      // Undeclared exception!
      try { 
        document0.prependChild((Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Document document0 = Parser.parse("b&H5M,<nKT&&'O;'", "b&H5M,<nKT&&'O;'");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.prepend("org.jsoup.select.Evaluator$Tag");
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("ArI-h#y", "SMJ^u,\"*9[A");
      DataNode dataNode0 = DataNode.createFromEncoded("SMJ^u,\"*9[A", "title");
      Element element0 = document0.doClone(dataNode0);
      // Undeclared exception!
      try { 
        element0.prepend("ArI-h#y");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("ArI-h#y", "SMJ^u,\"*9[A");
      DataNode dataNode0 = DataNode.createFromEncoded("SMJ^u,\"*9[A", "title");
      Element element0 = document0.doClone(dataNode0);
      // Undeclared exception!
      try { 
        element0.parents();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Element element0 = new Element("{+DyX[k8,}");
      TextNode textNode0 = TextNode.createFromEncoded("4_JxoJ1)");
      Element element1 = element0.doClone(textNode0);
      // Undeclared exception!
      try { 
        element1.parent();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.arser.TokeQueue");
      StringBuilder stringBuilder0 = new StringBuilder();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.indentAmount(385);
      // Undeclared exception!
      document0.outerHtmlTail(stringBuilder0, 385, document_OutputSettings1);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Document document0 = Document.createShell("*.69[~DAD]T[2yj!e:");
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "^U(YLT@h");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlTail(charBuffer0, 4054, document_OutputSettings0);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.StringCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Document document0 = Parser.parse("bH5M,<nT&&l|'O", "bH5M,<nT&&l|'O");
      CharBuffer charBuffer0 = CharBuffer.allocate(58);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlTail(charBuffer0, 58, document_OutputSettings0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("xmlns", "xmlns");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlTail((Appendable) null, 32, document_OutputSettings0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(" > ", " > ");
      StringWriter stringWriter0 = new StringWriter(1);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlTail(stringWriter0, (-2593), document_OutputSettings0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // width must be > 0
         //
         verifyException("org.jsoup.internal.StringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Document document0 = new Document("title");
      CharBuffer charBuffer0 = CharBuffer.allocate(1580);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.indentAmount(558);
      // Undeclared exception!
      document0.outerHtmlHead(charBuffer0, 2104, document_OutputSettings1);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("&H5M,<nK<&}'O;'", "&H5M,<nK<&}'O;'");
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "&H5M,<nK<&}'O;'");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlHead(charBuffer0, 210, document_OutputSettings0);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.StringCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("figcaption", "figcaption");
      CharBuffer charBuffer0 = CharBuffer.allocate(23);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlHead(charBuffer0, 920, document_OutputSettings0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("g':Md^h", parseSettings0);
      Element element0 = new Element(tag0, "sSG_o;ka1t");
      MockFileWriter mockFileWriter0 = new MockFileWriter("sSG_o;ka1t");
      // Undeclared exception!
      try { 
        element0.outerHtmlHead(mockFileWriter0, 838, (Document.OutputSettings) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("fI [O+9kp)F-r", "fI [O+9kp)F-r");
      PipedReader pipedReader0 = new PipedReader(3609);
      PipedWriter pipedWriter0 = new PipedWriter(pipedReader0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedWriter0);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlHead(mockPrintWriter0, (-425), document_OutputSettings0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // width must be > 0
         //
         verifyException("org.jsoup.internal.StringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("f>gcain", "f>gcain");
      PipedWriter pipedWriter0 = new PipedWriter();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      try { 
        document0.outerHtmlHead(pipedWriter0, (-815), document_OutputSettings0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("b&H5M,<nK<&}'O;'", "b&H5M,<nK<&}'O;'");
      DataNode dataNode0 = new DataNode("java.lang.string@0000000085");
      Element element0 = document0.doClone(dataNode0);
      // Undeclared exception!
      try { 
        element0.nextElementSiblings();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Document document0 = Parser.parse(" />", " />");
      // Undeclared exception!
      try { 
        document0.lastElementSibling();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Element element0 = new Element("qSK2Wy^S*JF[DM)");
      element0.reparentChild(element0);
      Evaluator.Tag evaluator_Tag0 = new Evaluator.Tag("qSK2Wy^S*JF[DM)");
      // Undeclared exception!
      element0.is((Evaluator) evaluator_Tag0);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Document document0 = new Document("java.lang.string@000000001<");
      Evaluator.IsRoot evaluator_IsRoot0 = new Evaluator.IsRoot();
      // Undeclared exception!
      try { 
        document0.is((Evaluator) evaluator_IsRoot0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Document document0 = new Document("nk");
      // Undeclared exception!
      try { 
        document0.is("");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query '': unexpected token at ''
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Document document0 = new Document("uGC,g!4ww");
      Document document1 = document0.normalise();
      document1.parentNode = (Node) document0;
      // Undeclared exception!
      document0.is("#document");
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Document document0 = Parser.parse("O", "O");
      TextNode textNode0 = new TextNode("O");
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = (Node) document0;
      nodeArray0[1] = (Node) document0;
      nodeArray0[2] = (Node) textNode0;
      nodeArray0[3] = (Node) document0;
      nodeArray0[4] = (Node) textNode0;
      nodeArray0[5] = (Node) textNode0;
      // Undeclared exception!
      try { 
        document0.insertChildren(0, nodeArray0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Document document0 = Parser.parse("SMJ^u,\"*9[A", "SMJ^u,\"*9[A");
      Element element0 = document0.appendTo(document0);
      // Undeclared exception!
      element0.html("~");
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Document document0 = Document.createShell("I2}v,#Q0oo'%6x`h'k ");
      TextNode textNode0 = new TextNode("org.jsoup.nodes.Entities");
      document0.parentNode = (Node) textNode0;
      // Undeclared exception!
      try { 
        document0.html("I2}v,#Q0oo'%6x`h'k ");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Document document0 = Document.createShell("scl");
      PipedWriter pipedWriter0 = new PipedWriter();
      // Undeclared exception!
      try { 
        document0.html(pipedWriter0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Pipe not connected
         //
         verifyException("org.jsoup.nodes.Node$OuterHtmlVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(" > ", " > ");
      document0.reparentChild(document0);
      MockFile mockFile0 = new MockFile(" > ", " > ");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      // Undeclared exception!
      document0.html(mockPrintStream0);
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Document document0 = Parser.parse("&H5M,<nK<&}'O;'", "&H5M,<nK<&}'O;'");
      CharBuffer charBuffer0 = CharBuffer.allocate(42);
      // Undeclared exception!
      try { 
        document0.html(charBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("b&H5M,<nKT&&'O;'", "b&H5M,<nKT&&'O;'");
      // Undeclared exception!
      try { 
        document0.html((BufferedWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("b&H5M,<nKT&&'O;'", "b&H5M,<nKT&&'O;'");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.html();
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Document document0 = Document.createShell("0$h\u0000A'H$71mHbT W");
      Element element0 = document0.appendElement("mh,pEa1+HslC|%");
      element0.siblingIndex = (-4477);
      // Undeclared exception!
      try { 
        document0.html();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(".SrjEl-;>", "b(R'Ps@-Q=KJENEfI");
      // Undeclared exception!
      try { 
        document0.hasClass((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Document document0 = new Document("nk");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText((Pattern) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$Matches", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Document document0 = new Document("~H`5H )");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Tag tag0 = Tag.valueOf("\"Dng%T#uekGfyl-");
      CDataNode cDataNode0 = new CDataNode("\"Dng%T#uekGfyl-");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "_6GCA7K<Ez", attributes0);
      // Undeclared exception!
      try { 
        formElement0.getElementsMatchingOwnText((Pattern) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$MatchesOwn", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Document document0 = Document.createShell("         ");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingOwnText((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Document document0 = Document.createShell("s+");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingOwnText("$mdnb)?_?i0f,wc");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pattern syntax error: $mdnb)?_?i0f,wc
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Document document0 = Parser.parse("&H5M,<nK<&}'O;'", "&H5M,<nK<&}'O;'");
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration("&H5M,<nK<&}'O;'", "&H5M,<nK<&}'O;'", false);
      document0.setParentNode(xmlDeclaration0);
      // Undeclared exception!
      try { 
        document0.getElementsMatchingOwnText(":contains");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("f>gcain", "f>gcain");
      List<Node> list0 = document0.childNodesCopy();
      document0.childNodes = list0;
      // Undeclared exception!
      try { 
        document0.getElementsContainingText("f>gcain");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.NodeTraversor", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("b&H5M,<nK<&}'O;'", "b&H5M,<nK<&}'O;'");
      CDataNode cDataNode0 = new CDataNode("b&H5M,<nK<&}'O;'");
      Element element0 = document0.appendChild(cDataNode0);
      element0.parentNode = (Node) cDataNode0;
      // Undeclared exception!
      try { 
        element0.getElementsContainingText("b&H5M,<nK<&}'O;'");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("java.lang.string@0000000047 eu#di#6cu#kg\"h,)q0", "org.jsoup.nodes.Element");
      Element element0 = document0.body();
      element0.setSiblingIndex((-4355));
      // Undeclared exception!
      try { 
        element0.getElementsContainingText("HL(Z;q|)~");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Document document0 = Parser.parse("$@Q^?l`$VC)jfWK\"", "$@Q^?l`$VC)jfWK\"");
      Element element0 = document0.val("$@Q^?l`$VC)jfWK\"");
      element0.childNodes = null;
      // Undeclared exception!
      try { 
        document0.getElementsByTag("$mdnb)?_?i0f,wc");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Tag tag0 = Tag.valueOf(" />");
      Element element0 = new Element(tag0, " />");
      // Undeclared exception!
      try { 
        element0.getElementsByTag("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Document document0 = Parser.parse("bH5M,nT&&l|'O", "bH5M,nT&&l|'O");
      DataNode dataNode0 = DataNode.createFromEncoded("bH5M,nT&&l|'O", "bH5M,nT&&l|'O");
      document0.setParentNode(dataNode0);
      // Undeclared exception!
      try { 
        document0.getElementsByIndexGreaterThan(8222);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Document document0 = Parser.parse("java.lang.string@000000001<", "java.lang.string@000000001<");
      document0.childNodes = null;
      // Undeclared exception!
      try { 
        document0.getElementsByIndexEquals(2147483640);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Document document0 = Document.createShell("bH5M,n9Xk&&l|'O");
      DocumentType documentType0 = new DocumentType("bH5M,n9Xk&&l|'O", "|q+7{PA/]ctHi", "bH5M,n9Xk&&l|'O", "java.lang.string@0000000053", (String) null);
      document0.setParentNode(documentType0);
      // Undeclared exception!
      try { 
        document0.getElementsByIndexEquals(5);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Document document0 = new Document("scl");
      // Undeclared exception!
      try { 
        document0.getElementsByClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("java.lang.string@00U000001<", "java.lang.string@00U000001<");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueStarting("org.jsoup.select.Evaluator$Id", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag0 = Tag.valueOf("!_d=", parseSettings0);
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("!_d=", "!_d=");
      Element element0 = new Element(tag0, "!_d=", attributes1);
      // Undeclared exception!
      try { 
        element0.getElementsByAttributeValueMatching("!_d=", (Pattern) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$AttributeWithValueMatching", e);
      }
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Document document0 = Parser.parse("O", "O");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueMatching("c&'eh<", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Document document0 = new Document("LXj@p$'<pcUp'&rNdK");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueMatching("cKft;^&Cdwd77*n/%*x", "?zto]z?R");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pattern syntax error: ?zto]z?R
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Document document0 = new Document("a69eQNG");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueEnding("", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Document document0 = new Document(":");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueContaining(":", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Document document0 = new Document("nk");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValue("", " />");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Document document0 = new Document("");
      // Undeclared exception!
      try { 
        document0.getElementsByAttribute("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("2", "b3~Bi=~Cnm7Y=siG{9O");
      // Undeclared exception!
      try { 
        document0.getElementById((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("H#X3?$YKkQrgX4", "body");
      // Undeclared exception!
      try { 
        document0.firstElementSibling();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("$~DR*o", "$~DR*o");
      CDataNode cDataNode0 = new CDataNode("=:Jcr]?f^@uz41^5vd");
      document0.parentNode = (Node) cDataNode0;
      // Undeclared exception!
      try { 
        document0.firstElementSibling();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("         ", "b&H5M,<nKT&&'O;'");
      CDataNode cDataNode0 = new CDataNode("org.jsoup.select.Evaluator$AttributeWithValueStarting");
      Element element0 = document0.appendChild(cDataNode0);
      ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
      List<Node> list0 = Parser.parseFragment("RNZYpcO,|S5ZZT", (Element) document0, "RNZYpcO,|S5ZZT", parseErrorList0);
      element0.childNodes = list0;
      // Undeclared exception!
      try { 
        element0.empty();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      Document document0 = new Document("nk");
      // Undeclared exception!
      try { 
        document0.classNames((Set<String>) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("9 8IKB_", "pmb1f0g=b\"qxm#");
      // Undeclared exception!
      try { 
        document0.child(3805);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 3805, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("ArI-h#y", "SMJ^u,\"*9[A");
      // Undeclared exception!
      try { 
        document0.child((-2228));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Document document0 = Parser.parse("X", "X");
      CDataNode cDataNode0 = new CDataNode((String) null);
      document0.setParentNode(cDataNode0);
      // Undeclared exception!
      try { 
        document0.before((Node) document0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractList", e);
      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(":%s(%dn%+d)", "f:");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.before("f:");
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Document document0 = Document.createShell("b&H5M,<nK<&}'O;'");
      // Undeclared exception!
      try { 
        document0.attr((String) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("OVeJq?$B=#W$@q#{", "OVeJq?$B=#W$@q#{");
      document0.appendChild(document0);
      // Undeclared exception!
      document0.attr("", "br");
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("scl", "scl");
      // Undeclared exception!
      try { 
        document0.attr((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.ParseSettings", e);
      }
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Document document0 = Document.createShell("|a&:8*bo^KoM^=BQ");
      Element element0 = document0.createElement("k/!cc");
      Parser parser0 = Parser.htmlParser();
      List<Node> list0 = parser0.parseFragmentInput("[a0Y-cbm", element0, "[a0Y-cbm");
      element0.childNodes = list0;
      // Undeclared exception!
      try { 
        document0.appendTo(element0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      Document document0 = Document.createShell("bH5M,n9Xk&&l|'O");
      Element element0 = document0.createElement("#5E\"OQo% aJ");
      Element element1 = document0.doClone(element0);
      // Undeclared exception!
      try { 
        element1.appendTo(document0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Document document0 = new Document("nk");
      // Undeclared exception!
      try { 
        document0.appendTo((Element) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Document document0 = new Document("uGC,g!4ww");
      // Undeclared exception!
      try { 
        document0.appendText((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Document document0 = Parser.parse("b&H5M,<nK<&}'O;'", "b&H5M,<nK<&}'O;'");
      document0.appendTo(document0);
      // Undeclared exception!
      document0.appendElement("fMv+9_");
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Document document0 = new Document("uGC,g!4ww");
      // Undeclared exception!
      try { 
        document0.appendElement("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("^U(YLq@h", "org.jsoup.select.StructuralEvaluator$Has");
      CDataNode cDataNode0 = new CDataNode("org.jsoup.select.StructuralEvaluator$Has");
      Node node0 = cDataNode0.doClone(cDataNode0);
      // Undeclared exception!
      try { 
        document0.appendChild(node0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractList", e);
      }
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      Document document0 = new Document("nk");
      CDataNode cDataNode0 = new CDataNode((String) null);
      Node node0 = cDataNode0.doClone(document0);
      // Undeclared exception!
      try { 
        document0.appendChild(node0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Document document0 = Parser.parse("|a&:8*bo^KoM^=BQ", "|a&:8*bo^KoM^=BQ");
      // Undeclared exception!
      try { 
        document0.appendChild((Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Document document0 = Parser.parse(" > ", " > ");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.append(" > ");
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      Document document0 = Document.createShell("html");
      List<Node> list0 = Parser.parseFragment("html", (Element) null, "html");
      document0.childNodes = list0;
      // Undeclared exception!
      try { 
        document0.append(" ");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Document document0 = Parser.parse("b&H5M,<nKT&&'O;'", "b&H5M,<nKT&&'O;'");
      // Undeclared exception!
      try { 
        document0.append((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Document document0 = new Document("nk");
      document0.appendTo(document0);
      // Undeclared exception!
      try { 
        document0.after((Node) document0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      StringReader stringReader0 = new StringReader("ArI-h#y");
      Document document0 = parser0.parseInput((Reader) stringReader0, "org.jsoup.nodes.Element$2");
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) document0;
      document0.insertChildren(0, nodeArray0);
      // Undeclared exception!
      document0.after("ArI-h#y");
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Document document0 = new Document("uGC,g!4ww");
      // Undeclared exception!
      try { 
        document0.addClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Element element0 = null;
      try {
        element0 = new Element((Tag) null, "_Qt'", attributes0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("dt$Hx^N;Y", parseSettings0);
      Element element0 = null;
      try {
        element0 = new Element(tag0, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Element element0 = null;
      try {
        element0 = new Element("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      Element element0 = new Element("mz1uh{]/v,");
      element0.html((PipedWriter) null);
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("$0{**", "$0{**");
      document0.hasClass("!oR];s8Oi./ChAr6#k");
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      StringReader stringReader0 = new StringReader("uGC,g!4ww");
      Document document0 = parser0.parseInput((Reader) stringReader0, "");
      document0.data();
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      StringReader stringReader0 = new StringReader("9 8IKB_");
      Document document0 = parser0.parseInput((Reader) stringReader0, "9 8IKB_");
      document0.hasText();
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      Tag tag0 = Tag.valueOf("9 8IKB_");
      CDataNode cDataNode0 = new CDataNode("Seqso6vVUB&");
      Attributes attributes0 = cDataNode0.attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "Seqso6vVUB&", attributes0);
      pseudoTextElement0.elementSiblingIndex();
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("body", "S");
      Element element0 = document0.appendElement("|");
      element0.elementSiblingIndex();
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.parser.TokenQueue", "org.jsoup.parser.TokenQueue");
      document0.prependChild(document0);
      document0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      Document document0 = Parser.parse("b&H5M,<nKT&&'O;'", "b&H5M,<nKT&&'O;'");
      Element element0 = document0.createElement("b&H5M,<nKT&&'O;'");
      document0.appendTo(element0);
      document0.parents();
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Tag tag0 = Tag.valueOf("9 8IKB_");
      CDataNode cDataNode0 = new CDataNode("Seqso6vVUB&");
      Attributes attributes0 = cDataNode0.attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "Seqso6vVUB&", attributes0);
      pseudoTextElement0.attributes();
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Document document0 = new Document("nk");
      document0.children();
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Document document0 = Document.createShell("br");
      document0.className();
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Document document0 = new Document("title");
      document0.ownText();
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("         ", "b&H5M,<nKT&&'O;'");
      document0.empty();
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("H#X3?$YKkQrgX4", "body");
      Comment comment0 = new Comment("body");
      document0.prependChild(comment0);
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      Document document0 = Document.createShell("scl");
      Evaluator.Class evaluator_Class0 = new Evaluator.Class((String) null);
      // Undeclared exception!
      try { 
        document0.is((Evaluator) evaluator_Class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Document document0 = new Document("~H`5H )");
      Pattern pattern0 = Pattern.compile("d", 11);
      document0.getElementsByAttributeValueMatching("~H`5H )", pattern0);
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("5?)NR>0a", "5?)NR>0a");
      document0.text();
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      Document document0 = Document.createShell("V~LAG");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document_OutputSettings0.prettyPrint(false);
      Document document1 = document0.outputSettings(document_OutputSettings0);
      document1.html();
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Document document0 = Document.createShell("br");
      document0.title("");
      document0.html();
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document_OutputSettings0.prettyPrint(false);
      PipedWriter pipedWriter0 = new PipedWriter();
      try { 
        document0.outerHtmlTail(pipedWriter0, (-2314), document_OutputSettings0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      Document document0 = Document.createShell("br");
      document0.appendElement("br");
      document0.html();
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.soup.parser.TokenQueue", "Ftu-@<x#ZX]ZwuuK");
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "Ftu-@<x#ZX]ZwuuK");
      // Undeclared exception!
      try { 
        document0.html(charBuffer0);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.StringCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Document document0 = Document.createShell("|a&:8*bo^KoM^=BQ");
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "ToX");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.prettyPrint(false);
      document0.outerHtmlHead(stringBuilder0, 4, document_OutputSettings1);
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      Document document0 = new Document("");
      Element element0 = document0.createElement("textarea");
      element0.val("o3];kcgfBjwA7OU>/)");
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("textarea", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("org.jsoup.nodes.Element$NodeList");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "2G*b9", attributes0);
      formElement0.val();
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      Document document0 = new Document("Ftu-@<x#ZX]ZwuuK");
      Element element0 = document0.addClass("Ftu-@<x#ZX]ZwuuK");
      element0.addClass("Ftu-@<x#ZX]ZwuuK");
      element0.toggleClass("Ftu-@<x#ZX]ZwuuK");
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("b&H5M,<nKT&&'O;'", "b&H5M,<nKT&&'O;'");
      document0.addClass("");
      document0.addClass("");
      document0.hasClass("b&H5M,<nKT&&'O;'");
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      Document document0 = Document.createShell("b&H5M,<nK<&}'O;'");
      Element element0 = document0.addClass("b&H5M,<nK<&}'O;'");
      element0.addClass("java.lang.string@0000000047");
      document0.hasClass("java.lang.string@0000000047");
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("$~DR*o", "$~DR*o");
      document0.addClass("");
      document0.addClass("%{o:o");
      document0.hasClass("%{o:o");
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      Document document0 = new Document("b&H5M,<nKT&&'O;'");
      Element element0 = document0.addClass("b&H5M,<nKT&&'O;'");
      element0.hasClass("attributeSingleValueCharsSorted");
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("java.lang.string@00U000001<", "java.lang.string@00U000001<");
      CDataNode cDataNode0 = new CDataNode("TLIS,YXrTh65!Y0L@r");
      document0.appendChild(cDataNode0);
      document0.data();
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("<!", "<!");
      document0.data();
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("<!", "<!");
      document0.hasText();
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("$~DR*o", "$~DR*o");
      document0.hasText();
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      Document document0 = Document.createShell("         ");
      CDataNode cDataNode0 = new CDataNode("         ");
      document0.appendChild(cDataNode0);
      document0.hasText();
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      Element.preserveWhitespace((Node) null);
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Document document0 = Document.createShell("br");
      document0.appendElement("br");
      document0.getElementsMatchingOwnText("4>gcap'i'");
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "java.lang.string@0000000045 s~8@va");
      Comment comment0 = new Comment("VlB3&nNH-\u0010p,", "java.lang.string@0000000045 s~8@va");
      document0.appendChild(comment0);
      Pattern pattern0 = Pattern.compile("java.lang.string@0000000045 s~8@va");
      document0.getElementsMatchingOwnText(pattern0);
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("InFrameset");
      Document document0 = Parser.parse("InFrameset", "$~DR*");
      Element element0 = document0.appendChild(cDataNode0);
      element0.text(" > ");
      element0.getElementsContainingText("Tag name must not be empty.");
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      Document document0 = Parser.parse("b&H5M,<nK<&}'O;'", "b&H5M,<nK<&}'O;'");
      document0.getElementsContainingText("ArI-h#y");
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      Document document0 = Document.createShell("br");
      document0.title("br");
      document0.appendElement("br");
      document0.getElementsContainingText("R\"ErwUau1`$<;");
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      StringReader stringReader0 = new StringReader("9 8IKB_");
      Document document0 = parser0.parseInput((Reader) stringReader0, "9 8IKB_");
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration("-_+[U!I* hn", true);
      document0.appendChild(xmlDeclaration0);
      document0.getElementsContainingText("P;z-3/K*0)(rQ/m|^Ys");
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      Document document0 = new Document("nk");
      document0.appendTo(document0);
      document0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("bu.agRVi]", "bu.agRVi]");
      Element element0 = document0.prependElement("java.lang.string@0000000045");
      element0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      Document document0 = new Document("nk");
      Element element0 = document0.appendTo(document0);
      element0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      Document document0 = Document.createShell("h4");
      document0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("b&H5M,<nKT&&'O;'", "b&H5M,<nKT&&'O;'");
      document0.reparentChild(document0);
      document0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      Document document0 = Document.createShell("b&kH5M,jnK&}';'");
      Document document1 = (Document)document0.appendTo(document0);
      Document document2 = (Document)document1.doClone(document0);
      document2.nextElementSiblings();
      assertEquals(2, document0.childNodeSize());
      assertNotSame(document0, document2);
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      Document document0 = new Document("nk");
      document0.nextElementSibling();
      assertEquals("nk", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      Document document0 = Document.createShell("b&kH5M,<nK&}'O;'");
      document0.appendTo(document0);
      document0.siblingElements();
      assertEquals(2, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("b&H5M,<nKT&&'O;'", "b&H5M,<nKT&&'O;'");
      document0.siblingElements();
      assertEquals(1, document0.childNodeSize());
      assertEquals("b&H5M,<nKT&&'O;'", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      Document document0 = Document.createShell("java.lang.string@00U000001<");
      TextNode textNode0 = new TextNode("java.lang.string@00U000001<");
      document0.parentNode = (Node) textNode0;
      // Undeclared exception!
      try { 
        document0.siblingElements();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("b&H5M,<nKT&&'O;'", "b&H5M,<nKT&&'O;'");
      Element element0 = document0.body();
      assertEquals(1, element0.siblingIndex());
      
      element0.before("vSgt%ZFad>E/R");
      String string0 = element0.cssSelector();
      assertEquals("html > body:nth-child(4)", string0);
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("b&H5M,<nKT&&'O;'", "b&H5M,<nKT&&'O;'");
      Element element0 = document0.body();
      String string0 = element0.cssSelector();
      assertEquals("html > body", string0);
      assertEquals("b&H5M,<nKT&&'O;'", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      Document document0 = Document.createShell("b&kH5M,jnK&}';'");
      Element element0 = document0.appendChild(document0);
      String string0 = element0.cssSelector();
      assertEquals(2, document0.childNodeSize());
      assertEquals("#root", string0);
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      Document document0 = Parser.parse("b&kH5M,jnK&}';'", "b&kH5M,jnK&}';'");
      document0.toggleClass("b&kH5M,jnK&}';'");
      document0.cssSelector();
      assertEquals("b&kH5M,jnK&}';'", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      Document document0 = Parser.parse("#root", "tSc$:Pm/ayI");
      Node[] nodeArray0 = new Node[9];
      // Undeclared exception!
      try { 
        document0.insertChildren(6, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      Node[] nodeArray0 = new Node[3];
      Document document0 = new Document("body");
      // Undeclared exception!
      try { 
        document0.insertChildren((-1625949436), nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("b&H5M,<nKT&&'O;'", "b&H5M,<nKT&&'O;'");
      Node[] nodeArray0 = new Node[0];
      Element element0 = document0.insertChildren((-1), nodeArray0);
      assertEquals(1, element0.childNodeSize());
      assertEquals("b&H5M,<nKT&&'O;'", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      Tag tag0 = Tag.valueOf("ArI-h#y");
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "ArI-h#y", attributes0);
      LinkedList<Document> linkedList0 = new LinkedList<Document>();
      // Undeclared exception!
      try { 
        pseudoTextElement0.insertChildren(46, (Collection<? extends Node>) linkedList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("$~D**", "$~D**");
      List<DataNode> list0 = document0.dataNodes();
      assertEquals("$~D**", document0.baseUri());
      assertEquals(0, list0.size());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("/");
      Document document0 = Document.createShell("/");
      document0.appendChild(cDataNode0);
      document0.textNodes();
      assertEquals(2, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("<!", "<!");
      Elements elements0 = document0.getElementsByIndexLessThan(1064);
      assertEquals("<!", document0.baseUri());
      assertEquals(3, elements0.size());
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("uC,g!4ww", "uC,g!4ww");
      Parser parser0 = Parser.xmlParser();
      Document document1 = document0.parser(parser0);
      Document document2 = document0.normalise();
      document0.id();
      document2.getElementsByIndexGreaterThan(0);
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.noQuirks;
      Document document3 = document1.quirksMode(document_QuirksMode0);
      String string0 = "J5_x";
      document3.getElementsByAttribute("J5_x");
      document1.reparentChild(document0);
      Pattern pattern0 = Pattern.compile("");
      document2.getElementsMatchingText(pattern0);
      document0.getElementsMatchingOwnText(pattern0);
      document2.tag();
      TextNode textNode0 = TextNode.createFromEncoded("", "textarea");
      document1.doClone(textNode0);
      document1.nextElementSiblings();
      document3.isBlock();
      // Undeclared exception!
      try { 
        document2.getElementsByAttributeValueNot("", "hgroup");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("2", "b3~Bi=~Cnm7Y=siG{9O");
      document0.parents();
      assertEquals("b3~Bi=~Cnm7Y=siG{9O", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      Document document0 = Parser.parse("{DyX[k8,}", "{DyX[k8,}");
      Element element0 = document0.selectFirst("html");
      assertEquals("{DyX[k8,}", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("b&H5M,<nK<&}'O;'", "b&H5M,<nK<&}'O;'");
      document0.getAllElements();
      assertEquals(1, document0.childNodeSize());
      assertEquals("b&H5M,<nK<&}'O;'", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      Document document0 = Document.createShell("fQS:s2");
      Element element0 = document0.shallowClone();
      assertEquals(1, document0.childNodeSize());
      assertEquals("fQS:s2", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("java.lang.string@0000000038", "fz");
      List<Node> list0 = document0.childNodesCopy();
      document0.childNodes = list0;
      // Undeclared exception!
      try { 
        document0.text();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      Document document0 = Document.createShell("br");
      document0.doSetBaseUri("br");
      assertEquals("br", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      Document document0 = Document.createShell("/FMa95'dH");
      // Undeclared exception!
      try { 
        document0.after((Node) document0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      Document document0 = Document.createShell("fQS:s2");
      document0.getElementsByAttributeValueContaining(".", ".");
      assertEquals("fQS:s2", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("b&H5M,<nKT&&'O;'", "b&H5M,<nKT&&'O;'");
      Elements elements0 = document0.getElementsByClass("b&H5M,<nKT&&'O;'");
      assertEquals("b&H5M,<nKT&&'O;'", document0.baseUri());
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("\"^/OAp", "\"^/OAp");
      document0.getElementsByAttributeValueEnding("Insert position out of bounds.", "\"^/OAp");
      assertEquals("\"^/OAp", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      Document document0 = Document.createShell("br");
      document0.is("br");
      assertEquals(1, document0.childNodeSize());
      assertEquals("br", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      Document document0 = new Document("org.jsoup.parser.TokenQueue");
      document0.getElementsByAttributeValueMatching("java.lang.string@0000000071", "b&H5M,<nKT&&'O;'");
      assertEquals("org.jsoup.parser.TokenQueue", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("X", "X");
      Elements elements0 = document0.getElementsByIndexEquals(1838);
      assertEquals("X", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      Document document0 = Document.createShell("");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeStarting("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("k1u<4phhVraU=i;5.gx", "k1u<4phhVraU=i;5.gx");
      // Undeclared exception!
      try { 
        document0.after("k1u<4phhVraU=i;5.gx");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("$0{**", "$0{**");
      // Undeclared exception!
      try { 
        document0.prepend((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      Document document0 = Parser.parse("html", "html");
      document0.select("html");
      assertEquals("html", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("X", "X");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueStarting("X", "\"");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      Document document0 = Parser.parse("b&H5M,<nK<&}'O;'", "b&H5M,<nK<&}'O;'");
      // Undeclared exception!
      try { 
        document0.html((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("java.lang.string@00uF00001<", "java.lang.string@00uF00001<");
      String string0 = document0.wholeText();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      Document document0 = Parser.parse("b&H5M,<nK<&}'O;'", "b&H5M,<nK<&}'O;'");
      // Undeclared exception!
      try { 
        document0.before((Node) document0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      Element element0 = new Element("small");
      // Undeclared exception!
      try { 
        element0.before("small");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("java.lang.string@00U000001<", "java.lang.string@00U000001<");
      Element element0 = document0.addClass("java.lang.string@00U000001<");
      element0.addClass(" />");
      boolean boolean0 = element0.hasClass("java.lang.string@00U000001<");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.soup.parser.TokenQueue", "Ftu-@<x#ZX]ZwuuK");
      document0.getElementsContainingOwnText((String) null);
      assertEquals(1, document0.childNodeSize());
      assertEquals("Ftu-@<x#ZX]ZwuuK", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      Document document0 = Parser.parse("b&H5M,<nKT&&'O;'", "b&H5M,<nKT&&'O;'");
      document0.dataset();
      assertEquals("b&H5M,<nKT&&'O;'", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      Document document0 = Parser.parse("?", "?");
      Element element0 = document0.tagName("body");
      assertEquals("?", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      Document document0 = Parser.parse("b&H5M,<nKT&&'O;'", "b&H5M,<nKT&&'O;'");
      // Undeclared exception!
      try { 
        document0.prependText((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Pattern syntax error: ", "Pattern syntax error: ");
      Element element0 = document0.child(0);
      assertEquals(1, document0.childNodeSize());
      assertEquals("Pattern syntax error: ", element0.baseUri());
      assertNotNull(element0);
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      Document document0 = Parser.parse("?", "?");
      document0.previousElementSiblings();
      assertEquals("?", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      Document document0 = Parser.parse("html", "html");
      document0.prependElement("html");
      assertEquals(2, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      Document document0 = Document.createShell("java.lang.string@0000000047");
      document0.toggleClass("java.lang.string@0000000047");
      boolean boolean0 = document0.hasClass("java.lang.string@0000000047");
      assertEquals(1, document0.childNodeSize());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      Document document0 = Parser.parse("g'f/<o8Tklr{0>J-4Hv", "g'f/<o8Tklr{0>J-4Hv");
      // Undeclared exception!
      try { 
        document0.wrap("g'f/<o8Tklr{0>J-4Hv");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      Document document0 = Parser.parse(" > ", " > ");
      document0.getElementById(" > ");
  }
}
