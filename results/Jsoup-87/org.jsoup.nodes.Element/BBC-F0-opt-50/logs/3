* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-50
* Going to generate test cases for class: org.jsoup.nodes.Element
* Starting Client-0
* Connecting to master process on port 17080
* Analyzing classpath: 
  - subjects/buggy-versions/Jsoup-87/target/classes
* Finished analyzing classpath
* Generating tests for class org.jsoup.nodes.Element
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 2768
* Using seed 3258230064
* Starting evolution
bbc usage percentage is: 50%
* Initial Number of Goals in DynaMOSA = 1405 / 2768
[MASTER] 23:46:07.908 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] org.jsoup.nodes.Element.prependChild(Lorg/jsoup/nodes/Node;)Lorg/jsoup/nodes/Element;
[MASTER] 23:46:08.489 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedList<E> : Type points to itself
*C2*
*C2*
*C2*
[MASTER] 23:52:18.017 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
*C2*
*C2*
*C2*
*C2*
* Search finished after 602s and 393 generations, 172872 statements, best individual has fitness: 459.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 98%
* Total number of goals: 410
* Number of covered goals: 400
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 94%
* Total number of goals: 308
* Number of covered goals: 288
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 113
* Number of covered goals: 113
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 95%
* Total number of goals: 843
* Number of covered goals: 802
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 62%
* Total number of goals: 695
* Number of covered goals: 430
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 99%
* Total number of goals: 102
* Number of covered goals: 101
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 99%
* Total number of goals: 102
* Number of covered goals: 101
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 90%
* Total number of goals: 308
* Number of covered goals: 276
* Generated 331 tests with total length 1020
* Resulting test suite's coverage: 86% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 23:57:32.668 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.8871666666666667% of time used, but only 51/331 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 22%
* Compiling and checking tests
[MASTER] 23:57:52.942 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:57:53.372 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:57:53.739 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:57:54.078 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:57:54.415 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:57:54.763 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:57:55.102 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:57:55.468 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:57:56.062 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:57:56.406 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:57:56.737 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:57:57.063 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:57:57.406 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:57:57.742 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:57:58.071 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:57:58.400 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:57:58.731 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:57:59.075 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:57:59.446 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:57:59.780 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:00.147 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:00.519 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:00.846 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:01.108 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:01.449 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:01.775 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:02.108 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:02.461 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:02.789 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:03.076 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:03.399 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:03.762 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:04.114 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:04.455 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:04.815 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:05.150 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:05.495 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:05.855 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:06.182 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:06.540 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:06.918 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:07.256 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:07.589 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:08.338 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:08.666 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:08.991 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:09.312 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:09.639 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:09.959 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:10.282 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:10.613 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:10.961 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:11.342 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:11.706 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:12.046 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:12.379 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:12.717 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:13.049 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:13.394 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:13.729 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:14.075 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:14.437 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:14.802 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:15.146 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:15.510 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:15.844 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:16.209 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:16.566 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:16.901 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:17.264 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:17.644 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:17.650 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 23:58:17.652 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Parser parser0 = Parser.xmlParser();
assertFalse(parser0.isTrackErrors());
assertNotNull(parser0);

Document document0 = parser0.parseInput("mB", ".");
assertFalse(parser0.isTrackErrors());
assertEquals(".", document0.baseUri());
assertFalse(document0.hasParent());
assertFalse(document0.updateMetaCharsetElement());
assertEquals(Document.QuirksMode.noQuirks, document0.quirksMode());
assertEquals(1, document0.childNodeSize());
assertEquals("#document", document0.nodeName());
assertFalse(document0.isBlock());
assertEquals("#root", document0.tagName());
assertEquals(0, document0.siblingIndex());
assertEquals(".", document0.location());
assertNotNull(document0);

Document document1 = (Document)document0.toggleClass("mB");
assertFalse(parser0.isTrackErrors());
assertEquals(".", document0.baseUri());
assertFalse(document0.hasParent());
assertFalse(document0.updateMetaCharsetElement());
assertEquals(Document.QuirksMode.noQuirks, document0.quirksMode());
assertEquals(1, document0.childNodeSize());
assertEquals("#document", document0.nodeName());
assertFalse(document0.isBlock());
assertEquals("#root", document0.tagName());
assertEquals(0, document0.siblingIndex());
assertEquals(".", document0.location());
assertEquals("#document", document1.nodeName());
assertFalse(document1.isBlock());
assertEquals(0, document1.siblingIndex());
assertEquals(".", document1.location());
assertFalse(document1.updateMetaCharsetElement());
assertEquals(Document.QuirksMode.noQuirks, document1.quirksMode());
assertEquals(1, document1.childNodeSize());
assertFalse(document1.hasParent());
assertEquals("#root", document1.tagName());
assertEquals(".", document1.baseUri());
assertNotNull(document1);
assertSame(document0, document1);
assertSame(document1, document0);

Document document2 = (Document)document0.toggleClass("mB");
assertFalse(parser0.isTrackErrors());
assertEquals(".", document0.baseUri());
assertFalse(document0.hasParent());
assertFalse(document0.updateMetaCharsetElement());
assertEquals(Document.QuirksMode.noQuirks, document0.quirksMode());
assertEquals(1, document0.childNodeSize());
assertEquals("#document", document0.nodeName());
assertFalse(document0.isBlock());
assertEquals("#root", document0.tagName());
assertEquals(0, document0.siblingIndex());
assertEquals(".", document0.location());
assertEquals(1, document2.childNodeSize());
assertEquals(Document.QuirksMode.noQuirks, document2.quirksMode());
assertEquals("#root", document2.tagName());
assertEquals(0, document2.siblingIndex());
assertFalse(document2.isBlock());
assertEquals(".", document2.baseUri());
assertEquals(".", document2.location());
assertFalse(document2.hasParent());
assertEquals("#document", document2.nodeName());
assertFalse(document2.updateMetaCharsetElement());
assertNotNull(document2);
assertSame(document0, document1);
assertSame(document0, document2);
assertSame(document2, document0);
assertSame(document2, document1);

String string0 = document1.wholeText();
assertFalse(parser0.isTrackErrors());
assertEquals(".", document0.baseUri());
assertFalse(document0.hasParent());
assertFalse(document0.updateMetaCharsetElement());
assertEquals(Document.QuirksMode.noQuirks, document0.quirksMode());
assertEquals(1, document0.childNodeSize());
assertEquals("#document", document0.nodeName());
assertFalse(document0.isBlock());
assertEquals("#root", document0.tagName());
assertEquals(0, document0.siblingIndex());
assertEquals(".", document0.location());
assertEquals("#document", document1.nodeName());
assertFalse(document1.isBlock());
assertEquals(0, document1.siblingIndex());
assertEquals(".", document1.location());
assertFalse(document1.updateMetaCharsetElement());
assertEquals(Document.QuirksMode.noQuirks, document1.quirksMode());
assertEquals(1, document1.childNodeSize());
assertFalse(document1.hasParent());
assertEquals("#root", document1.tagName());
assertEquals(".", document1.baseUri());
assertNotNull(string0);
assertSame(document0, document1);
assertSame(document0, document2);
assertSame(document1, document0);
assertSame(document1, document2);
assertEquals("mB", string0);

Document document3 = (Document)document1.removeClass(".");
assertFalse(parser0.isTrackErrors());
assertEquals(".", document0.baseUri());
assertFalse(document0.hasParent());
assertFalse(document0.updateMetaCharsetElement());
assertEquals(Document.QuirksMode.noQuirks, document0.quirksMode());
assertEquals(1, document0.childNodeSize());
assertEquals("#document", document0.nodeName());
assertFalse(document0.isBlock());
assertEquals("#root", document0.tagName());
assertEquals(0, document0.siblingIndex());
assertEquals(".", document0.location());
assertEquals("#document", document1.nodeName());
assertFalse(document1.isBlock());
assertEquals(0, document1.siblingIndex());
assertEquals(".", document1.location());
assertFalse(document1.updateMetaCharsetElement());
assertEquals(Document.QuirksMode.noQuirks, document1.quirksMode());
assertEquals(1, document1.childNodeSize());
assertFalse(document1.hasParent());
assertEquals("#root", document1.tagName());
assertEquals(".", document1.baseUri());
assertFalse(document3.hasParent());
assertEquals("#root", document3.tagName());
assertEquals(Document.QuirksMode.noQuirks, document3.quirksMode());
assertFalse(document3.updateMetaCharsetElement());
assertEquals(1, document3.childNodeSize());
assertEquals("#document", document3.nodeName());
assertFalse(document3.isBlock());
assertEquals(0, document3.siblingIndex());
assertEquals(".", document3.location());
assertEquals(".", document3.baseUri());
assertNotNull(document3);
assertSame(document0, document1);
assertSame(document0, document3);
assertSame(document0, document2);
assertSame(document1, document3);
assertSame(document1, document0);
assertSame(document1, document2);
assertSame(document3, document0);
assertSame(document3, document1);
assertSame(document3, document2);

Elements elements0 = document3.getElementsByClass("java.lang.string@0000000047");
assertFalse(parser0.isTrackErrors());
assertEquals(".", document0.baseUri());
assertFalse(document0.hasParent());
assertFalse(document0.updateMetaCharsetElement());
assertEquals(Document.QuirksMode.noQuirks, document0.quirksMode());
assertEquals(1, document0.childNodeSize());
assertEquals("#document", document0.nodeName());
assertFalse(document0.isBlock());
assertEquals("#root", document0.tagName());
assertEquals(0, document0.siblingIndex());
assertEquals(".", document0.location());
assertEquals("#document", document1.nodeName());
assertFalse(document1.isBlock());
assertEquals(0, document1.siblingIndex());
assertEquals(".", document1.location());
assertFalse(document1.updateMetaCharsetElement());
assertEquals(Document.QuirksMode.noQuirks, document1.quirksMode());
assertEquals(1, document1.childNodeSize());
assertFalse(document1.hasParent());
assertEquals("#root", document1.tagName());
assertEquals(".", document1.baseUri());
assertFalse(document3.hasParent());
assertEquals("#root", document3.tagName());
assertEquals(Document.QuirksMode.noQuirks, document3.quirksMode());
assertFalse(document3.updateMetaCharsetElement());
assertEquals(1, document3.childNodeSize());
assertEquals("#document", document3.nodeName());
assertFalse(document3.isBlock());
assertEquals(0, document3.siblingIndex());
assertEquals(".", document3.location());
assertEquals(".", document3.baseUri());
assertFalse(elements0.isEmpty());
assertEquals(1, elements0.size());
assertNotNull(elements0);
assertSame(document0, document1);
assertSame(document0, document3);
assertSame(document0, document2);
assertSame(document1, document3);
assertSame(document1, document0);
assertSame(document1, document2);
assertSame(document3, document0);
assertSame(document3, document1);
assertSame(document3, document2);


[MASTER] 23:58:17.994 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:18.339 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:18.704 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:19.084 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:19.429 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:19.772 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:20.116 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:20.459 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:20.836 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:21.173 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:21.506 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:21.844 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:22.189 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:22.592 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:22.978 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:23.326 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:23.684 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:24.054 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:24.474 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:24.854 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:25.205 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:25.543 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:25.871 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:26.201 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:26.543 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:26.889 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:27.238 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:27.608 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:27.950 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:28.735 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:29.100 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:29.470 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:29.828 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:30.175 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:30.511 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:30.845 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:31.176 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:31.508 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:31.838 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:32.206 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:32.556 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:32.897 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:33.230 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:33.572 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:33.900 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:34.225 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:34.561 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:58:34.892 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing tests to file
* Writing JUnit test case 'Element_ESTest' to results/Jsoup-87/org.jsoup.nodes.Element/BBC-F0-opt-50/tests/3
* Done!

* Computation finished
