/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 20 15:53:15 GMT 2021
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedWriter;
import java.io.File;
import java.io.IOException;
import java.io.PipedWriter;
import java.io.Reader;
import java.io.StringReader;
import java.io.StringWriter;
import java.nio.BufferOverflowException;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.ReadOnlyBufferException;
import java.nio.charset.Charset;
import java.util.Collection;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import java.util.regex.Pattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.Comment;
import org.jsoup.nodes.DataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.DocumentType;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.nodes.PseudoTextElement;
import org.jsoup.nodes.TextNode;
import org.jsoup.nodes.XmlDeclaration;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Parser;
import org.jsoup.parser.Tag;
import org.jsoup.select.Elements;
import org.jsoup.select.Evaluator;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Element_ESTest extends Element_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Document document0 = Parser.parse("2>v/V/r=Z6.hy836hB", "2>v/V/r=Z6.hy836hB");
      document0.toggleClass("2>v/V/r=Z6.hy836hB");
      Element element0 = document0.toggleClass(";zpIidsf/k.6sc");
      element0.hasClass("org.jsoup.nodes.Element$NodeList");
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("f1d.ZD1B", "Z+)f,(");
      document0.getElementsByAttributeValueEnding("#", "UTF-");
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.nodes.Element$NodeList", "org.jsoup.nodes.Element$NodeList");
      Element element0 = document0.appendElement("4iO");
      document0.setParentNode(element0);
      document0.nextElementSiblings();
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("body", "#comment");
      Element element0 = document0.prependText("/q8o-)$v@tM_n");
      Node[] nodeArray0 = new Node[9];
      // Undeclared exception!
      try { 
        element0.insertChildren(1, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array must not contain any null objects
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Document document0 = Parser.parse("pq", "pq");
      Node[] nodeArray0 = new Node[6];
      // Undeclared exception!
      try { 
        document0.insertChildren((-1081), nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Document document0 = Parser.parse("pq", "pq");
      Elements elements0 = document0.getElementsByTag("41$");
      document0.insertChildren(1, (Collection<? extends Node>) elements0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("body", "body");
      StringWriter stringWriter0 = new StringWriter(0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0, false);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document0.outerHtmlTail(mockPrintWriter0, 201, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("id", "Po");
      StringBuffer stringBuffer0 = new StringBuffer("#");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document0.outerHtmlHead(stringBuffer0, 0, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Tag tag0 = Tag.valueOf("track");
      Element element0 = new Element(tag0, "track");
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("value", "value");
      document0.nodelistChanged();
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Tag tag0 = Tag.valueOf("track");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "track", attributes0);
      formElement0.ensureChildNodes();
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("track", "track");
      document0.wrap("m~ c.Em.t`Z|JX>2)(");
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("{tz,y-nfm!fdg4<aknf7", "Wr");
      Element element0 = document0.head();
      element0.wrap("org.jsoup.nodes.Element$NodeList");
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Document document0 = Document.createShell("NCk4O~9D-30>-J`{Y");
      document0.wholeText();
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("pQeu#=sr6L rf98?t", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "8>b smq<*1P9^I!Qc", attributes0);
      formElement0.siblingIndex = 1098;
      formElement0.val("@3'Czc");
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Element element0 = new Element("frameset");
      element0.siblingIndex = (-2747);
      element0.val("frameset");
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("pQeu#=sr6L rf98?t", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "8>b smq<*1P9^I!Qc", attributes0);
      Element element0 = formElement0.val("@3'Czc");
      element0.val();
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("body", "body");
      document0.setSiblingIndex((-1386));
      document0.toggleClass("br");
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Element element0 = new Element("body");
      element0.toggleClass("org.jsoup.nodes.Element$NodeList");
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("body", "body");
      document0.appendTo(document0);
      document0.toggleClass("java.lang.string@0000000107 br c.e1.t`z|>ex>2)(");
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.nodes.Element$NodeList", "org.jsoup.nodes.Element$NodeList");
      Element element0 = document0.appendElement("4iO");
      element0.text("br");
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("name", "name");
      document0.siblingIndex = (-2719);
      document0.text("org.jsoup.select.Evaluator$IsNthOfType");
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("2>v/V/r=Z6.hy836hB", "");
      Element element0 = document0.head();
      element0.text("");
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "");
      document0.text();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("pQeu#=sr6L rf98?t", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "8>b smq<*1P9^I!Qc", attributes0);
      formElement0.siblingIndex = 1098;
      formElement0.tagName("org.jsoup.nodes.Element$NodeList");
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("!e6!>_YgX^U}s", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("!e6!>_YgX^U}s");
      Attributes attributes0 = cDataNode0.attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "!e6!>_YgX^U}s", attributes0);
      pseudoTextElement0.tagName("html");
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(":first-of-type", ":first-of-type");
      Document document1 = new Document(":first-of-type");
      Element element0 = document0.appendTo(document1);
      element0.tagName(":first-of-type");
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Document document0 = new Document("&crmAdY");
      document0.tagName();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Tag tag0 = Tag.valueOf("track");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "track", attributes0);
      formElement0.tag();
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "");
      Element element0 = document0.head();
      element0.tag();
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Document document0 = Parser.parse("k+LrI[Wo)_:>Kp(", "|OK<WIIY5Y!brjz");
      document0.tag();
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.select.StructuralEvaluator$ImmediatePreviousSibling", "g*!es4'P");
      Element element0 = document0.body();
      element0.shallowClone();
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Document document0 = new Document("body");
      document0.selectFirst("body");
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Element element0 = new Element("b4V");
      element0.selectFirst("b4V");
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("track", "track");
      document0.selectFirst("head");
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("body", "body");
      document0.select("body");
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("SJ]Wy!G", "SJ]Wy!G");
      document0.setSiblingIndex((-2915));
      document0.removeClass("9M:#kz\"3qK4Vn$9A] ");
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Document document0 = Document.createShell("NCk4O~9D-30>-J`{Y");
      Element element0 = document0.head();
      element0.removeClass("1AN6z]V4^B.y!");
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("2>v/V/r=Z6.hy836hB", "_");
      Element element0 = document0.appendElement("_");
      element0.removeClass("_");
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.nodes.Element$NodeList", "org.jsoup.nodes.Element$NodeList");
      Element element0 = document0.appendElement("4iO");
      element0.previousElementSiblings();
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Document document0 = Parser.parse("q(F?fpKTdKF<", "q(F?fpKTdKF<");
      Element element0 = document0.body();
      element0.before("");
      element0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Tag tag0 = Tag.valueOf("track");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "track", attributes0);
      formElement0.appendElement("track");
      Element element0 = formElement0.appendElement("track");
      element0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.nodes.Element$NodeList", "org.jsoup.nodes.Element$NodeList");
      Element element0 = document0.appendElement("4iO");
      element0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("InCell", "InCell");
      document0.siblingIndex = (-3388);
      document0.prependText("org.jsoup.nodes.Entities$CoreCharset");
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Tag tag0 = Tag.valueOf("{tZ+Y-NfFDg4<qkNF7");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "{tZ+Y-NfFDg4<qkNF7", attributes0);
      Element element0 = formElement0.appendElement("frameset");
      element0.prependText("frameset");
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("track", "track");
      document0.prependElement("head");
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Document document0 = Document.createShell("O[V{(J");
      Element element0 = document0.body();
      element0.prependChild(document0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Element element0 = new Element("X.0`S,59hU|E,kl7");
      element0.setSiblingIndex((-1254));
      element0.prepend("X.0`S,59hU|E,kl7");
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Document document0 = Parser.parse("k+LrI[Wo)_:>Kp(", "|OK<WIIY5Y!brjz");
      Element element0 = document0.body();
      element0.prepend("head");
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Tag tag0 = Tag.valueOf("track");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "track", attributes0);
      formElement0.prepend("");
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Document document0 = new Document("rR**}/7];T^V$Z<O");
      document0.parents();
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("trcc", "trcc");
      Element element0 = document0.body();
      element0.parents();
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("track", "track");
      document0.parent();
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Document document0 = Parser.parse(".#9T", ".#9T");
      Element element0 = document0.body();
      document0.setParentNode(element0);
      document0.parent();
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Tag tag0 = Tag.valueOf("{tZ+Y-NfFDg4<qkNF7");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "{tZ+Y-NfFDg4<qkNF7", attributes0);
      Element element0 = formElement0.appendElement("frameset");
      element0.parent();
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Element element0 = new Element("f1d.ZD1B");
      element0.prepend("f1d.ZD1B");
      element0.ownText();
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Document document0 = Parser.parse("k+LrI[Wo)_:>Kp(", "|OK<WIIY5Y!brjz");
      document0.nodeName();
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.nodes.Element$NodeList", "org.jsoup.nodes.Element$NodeList");
      document0.appendElement("4iO");
      document0.setParentNode(document0);
      document0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Document document0 = Parser.parse("J}", "J}");
      Element element0 = document0.head();
      element0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("track", "track");
      document0.setParentNode(document0);
      Elements elements0 = document0.getElementsMatchingOwnText("track");
      document0.insertChildren(0, (Collection<? extends Node>) elements0);
      document0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Tag tag0 = Tag.valueOf("5y>&C?v 6IxmV");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "AttributeValue_unquoted", attributes0);
      Element element0 = formElement0.appendElement("frameset");
      element0.isBlock();
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("V.*CV_4", "8F=Lq}\"F1");
      Evaluator.AllElements evaluator_AllElements0 = new Evaluator.AllElements();
      document0.is((Evaluator) evaluator_AllElements0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.nodes.Element$NodeList", "org.jsoup.nodes.Element$NodeList");
      Element element0 = document0.createElement("4iO");
      element0.is("4iO");
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("BeforeAttributeName");
      FormElement formElement0 = new FormElement(tag0, "br", attributes0);
      Element element0 = formElement0.appendElement("id");
      Node[] nodeArray0 = new Node[0];
      element0.insertChildren(0, nodeArray0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("G.U\"GKACE ~V@");
      FormElement formElement0 = new FormElement(tag0, "D", attributes0);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) document0;
      formElement0.insertChildren(0, nodeArray0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("uGZS-F%gGx}8[Wo!<=z", "uGZS-F%gGx}8[Wo!<=z");
      Element element0 = document0.head();
      Elements elements0 = document0.getAllElements();
      element0.insertChildren(0, (Collection<? extends Node>) elements0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Tag tag0 = Tag.valueOf("jgO%%-?|)");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "jgO%%-?|)", attributes0);
      Element element0 = formElement0.appendElement("frameset");
      Element element1 = element0.val("jgO%%-?|)");
      Document document0 = new Document("#root");
      Elements elements0 = document0.getElementsByAttributeValueNot("(~/", "=<!o8V[DHhMpv9V[S");
      element1.insertChildren(0, (Collection<? extends Node>) elements0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      Elements elements0 = document0.getElementsByIndexLessThan(0);
      document0.empty();
      document0.insertChildren(0, (Collection<? extends Node>) elements0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Document document0 = Parser.parse("track", "track");
      Element element0 = document0.appendElement("Uj");
      element0.html("org.jsoup.select.Evaluator$AttributeWithValueEnding");
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("L\"bO,", "bod");
      document0.setSiblingIndex((-1344));
      document0.html("<y&");
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      Tag tag0 = Tag.valueOf("{tZ+Y-NfFDg4<qkNF7", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "{tZ+Y-NfFDg4<qkNF7", attributes0);
      Element element0 = formElement0.appendElement("frameset");
      element0.html("po");
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Tag tag0 = Tag.valueOf("java.lang.string@0000000047 br c.em.t`z|ex>2)(");
      FormElement formElement0 = new FormElement(tag0, "java.lang.string@0000000047 br c.em.t`z|ex>2)(", (Attributes) null);
      formElement0.html((MockPrintStream) null);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Tag tag0 = Tag.valueOf("track");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "track", attributes0);
      formElement0.html();
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("body", "body");
      document0.getElementsByClass(".W*");
      document0.hasAttributes();
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("body", "body");
      document0.hasAttributes();
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("body", "body");
      Pattern pattern0 = Pattern.compile("org.jsoup.nodes.Element$NodeList");
      document0.getElementsMatchingText(pattern0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Tag tag0 = Tag.valueOf("jgO%%-?|)");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "jgO%%-?|)", attributes0);
      Pattern pattern0 = Pattern.compile("frameset");
      formElement0.getElementsMatchingOwnText(pattern0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("body", "body");
      Pattern pattern0 = Pattern.compile("", (-5310));
      document0.getElementsMatchingOwnText(pattern0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.select.StructuralEvaluator$ImmediatePreviousSibling", "g*!es4'P");
      document0.getElementsContainingOwnText("org.jsoup.select.StructuralEvaluator$ImmediatePreviousSibling");
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Document document0 = Parser.parse("k+LrI[Wo)_:>Kp(", "|OK<WIIY5Y!brjz");
      document0.getElementsByTag("body");
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("body", "body");
      document0.getElementsByIndexGreaterThan((-839));
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("body", "body");
      document0.getElementsByIndexEquals(0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Tag tag0 = Tag.valueOf("div");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "SKIP_CHILDREN", attributes0);
      formElement0.getElementsByAttributeValueStarting("3{<KJSS#68_G2&;:pQ", "link");
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put("&@a$5njuvZM1w", "&@a$5njuvZM1w");
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("TTpC'*Sn", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "ody", attributes0);
      Pattern pattern0 = Pattern.compile("");
      formElement0.getElementsByAttributeValueMatching("&@a$5njuvZM1w", pattern0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Document document0 = Document.createShell("body");
      document0.getElementsByAttributeValueMatching("PUT", "PUT");
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Tag tag0 = Tag.valueOf(".");
      CDataNode cDataNode0 = new CDataNode("D+uQOKwG");
      Attributes attributes0 = cDataNode0.attributes();
      Attribute attribute0 = new Attribute("D+uQOKwG", "N83AVP^w|", attributes0);
      attributes0.put(attribute0);
      Element element0 = new Element(tag0, ".", attributes0);
      element0.getElementsByAttributeValueMatching("D+uQOKwG", "N83AVP^w|");
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("~yjURrYj\"-xCSDaI", "#");
      document0.getElementsByAttributeValueContaining("#", "Q`Z-HLb1{ql=~");
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put("&@a$5njuvZM1w", "&@a$5njuvZM1w");
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("TTpC'*Sn", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "bBRqdy", attributes0);
      formElement0.getElementsByAttribute("&@a$5njuvZM1w");
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Tag tag0 = Tag.valueOf("C!;WXzi8vt");
      CDataNode cDataNode0 = new CDataNode("^|)-");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "M|jIXanL4hdIfgp@R", attributes0);
      Element element0 = formElement0.appendElement("^|)-");
      formElement0.prependElement("M|jIXanL4hdIfgp@R");
      element0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Document document0 = Parser.parse("track", "track");
      Element element0 = document0.appendElement("Uj");
      element0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("]/0As^<C/", "]/0As^<C/");
      Element element0 = document0.body();
      element0.empty();
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("body", "body");
      Element element0 = document0.appendElement("PUT");
      element0.doClone(document0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("bogTdy", "bogTdy");
      document0.setSiblingIndex((-250));
      document0.doClone(document0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag0 = Tag.valueOf("{tZ+Y-NfFDg4<qkNF7", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "{tZ+Y-NfFDg4<qkNF7", attributes0);
      Element element0 = formElement0.appendElement("frameset");
      element0.doClone(formElement0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("body", "body");
      document0.doClone((Node) null);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Document document0 = Parser.parse("track", "track");
      Element element0 = document0.body();
      element0.clone();
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Document document0 = new Document("body");
      document0.clone();
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Document document0 = Parser.parse("2>v/V/r=Z6.hy836hB", "2>v/V/r=Z6.hy836hB");
      document0.appendTo(document0);
      Locale locale0 = new Locale("_$yIai;*=-C`", "java.lang.string@0000000119 br c.em.t`z|ex>2)(", "%M8<w*F%1wV");
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      document0.classNames(set0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("value", "value");
      document0.setSiblingIndex((-1094));
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      document0.classNames((Set<String>) linkedHashSet0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("java.lang.string@0000000047 br c.em.t`z|ex>2)(", "java.lang.string@0000000047 br c.em.t`z|ex>2)(");
      Element element0 = document0.body();
      Element element1 = element0.previousElementSibling();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      element1.classNames((Set<String>) linkedHashSet0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("body", "body");
      document0.toggleClass("br");
      document0.classNames();
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Document document0 = new Document("body");
      document0.childNodeSize();
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      document0.childNodeSize();
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      document0.prepend("\"BBf~:*`y'}8EQ@VMWe");
      document0.child(0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("body", "body");
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = (Node) document0;
      Tag tag0 = Tag.valueOf("org.jsoup.nodes.Element");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "head", attributes0);
      nodeArray0[1] = (Node) formElement0;
      document0.addChildren(0, nodeArray0);
      document0.child(0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Document document0 = Document.createShell("trxap6");
      document0.setParentNode(document0);
      document0.before((Node) document0);
      document0.prependText("trxap6");
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Document document0 = Parser.parse("l?", "l?");
      Element element0 = document0.shallowClone();
      element0.setParentNode(document0);
      element0.before("IN+?}>LH5){x!Xk");
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("body", "body");
      document0.baseUri();
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Element element0 = new Element("Comment");
      element0.baseUri();
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.parser.Token$Character", "org.jsoup.nodes.LeafNode");
      document0.toggleClass("class");
      document0.attributes();
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Document document0 = Parser.parse("l?", "l?");
      Element element0 = document0.appendElement("l?");
      element0.attr("Kq]I7[6;!mNoc{RDf", false);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      Tag tag0 = Tag.valueOf("html", parseSettings0);
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "html", attributes0);
      pseudoTextElement0.attr("LqpYr2R9zr&fn", true);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("track", "track");
      document0.setParentNode(document0);
      document0.attr("org.jsoup.nodes.Element$2", false);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Document document0 = Document.createShell("{tZ+Y-NfFDg4<qkNF7");
      Element element0 = document0.appendElement("{tZ+Y-NfFDg4<qkNF7");
      element0.attr("{tZ+Y-NfFDg4<qkNF7", "{tZ+Y-NfFDg4<qkNF7");
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Element element0 = new Element("frameset");
      element0.siblingIndex = (-2747);
      element0.attr("frameset", ".@fza<$(YCn5I!");
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("K(OJd>@{eb<Z_", "K(OJd>@{eb<Z_");
      Element element0 = document0.head();
      element0.attr("A}Uoq%vw@a-%<H", "nt:;`$L$IBlzn");
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.nodes.Element$NodeList", "org.jsoup.nodes.Element$NodeList");
      Element element0 = document0.createElement("body");
      element0.appendTo(document0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Document document0 = Parser.parse("body", "body");
      Element element0 = document0.body();
      Element element1 = element0.before("body");
      element1.appendText("T-n:*M/-:");
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("value", "value");
      Document document1 = Parser.parseBodyFragmentRelaxed("value", "value");
      document1.setSiblingIndex((-1094));
      document1.appendChild(document0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("f1d.ZD1B", "f1d.ZD1B");
      Element element0 = document0.body();
      element0.appendChild(document0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Tag tag0 = Tag.valueOf(".");
      CDataNode cDataNode0 = new CDataNode("D+uQOKwG");
      Attributes attributes0 = cDataNode0.attributes();
      Element element0 = new Element(tag0, ".", attributes0);
      element0.appendChild(cDataNode0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Document document0 = Parser.parse("track", "track");
      Element element0 = document0.body();
      element0.append("=P\"$_2,f7skVdPY;EA");
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("2>v/V/r=Z6.hy836hB", "_");
      Document document1 = Document.createShell("_");
      document0.setParentNode(document1);
      document0.append("_");
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Document document0 = new Document("_");
      document0.append("");
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("K(OJd>@{eb<Z_", "K(OJd>@{eb<Z_");
      Element element0 = document0.head();
      Element element1 = document0.appendElement("Tag cannot be self closing; not a void tag");
      element0.after((Node) element1);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Document document0 = Parser.parse("oSjK2;8EY", "rzN[)!twDr}ni~A+Wbw");
      Element element0 = document0.appendElement("org.jsoup.nodes.Element");
      element0.after((Node) document0);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Tag tag0 = Tag.valueOf("{tZ+Y-NfFDg4<qkNF7");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "{tZ+Y-NfFDg4<qkNF7", attributes0);
      Element element0 = formElement0.appendElement("frameset");
      element0.after("{tZ+Y-NfFDg4<qkNF7");
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Document document0 = Document.createShell("2>v/V/r=Z6.hy836hB");
      Element element0 = document0.appendElement("2>v/V/r=Z6.hy836hB");
      element0.after("article");
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("th", "th");
      Element element0 = document0.body();
      element0.after("*");
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", ";h0");
      Element element0 = document0.body();
      element0.addClass(";h0");
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("{tZ+Y-NfFDg4<qkNF7", "o t4Kx;");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.wrap("uj");
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Document document0 = Document.createShell("2>v/V/r=Z6.hy836hB");
      // Undeclared exception!
      try { 
        document0.wrap("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("track", "track");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.val("Nz");
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("{tZY-NfDg4<qkN7");
      String[] stringArray0 = new String[8];
      attributes0.keys = stringArray0;
      FormElement formElement0 = new FormElement(tag0, "{tZY-NfDg4<qkN7", attributes0);
      // Undeclared exception!
      try { 
        formElement0.val("ScriptDataEscapeStart");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      // Undeclared exception!
      try { 
        document0.toggleClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Document document0 = new Document("Insert position out of bounds.");
      // Undeclared exception!
      try { 
        document0.text("Insert position out of bounds.");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Document document0 = Parser.parse("textarea", "-s9js* -*$5");
      // Undeclared exception!
      try { 
        document0.text((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("K(OJd>@{eb<Z_", "K(OJd>@{eb<Z_");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.tagName("L!nZ^8h~Q+z+");
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Document document0 = new Document("J&XR-@?X");
      // Undeclared exception!
      try { 
        document0.tagName((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Tag name must not be empty.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Element element0 = new Element("f1d.ZD1B");
      Document document0 = Parser.parseBodyFragmentRelaxed("f1d.ZD1B", "f1d.ZD1B");
      document0.setParentNode(element0);
      // Undeclared exception!
      try { 
        document0.siblingElements();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.nodes.Element$NodeList", "org.jsoup.nodes.Element$NodeList");
      // Undeclared exception!
      try { 
        document0.selectFirst("zdT+#tz/o.cC");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query '#tz/o.cC': unexpected token at '/o.cC'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      // Undeclared exception!
      try { 
        document0.selectFirst("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Tag tag0 = Tag.valueOf("p\":/4>VtkT Tv");
      CDataNode cDataNode0 = new CDataNode("value");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "p\":/4>VtkT Tv", attributes0);
      // Undeclared exception!
      try { 
        formElement0.select("#");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "");
      // Undeclared exception!
      try { 
        document0.select("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.nodes.Element$NodeList", "org.jsoup.nodes.Element$NodeList");
      // Undeclared exception!
      try { 
        document0.removeClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Document document0 = new Document("\"");
      document0.setParentNode(document0);
      document0.childNodes = null;
      // Undeclared exception!
      try { 
        document0.previousElementSibling();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Document document0 = Document.createShell("|d!*)*^`ZMl$$3&l");
      DocumentType documentType0 = new DocumentType("|d!*)*^`ZMl$$3&l", "ybK6xjO^Bq&XP.,FLx!", "^=", "nvmkknx`x3d,", "nvmkknx`x3d,");
      document0.setParentNode(documentType0);
      // Undeclared exception!
      try { 
        document0.previousElementSibling();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("track", "track");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.prependElement("track");
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("body", "body");
      Element element0 = document0.toggleClass("m~ c.Em.t`Z|eX>2)(");
      List<Node> list0 = Parser.parseXmlFragment("br", "body");
      element0.childNodes = list0;
      // Undeclared exception!
      try { 
        document0.prependElement("Children collection to be inserted must not be null.");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableList", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("Q", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("Invalid character reference: %s");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "Invalid character reference: %s", attributes0);
      // Undeclared exception!
      try { 
        formElement0.prependElement("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Tag tag0 = Tag.valueOf("b,w\"ar;tufmp");
      CDataNode cDataNode0 = new CDataNode("b,w\"ar;tufmp");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "0VCS8clL+;@x4=X\"fK", attributes0);
      formElement0.parentNode = (Node) cDataNode0;
      // Undeclared exception!
      try { 
        formElement0.prependChild(formElement0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractList", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Document document0 = Parser.parse(".#9T", ".#9T");
      Element element0 = document0.body();
      element0.after((Node) document0);
      document0.setParentNode(element0);
      // Undeclared exception!
      try { 
        element0.prependChild(document0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("f1d.ZD1B", "Z+)f,(");
      // Undeclared exception!
      try { 
        document0.prependChild((Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("track", "track");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.prepend("track");
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Element element0 = new Element("body");
      // Undeclared exception!
      try { 
        element0.prepend((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(".dj*^}=v", ".dj*^}=v");
      DocumentType documentType0 = new DocumentType(":containsOwn(%s)", ":containsOwn(%s)", ":containsOwn(%s)", ".dj*^}=v");
      Element element0 = document0.doClone(documentType0);
      // Undeclared exception!
      try { 
        element0.prepend("PUBLIC");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Tag tag0 = Tag.valueOf("SKIP_CHILDREN");
      CDataNode cDataNode0 = new CDataNode("&amp;");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "&amp;", attributes0);
      formElement0.setParentNode(cDataNode0);
      // Undeclared exception!
      try { 
        formElement0.parents();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Document document0 = Parser.parse("2>v/V/r=Z6.hy836hB", "2>v/V/r=Z6.hy836hB");
      MockPrintStream mockPrintStream0 = new MockPrintStream(" ");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document_OutputSettings0.indentAmount(2599);
      // Undeclared exception!
      document0.outerHtmlTail(mockPrintStream0, 2586, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Document document0 = Parser.parse("br", "br");
      Charset charset0 = Charset.defaultCharset();
      byte[] byteArray0 = new byte[0];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlTail(charBuffer0, 74, document_OutputSettings0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Element element0 = new Element("Comment");
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "");
      // Undeclared exception!
      try { 
        element0.outerHtmlTail(stringBuilder0, 6, (Document.OutputSettings) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag0 = Tag.valueOf("f1d.ZD1B", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "f1d.ZD1B", attributes0);
      formElement0.appendElement("track");
      MockPrintStream mockPrintStream0 = new MockPrintStream("textarea");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        formElement0.outerHtmlTail(mockPrintStream0, (-2), document_OutputSettings0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // width must be > 0
         //
         verifyException("org.jsoup.internal.StringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("{tZ+Y-NfFDg4<qkNF7");
      FormElement formElement0 = new FormElement(tag0, "{tZ+Y-NfFDg4<qkNF7", attributes0);
      PipedWriter pipedWriter0 = new PipedWriter();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      try { 
        formElement0.outerHtmlTail(pipedWriter0, 15, document_OutputSettings0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Document document0 = Parser.parse("{tZ+Y-NfFD4qNF7", "{tZ+Y-NfFD4qNF7");
      File file0 = MockFile.createTempFile("{tZ+Y-NfFD4qNF7", "br", (File) null);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document_OutputSettings0.indentAmount(2837);
      // Undeclared exception!
      document0.outerHtmlHead(mockPrintWriter0, 2837, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("K(OJd>@{eb<Z_", "");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlHead((Appendable) null, (-1), document_OutputSettings0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Tag tag0 = Tag.valueOf("{tZ+Y-NfFDg4<qkNF7");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "{tZ+Y-NfFDg4<qkNF7", attributes0);
      char[] charArray0 = new char[9];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        formElement0.outerHtmlHead(charBuffer0, (-273), document_OutputSettings0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // width must be > 0
         //
         verifyException("org.jsoup.internal.StringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("td", "td");
      CDataNode cDataNode0 = new CDataNode("td");
      document0.setParentNode(cDataNode0);
      // Undeclared exception!
      try { 
        document0.nextElementSiblings();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Document document0 = Parser.parse("k+LrI[Wo)_:>Kp(", "|OK<WIIY5Y!brjz");
      // Undeclared exception!
      try { 
        document0.lastElementSibling();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("track", "track");
      document0.setParentNode(document0);
      Evaluator.AttributeWithValueNot evaluator_AttributeWithValueNot0 = new Evaluator.AttributeWithValueNot("qlr_ 9.~,V\"HL^_n", "track");
      // Undeclared exception!
      document0.is((Evaluator) evaluator_AttributeWithValueNot0);
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Z+)f,(", "Z+)f,(");
      // Undeclared exception!
      try { 
        document0.is((Evaluator) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      StringReader stringReader0 = new StringReader("rFZ/|@{@v)~E:");
      Document document0 = parser0.parseInput((Reader) stringReader0, "TTpC'*Sn");
      Evaluator.IsRoot evaluator_IsRoot0 = new Evaluator.IsRoot();
      // Undeclared exception!
      try { 
        document0.is((Evaluator) evaluator_IsRoot0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Document document0 = Parser.parse("#root", "?AA@+MFMK*(?C]E");
      // Undeclared exception!
      try { 
        document0.is("");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query '': unexpected token at ''
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("track", "track");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.is("#root");
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(false, true);
      Tag tag0 = Tag.valueOf("Fy&h]", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "abbr", attributes0);
      Document document0 = Parser.parseBodyFragment("9BP", "keygen");
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = (Node) formElement0;
      nodeArray0[1] = (Node) formElement0;
      nodeArray0[2] = (Node) document0;
      nodeArray0[3] = (Node) formElement0;
      nodeArray0[4] = (Node) document0;
      nodeArray0[5] = (Node) document0;
      nodeArray0[6] = (Node) document0;
      // Undeclared exception!
      try { 
        formElement0.insertChildren(0, nodeArray0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "");
      Elements elements0 = document0.getElementsByIndexLessThan(11);
      document0.empty();
      // Undeclared exception!
      try { 
        document0.insertChildren(0, (Collection<? extends Node>) elements0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("orgjsoup.elect.evaluator$isnthchild", "orgjsoup.elect.evaluator$isnthchild");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.html("orgjsoup.elect.evaluator$isnthchild");
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Document document0 = Parser.parse("m~ c.Em.t`Z|eX>2)(", "_!&m");
      Parser parser0 = Parser.xmlParser();
      List<Node> list0 = parser0.parseFragmentInput("_!&m", document0, "");
      document0.childNodes = list0;
      // Undeclared exception!
      try { 
        document0.html("{({RS!\"kI");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("SJ]Wy!G", "SJ]Wy!G");
      // Undeclared exception!
      try { 
        document0.html((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Document document0 = new Document("fd.ZD1B");
      CDataNode cDataNode0 = new CDataNode("YeY&4Y");
      Element element0 = document0.doClone(cDataNode0);
      // Undeclared exception!
      try { 
        element0.html("wjnqJt)%'<");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Tag tag0 = Tag.valueOf("track");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "track", attributes0);
      formElement0.appendElement("track");
      PipedWriter pipedWriter0 = new PipedWriter();
      // Undeclared exception!
      try { 
        formElement0.html(pipedWriter0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Pipe not connected
         //
         verifyException("org.jsoup.nodes.Node$OuterHtmlVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Document document0 = Parser.parse("2>v/V/r=Z6.hy836hB", "2>v/V/r=Z6.hy836hB");
      Element element0 = document0.appendTo(document0);
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "_$yIai;*=-C`");
      // Undeclared exception!
      element0.html(charBuffer0);
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Tag tag0 = Tag.valueOf("{tZ+Y-NfFDg4<qkNF7");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "{tZ+Y-NfFDg4<qkNF7", attributes0);
      formElement0.appendElement("frameset");
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "frameset");
      // Undeclared exception!
      try { 
        formElement0.html(charBuffer0);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.StringCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("method", "method");
      Charset charset0 = document0.charset();
      byte[] byteArray0 = new byte[6];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      // Undeclared exception!
      try { 
        document0.html(charBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("body", "body");
      // Undeclared exception!
      try { 
        document0.html((BufferedWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.nodes.Element$NodeList", "org.jsoup.nodes.Element$NodeList");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.html();
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Tag tag0 = Tag.valueOf("org.jsoup.parser.XmlTreeBuilder$1");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "org.jsoup.parser.XmlTreeBuilder$1", attributes0);
      formElement0.childNodes = null;
      // Undeclared exception!
      try { 
        formElement0.html();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Document document0 = Parser.parse(" bd", "");
      DocumentType documentType0 = new DocumentType("", "x^zg", "B+z");
      document0.setParentNode(documentType0);
      // Undeclared exception!
      try { 
        document0.html();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Tag tag0 = Tag.valueOf("track");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "track", attributes0);
      Element element0 = formElement0.appendElement("track");
      element0.setSiblingIndex((-1594));
      // Undeclared exception!
      try { 
        formElement0.html();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Document document0 = Parser.parse("id", "id");
      // Undeclared exception!
      try { 
        document0.hasClass((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText((Pattern) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$Matches", e);
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("trcc", "trcc");
      CDataNode cDataNode0 = new CDataNode("^)J-)");
      document0.setParentNode(cDataNode0);
      Pattern pattern0 = Pattern.compile("sPG#qzl!", (-185));
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText(pattern0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("org.jsoup.nodes.Element$NodeList", "|nQ");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Tag tag0 = Tag.valueOf("{tZ+Y-NfFDg4<qkNF7");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "{tZ+Y-NfFDg4<qkNF7", attributes0);
      // Undeclared exception!
      try { 
        formElement0.getElementsMatchingText("{tZ+Y-NfFDg4<qkNF7");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pattern syntax error: {tZ+Y-NfFDg4<qkNF7
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("ysq}7hb5KEKPISmL1-", "d");
      TextNode textNode0 = TextNode.createFromEncoded("ysq}7hb5KEKPISmL1-");
      document0.setParentNode(textNode0);
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText(" }W@-HEwj;");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("bogTdy", "bogTdy");
      Element element0 = document0.appendElement("PUT");
      element0.setSiblingIndex((-250));
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText("cpB- u}^0QnQ*");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingOwnText((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("K(OJd>@{eb<Z_", "");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingOwnText("K(OJd>@{eb<Z_");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pattern syntax error: K(OJd>@{eb<Z_
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("track", "track");
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration("track", false);
      document0.setParentNode(xmlDeclaration0);
      // Undeclared exception!
      try { 
        document0.getElementsMatchingOwnText("track");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("g]YS^ ", "g]YS^ ");
      document0.siblingIndex = (-55);
      document0.setParentNode(document0);
      // Undeclared exception!
      try { 
        document0.getElementsMatchingOwnText("g]YS^ ");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Document document0 = Parser.parse(" bd", " bd");
      Element element0 = document0.appendElement(" bd");
      element0.childNodes = null;
      // Undeclared exception!
      try { 
        document0.getElementsContainingText(" bd");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Document document0 = Parser.parse("body", "body");
      Comment comment0 = new Comment("html");
      document0.setParentNode(comment0);
      // Undeclared exception!
      try { 
        document0.getElementsContainingText("html");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("g]YS^ ", "g]YS^ ");
      document0.setSiblingIndex((-1432352094));
      document0.setParentNode(document0);
      // Undeclared exception!
      try { 
        document0.getElementsContainingText("g]YS^ ");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "Z+)f,(");
      // Undeclared exception!
      try { 
        document0.getElementsByTag("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Document document0 = Parser.parse("lbod", "lbod");
      DocumentType documentType0 = new DocumentType("lbod", "BoQ^Rgn!C", "lbod");
      document0.parentNode = (Node) documentType0;
      // Undeclared exception!
      try { 
        document0.getElementsByIndexGreaterThan(19);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Document document0 = new Document("bd");
      CDataNode cDataNode0 = new CDataNode("bd");
      document0.setParentNode(cDataNode0);
      // Undeclared exception!
      try { 
        document0.getElementsByIndexEquals(52);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      Document document0 = Parser.parse("pq", "pq");
      // Undeclared exception!
      try { 
        document0.getElementsByClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("2>v/V/r=Z6.hy836hB", "_");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueStarting("", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      Element element0 = new Element("]C~WhN{zmyP$H5");
      // Undeclared exception!
      try { 
        element0.getElementsByAttributeValueNot("#root", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Document document0 = Document.createShell("NCk4O~9D-30>-J`{Y");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueMatching("", "{Tb6cv");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pattern syntax error: {Tb6cv
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Document document0 = Document.createShell("");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueEnding("", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Document document0 = Parser.parse("id", "id");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValue("!vrAOK;u F6", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeStarting("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("body", "body");
      Element element0 = document0.prepend("body");
      List<Node> list0 = document0.childNodesCopy();
      element0.childNodes = list0;
      // Undeclared exception!
      try { 
        element0.getElementsByAttribute("br");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("2>v/V/r=Z6.hy836hB", "_");
      // Undeclared exception!
      try { 
        document0.getElementsByAttribute("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("{tZ+Y-NfFD4qNF7", "{tZ+Y-NfFD4qNF7");
      document0.childNodes = null;
      // Undeclared exception!
      try { 
        document0.getElementById("{tZ+Y-NfFD4qNF7");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "");
      // Undeclared exception!
      try { 
        document0.getElementById((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("body", "body");
      // Undeclared exception!
      try { 
        document0.firstElementSibling();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("o", "2yJ");
      TextNode textNode0 = new TextNode("m~");
      document0.setParentNode(textNode0);
      // Undeclared exception!
      try { 
        document0.firstElementSibling();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("2>v/V/r=Z6.hy836hB", "");
      Element element0 = document0.body();
      document0.addClass("2>v/V/r=Z6.hy836hB");
      document0.setParentNode(element0);
      // Undeclared exception!
      try { 
        document0.cssSelector();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query '#root.java.lang.String@0000000090': unexpected token at '@0000000090'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("S]^=G", "S]^=G");
      Element element0 = document0.head();
      Parser parser0 = Parser.xmlParser();
      List<Node> list0 = parser0.parseFragmentInput("S]^=G", document0, "S]^=G");
      element0.childNodes = list0;
      // Undeclared exception!
      try { 
        element0.cssSelector();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      Document document0 = Document.createShell("8l?PK{2~tpZSea3c1F3");
      CDataNode cDataNode0 = new CDataNode("8l?PK{2~tpZSea3c1F3");
      document0.setParentNode(cDataNode0);
      // Undeclared exception!
      try { 
        document0.cssSelector();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("K(OJd>@{eb<Z_", "");
      Element element0 = document0.body();
      element0.siblingIndex = (-1503);
      document0.setParentNode(element0);
      // Undeclared exception!
      try { 
        document0.cssSelector();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Document document0 = Document.createShell("k+LrI[o)_:>Kp(");
      // Undeclared exception!
      try { 
        document0.classNames((Set<String>) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      Document document0 = new Document("org.jsoup.nodes.Element");
      // Undeclared exception!
      try { 
        document0.child(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("body", "body");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.before("eI9aX");
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("g]YS^ ", "g]YS^ ");
      TextNode textNode0 = new TextNode("g]YS^ ", "g]YS^ ");
      document0.setParentNode(textNode0);
      // Undeclared exception!
      try { 
        document0.before(":nth-child(%d)");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      // Undeclared exception!
      try { 
        document0.attr((String) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("track", "track");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.attr("E1", " />");
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("java.lang.string@0000000047 br c.em.t`z|ex>2)(", "java.lang.string@0000000047 br c.em.t`z|ex>2)(");
      // Undeclared exception!
      try { 
        document0.attr((String) null, "~[15<@?5x]t`jQ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.ParseSettings", e);
      }
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("g\"mbv[/q[eo},fgqs$", " ");
      DataNode dataNode0 = new DataNode(" ", " ");
      document0.parentNode = (Node) dataNode0;
      // Undeclared exception!
      try { 
        document0.appendTo(document0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractList", e);
      }
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("track", "track");
      Element element0 = document0.createElement("html");
      Element element1 = document0.doClone(element0);
      // Undeclared exception!
      try { 
        element1.appendTo(element1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Zo'y", "Zo'y");
      // Undeclared exception!
      try { 
        document0.appendTo((Element) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("2>v/V/r=Z6.hy836hB", "_");
      // Undeclared exception!
      try { 
        document0.appendText((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("track", "track");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.appendElement("track");
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("org.js&up.nodes9LeafNode", "org.js&up.nodes9LeafNode");
      // Undeclared exception!
      try { 
        document0.appendElement("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      Document document0 = Document.createShell("java.lang.string@0000000047 dt 7+");
      List<Node> list0 = document0.childNodes();
      document0.childNodes = list0;
      // Undeclared exception!
      try { 
        document0.appendChild(document0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Document document0 = new Document("track");
      document0.setParentNode(document0);
      // Undeclared exception!
      try { 
        document0.appendChild(document0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d", "d");
      // Undeclared exception!
      try { 
        document0.appendChild((Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      Document document0 = Document.createShell("WTM%");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.append("Tag name must not be empty.");
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Document document0 = Document.createShell("2>v/V/r=Z6.hy836hB");
      // Undeclared exception!
      try { 
        document0.append((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.nodes.Element$NodeList", "org.jsoup.nodes.Element$NodeList");
      document0.setParentNode(document0);
      // Undeclared exception!
      try { 
        document0.after((Node) document0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("track", "track");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.after("html");
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("o)g.jsoup.nodes.YeafNode", "o)g.jsop.node.efNode");
      // Undeclared exception!
      try { 
        document0.addClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("G-HT;U");
      Attributes attributes0 = cDataNode0.attributes();
      Element element0 = null;
      try {
        element0 = new Element((Tag) null, "", attributes0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      Element element0 = null;
      try {
        element0 = new Element((Tag) null, "f1d.ZD1B");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      Element element0 = null;
      try {
        element0 = new Element("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("body", "body");
      Element element0 = document0.toggleClass("body");
      document0.toggleClass("java.lang.string@0000000107 br c.e1.t`z|>ex>2)(");
      element0.hasClass("br");
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("K(OJd>@{eb<Z_", "K(OJd>@{eb<Z_");
      document0.hasClass("u6m(I5ibt*rb?");
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      Document document0 = Parser.parse("k+LrI[Wo)_:>Kp(", "k+LrI[Wo)_:>Kp(");
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      linkedHashSet0.add((String) null);
      // Undeclared exception!
      try { 
        document0.classNames((Set<String>) linkedHashSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("body", "body");
      Element element0 = document0.prepend("body");
      element0.data();
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("track", "track");
      document0.elementSiblingIndex();
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      Document document0 = Document.createShell("2>v/V/r=Z6.hy836hB");
      document0.appendTo(document0);
      document0.elementSiblingIndex();
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("track", "track");
      document0.setParentNode(document0);
      document0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("track", "track");
      document0.setParentNode(document0);
      document0.cssSelector();
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("uGZS-F%gGx}8[Wo!<=z", "uGZS-F%gGx}8[Wo!<=z");
      document0.attributes();
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Document document0 = Document.createShell("");
      document0.dataset();
      document0.attributes();
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("track", "track");
      document0.className();
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      Element element0 = new Element("f1d.ZD1B");
      element0.ownText();
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      Tag tag0 = Tag.valueOf("5y>&C?v 6IxmV");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "AttributeValue_unquoted", attributes0);
      formElement0.isBlock();
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      Document document0 = Document.createShell("k+LrI[Wo)_:>Kp(");
      Element element0 = document0.createElement("<html>\n <head></head>\n <body></body>\n</html>");
      element0.children();
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("body", "body");
      Pattern pattern0 = Pattern.compile(".W*");
      document0.getElementsMatchingText(pattern0);
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      Evaluator.ContainsText evaluator_ContainsText0 = new Evaluator.ContainsText("k+LrI[Wo)_:>Kp(");
      Document document0 = new Document("yu");
      document0.is((Evaluator) evaluator_ContainsText0);
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("body", "body");
      document0.text();
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("track", "track");
      document0.id();
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", ";h0");
      document0.classNames();
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      Tag tag0 = Tag.valueOf("track");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "track", attributes0);
      Element element0 = formElement0.appendElement("track");
      element0.html("track");
      MockPrintStream mockPrintStream0 = new MockPrintStream("track");
      formElement0.html(mockPrintStream0);
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag0 = Tag.valueOf("f1d.ZD1B", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "f1d.ZD1B", attributes0);
      formElement0.appendElement("track");
      MockPrintStream mockPrintStream0 = new MockPrintStream("textarea");
      formElement0.html(mockPrintStream0);
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Tag tag0 = Tag.valueOf("track");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "track", attributes0);
      formElement0.outerHtml();
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Document document0 = Document.createShell("k+LrI[Wo)_:>Kp(");
      document0.html();
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      Document document0 = Parser.parse("*nox", "RawtextEndTagName");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.prettyPrint(false);
      document0.outputSettings(document_OutputSettings1);
      StringBuilder stringBuilder0 = new StringBuilder();
      stringBuilder0.append((Object) document0);
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("{tZ+Y-NfFDg4<qkNF7", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "extended", attributes0);
      Element element0 = formElement0.appendElement("textarea");
      element0.val("tra>ck");
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag0 = Tag.valueOf("textarea", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "ui", attributes0);
      formElement0.val();
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      Document document0 = Parser.parse("2>v/V/r=Z6.hy836hB", "2>v/V/r=Z6.hy836hB");
      Element element0 = document0.toggleClass("f");
      document0.toggleClass("org.jsoup.nodes.Element");
      element0.toggleClass("org.jsoup.nodes.Element");
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("body", "body");
      Element element0 = document0.toggleClass(":only-of-type");
      document0.toggleClass("f1d.ZD1B");
      element0.hasClass("f1d.ZD1B");
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("body", "body");
      document0.toggleClass("br");
      document0.toggleClass("m~ c.Em.t`Z|eX>2)(");
      document0.hasClass("br");
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("body", "5J-W;P.j,OV_e");
      Element element0 = document0.toggleClass("br");
      document0.toggleClass("java.lang.string@0000000095 br c.em.t`z|ex>2)(");
      element0.getElementsByClass("br");
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("K(OJd>@{eb<Z_", "");
      document0.toggleClass("K(OJd>@{eb<Z_");
      document0.toggleClass("\"\r\nContent-Type: ");
      document0.hasClass("Referer");
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("2>v/V/r=Z6.hy836hB", "_");
      Element element0 = document0.toggleClass("]^>%}|h&O|j*");
      element0.toggleClass("1K7+");
      element0.hasClass("org.jsoup.nodes.Element$NodeList");
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("textarea", "textarea");
      document0.toggleClass("br");
      document0.hasClass("org.jsoup.nodes.Element$NodeList");
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("body", "5J-W;P.j,OV_e");
      document0.toggleClass("br");
      document0.hasClass("5J-W;P.j,OV_e");
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(",z<?q'gv$cD(z", ",z<?q'gv$cD(z");
      document0.data();
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      Document document0 = Parser.parse("<!doctype", "basefont");
      document0.hasText();
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("textarea", "textarea");
      document0.hasText();
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("g]YS^ ", "g]YS^ ");
      document0.setParentNode(document0);
      document0.getElementsMatchingOwnText("g]YS^ ");
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      Element.preserveWhitespace((Node) null);
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("body", "body");
      document0.appendElement("br");
      document0.getElementsMatchingOwnText("body");
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      Document document0 = Parser.parse("{tZ+Y-NfFDqNF7", "U`P/=@998Tb");
      document0.title("{tZ+Y-NfFDqNF7");
      document0.getElementsContainingOwnText("U`P/=@998Tb");
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(".9T", ".9T");
      document0.appendText(".9T");
      document0.getElementsMatchingText(".9T");
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("Pattern syntax error: ", "Pattern syntax error: ");
      document0.appendText("&amp;");
      document0.getElementsMatchingText("&amp;");
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("body", "body");
      document0.appendElement("br");
      document0.getElementsMatchingText("Only http & https protocols supported");
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      Document document0 = Parser.parse(" bd", " bd");
      document0.appendElement(" bd");
      document0.getElementsContainingText(" bd");
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("%X{tZ+Y-NfFDqNF7", "%X{tZ+Y-NfFDqNF7");
      CDataNode cDataNode0 = new CDataNode("%X{tZ+Y-NfFDqNF7");
      document0.prependChild(cDataNode0);
      document0.getElementsContainingText("%X{tZ+Y-NfFDqNF7");
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      Document document0 = Parser.parse(",z<?q'gv$cD(z", ",z<?q'gv$cD(z");
      document0.getElementsContainingText(".n6fdvmPd4~V1g.lU");
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.nodes.Element$NodeList", "org.jsoup.nodes.Element$NodeList");
      document0.appendElement("4iO");
      document0.setParentNode(document0);
      document0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "");
      document0.setParentNode(document0);
      document0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("track", "track");
      document0.setParentNode(document0);
      document0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("track", "track");
      document0.setParentNode(document0);
      document0.previousElementSiblings();
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("ava.lang.strng@0000000047 br c.em.t`z|ex>2)(", "ava.lang.strng@0000000047 br c.em.t`z|ex>2)(");
      Element element0 = document0.body();
      element0.wrap("%26;tgVtruYTJKS");
      element0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      Document document0 = new Document("f1d.ZD1B");
      document0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("ava.lang.strng@0000000047 br c.em.t`z|ex>2)(", "ava.lang.strng@0000000047 br c.em.t`z|ex>2)(");
      Element element0 = document0.body();
      Element element1 = element0.previousElementSibling();
      element1.before((Node) element0);
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("o)g.jsoup.nodes.YeafNode", "o)g.jsop.node.efNode");
      document0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("K(OJd>@{eb<Z_", "K(OJd>@{eb<Z_");
      Element element0 = document0.head();
      Elements elements0 = element0.nextElementSiblings();
      assertEquals(0, element0.siblingIndex());
      assertEquals("K(OJd>@{eb<Z_", element0.baseUri());
      assertEquals(1, elements0.size());
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(":first-of-type", ":first-of-type");
      document0.appendTo(document0);
      document0.siblingElements();
      assertEquals(2, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      Document document0 = Document.createShell("k+LrI[Wo)_:>Kp(");
      document0.siblingElements();
      assertEquals(1, document0.childNodeSize());
      assertEquals("k+LrI[Wo)_:>Kp(", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      Document document0 = Document.createShell("");
      Element element0 = document0.body();
      element0.after("");
      String string0 = element0.cssSelector();
      assertEquals("html > body:nth-child(2)", string0);
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      Document document0 = Document.createShell("");
      Element element0 = document0.body();
      String string0 = element0.cssSelector();
      assertEquals("html > body", string0);
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("2>v/V/r=Z6.hy836hB", "");
      document0.addClass("2>v/V/r=Z6.hy836hB");
      document0.cssSelector();
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      Document document0 = Parser.parse("k+LrI[Wo)_:>Kp(", "|OK<WIIY5Y!brjz");
      Node[] nodeArray0 = new Node[6];
      // Undeclared exception!
      try { 
        document0.insertChildren(2394, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("body", "body");
      Elements elements0 = document0.getElementsMatchingOwnText("org.jsoup.nodes.Element$NodeList");
      // Undeclared exception!
      try { 
        document0.insertChildren((-459805112), (Collection<? extends Node>) elements0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "");
      List<DataNode> list0 = document0.dataNodes();
      // Undeclared exception!
      try { 
        document0.insertChildren(2429, (Collection<? extends Node>) list0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      Document document0 = Parser.parse("pq", "pq");
      document0.prependText("figure");
      document0.textNodes();
      assertEquals(2, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("body", "body");
      Elements elements0 = document0.getElementsByIndexGreaterThan(13);
      assertEquals(1, document0.childNodeSize());
      assertTrue(elements0.isEmpty());
      assertEquals("body", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("body", "body");
      Element element0 = document0.selectFirst("body");
      assertEquals(1, document0.childNodeSize());
      assertEquals("body", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      Element element0 = new Element("X.0`S,59hU|E,kl7");
      // Undeclared exception!
      try { 
        element0.before("org.jsoup.nodes.Element$2");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      Document document0 = Document.createShell("k+LrI[Wo)_:>Kp(");
      document0.getElementsByAttribute("O~");
      assertEquals("k+LrI[Wo)_:>Kp(", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("body", "body");
      document0.doSetBaseUri("body");
      assertEquals("body", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      Document document0 = Parser.parse(".#9T", ".#9T");
      // Undeclared exception!
      try { 
        document0.after((Node) document0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("body", "body");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueContaining("body", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      Element element0 = new Element("f1d.ZD1B");
      Pattern pattern0 = Pattern.compile("f1d.ZD1B");
      Elements elements0 = element0.getElementsByAttributeValueMatching("f1d.ZD1B", pattern0);
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      Document document0 = Parser.parse("class", "class");
      document0.is("class");
      assertEquals(1, document0.childNodeSize());
      assertEquals("class", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("body", "body");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueMatching((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      Document document0 = Parser.parse("k+LrI[Wo)_:>p(", "|OK<WIIY5Y!brjz");
      Element element0 = document0.attr("Tag name must not be empty.", "Tag name must not be empty.");
      assertEquals("|OK<WIIY5Y!brjz", element0.baseUri());
      assertEquals(1, element0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("ava.lang.strng@0000000047 br c.em.t`z|ex>2)(", "ava.lang.strng@0000000047 br c.em.t`z|ex>2)(");
      // Undeclared exception!
      try { 
        document0.wrap("%26;tgVtruYTJKS");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      Document document0 = Parser.parse(",z<?q'gv$cD(z", ",z<?q'gv$cD(z");
      Elements elements0 = document0.getElementsMatchingOwnText("java.lang.string@0000000057 1k7+");
      assertEquals(",z<?q'gv$cD(z", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("body", "body");
      Elements elements0 = document0.getElementsByIndexEquals(22);
      assertEquals("body", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.nodes.Element$NodeList", "org.jsoup.nodes.Element$NodeList");
      document0.getElementsByAttributeStarting("rk$yqR4]$*");
      assertEquals(1, document0.childNodeSize());
      assertEquals("org.jsoup.nodes.Element$NodeList", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      Document document0 = Document.createShell("");
      // Undeclared exception!
      try { 
        document0.after("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      Element element0 = new Element("2X");
      // Undeclared exception!
      try { 
        element0.getElementsMatchingOwnText((Pattern) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$MatchesOwn", e);
      }
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("body", "body");
      document0.prepend("body");
      boolean boolean0 = document0.hasText();
      assertEquals(2, document0.childNodeSize());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      Document document0 = new Document("f1d.ZD1B");
      document0.select("f1d.ZD1B");
      assertEquals("f1d.ZD1B", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      Document document0 = new Document("\"");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueStarting("d?+@2dd55", "\"");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("2>v/V/r=Z6.hy836hB", "_");
      document0.getElementsByAttributeValue("body", "_");
      assertEquals(1, document0.childNodeSize());
      assertEquals("_", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("body", "body");
      document0.wholeText();
      assertEquals(1, document0.childNodeSize());
      assertEquals("body", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("ava.lang.strng@0000000047 br c.em.t`z|ex>2)(", "ava.lang.strng@0000000047 br c.em.t`z|ex>2)(");
      // Undeclared exception!
      try { 
        document0.before((Node) document0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      Document document0 = Document.createShell(" ");
      Element element0 = document0.html(" ");
      boolean boolean0 = element0.hasText();
      assertEquals(1, document0.childNodeSize());
      assertFalse(boolean0);
      assertEquals(" ", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      Element element0 = new Element("track");
      // Undeclared exception!
      try { 
        element0.prependText((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      Element element0 = new Element("f1d.ZD1B");
      // Undeclared exception!
      try { 
        element0.child((-993));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("body", "body");
      document0.previousElementSiblings();
      assertEquals("body", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("track", "track");
      document0.addClass("f1d.ZD1B");
      document0.className();
      assertEquals(1, document0.childNodeSize());
      assertEquals("track", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      Document document0 = Parser.parse("", "class");
      Elements elements0 = document0.children();
      assertFalse(elements0.isEmpty());
      assertEquals("class", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("{tZ+Y-NfFD4qNF7", "{tZ+Y-NfFD4qNF7");
      document0.getElementById("{tZ+Y-NfFD4qNF7");
  }
}
