/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 07 19:52:13 GMT 2021
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedWriter;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.Reader;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.UnsupportedEncodingException;
import java.nio.BufferOverflowException;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.ReadOnlyBufferException;
import java.nio.charset.Charset;
import java.nio.charset.IllegalCharsetNameException;
import java.nio.charset.UnsupportedCharsetException;
import java.util.Collection;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.MissingFormatArgumentException;
import java.util.Set;
import java.util.UnknownFormatConversionException;
import java.util.regex.Pattern;
import java.util.regex.PatternSyntaxException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.Comment;
import org.jsoup.nodes.DataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.DocumentType;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.Entities;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.nodes.PseudoTextElement;
import org.jsoup.nodes.TextNode;
import org.jsoup.nodes.XmlDeclaration;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Parser;
import org.jsoup.parser.Tag;
import org.jsoup.select.Elements;
import org.jsoup.select.Evaluator;
import org.junit.runner.RunWith;
import sun.nio.cs.US_ASCII;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Element_ESTest extends Element_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Document document0 = Parser.parse("java.lang.stuing@0000000095", "java.lang.stuing@0000000095");
      Document document1 = (Document)document0.addClass("String must not be empty");
      document1.getElementsByClass("KJ3MUrs7EN");
      char[] charArray0 = new char[1];
      charArray0[0] = '(';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings.Syntax document_OutputSettings_Syntax0 = Document.OutputSettings.Syntax.html;
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.syntax(document_OutputSettings_Syntax0);
      Document.OutputSettings document_OutputSettings2 = document_OutputSettings1.outline(true);
      Document.OutputSettings document_OutputSettings3 = document_OutputSettings2.indentAmount(11);
      Entities.EscapeMode entities_EscapeMode0 = Entities.EscapeMode.extended;
      Document.OutputSettings document_OutputSettings4 = document_OutputSettings3.escapeMode(entities_EscapeMode0);
      // Undeclared exception!
      try { 
        document1.outerHtmlHead(charBuffer0, 11, document_OutputSettings4);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      String string0 = "class";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "QBrQ 9h^u");
      Document document0 = parser0.parseInput("class", "pNNff =Hv~u8");
      parser0.settings((ParseSettings) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      Document document1 = document0.parser(parser0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Document document2 = document1.clone();
      // Undeclared exception!
      try { 
        document2.prependElement("class");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.Tag", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("vw67<3EUvl~", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("2wN.");
      Attributes attributes0 = cDataNode0.attributes();
      Attribute attribute0 = Attribute.createFromEncoded("oz", "oz");
      Attributes attributes1 = attributes0.put(attribute0);
      Attributes attributes2 = attributes1.put("2wN.", "oz");
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "#", attributes2);
      pseudoTextElement0.getElementsByAttributeValue("2wN.", "oz");
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      String string0 = "mC6\"W";
      Document document0 = Parser.parse("mC6\"W", "mC6\"W");
      document0.childNodes = null;
      document0.parentNode = (Node) document0;
      // Undeclared exception!
      try { 
        document0.previousElementSibling();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      String string0 = "mf3WWxdi";
      String string1 = "Go";
      Parser parser0 = Parser.xmlParser();
      Parser parser1 = parser0.settings((ParseSettings) null);
      Document document0 = parser1.parseInput("mf3WWxdi", "mf3WWxdi");
      Document document1 = document0.ownerDocument();
      // Undeclared exception!
      try { 
        document1.appendElement("Go");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.Tag", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Document document0 = new Document("textarea");
      Element element0 = document0.appendElement("textarea");
      element0.text("textarea");
      StringWriter stringWriter0 = new StringWriter(617);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document_OutputSettings0.outline(true);
      element0.outerHtmlTail(stringWriter0, 617, document_OutputSettings0);
      document0.getElementsByClass("textarea");
      document0.getElementsContainingOwnText("textarea");
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      element0.classNames((Set<String>) linkedHashSet0);
      Element.preserveWhitespace(element0);
      // Undeclared exception!
      try { 
        document0.child(32);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 32, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Tag tag0 = Tag.valueOf("br");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "br", attributes0);
      formElement0.toString();
      Document document0 = Document.createShell("<br>");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Entities.EscapeMode entities_EscapeMode0 = Entities.EscapeMode.extended;
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.escapeMode(entities_EscapeMode0);
      Document.OutputSettings document_OutputSettings2 = document_OutputSettings1.prettyPrint(false);
      Document document1 = document0.outputSettings(document_OutputSettings2);
      Document document2 = document1.clone();
      document2.html();
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Element element0 = new Element("br");
      element0.siblingIndex = (-1436010313);
      element0.val("P[m6]B;8YQ@");
      element0.parent();
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " |2IyVT");
      Document document0 = Parser.parse(" |2IyVT", "multiple");
      document0.siblingIndex = (-1558);
      document0.getElementsByIndexEquals(1071);
      Element element0 = document0.head();
      element0.childNodesAsArray();
      element0.getAllElements();
      element0.text(" |2IyVT");
      element0.attributes();
      document0.attr("multiple", "jzx2uo,;([");
      document0.getElementsContainingText("SsPLr");
      element0.appendChild(document0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Document document0 = new Document("textarea");
      document0.id();
      Element element0 = document0.appendElement("textarea");
      element0.getElementsMatchingOwnText("textarea");
      element0.className();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) document0;
      element0.insertChildren(0, nodeArray0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Document document0 = Document.createShell("br");
      document0.prependElement("br");
      document0.appendElement("br");
      document0.getElementsContainingOwnText("br");
      document0.childNodeSize();
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Document document0 = Parser.parse("6\"W", "6\"W");
      document0.parentNode = (Node) document0;
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "6\"W");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.indentAmount(2414);
      Document.OutputSettings document_OutputSettings2 = document_OutputSettings1.outline(false);
      String string0 = "q0@F#LJ'RG`9c{Ub";
      Document document1 = Parser.parse("6\"W", "q0@F#LJ'RG`9c{Ub");
      Charset charset0 = document1.charset();
      Document.OutputSettings document_OutputSettings3 = document_OutputSettings2.charset(charset0);
      Document.OutputSettings document_OutputSettings4 = document_OutputSettings3.prettyPrint(false);
      // Undeclared exception!
      try { 
        document0.outerHtmlTail(charBuffer0, 2414, document_OutputSettings4);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Element element0 = new Element("textarea");
      DocumentType documentType0 = new DocumentType("H0[&i(52)b)b[Mc;", "FW`", "<(", "textarea", ",evCi~2-z");
      element0.setParentNode(documentType0);
      element0.children();
      String string0 = Node.EmptyString;
      // Undeclared exception!
      try { 
        element0.firstElementSibling();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Tag tag0 = Tag.valueOf("value");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = "java.lang.string@0000000095 cy=?4r";
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("apv", "apv");
      FormElement formElement0 = new FormElement(tag0, "java.lang.string@0000000095 cy=?4r", attributes1);
      Document document0 = new Document("java.lang.string@0000000095 cy=?4r");
      FormElement formElement1 = formElement0.addElement(document0);
      formElement1.tagName("7]SlY_0");
      formElement1.getElementsByAttributeStarting("apv");
      formElement0.elementSiblingIndex();
      // Undeclared exception!
      try { 
        formElement1.child((-222450167));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("cuasv", parseSettings0);
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.clone();
      Attributes attributes2 = attributes1.put("cuasv", false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Attributes attributes3 = attributes2.put("9D1YAdtH0[f78", "6W");
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "cuasv", attributes3);
      Element element0 = new Element(tag0, "bd", attributes2);
      pseudoTextElement0.parentNode = (Node) element0;
      Pattern.compile("9D1YAdtH0[f78", (-1232));
      Element element1 = pseudoTextElement0.appendElement("org.jsoup.helper.W3CDom$W3CBuilder");
      Evaluator.IsLastOfType evaluator_IsLastOfType0 = new Evaluator.IsLastOfType();
      Element element2 = element1.append("cuasv");
      element2.val("~adD");
      pseudoTextElement0.parent();
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte)11;
      byteArray0[3] = (byte) (-70);
      byteArray0[4] = (byte)88;
      byteArray0[5] = (byte)72;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Pattern.compile("&F", 58);
      Document document0 = Parser.parse("org.jsoup.nodes.element$nodelist", "&F");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings.Syntax document_OutputSettings_Syntax0 = Document.OutputSettings.Syntax.html;
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.syntax(document_OutputSettings_Syntax0);
      Document.OutputSettings document_OutputSettings2 = document_OutputSettings1.clone();
      Document.OutputSettings document_OutputSettings3 = document_OutputSettings2.charset((Charset) null);
      Document document1 = document0.outputSettings(document_OutputSettings3);
      // Undeclared exception!
      try { 
        document1.html();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Document$OutputSettings", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Document document0 = new Document("zg");
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      parseSettings0.normalizeTag("o");
      Pattern pattern0 = Pattern.compile("`E$w~yk)", (-1845555759));
      Tag tag0 = Tag.valueOf("br");
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "zg", attributes0);
      pseudoTextElement0.getElementsMatchingOwnText(pattern0);
      pseudoTextElement0.appendElement("textarea");
      Evaluator.IsLastOfType evaluator_IsLastOfType0 = new Evaluator.IsLastOfType();
      document0.is((Evaluator) evaluator_IsLastOfType0);
      String string0 = "";
      document0.append("");
      PseudoTextElement pseudoTextElement1 = new PseudoTextElement(tag0, "vA8,A8", attributes0);
      // Undeclared exception!
      try { 
        pseudoTextElement1.child((-945));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Document document0 = Parser.parse("#", "#");
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.quirks;
      Document document1 = document0.quirksMode(document_QuirksMode0);
      Element element0 = document1.appendElement("Go");
      element0.setSiblingIndex((-1433506051));
      // Undeclared exception!
      try { 
        element0.getElementsByAttributeValue("#", "#");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Element element0 = new Element("ia3WJwbU");
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "ia3WJwbU");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        element0.outerHtmlHead(charBuffer0, 19, document_OutputSettings0);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.StringCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d69~\"vK5GK,PY%SsyVX", "d69~\"vK5GK,PY%SsyVX");
      CDataNode cDataNode0 = new CDataNode("d69~\"vK5GK,PY%SsyVX");
      Node node0 = cDataNode0.shallowClone();
      document0.setParentNode(node0);
      document0.clone();
      LinkedList<PseudoTextElement> linkedList0 = new LinkedList<PseudoTextElement>();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.createShell("VCSp(N1;/MUig}p");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText("d69~\"vK5GK,PY%SsyVX");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Document document0 = Document.createShell("zw&!%lqf5UG");
      Element element0 = document0.text("zw&!%lqf5UG");
      element0.siblingElements();
      element0.getElementsByClass("zw&!%lqf5UG");
      element0.cssSelector();
      PipedReader pipedReader0 = new PipedReader(1445);
      PipedWriter pipedWriter0 = new PipedWriter(pipedReader0);
      pipedWriter0.write(1445);
      pipedWriter0.flush();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document_OutputSettings0.indentAmount(1445);
      // Undeclared exception!
      document0.outerHtmlTail(pipedWriter0, 1545, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Document document0 = new Document("textarea");
      Element element0 = document0.appendElement("textarea");
      Element element1 = element0.text("textarea");
      StringWriter stringWriter0 = new StringWriter(617);
      StringWriter stringWriter1 = stringWriter0.append('Q');
      stringWriter1.append((CharSequence) "textarea");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings.Syntax document_OutputSettings_Syntax0 = Document.OutputSettings.Syntax.xml;
      document_OutputSettings0.syntax(document_OutputSettings_Syntax0);
      document_OutputSettings0.outline(true);
      element0.outerHtmlTail(stringWriter1, 617, document_OutputSettings0);
      element1.outerHtml();
      // Undeclared exception!
      try { 
        document0.wrap("_.;rk F.'iDN#873");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "~vp25m9,");
      Document document0 = new Document("textarea");
      Element element0 = document0.appendElement("textarea");
      Element element1 = element0.text("textarea");
      element0.dataNodes();
      element1.toString();
      document0.outerHtml();
      element0.tag();
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Element element0 = new Element("ia3WJwbU");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Element element1 = element0.val("ia3WJwbU");
      element1.html((CharBuffer) null);
      Document document0 = new Document("ia3WJwbU");
      document0.head();
      // Undeclared exception!
      try { 
        element1.after((Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Document document0 = new Document("6\"W");
      document0.siblingIndex = (-873);
      Element element0 = document0.addClass("6\"W");
      document0.getElementsByClass("Children collection to be inserted must not be null.");
      element0.dataset();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Document document0 = Parser.parse("##o(o1", "##o(o1");
      DataNode dataNode0 = new DataNode("</");
      DataNode dataNode1 = dataNode0.setWholeData("3S6RQ$TPOZce?ZLUc8");
      document0.appendChild(dataNode1);
      document0.appendElement("##o(o1");
      document0.data();
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag0 = Tag.valueOf("br", parseSettings0);
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("br", true);
      Element element0 = new Element(tag0, "br", attributes1);
      Element element1 = element0.val("br");
      element1.selectFirst("br");
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Document document0 = Document.createShell("n%'r0s");
      Element element0 = document0.appendElement("textarea");
      element0.lastElementSibling();
      element0.text("textarea");
      document0.outerHtml();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("'O-3gGPl#Cc", "'O-3gGPl#Cc");
      document0.appendText("");
      document0.parentNode = (Node) document0;
      document0.previousElementSibling();
      // Undeclared exception!
      try { 
        document0.select(">)S-=4(djC&SZ%Jz[81");
        fail("Expecting exception: UnknownFormatConversionException");
      
      } catch(UnknownFormatConversionException e) {
         //
         // Conversion = 'J'
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Document document0 = new Document("ve");
      document0.previousSibling();
      Element element0 = document0.appendElement("br");
      element0.getElementsByIndexGreaterThan((-368));
      document0.getElementsContainingOwnText("ve");
      element0.tag();
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("#ro(ot", "#ro(ot");
      Element element0 = document0.toggleClass("#ro(ot");
      Element element1 = element0.addClass("#ro(ot");
      element1.parentNode = (Node) element0;
      Element element2 = element1.addClass(" > ");
      element0.hasClass(" > ");
      element2.prependChild(document0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("'O-3gGPl#Cc", "'O-3gGPl#Cc");
      document0.parentNode = (Node) document0;
      String string0 = Node.EmptyString;
      // Undeclared exception!
      document0.prepend("'O-3gGPl#Cc");
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("##o(o1", "##o(o1");
      Element element0 = document0.toggleClass("##o(o1");
      element0.hasClass("Insert position out of bounds.");
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("##o(o1", "##o(o1");
      document0.siblingIndex = (-1);
      document0.toggleClass("##o(o1");
      document0.hasClass("java.lang.string@0000000095");
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("#ro(ot", "#ro(ot");
      Element element0 = document0.toggleClass("#ro(ot");
      document0.toggleClass("#ro(ot");
      element0.addClass("html");
      element0.hasClass("#ro(ot");
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      String string0 = "wbr";
      Document document0 = Document.createShell("wbr");
      Element element0 = document0.head();
      int int0 = (-1389);
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.quirks;
      document0.quirksMode(document_QuirksMode0);
      element0.setSiblingIndex((-1389));
      Element element1 = element0.removeClass("wbr");
      // Undeclared exception!
      try { 
        element1.getElementsByClass("p4m8_vh");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Document document0 = Document.createShell("nQs");
      Document document1 = (Document)document0.addClass("nQs");
      document0.hasClass("nQs");
      document1.wholeText();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0, false);
      Locale locale0 = Locale.CANADA;
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) "";
      MockPrintStream mockPrintStream1 = (MockPrintStream)mockPrintStream0.printf(locale0, "", objectArray0);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.indentAmount(16);
      Document.OutputSettings.Syntax document_OutputSettings_Syntax0 = Document.OutputSettings.Syntax.xml;
      Document.OutputSettings document_OutputSettings2 = document_OutputSettings1.syntax(document_OutputSettings_Syntax0);
      Charset charset0 = document0.charset();
      Document.OutputSettings document_OutputSettings3 = document_OutputSettings2.charset(charset0);
      Document.OutputSettings document_OutputSettings4 = document_OutputSettings3.prettyPrint(true);
      // Undeclared exception!
      try { 
        document1.outerHtmlTail(mockPrintStream1, (-2134), document_OutputSettings4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // width must be > 0
         //
         verifyException("org.jsoup.internal.StringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Document document0 = Parser.parse("InBody", "ve");
      Element element0 = document0.appendElement("6Rf`9`&p]GhTbZa(Pq");
      String string0 = Node.EmptyString;
      Tag.valueOf("GW2tK|k");
      Document document1 = element0.ownerDocument();
      Element element1 = document1.toggleClass("GW2tK|k");
      element1.addClass("'+Am|UTpF=(m^-\"f)0o");
      document0.hasClass("java.lang.string@0000000095");
      element0.empty();
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Document document0 = Parser.parse("InBody", "ve");
      Element element0 = document0.appendElement("ve");
      document0.text();
      document0.hasText();
      document0.getElementsByIndexEquals(984);
      element0.selectFirst("ve");
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Document document0 = new Document("InBody");
      Element element0 = document0.toggleClass("Pattern syntax error: ");
      element0.addClass("InBody");
      document0.append("Pattern syntax error: ");
      document0.toggleClass("InBody");
      element0.getAllElements();
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Document document0 = Document.createShell("nQis");
      document0.getElementsByAttributeStarting("nQis");
      Element element0 = document0.appendElement("textarea");
      Element element1 = element0.text("textarea");
      element0.is("textarea");
      // Undeclared exception!
      try { 
        element1.val((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Element element0 = new Element("bdi");
      element0.tag();
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("nQis", "nQis");
      document0.getElementsByAttributeStarting("nQis");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Element element0 = document0.appendElement("textarea");
      element0.unwrap();
      element0.is("textarea");
      document0.outerHtml();
      document0.getElementById("UTF-");
      element0.tagName("nQis");
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("InBody", "InBody");
      Element element0 = document0.toggleClass("Pattern syntax error: ");
      element0.addClass("");
      document0.hasClass("[%s~=%s]");
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("'O-3gGP%lVl#Cc", "'O-3gGP%lVl#Cc");
      document0.siblingIndex = (-1837);
      document0.hasClass("'O-3gGP%lVl#Cc");
      document0.parentNode = (Node) document0;
      // Undeclared exception!
      try { 
        document0.text();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("#ro(ot", "#ro(ot");
      Element element0 = document0.toggleClass("#ro(ot");
      element0.addClass("#ro(ot");
      element0.hasClass("#ro(ot");
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      String string0 = "s,&W(%P{Hzf;";
      Document document0 = Document.createShell("s,&W(%P{Hzf;");
      int int0 = (-4066);
      document0.outerHtml();
      Element element0 = document0.empty();
      document0.setSiblingIndex((-4066));
      document0.absUrl("s,&W(%P{Hzf;");
      document0.attributes();
      element0.shallowClone();
      Element element1 = element0.tagName("s,&W(%P{Hzf;");
      element1.getElementsContainingText("");
      element1.siblingIndex = 4;
      // Undeclared exception!
      try { 
        element0.selectFirst((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("#ro(ot", "#ro(ot");
      document0.toggleClass("#ro(ot");
      document0.siblingIndex = 1;
      Element element0 = document0.toggleClass("#ro(ot");
      element0.getElementsByClass("java.lang.string@0000000095");
      document0.getElementsMatchingOwnText("java.lang.string@0000000095");
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("##o(o1", "##o(o1");
      Element element0 = document0.toggleClass("##o(o1");
      element0.getElementsMatchingOwnText("");
      element0.getElementsByClass("java.lang.string@0000000095");
      document0.hasClass("java.lang.string@0000000095");
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("'O-3gGPl#Cc", "'O-3gGPl#Cc");
      document0.parentNode = (Node) document0;
      document0.previousElementSibling();
      // Undeclared exception!
      document0.prependElement("'O-3gGPl#Cc");
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("bD:MQITx{=", "InBody");
      Element element0 = document0.appendElement(" />");
      // Undeclared exception!
      try { 
        element0.hasClass((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("'O-3gGPl#Cc", "'O-3gGPl#Cc");
      document0.parentNode = (Node) document0;
      document0.previousElementSibling();
      // Undeclared exception!
      document0.html("R");
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Element element0 = new Element("InBody");
      Element element1 = element0.toggleClass("InBody");
      element1.clearAttributes();
      element0.className();
      Document document0 = Parser.parseBodyFragment("", "");
      Document document1 = document0.clone();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings.Syntax document_OutputSettings_Syntax0 = Document.OutputSettings.Syntax.html;
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.syntax(document_OutputSettings_Syntax0);
      Document document2 = document1.outputSettings(document_OutputSettings1);
      document2.appendText("");
      document1.hasText();
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Element element0 = new Element("InBody");
      Element element1 = element0.toggleClass("InBody");
      element1.childNodes = null;
      element1.clearAttributes();
      element0.className();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Element element2 = element0.val("InBody");
      Document.createShell("InBody");
      element0.cssSelector();
      // Undeclared exception!
      try { 
        element2.ownText();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("br", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "i", attributes0);
      formElement0.toString();
      Document document0 = Parser.parseBodyFragmentRelaxed("<br>", ".!=i");
      Parser parser0 = Parser.htmlParser();
      Parser parser1 = parser0.setTrackErrors(2369);
      Document document1 = document0.parser(parser1);
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.quirks;
      Document document2 = document1.quirksMode(document_QuirksMode0);
      Document document3 = document2.clone();
      document3.getElementsContainingOwnText("<br>");
      document0.val();
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Document document0 = Document.createShell("nQis");
      document0.getElementsByAttributeStarting("nQis");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Element element0 = document0.appendElement("textarea");
      Element element1 = element0.text("mn)*A.6+#Jrh I");
      element0.is("textarea");
      document0.outerHtml();
      element1.val();
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("Hwn?sJV%P;Jt/eb_", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("lQ2;+krZ}V6");
      Attributes attributes0 = cDataNode0.attributes();
      Attributes attributes1 = attributes0.put("lQ2;+krZ}V6", (String) null);
      Element element0 = new Element(tag0, "Hwn?sJV%P;Jt/eb_", attributes1);
      element0.setParentNode(cDataNode0);
      element0.classNames();
      Element element1 = element0.clone();
      element1.ensureChildNodes();
      element0.getElementsContainingText("Hwn?sJV%P;Jt/eb_");
      element1.val();
      element0.prependText("OgrFx9[");
      // Undeclared exception!
      try { 
        element0.ownText();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("1KG:^S`FjS7", "1KG:^S`FjS7");
      DataNode dataNode0 = DataNode.createFromEncoded("1KG:^S`FjS7", "yP)Az^hIdYm{?**");
      Element element0 = document0.appendChild(dataNode0);
      element0.siblingElements();
      document0.dataNodes();
      document0.hasClass("1KG:^S`FjS7");
      document0.baseUri();
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(" > ", " > ");
      Element element0 = document0.head();
      element0.setParentNode(document0);
      element0.toggleClass(" > ");
      String string0 = null;
      // Undeclared exception!
      try { 
        document0.text((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("1KG:^S`FjS7", "1KG:^S`FjS7");
      document0.title();
      document0.dataNodes();
      char[] charArray0 = new char[9];
      charArray0[0] = ')';
      charArray0[1] = '1';
      charArray0[2] = 't';
      charArray0[3] = 'w';
      charArray0[4] = '7';
      charArray0[5] = ';';
      charArray0[6] = '\'';
      charArray0[7] = '2';
      charArray0[8] = 'h';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.indentAmount(98688);
      Charset charset0 = Charset.defaultCharset();
      Document.OutputSettings document_OutputSettings2 = document_OutputSettings1.charset(charset0);
      Document.OutputSettings document_OutputSettings3 = document_OutputSettings2.clone();
      Document.OutputSettings document_OutputSettings4 = document_OutputSettings3.outline(true);
      // Undeclared exception!
      document0.outerHtmlHead(charBuffer0, 3023, document_OutputSettings4);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Document document0 = Document.createShell("ns");
      document0.getElementsByAttributeStarting("ns");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Element element0 = document0.html("wbr");
      Element element1 = document0.appendElement("wbr");
      element1.getElementsByClass("ns");
      document0.hasText();
      element0.childNodeSize();
      Set<String> set0 = element0.classNames();
      element1.classNames(set0);
      element0.tag();
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(" > ", " > ");
      Element element0 = document0.head();
      element0.setParentNode(document0);
      document0.addClass(" > ");
      document0.textNodes();
      element0.getElementsByClass("Tag name must not be empty.");
      document0.hasText();
      Element element1 = document0.prepend("Cjep1rE$=N");
      PipedWriter pipedWriter0 = new PipedWriter();
      // Undeclared exception!
      try { 
        element1.html(pipedWriter0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Pipe not connected
         //
         verifyException("org.jsoup.nodes.Node$OuterHtmlVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      String string0 = "ns";
      Document document0 = Document.createShell("ns");
      document0.getElementsByAttributeStarting("ns");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string1 = "wbr";
      DocumentType documentType0 = new DocumentType("wbr", "novalidate", "`gS_zU|cvtl^e3", ".", (String) null);
      document0.setParentNode(documentType0);
      // Undeclared exception!
      try { 
        document0.html("wbr");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Document document0 = Document.createShell("nQis");
      document0.getElementsByAttributeStarting("nQis");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Element element0 = document0.appendElement("textarea");
      element0.text("mn)*A.6+#Jrh I");
      element0.is("textarea");
      document0.outerHtml();
      document0.hasText();
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Document document0 = new Document("bfW1$ ");
      document0.toggleClass("|x2(");
      document0.previousElementSibling();
      Element element0 = document0.addClass("w<w'>");
      document0.textNodes();
      element0.getElementsByClass("&<TuXe");
      Document document1 = Document.createShell("3c*683has(");
      document1.hasText();
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Document document0 = new Document("'O-3gGPl#Cc");
      Element element0 = document0.toggleClass("|x2(");
      element0.previousElementSibling();
      Element element1 = document0.addClass("|x2(");
      document0.textNodes();
      element1.getElementsByClass("|x2(");
      document0.hasText();
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Document document0 = Document.createShell("ns");
      document0.getElementsByAttributeStarting("ns");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Element element0 = document0.appendElement("textarea");
      element0.is("textarea");
      document0.outerHtml();
      document0.hasText();
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(" > ", " > ");
      Element element0 = document0.head();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " > ");
      element0.setParentNode(document0);
      Element element1 = element0.toggleClass(" > ");
      element1.addClass(" > ");
      document0.textNodes();
      element0.getElementsByClass("Tag name must not be empty.");
      document0.hasText();
      element0.parent();
      element1.siblingElements();
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d69~\"vK5GK,PY%SsyVX", "d69~\"vK5GK,PY%SsyVX");
      Document document1 = document0.normalise();
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.quirks;
      Document document2 = document1.quirksMode(document_QuirksMode0);
      Element element0 = document2.body();
      element0.nodeName();
      Element element1 = element0.before("d69~\"vK5GK,PY%SsyVX");
      element1.siblingIndex = 32;
      // Undeclared exception!
      try { 
        element1.prependChild(element0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 32, Size: 4
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Document document0 = new Document("'O-3gGPl#Cc");
      document0.parentNode = (Node) document0;
      document0.appendText("'O-3gGPl#Cc");
      document0.text();
      document0.parent();
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      String string0 = "  ";
      Document document0 = Parser.parseBodyFragment("  ", "  ");
      Element element0 = document0.head();
      Element element1 = element0.toggleClass("  ");
      Element element2 = document0.appendTo(element1);
      Evaluator.IsFirstChild evaluator_IsFirstChild0 = new Evaluator.IsFirstChild();
      // Undeclared exception!
      element2.is((Evaluator) evaluator_IsFirstChild0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("y1", "s");
      document0.head();
      Element element0 = document0.toggleClass("^f2kfq>h+sn2!?wh");
      document0.addClass("^f2kfq>h+sn2!?wh");
      element0.getElementsByClass("s");
      Document document1 = Document.createShell("br");
      document1.getElementsByIndexLessThan(1);
      // Undeclared exception!
      try { 
        document0.child(1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("  ", "  ");
      Element element0 = document0.head();
      Element element1 = element0.toggleClass("  ");
      element1.getElementsByClass("Tag name must notnbe empty&");
      document0.getAllElements();
      document0.hasText();
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(" > ", " > ");
      Element element0 = document0.head();
      Element element1 = element0.toggleClass(" > ");
      element1.addClass(" > ");
      element1.getElementsByClass("Tag name must not be empty.");
      document0.getAllElements();
      document0.removeClass(" > ");
      element0.hasText();
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(" > ", " > ");
      document0.body();
      Element element0 = document0.appendText(" > ");
      element0.data();
      document0.text();
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("br", parseSettings0);
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("html", "org.jsoup.Jsoup");
      Attribute attribute0 = new Attribute("html", "M e");
      Attributes attributes2 = attributes1.put(attribute0);
      FormElement formElement0 = new FormElement(tag0, "i", attributes2);
      Element element0 = new Element(tag0, "M e", attributes2);
      FormElement formElement1 = formElement0.addElement(element0);
      element0.toString();
      formElement1.toggleClass(", state=");
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(" > ", " > ");
      Element element0 = document0.head();
      element0.toggleClass(" > ");
      // Undeclared exception!
      try { 
        element0.cssSelector();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query 'head.java.lang.String@0000000088': unexpected token at '@0000000088'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Document document0 = new Document("'O-3gGPl#Cc");
      Element element0 = document0.appendText("'O-3gGPl#Cc");
      document0.parentNode = (Node) element0;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)20;
      byteArray0[1] = (byte) (-127);
      byteArray0[2] = (byte)20;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      // Undeclared exception!
      try { 
        document0.siblingElements();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("KgJ*x.", "KgJ*x.");
      document0.siblingIndex = (-615);
      document0.appendText("KgJ*x.");
      document0.text();
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(" > ", "progress");
      Element element0 = document0.head();
      Element element1 = element0.toggleClass("progress");
      element1.getElementsByClass("Tag name must not be empty.");
      document0.getAllElements();
      document0.removeClass("progress");
      element1.before("org.jsoup.nodes.Element$NodeList");
      element0.wholeText();
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d69~\"vK5GK,,Y%SsyVX", "d69~\"vK5GK,,Y%SsyVX");
      document0.siblingIndex = (-1540);
      Element element0 = document0.doClone(document0);
      element0.classNames();
      element0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("KgJ*x.", "KgJ*x.");
      document0.appendText("KgJ*x.");
      document0.text();
      document0.nodeName();
      // Undeclared exception!
      try { 
        document0.selectFirst("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Document document0 = new Document("C=%}(QsN@;;|c3:%F");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document document1 = document0.outputSettings(document_OutputSettings0);
      Document document2 = document1.normalise();
      Document document3 = document2.clone();
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.noQuirks;
      Document document4 = document3.quirksMode(document_QuirksMode0);
      Element element0 = document4.head();
      element0.val("C=%}(QsN@;;|c3:%F");
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("a", "a");
      document0.getElementsByAttributeStarting("a");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Element element0 = document0.appendElement("a");
      element0.data();
      FileSystemHandling.shouldAllThrowIOExceptions();
      document0.getElementsMatchingOwnText("a");
      element0.prepend("");
      document0.ensureChildNodes();
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d69~\"vK5GK,,Y%SsyVX", "d69~\"vK5GK,,Y%SsyVX");
      document0.appendElement("br");
      document0.val("X&}TLP7,=X7-");
      document0.text();
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Document document0 = Document.createShell("d69~FvK5GK,,Y%SsyVX");
      FileSystemHandling.shouldAllThrowIOExceptions();
      document0.getElementsByClass("d69~FvK5GK,,Y%SsyVX");
      // Undeclared exception!
      try { 
        document0.select("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Document document0 = Parser.parse("bhtfr(t", "bhtfr(t");
      document0.hasText();
      document0.child(0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Document document0 = Document.createShell("wbr");
      Element element0 = document0.head();
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.quirks;
      document0.quirksMode(document_QuirksMode0);
      element0.setSiblingIndex((-1354));
      Element element1 = element0.removeClass("wbr");
      Element element2 = element0.appendElement("wbr");
      element2.addClass("wbr");
      Element element3 = element0.prepend("wbr");
      element1.dataNodes();
      Pattern pattern0 = Pattern.compile("v8Z", (-1354));
      // Undeclared exception!
      try { 
        element3.getElementsMatchingText(pattern0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Document document0 = Document.createShell("d69~\"vK5GK,,Y%SsyVX");
      Element element0 = document0.appendText("d69~\"vK5GK,,Y%SsyVX");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      document0.getElementsMatchingOwnText("d69~\"vK5GK,,Y%SsyVX");
      document0.prependChild(element0);
      // Undeclared exception!
      document0.tagName("d69~\"vK5GK,,Y%SsyVX");
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("'O-3gGPl#Cc", "'O-3gGPl#Cc");
      Document document1 = document0.ownerDocument();
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.noQuirks;
      Document document2 = document1.quirksMode(document_QuirksMode0);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.indentAmount(1651);
      Document.OutputSettings document_OutputSettings2 = document_OutputSettings1.prettyPrint(true);
      Document.OutputSettings document_OutputSettings3 = document_OutputSettings2.clone();
      Document document3 = document2.outputSettings(document_OutputSettings3);
      // Undeclared exception!
      document3.html();
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Document document0 = Parser.parse("a", "head");
      document0.tagName("head");
      Document document1 = document0.clone();
      document0.toggleClass("\"0");
      document1.hasText();
      document1.tagName();
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Document document0 = Document.createShell("a");
      document0.getElementsByAttributeStarting("a");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Element element0 = document0.appendElement("a");
      element0.data();
      Element element1 = document0.appendElement("textarea");
      element1.outerHtml();
      element1.clone();
      Element element2 = document0.val("textarea");
      document0.text();
      // Undeclared exception!
      try { 
        element2.after((Node) element0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Document document0 = Document.createShell("muted");
      document0.getElementsContainingText("muted");
      String string0 = "font";
      Element element0 = document0.text("font");
      document0.appendChild(element0);
      // Undeclared exception!
      element0.after("muted");
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Document document0 = new Document("nav");
      document0.getElementsByAttributeStarting("nav");
      Evaluator.ContainsText evaluator_ContainsText0 = new Evaluator.ContainsText("nav");
      document0.is((Evaluator) evaluator_ContainsText0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Element element0 = document0.appendElement("nav");
      element0.setSiblingIndex((-1722320336));
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        document0.getElementsMatchingOwnText("nav");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Document document0 = new Document("'O-3gaGPl#Cc");
      Element element0 = document0.appendText("'O-3gaGPl#Cc");
      document0.parentNode = (Node) element0;
      element0.data();
      // Undeclared exception!
      document0.appendElement("textarea");
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Document document0 = Parser.parse("nav", "nav");
      document0.getElementsByAttributeStarting("nav");
      Evaluator.ContainsText evaluator_ContainsText0 = new Evaluator.ContainsText("nav");
      document0.is((Evaluator) evaluator_ContainsText0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      document0.appendElement("nav");
      FileSystemHandling.shouldAllThrowIOExceptions();
      document0.childNodesAsArray();
      document0.getElementsMatchingOwnText("nav");
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Document document0 = Parser.parse("@", "@");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)46;
      byteArray0[1] = (byte)46;
      byteArray0[2] = (byte)24;
      byteArray0[3] = (byte) (-16);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      document0.getElementsByAttributeStarting("@");
      Evaluator.ContainsText evaluator_ContainsText0 = new Evaluator.ContainsText("@");
      document0.is((Evaluator) evaluator_ContainsText0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Element element0 = document0.appendElement("@");
      evaluator_ContainsText0.matches(element0, element0);
      document0.childNodesAsArray();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      element0.empty();
      Pattern pattern0 = Pattern.compile("Tra", 6);
      element0.elementSiblingIndex();
      element0.nextElementSibling();
      document0.getElementsMatchingText(pattern0);
      document0.tag();
      Element element1 = element0.shallowClone();
      MockFileWriter mockFileWriter0 = new MockFileWriter(":matches(regex) query must not be empty", true);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileWriter0);
      BufferedWriter bufferedWriter0 = new BufferedWriter(mockPrintWriter0);
      element1.val();
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Document.createShell("tfr(t");
      Document document0 = Parser.parse("tfr(t", "tfr(t");
      document0.dataNodes();
      // Undeclared exception!
      try { 
        document0.prependText((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      String string0 = "html";
      Document document0 = Parser.parse("html", "html");
      String string1 = null;
      DataNode dataNode0 = new DataNode((String) null);
      DataNode dataNode1 = dataNode0.setWholeData((String) null);
      Element element0 = document0.doClone(dataNode1);
      // Undeclared exception!
      try { 
        document0.appendChild(element0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractList", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      boolean boolean0 = false;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Document document0 = Parser.parseBodyFragment("+BtHqIb}B9$Nul2ju<", "class");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      document0.getElementsByIndexLessThan(60);
      Element element0 = document0.head();
      Element element1 = element0.before("+BtHqIb}B9$Nul2ju<");
      element0.getElementsByAttributeValueNot("head", "+BtHqIb}B9$Nul2ju<");
      String string0 = "<xx5o! jRb-qG";
      element1.after("<xx5o! jRb-qG");
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter("&:oD;)<iJn*", ",mvpL3k<PU6");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // ,mvpL3k<PU6
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("tfjoQt", "tfjoQt");
      // Undeclared exception!
      try { 
        document0.attr((String) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("dW9~\"vK5GK,,Y%syVX", "dW9~\"vK5GK,,Y%syVX");
      Document document1 = Parser.parseBodyFragmentRelaxed("dW9~\"vK5GK,,Y%syVX", "dW9~\"vK5GK,,Y%syVX");
      Element element0 = document1.appendChild(document0);
      element0.parents();
      element0.getAllElements();
      document0.text();
      Element element1 = document0.previousElementSibling();
      element1.isBlock();
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("\"3", "pubSysKey");
      Element element0 = document0.body();
      Document document1 = element0.ownerDocument();
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.limitedQuirks;
      Document document2 = document1.quirksMode(document_QuirksMode0);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.prettyPrint(true);
      Document.OutputSettings document_OutputSettings2 = document_OutputSettings1.indentAmount(2039);
      document2.val();
      element0.empty();
      Document document3 = document2.outputSettings(document_OutputSettings2);
      Element element1 = document3.text("pubSysKey");
      Charset.defaultCharset();
      element1.removeClass("pubSysKey");
      element1.getAllElements();
      String string0 = null;
      // Undeclared exception!
      try { 
        document3.getElementsMatchingText((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      String string0 = "br";
      Document document0 = Parser.parseBodyFragment("Invalid character reference: %s", "br");
      CDataNode cDataNode0 = new CDataNode("d69~\"vK5GK,,Y%SsyVX");
      Node node0 = cDataNode0.doClone(document0);
      Element element0 = document0.doClone(node0);
      element0.appendChild(document0);
      // Undeclared exception!
      try { 
        element0.parents();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d69~\"vK5GK,,Y%SsyVX", "d69~\"vK5GK,,Y%SsyVX");
      Element element0 = document0.doClone(document0);
      Element element1 = element0.appendChild(document0);
      element1.parents();
      // Undeclared exception!
      document0.val("meta");
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      String string0 = "d6~~\"vK5GK,,Y%S yVX";
      Document document0 = Parser.parseBodyFragment("d6~~\"vK5GK,,Y%S yVX", "d6~~\"vK5GK,,Y%S yVX");
      Element element0 = document0.doClone(document0);
      Element element1 = element0.appendChild(document0);
      document0.removeAttr("d6~~\"vK5GK,,Y%S yVX");
      element1.parents();
      // Undeclared exception!
      document0.append("d6~~\"vK5GK,,Y%S yVX");
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      String string0 = "a)<LS%m*0$7~L9E";
      Document document0 = Parser.parseBodyFragment("a)<LS%m*0$7~L9E", "a)<LS%m*0$7~L9E");
      Document document1 = document0.clone();
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.quirks;
      Document document2 = document1.quirksMode(document_QuirksMode0);
      Element element0 = document0.appendText("a)<LS%m*0$7~L9E");
      document2.appendChild(element0);
      document1.val("a)<LS%m*0$7~L9E");
      char[] charArray0 = new char[3];
      charArray0[0] = '<';
      charArray0[1] = '\\';
      charArray0[2] = 'G';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      // Undeclared exception!
      try { 
        document1.html(charBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d69~\"vK5GK,,Y%SsyVX", "d69~\"vK5GK,,Y%SsyVX");
      document0.dataNodes();
      // Undeclared exception!
      try { 
        document0.appendElement(" ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Document document0 = Parser.parse(":eq(%d)", "Insert position out of bounds.");
      document0.getElementsByAttributeValueNot("Nv{@6JXZ!g8b2Ha/", "Nv{@6JXZ!g8b2Ha/");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.prettyPrint(false);
      Document.OutputSettings document_OutputSettings2 = document_OutputSettings1.indentAmount(65536);
      // Undeclared exception!
      try { 
        document0.outerHtmlHead((Appendable) null, (-719), document_OutputSettings2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Document document0 = Document.createShell("br");
      Element element0 = document0.doClone(document0);
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = (Node) element0;
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.clone();
      Charset charset0 = document0.charset();
      Document.OutputSettings document_OutputSettings2 = document_OutputSettings1.charset(charset0);
      Document document1 = document0.outputSettings(document_OutputSettings2);
      nodeArray0[1] = (Node) document1;
      nodeArray0[2] = (Node) element0;
      nodeArray0[3] = (Node) document0;
      nodeArray0[4] = (Node) element0;
      nodeArray0[5] = (Node) element0;
      document0.addChildren(nodeArray0);
      document0.siblingElements();
      document0.nextElementSibling();
      document0.attributes();
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Element element0 = new Element("j''vY?n1(");
      String string0 = "d69~\"vK5GK,,Y%SsyVX";
      Element element1 = element0.prependText("d69~\"vK5GK,,Y%SsyVX");
      element0.getElementsByAttributeValueMatching("j''vY?n1(", "attributeValueUnquoted");
      List<Node> list0 = element1.childNodesCopy();
      element1.childNodes = list0;
      Pattern pattern0 = Pattern.compile("class");
      // Undeclared exception!
      try { 
        element1.getElementsByAttributeValueMatching("Tag name must not be empty.", pattern0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.NodeTraversor", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("a)<LS%m*07~L92", "a)<LS%m*07~L92");
      Document document1 = document0.clone();
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.quirks;
      Document document2 = document1.quirksMode(document_QuirksMode0);
      document2.body();
      Element element0 = document0.appendText("a)<LS%m*07~L92");
      CDataNode cDataNode0 = new CDataNode("a)<LS%m*07~L92");
      Node node0 = cDataNode0.doClone(element0);
      document1.appendChild(node0);
      document2.parents();
      element0.getAllElements();
      document1.text();
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Document document0 = Parser.parse("H+rYz", ".");
      document0.textNodes();
      Element element0 = document0.body();
      document0.nodelistChanged();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Element element1 = element0.prependChild(document0);
      element1.unwrap();
      String string0 = "RQ+m2-+";
      Element element2 = element1.appendElement("RQ+m2-+");
      element0.childNodes = null;
      element0.cssSelector();
      // Undeclared exception!
      try { 
        element2.after(".");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("a)<LS%m*07~L92", "a)<LS%m*07~L92");
      Document document1 = document0.clone();
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.quirks;
      Document document2 = document1.quirksMode(document_QuirksMode0);
      Element element0 = document2.body();
      Element element1 = document0.appendText("a)<LS%m*07~L92");
      Element element2 = element0.appendChild(element1);
      element0.parents();
      element0.getAllElements();
      document1.text();
      element2.prependText("a)<LS%m*07~L92");
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("d69~\"vK5GK,,Y%SsyVX");
      TextNode textNode0 = cDataNode0.text("d69~\"vK5GK,,Y%SsyVX");
      Element.preserveWhitespace(textNode0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("/-%yt1W$3", "/-%yt1W$3");
      Charset.defaultCharset();
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.noQuirks;
      Document document1 = document0.quirksMode(document_QuirksMode0);
      Element element0 = document1.body();
      element0.nodeName();
      element0.before(",It$.&pZ/3*T<yO_");
      element0.before((Node) document0);
      // Undeclared exception!
      try { 
        document1.appendText((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("head", "head");
      Document document1 = document0.clone();
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.quirks;
      Document document2 = document0.quirksMode(document_QuirksMode0);
      document0.body();
      Element element0 = document0.appendText("<Bi");
      document1.appendChild(document2);
      document2.parents();
      document0.getAllElements();
      document1.text();
      element0.className();
      document0.after("<Bi");
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Document document0 = Document.createShell("tn&B96g");
      document0.text("tn&B96g");
      Element element0 = document0.val("org.jsoup.select.Evaluator$IsFirstOfType");
      Element element1 = element0.prependElement("tn&B96g");
      element1.before((Node) element0);
      element0.attributes();
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("a)<LS%m*07~L92", "a)<LS%m*07~L92");
      Document document1 = document0.clone();
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.quirks;
      Document document2 = document1.quirksMode(document_QuirksMode0);
      Element element0 = document2.body();
      Element element1 = document0.appendText("a)<LS%m*07~L92");
      element0.appendChild(element1);
      element0.parents();
      element0.getAllElements();
      document1.text();
      element1.empty();
      document0.attr("a)<LS%m*07~L92", false);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Document document0 = Document.createShell("N");
      Element element0 = document0.text("N");
      document0.data();
      element0.selectFirst("N");
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Document document0 = Document.createShell("N");
      Document document1 = document0.clone();
      document1.val();
      // Undeclared exception!
      try { 
        document1.getElementsByAttributeValueNot("", ">Bg=;I+w:]HfJxck@");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Document document0 = Document.createShell("id");
      document0.data();
      // Undeclared exception!
      try { 
        document0.tagName((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Tag name must not be empty.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("InRow", "textarea");
      CDataNode cDataNode0 = new CDataNode("</");
      Node node0 = cDataNode0.doClone(document0);
      Element element0 = document0.doClone(node0);
      LinkedHashSet<DataNode> linkedHashSet0 = new LinkedHashSet<DataNode>();
      element0.insertChildren(0, (Collection<? extends Node>) linkedHashSet0);
      document0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d69~\"vK5GK,,Y%SsyVX", "d69~\"vK5GK,,Y%SsyVX");
      Document document1 = (Document)document0.doClone(document0);
      document1.wrap("br");
      document0.addClass("d69~\"vK5GK,,Y%SsyVX");
      document1.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("R<IjczPdvcH`", "l/4|}");
      Document document1 = Document.createShell("class");
      document0.appendTo(document1);
      document0.append("#root");
      CDataNode cDataNode0 = new CDataNode("option[selected]");
      Node node0 = cDataNode0.shallowClone();
      Element element0 = document0.doClone(node0);
      document0.addClass("m9q5!_AiC>!F");
      document0.nextElementSibling();
      // Undeclared exception!
      try { 
        element0.cssSelector();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d69~\"vK5GK,,Y%SsyVX", "d69~\"vK5GK,,Y%SsyVX");
      Parser.parseBodyFragment("br", "d69~\"vK5GK,,Y%SsyVX");
      Element element0 = document0.val("br");
      Element element1 = document0.prependChild(element0);
      PipedReader pipedReader0 = new PipedReader(4);
      PipedWriter pipedWriter0 = new PipedWriter(pipedReader0);
      // Undeclared exception!
      element1.html(pipedWriter0);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d69~\"vK5GK,,Y%SsyVX", "d69~\"vK5GK,,Y%SsyVX");
      Element element0 = document0.doClone(document0);
      element0.after("^H8n,i?0zH");
      document0.addClass("d69~\"vK5GK,,Y%SsyVX");
      element0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Element element0 = new Element("bo");
      element0.getAllElements();
      Document document0 = Document.createShell("bo");
      // Undeclared exception!
      try { 
        document0.is((Evaluator) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Parser.htmlParser();
      Document document0 = Document.createShell("RMa");
      Document document1 = document0.clone();
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.limitedQuirks;
      Document document2 = document0.quirksMode(document_QuirksMode0);
      Document document3 = document1.clone();
      document3.body();
      Element element0 = document2.appendText("RMa");
      Evaluator.ContainsText evaluator_ContainsText0 = new Evaluator.ContainsText("%");
      element0.is((Evaluator) evaluator_ContainsText0);
      Document document4 = new Document("RMa");
      document2.nextElementSiblings();
      document2.getElementsContainingOwnText("RMa");
      document2.text();
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "RMa");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document4.outerHtmlHead(stringBuilder0, (-2586), document_OutputSettings0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // width must be > 0
         //
         verifyException("org.jsoup.internal.StringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d69~\"vK5GK,PY%SsyVX", "d69~\"vK5GK,PY%SsyVX");
      Document document1 = document0.clone();
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.quirks;
      Document document2 = document1.quirksMode(document_QuirksMode0);
      Element element0 = document2.body();
      Element element1 = document0.appendText("d69~\"vK5GK,PY%SsyVX");
      Element element2 = element0.appendChild(element1);
      element2.ownText();
      element2.nextElementSiblings();
      element0.getAllElements();
      document1.text();
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Document document0 = new Document("org.jsoup.nodes.Element$NodeList");
      document0.val();
      document0.childNodes = null;
      // Undeclared exception!
      try { 
        document0.getElementsByClass("S/Ne");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d69~\"vK5GK,,Y%SsyVX", "d69~\"vK5GK,,Y%SsyVX");
      document0.select("noQuirks");
      document0.getAllElements();
      String string0 = Node.EmptyString;
      document0.ensureChildNodes();
      document0.getElementsByIndexLessThan(144);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.select.StructuralEvaluator", "org.jsoup.select.StructuralEvaluator");
      document0.hasText();
      document0.getAllElements();
      DocumentType documentType0 = new DocumentType("m5GwDhS)4(", "AfterFrameset", "body", "org.jsoup.select.StructuralEvaluator", "body");
      document0.prependChild(documentType0);
      document0.getElementsMatchingOwnText("AfterFrameset");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueEnding("id", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Document document0 = new Document("d69~\"vK5GK,,Y%SsyVX");
      document0.toString();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      document0.doClone((Node) null);
      document0.addClass("d69~\"vK5GK,,Y%SsyVX");
      document0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d69~\"vK5GK,,Y%SsyVX", "d69~\"vK5GK,,Y%SsyVX");
      DataNode dataNode0 = new DataNode("d69~\"vK5GK,,Y%SsyVX", "xI>");
      Element element0 = document0.doClone(dataNode0);
      document0.nextElementSiblings();
      // Undeclared exception!
      try { 
        element0.previousElementSibling();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      String string0 = "org.jsoup.select.StructuralEvaluator";
      Document document0 = Parser.parseBodyFragment("org.jsoup.select.StructuralEvaluator", "org.jsoup.select.StructuralEvaluator");
      TextNode textNode0 = new TextNode("org.jsoup.select.StructuralEvaluator", "org.jsoup.select.StructuralEvaluator");
      document0.outerHtml();
      Element element0 = document0.appendChild(textNode0);
      document0.body();
      Elements elements0 = element0.getElementsMatchingText("org.jsoup.select.StructuralEvaluator");
      // Undeclared exception!
      try { 
        document0.insertChildren((-1), (Collection<? extends Node>) elements0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("k,~PozCL");
      Attributes attributes0 = cDataNode0.attributes();
      attributes0.normalize();
      attributes0.hasKeyIgnoreCase("cqw+nWcn?<");
      attributes0.removeIgnoreCase("k,~PozCL");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document document0 = Parser.parse("cqw+nWcn?<", "cqw+nWcn?<");
      document0.tagName();
      document0.val();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("LS,");
      Element element0 = document0.addClass("LS,");
      element0.getElementsByIndexLessThan((-1077));
      element0.previousElementSibling();
      document0.classNames();
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      String string0 = "d69~(vK5GK,,Y%Ssy}X";
      Document document0 = Parser.parseBodyFragment("d69~(vK5GK,,Y%Ssy}X", "d69~(vK5GK,,Y%Ssy}X");
      // Undeclared exception!
      try { 
        document0.is("d69~(vK5GK,,Y%Ssy}X");
        fail("Expecting exception: MissingFormatArgumentException");
      
      } catch(MissingFormatArgumentException e) {
         //
         // Format specifier '%S'
         //
         verifyException("java.util.Formatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d69~\"vK5GK,PY%SsyVX", "d69~\"vK5GK,PY%SsyVX");
      Document document1 = document0.clone();
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.quirks;
      Document document2 = document1.quirksMode(document_QuirksMode0);
      Element element0 = document2.body();
      document1.val("org.jsoup.parser.Tokeniser");
      element0.nodeName();
      document0.text("body");
      Element element1 = document0.appendText(")c(<]ev,N* G");
      element0.appendChild(element1);
      element1.getAllElements();
      document1.getElementsMatchingOwnText("body");
      element0.shallowClone();
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Document document0 = new Document("bo");
      document0.val();
      Element element0 = document0.createElement("org.jsoup.select.NodeTraversor");
      Element element1 = document0.appendTo(element0);
      element1.nextElementSiblings();
      document0.getElementsByClass("R<IjczPdvcH`");
      document0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d69~\"vK5GK,,Y%SsyVX", "d69~\"vK5GK,,Y%SsyVX");
      Element element0 = document0.doClone(document0);
      element0.tagName("d69~\"vK5GK,,Y%SsyVX");
      document0.addClass("d69~\"vK5GK,,Y%SsyVX");
      element0.nextElementSibling();
      document0.className();
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d69~\"vK5GK,PY%SsyVX", "d69~\"vK5GK,PY%SsyVX");
      document0.clone();
      Document document1 = Document.createShell("d69~\"vK5GK,PY%SsyVX");
      Element element0 = document1.body();
      element0.nodeName();
      document0.text("body");
      Element element1 = document0.appendText(")c(<]ev,N* G");
      Element element2 = new Element("gPY^JENrzpf8$-G");
      element2.outerHtml();
      element0.appendChild(element1);
      document1.getElementsContainingOwnText("<gPY^JENrzpf8$-G></gPY^JENrzpf8$-G>");
      Parser.parseBodyFragmentRelaxed(")c(<]ev,N* G", "body");
      document1.getAllElements();
      document1.getElementsMatchingOwnText("bo");
      element0.wrap("body");
      document1.getElementsByAttributeValueNot("JH54|ncu`nzd", "d69~\"vK5GK,PY%SsyVX");
      Locale locale0 = Locale.forLanguageTag("a}dj~ln+R<ja6D~aa");
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      Element element3 = element0.classNames(set0);
      element3.hasAttributes();
      Pattern pattern0 = Pattern.compile("bo", 728);
      element1.getElementsMatchingText(pattern0);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Document document0 = Document.createShell("S/Ne");
      Parser.htmlParser();
      // Undeclared exception!
      try { 
        document0.prependChild((Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      String string0 = "S/Ne";
      Document document0 = Document.createShell("S/Ne");
      Element element0 = document0.body();
      document0.nodeName();
      Element element1 = document0.text("S/Ne");
      String string1 = ")c(<]ev,N* G";
      Evaluator.IsNthOfType evaluator_IsNthOfType0 = new Evaluator.IsNthOfType((-566), (-566));
      element0.is((Evaluator) evaluator_IsNthOfType0);
      document0.appendText("QkF_yBd)X24we");
      element1.appendChild(element0);
      // Undeclared exception!
      try { 
        Pattern.compile("QkF_yBd)X24we");
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Unmatched closing ')' near index 6
         // QkF_yBd)X24we
         //       ^
         //
         verifyException("java.util.regex.Pattern", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d69~\"vK5GK,PY%SsyVX", "d69~\"vK5GK,PY%SsyVX");
      Document document1 = document0.clone();
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.noQuirks;
      Document document2 = document1.quirksMode(document_QuirksMode0);
      document1.body();
      document1.nodeName();
      Element element0 = document2.text("d69~\"vK5GK,PY%SsyVX");
      Element element1 = document1.appendText("{K?sW");
      Comment comment0 = new Comment("formnovalidate", "#document");
      document1.appendChild(comment0);
      Pattern pattern0 = Pattern.compile("formnovalidate");
      element0.getElementsMatchingText(pattern0);
      element1.siblingElements();
      // Undeclared exception!
      try { 
        document0.addClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Document document0 = new Document("org.jsoup.nodes.Element$NodeList");
      Element element0 = document0.createElement("G`a$%aHWwi$vzN[-r");
      element0.childNodeSize();
      Charset charset0 = Charset.defaultCharset();
      Set<String> set0 = charset0.aliases();
      document0.classNames(set0);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d6B~\"K5GK,DY%SsyVX", "d6B~\"K5GK,DY%SsyVX");
      Document document1 = document0.clone();
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.quirks;
      Document document2 = document1.quirksMode(document_QuirksMode0);
      Element element0 = document2.body();
      element0.append("d6B~\"K5GK,DY%SsyVX");
      element0.nodeName();
      Parser.parseBodyFragment("body", "d6B~\"K5GK,DY%SsyVX");
      StringWriter stringWriter0 = new StringWriter();
      Document document3 = document1.clone();
      document3.normalise();
      document3.getAllElements();
      document3.getAllElements();
      document2.tagName();
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d69~\"vK5GK,PY%SsyVX", "d69~\"vK5GK,PY%SsyVX");
      Document document1 = document0.clone();
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.quirks;
      Document document2 = document1.quirksMode(document_QuirksMode0);
      Element element0 = document2.body();
      element0.nodeName();
      document0.text("body");
      Element element1 = document0.appendText(")c(<]ev,N* G");
      Element element2 = element0.appendChild(element1);
      Pattern pattern0 = Pattern.compile("d69~\"vK5GK,PY%SsyVX");
      element2.getElementsMatchingText(pattern0);
      document0.nextElementSiblings();
      document2.addClass("body");
      document2.getAllElements();
      document2.getElementsMatchingOwnText("bo");
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d69~\"vK5GK,PY%SsyVX", "d69~\"vK5GK,PY%SsyVX");
      Document document1 = document0.clone();
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.quirks;
      Document document2 = document1.quirksMode(document_QuirksMode0);
      Element element0 = document2.body();
      element0.nodeName();
      Element element1 = document0.text("body");
      Element element2 = document0.appendText(")c(<]ev,N* G");
      element0.appendChild(element2);
      document0.nextElementSiblings();
      document2.addClass("body");
      element1.ownerDocument();
      document0.previousElementSibling();
      document0.removeClass("org.jsoup.nodes.BooleanAttribute");
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d69~\"vK5GK,PY%SsyVX", "d69~\"vK5GK,PY%SsyVX");
      Document document1 = document0.normalise();
      Element element0 = document0.doClone(document1);
      element0.getElementsByIndexGreaterThan((-1010136973));
      StringWriter stringWriter0 = new StringWriter(243);
      Parser.parseBodyFragmentRelaxed("d69~\"vK5GK,PY%SsyVX", "d69~\"vK5GK,PY%SsyVX");
      document0.nextElementSiblings();
      document1.addClass("bXMt1^fw1!8K= ");
      element0.nextElementSibling();
      document1.prependText("bXMt1^fw1!8K= ");
      document1.hasText();
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("0&", "0&");
      CDataNode cDataNode0 = new CDataNode("0&");
      Element element0 = document0.body();
      Element element1 = document0.toggleClass("Vn");
      document0.nextElementSiblings();
      document0.getElementsByClass("Children collection to be inserted must not be null.");
      element1.previousElementSibling();
      element0.appendText("details");
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("0&", "0&");
      CDataNode cDataNode0 = new CDataNode("0&");
      Element element0 = document0.text("0&");
      document0.data();
      element0.cssSelector();
      document0.val("0&");
      Element element1 = document0.appendText("0&");
      element1.shallowClone();
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("V_I'jbS\nN:v$Z#kW", "V_I'jbS\nN:v$Z#kW");
      Element element0 = document0.head();
      element0.getElementsByIndexEquals((-209));
      document0.getElementsByAttributeValueNot(" ", " ");
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Parser.parseBodyFragment("org.jsoup.select.StructuralEvaluator", "org.jsoup.select.StructuralEvaluator");
      String string0 = "";
      Document document0 = new Document("");
      document0.ownerDocument();
      // Undeclared exception!
      try { 
        document0.prependElement("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("0&", "0&");
      Element element0 = document0.body();
      element0.appendText("T}uup?}LCe(U!a'!&");
      element0.nodeName();
      Element element1 = element0.before(".");
      document0.text();
      element0.dataNodes();
      Document document1 = element1.ownerDocument();
      document1.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d69~\"vK5GK,PY%SsyVX", "d69~\"vK5GK,PY%SsyVX");
      Document document1 = document0.clone();
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.quirks;
      Document document2 = document1.quirksMode(document_QuirksMode0);
      Element element0 = document2.body();
      element0.nodeName();
      document0.text("body");
      element0.toggleClass("nav");
      document0.nextElementSiblings();
      element0.getElementsByClass("nav");
      document0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Document document0 = Document.createShell("fC&mOf,*E;.Bl.g1");
      Parser.htmlParser();
      Element element0 = document0.text("fC&mOf,*E;.Bl.g1");
      element0.data();
      document0.cssSelector();
      Element element1 = document0.val("body");
      element0.attributes();
      element1.removeClass("body");
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-28);
      byteArray0[1] = (byte) (-51);
      byteArray0[2] = (byte)72;
      byteArray0[3] = (byte) (-127);
      byteArray0[4] = (byte)6;
      byteArray0[5] = (byte)16;
      byteArray0[6] = (byte) (-5);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Document document0 = new Document("#root");
      document0.hasText();
      document0.textNodes();
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText((Pattern) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$Matches", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("0&", "0&");
      CDataNode cDataNode0 = new CDataNode("0&");
      cDataNode0.attributes();
      Element element0 = document0.body();
      element0.nodeName();
      document0.val();
      element0.nodeName();
      Element element1 = element0.parent();
      element1.getElementById("bo");
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Document document0 = new Document("bo");
      document0.val();
      document0.nodeName();
      document0.baseUri();
      document0.attr("#RXJ,C$Ci9;tPy J", false);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Document document0 = Parser.parseBodyFragment("org.jsoup.select.StructuralEvaluator", "org.jsoup.select.StructuralEvaluator");
      TextNode textNode0 = new TextNode("org.jsoup.select.StructuralEvaluator", "org.jsoup.select.StructuralEvaluator");
      document0.outerHtml();
      document0.appendChild(textNode0);
      document0.childNodesCopy();
      LinkedList<PseudoTextElement> linkedList0 = new LinkedList<PseudoTextElement>();
      Document document1 = (Document)document0.attr("<html>\n <head></head>\n <body>\n  org.jsoup.select.StructuralEvaluator\n </body>\n</html>", "IjczPdvH`");
      Parser.parseBodyFragment("org.jsoup.select.StructuralEvaluator", "IjczPdvH`");
      Document document2 = Document.createShell("org.jsoup.select.StructuralEvaluator");
      document0.getElementsMatchingText("IjczPdvH`");
      document1.body();
      document2.getAllElements();
      document2.val();
      document0.tagName("`av=cMnt6.la");
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d69~\"vK5GK,PY%SsyVX", "d69~\"vK5GK,PY%SsyVX");
      Document document1 = document0.normalise();
      Element element0 = document0.doClone(document1);
      element0.getElementsByIndexGreaterThan((-1010136971));
      StringWriter stringWriter0 = new StringWriter(243);
      document0.normalise();
      document0.nextElementSiblings();
      document1.addClass("bXMt1^fw1!8K= ");
      element0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d69~\"vK5GK,PY%SsyVX", "d69~\"vK5GK,PY%SsyVX");
      Document document1 = Parser.parse("d69~\"vK5GK,PY%SsyVX", "d69~\"vK5GK,PY%SsyVX");
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.limitedQuirks;
      Document document2 = document1.quirksMode(document_QuirksMode0);
      Element element0 = document2.body();
      element0.nodeName();
      document0.text("body");
      document0.appendText(")c(<]ev,N* G");
      Element element1 = document2.body();
      element1.outerHtml();
      document0.cssSelector();
      Document document3 = Parser.parseBodyFragmentRelaxed("</", "d69~\"vK5GK,PY%SsyVX");
      document3.addClass("html");
      element1.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d69~\"vK5GK,PY%SsyVX", "d69~\"vK5GK,PY%SsyVX");
      Document document1 = Parser.parse("d69~\"vK5GK,PY%SsyVX", "d69~\"vK5GK,PY%SsyVX");
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.quirks;
      Document document2 = document1.quirksMode(document_QuirksMode0);
      Element element0 = new Element("d69~\"vK5GK,PY%SsyVX");
      element0.nodeName();
      document0.text("d69~\"vK5GK,PY%SsyVX");
      Element element1 = document0.appendText(")c(<]ev,N* G");
      Element element2 = document2.body();
      element2.outerHtml();
      element0.appendChild(element1);
      document0.nextElementSiblings();
      document0.appendText("%0-<v`-e+=p3");
      document0.lastElementSibling();
      element1.getElementsByAttributeValueStarting("%0-<v`-e+=p3", ")c(<]ev,N* G");
      // Undeclared exception!
      try { 
        element0.selectFirst("LWNMYt8HNa(@DC");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query 'LWNMYt8HNa(@DC': unexpected token at '(@DC'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Document document0 = Parser.parse("&lt;", "R<IjczPdvcH`");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueMatching("R<IjczPdvcH`", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.select.StructuralEvaluator", "org.jsoup.select.StructuralEvaluator");
      TextNode textNode0 = new TextNode("org.jsoup.select.StructuralEvaluator", "org.jsoup.select.StructuralEvaluator");
      document0.outerHtml();
      Element element0 = document0.appendChild(textNode0);
      Element element1 = document0.body();
      element1.attr("uT|C>7'M^y~$?_v'g", true);
      Elements elements0 = element0.getElementsMatchingText("Vn");
      document0.insertChildren((-1), (Collection<? extends Node>) elements0);
      element0.getElementsContainingOwnText("org.jsoup.select.StructuralEvaluator");
      element1.getAllElements();
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("0&", "0&");
      CDataNode cDataNode0 = new CDataNode("0&");
      TextNode.normaliseWhitespace("R<IjczPdvcH`");
      cDataNode0.attributes();
      Element element0 = document0.body();
      element0.nodeName();
      Element element1 = element0.before(".");
      document0.text();
      element0.dataNodes();
      document0.absUrl("R<IjczPdvcH`");
      element1.val();
      document0.nodeName();
      element0.parents();
      document0.data();
      element1.children();
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("/-%yt1W$3", "/-%yt1W$3");
      Document document1 = document0.clone();
      Document document2 = document1.normalise();
      Element element0 = document0.doClone(document2);
      document0.getElementsByIndexGreaterThan((-193));
      element0.nodeName();
      Document document3 = document0.clone();
      document3.text("class");
      element0.appendText("/-%yt1W$3");
      // Undeclared exception!
      try { 
        document2.lastElementSibling();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d69~\"vK5GK,PY%SsyVX", "d69~\"vK5GK,PY%SsyVX");
      Document document1 = document0.clone();
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.quirks;
      Document document2 = document1.quirksMode(document_QuirksMode0);
      Element element0 = document2.body();
      element0.nodeName();
      Element element1 = document0.text("body");
      Element element2 = document0.appendText(")c(<]ev,N* G");
      Element element3 = new Element("html");
      element3.outerHtml();
      element0.appendChild(element2);
      document0.nextElementSiblings();
      document2.addClass("body");
      document2.getAllElements();
      element1.val("<html></html>");
      element2.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.select.StructuralEvaluator", "org.jsoup.select.StructuralEvaluator");
      FileSystemHandling.shouldAllThrowIOExceptions();
      TextNode textNode0 = new TextNode("org.jsoup.select.StructuralEvaluator", "org.jsoup.select.StructuralEvaluator");
      CDataNode cDataNode0 = new CDataNode("id");
      document0.body();
      Elements elements0 = document0.getElementsMatchingText(" ");
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag0 = Tag.valueOf(">&#GI't*qu MYPT>'", parseSettings0);
      Attributes attributes0 = cDataNode0.attributes();
      Attributes attributes1 = attributes0.clone();
      Attribute attribute0 = Attribute.createFromEncoded("org.jsoup.select.StructuralEvaluator", "YPGP7?1fZ8PW{1=");
      Attributes attributes2 = attributes1.put(attribute0);
      FormElement formElement0 = new FormElement(tag0, ">&#GI't*qu MYPT>'", attributes2);
      formElement0.insertChildren((-1), (Collection<? extends Node>) elements0);
      document0.getElementsContainingOwnText("body");
      formElement0.getAllElements();
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d69~\"vK5GK,,Y%SsyVX", "d69~\"vK5GK,,Y%SsyVX");
      Element element0 = document0.doClone(document0);
      Document document1 = (Document)element0.appendChild(document0);
      document1.parents();
      document1.getAllElements();
      document0.text();
      element0.textNodes();
      // Undeclared exception!
      document1.wrap("d69~\"vK5GK,,Y%SsyVX");
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.select.StructuralEvaluator", "org.jsoup.select.StructuralEvaluator");
      document0.hasText();
      TextNode textNode0 = new TextNode("org.jsoup.select.StructuralEvaluator", "org.jsoup.select.StructuralEvaluator");
      document0.outerHtml();
      Element element0 = document0.appendChild(textNode0);
      Document document1 = new Document("<html>\n <head></head>\n <body>\n  org.jsoup.select.StructuralEvaluator\n </body>\n</html>");
      element0.nextElementSibling();
      CDataNode cDataNode0 = new CDataNode("org.jsoup.select.StructuralEvaluator");
      Node node0 = cDataNode0.doClone(document1);
      // Undeclared exception!
      try { 
        document0.appendChild(node0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("0&", "0&");
      Document document1 = document0.normalise();
      Tag tag0 = Tag.valueOf("i[FEUIktK'iJ-V@#|I");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "J?S<rH+/");
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("h7$5E;z</?A", "*y3X$%!!", attributes0);
      Attributes attributes1 = attributes0.put(attribute0);
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "g1S-r", attributes1);
      Element element0 = document1.doClone(pseudoTextElement0);
      document1.append("*y3X$%!!");
      document1.getElementsByIndexGreaterThan((-1618280579));
      StringWriter stringWriter0 = new StringWriter(353);
      element0.toggleClass("h7$5E;z</?A");
      element0.nextElementSiblings();
      element0.getElementsByClass("i[FEUIktK'iJ-V@#|I");
      document1.addClass("UUsHFvaw>r_WF");
      pseudoTextElement0.previousElementSibling();
      document1.appendElement("*y3X$%!!");
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.select.StructuralEvaluator", "org.jsoup.select.StructuralEvaluator");
      document0.hasText();
      TextNode textNode0 = new TextNode("org.jsoup.select.StructuralEvaluator", "org.jsoup.select.StructuralEvaluator");
      document0.outerHtml();
      Document document1 = (Document)document0.appendChild(textNode0);
      document0.childNodesCopy();
      LinkedList<PseudoTextElement> linkedList0 = new LinkedList<PseudoTextElement>();
      Document document2 = (Document)document0.attr("<html>\n <head></head>\n <body>\n  org.jsoup.select.StructuralEvaluator\n </body>\n</html>", "R<IjczPdvcH`");
      document2.title("<html>\n <head></head>\n <body>\n  org.jsoup.select.StructuralEvaluator\n </body>\n</html>");
      document1.doClone(document2);
      Document document3 = Document.createShell("org.jsoup.select.StructuralEvaluator");
      document0.getElementsMatchingText("R<IjczPdvcH`");
      document1.previousElementSibling();
      document3.getAllElements();
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d69~\"vK5GK,PY%SsyVX", "d69~\"vK5GK,PY%SsyVX");
      Document document1 = document0.normalise();
      Pattern pattern0 = Pattern.compile("d69~\"vK5GK,PY%SsyVX", (-316));
      document0.getElementsByAttributeValueMatching("d69~\"vK5GK,PY%SsyVX", pattern0);
      Element element0 = document0.doClone(document1);
      element0.getElementsByIndexGreaterThan((-1010136971));
      StringWriter stringWriter0 = new StringWriter(243);
      document0.normalise();
      Element element1 = document0.appendChild(element0);
      element1.nextElementSiblings();
      Document document2 = (Document)document0.addClass("d69~\"vK5GK,PY%SsyVX");
      document2.nodelistChanged();
      element0.getAllElements();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.outline(false);
      Document.OutputSettings document_OutputSettings2 = document_OutputSettings1.prettyPrint(false);
      US_ASCII uS_ASCII0 = (US_ASCII)Charset.defaultCharset();
      Document.OutputSettings document_OutputSettings3 = document_OutputSettings2.charset((Charset) uS_ASCII0);
      Document.OutputSettings.Syntax document_OutputSettings_Syntax0 = Document.OutputSettings.Syntax.html;
      Document.OutputSettings document_OutputSettings4 = document_OutputSettings3.syntax(document_OutputSettings_Syntax0);
      document1.outerHtmlHead(stringWriter0, (-2013), document_OutputSettings4);
      // Undeclared exception!
      try { 
        document0.getElementsMatchingOwnText("textarea");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d69~\"vK5GK,PY%SsyVX", "d69~\"vK5GK,PY%SsyVX");
      Document document1 = document0.clone();
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.quirks;
      Document document2 = document1.quirksMode(document_QuirksMode0);
      Element element0 = document2.body();
      element0.nodeName();
      document0.text("body");
      Element element1 = document0.appendText(")c(<]ev,N* G");
      element1.siblingElements();
      Element element2 = new Element("html");
      element2.outerHtml();
      document2.doClone(element1);
      Document.createShell(")c(<]ev,N* G");
      Document document3 = Parser.parseBodyFragment("<html></html>", "d69~\"vK5GK,PY%SsyVX");
      document3.getElementsMatchingText("");
      document2.previousElementSibling();
      document0.getAllElements();
      // Undeclared exception!
      try { 
        document2.getElementsByAttributeValue("~", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      Parser parser1 = parser0.settings(parseSettings0);
      Document document0 = parser1.parseInput("Pattern syntax error: ", "<*EKaGJSQ:HHcq^k>(c");
      Document document1 = document0.clone();
      Document document2 = document1.parser(parser0);
      document2.hasAttributes();
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("0&", "0&");
      CDataNode cDataNode0 = new CDataNode("0&");
      cDataNode0.attributes();
      Element element0 = document0.body();
      element0.nodeName();
      element0.before(".");
      int int0 = 577;
      List<DataNode> list0 = element0.dataNodes();
      // Undeclared exception!
      try { 
        element0.insertChildren((-1596), (Collection<? extends Node>) list0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("JXe~Z9kjOn|", "JXe~Z9kjOn|");
      CDataNode cDataNode0 = new CDataNode("JXe~Z9kjOn|");
      CDataNode cDataNode1 = new CDataNode("JXe~Z9kjOn|");
      cDataNode1.attributes();
      String string0 = ".";
      Element element0 = document0.body();
      document0.nodeName();
      element0.before("");
      document0.getElementsMatchingText("seQCTcD");
      document0.getElementsByTag("#");
      document0.normalise();
      // Undeclared exception!
      try { 
        document0.toggleClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("0&", "0&");
      CDataNode cDataNode0 = new CDataNode("0&");
      cDataNode0.attributes();
      Element element0 = document0.body();
      Document document1 = Document.createShell(".");
      Elements elements0 = document1.getElementsMatchingText("0&");
      document0.insertChildren((-1), (Collection<? extends Node>) elements0);
      document0.getElementsContainingOwnText("C9LD8k=H-YIEw");
      element0.getAllElements();
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Document document0 = Document.createShell("bo");
      Parser parser0 = Parser.xmlParser();
      Document document1 = document0.parser(parser0);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Charset charset0 = Charset.defaultCharset();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.charset(charset0);
      Entities.EscapeMode entities_EscapeMode0 = Entities.EscapeMode.extended;
      Document.OutputSettings document_OutputSettings2 = document_OutputSettings1.escapeMode(entities_EscapeMode0);
      Document.OutputSettings document_OutputSettings3 = document_OutputSettings2.prettyPrint(true);
      Document document2 = document1.outputSettings(document_OutputSettings3);
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = (Node) document1;
      nodeArray0[1] = (Node) document0;
      document2.addChildren(nodeArray0);
      document1.body();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        document0.after((Node) document1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("0&", "0&");
      CDataNode cDataNode0 = new CDataNode("0&");
      cDataNode0.attributes();
      Element element0 = document0.body();
      Elements elements0 = document0.getElementsMatchingText("Vn");
      Element element1 = element0.insertChildren((-1), (Collection<? extends Node>) elements0);
      document0.getElementsContainingOwnText("0&");
      element1.getAllElements();
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(" > ", "progress");
      Element element0 = document0.head();
      Element element1 = element0.toggleClass("progress");
      element1.nextElementSiblings();
      document0.getElementsMatchingText(" > ");
      document0.getElementsContainingOwnText("Vn");
      element1.addClass("-->");
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d69~\"vK5GK,PY%SsyVX", "d69~\"vK5GK,PY%SsyVX");
      Document document1 = document0.clone();
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.quirks;
      Document document2 = document1.quirksMode(document_QuirksMode0);
      Element element0 = document2.body();
      element0.nodeName();
      document0.text("body");
      Element element1 = document0.appendText(")c(<]ev,N* G");
      Element element2 = new Element("html");
      element2.outerHtml();
      element0.appendChild(element1);
      document0.nextElementSiblings();
      document2.addClass("body");
      document2.getAllElements();
      document2.getElementsMatchingOwnText("bo");
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("0&", "0&");
      CDataNode cDataNode0 = new CDataNode("0&");
      cDataNode0.attributes();
      Element element0 = document0.body();
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.limitedQuirks;
      Document document1 = document0.quirksMode(document_QuirksMode0);
      document0.text();
      element0.html("0&");
      document1.text("0&");
      document1.getElementsContainingText("0&");
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("z\"BOPOAG<bOBJo", "z\"BOPOAG<bOBJo");
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = (Node) document0;
      nodeArray0[1] = (Node) document0;
      nodeArray0[2] = (Node) document0;
      document0.addChildren(nodeArray0);
      Element element0 = document0.body();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      document0.after((Node) element0);
      element0.lastElementSibling();
      String string0 = "MRVM\\4Q|*<f";
      // Undeclared exception!
      document0.attr("z\"BOPOAG<bOBJo", "MRVM\u0004Q|*<f");
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "F%Yq&PxZ`.9yjlemG7");
      Document document0 = Parser.parseBodyFragment("d69~\"vK5GK,PY%SsyVX", "d69~\"vK5GK,PY%SsyVX");
      Document document1 = document0.clone();
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.quirks;
      Document document2 = document1.quirksMode(document_QuirksMode0);
      Element element0 = document2.body();
      element0.nodeName();
      Element element1 = element0.before("d69~\"vK5GK,PY%SsyVX");
      Element element2 = document2.appendText("body");
      element2.outerHtml();
      Document.createShell("org.jsoup.select.Evaluator$IndexEvaluator");
      Document.QuirksMode document_QuirksMode1 = Document.QuirksMode.noQuirks;
      element1.previousElementSiblings();
      Document document3 = document0.quirksMode(document_QuirksMode1);
      element1.text();
      Element element3 = document2.html("org.jsoup.nodes.Element$2");
      document3.text("br");
      element3.getElementsContainingText("d69~\"vK5GK,PY%SsyVX");
      document2.children();
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.select.StructuralEvaluator", "org.jsoup.select.StructuralEvaluator");
      document0.hasText();
      TextNode textNode0 = new TextNode("x)t,nf&S7s\",^<y", "org.jsoup.select.StructuralEvaluator");
      document0.outerHtml();
      Document document1 = (Document)document0.appendChild(textNode0);
      document0.childNodesCopy();
      LinkedList<PseudoTextElement> linkedList0 = new LinkedList<PseudoTextElement>();
      Document document2 = (Document)document0.attr(" ?/\"^@8hy", "R<IjczPdvcH`");
      Object object0 = new Object();
      document2.hasSameValue(object0);
      document1.doClone(document2);
      Document document3 = Document.createShell("x)t,nf&S7s\",^<y");
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.noQuirks;
      Document document4 = document0.quirksMode(document_QuirksMode0);
      document4.text();
      document3.html("<html>\n <head></head>\n <body>\n  org.jsoup.select.StructuralEvaluator\n </body>\n</html>");
      Document document5 = (Document)document0.text("x)t,nf&S7s\",^<y");
      document5.getElementsContainingText("& ;X*RLE\"GL^EDC=0");
      Element.preserveWhitespace(textNode0);
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("/-%yt1W$3", "/-%yt1W$3");
      Charset.defaultCharset();
      Element element0 = document0.createElement("&lt;");
      Element element1 = document0.appendTo(element0);
      element1.elementSiblingIndex();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      String string0 = Node.EmptyString;
      document0.getElementsContainingOwnText("");
      Element element2 = document0.body();
      element2.getAllElements();
      element2.getElementById("systemId");
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.select.StructuralEvaluator", "org.jsoup.select.StructuralEvaluator");
      document0.hasText();
      TextNode textNode0 = new TextNode("x)t,nf&S7s\",^<y", "org.jsoup.select.StructuralEvaluator");
      document0.outerHtml();
      Document document1 = (Document)document0.appendChild(textNode0);
      document0.childNodesCopy();
      document1.ensureChildNodes();
      LinkedList<PseudoTextElement> linkedList0 = new LinkedList<PseudoTextElement>();
      Document document2 = (Document)document0.attr(" ?/\"^@8hy", "R<IjczPdvcH`");
      document1.doClone(document2);
      Document document3 = Document.createShell("x)t,nf&S7s\",^<y");
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.noQuirks;
      Document document4 = document0.quirksMode(document_QuirksMode0);
      document4.text();
      document3.html("<html>\n <head></head>\n <body>\n  org.jsoup.select.StructuralEvaluator\n </body>\n</html>");
      Document document5 = (Document)document0.text("x)t,nf&S7s\",^<y");
      document5.getElementsContainingText("& ;X*RLE\"GL^EDC=0");
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      String string0 = "0&";
      Document document0 = Parser.parseBodyFragment("0&", "0&");
      CDataNode cDataNode0 = new CDataNode("0&");
      cDataNode0.attributes();
      Element element0 = document0.body();
      element0.nodeName();
      element0.appendChild(cDataNode0);
      List<Node> list0 = document0.childNodesCopy();
      LinkedList<PseudoTextElement> linkedList0 = new LinkedList<PseudoTextElement>();
      // Undeclared exception!
      try { 
        element0.insertChildren(2280, (Collection<? extends Node>) list0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      String string0 = "z\"BOPOAG<bOBJo";
      Document document0 = Parser.parseBodyFragmentRelaxed("z\"BOPOAG<bOBJo", "z\"BOPOAG<bOBJo");
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = (Node) document0;
      nodeArray0[1] = (Node) document0;
      nodeArray0[2] = (Node) document0;
      document0.addChildren(nodeArray0);
      Element element0 = document0.body();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      document0.after((Node) element0);
      int int0 = 178;
      Element element1 = element0.lastElementSibling();
      Elements elements0 = element1.getElementsByTag("z\"BOPOAG<bOBJo");
      // Undeclared exception!
      try { 
        element0.insertChildren(178, (Collection<? extends Node>) elements0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("/-%yt1W$3", "/-%yt1W$3");
      Charset.defaultCharset();
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.noQuirks;
      Document document1 = document0.quirksMode(document_QuirksMode0);
      Element element0 = document1.body();
      element0.nodeName();
      element0.before(",It$.&pZ/3*T<yO_");
      // Undeclared exception!
      try { 
        document1.appendText((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("/-%yt1W$3", "/-%yt1W$3");
      Charset.defaultCharset();
      Element element0 = document0.createElement("&lt;");
      Element element1 = document0.appendTo(element0);
      Element element2 = document0.doClone(element1);
      element2.unwrap();
      Document document1 = Document.createShell("/-%yt1W$3");
      element2.text();
      element0.html("jtQ0y;=Y17{Gm");
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.limitedQuirks;
      Document document2 = document1.quirksMode(document_QuirksMode0);
      document2.prepend("Insert position out of bounds.");
      Document document3 = (Document)document2.text("/-%yt1W$3");
      document1.getElementsContainingText("jtQ0y;=Y17{Gm");
      PipedWriter pipedWriter0 = new PipedWriter();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.outline(true);
      Entities.EscapeMode entities_EscapeMode0 = Entities.EscapeMode.xhtml;
      Document.OutputSettings document_OutputSettings2 = document_OutputSettings1.escapeMode(entities_EscapeMode0);
      Document.OutputSettings.Syntax document_OutputSettings_Syntax0 = Document.OutputSettings.Syntax.xml;
      Document.OutputSettings document_OutputSettings3 = document_OutputSettings2.syntax(document_OutputSettings_Syntax0);
      try { 
        document3.outerHtmlHead(pipedWriter0, 8249, document_OutputSettings3);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("/-%yt1W$3", "/-%yt1W$3");
      Document document1 = document0.clone();
      Document document2 = document1.normalise();
      Element element0 = document0.doClone(document2);
      document0.getElementsByIndexGreaterThan((-193));
      StringWriter stringWriter0 = new StringWriter(25);
      Element element1 = element0.toggleClass(";0");
      document0.nextElementSiblings();
      element0.getElementsByClass("bV'wfG0,8@-iiyOTr");
      Element element2 = document2.addClass("#root");
      element1.previousElementSibling();
      Element.preserveWhitespace(element2);
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d69~\"vK5GK,PY%SsyVX", "d69~\"vK5GK,PY%SsyVX");
      Document document1 = document0.normalise();
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = (Node) document0;
      nodeArray0[1] = (Node) document1;
      nodeArray0[2] = (Node) document0;
      document1.addChildren(nodeArray0);
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.quirks;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Document document2 = document1.quirksMode(document_QuirksMode0);
      Element element0 = document2.body();
      element0.nodeName();
      // Undeclared exception!
      element0.before("d69~\"vK5GK,PY%SsyVX");
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("0&", "0&");
      CDataNode cDataNode0 = new CDataNode("0&");
      Attributes attributes0 = cDataNode0.attributes();
      attributes0.hasKeyIgnoreCase(".");
      Document document1 = (Document)document0.attr(".", "            ");
      document1.doClone(cDataNode0);
      Document document2 = Document.createShell(".");
      document1.text();
      document2.html("header");
      document0.createElement("0&");
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      linkedHashSet0.add(":-\"'QDAt^01#g02");
      document2.classNames((Set<String>) linkedHashSet0);
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d69~\"vK5GK,PY%SsyVX", "d69~\"vK5GK,PY%SsyVX");
      Document document1 = document0.clone();
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.quirks;
      Document document2 = document1.quirksMode(document_QuirksMode0);
      Element element0 = document2.body();
      String string0 = Node.EmptyString;
      Element element1 = element0.before("d69~\"vK5GK,PY%SsyVX");
      Element element2 = document2.appendText("");
      element2.outerHtml();
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = (Node) element1;
      nodeArray0[1] = (Node) element1;
      nodeArray0[2] = (Node) document1;
      nodeArray0[3] = (Node) document0;
      nodeArray0[4] = (Node) element2;
      nodeArray0[5] = (Node) element1;
      document2.children();
      nodeArray0[6] = (Node) element2;
      nodeArray0[7] = (Node) document1;
      // Undeclared exception!
      try { 
        element0.insertChildren(1, nodeArray0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 3, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.select.StructuralEvaluator", "org.jsoup.select.StructuralEvaluator");
      document0.hasText();
      TextNode textNode0 = new TextNode("x)t,nf&S7s\",^<y", "org.jsoup.select.StructuralEvaluator");
      document0.outerHtml();
      Element element0 = document0.appendChild(textNode0);
      document0.childNodesCopy();
      LinkedList<PseudoTextElement> linkedList0 = new LinkedList<PseudoTextElement>();
      element0.val();
      document0.getAllElements();
      element0.wholeText();
      element0.getElementsByIndexLessThan(31);
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("/-%yt1W$3", "/-%yt1W$3");
      CDataNode cDataNode0 = new CDataNode(")E \"Oe[$L7$");
      Attributes attributes0 = cDataNode0.attributes();
      attributes0.hasKeyIgnoreCase("/-%yt1W$3");
      Document document1 = (Document)document0.attr("6*<~UjO[l5bX|Dty)", "/-%yt1W$3");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)46;
      byteArray0[1] = (byte)39;
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte)14;
      byteArray0[4] = (byte)6;
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte)1;
      byteArray0[7] = (byte)6;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      TextNode textNode0 = TextNode.createFromEncoded(".j'nt&<z}|(K#N0Np");
      Document document2 = (Document)document1.doClone(textNode0);
      Document document3 = Document.createShell(")E \"Oe[$L7$");
      document0.text();
      document3.html("header");
      document3.createElement("/-%yt1W$3");
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Locale locale0 = Locale.ENGLISH;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      document0.classNames(set0);
      // Undeclared exception!
      try { 
        document2.nextElementSiblings();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("0&", "0&");
      CDataNode cDataNode0 = new CDataNode("0&");
      cDataNode0.attributes();
      Element element0 = document0.body();
      element0.nodeName();
      element0.before(".");
      document0.getElementsMatchingText("Vn");
      document0.getElementsByTag("body");
      Document document1 = document0.normalise();
      document1.toggleClass(".");
      document1.getElementsByTag("Vn");
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.select.StructuralEvaluator", "org.jsoup.select.StructuralEvaluator");
      CDataNode cDataNode0 = new CDataNode("s+");
      Attributes attributes0 = cDataNode0.attributes();
      attributes0.hasKeyIgnoreCase("/o7|fid[ERfVV");
      Element element0 = document0.attr(".", "");
      Element element1 = document0.createElement("org.jsoup.select.StructuralEvaluator");
      element1.doClone(element0);
      Document document1 = Document.createShell("org.jsoup.select.StructuralEvaluator");
      element0.text();
      document1.html("/o7|fid[ERfVV");
      Document document2 = Document.createShell(";zR6JZ");
      Element element2 = document2.createElement(".");
      element2.attributes();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      document0.classNames((Set<String>) linkedHashSet0);
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(" > ", "progress");
      Element element0 = document0.head();
      element0.getElementsByAttribute(" > ");
      CDataNode cDataNode0 = new CDataNode(" > ");
      Attributes attributes0 = cDataNode0.attributes();
      Attributes attributes1 = attributes0.clone();
      attributes1.hasKeyIgnoreCase("b0r");
      attributes1.removeIgnoreCase("/#Y.Rijnbi5ra,&Q\"");
      document0.getElementsByTag("progress");
      Element element1 = document0.text("progress");
      document0.data();
      Document document1 = new Document("");
      Element element2 = element1.append("progress");
      document0.getElementsByAttributeStarting(" > ");
      element2.textNodes();
      document0.getElementsMatchingOwnText("");
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d69~\"vK5GK,PY%SsyVX", "d69~\"vK5GK,PY%SsyVX");
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.quirks;
      Document document1 = document0.quirksMode(document_QuirksMode0);
      document1.prependElement("d69~\"vK5GK,PY%SsyVX");
      document1.doSetBaseUri("body");
      Element element0 = document1.body();
      Element element1 = element0.before("d69~\"vK5GK,PY%SsyVX");
      element1.cssSelector();
      element1.getElementsByAttributeValueNot("d69~\"vK5GK,PY%SsyVX", "SA<");
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d69~\"vK5GK,PY%SsyVX", "d69~\"vK5GK,PY%SsyVX");
      Document document1 = document0.normalise();
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.quirks;
      Document document2 = document1.quirksMode(document_QuirksMode0);
      Element element0 = document2.body();
      element0.nodeName();
      element0.before("d69~\"vK5GK,PY%SsyVX");
      Element element1 = document2.appendText("body");
      Element element2 = document0.doClone(document1);
      element2.outerHtml();
      element2.appendChild(element0);
      document2.childNodesCopy();
      LinkedList<PseudoTextElement> linkedList0 = new LinkedList<PseudoTextElement>();
      Document document3 = (Document)document0.attr("<html>\n <head></head>\n <head></head>\n <body>\n  d69~\"vK5GK,PY%SsyVX\n </body>\n <body>\n  d69~\"vK5GK,PY%SsyVX\n </body>\n</html>body", "R<IjczPdvcH`");
      document3.doClone(element0);
      Document document4 = Document.createShell("d69~\"vK5GK,PY%SsyVX");
      document4.text();
      element0.html("");
      element1.text(" ?/\"^@8hy");
      document0.getElementsContainingText(",ofeTVg");
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      document3.classNames((Set<String>) linkedHashSet0);
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d69~\"vK5GK,PY%SsyVX", "d69~\"vK5GK,PY%SsyVX");
      CDataNode cDataNode0 = new CDataNode("&XtmT-'>~){]sSeR");
      Node node0 = cDataNode0.shallowClone();
      document0.setParentNode(node0);
      document0.clone();
      LinkedList<PseudoTextElement> linkedList0 = new LinkedList<PseudoTextElement>();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document_OutputSettings0.indentAmount(42);
      Document.createShell("VCSp(N1;/MUig}p");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText("&XtmT-'>~){]sSeR");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pattern syntax error: &XtmT-'>~){]sSeR
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("cqw+nWcn?<", "LS,");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Charset charset0 = Charset.defaultCharset();
      Charset.defaultCharset();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.charset(charset0);
      document0.previousElementSiblings();
      Document document1 = document0.outputSettings(document_OutputSettings1);
      Element element0 = document0.body();
      Element element1 = element0.appendTo(document0);
      Pattern pattern0 = Pattern.compile("LS,", 0);
      element0.siblingNodes();
      document0.getElementsMatchingText(pattern0);
      element1.childNodeSize();
      Element element2 = document1.addClass("#root");
      document0.previousElementSibling();
      element2.prependText("5$bg#:89W\"$YMC3n");
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("/-%yt1W$3", "/-%yt1W$3");
      Document document1 = document0.clone();
      Document document2 = document1.normalise();
      Document document3 = (Document)document0.doClone(document2);
      document0.getElementsByIndexGreaterThan((-193));
      StringWriter stringWriter0 = new StringWriter(25);
      document3.toggleClass(";0");
      document0.nextElementSiblings();
      document3.getElementsByClass("bV'wfG0,8@-iiyOTr");
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.noQuirks;
      Document document4 = document3.quirksMode(document_QuirksMode0);
      Pattern pattern0 = Pattern.compile(")?}s`\"[BzSyruM", 25);
      pattern0.split((CharSequence) "/-%yt1W$3");
      document4.getElementsMatchingOwnText(pattern0);
      document4.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d69~\"vK5GK,PY%SsyVX", "d69~\"vK5GK,PY%SsyVX");
      Document document1 = document0.normalise();
      Charset.defaultCharset();
      Charset charset0 = Charset.defaultCharset();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.prettyPrint(false);
      document_OutputSettings1.charset(charset0);
      document0.previousElementSiblings();
      document0.outputSettings(document_OutputSettings0);
      Element element0 = document0.body();
      Element element1 = element0.appendTo(document1);
      element1.setBaseUri("d69~\"vK5GK,PY%SsyVX");
      Pattern pattern0 = Pattern.compile("d69~\"vK5GK,PY%SsyVX", 22);
      document1.getElementsMatchingText(pattern0);
      element0.childNodeSize();
      document0.getElementsMatchingOwnText(pattern0);
      element1.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("/-%yt1W$3", "/-%yt1W$3");
      document0.html("/-%yt1W$3");
      int int0 = 0;
      Document document1 = Parser.parseBodyFragmentRelaxed("\"}o,Xn!9P9", "cite");
      document1.getElementsByIndexEquals(0);
      document1.wholeText();
      Attributes attributes0 = new Attributes();
      attributes0.removeIgnoreCase("/-%yt1W$3");
      document1.getElementsByTag("t*%+6e<");
      document1.text("/-%yt1W$3");
      document0.data();
      Document document2 = new Document("caj3");
      // Undeclared exception!
      try { 
        document2.append((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d69~\"vK5GK,PY%SsyVX", "d69~\"vK5GK,PY%SsyVX");
      Document document1 = Parser.parseBodyFragment("d69~\"vK5GK,PY%SsyVX", "d69~\"vK5GK,PY%SsyVX");
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.quirks;
      Document document2 = document1.quirksMode(document_QuirksMode0);
      Element element0 = document2.body();
      element0.nodeName();
      element0.doClone(document1);
      document2.head();
      Element element1 = element0.toggleClass("?ObUO");
      element1.nextElementSiblings();
      document0.siblingElements();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      document0.getAllElements();
      document0.tag();
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("cqw+nWcn?<", "LS,");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Charset charset0 = Charset.defaultCharset();
      Charset.defaultCharset();
      document_OutputSettings0.charset(charset0);
      document0.previousElementSiblings();
      Element element0 = document0.text("LS,");
      Pattern pattern0 = Pattern.compile("LS,", 0);
      element0.getElementsByAttributeValueMatching("LS,", pattern0);
      element0.childNodeSize();
      document0.getElementsMatchingOwnText(pattern0);
      // Undeclared exception!
      try { 
        document0.firstElementSibling();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("'+q", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("(,jA>W)v]K(;yA, n");
      Attributes attributes0 = cDataNode0.attributes();
      Attributes attributes1 = attributes0.put("Tag name must not be empty.", false);
      FormElement formElement0 = new FormElement(tag0, "'+q", attributes1);
      Document document0 = Parser.parseBodyFragmentRelaxed("[%s]", "=bX'q0)&");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings.Syntax document_OutputSettings_Syntax0 = Document.OutputSettings.Syntax.html;
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.syntax(document_OutputSettings_Syntax0);
      Document document1 = document0.outputSettings(document_OutputSettings1);
      FormElement formElement1 = formElement0.addElement(document1);
      formElement1.isBlock();
      document1.append("_YgOILd6Z");
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(" > ", "progress");
      Element element0 = document0.head();
      Element element1 = element0.toggleClass("progress");
      element1.nextElementSiblings();
      element1.getElementsByClass("bXMt1^fw1!8K= ");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      element0.getAllElements();
      element0.after((Node) document0);
      element1.hasClass(",3WQC]4i+Nuxu");
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("cqw+nWcn?<", "LS,");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Charset charset0 = Charset.defaultCharset();
      Charset.defaultCharset();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.charset(charset0);
      document0.previousElementSiblings();
      Document document1 = document0.outputSettings(document_OutputSettings1);
      Element element0 = document0.body();
      Element element1 = document0.createElement(".=yIq4{");
      element1.className();
      document1.getElementsByAttributeValue("DOCTYPE", "`r");
      document1.attr("i9O59u?2}J", "");
      Document.OutputSettings document_OutputSettings2 = new Document.OutputSettings();
      Document document2 = document0.outputSettings(document_OutputSettings1);
      document2.createElement("s$1umjEPf8pZ]RR");
      element0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("/-%yt1W$3", "/-%yt1W$3");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document_OutputSettings0.prettyPrint(true);
      document_OutputSettings0.prettyPrint(false);
      String string0 = "_]%D.xX";
      Document document1 = Parser.parse("_]%D.xX", "/-%yt1W$3");
      document1.tagName();
      document0.val();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("#root");
      // Undeclared exception!
      try { 
        document0.appendTo((Element) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("/-%yt1W$3", "/-%yt1W$3");
      Charset.defaultCharset();
      document0.createElement("&lt;");
      Parser parser0 = Parser.xmlParser();
      StringReader stringReader0 = new StringReader("~kO%eOhI");
      Document document1 = parser0.parseInput((Reader) stringReader0, "~kO%eOhI");
      Element element0 = document1.appendTo(document0);
      document1.addClass("");
      element0.previousElementSibling();
      // Undeclared exception!
      try { 
        element0.prepend((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("/-%yt1W$3", "/-%yt1W$3");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document_OutputSettings0.prettyPrint(true);
      document_OutputSettings0.prettyPrint(false);
      Document document1 = Parser.parse("_]%D.xX", "/-%yt1W$3");
      document1.tagName();
      document0.val();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("#root");
      Parser.xmlParser();
      StringReader stringReader0 = new StringReader("/-%yt1W$3");
      document0.getElementsMatchingText("/");
      document1.getElementsByTag("summary");
      Element element0 = document1.toggleClass("P#PuTFhy");
      document1.getElementsContainingOwnText("#root");
      // Undeclared exception!
      try { 
        element0.classNames((Set<String>) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      String string0 = "cqw+nWcn?<";
      CDataNode cDataNode0 = new CDataNode("k,~PozCL");
      Attributes attributes0 = cDataNode0.attributes();
      attributes0.normalize();
      attributes0.hasKeyIgnoreCase("cqw+nWcn?<");
      attributes0.removeIgnoreCase("k,~PozCL");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document document0 = Parser.parse("cqw+nWcn?<", "cqw+nWcn?<");
      String string1 = Node.EmptyString;
      document0.val();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("LS,");
      Parser.xmlParser();
      StringReader stringReader0 = new StringReader("k,~PozCL");
      document0.getElementsByClass("image");
      // Undeclared exception!
      try { 
        document0.removeClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("k,~PozCL");
      Attributes attributes0 = cDataNode0.attributes();
      attributes0.normalize();
      attributes0.hasKeyIgnoreCase("cqw+nWcn?<");
      attributes0.removeIgnoreCase("k,~PozCL");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document document0 = Parser.parse("cqw+nWcn?<", "cqw+nWcn?<");
      document0.tagName();
      LinkedList<PseudoTextElement> linkedList0 = new LinkedList<PseudoTextElement>();
      Document document1 = document0.ownerDocument();
      Document document2 = (Document)document1.attr("kf", " ?/\"^@8hy");
      Document document3 = (Document)document2.doClone(document0);
      Document.createShell("");
      document3.text();
      Parser parser0 = Parser.xmlParser();
      Document document4 = parser0.parseInput("OsN\"MO'$%vkO", "kf");
      document4.html("cqw+nWcn?<");
      Element element0 = document1.body();
      element0.text("cqw+nWcn?<");
      document0.getElementsContainingText("5e:]vi");
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d69~\"vK5GK,PY%SsyVX", "d69~\"vK5GK,PY%SsyVX");
      Document document1 = document0.normalise();
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.quirks;
      Document document2 = document1.quirksMode(document_QuirksMode0);
      Element element0 = document2.body();
      element0.nodeName();
      element0.before("d69~\"vK5GK,PY%SsyVX");
      Element element1 = document2.appendText("body");
      Element element2 = document0.doClone(document1);
      element2.outerHtml();
      element2.appendChild(element0);
      document2.childNodesCopy();
      element1.val();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("body");
      Parser parser0 = Parser.xmlParser();
      StringReader stringReader0 = new StringReader("Pattern syntax error: ");
      parser0.parseInput((Reader) stringReader0, "Pattern syntax error: ");
      document2.appendTo(element2);
      document2.addClass("-]y mu+#GfA");
      document0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("k,~PozCL");
      Attributes attributes0 = cDataNode0.attributes();
      attributes0.normalize();
      attributes0.hasKeyIgnoreCase("cqw+nWcn?<");
      attributes0.removeIgnoreCase("k,~PozCL");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document document0 = Parser.parse("cqw+nWcn?<", "cqw+nWcn?<");
      document0.tagName();
      document0.val();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("LS,");
      Parser parser0 = Parser.xmlParser();
      StringReader stringReader0 = new StringReader("k,~PozCL");
      Parser.parseBodyFragment("#root", "k,~PozCL");
      Document document1 = parser0.parseInput((Reader) stringReader0, "M,g_:@");
      Element element0 = document0.appendTo(document1);
      Element element1 = document0.addClass("LS,");
      element1.previousElementSibling();
      // Undeclared exception!
      try { 
        element0.html((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("/-%yt1W$3", "/-%yt1W$3");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document_OutputSettings0.prettyPrint(true);
      document_OutputSettings0.prettyPrint(false);
      Document document1 = Parser.parse("_]%D.xX", "/-%yt1W$3");
      document1.tagName();
      document0.val();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("#root");
      Parser parser0 = Parser.xmlParser();
      StringReader stringReader0 = new StringReader("/-%yt1W$3");
      parser0.parseInput((Reader) stringReader0, "I\"?");
      Element element0 = document1.appendTo(document0);
      Element element1 = document1.addClass("yA2");
      element0.previousElementSibling();
      element1.prepend("xI>");
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      String string0 = "/-%yt1W$3\\";
      Document document0 = Parser.parseBodyFragmentRelaxed("/-%yt1W$3", "/-%yt1W$3");
      document0.html("/-%yt1W$3");
      int int0 = 0;
      Document document1 = Parser.parseBodyFragmentRelaxed("\"}o,Xn!9P9", "cite");
      document1.getElementsByIndexEquals(0);
      document1.wholeText();
      String string1 = "d<1\\W+/0)uwNF{";
      Document document2 = Parser.parse("d<1W+/0)uwNF{", "GD5^9");
      document2.elementSiblingIndex();
      document1.attr("cite", "\"}o,Xn!9P9");
      // Undeclared exception!
      try { 
        document1.getElementsMatchingOwnText((Pattern) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$MatchesOwn", e);
      }
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d69~\"vK5GK,PY%SsyVX", "d69~\"vK5GK,PY%SsyVX");
      Document document1 = document0.normalise();
      Element element0 = document0.doClone(document1);
      element0.getElementsByIndexGreaterThan(25);
      StringWriter stringWriter0 = new StringWriter(243);
      document0.toggleClass(";0");
      document0.nextElementSiblings();
      document0.getElementsByClass("bXMt1^fw1!8K= ");
      document0.removeClass("");
      element0.before(";0");
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d69~\"vK5GK,PY%SsyVX", "d69~\"vK5GK,PY%SsyVX");
      Document document1 = document0.normalise();
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.quirks;
      Document document2 = document1.quirksMode(document_QuirksMode0);
      Element element0 = document2.body();
      element0.nodeName();
      element0.before("d69~\"vK5GK,PY%SsyVX");
      document1.getElementsMatchingText("#7O");
      document1.getElementsByTag("InHeadNoscript");
      document2.toggleClass("InHeadNoscript");
      document0.getElementsByTag("InHeadNoscript");
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Document document0 = new Document(" ");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.prettyPrint(true);
      Entities.EscapeMode entities_EscapeMode0 = Entities.EscapeMode.base;
      document_OutputSettings1.escapeMode(entities_EscapeMode0);
      Document document1 = Parser.parseBodyFragment(" ", " ");
      Document document2 = new Document("8!5jl}'6MDst3w");
      Element element0 = document1.appendTo(document2);
      document1.getElementsByAttributeValueMatching("a 7zgperPSGwuz:ye", ":parent%s");
      document1.clone();
      element0.cssSelector();
      Document.createShell("[%s]");
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d69~\"vK5GK,PY%SsyVX", "d69~\"vK5GK,PY%SsyVX");
      Document document1 = document0.normalise();
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.quirks;
      Document document2 = document1.quirksMode(document_QuirksMode0);
      Element element0 = document2.body();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)124;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      element0.nodeName();
      element0.before("d69~\"vK5GK,PY%SsyVX");
      Element element1 = document2.appendText("body");
      Element element2 = document0.doClone(document1);
      element2.outerHtml();
      Element element3 = element2.appendChild(element0);
      document2.childNodesCopy();
      LinkedList<PseudoTextElement> linkedList0 = new LinkedList<PseudoTextElement>();
      Document document3 = (Document)document0.attr("<html>\n <head></head>\n <head></head>\n <body>\n  d69~\"vK5GK,PY%SsyVX\n </body>\n <body>\n  d69~\"vK5GK,PY%SsyVX\n </body>\n</html>body", "R<IjczPdvPH`");
      document3.doClone(element0);
      Document document4 = new Document("<html>\n <head></head>\n <head></head>\n <body>\n  d69~\"vK5GK,PY%SsyVX\n </body>\n <body>\n  d69~\"vK5GK,PY%SsyVX\n </body>\n</html>body");
      document4.text();
      element0.html("");
      element1.text(" ?/\"^@8hy");
      document0.getElementsContainingText(",ofeTVg");
      element3.before((Node) document0);
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d69~\"vK5GK,PY%SsyVX", "d69~\"vK5GK,PY%SsyVX");
      Document document1 = document0.normalise();
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.quirks;
      Document document2 = document1.quirksMode(document_QuirksMode0);
      document2.body();
      document0.getElementsMatchingText("d69~\"vK5GK,PY%SsyVX");
      document2.getElementsByTag("Must be false");
      document0.toggleClass("Must be false");
      document1.getElementsByTag("$N^7Hhav}HQ<\"4)");
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("body");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Tag tag0 = Tag.valueOf("body");
      CDataNode cDataNode0 = new CDataNode("");
      Attributes attributes0 = cDataNode0.attributes();
      Attribute attribute0 = new Attribute("body", "", attributes0);
      Attribute attribute1 = attribute0.clone();
      Attributes attributes1 = attributes0.put(attribute1);
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "body", attributes1);
      pseudoTextElement0.appendText("body");
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      Document document0 = new Document("xI>");
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.limitedQuirks;
      document0.quirksMode(document_QuirksMode0);
      Pattern pattern0 = Pattern.compile("xI>", 512);
      document0.getElementsMatchingOwnText(pattern0);
      document0.tagName("aY&X38KZ!HdNq+");
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d69~\"vK5GK,PY%SsyVX", "d69~\"vK5GK,PY%SsyVX");
      Document document1 = document0.normalise();
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.quirks;
      Document document2 = document1.quirksMode(document_QuirksMode0);
      Element element0 = document2.body();
      element0.nodeName();
      Element element1 = element0.before("d69~\"vK5GK,PY%SsyVX");
      element1.doSetBaseUri("body");
      Document document3 = (Document)document2.appendText("body");
      document3.textNodes();
      Document document4 = (Document)document0.doClone(document1);
      document4.outerHtml();
      document4.appendChild(element0);
      document2.childNodesCopy();
      LinkedList<PseudoTextElement> linkedList0 = new LinkedList<PseudoTextElement>();
      Document document5 = (Document)document0.attr("<html>\n <head></head>\n <head></head>\n <body>\n  d69~\"vK5GK,PY%SsyVX\n </body>\n <body>\n  d69~\"vK5GK,PY%SsyVX\n </body>\n</html>body", "R<IjczPdvcH`");
      document5.doClone(element0);
      Document document6 = Document.createShell("d69~\"vK5GK,PY%SsyVX");
      document6.text();
      Tag.valueOf("h6@!(@Ss");
      Document document7 = document3.normalise();
      Document document8 = document7.ownerDocument();
      document8.addClass("d69~\"vK5GK,PY%SsyVX");
      document7.elementSiblingIndex();
      document0.select("body");
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("k,~PozCL");
      Attributes attributes0 = cDataNode0.attributes();
      attributes0.normalize();
      attributes0.hasKeyIgnoreCase("cqw+nWcn?<");
      attributes0.removeIgnoreCase("k,~PozCL");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document document0 = Parser.parse("cqw+nWcn?<", "cqw+nWcn?<");
      document0.tagName();
      document0.val();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("LS,");
      Parser parser0 = Parser.xmlParser();
      StringReader stringReader0 = new StringReader("k,~PozCL");
      Document document1 = parser0.parseInput((Reader) stringReader0, "M,g_:@");
      document0.appendTo(document1);
      Element element0 = document0.addClass("LS,");
      element0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("/-%yt1W$3", "/-%yt1W$3");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document_OutputSettings0.prettyPrint(false);
      Charset.defaultCharset();
      Element element0 = document0.createElement("&lt;");
      document0.appendTo(element0);
      document0.getElementsByAttributeValueMatching("Wv", "Wv");
      document0.clone();
      document0.cssSelector();
      Document.createShell("Wv");
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d69~\"vK5GK,PY%SsyVX", "d69~\"vK5GK,PY%SsyVX");
      Document document1 = document0.normalise();
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.quirks;
      Document document2 = document1.quirksMode(document_QuirksMode0);
      Element element0 = document2.body();
      element0.nodeName();
      element0.before("d69~\"vK5GK,PY%SsyVX");
      Element element1 = document2.appendText("body");
      Element element2 = document0.doClone(document1);
      element2.outerHtml();
      element2.appendChild(element0);
      document2.childNodesCopy();
      LinkedList<PseudoTextElement> linkedList0 = new LinkedList<PseudoTextElement>();
      Document document3 = (Document)document0.attr("<html>\n <head></head>\n <head></head>\n <body>\n  d69~\"vK5GK,PY%SsyVX\n </body>\n <body>\n  d69~\"vK5GK,PY%SsyVX\n </body>\n</html>body", "R<IjczPdvPH`");
      document3.doClone(element0);
      Document document4 = new Document("<html>\n <head></head>\n <head></head>\n <body>\n  d69~\"vK5GK,PY%SsyVX\n </body>\n <body>\n  d69~\"vK5GK,PY%SsyVX\n </body>\n</html>body");
      document4.text();
      element0.html("");
      element1.text(" ?/\"^@8hy");
      document0.getElementsContainingText(",ofeTVg");
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag0 = Tag.valueOf("dJq$HW]D}tC5_[!-XS", parseSettings0);
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("s+", "dJq$HW]D}tC5_[!-XS");
      Attributes attributes1 = attributes0.put(attribute0);
      Attributes attributes2 = attributes1.put("dJq$HW]D}tC5_[!-XS", "textarea");
      FormElement formElement0 = new FormElement(tag0, "s+", attributes2);
      Evaluator.AttributeStarting evaluator_AttributeStarting0 = new Evaluator.AttributeStarting("s+");
      formElement0.is((Evaluator) evaluator_AttributeStarting0);
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = (Node) formElement0;
      nodeArray0[1] = (Node) formElement0;
      nodeArray0[2] = (Node) formElement0;
      nodeArray0[3] = (Node) formElement0;
      nodeArray0[4] = (Node) formElement0;
      nodeArray0[5] = (Node) formElement0;
      attributes0.toString();
      nodeArray0[6] = (Node) formElement0;
      nodeArray0[7] = (Node) formElement0;
      // Undeclared exception!
      try { 
        formElement0.insertChildren(1174, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Document document0 = Parser.parse("head", "head");
      Document document1 = document0.clone();
      Document document2 = document1.ownerDocument();
      Parser parser0 = Parser.htmlParser();
      Parser parser1 = parser0.setTrackErrors(1029);
      Document document3 = document2.parser(parser1);
      Element element0 = document3.body();
      element0.nodelistChanged();
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d69~\"vK5GK,PY%SsyVX", "d69~\"vK5GK,PY%SsyVX");
      Document document1 = document0.normalise();
      Element element0 = document0.doClone(document1);
      element0.getElementsByIndexGreaterThan(25);
      StringWriter stringWriter0 = new StringWriter(243);
      BufferedWriter bufferedWriter0 = new BufferedWriter(stringWriter0);
      element0.html((Appendable) bufferedWriter0);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document_OutputSettings0.clone();
      document0.getElementsContainingOwnText("d69~\"vK5GK,PY%SsyVX");
      document0.className();
      document0.createElement("aC9Ihn'!H?v3s4E7\"|");
      String string0 = "KY;.%#Z/bd7THR";
      // Undeclared exception!
      try { 
        Tag.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Attributes attributes0 = new Attributes();
      Document document0 = new Document("");
      Document document1 = document0.ownerDocument();
      Element element0 = document1.val("html");
      document1.is("html");
      document1.getElementById("html");
      Tag.valueOf("html");
      Element element1 = element0.addClass("org.jsoup.nodes.Element$NodeList");
      element1.appendElement("org.jsoup.nodes.Element$NodeList");
      element1.textNodes();
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Parser.parseBodyFragment(" > ", "progress");
      CDataNode cDataNode0 = new CDataNode("progress");
      Attributes attributes0 = cDataNode0.attributes();
      Attribute attribute0 = new Attribute("progress", " > ");
      Attributes attributes1 = attributes0.put(attribute0);
      attributes1.put("", true);
      Tag tag0 = Tag.valueOf("Uh}.V)>)[E/Ut`lh?{u");
      FormElement formElement0 = new FormElement(tag0, "om^>nq", attributes1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      Element element0 = new Element(tag0, "Uh}.V)>)[E/Ut`lh?{u", attributes1);
      // Undeclared exception!
      try { 
        formElement0.getElementsMatchingOwnText("B[!-Rw?*Yt0E");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pattern syntax error: B[!-Rw?*Yt0E
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("cqw+nWcn?<", "LS,");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Charset.defaultCharset();
      Charset.defaultCharset();
      document0.previousElementSiblings();
      Document document1 = document0.outputSettings(document_OutputSettings0);
      Element element0 = document0.body();
      Element element1 = element0.appendTo(document0);
      Pattern pattern0 = Pattern.compile("LS,", 0);
      document0.getElementsMatchingText(pattern0);
      element1.childNodeSize();
      document0.attr(")?}s`\"[BzSyruM", ")?}s`\"[BzSyruM");
      Element element2 = document1.text(")?}s`\"[BzSyruM");
      element2.getElementsContainingText("head");
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d69~\"vK5GK,PY%SsyVX", "d69~\"vK5GK,PY%SsyVX");
      Document document1 = document0.normalise();
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.quirks;
      Document document2 = document1.quirksMode(document_QuirksMode0);
      Element element0 = document2.body();
      element0.nodeName();
      Element element1 = element0.before("d69~\"vK5GK,PY%SsyVX");
      element1.prependChild(element0);
      document2.appendText("body");
      Element element2 = document0.doClone(document1);
      element2.outerHtml();
      element2.appendChild(element0);
      document2.childNodesCopy();
      LinkedList<PseudoTextElement> linkedList0 = new LinkedList<PseudoTextElement>();
      element2.tag();
      // Undeclared exception!
      try { 
        element2.insertChildren(77, (Collection<? extends Node>) linkedList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("uKKb^}Z4rqS*", "pubSysKey");
      String string0 = "uiB";
      Parser.unescapeEntities("xI>", false);
      document0.hasClass("uiB");
      Document document1 = (Document)document0.attr("xI>", " ?/\"^@8hy");
      Document document2 = (Document)document1.doClone(document0);
      document2.text();
      document1.html("`cE(:.V<^DgsZ<~");
      // Undeclared exception!
      try { 
        document1.text("BzV9-*}}");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      Element element0 = new Element("body");
      element0.nextElementSibling();
      String string0 = "u,D &";
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration("u,D &", true);
      // Undeclared exception!
      try { 
        xmlDeclaration0.before((Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document_OutputSettings0.prettyPrint(false);
      Charset.defaultCharset();
      Document document0 = Document.createShell("d69~\"vK5GK,PY%SsyVX");
      document0.parents();
      document0.removeClass("~kYz(R2s");
      document0.appendElement("mr%LH>g!");
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("html", "");
      Document document1 = document0.normalise();
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.noQuirks;
      Document document2 = document0.quirksMode(document_QuirksMode0);
      Document document3 = Document.createShell("String must not be empty");
      Element element0 = document3.body();
      document2.nodeName();
      element0.before("String must not be empty");
      Element element1 = document0.appendText("textarea");
      document3.doClone(element1);
      document1.outerHtml();
      document1.appendChild(document2);
      document3.childNodesCopy();
      LinkedList<PseudoTextElement> linkedList0 = new LinkedList<PseudoTextElement>();
      document3.getElementsByAttributeValue("#document", "String must not be empty");
      CDataNode cDataNode0 = new CDataNode("/-%yt1W$3");
      Attributes attributes0 = cDataNode0.attributes();
      Attributes attributes1 = attributes0.put("#document", "/-%yt1W$3");
      attributes0.clone();
      Attributes attributes2 = attributes1.clone();
      attributes2.put("String must not be empty", false);
      Tag.valueOf("Tag name must not be empty.");
      document3.addClass("body");
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      String string0 = "org.jsoup.select.StructuralEvaluator";
      Document document0 = Parser.parseBodyFragment("org.jsoup.select.StructuralEvaluator", "org.jsoup.select.StructuralEvaluator");
      Document document1 = new Document("org.jsoup.select.StructuralEvaluator");
      Element element0 = document0.body();
      element0.siblingElements();
      ByteArrayOutputStream byteArrayOutputStream0 = null;
      try {
        byteArrayOutputStream0 = new ByteArrayOutputStream((-2128));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative initial size: -2128
         //
         verifyException("java.io.ByteArrayOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      String string0 = "progress";
      Document document0 = Parser.parseBodyFragment(" > ", "progress");
      Element element0 = document0.head();
      Element element1 = element0.toggleClass("progress");
      document0.children();
      element1.nextElementSiblings();
      ByteArrayOutputStream byteArrayOutputStream0 = null;
      try {
        byteArrayOutputStream0 = new ByteArrayOutputStream((-2128));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative initial size: -2128
         //
         verifyException("java.io.ByteArrayOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("oT rG_0CpYnqim!od-(", parseSettings0);
      Element element0 = null;
      try {
        element0 = new Element(tag0, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      String string0 = "LS,";
      Document document0 = Parser.parseBodyFragmentRelaxed("cqw+nWcn?<", "LS,");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Charset charset0 = Charset.defaultCharset();
      Charset.defaultCharset();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.charset(charset0);
      document0.previousElementSiblings();
      Document document1 = document0.outputSettings(document_OutputSettings1);
      document1.val("cqw+nWcn?<");
      document1.appendTo(document0);
      // Undeclared exception!
      document0.is("rrytjfOBvR");
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d69~\"vK5GK,PY%SsyVX", "d69~\"vK5GK,PY%SsyVX");
      Document document1 = document0.normalise();
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.quirks;
      Document document2 = document1.quirksMode(document_QuirksMode0);
      Element element0 = document2.body();
      String string0 = Node.EmptyString;
      Element element1 = element0.before("d69~\"vK5GK,PY%SsyVX");
      element1.hasClass("jU5");
      document2.appendText("");
      Element element2 = document0.doClone(document1);
      element2.outerHtml();
      Element element3 = element2.appendChild(element0);
      document2.childNodesCopy();
      LinkedList<PseudoTextElement> linkedList0 = new LinkedList<PseudoTextElement>();
      Parser.parse("d69~\"vK5GK,PY%SsyVX", "O#/J}9DQYbc");
      element3.tagName();
      document0.val();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("O#/J}9DQYbc");
      // Undeclared exception!
      try { 
        element3.addClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("/-%yt1W$3", "/-%yt1W$3");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueStarting((String) null, "/-%yt1W$3");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("cqw+nWcn?<", "LS,");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Charset charset0 = Charset.defaultCharset();
      Charset.defaultCharset();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.charset(charset0);
      document0.previousElementSiblings();
      document0.outputSettings(document_OutputSettings1);
      Element element0 = document0.body();
      Element element1 = element0.appendTo(document0);
      Pattern pattern0 = Pattern.compile("LS,", 0);
      document0.getElementsMatchingText(pattern0);
      element1.childNodeSize();
      Element element2 = document0.attr(")?}s`\"[BzSyruM", ")?}s`\"[BzSyruM");
      element2.getElementsMatchingOwnText(pattern0);
      Element element3 = element0.firstElementSibling();
      element3.removeClass(")?}s`\"[BzSyruM");
      element2.getElementsByAttributeValueMatching("LS,", "xI>");
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      Tag tag0 = Tag.valueOf("=\"");
      CDataNode cDataNode0 = new CDataNode("InColumnGroup");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "body", attributes0);
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag1 = Tag.valueOf("oHYq^", parseSettings0);
      Attributes attributes1 = attributes0.clone();
      Element element0 = new Element(tag1, "body", attributes1);
      FormElement formElement1 = formElement0.addElement(element0);
      formElement1.getElementsByIndexEquals(37);
      element0.addClass("[,D8=7rFjm_-");
      element0.getElementsByAttributeValueNot("#root", "=\"");
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      String string0 = "br";
      Document document0 = Parser.parse("br", "br");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Document document1 = document0.ownerDocument();
      document0.nextElementSiblings();
      Parser parser0 = Parser.xmlParser();
      int int0 = (-1027);
      Parser parser1 = parser0.setTrackErrors((-1027));
      parser1.parseInput("br", "br");
      document0.getElementsByAttributeValue("org.jsoup.select.Evaluator$IsLastChild", "br");
      String string1 = "xI>";
      Parser.parseBodyFragmentRelaxed("!=", "xI>");
      Document document2 = document1.parser(parser1);
      // Undeclared exception!
      try { 
        document2.after((Node) document1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      LinkedList<PseudoTextElement> linkedList0 = new LinkedList<PseudoTextElement>();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Element element0 = new Element("rg.jsoup.nodes.Elemen");
      element0.getElementsContainingOwnText("#:z~+$3f.Vi");
      element0.data();
      // Undeclared exception!
      try { 
        element0.selectFirst("R<IjczPdvcH`");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query 'R<IjczPdvcH`': unexpected token at '<IjczPdvcH`'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("cqw+nWcn?<", "LS,");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Charset charset0 = Charset.defaultCharset();
      Charset.defaultCharset();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.charset(charset0);
      document0.previousElementSiblings();
      document0.outputSettings(document_OutputSettings1);
      Element element0 = document0.body();
      Element element1 = element0.appendTo(document0);
      Pattern pattern0 = Pattern.compile("LS,", 0);
      element1.attr("LS,", "br");
      document0.getElementsMatchingText(pattern0);
      element1.childNodeSize();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "L!\"wohC^xi2,t[]vHe");
      Element element2 = document0.attr(")?}s`\"[BzSyruM", ")?}s`\"[BzSyruM");
      element2.getElementsMatchingOwnText(pattern0);
      element0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      Document document0 = new Document(":last-child");
      CDataNode cDataNode0 = new CDataNode("utf");
      Attributes attributes0 = cDataNode0.attributes();
      attributes0.hasKeyIgnoreCase("utf");
      attributes0.removeIgnoreCase("eRl#tT");
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.limitedQuirks;
      Document document1 = document0.quirksMode(document_QuirksMode0);
      document1.id();
      document0.textNodes();
      document0.removeClass("");
      document0.previousElementSibling();
      document1.attr("eRl#tT", true);
      document1.nodeName();
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("TSlb2E}7}O\"Q[t/>R", "TSlb2E}7}O\"Q[t/>R");
      document0.parser(parser0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      document0.dataset();
      String string0 = "<uQ}<H-u)#)(LIu\"";
      document0.getElementsByTag("<uQ}<H-u)#)(LIu\"");
      String string1 = ".fFzC\"t{";
      Document document1 = new Document("TSlb2E}7}O\"Q[t/>R");
      document1.data();
      document0.getElementsByIndexGreaterThan(23);
      // Undeclared exception!
      try { 
        document0.child((-887));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      String string0 = " > ";
      Document document0 = Parser.parseBodyFragment(" > ", "progress");
      document0.head();
      Document document1 = new Document("progress");
      int int0 = (-2128);
      document0.siblingElements();
      ByteArrayOutputStream byteArrayOutputStream0 = null;
      try {
        byteArrayOutputStream0 = new ByteArrayOutputStream((-2128));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative initial size: -2128
         //
         verifyException("java.io.ByteArrayOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d69~\"vK5GK,PY%SsyVX", "d69~\"vK5GK,PY%SsyVX");
      Document document1 = document0.normalise();
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.quirks;
      Document document2 = document1.quirksMode(document_QuirksMode0);
      Element element0 = document2.body();
      element0.nodeName();
      Element element1 = element0.before("d69~\"vK5GK,PY%SsyVX");
      element1.hasClass("jU5");
      document2.appendText("body");
      Element element2 = document0.doClone(document1);
      element2.outerHtml();
      element2.appendChild(element0);
      document2.childNodesCopy();
      LinkedList<PseudoTextElement> linkedList0 = new LinkedList<PseudoTextElement>();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document2.attr("html", "html");
      Pattern pattern0 = Pattern.compile("a2c\te-jUEX", (-1900));
      element0.getElementsMatchingOwnText(pattern0);
      // Undeclared exception!
      try { 
        document1.firstElementSibling();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d69~\"vK5GK,PY%SsyVX", "d69~\"vK5GK,PY%SsyVX");
      Document document1 = document0.normalise();
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.quirks;
      Document document2 = document1.quirksMode(document_QuirksMode0);
      Element element0 = document2.body();
      element0.nodeName();
      element0.before("d69~\"vK5GK,PY%SsyVX");
      document2.appendText("body");
      Element element1 = document0.doClone(document1);
      element1.getElementsContainingOwnText("");
      document2.className();
      document2.text("BeforeAttributeName");
      Tag.valueOf("xI>");
      element1.addClass("BeforeAttributeName");
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      String string0 = "/-%yt1W$3\\";
      Document document0 = Parser.parseBodyFragmentRelaxed("/-%yt1W$3", "/-%yt1W$3");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document_OutputSettings0.prettyPrint(false);
      Charset.defaultCharset();
      document0.getElementsByAttributeValueMatching("Wv", "Wv");
      Document document1 = document0.clone();
      document0.cssSelector();
      document0.appendChild(document1);
      // Undeclared exception!
      try { 
        document0.before((Node) document1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("/-%yt1W$3", "/-%yt1W$3");
      Element element0 = document0.html("/-%yt1W$3");
      Document document1 = Parser.parseBodyFragmentRelaxed("\"}o,Xn!9P9", "cite");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document document2 = document0.outputSettings(document_OutputSettings0);
      document2.dataset();
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.limitedQuirks;
      document0.quirksMode(document_QuirksMode0);
      document2.id();
      document2.textNodes();
      document1.removeClass("cite");
      FileSystemHandling.shouldAllThrowIOExceptions();
      document2.prependElement("body");
      document1.previousElementSibling();
      document2.attr("", true);
      element0.nodeName();
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("TSlb2E}7}O\"Q[t/>R", "TSlb2E}7}O\"Q[t/>R");
      Document document1 = document0.parser(parser0);
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.noQuirks;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      document0.dataset();
      Document document2 = document1.quirksMode(document_QuirksMode0);
      document2.id();
      document1.textNodes();
      Element element0 = document2.removeClass("");
      element0.previousElementSibling();
      Element element1 = document1.attr("", true);
      element1.nodeName();
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      String string0 = "textarea";
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      parseSettings0.normalizeTag("textarea");
      parser0.settings(parseSettings0);
      Document document0 = parser0.parseInput("textarea", "textarea");
      document0.getElementsByAttributeValueContaining("textarea", "textarea");
      int int0 = 20;
      document0.getElementsByIndexGreaterThan(20);
      // Undeclared exception!
      try { 
        document0.html((Appendable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("cqw+nWcn?<", "LS,");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Charset charset0 = Charset.defaultCharset();
      Charset.defaultCharset();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.charset(charset0);
      document0.previousElementSiblings();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "LS,");
      document0.outputSettings(document_OutputSettings1);
      Element element0 = document0.body();
      Element element1 = element0.appendTo(document0);
      Pattern pattern0 = Pattern.compile("LS,", 0);
      document0.getElementsMatchingText(pattern0);
      element1.childNodeSize();
      Element element2 = document0.attr(")?}s`\"[BzSyruM", ")?}s`\"[BzSyruM");
      element2.getElementsMatchingOwnText(pattern0);
      Element element3 = element0.firstElementSibling();
      element3.ownText();
      element3.tag();
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("/-%yt1W$3", "/-%yt1W$3");
      Element element0 = document0.html("/-%yt1W$3");
      Document document1 = Parser.parseBodyFragmentRelaxed("\"}o,Xn!9P9", "cite");
      document1.getElementsByIndexEquals(0);
      document1.wholeText();
      Document document2 = Parser.parse("d<1W+/0)uwNF{", "GD5^9");
      document2.elementSiblingIndex();
      Node[] nodeArray0 = new Node[0];
      element0.insertChildren(0, nodeArray0);
      document2.getAllElements();
      // Undeclared exception!
      try { 
        document2.after("d<1W+/0)uwNF{");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag.valueOf("R<IjczPdvcH`");
      Attributes attributes0 = new Attributes();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Document document0 = new Document("");
      Document document1 = document0.ownerDocument();
      document1.val("html");
      document1.is("html");
      document1.getElementById("html");
      Tag.valueOf("o5'<z]@iRHY>T)G");
      document1.addClass("xd`9$S6e)K9;ob8 }D");
      document0.prepend("body");
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("k,~PozCL");
      Attributes attributes0 = cDataNode0.attributes();
      attributes0.normalize();
      attributes0.hasKeyIgnoreCase("cqw+nWcn?<");
      attributes0.removeIgnoreCase("k,~PozCL");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document document0 = Parser.parse("cqw+nWcn?<", "cqw+nWcn?<");
      document0.tagName();
      document0.val();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("LS,");
      Element element0 = document0.addClass("LS,");
      element0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "");
      Document document1 = Parser.parseBodyFragmentRelaxed("", "");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Charset charset0 = Charset.defaultCharset();
      Charset.defaultCharset();
      document_OutputSettings0.charset(charset0);
      Parser parser0 = Parser.xmlParser();
      Document document2 = document1.parser(parser0);
      document2.previousElementSiblings();
      Document document3 = document0.outputSettings(document_OutputSettings0);
      document2.body();
      document1.appendTo(document3);
      String string0 = "J{RLa XX7v*LH6rF[0";
      // Undeclared exception!
      try { 
        Pattern.compile("J{RLa XX7v*LH6rF[0", 0);
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Illegal repetition near index 0
         // J{RLa XX7v*LH6rF[0
         // ^
         //
         verifyException("java.util.regex.Pattern", e);
      }
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      Document document0 = new Document(":last-child");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document_OutputSettings0.prettyPrint(true);
      Charset.defaultCharset();
      document0.getElementsByAttributeValueMatching("Wv", ":last-child");
      Document document1 = document0.clone();
      document1.cssSelector();
      Element element0 = document0.appendChild(document1);
      element0.parent();
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      String string0 = "progress";
      Document document0 = Parser.parseBodyFragment(" > ", "progress");
      Element element0 = document0.head();
      Element element1 = element0.toggleClass("progress");
      element1.nextElementSiblings();
      ByteArrayOutputStream byteArrayOutputStream0 = null;
      try {
        byteArrayOutputStream0 = new ByteArrayOutputStream((-2128));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative initial size: -2128
         //
         verifyException("java.io.ByteArrayOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "");
      CDataNode cDataNode0 = new CDataNode("");
      Attributes attributes0 = cDataNode0.attributes();
      attributes0.hasKeyIgnoreCase(".");
      document0.toggleClass(".");
      String string0 = null;
      // Undeclared exception!
      try { 
        document0.getElementsByClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      Document document0 = Parser.parse("", "q{g Rb2c");
      document0.getElementsMatchingText("&lt;");
      document0.getElementsByTag("$N^7Hhav}HQ<\"4)");
      Document document1 = (Document)document0.toggleClass("q{g Rb2c");
      document1.getElementsByIndexEquals(0);
      document0.wholeText();
      document0.elementSiblingIndex();
      document0.className();
      document1.createElement(".");
      Tag.valueOf("tfoot");
      document1.addClass("SY {z<a1Lye%AEA");
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag.valueOf("R<IjczPdvcH`", parseSettings0);
      Document document0 = Document.createShell("$N^7Hhav}HQ<\"4)");
      document0.getElementsByTag("br");
      Element element0 = document0.toggleClass("org.jsoup.Jsoup");
      element0.getElementsByIndexEquals((-3006));
      Document document1 = new Document("3e 0r/^A$[{w[");
      document1.wholeText();
      document1.elementSiblingIndex();
      Node[] nodeArray0 = new Node[9];
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.clone();
      Entities.EscapeMode entities_EscapeMode0 = Entities.EscapeMode.extended;
      Document.OutputSettings document_OutputSettings2 = document_OutputSettings1.escapeMode(entities_EscapeMode0);
      Document.OutputSettings document_OutputSettings3 = document_OutputSettings2.prettyPrint(true);
      Document document2 = document1.outputSettings(document_OutputSettings3);
      nodeArray0[0] = (Node) document2;
      nodeArray0[1] = (Node) document1;
      nodeArray0[2] = (Node) document1;
      nodeArray0[3] = (Node) document0;
      nodeArray0[4] = (Node) document0;
      nodeArray0[5] = (Node) element0;
      nodeArray0[6] = (Node) document1;
      Document document3 = document2.normalise();
      nodeArray0[7] = (Node) document3;
      nodeArray0[8] = (Node) document0;
      // Undeclared exception!
      try { 
        document0.insertChildren(8218, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      Document document0 = Parser.parse("", "q{g Rb2c");
      String string0 = "&lt;";
      document0.getElementsMatchingText("&lt;");
      document0.getElementsByTag("$N^7Hhav}HQ<\"4)");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueContaining("/u`uH<4U h~Mf(d", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      Document document0 = Parser.parse("", "q{g Rb2c");
      String string0 = "&lt;";
      document0.getElementsMatchingText("&lt;");
      document0.getElementsByTag("$N^7Hhav}HQ<\"4)");
      Document document1 = (Document)document0.toggleClass("q{g Rb2c");
      int int0 = 0;
      document1.getElementsByIndexEquals(0);
      document0.wholeText();
      // Undeclared exception!
      try { 
        document1.wrap("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag.valueOf("R<IjczPdvcH`");
      Attributes attributes0 = new Attributes();
      Document document0 = new Document("");
      Document document1 = document0.ownerDocument();
      document1.val("html");
      document1.is("html");
      document1.val("head");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document1.wrap("EOF");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag.valueOf("R<IjczPdvcH`");
      Attributes attributes0 = new Attributes();
      Document document0 = new Document("");
      Document document1 = document0.ownerDocument();
      String string0 = "html";
      document1.val("R<IjczPdvcH`");
      // Undeclared exception!
      try { 
        document0.is("R<IjczPdvcH`");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query 'R<IjczPdvcH`': unexpected token at '<IjczPdvcH`'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d69~\"vK5GK,PY%SsyVX", "d69~\"vK5GK,PY%SsyVX");
      Document document1 = document0.normalise();
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.quirks;
      Document document2 = document1.quirksMode(document_QuirksMode0);
      Element element0 = document2.body();
      element0.nodeName();
      element0.before("d69~\"vK5GK,PY%SsyVX");
      document2.appendText("body");
      Element element1 = document0.doClone(document1);
      element1.outerHtml();
      element1.appendChild(element0);
      document2.childNodesCopy();
      LinkedList<PseudoTextElement> linkedList0 = new LinkedList<PseudoTextElement>();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document0.getElementsByTag("inert");
      Element element2 = new Element("br");
      document1.data();
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag.valueOf("R<IjczPdvcH`");
      Attributes attributes0 = new Attributes();
      Document document0 = new Document("");
      Document document1 = document0.ownerDocument();
      Element element0 = document1.val("html");
      document1.is("html");
      document1.getElementById("html");
      Tag.valueOf("xd`9$S6e)K9;ob8 }D");
      element0.addClass("html");
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("%s$=%s", "xI>");
      document0.setSiblingIndex(3538);
      document0.getElementsContainingText("}Z7b-Too");
      document0.getElementsByIndexGreaterThan(6);
      document0.elementSiblingIndex();
      document0.getElementsByAttributeValueEnding("xI>", "%s$=%s");
      document0.toggleClass("html");
      DataNode dataNode0 = DataNode.createFromEncoded("}Z7b-Too", "Unexpected count of entities loaded");
      Element element0 = document0.prependChild(dataNode0);
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = (Node) element0;
      nodeArray0[1] = (Node) element0;
      nodeArray0[2] = (Node) document0;
      nodeArray0[3] = (Node) element0;
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("s+", parseSettings0);
      document0.val();
      Attributes attributes0 = new Attributes();
      Element element1 = new Element(tag0, "3mm9z9i", attributes0);
      nodeArray0[4] = (Node) element1;
      nodeArray0[5] = (Node) dataNode0;
      nodeArray0[6] = (Node) document0;
      nodeArray0[7] = (Node) element0;
      // Undeclared exception!
      try { 
        document0.insertChildren(1, nodeArray0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 3538, Size: 2
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      Document document0 = new Document(":last-child");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.prettyPrint(true);
      Entities.EscapeMode entities_EscapeMode0 = Entities.EscapeMode.base;
      Document.OutputSettings document_OutputSettings2 = document_OutputSettings1.escapeMode(entities_EscapeMode0);
      Charset charset0 = Charset.defaultCharset();
      Document.OutputSettings document_OutputSettings3 = document_OutputSettings2.charset(charset0);
      document_OutputSettings3.encoder();
      Document document1 = document0.outputSettings(document_OutputSettings3);
      document1.ownText();
      // Undeclared exception!
      try { 
        document1.lastElementSibling();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      String string0 = ":last-child";
      Document document0 = new Document(":last-child");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put(" />", false);
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf(" />", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, " />", attributes0);
      Element element0 = new Element(tag0, "id", attributes1);
      formElement0.getElementsMatchingOwnText(":last-child");
      formElement0.addElement(element0);
      // Undeclared exception!
      try { 
        formElement0.getElementsByAttribute((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      Document document0 = new Document(":last-child");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.prettyPrint(true);
      Entities.EscapeMode entities_EscapeMode0 = Entities.EscapeMode.base;
      document_OutputSettings1.escapeMode(entities_EscapeMode0);
      Charset.defaultCharset();
      document0.getElementsByAttributeValueMatching("Wv", ":last-child");
      Document document1 = document0.clone();
      document1.cssSelector();
      document0.attr("Df#X", ":last-child");
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      String string0 = "U9>)5'";
      Tag tag0 = Tag.valueOf("U9>)5'");
      CDataNode cDataNode0 = new CDataNode("U9>)5'");
      Attributes attributes0 = cDataNode0.attributes();
      Attributes attributes1 = attributes0.put("U9>)5'", false);
      FormElement formElement0 = new FormElement(tag0, "U9>)5'", attributes1);
      Element element0 = new Element(tag0, "U9>)5'", attributes1);
      formElement0.getElementsMatchingOwnText("var");
      String string1 = "";
      Document document0 = Document.createShell("");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueMatching("", "HQzZ(GOR.p\"UG");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pattern syntax error: HQzZ(GOR.p\"UG
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.select.StructuralEvaluator", "org.jsoup.select.StructuralEvaluator");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "org.jsoup.select.StructuralEvaluator");
      document0.hasText();
      document0.nextElementSiblings();
      // Undeclared exception!
      try { 
        document0.before("org.jsoup.select.StructuralEvaluator");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = "f.WaEzE`lU{w";
      Tag tag0 = Tag.valueOf("f.WaEzE`lU{w");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.clone();
      attributes0.dataset();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "f.WaEzE`lU{w", attributes1);
      // Undeclared exception!
      try { 
        pseudoTextElement0.child(76);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 76, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      String string0 = "s3]8w*7/)l|w#;)uP31";
      Document document0 = Parser.parseBodyFragment("s3]8w*7/)l|w#;)uP31", "]7By_jQ%i)oQse");
      Tag tag0 = Tag.valueOf("s3]8w*7/)l|w#;)uP31");
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("]7By_jQ%i)oQse", "Az0");
      Attributes attributes1 = attributes0.put(attribute0);
      Attributes attributes2 = attributes1.put("6Ci?gJ;hqx", "br");
      Element element0 = new Element(tag0, "]7By_jQ%i)oQse", attributes2);
      Comment comment0 = new Comment("head");
      XmlDeclaration xmlDeclaration0 = comment0.asXmlDeclaration();
      // Undeclared exception!
      try { 
        document0.replaceChild(element0, xmlDeclaration0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must be true
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("8sy{", "8sy{");
      Document document1 = document0.normalise();
      // Undeclared exception!
      try { 
        document1.select("8sy{");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query '8sy{': unexpected token at '{'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      Tag.valueOf("i)>e2]eLr}");
      Attributes attributes0 = new Attributes();
      Document document0 = Document.createShell("ujw@N_gteQQ0x7|OM");
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.noQuirks;
      Document document1 = document0.quirksMode(document_QuirksMode0);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings.Syntax document_OutputSettings_Syntax0 = Document.OutputSettings.Syntax.html;
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.syntax(document_OutputSettings_Syntax0);
      Entities.EscapeMode entities_EscapeMode0 = Entities.EscapeMode.xhtml;
      Document.OutputSettings document_OutputSettings2 = document_OutputSettings1.escapeMode(entities_EscapeMode0);
      Document document2 = document1.outputSettings(document_OutputSettings2);
      Parser parser0 = Parser.xmlParser();
      Document document3 = document2.parser(parser0);
      document3.html("BgqU]9+j uml");
      document2.getElementsByClass("cx`l_M.nsEk6");
      document3.getElementsContainingOwnText("ujw@N_gteQQ0x7|OM");
      document1.getElementsByAttributeStarting("rWHAn");
      document1.className();
      document1.getElementById("$j(7*3L9F");
      // Undeclared exception!
      try { 
        document1.getElementsByTag("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("R<IjczPdvcH`", parseSettings0);
      Attributes attributes0 = new Attributes();
      Element element0 = new Element(tag0, "R<IjczPdvcH`", attributes0);
      element0.getElementsByAttributeValueContaining("org.jsoup.select.Evaluator$Id", "org.jsoup.select.Evaluator$Id");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      element0.getElementsByTag("inert");
      Element element1 = new Element("org.jsoup.select.Evaluator$Id");
      element0.data();
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.select.StructuralEvaluator", "org.jsoup.select.StructuralEvaluator");
      document0.hasText();
      // Undeclared exception!
      try { 
        document0.before("org.jsoup.select.StructuralEvaluator");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("cqw+nWcn?<", "LS,");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Charset charset0 = Charset.defaultCharset();
      Charset.defaultCharset();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.charset(charset0);
      document0.previousElementSiblings();
      document0.outputSettings(document_OutputSettings1);
      Entities.CoreCharset entities_CoreCharset0 = Entities.CoreCharset.fallback;
      document_OutputSettings1.coreCharset = entities_CoreCharset0;
      Element element0 = document0.body();
      Element element1 = element0.appendTo(document0);
      Pattern pattern0 = Pattern.compile("LS,", 0);
      document0.getElementsMatchingText(pattern0);
      element1.childNodeSize();
      Element element2 = document0.attr(")?}s`\"[BzSyruM", ")?}s`\"[BzSyruM");
      element0.getElementsByAttributeStarting("LS,");
      element2.getElementsByTag("1a_=1REdt~GZXY");
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      Document document0 = Parser.parse("", "q{g Rb2c");
      String string0 = "&lt;";
      document0.getElementsMatchingText("&lt;");
      document0.getElementsByTag("$N^7Hhav}HQ<\"4)");
      Element element0 = document0.toggleClass("q{g Rb2c");
      element0.getElementsByIndexEquals(0);
      document0.wholeText();
      document0.elementSiblingIndex();
      Node[] nodeArray0 = new Node[23];
      nodeArray0[0] = (Node) document0;
      nodeArray0[1] = (Node) document0;
      nodeArray0[2] = (Node) element0;
      nodeArray0[3] = (Node) document0;
      nodeArray0[4] = (Node) document0;
      // Undeclared exception!
      try { 
        document0.insertChildren(0, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array must not contain any null objects
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      Document document0 = new Document(":last-child");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document0.getElementsByAttributeValueContaining(":last-child", "org.jsoup.select.Evaluator$Id");
      Appendable appendable0 = null;
      CDataNode cDataNode0 = new CDataNode("org.jsoup.nodes.Element");
      Attributes attributes0 = cDataNode0.attributes();
      attributes0.hasKeyIgnoreCase("");
      attributes0.removeIgnoreCase("`eOumppPAbRi");
      int int0 = 1754;
      Document.OutputSettings document_OutputSettings1 = new Document.OutputSettings();
      document0.tagName();
      document0.val();
      // Undeclared exception!
      try { 
        document_OutputSettings1.charset("br");
        fail("Expecting exception: UnsupportedCharsetException");
      
      } catch(UnsupportedCharsetException e) {
         //
         // br
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag.valueOf("R<IjczPdvcH`");
      Attributes attributes0 = new Attributes();
      Document document0 = new Document("");
      Document document1 = document0.ownerDocument();
      String string0 = "html";
      Document document2 = (Document)document1.val("html");
      document1.is("html");
      document1.val("head");
      int int0 = 44;
      // Undeclared exception!
      try { 
        document2.outerHtmlTail((Appendable) null, 44, (Document.OutputSettings) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      String string0 = ":last-child";
      Document document0 = new Document(":last-child");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.outline(true);
      Entities.EscapeMode entities_EscapeMode0 = Entities.EscapeMode.base;
      Document.OutputSettings document_OutputSettings2 = document_OutputSettings1.escapeMode(entities_EscapeMode0);
      Charset charset0 = Charset.defaultCharset();
      document_OutputSettings2.charset(charset0);
      Parser.parseBodyFragmentRelaxed(":last-child", ":last-child");
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) ":last-child");
      Pattern pattern0 = Pattern.compile("YEElGX<j");
      document0.getElementsByAttributeValueMatching("org.jsoup.select.Evaluator$ContainsOwnText", pattern0);
      StringBuilder stringBuilder1 = stringBuilder0.append(true);
      StringBuilder stringBuilder2 = stringBuilder1.insert(8, (double) 8);
      int int0 = 23;
      // Undeclared exception!
      try { 
        stringBuilder2.insert(23, false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 23
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("cqw+nWcn?<", "LS,");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Charset charset0 = Charset.defaultCharset();
      Charset.defaultCharset();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.charset(charset0);
      document0.previousElementSiblings();
      Document document1 = document0.outputSettings(document_OutputSettings1);
      String string0 = Node.EmptyString;
      String string1 = ".";
      String string2 = "#root";
      document1.getElementById("#root");
      // Undeclared exception!
      try { 
        document0.getElementsByTag("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      Document document0 = Parser.parse("", "q{g Rb2c");
      document0.is("gCVB2ESM");
      document0.getElementsMatchingText("&lt;");
      document0.getElementsByTag("$N^7Hhav}HQ<\"4)");
      Document document1 = (Document)document0.toggleClass("q{g Rb2c");
      document1.getElementsByIndexEquals(0);
      document0.wholeText();
      document0.elementSiblingIndex();
      document0.getElementsByAttributeValueMatching(">/+#jxu8FQO(", "Rcdata");
      Document document2 = document1.clone();
      document2.cssSelector();
      // Undeclared exception!
      try { 
        document0.attr((String) null, "#root");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.ParseSettings", e);
      }
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      Document document0 = Document.createShell("");
      Document document1 = document0.ownerDocument();
      Document document2 = (Document)document0.addClass("");
      document0.previousElementSiblings();
      document1.doSetBaseUri("");
      document1.append("");
      document2.clone();
      Document document3 = (Document)document1.attr("", "");
      document1.baseUri();
      document3.getElementsByAttributeValueStarting("!%Cl f~}}T6)M\"_8", "org.jsoup.nodes.Element");
      // Undeclared exception!
      try { 
        document3.lastElementSibling();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      String string0 = "xI>";
      Element element0 = new Element("xI>");
      element0.val();
      // Undeclared exception!
      try { 
        element0.after("xI>");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      String string0 = "org.jsoup.nodes.Element";
      Document document0 = Parser.parseBodyFragment("org.jsoup.nodes.Element", "");
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration("C#X1?(", "C#X1?(", true);
      Element element0 = document0.doClone(xmlDeclaration0);
      Element element1 = document0.val("C#X1?(");
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "");
      String string1 = "-q;{+|wa";
      StringBuilder stringBuilder1 = stringBuilder0.append("-q;{+|wa");
      stringBuilder1.append((CharSequence) "-q;{+|wa");
      char[] charArray0 = new char[9];
      charArray0[0] = 'e';
      charArray0[1] = '.';
      charArray0[2] = '5';
      // Undeclared exception!
      try { 
        element0.appendTo(element1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractList", e);
      }
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("cqw+nWcn?<", "LS,");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Charset charset0 = Charset.defaultCharset();
      Charset.defaultCharset();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.charset(charset0);
      document0.previousElementSiblings();
      Document document1 = document0.outputSettings(document_OutputSettings1);
      Entities.CoreCharset entities_CoreCharset0 = Entities.CoreCharset.fallback;
      document_OutputSettings1.coreCharset = entities_CoreCharset0;
      Element element0 = document0.body();
      Element element1 = element0.appendTo(document0);
      Pattern pattern0 = Pattern.compile("LS,", 0);
      document0.getElementsMatchingText(pattern0);
      element1.childNodeSize();
      Element element2 = document0.attr(")?}s`\"[BzSyruM", ")?}s`\"[BzSyruM");
      element2.getElementsMatchingOwnText(pattern0);
      document1.childNodesCopy();
      element0.getElementsByIndexEquals(0);
      element0.wholeText();
      document0.elementSiblingIndex();
      document1.getElementsByAttributeValueEnding("LS,", ")?}s`\"[BzSyruM");
      Element element3 = element0.clone();
      element3.text("3;ULZ#Zt");
      document1.getElementsByAttributeValueStarting(")?}s`\"[BzSyruM", "cqw+nWcn?<");
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("R<IjczPdvcH`");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("R<IjczPdvcH`", true);
      Element element0 = new Element(tag0, "R<IjczPdvcH`", attributes1);
      String string0 = "org.jsoup.select.Evaluator$Id";
      element0.getElementsByAttributeValueContaining("org.jsoup.select.Evaluator$Id", "org.jsoup.select.Evaluator$Id");
      Appendable appendable0 = null;
      attributes1.removeIgnoreCase("org.jsoup.select.Evaluator$Id");
      int int0 = 1754;
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      element0.tagName();
      element0.val();
      // Undeclared exception!
      try { 
        document_OutputSettings0.charset(" x6qRkzmUp}NMK;z#;");
        fail("Expecting exception: IllegalCharsetNameException");
      
      } catch(IllegalCharsetNameException e) {
         //
         //  x6qRkzmUp}NMK;z#;
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      String string0 = "tbody";
      Document document0 = Parser.parse("tbody", "U9>)5'");
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.noQuirks;
      Document document1 = document0.quirksMode(document_QuirksMode0);
      Document document2 = document1.ownerDocument();
      document1.addClass("sk~PQ_Z");
      document0.previousElementSiblings();
      document1.doSetBaseUri("sk~PQ_Z");
      Element element0 = document1.append("U9>)5'");
      Document document3 = Document.createShell("");
      document3.clone();
      String string1 = "Uw<zs";
      document2.attr("U9>)5'", "Uw<zs");
      // Undeclared exception!
      try { 
        element0.lastElementSibling();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      String string0 = "";
      Document document0 = Parser.parseBodyFragment("", "");
      document0.parser((Parser) null);
      document0.textNodes();
      String string1 = "~o";
      String string2 = null;
      String string3 = null;
      int int0 = 3008;
      Element element0 = null;
      try {
        element0 = new Element((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      Document document0 = Parser.parse("", "q{g Rb2c");
      document0.getElementsMatchingText("&lt;");
      document0.getElementsByTag("$N^7Hhav}HQ<\"4)");
      Document document1 = (Document)document0.toggleClass("q{g Rb2c");
      document1.getElementsByIndexEquals(0);
      document0.wholeText();
      document0.elementSiblingIndex();
      document1.getElementsByAttributeValueEnding("org.jsoup.nodes.Attributes$Dataset$DatasetIterator", "$N^7Hhav}HQ<\"4)");
      document1.clone();
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      Tag tag0 = Tag.valueOf("i)>e2]eLr}");
      Attributes attributes0 = new Attributes();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "i)>e2]eLr}";
      stringArray0[1] = "i)>e2]eLr}";
      stringArray0[2] = "i)>e2]eLr}";
      stringArray0[3] = "]P{";
      stringArray0[4] = "i)>e2]eLr}";
      stringArray0[5] = "i)>e2]eLr}";
      stringArray0[6] = "i)>e2]eLr}";
      stringArray0[7] = "i)>e2]eLr}";
      stringArray0[8] = "i)>e2]eLr}";
      attributes0.vals = stringArray0;
      Element element0 = new Element(tag0, "i)>e2]eLr}", attributes0);
      CDataNode cDataNode0 = new CDataNode("i)>e2]eLr}");
      element0.doClone(cDataNode0);
      // Undeclared exception!
      try { 
        element0.firstElementSibling();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      String string0 = "[%s$=%s]";
      Document document0 = Parser.parseBodyFragment("[%s$=%s]", "");
      int int0 = (-1);
      document0.setSiblingIndex(3538);
      document0.getElementsContainingText("[%s$=%s]");
      document0.getElementsByIndexGreaterThan((-1));
      document0.elementSiblingIndex();
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueEnding("", "[%s$=%s]");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("/-%yt1W$3", "Object must not be null");
      Element element0 = document0.html("Object must not be null");
      element0.getElementsByClass("cite");
      document0.getElementsContainingOwnText((String) null);
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeStarting((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("R<IjczPdvcH`", parseSettings0);
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("R<IjczPdvcH`", true);
      Element element0 = new Element(tag0, "R<IjczPdvcH`", attributes1);
      String string0 = "org.jsoup.select.Evaluator$Id";
      element0.getElementsByAttributeValueContaining("org.jsoup.select.Evaluator$Id", "org.jsoup.select.Evaluator$Id");
      Appendable appendable0 = null;
      int int0 = 1754;
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document_OutputSettings0.charset(" x6qRkzmUp}NMK;z#;");
        fail("Expecting exception: IllegalCharsetNameException");
      
      } catch(IllegalCharsetNameException e) {
         //
         //  x6qRkzmUp}NMK;z#;
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      String string0 = "dl";
      ParseSettings parseSettings0 = new ParseSettings(true, false);
      parseSettings0.normalizeTag("");
      Tag tag0 = Tag.valueOf("dl", parseSettings0);
      Attributes attributes0 = new Attributes();
      Element element0 = new Element(tag0, "dl", attributes0);
      String string1 = "ITE";
      Tag.valueOf("ITE", parseSettings0);
      // Undeclared exception!
      try { 
        element0.appendChild((Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      Tag tag0 = Tag.valueOf("<Hxm0EeNzrC;nUH", parseSettings0);
      Tag.valueOf("PdZS)m.tW", parseSettings0);
      Tag.valueOf("<Hxm0EeNzrC;nUH", parseSettings0);
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "od'A}t=FP;l", (Attributes) null);
      pseudoTextElement0.hasAttr("od'A}t=FP;l");
      pseudoTextElement0.absUrl("#u%4OiBo&Y{pjzr");
      pseudoTextElement0.getAllElements();
      pseudoTextElement0.clone();
      pseudoTextElement0.childNodeSize();
      pseudoTextElement0.hasText();
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      String string0 = "RL4>=\"!$@JN+/";
      Document document0 = Document.createShell("RL4>=\"!$@JN+/");
      Document document1 = document0.clone();
      Document document2 = document1.normalise();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.clone();
      Document.OutputSettings document_OutputSettings2 = document_OutputSettings1.prettyPrint(true);
      Document document3 = document2.outputSettings(document_OutputSettings2);
      Document document4 = document3.ownerDocument();
      // Undeclared exception!
      try { 
        document4.after("RL4>=\"!$@JN+/");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("cqw+nWcn?<", "LS,");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Charset charset0 = Charset.defaultCharset();
      Charset.defaultCharset();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.charset(charset0);
      document0.previousElementSiblings();
      Document document1 = document0.outputSettings(document_OutputSettings1);
      Entities.CoreCharset entities_CoreCharset0 = Entities.CoreCharset.fallback;
      document_OutputSettings1.coreCharset = entities_CoreCharset0;
      Element element0 = document0.body();
      Element element1 = element0.appendTo(document0);
      Pattern pattern0 = Pattern.compile("LS,", 0);
      document0.getElementsMatchingText(pattern0);
      element1.childNodeSize();
      Element element2 = document0.attr(")?}s`\"[BzSyruM", ")?}s`\"[BzSyruM");
      element2.getElementsMatchingOwnText(pattern0);
      element0.getElementsByIndexEquals(0);
      element0.wholeText();
      document0.elementSiblingIndex();
      document1.getElementsByAttributeValueEnding("LS,", ")?}s`\"[BzSyruM");
      element0.clone();
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      Document document0 = new Document("textarea");
      Element element0 = document0.appendElement("textarea");
      Element element1 = element0.text("textarea");
      StringWriter stringWriter0 = new StringWriter(617);
      StringWriter stringWriter1 = stringWriter0.append('Q');
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) "textarea");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings.Syntax document_OutputSettings_Syntax0 = Document.OutputSettings.Syntax.xml;
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.syntax(document_OutputSettings_Syntax0);
      Document.OutputSettings document_OutputSettings2 = document_OutputSettings1.outline(true);
      element1.outerHtmlTail(stringWriter2, (-2271), document_OutputSettings2);
      document0.outerHtml();
      // Undeclared exception!
      try { 
        document0.wrap("textarea");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("a)<LS%m*07~L92", "a)<LS%m*07~L92");
      Document document1 = document0.clone();
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.quirks;
      Document document2 = document1.quirksMode(document_QuirksMode0);
      Element element0 = document2.body();
      Element element1 = document0.appendText("a)<LS%m*07~L92");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Element element2 = element0.appendChild(element1);
      element2.nextElementSiblings();
      element0.getAllElements();
      document1.text();
      Charset charset0 = Charset.defaultCharset();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)124;
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.prettyPrint(false);
      Document.OutputSettings.Syntax document_OutputSettings_Syntax0 = Document.OutputSettings.Syntax.html;
      Document.OutputSettings document_OutputSettings2 = document_OutputSettings1.syntax(document_OutputSettings_Syntax0);
      Entities.EscapeMode entities_EscapeMode0 = Entities.EscapeMode.base;
      Document.OutputSettings document_OutputSettings3 = document_OutputSettings2.escapeMode(entities_EscapeMode0);
      Document.OutputSettings document_OutputSettings4 = document_OutputSettings3.indentAmount((int) (byte)124);
      // Undeclared exception!
      try { 
        document0.outerHtmlTail(charBuffer0, (byte)1, document_OutputSettings4);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      String string0 = "JVWF|H:-NlTeY~)";
      Document document0 = Document.createShell("JVWF|H:-NlTeY~)");
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = (Node) document0;
      nodeArray0[1] = (Node) document0;
      nodeArray0[2] = (Node) document0;
      document0.normalise();
      nodeArray0[3] = (Node) document0;
      nodeArray0[4] = (Node) document0;
      nodeArray0[5] = (Node) document0;
      nodeArray0[6] = (Node) document0;
      // Undeclared exception!
      try { 
        document0.insertChildren(24576, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d69~\"vK5GK,PY%SsyVX", "d69~\"vK5GK,PY%SsyVX");
      Document document1 = document0.normalise();
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.quirks;
      Document document2 = document1.quirksMode(document_QuirksMode0);
      Element element0 = document2.body();
      element0.nodeName();
      element0.before("d69~\"vK5GK,PY%SsyVX");
      document2.appendText("body");
      Element element1 = document0.doClone(document1);
      element1.outerHtml();
      element1.appendChild(element0);
      document2.childNodesCopy();
      LinkedList<PseudoTextElement> linkedList0 = new LinkedList<PseudoTextElement>();
      // Undeclared exception!
      try { 
        element1.insertChildren(77, (Collection<? extends Node>) linkedList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("qpGoRG!g", parseSettings0);
      Element element0 = new Element(tag0, "qpGoRG!g");
      assertEquals("qpGoRG!g", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      String string0 = "";
      Document document0 = Parser.parseBodyFragment("", "");
      document0.parser((Parser) null);
      String string1 = "~o";
      String string2 = null;
      String string3 = null;
      int int0 = 3008;
      Element element0 = null;
      try {
        element0 = new Element((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      Document document0 = new Document("tr");
      document0.empty();
      document0.id();
      document0.html();
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "tr");
      int int0 = (-129);
      // Undeclared exception!
      try { 
        stringWriter1.append((CharSequence) "", (-1885), (-129));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.nodes.Element", "");
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration("C#X1?(", "C#X1?(", true);
      document0.doClone(xmlDeclaration0);
      document0.val("C#X1?(");
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "");
      StringBuilder stringBuilder1 = stringBuilder0.append("-q;{+|wa");
      StringBuilder stringBuilder2 = stringBuilder1.append((CharSequence) "-q;{+|wa");
      char[] charArray0 = new char[9];
      charArray0[0] = 'e';
      charArray0[1] = '.';
      charArray0[2] = '5';
      charArray0[3] = 'K';
      charArray0[4] = '_';
      charArray0[5] = '^';
      charArray0[6] = '\"';
      charArray0[7] = '-';
      charArray0[8] = 'C';
      StringBuilder stringBuilder3 = stringBuilder2.insert(0, charArray0, 0, 0);
      int int0 = 347;
      // Undeclared exception!
      try { 
        stringBuilder3.insert(347, 347);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 347
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(" > ", "progress");
      Element element0 = document0.head();
      Element element1 = element0.toggleClass("progress");
      element1.getElementsByClass("bXMt1^fw1!8K= ");
      assertEquals(0, element1.siblingIndex());
      
      document0.removeClass("progress");
      element1.before("org.jsoup.nodes.Element$NodeList");
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      Document document0 = Document.createShell("");
      Document document1 = document0.ownerDocument();
      Document document2 = (Document)document0.addClass("");
      document0.previousElementSiblings();
      document1.doSetBaseUri("");
      document1.append("");
      document2.clone();
      Document document3 = (Document)document1.attr("", "");
      // Undeclared exception!
      try { 
        document3.lastElementSibling();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      Tag tag0 = Tag.valueOf("U9>)5'");
      CDataNode cDataNode0 = new CDataNode("U9>)5'");
      Attributes attributes0 = cDataNode0.attributes();
      Attributes attributes1 = attributes0.put("U9>)5'", true);
      FormElement formElement0 = new FormElement(tag0, "U9>)5'", attributes1);
      Element element0 = new Element(tag0, "U9>)5'", attributes1);
      formElement0.getElementsMatchingOwnText("var");
      FormElement formElement1 = formElement0.addElement(element0);
      formElement1.getElementsByAttribute("U9>)5'");
      // Undeclared exception!
      try { 
        element0.getElementsMatchingText((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.select.StructuralEvaluator");
      Document document1 = document0.parser((Parser) null);
      document1.hasText();
      // Undeclared exception!
      try { 
        document1.before("LMVw7T7'ol/*GAb9s");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("/-%yt1W$3", "Object must not be null");
      Element element0 = document0.html("Object must not be null");
      element0.getElementsByClass("cite");
      document0.getElementsContainingOwnText((String) null);
      document0.className();
      String string0 = ".";
      element0.getElementById(".");
      String string1 = "textarea";
      String string2 = "frameset";
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = (Node) document0;
      nodeArray0[1] = (Node) document0;
      nodeArray0[2] = (Node) document0;
      // Undeclared exception!
      try { 
        element0.insertChildren((-1354), nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      Document document1 = document0.normalise();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.charset((Charset) null);
      Document document2 = document1.outputSettings(document_OutputSettings1);
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.limitedQuirks;
      Document document3 = document2.quirksMode(document_QuirksMode0);
      // Undeclared exception!
      try { 
        document3.getElementById("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      String string0 = "qPdX4q#x8G/(";
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.clone();
      Element element0 = null;
      try {
        element0 = new Element((Tag) null, "qPdX4q#x8G/(", attributes1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      Document document0 = Document.createShell("");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      String string0 = "br";
      document0.getElementsByAttribute("br");
      Entities.EscapeMode entities_EscapeMode0 = Entities.EscapeMode.base;
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.escapeMode(entities_EscapeMode0);
      Document.OutputSettings document_OutputSettings2 = document_OutputSettings1.prettyPrint(false);
      Document.OutputSettings.Syntax document_OutputSettings_Syntax0 = Document.OutputSettings.Syntax.html;
      document_OutputSettings1.clone();
      document_OutputSettings2.prepareEncoder();
      document_OutputSettings0.syntax(document_OutputSettings_Syntax0);
      Document document1 = document0.outputSettings(document_OutputSettings2);
      document1.getElementsMatchingOwnText("br");
      document1.elementSiblingIndex();
      document_OutputSettings2.syntax(document_OutputSettings_Syntax0);
      document_OutputSettings2.prepareEncoder();
      document0.html("br");
      Document document2 = document1.clone();
      document2.text();
      LinkedList<Document> linkedList0 = new LinkedList<Document>();
      linkedList0.add(document1);
      // Undeclared exception!
      try { 
        document0.insertChildren((-1225), (Collection<? extends Node>) linkedList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "FYjK~E[!BAvRR{l");
      document0.classNames();
      String string0 = document0.html();
      assertEquals("FYjK~E[!BAvRR{l", document0.baseUri());
      assertEquals("<html>\n <head></head>\n <body></body>\n</html>", string0);
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("Bc]xb(gae)<", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("Bc]xb(gae)<");
      Attributes attributes0 = cDataNode0.attributes();
      Element element0 = new Element(tag0, "Bc]xb(gae)<", attributes0);
      element0.tag();
      assertEquals("Bc]xb(gae)<", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("[%s$=%s]", "");
      String string0 = "}Z7b-T\\oo";
      document0.setSiblingIndex(3538);
      document0.getElementsContainingText("}Z7b-Too");
      document0.getElementsByIndexGreaterThan(6);
      document0.elementSiblingIndex();
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueEnding("", "[%s$=%s]");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      Tag tag0 = Tag.valueOf("i)>e2]eLr}");
      Attributes attributes0 = new Attributes();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "i)>e2]eLr}";
      stringArray0[1] = "i)>e2]eLr}";
      stringArray0[2] = "i)>e2]eLr}";
      stringArray0[3] = "]P{";
      stringArray0[4] = "i)>e2]eLr}";
      stringArray0[5] = "i)>e2]eLr}";
      stringArray0[6] = "i)>e2]eLr}";
      stringArray0[7] = "i)>e2]eLr}";
      stringArray0[8] = "i)>e2]eLr}";
      attributes0.vals = stringArray0;
      Element element0 = new Element(tag0, "i)>e2]eLr}", attributes0);
      // Undeclared exception!
      try { 
        element0.firstElementSibling();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      Document document0 = Parser.parse("", "q{g Rb2c");
      Elements elements0 = document0.getElementsMatchingText("&lt;");
      document0.getElementsByTag("$N^7Hhav}HQ<\"4)");
      document0.toggleClass("q{g Rb2c");
      Elements elements1 = document0.getElementsByTag("1a_=1REdt~GZXY");
      assertTrue(elements1.equals((Object)elements0));
      assertEquals("q{g Rb2c", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      Document document0 = Document.createShell("S|s\"+H+z'Klc0");
      Document document1 = document0.clone();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.outline(true);
      Document document2 = document1.outputSettings(document_OutputSettings1);
      Document document3 = document2.normalise();
      Document document4 = document3.ownerDocument();
      document4.nodeName();
      assertEquals("S|s\"+H+z'Klc0", document4.baseUri());
      assertEquals(1, document0.childNodeSize());
      assertNotSame(document4, document0);
  }

  @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      Document document0 = new Document("+,S_evdl$2");
      // Undeclared exception!
      try { 
        document0.createElement("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }
}
