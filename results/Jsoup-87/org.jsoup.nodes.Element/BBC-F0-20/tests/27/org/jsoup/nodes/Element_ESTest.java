/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 05 21:59:19 GMT 2021
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedWriter;
import java.io.CharArrayWriter;
import java.io.IOException;
import java.io.PipedWriter;
import java.io.Reader;
import java.io.StringReader;
import java.io.StringWriter;
import java.nio.BufferOverflowException;
import java.nio.CharBuffer;
import java.nio.ReadOnlyBufferException;
import java.nio.charset.Charset;
import java.util.Collection;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import java.util.UnknownFormatConversionException;
import java.util.regex.Pattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.Comment;
import org.jsoup.nodes.DataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.DocumentType;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.nodes.TextNode;
import org.jsoup.nodes.XmlDeclaration;
import org.jsoup.parser.ParseErrorList;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Parser;
import org.jsoup.parser.Tag;
import org.jsoup.select.Elements;
import org.jsoup.select.Evaluator;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Element_ESTest extends Element_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Tag tag0 = Tag.valueOf("yf/00FJc~4Ph%>3jwh8");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, ")N", attributes0);
      Element element0 = formElement0.addClass("t\"lzlb:vh5tx2w>ts(");
      formElement0.addClass("Lz8YL");
      element0.addClass("t\"lzlb:vh5tx2w>ts(");
      element0.hasClass("4aKZcP8R");
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("t\"(", "t\"(");
      Element element0 = document0.body();
      Element element1 = document0.doClone(element0);
      element1.nextElementSiblings();
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Document document0 = Parser.parse("` U*Q", "` U*Q");
      Node[] nodeArray0 = new Node[4];
      // Undeclared exception!
      try { 
        document0.insertChildren((-2), nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array must not contain any null objects
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("x>q# ontX", "x>q# ontX");
      Node[] nodeArray0 = new Node[9];
      // Undeclared exception!
      try { 
        document0.insertChildren(0, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array must not contain any null objects
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(" Lz8YL", " Lz8YL");
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document0.outerHtmlTail(charArrayWriter0, 884, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("track", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("):m1HLvjV6*Em+$/");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "track", attributes0);
      StringWriter stringWriter0 = new StringWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      formElement0.outerHtmlHead(mockPrintWriter0, 306, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("#", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "[dW|dsH$cmxHByl", attributes0);
      formElement0.nodelistChanged();
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("class", "</");
      document0.ensureChildNodes();
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Document document0 = new Document("6");
      Parser parser0 = Parser.xmlParser();
      document0.parser(parser0);
      document0.wrap("body");
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("8UaUUsbN", "8UaUUsbN");
      Element element0 = document0.head();
      element0.wrap("8UaUUsbN");
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("t\"(", "t\"(");
      Element element0 = document0.body();
      element0.wrap("~[)nE9sAa_2_");
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("sjw@r|x_", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "org.jsoup.nodes.Elem|nt", attributes0);
      formElement0.setSiblingIndex((-2953));
      formElement0.val("sjw@r|x_");
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Tag tag0 = Tag.valueOf("fieldset");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "fieldset", attributes0);
      formElement0.val("fieldset");
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(" Lz8YL", " Lz8YL");
      document0.val("#document");
      document0.val();
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("class", "</");
      Element element0 = document0.appendElement("LNc,6}BZ");
      element0.toggleClass("java.lang.string@0000000012");
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(":1IHvjV6W*m$/", ":1IHvjV6W*m$/");
      document0.siblingIndex = (-2);
      document0.toggleClass(":1IHvjV6W*m$/");
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("8UaUUsbN", "8UaUUsbN");
      Element element0 = document0.head();
      element0.toggleClass("):m1IHLvjV6*Ezm+$/");
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(":nth-child(%d)", ":nth-child(%d)");
      Element element0 = document0.head();
      element0.text(":nth-child(%d)");
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      Tag tag0 = Tag.valueOf("DZykHs,cZ}G", parseSettings0);
      Element element0 = new Element(tag0, "Y", (Attributes) null);
      element0.text("Y");
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Tag tag0 = Tag.valueOf("e?]");
      Element element0 = new Element(tag0, "e?]");
      element0.text();
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Document document0 = Document.createShell("]g+U[vbtWm,V[Oo35+R");
      document0.siblingIndex = (-566);
      document0.tagName("]g+U[vbtWm,V[Oo35+R");
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Document document0 = Parser.parse("c=^f+~QP]IH:>11- ", "c=^f+~QP]IH:>11- ");
      document0.tagName("tr");
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Tag name must not be empty.", "Tag name must not be empty.");
      Element element0 = document0.body();
      element0.tagName("class");
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("$2%@&U,jO.$ixLxM9", parseSettings0);
      Element element0 = new Element(tag0, "u<vsIX4/~oS~h");
      element0.tagName("");
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("yaidf7", "<_aQp&:As");
      document0.tagName();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Tag tag0 = Tag.valueOf("fieldset");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "fieldset", attributes0);
      formElement0.tag();
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(":1IHvzjV6W*m</", ":1IHvzjV6W*m</");
      Element element0 = document0.appendElement("br");
      element0.tag();
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(":1IHvzjV6W*m</", ":1IHvzjV6W*m</");
      document0.tag();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Document document0 = Document.createShell("-E-");
      document0.shallowClone();
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Element element0 = new Element("head");
      element0.selectFirst("head");
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Document document0 = Parser.parse("):m1IHLvjV6*Em$/", "):m1IHLvjV6*Em$/");
      Element element0 = document0.appendElement("Xp");
      element0.selectFirst("Xp");
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Element element0 = new Element("head");
      Element element1 = element0.prependChild(element0);
      element1.selectFirst("head");
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      document0.select("br");
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("]g+U[vbtWm,V[Oo35+R", "java.lang.string@0000000044 t\"lzlb:vh5tx2w>ts( :matchesown");
      document0.siblingIndex = (-580);
      document0.removeClass("LNtR\"-W");
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Tag tag0 = Tag.valueOf("html");
      CDataNode cDataNode0 = new CDataNode("kwox5a");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "value", attributes0);
      formElement0.removeClass("+");
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(" Lz8YL", " Lz8YL");
      document0.appendTo(document0);
      document0.removeClass("$YT|sGP`;H{B!M]M");
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Document document0 = Parser.parse("s` UrQ!", "s` UrQ!");
      document0.appendElement("s` UrQ!");
      document0.appendTo(document0);
      document0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Document document0 = Parser.parse("", "x*/d$Y/U3q])}-T+zl5");
      document0.appendChild(document0);
      document0.prependText("");
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("8UaUUsbN", "8UaUUsbN");
      Element element0 = document0.head();
      element0.prependText("8UaUUsbN");
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("track", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("):m1HLvjV6*Em+$/");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "track", attributes0);
      formElement0.prependElement("java.lang.string@0000000013");
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("S1jw@X_A", parseSettings0);
      CDataNode cDataNode0 = new CDataNode(":1IHvjV6W*m$/");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, ":matches(%s)", attributes0);
      formElement0.prependElement("head");
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("tag name must not be empty. tag name must not be empty.", ")` U*^Q!");
      Element element0 = document0.appendElement(")` U*Q!");
      element0.prependChild(document0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Tag tag0 = Tag.valueOf("0;`\"Ww>9U(?.!Y{.\r");
      Element element0 = new Element(tag0, "0;`\"Ww>9U(?.!Y{.\r");
      Element element1 = element0.prepend("0;`\"Ww>9U(?.!Y{.\r");
      element1.siblingIndex = (-1432352094);
      element0.prepend("0;`\"Ww>9U(?.!Y{.\r");
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Document document0 = Parser.parse("java.lang.string@0000000227 4azc8r", "java.lang.string@0000000227 4azc8r");
      Element element0 = document0.head();
      element0.prepend("Children collection to be inserted must not be null.");
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(",laUUsbN", "):m1IHLvjV6*Ezm+$/");
      Element element0 = document0.appendElement(",laUUsbN");
      element0.prepend("");
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("H8L", "H8L");
      document0.parents();
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("t\"(", "t\"(");
      Element element0 = document0.body();
      Element element1 = document0.doClone(element0);
      element1.parents();
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("#", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "[dW|dsH$cmxHByl", attributes0);
      formElement0.parent();
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("):m1HLvjV6*Em+$/", "):m1HLvjV6*Em+$/");
      document0.appendTo(document0);
      document0.parent();
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("` U*Q", "` U*Q");
      Element element0 = document0.body();
      element0.parent();
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("8UaUUsbN", "8UaUUsbN");
      Element element0 = document0.appendElement("8UaUUsbN");
      Element element1 = element0.val("8UaUUsbN");
      element1.parent();
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(" Lz8YL", " Lz8YL");
      Element element0 = document0.append(" Lz8YL");
      element0.ownText();
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Tag tag0 = Tag.valueOf("e?]");
      Element element0 = new Element(tag0, "e?]");
      element0.nodeName();
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Document document0 = Parser.parse("java.lang.string@0000000011", "):m1IHLvjV6*Ezm+$/");
      Element element0 = document0.appendElement("):m1IHLvjV6*Ezm+$/");
      document0.appendElement("</");
      element0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Tag tag0 = Tag.valueOf("#");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "#", attributes0);
      Document document0 = Parser.parse("", "");
      document0.prependChild(formElement0);
      formElement0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "");
      Element element0 = document0.head();
      element0.isBlock();
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Document document0 = new Document("tag name must not be empty.");
      Evaluator.IsEmpty evaluator_IsEmpty0 = new Evaluator.IsEmpty();
      document0.is((Evaluator) evaluator_IsEmpty0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      Element element0 = document0.createElement("head");
      element0.is("head");
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Document document0 = Parser.parse(")` U*Q!", ")` U*Q!");
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) document0;
      document0.insertChildren(1, nodeArray0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Document document0 = Parser.parse("+", "$_*|bG?Qf");
      Element element0 = document0.body();
      Elements elements0 = document0.getElementsContainingText("=Y5CQxd|Q?ZObxq");
      element0.insertChildren(0, (Collection<? extends Node>) elements0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("x>q# ontX", "x>q# ontX");
      Element element0 = document0.head();
      Elements elements0 = document0.nextElementSiblings();
      element0.insertChildren(0, (Collection<? extends Node>) elements0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Document document0 = Parser.parse("):m1HLvjV6*Em+$/", "):m1HLvjV6*Em+$/");
      Element element0 = document0.appendElement("):m1HLvjV6*Em+$/");
      element0.html("d*");
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("java.lang.string@0000000038", "java.lang.string@0000000038");
      document0.siblingIndex = (-2688);
      document0.html("java.lang.string@0000000038");
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Tag tag0 = Tag.valueOf(")` U*Q!");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "O>zv7bk,L45", attributes0);
      formElement0.html((BufferedWriter) null);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Tag tag0 = Tag.valueOf("yf/00FJc~4Ph%>3jwh8");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "yf/00FJc~4Ph%>3jwh8", attributes0);
      formElement0.html();
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("$2%@&U,jO.$ixLxM9", parseSettings0);
      Element element0 = new Element(tag0, "u<vsIX4/~oS~h");
      element0.id();
      element0.hasAttributes();
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Document document0 = Parser.parse("s` UrQ!", "s` UrQ!");
      document0.hasAttributes();
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Element element0 = new Element(":contains(%s)");
      Pattern pattern0 = Pattern.compile(":contains(%s)");
      element0.getElementsMatchingText(pattern0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(">u@A=jwV%j=|scys", "org.jsoup.nodes.Element$1");
      Pattern pattern0 = Pattern.compile("", (-1735));
      document0.getElementsMatchingText(pattern0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Document document0 = Parser.parse("L!xEvI; vI7Jt%Hi*G", "L!xEvI; vI7Jt%Hi*G");
      document0.getElementsMatchingText("yab;");
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Tag tag0 = Tag.valueOf("e?]");
      Element element0 = new Element(tag0, "e?]");
      element0.getElementsMatchingText("");
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Document document0 = Document.createShell("23 7*@I=");
      Pattern pattern0 = Pattern.compile("23 7*@I=", 0);
      document0.getElementsMatchingOwnText(pattern0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Document document0 = Document.createShell("html");
      document0.getElementsMatchingOwnText("$");
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(":1IHvjV6W*m</", ":1IHvjV6W*m</");
      document0.getElementsByTag("'BJGP4\"&Dp.`+");
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Tag tag0 = Tag.valueOf("6p^n\"1q&j[6Ap@[");
      CDataNode cDataNode0 = new CDataNode("6p^n\"1q&j[6Ap@[");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "6p^n\"1q&j[6Ap@[", attributes0);
      formElement0.getElementsByTag("6p^n\"1q&j[6Ap@[");
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Tag tag0 = Tag.valueOf("2!i2oAJy&y}cI5T");
      Element element0 = new Element(tag0, "2!i2oAJy&y}cI5T");
      element0.getElementsByIndexLessThan(600);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      document0.getElementsByIndexGreaterThan(25);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Document document0 = Parser.parse("ku=", "ku=");
      document0.getElementsByIndexEquals(0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "org.jsoup.nodes.Element");
      Element element0 = document0.attr("", ",>");
      element0.getElementsByAttributeValueMatching((String) null, "");
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(",laUUsN", "</");
      document0.getElementsByAttributeValue("q-ms3$@", "|j>J?JYkmFi-3:%C<#^");
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("_:YlTU$^f9v1HC", "track");
      document0.reparentChild(document0);
      document0.remove();
      document0.attr("track", "d9g}wv5z5");
      document0.getElementsByAttributeValue("track", "d9g}wv5z5");
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Tag tag0 = Tag.valueOf("{]Y{kA`x*YW!K-w");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "{]Y{kA`x*YW!K-w", attributes0);
      formElement0.getElementsByAttributeStarting("{]Y{kA`x*YW!K-w");
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Tag tag0 = Tag.valueOf("r3xac6f<[+1st@");
      Attributes attributes0 = new Attributes();
      attributes0.put("Tag name must not be empty.", "s+");
      FormElement formElement0 = new FormElement(tag0, "8UaUUsbN", attributes0);
      formElement0.getElementsByAttributeStarting("Tag name must not be empty.");
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(true, false);
      Tag tag0 = Tag.valueOf("l5)m%qzP_@", parseSettings0);
      Attributes attributes0 = new Attributes();
      attributes0.put("l5)m%qzP_@", "bJ");
      FormElement formElement0 = new FormElement(tag0, "n*`aQ RlQHd?j", attributes0);
      formElement0.getElementsByAttribute("l5)m%qzP_@");
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("yaidf7", "<_aQp&:As");
      Element element0 = document0.body();
      element0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("head", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("dj*\"H");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "t\"LzlB:VH5tx2W>ts(", attributes0);
      formElement0.empty();
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("J`C@;YRW1H{z65s", "o");
      Element element0 = document0.appendElement("J`C@;YRW1H{z65s");
      element0.empty();
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("yf/00FJc~4Ph%>3jwh8", "jU<aR-w6f*,,]1Lv>(e");
      Element element0 = document0.body();
      element0.doClone(document0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("OOenWz:jerl62&h|{y", "replacementChar");
      Element element0 = document0.body();
      element0.clone();
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Tag tag0 = Tag.valueOf("#");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "#", attributes0);
      formElement0.clone();
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(" Lz8YL", " Lz8YL");
      Element element0 = document0.body();
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      element0.classNames(set0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("7", "7");
      document0.siblingIndex = (-1464);
      Set<String> set0 = document0.classNames();
      document0.classNames(set0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Element element0 = new Element("head");
      element0.prependChild(element0);
      Set<String> set0 = element0.classNames();
      element0.classNames(set0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("~&B@aNV0[^&", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "AfterAttributeValue_quoted", attributes0);
      formElement0.addClass("yf/00FJc~4Ph%>3jwh8");
      formElement0.classNames();
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("~&B@aNV0[^&", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "AfterAttributeValue_quoted", attributes0);
      formElement0.addClass("yf/00FJc~4Ph%>3jwh8");
      formElement0.className();
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Document document0 = Parser.parse("ku=", "ku=");
      Element element0 = document0.empty();
      element0.children();
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Document document0 = Parser.parse("java.lang.string@0000000011", "):m1IHLvjV6*Ezm+$/");
      document0.children();
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Document document0 = new Document("br");
      document0.childNodeSize();
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("ScriptData", "ScriptData");
      document0.childNodeSize();
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Document document0 = Document.createShell("Xp");
      document0.child(0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("8UaUUsbN", "8UaUUsbN");
      Element element0 = document0.head();
      element0.before((Node) document0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Document document0 = Parser.parse(":m1IHvjV6W*m$/", ":m1IHvjV6W*m$/");
      document0.setParentNode(document0);
      CDataNode cDataNode0 = new CDataNode("yf/00FJc~4Ph%>3jwh8");
      document0.before((Node) cDataNode0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Document document0 = new Document("fieldset");
      Document document1 = Parser.parseBodyFragment("fieldset", " ");
      document0.setParentNode(document1);
      document0.before("java.lang.string@0000000011 `i");
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Document document0 = Document.createShell("tag name must not be empty.");
      Element element0 = document0.head();
      element0.before("tag name must not be empty.");
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("$1qMeKe,fXdr }{f", "$1qMeKe,fXdr }{f");
      Document document1 = document0.clone();
      Document document2 = document1.parser((Parser) null);
      document2.appendTo(document0);
      document2.before("$1qMeKe,fXdr }{f");
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Document document0 = new Document("");
      document0.baseUri();
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(">u@A=jwV%j=|scys", ">u@A=jwV%j=|scys");
      document0.attr("s", "org.jsoup.nodes.Element$1");
      document0.attributes();
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Document document0 = Parser.parse("):m1HLvjV6*Em+$/", "):m1HLvjV6*Em+$/");
      Element element0 = document0.appendElement("):m1HLvjV6*Em+$/");
      element0.attr("):m1HLvjV6*Em+$/", false);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("x>q# ontX", "x>q# ontX");
      Element element0 = document0.head();
      element0.attr("4icbl<$ht", true);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Document document0 = Parser.parse("):m1HLvjV6*Em+$/", "):m1HLvjV6*Em+$/");
      document0.attr("):m1HLvjV6*Em+$/", false);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(",laUUsN", "</");
      Element element0 = document0.appendElement("LNc,6}BZ");
      Element element1 = element0.val("q-ms3$@");
      element1.attr(",laUUsN", "java.lang.string@0000000011");
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Document document0 = Document.createShell("]g+U[vbtWm,V[Oo35+R");
      document0.siblingIndex = (-566);
      document0.attr("/H|C", "java.lang.string@0000000044 t\"lzlb:vh5tx2w>ts( :matchesown");
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Document document0 = Document.createShell("~[`nEsfz_2_");
      Element element0 = document0.head();
      element0.attr("", "DoctypeSystemIdentifier_doubleQuoted");
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("yTW<4L^H?", "&so+");
      Element element0 = document0.html("");
      document0.appendTo(element0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("InTable", "InTable");
      Element element0 = document0.body();
      element0.appendTo(document0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(",laUUsN", "</");
      Element element0 = document0.appendElement("LNc,6}BZ");
      element0.appendTo(document0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("x>q# ontX", "x>q# ontX");
      Element element0 = document0.head();
      element0.appendText("msqvikI)L/jr+");
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("class", "</");
      Element element0 = document0.appendElement("LNc,6}BZ");
      element0.appendText("3P6!&iT<\"^");
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("form", "form");
      document0.appendElement("html");
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "F%f ~`iVY^y%5~9");
      Element element0 = document0.head();
      element0.remove();
      element0.appendChild(document0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(")", "8xI");
      Element element0 = document0.head();
      element0.append(",dkz_r@#6");
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Document document0 = Document.createShell("_*\"^f-");
      Element element0 = document0.appendElement("t\"lzlb:vh5tx2w>ts(");
      element0.append("t\"lzlb:vh5tx2w>ts(");
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Document document0 = new Document("");
      document0.append("");
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(">u@A=jwV%j=|scys", ">u@A=jwV%j=|scys");
      Element element0 = document0.appendElement("LNc,6}BZ");
      element0.after((Node) document0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("x>q# ontX", "x>q# ontX");
      Element element0 = document0.head();
      element0.after((Node) document0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(":1IHvjV6W*m</", ":1IHvjV6W*m</");
      document0.setParentNode(document0);
      Element element0 = document0.head();
      document0.after((Node) element0);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(",laUUsN", "</");
      Element element0 = document0.appendElement("LNc,6}BZ");
      element0.after("java.lang.string@0000000011");
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(")` U*Q!", ")` U*Q!");
      Element element0 = document0.createElement("kwox5a");
      element0.prependChild(document0);
      document0.after(" > ");
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("aside", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "2ua1O/$oid", attributes0);
      formElement0.addClass("#document");
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Document document0 = Parser.parse("_`$k<jql}", "_`$k<jql}");
      Element element0 = document0.appendElement("_`$k<jql}");
      element0.addClass("itemscope");
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Tag tag0 = Tag.valueOf("ai");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "ai", attributes0);
      formElement0.prepend("#root");
      formElement0.addClass("ai");
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Document document0 = Document.createShell("-E-");
      document0.appendChild(document0);
      // Undeclared exception!
      document0.wrap("attributeValueUnquoted");
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Document document0 = Parser.parse("):m1IHLvjV6*Ezm+$/", "):m1IHLvjV6*Ezm+$/");
      // Undeclared exception!
      try { 
        document0.wrap((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Document document0 = new Document("java.lang.string@0000000025");
      CDataNode cDataNode0 = new CDataNode("java.lang.string@0000000025");
      document0.setParentNode(cDataNode0);
      // Undeclared exception!
      try { 
        document0.wrap("java.lang.string@0000000025");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Document document0 = new Document("):m1IHLvjV6*Ezm+$/");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.val("");
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("S(jw@X_A", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("S(jw@X_A");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "2", attributes0);
      attributes0.vals = null;
      // Undeclared exception!
      try { 
        formElement0.val("d");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("S(jw@I_A", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("s+");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "s+", attributes0);
      Element element0 = formElement0.addClass("-4bM");
      String[] stringArray0 = new String[2];
      attributes0.vals = stringArray0;
      // Undeclared exception!
      try { 
        element0.val("");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Tag tag0 = Tag.valueOf("track");
      CDataNode cDataNode0 = new CDataNode("cRcd_t)");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "track", attributes0);
      String[] stringArray0 = new String[0];
      attributes0.keys = stringArray0;
      // Undeclared exception!
      try { 
        formElement0.val();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Document document0 = Parser.parse("):m1IHLvjV6*Em$/", "):m1IHLvjV6*Em$/");
      // Undeclared exception!
      try { 
        document0.toggleClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Document document0 = Document.createShell("ld");
      document0.empty();
      // Undeclared exception!
      try { 
        document0.text("ld");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Document document0 = Parser.parse(":m1IHLvjV6W*Em$/", ":m1IHLvjV6W*Em$/");
      // Undeclared exception!
      try { 
        document0.text((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("TagName", "TagName");
      Element element0 = document0.body();
      element0.parentNode = (Node) document0;
      // Undeclared exception!
      try { 
        document0.text();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("ScriptData", "ScriptData");
      Element element0 = document0.appendElement("ScriptData");
      element0.siblingIndex = (-2);
      // Undeclared exception!
      try { 
        element0.text();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("2ua1O/$oid", "<Ez");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.tagName("2ua1O/$oid");
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("yf/00FJc~4Ph%>3jwh8", "yf/00FJc~4Ph%>3jwh8");
      // Undeclared exception!
      try { 
        document0.tagName((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Tag name must not be empty.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(" Lz8YL", "; w4*G^F.f");
      TextNode textNode0 = new TextNode("math");
      document0.setParentNode(textNode0);
      // Undeclared exception!
      try { 
        document0.siblingElements();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Document document0 = Parser.parse("L!xEvI; vI7Jt%Hi*G", "L!xEvI; vI7Jt%Hi*G");
      // Undeclared exception!
      try { 
        document0.selectFirst("h5+YwqV]wn@[@l,8");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Did not find balanced marker at '@l,8'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Document document0 = Parser.parse(",wC5Wmgt3!c[CF}{", ",wC5Wmgt3!c[CF}{");
      // Undeclared exception!
      try { 
        document0.selectFirst("gpc axU(7%~");
        fail("Expecting exception: UnknownFormatConversionException");
      
      } catch(UnknownFormatConversionException e) {
         //
         // Conversion = '~'
         //
         verifyException("java.util.Formatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      Tag tag0 = Tag.valueOf("DZykHs,cZ}G", parseSettings0);
      Element element0 = new Element(tag0, "Y", (Attributes) null);
      // Undeclared exception!
      try { 
        element0.selectFirst((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Document document0 = Parser.parse("):m1IHLvjV6*Ezm+$/", "):m1IHLvjV6*Ezm+$/");
      // Undeclared exception!
      try { 
        document0.select("w}yxxCJkvR");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query 'w}yxxCJkvR': unexpected token at '}yxxCJkvR'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Document document0 = Document.createShell("23 7*@I=");
      // Undeclared exception!
      try { 
        document0.select("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Element element0 = new Element("-E-");
      // Undeclared exception!
      try { 
        element0.removeClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Document document0 = Parser.parse(" flmti=su?n@gf4", "@K0&");
      CDataNode cDataNode0 = new CDataNode("XTl<I");
      document0.setParentNode(cDataNode0);
      // Undeclared exception!
      try { 
        document0.previousElementSibling();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Document document0 = Parser.parse("!%,fj0R#W^m/", "!%,fj0R#W^m/");
      TextNode textNode0 = new TextNode("!%,fj0R#W^m/");
      Element element0 = document0.doClone(textNode0);
      // Undeclared exception!
      try { 
        Element.preserveWhitespace(element0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Tag tag0 = Tag.valueOf("s^QF-R7Q");
      Element element0 = new Element(tag0, "sub");
      ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
      List<Node> list0 = Parser.parseFragment("sub", element0, "s^QF-R7Q", parseErrorList0);
      element0.childNodes = list0;
      // Undeclared exception!
      try { 
        element0.prependText("timeout");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableList", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(">u@A=jwV%j=|scys", "org.jsoup.nodes.Element$1");
      // Undeclared exception!
      try { 
        document0.prependText((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      document0.appendTo(document0);
      // Undeclared exception!
      document0.prependElement("");
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      // Undeclared exception!
      try { 
        document0.prependElement("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("TagName", "TagName");
      Element element0 = document0.body();
      element0.parentNode = (Node) document0;
      // Undeclared exception!
      try { 
        document0.prependChild(element0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      StringReader stringReader0 = new StringReader("#");
      Document document0 = parser0.parseInput((Reader) stringReader0, "#");
      // Undeclared exception!
      try { 
        document0.prependChild((Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(" Lz8YL", " Lz8YL");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.prepend("bGZ|%vB`m");
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Document document0 = Parser.parse("s` UrQ!", "s` UrQ!");
      // Undeclared exception!
      try { 
        document0.prepend((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("!pfMmSylwLz", "!pfMmSylwLz");
      Comment comment0 = new Comment("!pfMmSylwLz");
      XmlDeclaration xmlDeclaration0 = comment0.asXmlDeclaration();
      document0.setParentNode(xmlDeclaration0);
      // Undeclared exception!
      try { 
        document0.prepend("!pfMmSylwLz");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Xp", "Xp");
      MockFile mockFile0 = new MockFile("/Ou:V%}", "");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document_OutputSettings0.indentAmount(327);
      // Undeclared exception!
      document0.outerHtmlTail(mockPrintStream0, 327, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("~[`nE9sAa_2_", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "~[`nE9sAa_2_", attributes0);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      // Undeclared exception!
      try { 
        formElement0.outerHtmlTail(charBuffer0, 884, document_OutputSettings0);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Document document0 = Parser.parse("]1D4<]IOKok*", "]1D4<]IOKok*");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlTail((Appendable) null, (-767), document_OutputSettings0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Document document0 = Parser.parse("T}J<{se", "T}J<{se");
      StringBuilder stringBuilder0 = new StringBuilder();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlTail(stringBuilder0, (-885), document_OutputSettings0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // width must be > 0
         //
         verifyException("org.jsoup.internal.StringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Document document0 = new Document("fieldset");
      PipedWriter pipedWriter0 = new PipedWriter();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      try { 
        document0.outerHtmlTail(pipedWriter0, (-362), document_OutputSettings0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("!H,fwV6WMT/", "!H,fwV6WMT/");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document_OutputSettings0.indentAmount(751);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "!H,fwV6WMT/");
      // Undeclared exception!
      document0.outerHtmlHead(stringBuffer0, 751, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("s1jw@x_a", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "s1jw@x_a", attributes0);
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "s1jw@x_a");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        formElement0.outerHtmlHead(charBuffer0, (-1205), document_OutputSettings0);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.StringCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("noresize");
      FormElement formElement0 = new FormElement(tag0, "noresize", attributes0);
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        formElement0.outerHtmlHead(charBuffer0, 32, document_OutputSettings0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("9!NfBP5e", "9!NfBP5e");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlHead((Appendable) null, 58, document_OutputSettings0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(":1IHvjV6W*m</", ":1IHvjV6W*m</");
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(2909);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlHead(charArrayWriter0, (-215), document_OutputSettings0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // width must be > 0
         //
         verifyException("org.jsoup.internal.StringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("):m1HLevjV6*Em+$/", "):m1HLevjV6*Em+$/");
      PipedWriter pipedWriter0 = new PipedWriter();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      try { 
        document0.outerHtmlHead(pipedWriter0, 671, document_OutputSettings0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("yf/00FJc~4Ph%>3jwh8", "yf/00FJc~4Ph%>3jwh8");
      DocumentType documentType0 = new DocumentType("yf/00FJc~4Ph%>3jwh8", "yf/00FJc~4Ph%>3jwh8", "");
      document0.setParentNode(documentType0);
      // Undeclared exception!
      try { 
        document0.nextElementSiblings();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Document document0 = Document.createShell("BeforeHead");
      Comment comment0 = new Comment((String) null);
      document0.setParentNode(comment0);
      // Undeclared exception!
      try { 
        document0.nextElementSibling();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("#", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "[dW|dsH$cmxHByl", attributes0);
      // Undeclared exception!
      try { 
        formElement0.lastElementSibling();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Evaluator.IsLastChild evaluator_IsLastChild0 = new Evaluator.IsLastChild();
      Document document0 = Document.createShell("-E-");
      document0.appendChild(document0);
      // Undeclared exception!
      document0.is((Evaluator) evaluator_IsLastChild0);
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("s+", "lw*}?*W[V");
      // Undeclared exception!
      try { 
        document0.is((Evaluator) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("~&B@aNV0[^&", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "AfterAttributeValue_quoted", attributes0);
      formElement0.reparentChild(formElement0);
      // Undeclared exception!
      formElement0.is("org.jsoup.nodes.Element");
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Document document0 = Parser.parse(")` U*Q!", ")` U*Q!");
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = (Node) document0;
      nodeArray0[1] = (Node) document0;
      nodeArray0[2] = (Node) document0;
      // Undeclared exception!
      try { 
        document0.insertChildren(1, nodeArray0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Document document0 = Parser.parse("):m1IHLvjV6*Ezm+$/", "):m1IHLvjV6*Ezm+$/");
      Parser parser0 = Parser.htmlParser();
      Document document1 = document0.parser(parser0);
      List<Node> list0 = parser0.parseFragmentInput("{6`$sS:1fd_[", document0, "h&fPc");
      document1.childNodes = list0;
      LinkedHashSet<Comment> linkedHashSet0 = new LinkedHashSet<Comment>();
      // Undeclared exception!
      try { 
        document1.insertChildren(0, (Collection<? extends Node>) linkedHashSet0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableList", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Document document0 = new Document("):m1IHLvjV6*Ezm+$/");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.html("3B=moJ(]");
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("</", ":containsData");
      Element element0 = document0.head();
      element0.childNodes = null;
      // Undeclared exception!
      try { 
        element0.html(":first-child");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Tag tag0 = Tag.valueOf(":matches(regex) query must not be empty");
      CDataNode cDataNode0 = new CDataNode(":matches(regex) query must not be empty");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, ":matches(regex) query must not be empty", attributes0);
      // Undeclared exception!
      try { 
        formElement0.html((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("s1jw@x_a", "s1jw@x_a");
      DocumentType documentType0 = new DocumentType((String) null, "M_=\"!`", "s1jw@x_a", "u", "java.lang.string@0000000061");
      document0.parentNode = (Node) documentType0;
      // Undeclared exception!
      try { 
        document0.html("org.jsoup.nodes.Node$1");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Document document0 = Parser.parse("8uauusbn", "):m1HLvjV6*Em+$/");
      PipedWriter pipedWriter0 = new PipedWriter();
      // Undeclared exception!
      try { 
        document0.html(pipedWriter0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Pipe not connected
         //
         verifyException("org.jsoup.nodes.Node$OuterHtmlVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Document document0 = Parser.parse("!H,fj0pR#W*m/", "!H,fj0pR#W*m/");
      document0.setParentNode(document0);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      // Undeclared exception!
      document0.html(charArrayWriter0);
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Tag tag0 = Tag.valueOf("^");
      CDataNode cDataNode0 = new CDataNode("Y#{<)'1<-1.");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "t!Hzc-|~fgGU", attributes0);
      formElement0.html("java.lang.string@0000000108");
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "^");
      // Undeclared exception!
      try { 
        formElement0.html(charBuffer0);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.StringCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("org.jsoup.nodes.Element", "org.jsoup.nodes.Element");
      // Undeclared exception!
      try { 
        document0.html((PipedWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      Element element0 = document0.appendTo(document0);
      // Undeclared exception!
      element0.html();
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Document document0 = Parser.parse(",wC5Wmgt3!c[CF}{", ",wC5Wmgt3!c[CF}{");
      document0.childNodes = null;
      // Undeclared exception!
      try { 
        document0.html();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("!H,fj0R#W*m/", "!H,fj0R#W*m/");
      CDataNode cDataNode0 = new CDataNode(".");
      document0.setParentNode(cDataNode0);
      // Undeclared exception!
      try { 
        document0.html();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("s+", "s+");
      document0.childNodes = null;
      // Undeclared exception!
      try { 
        document0.hasText();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(" Lz8YL", " Lz8YL");
      // Undeclared exception!
      try { 
        document0.hasClass((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("track", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("):m1HLvjV6*Em+$/");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "track", attributes0);
      formElement0.addClass("^Ckm'W");
      String[] stringArray0 = new String[0];
      attributes0.vals = stringArray0;
      // Undeclared exception!
      try { 
        formElement0.hasClass("java.lang.string@0000000011");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Document document0 = Parser.parse(",wC5Wmgt3!c[CF}{", "#root");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText(",wC5Wmgt3!c[CF}{");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pattern syntax error: ,wC5Wmgt3!c[CF}{
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingOwnText((Pattern) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$MatchesOwn", e);
      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Document document0 = Document.createShell("-E-");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingOwnText((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Document document0 = Parser.parse("):m1IHLvjV6*Ezm+$/", "):m1IHLvjV6*Ezm+$/");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingOwnText("):m1IHLvjV6*Ezm+$/");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pattern syntax error: ):m1IHLvjV6*Ezm+$/
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Document document0 = Parser.parse(" Lz8YL", " Lz8YL");
      CDataNode cDataNode0 = new CDataNode("<oz3_6o!sy@n{%c[");
      document0.setParentNode(cDataNode0);
      // Undeclared exception!
      try { 
        document0.getElementsMatchingOwnText("F]|");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("NI;d=kjjYkilVS5U;", "NI;d=kjjYkilVS5U;");
      Element element0 = document0.appendElement("aI");
      Parser parser0 = Parser.xmlParser();
      List<Node> list0 = parser0.parseFragmentInput("NI;d=kjjYkilVS5U;", document0, "aI");
      element0.childNodes = list0;
      // Undeclared exception!
      try { 
        document0.getElementsContainingText("NI;d=kjjYkilVS5U;");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.nodes.Entities$CoreCharset", "org.jsoup.nodes.Entities$CoreCharset");
      CDataNode cDataNode0 = new CDataNode("org.jsoup.nodes.Entities$CoreCharset");
      document0.setParentNode(cDataNode0);
      // Undeclared exception!
      try { 
        document0.getElementsContainingText(" > ");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(":1IHvzjP]V6W*m</", ":1IHvzjP]V6W*m</");
      List<Node> list0 = document0.childNodesCopy();
      document0.childNodes = list0;
      // Undeclared exception!
      try { 
        document0.getElementsContainingOwnText("br");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      Document document0 = Parser.parse(" %D>{JzBJ", " %D>{JzBJ");
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration(" %D>{JzBJ", true);
      document0.setParentNode(xmlDeclaration0);
      // Undeclared exception!
      try { 
        document0.getElementsContainingOwnText("_sWQUKnGJ[");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(":1IHvzjV6W*m</", ":1IHvzjV6W*m</");
      Element element0 = document0.appendElement("br");
      element0.siblingIndex = (-1608);
      // Undeclared exception!
      try { 
        document0.getElementsContainingOwnText("br");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(">u@A=jwV%j=|scys", "org.jsoup.nodes.Element$1");
      // Undeclared exception!
      try { 
        document0.getElementsByTag("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Document document0 = new Document("%n2q lqs~_?c");
      document0.childNodes = null;
      // Undeclared exception!
      try { 
        document0.getElementsByIndexLessThan(39);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Document document0 = Parser.parse("3Wu>J#vcHK", "extend9'qed");
      DataNode dataNode0 = new DataNode("3Wu>J#vcHK");
      document0.setParentNode(dataNode0);
      // Undeclared exception!
      try { 
        document0.getElementsByIndexGreaterThan(4);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Document document0 = new Document("xtc/qJ% jt3");
      Comment comment0 = new Comment("xtc/qJ% jt3", "):m1hlvjv6*em+$/");
      XmlDeclaration xmlDeclaration0 = comment0.asXmlDeclaration();
      document0.setParentNode(xmlDeclaration0);
      // Undeclared exception!
      try { 
        document0.getElementsByIndexEquals(91);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      // Undeclared exception!
      try { 
        document0.getElementsByClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      Document document0 = Parser.parse("):m1IHLvjV6*Ezm+$/", "):m1IHLvjV6*Ezm+$/");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueStarting("", "fM>MIw-mHax4CkN");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Document document0 = Parser.parse(",wC5Wmgt3!c[CF}{", ",wC5Wmgt3!c[CF}{");
      document0.childNodes = null;
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueNot(":nth-child(%d)", "[un=m cbX0Z2206e(");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      Document document0 = Parser.parse("#", ",wC5Wmgt3!c[CF}{");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueNot((String) null, "[un=m cbX0Z2206e(");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("#", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "[dW|dsH$cmxHByl", attributes0);
      // Undeclared exception!
      try { 
        formElement0.getElementsByAttributeValueMatching("textarea", "[dW|dsH$cmxHByl");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pattern syntax error: [dW|dsH$cmxHByl
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("org.jsoup.parser.TokeniserState", "org.jsoup.parser.TokeniserState");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueEnding("VKV\"mSmlk6XaxK8YF\"", "'");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("track", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("):m1HLvjV6*Em+$/");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "track", attributes0);
      // Undeclared exception!
      try { 
        formElement0.getElementsByAttributeValueEnding("kCW", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Document document0 = Document.createShell("2ua1O/$oid");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueContaining("pE[)uH/`8`bt%f", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Document document0 = Parser.parse(" Lz8YL", " Lz8YL");
      List<Node> list0 = document0.childNodesCopy();
      document0.childNodes = list0;
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValue("('L~P`S]#", "*-}yYQg4");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "");
      // Undeclared exception!
      try { 
        document0.getElementsByAttribute("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("base", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "", (Attributes) null);
      // Undeclared exception!
      try { 
        formElement0.getElementById("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag0 = Tag.valueOf("java.lang.string@0000000227 4azc8r", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "java.lang.string@0000000227 4azc8r", attributes0);
      // Undeclared exception!
      try { 
        formElement0.firstElementSibling();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("~[`nE9sAa_2_", "}");
      CDataNode cDataNode0 = new CDataNode("~[`nE9sAa_2_");
      document0.setParentNode(cDataNode0);
      // Undeclared exception!
      try { 
        document0.firstElementSibling();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(";seEv:xZ6[9`iWt/._.", ";seEv:xZ6[9`iWt/._.");
      List<Node> list0 = Parser.parseFragment("#root", (Element) document0, ";seEv:xZ6[9`iWt/._.");
      document0.childNodes = list0;
      // Undeclared exception!
      try { 
        document0.empty();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(":1IHvzjVW*m</", ":1IHvzjVW*m</");
      document0.childNodes = null;
      // Undeclared exception!
      try { 
        document0.data();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      Tag tag0 = Tag.valueOf("ai");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "ai", attributes0);
      formElement0.addClass("ai");
      formElement0.setParentNode(formElement0);
      // Undeclared exception!
      try { 
        formElement0.cssSelector();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query 'ai.java.lang.String@0000000026': unexpected token at '@0000000026'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("~[`nE9sAa_2_", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "2ua1O/$oid", attributes0);
      // Undeclared exception!
      try { 
        formElement0.classNames((Set<String>) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Document document0 = new Document("):m1IHLvjV6*Ezm+$/");
      // Undeclared exception!
      try { 
        document0.child((-533));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Document document0 = Parser.parse("strong", "strong");
      Element element0 = document0.prependChild(document0);
      // Undeclared exception!
      element0.before("strong");
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(":1NHvjKV6W*m$/", ":1NHvjKV6W*m$/");
      TextNode textNode0 = TextNode.createFromEncoded(":1NHvjKV6W*m$/");
      document0.parentNode = (Node) textNode0;
      // Undeclared exception!
      try { 
        document0.before("kbd");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      Document document0 = Document.createShell("23 7*@I=");
      // Undeclared exception!
      try { 
        document0.attr((String) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("2Hua1O/$oid", "2Hua1O/$oid");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.attr("\"p`]UL[)^]I)bRZrI", "t{]RT(1.cCyyY$");
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(" Lz8Yn", " Lz8Yn");
      // Undeclared exception!
      try { 
        document0.attr((String) null, " Lz8Yn");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.ParseSettings", e);
      }
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.nodes.Node$1", "org.jsoup.nodes.Node$1");
      DataNode dataNode0 = new DataNode((String) null, (String) null);
      document0.setParentNode(dataNode0);
      // Undeclared exception!
      try { 
        document0.appendTo(document0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractList", e);
      }
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      Document document0 = new Document("(D8Y4");
      Element element0 = document0.doClone(document0);
      // Undeclared exception!
      try { 
        element0.appendTo(document0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("~&B@aNV0[^&", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "AfterAttributeValue_quoted", attributes0);
      // Undeclared exception!
      try { 
        formElement0.appendTo((Element) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(">u@A=jwV%j=|scys", "org.jsoup.nodes.Element$1");
      // Undeclared exception!
      try { 
        document0.appendText((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(" Lz8YL", " Lz8YL");
      document0.appendChild(document0);
      // Undeclared exception!
      document0.appendElement(" Lz8YL");
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Document document0 = Document.createShell("Xp");
      List<Node> list0 = document0.childNodes();
      document0.childNodes = list0;
      // Undeclared exception!
      try { 
        document0.appendElement("iO");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Document document0 = Parser.parse("):m1IHLjVEm/", "):m1IHLjVEm/");
      document0.childNodes = null;
      // Undeclared exception!
      try { 
        document0.appendElement("wp");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Element element0 = new Element("textarea");
      // Undeclared exception!
      try { 
        element0.appendElement("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(":1IHvzjV6W*m</", ":1IHvzjV6W*m</");
      CDataNode cDataNode0 = new CDataNode("s(jw@x_a");
      DataNode dataNode0 = new DataNode(":1IHvzjV6W*m</");
      Node node0 = cDataNode0.doClone(dataNode0);
      // Undeclared exception!
      try { 
        document0.appendChild(node0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractList", e);
      }
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf(":1ihvjv6w*m$/", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "</", attributes0);
      DataNode dataNode0 = DataNode.createFromEncoded("%9D$`<m8.?A{#98*", (String) null);
      dataNode0.setParentNode(formElement0);
      // Undeclared exception!
      try { 
        formElement0.appendChild(dataNode0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      Element element0 = new Element("Rcdata");
      // Undeclared exception!
      try { 
        element0.appendChild((Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("tag name must not be empty. tag name must not be empty.", ")` U*^Q!");
      Element element0 = document0.prependChild(document0);
      // Undeclared exception!
      element0.append(")` U*Q!");
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Document document0 = new Document(">58LJi%q9e");
      List<Node> list0 = Parser.parseXmlFragment("`#^d3Ae\"d`#pdFEA;", "`#^d3Ae\"d`#pdFEA;");
      document0.childNodes = list0;
      // Undeclared exception!
      try { 
        document0.append("8mQ:7N,[MB");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(">u@A=jwV%j=|scys", "org.jsoup.nodes.Element$1");
      // Undeclared exception!
      try { 
        document0.append((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("ic{", "X7Q(Tw");
      document0.reparentChild(document0);
      // Undeclared exception!
      try { 
        document0.after((Node) document0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Document document0 = Parser.parse("):m1IHLvjV6*Ezm+$/", "):m1IHLvjV6*Ezm+$/");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.after("8");
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(false, true);
      Tag tag0 = Tag.valueOf("):m1HLvjV6*Em+$/", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("):m1HLvjV6*Em+$/");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "):m1HLvjV6*Em+$/", attributes0);
      attributes0.keys = null;
      // Undeclared exception!
      try { 
        formElement0.addClass("^Ckm'W");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf(">u@A=jwV%j=|scys", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "org.jsoup.nodes.Element$1", attributes0);
      // Undeclared exception!
      try { 
        formElement0.addClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Tag tag0 = Tag.valueOf("`i");
      Attributes attributes0 = new Attributes();
      String[] stringArray0 = new String[4];
      attributes0.keys = stringArray0;
      FormElement formElement0 = new FormElement(tag0, "`i", attributes0);
      // Undeclared exception!
      try { 
        formElement0.addClass("`i");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Element element0 = null;
      try {
        element0 = new Element((Tag) null, "g", attributes0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("''y+Z'~3d)L'^", parseSettings0);
      Element element0 = null;
      try {
        element0 = new Element(tag0, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Element element0 = null;
      try {
        element0 = new Element("          ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      Tag tag0 = Tag.valueOf("yf/00FJc~4Ph%>3jwh8");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "yf/00FJc~4Ph%>3jwh8", attributes0);
      StringWriter stringWriter0 = new StringWriter();
      formElement0.html(stringWriter0);
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      Tag tag0 = Tag.valueOf("#");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "#", attributes0);
      Element element0 = formElement0.addClass("#");
      Element element1 = element0.addClass("iGCW$F%8\"");
      element1.hasClass("iGCW$F%8\"");
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("track", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("):m1HLvjV6*Em+$/");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "track", attributes0);
      formElement0.addClass("^Ckm'W");
      formElement0.hasClass("java.lang.string@0000000011");
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(":m1IHLvjV6*Em$/", ":m1IHLvjV6*Em$/");
      document0.hasClass(":m1IHLvjV6*Em$/");
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("Y1]H4U\"W;sk8\"^^", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "", (Attributes) null);
      Charset charset0 = Charset.defaultCharset();
      Set<String> set0 = charset0.aliases();
      formElement0.classNames(set0);
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(" Lz8YL", " Lz8YL");
      document0.prependText(" Lz8YL");
      document0.data();
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(" Lz8YL", " Lz8YL");
      document0.elementSiblingIndex();
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      Document document0 = Parser.parse("address", "]1D4<]IOKok*");
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = (Node) document0;
      nodeArray0[1] = (Node) document0;
      nodeArray0[2] = (Node) document0;
      nodeArray0[3] = (Node) document0;
      nodeArray0[4] = (Node) document0;
      nodeArray0[5] = (Node) document0;
      nodeArray0[6] = (Node) document0;
      nodeArray0[7] = (Node) document0;
      document0.addChildren(nodeArray0);
      document0.elementSiblingIndex();
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Document document0 = Parser.parse(")` U*Q!", ")` U*Q!");
      document0.appendTo(document0);
      document0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(",laUUsN", "</");
      Element element0 = document0.appendElement("LNc,6}BZ");
      element0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Document document0 = Parser.parseBodyFragmentRelaxed("2ua1O/$oid", "</");
      Tag tag0 = Tag.valueOf("2ua1O/$oid");
      FormElement formElement0 = new FormElement(tag0, "H", attributes0);
      document0.prependChild(formElement0);
      formElement0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Document document0 = Parser.parseBodyFragmentRelaxed("2ua1O/$oid", "</");
      Tag tag0 = Tag.valueOf("2ua1O/$oid");
      FormElement formElement0 = new FormElement(tag0, "H", attributes0);
      document0.prependChild(formElement0);
      formElement0.cssSelector();
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("</", ":containsData");
      Element element0 = document0.head();
      element0.html(":containsData");
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(" Lz8YL", " Lz8YL");
      Attributes attributes0 = document0.attributes();
      Tag tag0 = Tag.valueOf(" Lz8YL");
      FormElement formElement0 = new FormElement(tag0, "                    ", attributes0);
      // Undeclared exception!
      try { 
        formElement0.is("[");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Did not find balanced marker at ''
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("class", "</");
      document0.className();
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "");
      document0.isBlock();
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      Document document0 = new Document("xtc/qJ% jt3");
      document0.getElementsByIndexEquals(91);
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("-knfCz", "#");
      document0.baseUri();
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(">u@A=jwV%j=|scys", "org.jsoup.nodes.Element$1");
      Evaluator.AttributeWithValueStarting evaluator_AttributeWithValueStarting0 = new Evaluator.AttributeWithValueStarting("br", ":cB/a2N`ph");
      document0.is((Evaluator) evaluator_AttributeWithValueStarting0);
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("8UaUUsbN", "8UaUUsbN");
      Pattern pattern0 = Pattern.compile("l#(-#AYm[i~W6", 60);
      document0.getElementsByAttributeValueMatching((String) null, pattern0);
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      document0.select("head");
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      Document document0 = Document.createShell(" Lz8YL");
      document0.getElementsByAttributeValueEnding("4CjY2DjKf", "html");
      document0.doClone((Node) null);
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("!,fEwViJW[MT/", " > ");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.outline(true);
      Document document1 = document0.outputSettings(document_OutputSettings1);
      Document document2 = document1.normalise();
      document2.title(" > ");
      document2.toString();
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("ScriptData", "ScriptData");
      CharBuffer charBuffer0 = CharBuffer.allocate(36);
      // Undeclared exception!
      try { 
        document0.html(charBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("track", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("):m1HLvjV6*Em+$/");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "track", attributes0);
      FormElement formElement1 = new FormElement(tag0, "):m1HLvjV6*Em+$/", attributes0);
      formElement0.setParentNode(formElement1);
      formElement0.hasSameValue(formElement1);
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      Document document0 = Parser.parse("vale", "vale");
      document0.title("vale");
      document0.toString();
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("$8&k}_O, [(b}ib6", "body");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.prettyPrint(false);
      document0.outputSettings(document_OutputSettings1);
      document0.html();
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("textarea", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "Qep~", attributes0);
      formElement0.val();
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      Tag tag0 = Tag.valueOf("ai");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "ai", attributes0);
      Element element0 = formElement0.addClass("ai");
      element0.addClass("ai");
      formElement0.toggleClass("ai");
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      Tag tag0 = Tag.valueOf("ai");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "ai", attributes0);
      Element element0 = formElement0.addClass("ai");
      element0.addClass("ai");
      formElement0.getElementsByClass("ai");
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("AfterDoctypePublicIdentifier", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "y)zLX>L);YbAg", attributes0);
      formElement0.addClass("Lz8YL");
      formElement0.addClass("");
      formElement0.hasClass("F_q568,0#");
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag0 = Tag.valueOf("#document", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("#document");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "QmK'-S#^~Vq-M", attributes0);
      Element element0 = formElement0.addClass("7.IDS=X[)");
      Element element1 = formElement0.addClass("7.IDS=X[)");
      element1.addClass("#document");
      element0.hasClass("7.IDS=X[)");
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf(" Lz8YL", parseSettings0);
      CDataNode cDataNode0 = new CDataNode(" Lz8YL");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, " Lz8YL", attributes0);
      Element element0 = formElement0.addClass(":nth-child(%d)");
      formElement0.addClass(" Lz8YL");
      element0.hasClass("Cb,MCgL%{&gN3T");
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      Tag tag0 = Tag.valueOf("ai");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "ai", attributes0);
      Element element0 = formElement0.addClass("ai");
      element0.addClass("ai");
      formElement0.hasClass("java.lang.string@0000000011");
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      Tag tag0 = Tag.valueOf("yf/00FJc~4Ph%>3jwh8");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "yf/00FJc~4Ph%>3jwh8", attributes0);
      Element element0 = formElement0.addClass("Tag name must not be empty.");
      element0.hasClass(":containsData(text) query must not be empty");
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("65S<?l^W1<eh", "65S<?l^W1<eh");
      document0.data();
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      Document document0 = Parser.parse(":m1IHLvjV6W*Em$/", ":m1IHLvjV6W*Em$/");
      document0.hasText();
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(" ", " ");
      document0.hasText();
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      Document document0 = Parser.parse("<!", "command");
      document0.hasText();
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      Document document0 = Parser.parse("):m1IHLvjV6*Ezm+$/", "):m1IHLvjV6*Ezm+$/");
      document0.setParentNode(document0);
      document0.getElementsContainingText("):m1IHLvjV6*Ezm+$/");
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("fOaJY}v[ArI +");
      Element.preserveWhitespace(cDataNode0);
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      Document document0 = Document.createShell("br");
      document0.appendElement("br");
      document0.appendElement("br");
      document0.getElementsContainingOwnText("br");
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      Document document0 = Document.createShell("-E-");
      CDataNode cDataNode0 = new CDataNode("org.jsoup.nodes.Element$1");
      document0.prependChild(cDataNode0);
      document0.getElementsContainingOwnText("org.jsoup.nodes.Element$1");
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("e^*u", "#");
      DataNode dataNode0 = new DataNode("H", "<|9");
      document0.prependChild(dataNode0);
      document0.ownText();
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      Document document0 = Parser.parse("A+P!kx:G\"[fg,?}i,kr", "org.jsoup.nodes.Element");
      document0.wholeText();
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("         ", "         ");
      document0.append("):m1IHLvjV6*Ezm+$/");
      document0.getElementsContainingText("UU3d3B");
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("H8L", "H8L");
      document0.append("H8L");
      document0.getElementsContainingText("#document");
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(" }zyYL", " }zyYL");
      Element element0 = document0.prependText(" }zyYL");
      element0.getElementsContainingText(" }zyYL");
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      Document document0 = Parser.parse("):m1IDLvjT6*Ezm+$/", "):m1IDLvjT6*Ezm+$/");
      document0.appendElement("br");
      document0.getElementsContainingText("2u w");
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(":m1IHLvjV6*Em$/", ":m1IHLvjV6*Em$/");
      document0.title("):m1idlvjt6*ezm+$/");
      document0.text();
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("jM<?8Nv5r9", "jM<?8Nv5r9");
      document0.getElementsContainingText(".");
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("8UaUUsbN", "8UaUUsbN");
      Element element0 = document0.appendElement("r3XaC6f<[+1sT@");
      element0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      Document document0 = Parser.parse("):m1IHLvjV6*Ezm+$/", "):m1IHLvjV6*Ezm+$/");
      document0.setParentNode(document0);
      document0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(",laUUsbN", "):m1IHLvjV6*Ezm+$/");
      Element element0 = document0.appendElement(",laUUsbN");
      element0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      Document document0 = Parser.parse("s` UrQ!", "s` UrQ!");
      Element element0 = document0.appendElement("s` UrQ!");
      Element element1 = element0.appendElement("iC{");
      element1.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("J`C@;YRW1H{z65s", "o");
      Element element0 = document0.appendElement("J`C@;YRW1H{z65s");
      element0.previousElementSiblings();
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.nodes.Node$1", "org.jsoup.nodes.Node$1");
      document0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      Document document0 = Parser.parse("):m1IHLvjV6*Ezm+$/", "):m1IHLvjV6*Ezm+$/");
      document0.setParentNode(document0);
      document0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("8UaUUsbN", "8UaUUsbN");
      document0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("x>q# ontX", "x>q# ontX");
      Element element0 = document0.head();
      Elements elements0 = element0.nextElementSiblings();
      assertEquals("x>q# ontX", element0.baseUri());
      assertEquals(1, elements0.size());
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("org.jsoup.nodes.Element$1", "lsCdK;L,`V]bl+Sv");
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = (Node) document0;
      nodeArray0[1] = (Node) document0;
      nodeArray0[2] = (Node) document0;
      nodeArray0[3] = (Node) document0;
      nodeArray0[4] = (Node) document0;
      nodeArray0[5] = (Node) document0;
      nodeArray0[6] = (Node) document0;
      nodeArray0[7] = (Node) document0;
      nodeArray0[8] = (Node) document0;
      document0.addChildren(nodeArray0);
      Elements elements0 = document0.siblingElements();
      assertEquals("lsCdK;L,`V]bl+Sv", document0.baseUri());
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      Document document0 = Document.createShell(" Lz8YL");
      document0.siblingElements();
      assertEquals(1, document0.childNodeSize());
      assertEquals(" Lz8YL", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      Document document0 = new Document("):m1IHLvjV6*Ezm+$/");
      document0.setParentNode(document0);
      // Undeclared exception!
      try { 
        document0.siblingElements();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("):m1IHLvjV6*Ezm+$/", "):m1IHLvjV6*Ezm+$/");
      Element element0 = document0.head();
      element0.after("):m1IHLvjV6*Ezm+$/");
      String string0 = element0.cssSelector();
      assertEquals("html > head:nth-child(1)", string0);
      assertEquals("):m1IHLvjV6*Ezm+$/", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      Tag tag0 = Tag.valueOf("ai");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "ai", attributes0);
      formElement0.addClass("ai");
      formElement0.cssSelector();
      assertEquals(1, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      Tag tag0 = Tag.valueOf("yf/00FJc~4Ph%>3jwh8");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "yf/00FJc~4Ph%>3jwh8", attributes0);
      Node[] nodeArray0 = new Node[4];
      // Undeclared exception!
      try { 
        formElement0.insertChildren(61, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      Element element0 = new Element("head");
      Node[] nodeArray0 = new Node[0];
      // Undeclared exception!
      try { 
        element0.insertChildren((-1177974010), nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag0 = Tag.valueOf("):m1HLvjV6*Em+$/", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("):m1HLvjV6*Em+$/");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "):m1HLvjV6*Em+$/", attributes0);
      Node[] nodeArray0 = new Node[0];
      Element element0 = formElement0.insertChildren((-1), nodeArray0);
      assertEquals("):m1HLvjV6*Em+$/", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("H8L", "H8L");
      Elements elements0 = document0.getElementsContainingText("H8L");
      // Undeclared exception!
      try { 
        document0.insertChildren(1116, (Collection<? extends Node>) elements0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      Document document0 = Parser.parse("]1D4<]IOKok*", "]1D4<]IOKok*");
      LinkedList<DataNode> linkedList0 = new LinkedList<DataNode>();
      // Undeclared exception!
      try { 
        document0.insertChildren((-1436010313), (Collection<? extends Node>) linkedList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      Document document0 = Parser.parse("):m1IHLvjV6*Ezm+$/", "):m1IHLvjV6*Ezm+$/");
      Elements elements0 = document0.getElementsByIndexGreaterThan((-1));
      // Undeclared exception!
      try { 
        document0.insertChildren((-1), (Collection<? extends Node>) elements0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("x>q# ontX", "x>q# ontX");
      Elements elements0 = document0.nextElementSiblings();
      Element element0 = document0.insertChildren(0, (Collection<? extends Node>) elements0);
      assertEquals("x>q# ontX", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      Document document0 = Parser.parse(":m1IHLvjV6W*Em$/", ":m1IHLvjV6W*Em$/");
      List<DataNode> list0 = document0.dataNodes();
      assertTrue(list0.isEmpty());
      assertEquals(":m1IHLvjV6W*Em$/", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(" }zyYL", " }zyYL");
      Element element0 = document0.prependText(" }zyYL");
      element0.textNodes();
      assertEquals(2, document0.childNodeSize());
      assertEquals(" }zyYL", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("):m1IHLvjV6*Ezm+$/", ",laUUsbN");
      Element element0 = document0.appendElement(",laUUsbN");
      Element element1 = element0.val((String) null);
      element1.text("");
      // Undeclared exception!
      try { 
        element1.child(37);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 37, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      Document document0 = Parser.parse("):m1IHLvjV6*Em$/", "):m1IHLvjV6*Em$/");
      document0.selectFirst("Xp");
      assertEquals("):m1IHLvjV6*Em$/", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      Document document0 = Parser.parse("):m1IHLvjV6*Em$/", "):m1IHLvjV6*Em$/");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(" Lz8YL", " Lz8YL");
      document0.getAllElements();
      assertEquals(1, document0.childNodeSize());
      assertEquals(" Lz8YL", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      Document document0 = Document.createShell("tag name must not be empty.");
      // Undeclared exception!
      try { 
        document0.before("tag name must not be empty.");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(",laUUsbN", "):m1IHLvjV6*Ezm+$/");
      document0.getElementsByAttribute(",laUUsbN");
      assertEquals(1, document0.childNodeSize());
      assertEquals("):m1IHLvjV6*Ezm+$/", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      Elements elements0 = document0.getElementsByAttributeValueNot("%R", "%iTM");
      assertEquals(4, elements0.size());
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      Element element0 = new Element("head");
      Element element1 = element0.shallowClone();
      assertEquals("", element1.baseUri());
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(" Lz8YL", " Lz8YL");
      document0.doSetBaseUri(" Lz8YL");
      assertEquals(1, document0.childNodeSize());
      assertEquals(" Lz8YL", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("x>q# ontX", "x>q# ontX");
      // Undeclared exception!
      try { 
        document0.after((Node) document0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("]g+U[vbtWm,V[Oo35+R", "java.lang.string@0000000044 t\"lzlb:vh5tx2w>ts( :matchesown");
      document0.getElementsByAttributeValueContaining("java.lang.string@0000000044 t\"lzlb:vh5tx2w>ts( :matchesown", "java.lang.string@0000000044 t\"lzlb:vh5tx2w>ts( :matchesown");
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("8UaUUsbN", "8UaUUsbN");
      document0.getElementsByAttributeValueMatching("org.jsoup.nodes.Element$1", "8UaUUsbN");
      assertEquals("8UaUUsbN", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("9!NfBP5e", "9!NfBP5e");
      Elements elements0 = document0.getElementsByClass("9!NfBP5e");
      assertEquals("9!NfBP5e", document0.baseUri());
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test342()  throws Throwable  {
      Document document0 = Document.createShell("~[`nEsfz_2_");
      document0.is("InFrameset");
      assertEquals(1, document0.childNodeSize());
      assertEquals("~[`nEsfz_2_", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test343()  throws Throwable  {
      Document document0 = Parser.parse("):m1IWLvjV6*EJ$/", "):m1IWLvjV6*EJ$/");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueMatching("):m1IWLvjV6*EJ$/", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test344()  throws Throwable  {
      Document document0 = Document.createShell("-E-");
      Elements elements0 = document0.getElementsMatchingOwnText("org.jsoup.nodes.Element$1");
      assertEquals("-E-", document0.baseUri());
      assertTrue(elements0.isEmpty());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test345()  throws Throwable  {
      Tag tag0 = Tag.valueOf("yf/00FJc~4Ph%>3jwh8");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "yf/00FJc~4Ph%>3jwh8", attributes0);
      // Undeclared exception!
      try { 
        formElement0.getElementsByAttributeStarting((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test346()  throws Throwable  {
      Document document0 = new Document("):m1IHLvjV6*Ezm+$/");
      document0.normalise();
      document0.setParentNode(document0);
      document0.siblingElements();
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test347()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("x>q# ontX", "x>q# ontX");
      Elements elements0 = document0.getElementsByIndexLessThan(100);
      assertEquals("x>q# ontX", document0.baseUri());
      assertFalse(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test348()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("):m1IHLvjV6*Ezm+$/", "):m1IHLvjV6*Ezm+$/");
      // Undeclared exception!
      try { 
        document0.after("):m1IHLvjV6*Ezm+$/");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test349()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      Pattern pattern0 = Pattern.compile("", 1257);
      Elements elements0 = document0.getElementsMatchingOwnText(pattern0);
      assertEquals(4, elements0.size());
  }

  @Test(timeout = 4000)
  public void test350()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Tag name must not be empty.", "Tag name must not be empty.");
      Element element0 = document0.body();
      String string0 = element0.cssSelector();
      assertEquals("Tag name must not be empty.", element0.baseUri());
      assertEquals(1, document0.childNodeSize());
      assertEquals("html > body", string0);
  }

  @Test(timeout = 4000)
  public void test351()  throws Throwable  {
      Document document0 = Document.createShell("]g+U[vbtWm,V[Oo35+R");
      document0.getElementsByAttributeValueStarting("T", "T");
      assertEquals("]g+U[vbtWm,V[Oo35+R", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test352()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("9!NfBP5e", "9!NfBP5e");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValue((String) null, "N%j!Aux>M>P_I*-gYS");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test353()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("#", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "[dW|dsH$cmxHByl", attributes0);
      formElement0.wholeText();
      assertEquals("[dW|dsH$cmxHByl", formElement0.baseUri());
  }

  @Test(timeout = 4000)
  public void test354()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("8UaUUsbN", "8UaUUsbN");
      // Undeclared exception!
      try { 
        document0.before((Node) document0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test355()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("8UaUUsbN", "8UaUUsbN");
      document0.dataset();
      assertEquals("8UaUUsbN", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test356()  throws Throwable  {
      Element element0 = new Element("textarea");
      element0.val("br");
      assertEquals(1, element0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test357()  throws Throwable  {
      Document document0 = Parser.parse("):m1IHLvjV6*Ezm+$/", "):m1IHLvjV6*Ezm+$/");
      document0.previousElementSiblings();
      assertEquals("):m1IHLvjV6*Ezm+$/", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test358()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(" Lz8YL", " Lz8YL");
      Element element0 = document0.prependText(" Lz8YL");
      boolean boolean0 = element0.hasText();
      assertEquals(2, document0.childNodeSize());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test359()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("):m1HLvjV6*Em+$/", "):m1HLvjV6*Em+$/");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText((Pattern) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$Matches", e);
      }
  }

  @Test(timeout = 4000)
  public void test360()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(":1IHvjV6W*m$/", ":1IHvjV6W*m$/");
      Element element0 = document0.toggleClass(":1IHvjV6W*m$/");
      element0.hasClass("AfterAttributeName");
      assertEquals(1, element0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test361()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(" Lz8YL", " Lz8YL");
      document0.appendText(" Lz8YL");
      assertEquals(2, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test362()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("8UaUUsbN", "8UaUUsbN");
      // Undeclared exception!
      try { 
        document0.wrap("8UaUUsbN");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test363()  throws Throwable  {
      Document document0 = Document.createShell("tag name must not be empty.");
      Element element0 = document0.getElementById("h23Xq.aafJ)n{");
      assertEquals("tag name must not be empty.", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
      assertNull(element0);
  }
}
