/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 07 19:28:18 GMT 2021
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedWriter;
import java.io.CharArrayWriter;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.Reader;
import java.io.StringReader;
import java.io.StringWriter;
import java.nio.BufferOverflowException;
import java.nio.CharBuffer;
import java.nio.ReadOnlyBufferException;
import java.nio.charset.Charset;
import java.util.Collection;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import java.util.UnknownFormatConversionException;
import java.util.regex.Pattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.Comment;
import org.jsoup.nodes.DataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.DocumentType;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.nodes.PseudoTextElement;
import org.jsoup.nodes.TextNode;
import org.jsoup.nodes.XmlDeclaration;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Parser;
import org.jsoup.parser.Tag;
import org.jsoup.select.Elements;
import org.jsoup.select.Evaluator;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Element_ESTest extends Element_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("}\"6>B, o>@Bb", "}\"6>B, o>@Bb");
      document0.toggleClass("&;o8c;g");
      document0.toggleClass("}\"6>B, o>@Bb");
      document0.getElementsByClass("&;o8c;g");
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("P-D>N", "P-D>N");
      Element element0 = document0.body();
      document0.parentNode = (Node) element0;
      document0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("&;o8;g", "ry6");
      StringBuffer stringBuffer0 = new StringBuffer();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document0.outerHtmlTail(stringBuffer0, 22, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Document document0 = Document.createShell("g");
      document0.nodelistChanged();
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("og.jsup.noUesComment", "og.jsup.noUesComment");
      document0.ensureChildNodes();
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("textarea", "textarea");
      Element element0 = document0.prependElement("Tv");
      element0.wrap("D;o8C!g");
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("L~:+[", "L~:+[");
      Element element0 = document0.head();
      element0.wrap("br");
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Document document0 = Parser.parse("ae).zmm=w3", "ae).zmm=w3");
      Element element0 = document0.body();
      element0.wrap("*\"V]|EHF#5Zvg");
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Tag tag0 = Tag.valueOf("1]}h");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "1]}h", attributes0);
      formElement0.wholeText();
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Element element0 = new Element("ACDJA 88j\"qS0K_PQ,");
      element0.setSiblingIndex((-14));
      element0.val("ACDJA 88j\"qS0K_PQ,");
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(">.(2eJD", "VMV1\"14Lxku]*;8");
      Element element0 = document0.body();
      element0.val(">.(2eJD");
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("}\"6'>B,U o>@Bb", "}\"6'>B,U o>@Bb");
      Document document1 = new Document("");
      document1.prependChild(document0);
      document0.val("U{vbZHw?%~INIo8");
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Document document0 = new Document("piooECMg");
      document0.val("piooECMg");
      document0.val();
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Comment", "org.jsoup.nodes.Comment");
      document0.setSiblingIndex((-2939));
      document0.toggleClass("");
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Comment", "org.jsoup.nodes.Comment");
      Element element0 = document0.prependElement("]\"7'DAVU-]S");
      element0.text("]\"7'DAVU-]S");
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Document document0 = Document.createShell("ext7<");
      document0.text();
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("html", "html");
      document0.tagName("html");
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("L~:+v[", "L~:+v[");
      Element element0 = document0.body();
      element0.tagName("Tag name must not be empty.");
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Document document0 = new Document("piooECMg");
      document0.tagName("piooECMg");
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("}\"6'>B,U o>@Bb", "}\"6'>B,U o>@Bb");
      document0.tagName();
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "R}=7Qkj<");
      document0.tag();
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Document document0 = Document.createShell("disabled");
      Element element0 = document0.body();
      element0.tag();
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Element element0 = new Element("menuitem");
      element0.tag();
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("01f&a\"!");
      Attributes attributes0 = cDataNode0.attributes();
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("head", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "", attributes0);
      formElement0.shallowClone();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("}\"6'>B,U o>@Bb", "}\"6'>B,U o>@Bb");
      document0.selectFirst("#root");
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Comment", "org.jsoup.nodes.Comment");
      document0.select("org.jsoup.nodes.Comment");
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Document document0 = Document.createShell("#");
      document0.select("body");
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("V_M.n3jb", "V_M.n3jb");
      Element element0 = document0.clone();
      element0.siblingIndex = (-2218);
      element0.removeClass("org.jsoup.select.Evaluator$AllElements");
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("P-D>N", "P-D>N");
      Element element0 = document0.body();
      element0.removeClass("P-D>N");
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("}\"6'>B,U o>f@Bb", "}\"6'>B,U o>f@Bb");
      document0.appendTo(document0);
      document0.removeClass("}\"6'>B,U o>f@Bb");
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Comment", "org.jsoup.nodes.Comment");
      Element element0 = document0.shallowClone();
      element0.removeClass("org.jsoup.nodes.Comment");
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("org.jsoup.nodes.Commen", "org.jsoup.nodes.Commen");
      Element element0 = document0.body();
      element0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("textarea", "textarea");
      Element element0 = document0.body();
      element0.prependText("'Bav.-2d");
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("piooECMg", "piooECMg");
      document0.prependElement("aside");
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Document document0 = Document.createShell("#");
      Element element0 = document0.body();
      DataNode dataNode0 = DataNode.createFromEncoded("body", "body");
      element0.prependChild(dataNode0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Tag tag0 = Tag.valueOf("h5", (ParseSettings) null);
      CDataNode cDataNode0 = new CDataNode("");
      Attributes attributes0 = cDataNode0.attributes();
      Element element0 = new Element(tag0, "h5", attributes0);
      element0.prependChild(cDataNode0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      Element element0 = document0.body();
      element0.prepend("");
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Document document0 = Parser.parse("i", "i");
      document0.parents();
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("ext<", "ext<");
      Element element0 = document0.body();
      element0.parents();
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("}\"6'>B,U o>@Bb", "}\"6'>B,U o>@Bb");
      document0.parent();
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Document document0 = Document.createShell("#");
      Element element0 = document0.body();
      element0.parent();
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("}\"6'>B,U o>@Bb", "}\"6'>B,U o>@Bb");
      Document document1 = new Document("");
      document1.prependChild(document0);
      document0.parent();
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("}u\"6'>[u o>@bb", "}u\"6'>[u o>@bb");
      document0.appendTo(document0);
      document0.parent();
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      StringReader stringReader0 = new StringReader("r+^^~9dq}~{cAO\u0001");
      Document document0 = parser0.parseInput((Reader) stringReader0, "r+^^~9dq}~{cAO\u0001");
      document0.nodeName();
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("text<a", "text<a");
      Element element0 = document0.head();
      element0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Document document0 = Parser.parse("og.jsup.noUesComment", "og.jsup.noUesComment");
      Element element0 = document0.body();
      element0.isBlock();
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Document document0 = new Document(":last-of-typ{8e");
      document0.prependText("R<Ep}:Z5?m-GU^-}IY");
      Evaluator.IsEmpty evaluator_IsEmpty0 = new Evaluator.IsEmpty();
      document0.is((Evaluator) evaluator_IsEmpty0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("}\"6>B, o>@Bb", "}\"6>B, o>@Bb");
      Element element0 = document0.prependElement("Tv");
      element0.is("Tv");
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("}\"6>B, o>@B", "}\"6>B, o>@B");
      Document document1 = new Document("}\"6>B, o>@B");
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) document1;
      document0.insertChildren(1, nodeArray0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("tetarea", "tetarea");
      Element element0 = document0.body();
      LinkedList<DataNode> linkedList0 = new LinkedList<DataNode>();
      element0.insertChildren(0, (Collection<? extends Node>) linkedList0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("}\"6'>b,u o>@bb", "Tv");
      Element element0 = document0.body();
      element0.html("}\"6'>B,U o>@Bb");
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("}\"6>B, o>@Bb", "}\"6>B, o>@Bb");
      Element element0 = document0.prependElement("br");
      element0.html("/5eWk#vRc{9Wc");
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("2K(SO3XQ", "2K(SO3XQ");
      document0.html("");
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Document document0 = new Document(":nth-child(%d)");
      document0.html((CharArrayWriter) null);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Document document0 = new Document("\"!!ZRV<1I;gz");
      document0.html();
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("}\"6'>B,U o>@Bb", "}\"6'>B,U o>@Bb");
      Element element0 = document0.head();
      element0.hasAttributes();
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Document document0 = Parser.parse("", "P'KPixO6W$G");
      document0.hasAttributes();
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(";19i=dBstl7D2!", ";19i=dBstl7D2!");
      Pattern pattern0 = Pattern.compile(";19i=dBstl7D2!");
      document0.getElementsMatchingText(pattern0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Document document0 = Document.createShell("P'KPixO6W$G");
      document0.getElementsMatchingText("chJyuAkVhsY/|-&9W");
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Document document0 = new Document("piooEC;g");
      document0.getElementsMatchingText("");
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.select.Evaluator$AttributeWithValueContaining", "org.jsoup.select.Evaluator$AttributeWithValueContaining");
      Pattern pattern0 = Pattern.compile("Yj+.'igc=");
      document0.getElementsMatchingOwnText(pattern0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("}\"6'>B,U o>@Bb", "}\"6'>B,U o>@Bb");
      document0.getElementsMatchingOwnText("}\"6'>B,U o>@Bb");
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("G8Z]<Hs7w<8", "");
      document0.getElementsContainingOwnText(" #cdata=\"\"");
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Comment", "org.jsoup.nodes.Comment");
      document0.getElementsByTag("<a6]<p?wWn'{cb");
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Tag tag0 = Tag.valueOf("+;c]1]N:'5}zV$/");
      FormElement formElement0 = new FormElement(tag0, "Pattern syntax error: ", (Attributes) null);
      formElement0.getElementsByTag("+;c]1]N:'5}zV$/");
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("}\"6'>B,U o>@Bb", "}\"6'>B,U o>@Bb");
      document0.getElementsByIndexLessThan(352);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Document document0 = Parser.parse("og.jsup.noUesComment", "og.jsup.noUesComment");
      document0.getElementsByIndexGreaterThan((-1625949436));
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Pattern syntax error: ", "&f\"owe+");
      document0.getElementsByIndexEquals(1);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("}\"6>B, o>@Bb", "}\"6>B, o>@Bb");
      document0.toggleClass("}\"6>B, o>@Bb");
      document0.toggleClass("&;o8c;g");
      document0.getElementsByClass("&;o8c;g");
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("B@7@E)", "}=G:xZ>Z[/9yIUHq'");
      document0.getElementsByAttributeValueNot("B@7@E)", "menuitem");
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Document document0 = Document.createShell("#");
      document0.getElementsByAttributeValueEnding("#root", "#root");
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      StringReader stringReader0 = new StringReader("K%~r");
      Document document0 = parser0.parseInput((Reader) stringReader0, "K%~r");
      Element element0 = document0.attr("g5\tmi<p", "BogusComment");
      element0.getElementsByAttributeStarting("g5\tmi<p");
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Document document0 = Document.createShell("}\"6'>B,U o>f@Bb");
      Element element0 = document0.child(0);
      element0.reparentChild(document0);
      document0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Comment", "org.jsoup.nodes.Comment");
      document0.prependChild(document0);
      document0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Comment", "org.jsoup.nodes.Comment");
      Element element0 = document0.body();
      element0.empty();
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("textarea", "textarea");
      Element element0 = document0.body();
      element0.doClone(document0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("mXW", parseSettings0);
      Element element0 = new Element(tag0, "mXW");
      element0.doClone((Node) null);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("text<a", "text<a");
      Element element0 = document0.body();
      element0.clone();
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Element element0 = new Element("piooEC;g");
      element0.clone();
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Tag tag0 = Tag.valueOf("1]}h");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "br", attributes0);
      Element element0 = formElement0.shallowClone();
      element0.siblingIndex = 461;
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      element0.classNames(set0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("}\"6'>B,U o>@Bb", "}\"6'>B,U o>@Bb");
      Element element0 = document0.head();
      Charset charset0 = Charset.defaultCharset();
      Set<String> set0 = charset0.aliases();
      element0.classNames(set0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Element element0 = new Element("piooEC;g");
      Element element1 = element0.toggleClass("piooEC;g");
      element1.className();
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "");
      document0.children();
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Document document0 = new Document("L^[ZOX,");
      document0.childNodeSize();
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("og.jsup.noUesComment", "og.jsup.noUesComment");
      document0.childNodeSize();
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("}\"6'>b,u o>@bb", "}\"6'>b,u o>@bb");
      document0.reparentChild(document0);
      document0.before((Node) document0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(".gi5z(d7\"K", ".gi5z(d7\"K");
      Element element0 = document0.createElement("$=");
      Element element1 = element0.appendTo(document0);
      element1.before((Node) document0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Document document0 = Document.createShell("7}3,67!cz%rs-");
      Element element0 = document0.doClone(document0);
      element0.before("b:gN*?>F>9'");
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Document document0 = Parser.parse("e!&~0", "TP%qh%P");
      Element element0 = document0.prependElement("Tag name must not be empty.");
      element0.before("e!&~0");
      document0.ownText();
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("$Dj+X:vl", "$Dj+X:vl");
      Element element0 = document0.body();
      element0.before("#");
      element0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("}\"6'>B,U o>f@Bb", "}\"6'>B,U o>f@Bb");
      document0.baseUri();
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Document document0 = new Document("");
      document0.baseUri();
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Element element0 = new Element("ACDJA 88j\"qS0K_PQ,");
      element0.val("ACDJA 88j\"qS0K_PQ,");
      element0.attributes();
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("org.jsoup.nodes.Commen", "org.jsoup.nodes.Commen");
      Element element0 = document0.body();
      element0.attr("org.jsoup.nodes.Commen", false);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("].Vk3.!ua0)2*R", parseSettings0);
      Element element0 = new Element(tag0, "1]}h", (Attributes) null);
      element0.attr("P3'YE", false);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("IhMz-eLDeNf[zsH!lt", "IhMz-eLDeNf[zsH!lt");
      Element element0 = document0.body();
      element0.attr("IhMz-eLDeNf[zsH!lt", " />");
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("}\"6'>B,U o>@Bb", "}\"6'>B,U o>@Bb");
      Element element0 = document0.head();
      element0.attr(".", "Split offset must be not be negative");
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Comment", "org.jsoup.nodes.Comment");
      Document document1 = new Document("\"!!ZRV<1I;gz");
      document0.appendTo(document1);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("P-D>N", "P-D>N");
      Element element0 = document0.body();
      element0.appendTo(document0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("ext<", "ext<");
      Element element0 = document0.body();
      element0.appendText("'S?z!y2'\"u^ebM");
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("text<a", "text<a");
      Element element0 = document0.appendElement("D;o8C!g");
      element0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Document document0 = new Document(" />");
      document0.appendElement("org.jsoup.examples.HtmlToPlainText$FormattingVisitor");
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Document document0 = new Document("piooEC;g");
      document0.appendElement("header");
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("}\"6'>b,u o>@bb", "}\"6'>b,u o>@bb");
      Element element0 = document0.body();
      element0.appendChild(document0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("org.jsou.odes.Commen", "org.jsou.odes.Commen");
      document0.siblingIndex = 216;
      document0.append("org.jsou.odes.Commen");
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("}\"6'>B,U o>@Bb", "}\"6'>B,U o>@Bb");
      Element element0 = document0.head();
      element0.append("pioFoEC;g");
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Document document0 = new Document("");
      document0.append("");
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("TP%qh%P", "TP%qh%P");
      Element element0 = document0.head();
      element0.after((Node) document0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Document document0 = Parser.parse("TP%qh%P", "TP%qh%P");
      Element element0 = document0.prependElement("jt");
      element0.after("TP%qh%P");
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("text<a", "text<a");
      Element element0 = document0.body();
      element0.after("!4=4[. hv,ChH");
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Comment", "org.jsoup.nodes.Comment");
      document0.setSiblingIndex((-2939));
      document0.addClass("");
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.nodes.Element", "");
      Element element0 = document0.body();
      element0.addClass("");
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Element element0 = new Element("&;o8C;g");
      element0.addClass("&;o8C;g");
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Commen", "org.jsoup.nodes.Commen");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.wrap("default");
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      // Undeclared exception!
      try { 
        document0.wrap("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Document document0 = Document.createShell("oX,SFu-");
      document0.prependChild(document0);
      // Undeclared exception!
      document0.val("55J");
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("&;o8;g", "ry6");
      // Undeclared exception!
      try { 
        document0.toggleClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Document document0 = new Document("org.jsoup.nodes.Attributes$Dataset");
      // Undeclared exception!
      try { 
        document0.text("]IHF");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.select.Evaluator$AttributeWithValueContaining", "org.jsoup.select.Evaluator$AttributeWithValueContaining");
      // Undeclared exception!
      try { 
        document0.text((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("}u\"6'>[u o>@bb", "}u\"6'>[u o>@bb");
      document0.setSiblingIndex((-2419));
      document0.reparentChild(document0);
      // Undeclared exception!
      try { 
        document0.text();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("}\"6'>b,u o>@bb", "}\"6'>b,u o>@bb");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.tagName("22Vpk5%t;Za.ksn");
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Element element0 = new Element("StartTag");
      // Undeclared exception!
      try { 
        element0.tagName((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Tag name must not be empty.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Document document0 = new Document(":last-of-type");
      Element element0 = document0.prependText("R<Ep}:Z5?m-GU^-}IY");
      element0.parentNode = (Node) document0;
      // Undeclared exception!
      try { 
        element0.siblingElements();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      String string0 = "-RuS.&AS\\uiB";
      Document document0 = Document.createShell(string0);
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration("}\"6>B, o>@Bb", true);
      Element element0 = document0.doClone(xmlDeclaration0);
      // Undeclared exception!
      try { 
        element0.siblingElements();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("}\"6'>B,U o>f@Bb", "}\"6'>B,U o>f@Bb");
      // Undeclared exception!
      try { 
        document0.selectFirst("IwRl,UmBR{");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query 'UmBR{': unexpected token at '{'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("textarea", "textarea");
      // Undeclared exception!
      try { 
        document0.selectFirst((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Document document0 = Parser.parse("i", "i");
      // Undeclared exception!
      try { 
        document0.select(")U!");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query ')U!': unexpected token at ')U!'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Tag tag0 = Tag.valueOf("#root");
      Attributes attributes0 = new Attributes();
      Element element0 = new Element(tag0, "2fgv2)*2 s/:/b}", attributes0);
      // Undeclared exception!
      try { 
        element0.select("M1#u[ql%Il):N=");
        fail("Expecting exception: UnknownFormatConversionException");
      
      } catch(UnknownFormatConversionException e) {
         //
         // Conversion = 'I'
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("ext<", "ext<");
      // Undeclared exception!
      try { 
        document0.select("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("}\"6'>B,U o>f@Bb", "}\"6'>B,U o>f@Bb");
      // Undeclared exception!
      try { 
        document0.prependText((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("7cG.S$scxx+9Mp", "7cG.S$scxx+9Mp");
      Element element0 = document0.body();
      TextNode textNode0 = new TextNode("7cG.S$scxx+9Mp");
      textNode0.reparentChild(document0);
      element0.after((Node) textNode0);
      // Undeclared exception!
      document0.prependElement("Tv");
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Document document0 = new Document("}\"'>b,u o>@bb");
      Parser parser0 = Parser.xmlParser();
      Parser parser1 = parser0.settings((ParseSettings) null);
      document0.parser(parser1);
      // Undeclared exception!
      try { 
        document0.prependElement("}\"'>b,u o>@bb");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.Tag", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("}\"6'>B,U o>@Bb", "}\"6'>B,U o>@Bb");
      // Undeclared exception!
      try { 
        document0.prependElement((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Document document0 = Document.createShell("}\"6'>B,U o>f@Bb");
      Element element0 = new Element("}\"6'>B,U o>f@Bb");
      element0.reparentChild(document0);
      // Undeclared exception!
      try { 
        document0.prependChild(document0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("}\"6'>B,U o>@Bb", "}\"6'>B,U o>@Bb");
      Document document1 = Parser.parseBodyFragmentRelaxed("U{vbZHw?%~INIo8", "U{vbZHw?%~INIo8");
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = (Node) document1;
      nodeArray0[1] = (Node) document1;
      nodeArray0[2] = (Node) document0;
      Element element0 = document0.insertChildren(0, nodeArray0);
      // Undeclared exception!
      element0.prepend("zxe");
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Document document0 = Document.createShell("br");
      // Undeclared exception!
      try { 
        document0.prepend((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("text<a", "text<a");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlTail((Appendable) null, 27, document_OutputSettings0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("ext<", "ext<");
      StringWriter stringWriter0 = new StringWriter(3825);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlTail(stringWriter0, (-16), document_OutputSettings0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // width must be > 0
         //
         verifyException("org.jsoup.internal.StringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Document document0 = new Document("body");
      PipedWriter pipedWriter0 = new PipedWriter();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      try { 
        document0.outerHtmlTail(pipedWriter0, 1, document_OutputSettings0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("$Dj+X:vl", "$Dj+X:vl");
      MockFileWriter mockFileWriter0 = new MockFileWriter("@\"y", false);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.indentAmount(2188);
      // Undeclared exception!
      document0.outerHtmlHead(mockFileWriter0, 34, document_OutputSettings1);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlHead((Appendable) null, 431, document_OutputSettings0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("6Fp[Fp$le");
      // Undeclared exception!
      try { 
        document0.outerHtmlHead(mockPrintWriter0, (-1433506051), document_OutputSettings0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // width must be > 0
         //
         verifyException("org.jsoup.internal.StringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("org.jsoup.nodes.Commen", "org.jsoup.nodes.Commen");
      PipedWriter pipedWriter0 = new PipedWriter();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      try { 
        document0.outerHtmlHead(pipedWriter0, 41, document_OutputSettings0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Document document0 = new Document("UUMvv>|");
      TextNode textNode0 = new TextNode("3/s]'UwR36JzBpnwB", "3/s]'UwR36JzBpnwB");
      document0.setParentNode(textNode0);
      // Undeclared exception!
      try { 
        document0.nextElementSibling();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("}\"6>B, o>@Bb", "}\"6>B, o>@Bb");
      // Undeclared exception!
      try { 
        document0.lastElementSibling();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("7cG.S$scxx+9Mp", "7cG.S$scxx+9Mp");
      TextNode textNode0 = new TextNode("7cG.S$scxx+9Mp");
      textNode0.reparentChild(document0);
      // Undeclared exception!
      try { 
        document0.lastElementSibling();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Document document0 = Document.createShell("}\"6'>B,U o>f@Bb");
      document0.reparentChild(document0);
      Evaluator.IsRoot evaluator_IsRoot0 = new Evaluator.IsRoot();
      // Undeclared exception!
      document0.is((Evaluator) evaluator_IsRoot0);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("piooEC;g", "piooEC;g");
      // Undeclared exception!
      try { 
        document0.is((Evaluator) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("}\"6'>B,U o>@Bb", "}\"6'>B,U o>@Bb");
      // Undeclared exception!
      try { 
        document0.is("k_ox|{Y@V[y#]+14");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query 'k_ox|{Y@V[y#]+14': unexpected token at '{Y@V[y#]+14'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("}\"6'>B,U o>@Bb", "}\"6'>B,U o>@Bb");
      Document document1 = Parser.parseBodyFragmentRelaxed("U{vbZHw?%~INIo8", "U{vbZHw?%~INIo8");
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = (Node) document1;
      nodeArray0[1] = (Node) document1;
      nodeArray0[2] = (Node) document0;
      Element element0 = document0.insertChildren(0, nodeArray0);
      // Undeclared exception!
      element0.is("#root");
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Comment", "org.jsoup.nodes.Comment");
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = (Node) document0;
      nodeArray0[1] = (Node) document0;
      nodeArray0[2] = (Node) document0;
      // Undeclared exception!
      try { 
        document0.insertChildren(1, nodeArray0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("P-D>N", "P-D>N");
      document0.parentNode = (Node) document0;
      // Undeclared exception!
      document0.html("9)YG%");
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Document document0 = Document.createShell("g\"u<-e8<");
      DocumentType documentType0 = new DocumentType((String) null, "Fq-_;%;$${faQ#-ery", "Fq-_;%;$${faQ#-ery", "Fq-_;%;$${faQ#-ery");
      document0.setParentNode(documentType0);
      // Undeclared exception!
      try { 
        document0.html("g\"u<-e8<");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Document document0 = Parser.parse(" />", "java.lang.string@0000000067");
      MockFile mockFile0 = new MockFile(" />");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, true);
      OutputStreamWriter outputStreamWriter0 = new OutputStreamWriter(mockFileOutputStream0);
      outputStreamWriter0.close();
      // Undeclared exception!
      try { 
        document0.html(outputStreamWriter0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.nodes.Node$OuterHtmlVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("}u\"6'>[u o>@bb", "}u\"6'>[u o>@bb");
      document0.reparentChild(document0);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      // Undeclared exception!
      document0.html(charArrayWriter0);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("tetarea", "tetarea");
      // Undeclared exception!
      try { 
        document0.html((BufferedWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("tetarea", "tetarea");
      Element element0 = document0.body();
      element0.before((Node) document0);
      // Undeclared exception!
      element0.html();
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("ext<", "ext<");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document_OutputSettings0.charset((Charset) null);
      Document document1 = document0.outputSettings(document_OutputSettings0);
      // Undeclared exception!
      try { 
        document1.html();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Document$OutputSettings", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("}u\"6'>[u o>@bb", "}u\"6'>[u o>@bb");
      Comment comment0 = new Comment("u @>_yo{)\"o|rro", "}u\"6'>[u o>@bb");
      document0.setParentNode(comment0);
      // Undeclared exception!
      try { 
        document0.html();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Document document0 = Parser.parse("{iooECMg", ";L cX:N#qK5");
      // Undeclared exception!
      try { 
        document0.hasClass((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.select.Evaluator$AttributeWithValueContaining", "org.jsoup.select.Evaluator$AttributeWithValueContaining");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText((Pattern) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$Matches", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("LBLAc", "LBLAc");
      Pattern pattern0 = Pattern.compile("LBLAc", 125);
      TextNode textNode0 = new TextNode("LBLAc", "</");
      document0.setParentNode(textNode0);
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText(pattern0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.nodes.Comment", "L^[ZOX,");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingOwnText((Pattern) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$MatchesOwn", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("}\"6'>B,U o>f@Bb", "}\"6'>B,U o>f@Bb");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingOwnText((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("IhMz-eLDeNf[zsH!lt", "IhMz-eLDeNf[zsH!lt");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingOwnText("fv[<F2)`d/_fA,,\"v9;");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pattern syntax error: fv[<F2)`d/_fA,,\"v9;
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Insert position out of bounds.", "Insert position out of bounds.");
      DataNode dataNode0 = new DataNode("K{6Pv");
      document0.parentNode = (Node) dataNode0;
      // Undeclared exception!
      try { 
        document0.getElementsContainingText("Insert position out of bounds.");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("}\"6>B, o>@Bb", "}\"6>B, o>@Bb");
      // Undeclared exception!
      try { 
        document0.getElementsByTag("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Element element0 = new Element("}'l}NcgH*gn?c");
      TextNode textNode0 = TextNode.createFromEncoded(",`x\"r", ",`x\"r");
      element0.parentNode = (Node) textNode0;
      // Undeclared exception!
      try { 
        element0.getElementsByIndexGreaterThan(3151);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("}\"6'>B,U o>@Bb", "}\"6'>B,U o>@Bb");
      Element element0 = document0.head();
      element0.parentNode = (Node) document0;
      // Undeclared exception!
      try { 
        document0.getElementsByClass("}\"6'>B,U o>@Bb");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("}\"6'>B,U o>@Bb", "}\"6'>B,U o>@Bb");
      // Undeclared exception!
      try { 
        document0.getElementsByClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("P-D>N", "P-D>N");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueStarting("P-D>N", "\"");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("}\"6'>B,U o>@Bb", "}\"6'>B,U o>@Bb");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueStarting((String) null, "body");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("org.jsoup.nodes.Entities$CoreCharset", ".^1jY`y");
      document0.setParentNode(document0);
      document0.setSiblingIndex((byte) (-110));
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueNot(".^1jY`y", "x>7~J22@y]");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Document document0 = new Document(":last-of-typ{8e");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueMatching("\"Rvw!", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("}\"6'>B,U o>f@Bb", "}\"6'>B,U o>f@Bb");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueMatching("textarea", "U{vbZHw?%~INIo8");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pattern syntax error: U{vbZHw?%~INIo8
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Document document0 = Document.createShell("#");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueContaining("2{{vOxo", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Document document0 = Parser.parse("", "P'KPixO6W$G");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValue("org.jsoup.select.Evaluator$AttributeWithValueStarting", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("CH!,c-FQ", "CH!,c-FQ");
      document0.childNodes = null;
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeStarting("</");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeStarting("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("text<a", "text<a");
      // Undeclared exception!
      try { 
        document0.getElementsByAttribute((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("}\"6'>B,U o>@Bb", "}\"6'>B,U o>@Bb");
      // Undeclared exception!
      try { 
        document0.getElementById("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Comment", "org.jsoup.nodes.Comment");
      Element element0 = document0.prependElement("org.jsoup.nodes.Comment");
      element0.setSiblingIndex((-1319));
      // Undeclared exception!
      try { 
        document0.getElementById("ISWsl'N3j6[EHUjnp");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Element element0 = new Element("vAJeMBi`JK@5P");
      // Undeclared exception!
      try { 
        element0.firstElementSibling();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(">.(2eJD", "VMV1\"14Lxku]*;8");
      Element element0 = document0.body();
      element0.toggleClass("d@");
      // Undeclared exception!
      try { 
        element0.cssSelector();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query 'body.java.lang.String@0000000054': unexpected token at '@0000000054'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Document document0 = Document.createShell("disabled");
      TextNode textNode0 = TextNode.createFromEncoded("id", "disabled");
      document0.setParentNode(textNode0);
      // Undeclared exception!
      try { 
        document0.cssSelector();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("}\"6'>B,U o>@Bb", "}\"6'>B,U o>@Bb");
      // Undeclared exception!
      try { 
        document0.classNames((Set<String>) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("}\"6'>B,U o>f@Bb", "}\"6'>B,U o>f@Bb");
      // Undeclared exception!
      try { 
        document0.child(106);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 106, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Document document0 = new Document("~%nh$1q,");
      // Undeclared exception!
      try { 
        document0.child((-1631));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Document document0 = Document.createShell("}u\"6'>[u o>@bb");
      CDataNode cDataNode0 = new CDataNode("}u\"6'>[u o>@bb");
      cDataNode0.reparentChild(document0);
      // Undeclared exception!
      try { 
        document0.before((Node) cDataNode0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractList", e);
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("B@7@E)", "}=G:xZ>Z[/9yIUHq'");
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      Tag tag0 = Tag.valueOf("VW[FS,dTEN", parseSettings0);
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "f:[t`:{c>D3uE,", attributes0);
      document0.setParentNode(pseudoTextElement0);
      // Undeclared exception!
      try { 
        document0.before((Node) document0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("}\"6'z>B,U o>@Bb", "}\"6'z>B,U o>@Bb");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.before("");
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Document document0 = new Document("r3W<4IU!:d5sx5X9'zZ");
      // Undeclared exception!
      try { 
        document0.attr((String) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.nodes.CDataNode", "org.jsoup.nodes.CDataNode");
      Document document1 = (Document)document0.appendChild(document0);
      // Undeclared exception!
      document1.attr("org.jsoup.nodes.CDataNode", "`0D$H3SleE %5");
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Element element0 = new Element("].Vk3.!ua0)2*R");
      // Undeclared exception!
      try { 
        element0.attr((String) null, "8,Zx[C");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.ParseSettings", e);
      }
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Element element0 = new Element("piooEC;g");
      // Undeclared exception!
      try { 
        element0.appendTo((Element) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Comment", "org.jsoup.nodes.Comment");
      // Undeclared exception!
      try { 
        document0.appendText((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Element element0 = new Element("\"");
      element0.reparentChild(element0);
      // Undeclared exception!
      element0.appendElement("\"");
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Comment", "org.jsoup.nodes.Comment");
      // Undeclared exception!
      try { 
        document0.appendElement("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Document document0 = new Document("piooECMg");
      document0.reparentChild(document0);
      // Undeclared exception!
      try { 
        document0.appendChild(document0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Comment", "org.jsoup.nodes.Comment");
      // Undeclared exception!
      try { 
        document0.appendChild((Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("}u\"6'>[u o>@bb", "}u\"6'>[u o>@bb");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.append("}u\"6'>[u o>@bb");
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Document document0 = Document.createShell("#");
      // Undeclared exception!
      try { 
        document0.append((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Document document0 = Document.createShell("P-D>N");
      TextNode textNode0 = new TextNode("abbr");
      textNode0.reparentChild(document0);
      // Undeclared exception!
      try { 
        document0.after((Node) textNode0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.AbstractList", e);
      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Document document0 = new Document(":last-of-typ{8e");
      Element element0 = document0.prependText("R<Ep}:Z5?m-GU^-}IY");
      element0.parentNode = (Node) element0;
      // Undeclared exception!
      document0.after("WT2/}2*N1ihw|ZZ;W");
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      Document document0 = Document.createShell("cU");
      Element element0 = document0.prependElement("cU");
      element0.setSiblingIndex(124);
      // Undeclared exception!
      try { 
        element0.after("tag name must not be empty.");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 125, Size: 2
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Document document0 = Parser.parse("", "P'KPixO6W$G");
      // Undeclared exception!
      try { 
        document0.addClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("org.jsoup.nodes.Comment", parseSettings0);
      CDataNode cDataNode0 = new CDataNode((String) null);
      Attributes attributes0 = cDataNode0.attributes();
      Element element0 = null;
      try {
        element0 = new Element(tag0, (String) null, attributes0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Element element0 = null;
      try {
        element0 = new Element((Tag) null, "o{xs>");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Element element0 = null;
      try {
        element0 = new Element(" ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("&;o8C2g", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "org.jsoup.select.Evaluator$AttributeWithValueContaining", attributes0);
      PipedReader pipedReader0 = new PipedReader(196);
      PipedWriter pipedWriter0 = new PipedWriter(pipedReader0);
      formElement0.html(pipedWriter0);
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("$gGI;", "$gGI;");
      document0.toggleClass("");
      document0.toggleClass("");
      document0.hasClass("");
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      Document document0 = Document.createShell("1]}h");
      document0.hasClass("1]}h");
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Document document0 = Parser.parse("}\"6'>B,U o>f@Bb", "}\"6'>B,U o>f@Bb");
      document0.addClass("=*oWyoOV4Mj3+&hT");
      Set<String> set0 = document0.classNames();
      document0.classNames(set0);
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("html", "html");
      Element element0 = document0.prependText("html");
      element0.data();
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Comment", "org.jsoup.nodes.Comment");
      document0.prependElement("]\"7'DAVU-]S");
      document0.hasText();
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Tag tag0 = Tag.valueOf("+;c]1]N:'5}zV$/");
      FormElement formElement0 = new FormElement(tag0, "Pattern syntax error: ", (Attributes) null);
      formElement0.prepend("Pattern syntax error: ");
      formElement0.hasText();
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Document document0 = new Document("piooEC;g");
      document0.hasText();
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Document document0 = Document.createShell("disabled");
      document0.elementSiblingIndex();
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("tetarea", "tetarea");
      Element element0 = document0.body();
      element0.before((Node) document0);
      document0.elementSiblingIndex();
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("}\"6'>b,u o>@bb", "}\"6'>b,u o>@bb");
      document0.reparentChild(document0);
      document0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("P-D>N", "P-D>N");
      document0.parentNode = (Node) document0;
      document0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("L~:+[", "L~:+[");
      document0.removeAttr("-~z?mX");
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      Element element0 = new Element("piooEC;g");
      element0.children();
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Element element0 = new Element("piooEC;g");
      element0.className();
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Document document0 = Document.createShell("ext<");
      Pattern pattern0 = Pattern.compile("", 952);
      document0.getElementsMatchingOwnText(pattern0);
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      Document document0 = Parser.parse("og.jsup.noUesComment", "og.jsup.noUesComment");
      document0.isBlock();
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Comment", "org.jsoup.nodes.Comment");
      document0.empty();
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("", 11);
      Document document0 = Parser.parseBodyFragmentRelaxed("1]}h", "Unexpected token [%s] when in state [%s]");
      document0.getElementsByAttributeValueMatching("1]}h", pattern0);
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("}\"6'>B,U o>@Bb", "}\"6'>B,U o>@Bb");
      document0.id();
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Comment", "org.jsoup.nodes.Comment");
      document0.classNames();
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      Document document0 = new Document("CH!,c-FQ");
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "CH!,c-FQ");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.prettyPrint(false);
      // Undeclared exception!
      try { 
        document0.outerHtmlTail(charBuffer0, 13, document_OutputSettings1);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      Element element0 = new Element("menuitem");
      Parser parser0 = Parser.xmlParser();
      StringReader stringReader0 = new StringReader("r+^^~9dq}~{cAO\u0001");
      Document document0 = parser0.parseInput((Reader) stringReader0, "r+^^~9dq}~{cAO\u0001");
      element0.parentNode = (Node) document0;
      element0.outerHtml();
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("}u\"V6'>[u o>@bb", "}u\"V6'>[u o>@bb");
      CharBuffer charBuffer0 = CharBuffer.allocate(60);
      // Undeclared exception!
      try { 
        document0.html(charBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Element element0 = new Element("menuitem");
      element0.outerHtml();
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("}u\"6'>[u o>@bb", "}u\"6'>[u o>@bb");
      document0.title("}u\"6'>[u o>@bb");
      document0.html();
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("CD0;6Q.2U+8.fcn}2", "CD0;6Q.2U+8.fcn}2");
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "CD0;6Q.2U+8.fcn}2", 7, 7);
      // Undeclared exception!
      try { 
        document0.html(charBuffer0);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.StringCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("}u\"6'>[u o>@bb", "}u\"6'>[u o>@bb");
      StringWriter stringWriter0 = new StringWriter(1496);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.prettyPrint(false);
      document0.outerHtmlHead(stringWriter0, 1496, document_OutputSettings1);
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      Document document0 = new Document("piooECMg");
      document0.val();
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Comment", "org.jsoup.nodes.Comment");
      document0.toggleClass("org.jsoup.nodes.Comment");
      document0.toggleClass("org.jsoup.nodes.Comment");
      document0.toggleClass("org.jsoup.nodes.Comment");
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Document document0 = new Document("org.jsoup.nodes.element$1");
      Element element0 = document0.toggleClass("org.jsoup.nodes.element$1");
      element0.toggleClass("org.jsoup.nodes.element$1");
      document0.hasClass("org.jsoup.nodes.element$1");
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("}\"6>B, o>@Bb", "}\"6>B, o>@Bb");
      Element element0 = document0.toggleClass("&;o8c;g");
      document0.toggleClass(" />");
      element0.hasClass("}\"6>B, o>@Bb");
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("$gGI;", "$gGI;");
      document0.toggleClass("");
      document0.getElementsByClass("-f-}_&");
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("java.lang.string@0000000076 body", "1=<I:aNMdzQN5Z#Q.L");
      document0.toggleClass("1=<I:aNMdzQN5Z#Q.L");
      document0.toggleClass("java.lang.string@0000000076 body");
      document0.hasClass("java.lang.string@0000000076");
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      Document document0 = Document.createShell("}\"6>B, o>@Bb");
      document0.toggleClass("");
      document0.hasClass("This is a searchable index. Enter search keywords: ");
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("}\"6'>B,U o>@Bb", "}\"6'>B,U o>@Bb");
      CDataNode cDataNode0 = new CDataNode("}\"6'>B,U o>@Bb");
      document0.appendChild(cDataNode0);
      document0.data();
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("}u\"6'>[u o>@bb", "}u\"6'>[u o>@bb");
      DocumentType documentType0 = new DocumentType("}u\"6'>[u o>@bb", "4ZI?FMRCZA\rd/5U\"", "4ZI?FMRCZA\rd/5U\"", "9!&`bz9gnr1{j", "jt");
      Element element0 = document0.prependChild(documentType0);
      element0.hasText();
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("}\"6'z>B,U o>@Bb", "}\"6'z>B,U o>@Bb");
      document0.prependText("");
      document0.hasText();
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("}u\"6'>[u o>@bb", "}u\"6'>[u o>@bb");
      document0.reparentChild(document0);
      document0.text();
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Element.preserveWhitespace((Node) null);
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      Document document0 = Document.createShell("br");
      document0.prependElement("br");
      document0.prependElement("br");
      document0.ownText();
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("}\"6'>B,U o>@Bb", "}\"6'>B,U o>@Bb");
      CDataNode cDataNode0 = new CDataNode("}\"6'>B,U o>@Bb");
      document0.appendChild(cDataNode0);
      document0.text();
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("textarea", "textarea");
      document0.title("textarea");
      document0.getElementsContainingText("Tv");
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Comment", "org.jsoup.nodes.Comment");
      Element element0 = document0.appendText("org.jsoup.nodes.Comment");
      element0.text();
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("}\"6>B, o>@Bb", "}\"6>B, o>@Bb");
      document0.prependElement("Tv");
      document0.prependText("}\"6>B, o>@Bb");
      document0.text();
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.nodes.Comment", "org.jsoup.nodes.Comment");
      document0.prependElement("br");
      document0.prependText("class");
      document0.text();
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("}u\"6'>[u o>@bb", "}u\"6'>[u o>@bb");
      Comment comment0 = new Comment((String) null);
      document0.prependChild(comment0);
      document0.text();
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("piooECMg", "piooECMg");
      Element element0 = document0.body();
      element0.parentNode = (Node) document0;
      // Undeclared exception!
      try { 
        document0.getElementsByIndexGreaterThan(1569);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Comment", "org.jsoup.nodes.Comment");
      Element element0 = document0.prependElement("]\"7'DAVU-]S");
      Element element1 = element0.lastElementSibling();
      element1.text("]\"7'DAVU-]S");
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("}\"6'>B,U o>@Bb", "}\"6'>B,U o>@Bb");
      document0.reparentChild(document0);
      document0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      Document document0 = new Document(":last-of-type");
      Element element0 = document0.prependText("R<Ep}:Z5?m-GU^-}IY");
      element0.parentNode = (Node) document0;
      element0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("og.jsup.noUesComment", "og.jsup.noUesComment");
      Element element0 = document0.body();
      element0.previousElementSiblings();
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      document0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("}\"6>B, o>@Bb", "}\"6>B, o>@Bb");
      Element element0 = document0.prependElement("br");
      Elements elements0 = element0.nextElementSiblings();
      assertEquals(1, elements0.size());
      assertEquals("}\"6>B, o>@Bb", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Pattern syntax error: ", "&f\"owe+");
      document0.nextElementSibling();
      assertEquals(1, document0.childNodeSize());
      assertEquals("&f\"owe+", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("}u\"6'>[u o>@bb", "}u\"6'>[u o>@bb");
      Element element0 = document0.createElement("jt");
      element0.appendTo(document0);
      Element element1 = element0.after((Node) document0);
      element1.nextElementSibling();
      assertEquals(1, element0.siblingIndex());
      assertEquals(2, document0.siblingIndex());
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("}\"6'>B,U o>@Bb", "}\"6'>B,U o>@Bb");
      document0.siblingElements();
      assertEquals("}\"6'>B,U o>@Bb", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("}\"6>B o>@!b", "}\"6>B o>@!b");
      Element element0 = document0.head();
      Elements elements0 = element0.siblingElements();
      assertEquals(1, elements0.size());
      assertEquals("}\"6>B o>@!b", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Document document0 = Document.createShell("P-D>N");
      Element element0 = document0.body();
      assertEquals(1, element0.siblingIndex());
      
      Element element1 = element0.before("P-D>N");
      String string0 = element1.cssSelector();
      assertEquals("html > body:nth-child(4)", string0);
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      Document document0 = Document.createShell("}\"6'>B,U o>f@Bb");
      document0.reparentChild(document0);
      String string0 = document0.cssSelector();
      assertEquals("}\"6'>B,U o>f@Bb", document0.baseUri());
      assertEquals("#root", string0);
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      Element element0 = new Element("piooEC;g");
      element0.toggleClass("piooEC;g");
      String string0 = element0.cssSelector();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      Document document0 = new Document(":last-of-type");
      Node[] nodeArray0 = new Node[1];
      // Undeclared exception!
      try { 
        document0.insertChildren(6, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("}\"6'>B,U o>f@Bb", "}\"6'>B,U o>f@Bb");
      Node[] nodeArray0 = new Node[6];
      // Undeclared exception!
      try { 
        document0.insertChildren((-264), nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("=4'X{nK+c>?l", "=4'X{nK+c>?l");
      LinkedHashSet<Document> linkedHashSet0 = new LinkedHashSet<Document>();
      // Undeclared exception!
      try { 
        document0.insertChildren(817, (Collection<? extends Node>) linkedHashSet0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("93g_#_s9", "1]}h");
      Elements elements0 = document0.previousElementSiblings();
      // Undeclared exception!
      try { 
        document0.insertChildren((-235), (Collection<? extends Node>) elements0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Comment", "org.jsoup.nodes.Comment");
      LinkedList<TextNode> linkedList0 = new LinkedList<TextNode>();
      Element element0 = document0.insertChildren((-1), (Collection<? extends Node>) linkedList0);
      assertEquals("org.jsoup.nodes.Comment", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("}\"6'>B,U o>@Bb", "}\"6'>B,U o>@Bb");
      Elements elements0 = document0.getElementsByAttributeValueStarting("#root", "U{vbZHw?%~INIo8");
      Element element0 = document0.insertChildren(0, (Collection<? extends Node>) elements0);
      assertEquals("}\"6'>B,U o>@Bb", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("H,c.Q", "+'BFwqH6`P]");
      DataNode dataNode0 = DataNode.createFromEncoded("+'BFwqH6`P]", "H,c.Q");
      document0.appendChild(dataNode0);
      List<DataNode> list0 = document0.dataNodes();
      assertEquals("+'BFwqH6`P]", document0.baseUri());
      assertTrue(list0.contains(dataNode0));
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("}\"6'>B,U o>f@Bb", "}\"6'>B,U o>f@Bb");
      document0.prependText("f{ug");
      List<TextNode> list0 = document0.textNodes();
      assertEquals(1, list0.size());
      assertEquals("}\"6'>B,U o>f@Bb", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      Document document0 = Document.createShell("1]}h");
      Elements elements0 = document0.getElementsByIndexGreaterThan(60);
      assertEquals(0, elements0.size());
      assertEquals("1]}h", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.select.Evaluator$AttributeWithValueContaining", "org.jsoup.select.Evaluator$AttributeWithValueContaining");
      Element element0 = document0.selectFirst(":last-of-type");
      assertEquals("org.jsoup.select.Evaluator$AttributeWithValueContaining", element0.baseUri());
      assertNotNull(element0);
      assertEquals("head", element0.tagName());
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("}\"'>b,u o>@bb", "}\"'>b,u o>@bb");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("}\"6>B, o>@Bb", "}\"6>B, o>@Bb");
      document0.is("Tv");
      assertEquals("}\"6>B, o>@Bb", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("}\"6'>b,u o>@bb", "}\"6'>b,u o>@bb");
      document0.getAllElements();
      assertEquals(1, document0.childNodeSize());
      assertEquals("}\"6'>b,u o>@bb", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      Document document0 = new Document("piooECMg");
      // Undeclared exception!
      try { 
        document0.removeClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("$Dj+X:vl", "$Dj+X:vl");
      // Undeclared exception!
      try { 
        document0.before("#");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      Document document0 = Document.createShell("E*>[a*uZhvz)@~iE)");
      document0.getElementsByAttribute("E*>[a*uZhvz)@~iE)");
      assertEquals(1, document0.childNodeSize());
      assertEquals("E*>[a*uZhvz)@~iE)", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueNot("", "body");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      Document document0 = Parser.parse("}\"6'>B,U o>f@Bb", "}\"6'>B,U o>f@Bb");
      document0.doSetBaseUri("}\"6'>B,U o>f@Bb");
      assertEquals("}\"6'>B,U o>f@Bb", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("}u\"6'>[u o>@bb", "}u\"6'>[u o>@bb");
      // Undeclared exception!
      try { 
        document0.after((Node) document0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      Document document0 = new Document("~%nh$1q,");
      document0.getElementsByAttributeValueContaining("~%nh$1q,", "^:>HJ1S'JF:R?");
      assertEquals("~%nh$1q,", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Insert position out of bounds.", "Insert position out of bounds.");
      Elements elements0 = document0.getElementsContainingText("Insert position out of bounds.");
      assertEquals(3, elements0.size());
      assertEquals("Insert position out of bounds.", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      Document document0 = new Document(" />");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueEnding("", "]] #8IpRUD");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      Document document0 = new Document(":last-of-typ{8e");
      Evaluator.IsEmpty evaluator_IsEmpty0 = new Evaluator.IsEmpty();
      document0.is((Evaluator) evaluator_IsEmpty0);
      assertEquals(":last-of-typ{8e", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("}\"6'>B,U o>f@Bb", "}\"6'>B,U o>f@Bb");
      document0.getElementsByAttributeValueMatching("#root", "}\"6'>B,U o>f@Bb");
      assertEquals("}\"6'>B,U o>f@Bb", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      Document document0 = Document.createShell("1]}h");
      Elements elements0 = document0.getElementsByIndexEquals((-238));
      assertTrue(elements0.isEmpty());
      assertEquals("1]}h", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("CH!,c-FQ", "CH!,c-FQ");
      document0.getElementsByAttributeStarting("</");
      assertEquals(1, document0.childNodeSize());
      assertEquals("CH!,c-FQ", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("}\"6'z>B,U o>@Bb", "}\"6'z>B,U o>@Bb");
      Elements elements0 = document0.getElementsByIndexLessThan((-1433506051));
      assertEquals("}\"6'z>B,U o>@Bb", document0.baseUri());
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      Document document0 = Document.createShell("cU");
      // Undeclared exception!
      try { 
        document0.after("tag name must not be empty.");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "");
      Elements elements0 = document0.getElementsMatchingOwnText("       ");
      assertEquals(1, document0.childNodeSize());
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      Document document0 = new Document(":last-of-type");
      document0.getElementsByAttributeValue(":last-of-type", "n@/]AmQ(u~2\"YFJ,");
      assertEquals(":last-of-type", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      Document document0 = Document.createShell("E*>[a*uZhvz)@~iE)");
      document0.attr("E*>[a*uZhvz)@~iE)", true);
      Elements elements0 = document0.getElementsByAttribute("E*>[a*uZhvz)@~iE)");
      assertEquals("E*>[a*uZhvz)@~iE)", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
      assertFalse(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("}\"6'>B,U o>f@Bb", "}\"6'>B,U o>f@Bb");
      // Undeclared exception!
      try { 
        document0.html((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("}\"6'>B,U o>f@Bb", "}\"6'>B,U o>f@Bb");
      document0.wholeText();
      assertEquals("}\"6'>B,U o>f@Bb", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("}\"6'>b,u o>@bb", "}\"6'>b,u o>@bb");
      // Undeclared exception!
      try { 
        document0.before((Node) document0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      Element element0 = new Element("ACDJA 88j\"qS0K_PQ,");
      Attributes attributes0 = element0.attributes();
      assertEquals(0, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("}\"6'>B,U o>f@Bb", "}\"6'>B,U o>f@Bb");
      document0.getElementsContainingOwnText("");
      assertEquals("}\"6'>B,U o>f@Bb", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("menuitem", "menuitem");
      document0.dataset();
      assertEquals("menuitem", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      Document document0 = Parser.parse("6|XU<V\"}#", "P'KPixO6W$G");
      Element element0 = document0.text("6|XU<V\"}#");
      assertEquals("P'KPixO6W$G", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      Document document0 = Document.createShell("+.E^Mi9.5NW@9eBK*O");
      document0.tagName("textarea");
      document0.val();
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      Document document0 = Document.createShell("}\"6'>B,U o>f@Bb");
      Element element0 = document0.child(0);
      assertNotNull(element0);
      
      element0.reparentChild(document0);
      String string0 = document0.cssSelector();
      assertEquals("}\"6'>B,U o>f@Bb", document0.baseUri());
      assertEquals("html > #root", string0);
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("", "");
      // Undeclared exception!
      try { 
        document0.prependChild((Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("}\"6'>B,U o>@Bb", "}\"6'>B,U o>@Bb");
      Pattern pattern0 = Pattern.compile("#root", (-640));
      document0.getElementsMatchingText(pattern0);
      assertEquals("}\"6'>B,U o>@Bb", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("java.lang.string@0000000076 body", "1=<I:aNMdzQN5Z#Q.L");
      document0.toggleClass("1=<I:aNMdzQN5Z#Q.L");
      boolean boolean0 = document0.hasClass("java.lang.string@0000000076");
      //  // Unstable assertion: assertEquals("1=<I:aNMdzQN5Z#Q.L", document0.baseUri());
      //  // Unstable assertion: assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("\n * ", "\n * ");
      document0.appendText("\n * ");
      document0.text();
      assertEquals(2, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      // Undeclared exception!
      try { 
        document0.wrap("\"va3p0$Sx");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("H,c.Q", "+'BFwqH6`P]");
      document0.nextElementSiblings();
      assertEquals(1, document0.childNodeSize());
      assertEquals("+'BFwqH6`P]", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Comment", "org.jsoup.nodes.Comment");
      document0.getElementById("ISWsl'N3j6[EHUjnp");
  }
}
