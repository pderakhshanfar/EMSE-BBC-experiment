/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 07 19:38:54 GMT 2021
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedWriter;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.PipedWriter;
import java.io.StringWriter;
import java.nio.BufferOverflowException;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.util.Collection;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import java.util.regex.Pattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.DataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.DocumentType;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Parser;
import org.jsoup.parser.Tag;
import org.jsoup.select.Elements;
import org.jsoup.select.Evaluator;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Element_ESTest extends Element_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Element$2", "");
      document0.getElementsByAttributeValueMatching("<Qw>ww]i}XW4t~", "wf]=UK");
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("q,4$a)5#/9x76If %%k", "q,4$a)5#/9x76If %%k");
      document0.appendTo(document0);
      Element element0 = document0.empty();
      element0.nextElementSiblings();
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Document document0 = Document.createShell("q,4$a)5#/9x76If %%+");
      StringWriter stringWriter0 = new StringWriter(1);
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document0.outerHtmlTail(stringBuffer0, 1, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("6C7QV<?L9K_NVR^])t", "6C7QV<?L9K_NVR^])t");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      StringBuffer stringBuffer0 = new StringBuffer();
      document0.outerHtmlHead(stringBuffer0, 726, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Document document0 = Parser.parse("\"", "\"");
      document0.nodelistChanged();
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Document document0 = Parser.parse("q,4$a)5#/9x76If %%k", "q,4$a)5#/9x76If %%k");
      document0.ensureChildNodes();
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Document document0 = Document.createShell("R%E`YDks,MgX#,z=");
      Element element0 = document0.body();
      element0.wrap("VI.,~E-r]T");
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Document document0 = Document.createShell("=");
      Element element0 = document0.body();
      element0.val("=");
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Element$2", "");
      document0.val((String) null);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Document document0 = Document.createShell("");
      Element element0 = document0.body();
      element0.toggleClass("Children collection to be inserted must not be null.");
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Document document0 = Document.createShell(" />");
      document0.toggleClass("d_MnZW");
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Document document0 = new Document("#root");
      Document document1 = document0.normalise();
      Element element0 = document1.appendTo(document0);
      element0.text("#root");
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Document document0 = new Document("#root");
      document0.normalise();
      document0.text("#root");
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("'VP[650Q[Xs&?7H", "'VP[650Q[Xs&?7H");
      document0.text();
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Document document0 = Parser.parse("\"", "\"");
      Element element0 = document0.head();
      element0.tagName("\"");
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("o98t,#Y*M<[@i-g", "o98t,#Y*M<[@i-g");
      document0.tagName();
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Tag tag0 = Tag.valueOf("u6DJwH4*");
      FormElement formElement0 = new FormElement(tag0, "u6DJwH4*", (Attributes) null);
      formElement0.tag();
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Document document0 = Document.createShell("6C7cV<?L9K_NVR^])t");
      Element element0 = document0.body();
      element0.shallowClone();
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Document document0 = Document.createShell("");
      Element element0 = document0.body();
      element0.selectFirst("head");
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Document document0 = Parser.parse("WgF{iqrG_ GOMO", "WgF{iqrG_ GOMO");
      document0.select("id");
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("body", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "body", (Attributes) null);
      formElement0.removeClass("p;\"NK{HYPYtqMT");
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(".", ".");
      document0.appendTo(document0);
      document0.removeClass("W#Vd9R");
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(".", ".");
      document0.empty();
      document0.removeClass("W#Vd9R");
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("qAZxrk\"kW;g5jF ai$", ">,hp&gmd7%rx=iz;");
      Element element0 = document0.body();
      element0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("dl", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "[nZ", attributes0);
      formElement0.prependText("dl");
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Document document0 = Document.createShell("q,4$a)5#/9x76If %%k");
      document0.appendTo(document0);
      document0.prependText("q,4$a)5#/9x76If %%k");
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Document document0 = Parser.parse("5tGc", "5tGc");
      document0.prependElement("head");
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Document document0 = Parser.parse("Z<-vc>ah1p;_IG", "Z<-vc>ah1p;_IG");
      document0.prependElement("([+-])?(d+)");
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Document document0 = Document.createShell("q,4$a)5#/9x76If %%k");
      Element element0 = document0.body();
      element0.prependChild(document0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Document document0 = Parser.parse("q,4$a)5#/9x76If %%k", "q,4$a)5#/9x76If %%k");
      Element element0 = document0.body();
      element0.prepend("q,4$a)5#/9x76If %%k");
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Document document0 = Parser.parse("q,4$a)5#/9x76If %%k", "q,4$a)5#/9x76If %%k");
      document0.prepend("q,4$a)5#/9x76If %%k");
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      document0.parents();
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Document document0 = Document.createShell("q,4$a)5#/9x76If %%+");
      Element element0 = document0.body();
      element0.parents();
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "");
      Element element0 = document0.head();
      element0.parent();
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Document document0 = Parser.parse("q,4$a)5#/9x76If %%k", "q,4$a)5#/9x76If %%k");
      document0.appendTo(document0);
      document0.empty();
      document0.parent();
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Document document0 = Document.createShell("q,4$a)5#/9x76If %%k");
      document0.prependText("g' V7b4gUW:uig");
      document0.ownText();
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Element$2", "");
      document0.nodeName();
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Document document0 = Parser.parse("\"", "\"");
      Element element0 = document0.head();
      element0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Element$2", "");
      document0.prependChild(document0);
      document0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      Element element0 = document0.head();
      element0.isBlock();
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Document document0 = Parser.parse("5tGc", "5tGc");
      Evaluator.IsLastChild evaluator_IsLastChild0 = new Evaluator.IsLastChild();
      document0.is((Evaluator) evaluator_IsLastChild0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("q,4$a)5#/9x76If %%k", "q,4$a)5#/9x76If %%k");
      document0.appendTo(document0);
      Node[] nodeArray0 = new Node[0];
      document0.insertChildren(0, nodeArray0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("q,4$a)5#/9x76If %%k", "q,4$a)5#/9x76If %%k");
      Element element0 = document0.empty();
      Node[] nodeArray0 = new Node[0];
      element0.insertChildren(0, nodeArray0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Tag tag0 = Tag.valueOf(":matches(%s)");
      Element element0 = new Element(tag0, "b-#2S^ 0%m]5*:i-n<_");
      element0.appendChild(element0);
      LinkedList<CDataNode> linkedList0 = new LinkedList<CDataNode>();
      element0.insertChildren((-1), (Collection<? extends Node>) linkedList0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Document document0 = Parser.parse("WgF{iqrG_ GOMO", "WgF{iqrG_ GOMO");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("sq `.CT@`");
      document0.html(mockPrintWriter0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Document document0 = new Document("class");
      document0.html();
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Document document0 = Parser.parse("5tGc", "5tGc");
      document0.hasClass("meta[charset]");
      document0.hasAttributes();
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("br", "'VP[650Q[Xs&?7H");
      document0.hasAttributes();
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("GnMrWEUDa:]O&2bV", "");
      Pattern pattern0 = Pattern.compile("", 14);
      document0.getElementsMatchingText(pattern0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Element$2", "");
      document0.getElementsMatchingText("org.jsoup.nodes.Element$2");
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Document document0 = Parser.parse("5tGc", "5tGc");
      Pattern pattern0 = Pattern.compile("");
      document0.getElementsMatchingOwnText(pattern0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Document document0 = new Document("4u+?xW.^M'X{,HOp+");
      document0.getElementsMatchingOwnText("Fkv");
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Element$2", "");
      document0.getElementsContainingText("org.jsoup.nodes.Element$2");
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Document document0 = Document.createShell(" />");
      document0.getElementsContainingOwnText("iu4TN2Q9ekyR");
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Tag tag0 = Tag.valueOf("value");
      CDataNode cDataNode0 = new CDataNode("value");
      Attributes attributes0 = cDataNode0.attributes();
      Element element0 = new Element(tag0, "value", attributes0);
      element0.getElementsByTag("value");
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Document document0 = Parser.parse("WgF{iqrG_ GOMO", "WgF{iqrG_ GOMO");
      document0.getElementsByIndexLessThan(58);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Element element0 = new Element(":nth-child(%d)");
      element0.getElementsByIndexGreaterThan((-37));
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Tag tag0 = Tag.valueOf("textarea", (ParseSettings) null);
      Element element0 = new Element(tag0, "a1");
      element0.getElementsByIndexEquals(32);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Document document0 = Parser.parse("Z<-vc>ah1p;_IG", "Z<-vc>ah1p;_IG");
      document0.getElementsByClass("6u[TE'jeZ");
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Element$2", "");
      document0.getElementsByAttributeValueStarting("#root", "#root");
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Element$2", "");
      document0.getElementsByAttribute("org.jsoup.select.Evaluator$IsFirstOfType");
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Document document0 = Parser.parse("WgF{iqrG_ GOMO", "WgF{iqrG_ GOMO");
      Document document1 = Parser.parseBodyFragmentRelaxed("WgF{iqrG_ GOMO", "WgF{iqrG_ GOMO");
      Element element0 = document0.addClass("WgF{iqrG_ GOMO");
      Element element1 = document0.text("");
      element1.empty();
      document1.prependChild(element1);
      element0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Element element0 = new Element("head");
      element0.empty();
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Document document0 = Document.createShell("q,4$a)5#/9x76If %%k");
      Element element0 = document0.body();
      element0.doClone(document0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Document document0 = new Document("{f!p");
      document0.doClone((Node) null);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Document document0 = Parser.parse("pIh#~7&8Ga", "^XsuTnt0uAUza=,");
      document0.doClone(document0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      Element element0 = document0.head();
      element0.clone();
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Element element0 = new Element("6C7cV<?L9K_NVR^])t");
      Tag tag0 = Tag.valueOf(":nth-child(%d)");
      FormElement formElement0 = new FormElement(tag0, ":nth-child(%d)", (Attributes) null);
      Element element1 = element0.appendChild(formElement0);
      element1.clone();
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Document document0 = Document.createShell("q,4$a)5#/9x76If %%k");
      document0.appendTo(document0);
      Charset charset0 = Charset.defaultCharset();
      Set<String> set0 = charset0.aliases();
      document0.classNames(set0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("`&n#9Zq", "`&n#9Zq");
      Element element0 = document0.head();
      Locale locale0 = Locale.JAPAN;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      element0.classNames(set0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Document document0 = Parser.parse("5tGc", "5tGc");
      Element element0 = document0.addClass("");
      element0.classNames();
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Element element0 = new Element("6C7cV<?L9K_NVR^])t");
      element0.addClass("6C7cV<?L9K_NVR^])t");
      element0.className();
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Document document0 = Document.createShell("");
      document0.children();
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Document document0 = Parser.parse("\"", "\"");
      Element element0 = document0.head();
      element0.childNodeSize();
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      document0.childNodeSize();
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Document document0 = Document.createShell("T^~{mlD*c'");
      Element element0 = document0.body();
      element0.before((Node) document0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("q,4$a)5#9x76I` %%k", "q,4$a)5#9x76I` %%k");
      Element element0 = document0.appendTo(document0);
      element0.before((Node) document0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Document document0 = Document.createShell("{f!p");
      Element element0 = document0.body();
      element0.before("");
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("q,4$a)5#/9x76If %%k", "q,4$a)5#/9x76If %%k");
      Document document1 = new Document("Children collection to be inserted must not be null.");
      document0.appendTo(document1);
      document0.before("Children collection to be inserted must not be null.");
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.parser.Token$EOF", "org.jsoup.parser.Token$EOF");
      document0.baseUri();
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Element$2", "");
      document0.baseUri();
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(">,HP&GmD7%rX=Iz;", ">,HP&GmD7%rX=Iz;");
      Element element0 = document0.appendTo(document0);
      element0.attr("XS3g (zV", false);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Document document0 = Parser.parse("pIh#~7&8Ga", "^XsuTnt0uAUza=,");
      document0.setParentNode(document0);
      document0.attr("gCbt`1q?_Y{yV", false);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("style", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("6C7cV<?L9K_NVR^])t");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, ".", attributes0);
      formElement0.attr("'VP[650Q[Xs&?7H", false);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Document document0 = Parser.parse("u+r l -m(U'4", "F");
      document0.siblingIndex = (-489);
      document0.attr("YJz8", "F");
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      Element element0 = document0.head();
      element0.attr("", "t(L_| LE*dP");
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Document document0 = Document.createShell("");
      Element element0 = document0.body();
      element0.appendTo(document0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Document document0 = Document.createShell("q,4$a)5#/9x76If %%k");
      document0.appendTo(document0);
      document0.appendText("");
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Document document0 = Parser.parse("WgF{iqrG_ GOMO", "WgF{iqrG_ GOMO");
      document0.appendElement("hgroup");
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Tag tag0 = Tag.valueOf("u6DJwH4*");
      FormElement formElement0 = new FormElement(tag0, "u6DJwH4*", (Attributes) null);
      formElement0.appendElement("Insert position out of bounds.");
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Element$2", "");
      document0.appendChild(document0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Element element0 = new Element("meta");
      Tag tag0 = Tag.valueOf("meta");
      FormElement formElement0 = new FormElement(tag0, "meta", (Attributes) null);
      element0.appendChild(formElement0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Document document0 = Document.createShell("q,4$a)5#/9x76If %%k");
      Element element0 = document0.body();
      element0.append("cN!nUxO9]G`)~S");
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Element$2", "");
      document0.prependChild(document0);
      document0.after((Node) document0);
      document0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Element element0 = new Element("meta");
      element0.addClass("meta");
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("q,4$a)5#/9x76If %%k", "q,4$a)5#/9x76If %%k");
      Element element0 = document0.appendTo(document0);
      element0.addClass("q,4$a)5#/9x76If %%k");
      element0.hasClass("q,4$a)5#/9x76If %%k");
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Element$2", "w");
      document0.prependChild(document0);
      // Undeclared exception!
      document0.wrap("org.jsoup.nodes.Element$2");
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("dl", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "[nZ", attributes0);
      // Undeclared exception!
      try { 
        formElement0.wrap("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Document document0 = Document.createShell("q,4$a)5#/9x76If %%k");
      document0.appendTo(document0);
      // Undeclared exception!
      document0.val("");
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(true, false);
      Tag tag0 = Tag.valueOf("=\"", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("'F=aJqxY}S-J(M@Q-m_");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "", attributes0);
      // Undeclared exception!
      try { 
        formElement0.toggleClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("q?g&7@`P>ljTL~Nj4z1", "='Cj{Xv");
      // Undeclared exception!
      try { 
        document0.text("h]B2Dzlg\u0004o");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("q,4$a)5#/9x76If %%k", "q,4$a)5#/9x76If %%k");
      Element element0 = document0.appendTo(document0);
      // Undeclared exception!
      element0.tagName("output");
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("QuY*/24%@V]m)3d", "");
      // Undeclared exception!
      try { 
        document0.tagName("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Tag name must not be empty.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Document document0 = Document.createShell("q,4$a)5#/9x76If %%k");
      document0.appendTo(document0);
      Element element0 = document0.empty();
      // Undeclared exception!
      try { 
        element0.siblingElements();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Element$2", "");
      // Undeclared exception!
      try { 
        document0.selectFirst("org.jsoup.nodes.Element$2");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query 'org.jsoup.nodes.Element$2': unexpected token at '$2'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("body", "`0}f&1FWHo3");
      // Undeclared exception!
      try { 
        document0.select("LwJ\"l@s`jsQ");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query 'LwJ\"l@s`jsQ': unexpected token at '\"l@s`jsQ'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Document document0 = Document.createShell("");
      // Undeclared exception!
      try { 
        document0.select("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Document document0 = Document.createShell("q,4$a)5#/9x76If %%k");
      CDataNode cDataNode0 = new CDataNode("q,4$a)5#/9x76If %%k");
      document0.parentNode = (Node) cDataNode0;
      // Undeclared exception!
      try { 
        document0.previousElementSibling();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.nodes.CDataNode cannot be cast to org.jsoup.nodes.Element
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("6C7cV<?L9K_NVR^])t", "6C7cV<?L9K_NVR^])t");
      // Undeclared exception!
      try { 
        document0.prependText((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("q,4$a)5#/9x76If %%k", "q,4$a)5#/9x76If %%k");
      Element element0 = document0.appendTo(document0);
      // Undeclared exception!
      element0.prependElement("q,4$a)5#/9x76If %%k");
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Document document0 = Document.createShell("q,4$a)5#/9x76If %%k");
      Element element0 = document0.appendTo(document0);
      document0.empty();
      // Undeclared exception!
      try { 
        document0.prependChild(element0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Document document0 = Document.createShell("");
      // Undeclared exception!
      try { 
        document0.prependChild((Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Document document0 = Document.createShell("q,4$a)5#/9x76If %%k");
      Element element0 = document0.appendTo(document0);
      // Undeclared exception!
      element0.prepend("q,4$a)5#/9x76If %%k");
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1362);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
      // Undeclared exception!
      try { 
        document0.outerHtmlTail(mockPrintWriter0, 1276, (Document.OutputSettings) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("ruby", "value");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "ruby");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlTail(stringBuffer0, (-3084), document_OutputSettings0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // width must be > 0
         //
         verifyException("org.jsoup.internal.StringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      PipedWriter pipedWriter0 = new PipedWriter();
      Document document0 = Parser.parseBodyFragment("marquee", "marquee");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      try { 
        document0.outerHtmlTail(pipedWriter0, 42, document_OutputSettings0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("q,64$a)5#/9x76If %%k", "q,64$a)5#/9x76If %%k");
      Charset charset0 = document0.charset();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "q,64$a)5#/9x76If %%k");
      ByteBuffer byteBuffer0 = charset0.encode(charBuffer0);
      CharBuffer charBuffer1 = charset0.decode(byteBuffer0);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlHead(charBuffer1, 598, document_OutputSettings0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Tag tag0 = Tag.valueOf("Could not parse attribute query '%s': unexpected token at '%s'");
      Attributes attributes0 = new Attributes();
      Element element0 = new Element(tag0, "textarea", attributes0);
      MockFile mockFile0 = new MockFile("f?J9XI$");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      // Undeclared exception!
      try { 
        element0.outerHtmlHead(mockPrintWriter0, 62, (Document.OutputSettings) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      PipedWriter pipedWriter0 = new PipedWriter();
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      Tag tag0 = Tag.valueOf("5`8SRf_F", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "5`8SRf_F", (Attributes) null);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      try { 
        formElement0.outerHtmlHead(pipedWriter0, (-2829), document_OutputSettings0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      // Undeclared exception!
      try { 
        document0.lastElementSibling();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Document document0 = Document.createShell("q,4$a)5#/9x76If %%k");
      document0.appendTo(document0);
      Evaluator.IsLastChild evaluator_IsLastChild0 = new Evaluator.IsLastChild();
      // Undeclared exception!
      document0.is((Evaluator) evaluator_IsLastChild0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Document document0 = Document.createShell("q,4$a)5#/9x76If %%+");
      // Undeclared exception!
      try { 
        document0.is((Evaluator) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Document document0 = new Document("4u+?xW.^M'X{,HOp+");
      Evaluator.IsLastChild evaluator_IsLastChild0 = new Evaluator.IsLastChild();
      CDataNode cDataNode0 = new CDataNode("Vra v{B7ucb[");
      Element element0 = document0.doClone(cDataNode0);
      // Undeclared exception!
      try { 
        element0.is((Evaluator) evaluator_IsLastChild0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.nodes.CDataNode cannot be cast to org.jsoup.nodes.Element
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Document document0 = Parser.parse("\"", "\"");
      // Undeclared exception!
      try { 
        document0.is("\"");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query '\"': unexpected token at '\"'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("q,4$a)5#/9x76If %%k", "q,4$a)5#/9x76If %%k");
      Element element0 = document0.appendTo(document0);
      // Undeclared exception!
      element0.is("h1");
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Document document0 = Document.createShell("q,4$a)5#/9x76If %%+");
      CDataNode cDataNode0 = new CDataNode("q,4$a)5#/9x76If %%+");
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = (Node) document0;
      nodeArray0[1] = (Node) document0;
      nodeArray0[2] = (Node) document0;
      nodeArray0[3] = (Node) document0;
      nodeArray0[4] = (Node) cDataNode0;
      nodeArray0[5] = (Node) document0;
      // Undeclared exception!
      try { 
        document0.insertChildren(0, nodeArray0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Element element0 = new Element("coMm(/BAY'cjV~1vq");
      LinkedHashSet<Document> linkedHashSet0 = new LinkedHashSet<Document>();
      List<Node> list0 = Parser.parseXmlFragment("coMm(/BAY'cjV~1vq", "coMm(/BAY'cjV~1vq");
      element0.childNodes = list0;
      // Undeclared exception!
      try { 
        element0.insertChildren(0, (Collection<? extends Node>) linkedHashSet0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableList", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Document document0 = Document.createShell("q,4$a)5#/9x76If %%k");
      document0.appendTo(document0);
      // Undeclared exception!
      document0.html("%S-<uhZL00eV=_>6Y");
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Document document0 = Parser.parse("q,4$a)5#/9x76If %%k", "q,4$a)5#/9x76If %%k");
      // Undeclared exception!
      try { 
        document0.html((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("q,4$a)5#/9x76If %%k", "q,4$a)5#/9x76If %%k");
      document0.appendTo(document0);
      // Undeclared exception!
      document0.html((BufferedWriter) null);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Document document0 = Document.createShell("CommentEndBang");
      CharBuffer charBuffer0 = CharBuffer.allocate(1);
      // Undeclared exception!
      try { 
        document0.html(charBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Document document0 = Parser.parse("5tGc", "5tGc");
      // Undeclared exception!
      try { 
        document0.html((BufferedWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Element$2", "org.jsoup.nodes.Element$2");
      document0.prependChild(document0);
      // Undeclared exception!
      document0.html();
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Document document0 = Parser.parse("WgF{iqrG_ GOMO", "WgF{iqrG_ GOMO");
      // Undeclared exception!
      try { 
        document0.hasClass((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("`&,#9ZD", "`&,#9ZD");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText((Pattern) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$Matches", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Document document0 = Parser.parse("Z<-vc>ah1p;_IG", "Z<-vc>ah1p;_IG");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Document document0 = Parser.parse("1iY71", "FO}:G&4g/HU>BAEeg(c");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText("g[F");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pattern syntax error: g[F
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Element element0 = new Element("6C7cV<?L9K_NVR^])t");
      // Undeclared exception!
      try { 
        element0.getElementsMatchingOwnText((Pattern) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$MatchesOwn", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("u6DJwH4*", "u6DJwH4*");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingOwnText((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Element element0 = new Element(":nth-child(%d)");
      // Undeclared exception!
      try { 
        element0.getElementsMatchingOwnText("'F=aJqxY}S-J(M@Q-m_");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pattern syntax error: 'F=aJqxY}S-J(M@Q-m_
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Document document0 = Parser.parse("WgF{iqrG GOMO", "WgF{iqrG GOMO");
      // Undeclared exception!
      try { 
        document0.getElementsByTag("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Document document0 = Document.createShell("");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueNot("id", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueMatching((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Element$2", "");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueEnding("", "org.jsoup.nodes.Element$2");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Document document0 = Parser.parse("z!S3W,VYX%5*>}", "4'vdhZqKvaN|7th%#");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueContaining((String) null, "org.jsoup.select.Evaluator$Id");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Document document0 = Document.createShell("T^~{mlD*c'");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValue("NOg^ZT_Zq&4Hi_g]=A=", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("6C7cV<?L9K_NVR^])t", "6C7cV<?L9K_NVR^])t");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeStarting("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Document document0 = new Document("nl/,xe{*8t/HB$`D");
      // Undeclared exception!
      try { 
        document0.getElementById((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Element$2", "");
      // Undeclared exception!
      try { 
        document0.firstElementSibling();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Document document0 = Document.createShell(",DE[#'-X#8!}\"\"\"");
      // Undeclared exception!
      try { 
        document0.classNames((Set<String>) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Element element0 = new Element("6C7cV<?L9K_NVR^])t");
      // Undeclared exception!
      try { 
        element0.child(16);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 16, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      Tag tag0 = Tag.valueOf("5`8SRf_F", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "$t=Fwu2hU#^o`0y", (Attributes) null);
      DataNode dataNode0 = new DataNode("");
      Element element0 = formElement0.doClone(dataNode0);
      // Undeclared exception!
      try { 
        element0.before((Node) element0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractList", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Document document0 = Document.createShell(" />");
      // Undeclared exception!
      try { 
        document0.attr((String) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "");
      Document document1 = (Document)document0.prependChild(document0);
      // Undeclared exception!
      document1.attr("body", "#root");
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("character outside of valid range", "6C7cV<?L9K_NVR^])t");
      // Undeclared exception!
      try { 
        document0.attr((String) null, "<html>\n <head></head>\n <body>\n  character outside of valid range\n </body>\n</html>");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.ParseSettings", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Document document0 = Parser.parse("q,4$a)5#/9x76If %%k", "q,4$a)5#/9x76If %%k");
      DocumentType documentType0 = new DocumentType((String) null, "q,4$a)5#/9x76If %%k", (String) null, "q,4$a)5#/9x76If %%k", (String) null);
      document0.setParentNode(documentType0);
      // Undeclared exception!
      try { 
        document0.appendTo(document0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractList", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Element element0 = new Element("UTF8");
      // Undeclared exception!
      try { 
        element0.appendTo((Element) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("6C7cV<?L9K_NVR^])t", "6C7cV<?L9K_NVR^])t");
      // Undeclared exception!
      try { 
        document0.appendText((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Document document0 = Document.createShell("q,4$a)5#/9x76If %%k");
      Element element0 = document0.appendTo(document0);
      // Undeclared exception!
      element0.appendElement("q,4$a)5#/9x76If %%k");
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("njXFlr~sn;$eyQ^", "njXFlr~sn;$eyQ^");
      // Undeclared exception!
      try { 
        document0.appendElement((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Document document0 = Document.createShell("q,4$a)5#/9x76If %%k");
      Element element0 = document0.appendTo(document0);
      document0.empty();
      // Undeclared exception!
      try { 
        document0.appendChild(element0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Element element0 = new Element("6C7cV<?L9K_NVR^])t");
      // Undeclared exception!
      try { 
        element0.appendChild((Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Document document0 = Document.createShell("q,4$a)5#/9x76If %%k");
      document0.appendTo(document0);
      // Undeclared exception!
      document0.append("q,4$a)5#/9x76If %%k");
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("o98t,#Y*M<[@i-g", "o98t,#Y*M<[@i-g");
      // Undeclared exception!
      try { 
        document0.append((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Document document0 = Document.createShell("{f!p");
      Element element0 = document0.appendTo(document0);
      // Undeclared exception!
      try { 
        document0.after((Node) element0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Document document0 = Parser.parse("q,4$a)5#/9x76If %%k", "q,4$a)5#/9x76If %%k");
      Element element0 = document0.appendTo(document0);
      // Undeclared exception!
      element0.after("[:;N");
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Document document0 = Parser.parse("Z<-vc>ah1p;_IG", "Z<-vc>ah1p;_IG");
      // Undeclared exception!
      try { 
        document0.addClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Element element0 = null;
      try {
        element0 = new Element((Tag) null, "3a/ +l5#_g}^e]VaJ", attributes0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Tag tag0 = Tag.valueOf("C8hL~");
      Element element0 = null;
      try {
        element0 = new Element(tag0, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Element element0 = null;
      try {
        element0 = new Element("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Document document0 = new Document("<html>\n <head>\n  <meta charset=\"US-ASCII\">\n </head>\n <body></body>\n</html>");
      document0.html((BufferedWriter) null);
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Document document0 = Document.createShell("q,4$a)5#/9x76If %%k");
      Charset charset0 = Charset.defaultCharset();
      Set<String> set0 = charset0.aliases();
      document0.classNames(set0);
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Document document0 = Parser.parse("5tGc", "5tGc");
      document0.prependText("bG");
      document0.hasText();
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Document document0 = Parser.parse("\"", "\"");
      document0.elementSiblingIndex();
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Element$2", "n6");
      document0.prependChild(document0);
      document0.elementSiblingIndex();
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Document document0 = Document.createShell("q,4$a)5#/9x76If %%k");
      Element element0 = document0.head();
      element0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Document document0 = Document.createShell("q,4$a)5#/9x76If %%k");
      document0.appendTo(document0);
      document0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("q,4$a)5#9x76I` %%k", "q,4$a)5#9x76I` %%k");
      Element element0 = document0.appendTo(document0);
      element0.cssSelector();
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Document document0 = Document.createShell("q,4$a)5#/9x76If %%k");
      Element element0 = document0.body();
      element0.html("cN!nUxO9]G`)~S");
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Tag tag0 = Tag.valueOf("u6DJwH4*");
      FormElement formElement0 = new FormElement(tag0, "u6DJwH4*", (Attributes) null);
      formElement0.attributes();
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("`&n#9Zq", "`&n#9Zq");
      document0.addClass("<html>\n <head></head>\n <body>\n  `&amp;n#9Zq\n </body>\n</html>");
      document0.attributes();
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("missing semicolon", parseSettings0);
      CDataNode cDataNode0 = new CDataNode((String) null);
      Attributes attributes0 = cDataNode0.attributes();
      Element element0 = new Element(tag0, "rJNw=", attributes0);
      element0.children();
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("GnMrWEUDa:]O&2bV", "");
      document0.className();
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(".", ".");
      document0.parent();
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Document document0 = Document.createShell("q,4$a)5#/9x76If %%k");
      document0.ownText();
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      document0.isBlock();
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Element$2", "");
      Evaluator.IndexGreaterThan evaluator_IndexGreaterThan0 = new Evaluator.IndexGreaterThan((-1842001214));
      document0.is((Evaluator) evaluator_IndexGreaterThan0);
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Document document0 = Document.createShell("q,4$a)5#/9x76If %%k");
      Pattern pattern0 = Pattern.compile("br");
      document0.getElementsByAttributeValueMatching(",L_3 1~Fev|", pattern0);
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("missing semicolon", parseSettings0);
      CDataNode cDataNode0 = new CDataNode((String) null);
      Attributes attributes0 = cDataNode0.attributes();
      Element element0 = new Element(tag0, "rJNw=", attributes0);
      element0.text();
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      document0.id();
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Document document0 = Parser.parse("WgF{iqrG_ GOMO", "WgF{iqrG_ GOMO");
      document0.classNames();
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("q,4$a)5#/9x76If %%k", "q,4$a)5#/9x76If %%k");
      Charset charset0 = document0.charset();
      document0.charset(charset0);
      document0.html();
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      PipedWriter pipedWriter0 = new PipedWriter();
      Document document0 = Parser.parseBodyFragment("5`8SRf_F", "u6djwh4*");
      BufferedWriter bufferedWriter0 = new BufferedWriter(pipedWriter0, 27);
      // Undeclared exception!
      try { 
        document0.html(bufferedWriter0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Pipe not connected
         //
         verifyException("org.jsoup.nodes.Node$OuterHtmlVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Document document0 = Document.createShell("q,4$a)5#/9x76If %%k");
      document0.title("q,4$a)5#/9x76If %%k");
      document0.html();
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Element$2", "");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.prettyPrint(false);
      Document document1 = document0.outputSettings(document_OutputSettings1);
      document1.outerHtml();
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Tag tag0 = Tag.valueOf("textarea");
      FormElement formElement0 = new FormElement(tag0, "lN2", (Attributes) null);
      // Undeclared exception!
      try { 
        formElement0.val((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Tag tag0 = Tag.valueOf("u6DJwH4*");
      FormElement formElement0 = new FormElement(tag0, "u6DJwH4*", (Attributes) null);
      formElement0.val();
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("6C7cV<?L9K_NVR^])t", "6C7cV<?L9K_NVR^])t");
      document0.data();
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("q,4$a)5#/9x76If %%k", "q,4$a)5#/9x76If %%k");
      document0.data();
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Document document0 = Document.createShell("q,4$a)5#/9x76If %%k");
      document0.appendText("");
      document0.hasText();
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Document document0 = Parser.parse("q,4$a)5#/9x76If %%k", "q,4$a)5#/9x76If %%k");
      document0.hasText();
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(".", ".");
      document0.appendTo(document0);
      Element.preserveWhitespace(document0);
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Element.preserveWhitespace((Node) null);
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Tag tag0 = Tag.valueOf("?>,HP&GmD7%r=Iz;");
      CDataNode cDataNode0 = new CDataNode("Tag name must not be empty.");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "Tag name must not be empty.", attributes0);
      formElement0.prependChild(cDataNode0);
      Pattern pattern0 = Pattern.compile("1.0");
      formElement0.getElementsMatchingText(pattern0);
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      Tag tag0 = Tag.valueOf("textarea", (ParseSettings) null);
      Element element0 = new Element(tag0, "a1");
      element0.append("ZOe&g:1#/^QQ&G-icC");
      element0.val();
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("6C7cV<?L9K_NVR^])t", "6C7cV<?L9K_NVR^])t");
      Pattern pattern0 = Pattern.compile("e");
      document0.getElementsMatchingOwnText(pattern0);
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("q,4$a)5#/9x76If %%k", "q,4$a)5#/9x76If %%k");
      document0.wholeText();
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Document document0 = Document.createShell("5tGc");
      document0.prependText("bG");
      Element element0 = document0.appendText("bG");
      element0.getElementsContainingText("R'4f3O']");
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("6C7cV<?L9K_NVR^])t", "6C7cV<?L9K_NVR^])t");
      document0.getElementsContainingText("6C7cV<?L9K_NVR^])t");
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "");
      Element element0 = document0.head();
      element0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Element$2", "org.jsoup.nodes.Element$2");
      Element element0 = document0.empty();
      element0.prependChild(document0);
      document0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      Document document0 = Document.createShell("q,4$a)5#/9x76If %%k");
      Element element0 = document0.appendTo(document0);
      element0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Element$2", "org.jsoup.nodes.Element$2");
      Element element0 = document0.empty();
      element0.prependChild(document0);
      document0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("q,4$a)5#/9x76If %%k", "q,4$a)5#/9x76If %%k");
      Element element0 = document0.appendTo(document0);
      element0.previousElementSiblings();
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("q,4$a)5#/9x76If %%k", "q,4$a)5#/9x76If %%k");
      Element element0 = document0.appendTo(document0);
      Element element1 = element0.empty();
      element1.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Document document0 = Parser.parse("Z<-vc>ah1p;_IG", "Z<-vc>ah1p;_IG");
      document0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Element$2", "org.jsoup.nodes.Element$2");
      document0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Document document0 = Parser.parse("\"", "\"");
      document0.siblingElements();
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Document document0 = Document.createShell("q,4$a)5#/9x76If %%k");
      document0.appendTo(document0);
      document0.siblingElements();
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      Element element0 = new Element("6C7cV<?L9K_NVR^])t");
      Element element1 = element0.addClass("u6DJwH4*");
      element1.cssSelector();
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Document document0 = new Document("id");
      Node[] nodeArray0 = new Node[2];
      // Undeclared exception!
      try { 
        document0.insertChildren(3204, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Document document0 = Parser.parse("Z<-vc>ah1p;_IG", "Z<-vc>ah1p;_IG");
      Node[] nodeArray0 = new Node[2];
      // Undeclared exception!
      try { 
        document0.insertChildren((-1888966089), nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("6C7cV<?L9K_NVR^])t", "6C7cV<?L9K_NVR^])t");
      List<Node> list0 = document0.siblingNodes();
      // Undeclared exception!
      try { 
        document0.insertChildren(5, (Collection<? extends Node>) list0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Document document0 = Parser.parse("5tGc", "5tGc");
      List<DataNode> list0 = document0.dataNodes();
      // Undeclared exception!
      try { 
        document0.insertChildren((-4076), (Collection<? extends Node>) list0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Tag tag0 = Tag.valueOf(":matches(%s)");
      Element element0 = new Element(tag0, "b-#2S^ 0%m]5*:i-n<_");
      LinkedList<CDataNode> linkedList0 = new LinkedList<CDataNode>();
      element0.insertChildren((-1), (Collection<? extends Node>) linkedList0);
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      Document document0 = Document.createShell("");
      document0.appendText("Children collection to be inserted must not be null.");
      document0.textNodes();
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Element$2", "org.jsoup.nodes.Element$2");
      Element element0 = document0.prependText("\"jeB3.]onL");
      document0.prependChild(element0);
      Elements elements0 = document0.nextElementSiblings();
      assertFalse(elements0.isEmpty());
      assertEquals("org.jsoup.nodes.Element$2", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Document document0 = new Document("4u+?xW.^M'X{,HOp+");
      Elements elements0 = document0.getElementsByIndexGreaterThan(6);
      assertEquals("4u+?xW.^M'X{,HOp+", document0.baseUri());
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Element$2", "");
      // Undeclared exception!
      try { 
        document0.selectFirst("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Document document0 = Parser.parse("q,4$a)5#/9x76If %%k", "q,4$a)5#/9x76If %%k");
      document0.getElementsByTag("q,4$a)5#/9x76If %%k");
      assertEquals("q,4$a)5#/9x76If %%k", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      Element element0 = new Element("q,4$a)5#9x76If %%k");
      Elements elements0 = element0.getElementsMatchingText("");
      assertFalse(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      Tag tag0 = Tag.valueOf("u6DJwH4*");
      Element element0 = new Element(tag0, "8[q`)=uai#$");
      // Undeclared exception!
      try { 
        element0.removeClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("q,4$a)5#/9x76If %%k", "q,4$a)5#/9x76If %%k");
      // Undeclared exception!
      try { 
        document0.before("Children collection to be inserted must not be null.");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Document document0 = Document.createShell("q,4$a)5#/9x76If %%+");
      // Undeclared exception!
      try { 
        document0.getElementsByAttribute((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      Elements elements0 = document0.getElementsByAttributeValueNot(":nth-chid(%d)", "&x?pcxj");
      assertEquals(4, elements0.size());
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("q,4$a)5#/9x76If %%k", "q,4$a)5#/9x76If %%k");
      document0.appendTo(document0);
      document0.previousElementSibling();
      assertEquals(2, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("value", "value");
      Element element0 = document0.shallowClone();
      assertEquals("value", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      Document document0 = Document.createShell("q,4$a)5#/9x76If %%k");
      document0.doSetBaseUri("6C7cV<?L9K_NVR^])t");
      assertEquals("6C7cV<?L9K_NVR^])t", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Document document0 = Document.createShell("{f!p");
      // Undeclared exception!
      try { 
        document0.after((Node) document0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Document document0 = Parser.parse("\"", "\"");
      document0.getElementsByAttributeValueContaining("#document", ":contains");
      assertEquals("\"", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("q,4$a)5#/9x76If %%k", "q,4$a)5#/9x76If %%k");
      // Undeclared exception!
      try { 
        document0.getElementsByClass("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("q,4$a)5#/9x76If %%k", "q,4$a)5#/9x76If %%k");
      document0.getElementsByAttributeValueEnding("q,4$a)5#/9x76If %%k", "q,4$a)5#/9x76If %%k");
      assertEquals(1, document0.childNodeSize());
      assertEquals("q,4$a)5#/9x76If %%k", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("q,4$a)5#/9x76If %%k", "q,4$a)5#/9x76If %%k");
      document0.is("h1");
      assertEquals("q,4$a)5#/9x76If %%k", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Element$2", "");
      Elements elements0 = document0.getElementsByIndexEquals(1);
      assertEquals(1, elements0.size());
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Element$2", "");
      Elements elements0 = document0.getElementsByAttributeStarting(" > ");
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      // Undeclared exception!
      try { 
        document0.prependElement("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      Document document0 = Parser.parse("z!S3W,VYX%5*>}", "4'vdhZqKvaN|7th%#");
      Elements elements0 = document0.getElementsByIndexLessThan((-1436010313));
      assertEquals("4'vdhZqKvaN|7th%#", document0.baseUri());
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      Document document0 = Parser.parse("q,4$a)5#/9x76If %%k", "q,4$a)5#/9x76If %%k");
      // Undeclared exception!
      try { 
        document0.after("[:;N");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Document document0 = Parser.parse("\"", "\"");
      document0.getElementsMatchingOwnText("");
      assertEquals("\"", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("q,4$a)5#/9x76If %%k", "q,4$a)5#/9x76If %%k");
      // Undeclared exception!
      try { 
        document0.prepend((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      Element element0 = document0.head();
      assertNotNull(element0);
      
      String string0 = element0.cssSelector();
      assertEquals("html > head", string0);
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Element$2", "");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueStarting("#root", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Element element0 = new Element("meta");
      Elements elements0 = element0.getElementsByAttributeValue("meta", "meta");
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      Tag tag0 = Tag.valueOf("u6DJwH4*");
      FormElement formElement0 = new FormElement(tag0, "u6DJwH4*", (Attributes) null);
      formElement0.wholeText();
      assertEquals("u6DJwH4*", formElement0.baseUri());
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("q,4$a)5#9x76I` %%k", "q,4$a)5#9x76I` %%k");
      // Undeclared exception!
      try { 
        document0.before((Node) document0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      Element element0 = new Element("6C7cV<?L9K_NVR^])t");
      Elements elements0 = element0.getAllElements();
      assertFalse(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      Document document0 = Parser.parse("\"", "\"");
      Elements elements0 = document0.getElementsContainingOwnText("\"");
      assertEquals(1, elements0.size());
      assertEquals("\"", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      document0.dataset();
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("q,4$a)5#/9x76If %%k", "q,4$a)5#/9x76If %%k");
      document0.html("q,4$a)5#/9x76If %%k");
      document0.data();
      assertEquals("q,4$a)5#/9x76If %%k", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      Document document0 = Parser.parse("\"", "\"");
      Element element0 = document0.tagName("\"");
      assertEquals(1, element0.childNodeSize());
      assertEquals("\"", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("q,4$a)5#/9x76If %%k", "q,4$a)5#/9x76If %%k");
      // Undeclared exception!
      try { 
        document0.child((-2849));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "");
      document0.previousElementSiblings();
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      Document document0 = Parser.parse("<#JON6~<R<eo!", "<#JON6~<R<eo!");
      Pattern pattern0 = Pattern.compile("<#JON6~<R<eo!");
      document0.getElementsMatchingText(pattern0);
      assertEquals(1, document0.childNodeSize());
      assertEquals("<#JON6~<R<eo!", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("`&n#9Zq", "`&n#9Zq");
      document0.addClass("<html>\n <head></head>\n <body>\n  `&amp;n#9Zq\n </body>\n</html>");
      boolean boolean0 = document0.hasClass("org.jsoup.select.Evaluator$IsRoot");
      assertEquals(1, document0.childNodeSize());
      assertEquals("`&n#9Zq", document0.baseUri());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("style", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("6C7cV<?L9K_NVR^])t");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, ".", attributes0);
      formElement0.appendText("9Gxq484c8q");
      assertEquals(1, formElement0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      Document document0 = Document.createShell("R%E`YDks,MgX#,z=");
      // Undeclared exception!
      try { 
        document0.wrap("VI.,~E-r]T");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Document document0 = Parser.parse("<#JON6~<R<eo!", "<#JON6~<R<eo!");
      document0.getElementById("U@1$w(UH6c`.)5");
  }
}
