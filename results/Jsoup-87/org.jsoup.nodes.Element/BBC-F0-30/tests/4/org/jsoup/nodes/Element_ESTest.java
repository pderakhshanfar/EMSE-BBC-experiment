/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 05 21:34:17 GMT 2021
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.CharArrayWriter;
import java.io.IOException;
import java.io.PipedWriter;
import java.io.StringWriter;
import java.nio.BufferOverflowException;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.util.Collection;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Set;
import java.util.UnknownFormatConversionException;
import java.util.regex.Pattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.Comment;
import org.jsoup.nodes.DataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.DocumentType;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.nodes.PseudoTextElement;
import org.jsoup.nodes.TextNode;
import org.jsoup.nodes.XmlDeclaration;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Parser;
import org.jsoup.parser.Tag;
import org.jsoup.select.Elements;
import org.jsoup.select.Evaluator;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Element_ESTest extends Element_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%c3;FOWe6$a5c[E:", "%c3;FOWe6$a5c[E:");
      document0.setParentNode(document0);
      document0.empty();
      document0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("1<L;ondp,", "1<L;ondp,");
      LinkedList<TextNode> linkedList0 = new LinkedList<TextNode>();
      document0.insertChildren(0, (Collection<? extends Node>) linkedList0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%c3;FOWe6$a5c[E:", "%c3;FOWe6$a5c[E:");
      MockFileWriter mockFileWriter0 = new MockFileWriter("%c3;FOWe6$a5c[E:", true);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document_OutputSettings0.prettyPrint(false);
      document0.outerHtmlTail(mockFileWriter0, (-3409), document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("samp", "samp");
      MockFileWriter mockFileWriter0 = new MockFileWriter("];");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document0.outerHtmlHead(mockFileWriter0, 0, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf(",1V<<[Af", parseSettings0);
      Element element0 = new Element(tag0, ",1V<<[Af", attributes0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%c3;FOWe6$a5c[E:", "%c3;FOWe6$a5c[E:");
      document0.nodelistChanged();
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("Cr", "Cr");
      document0.ensureChildNodes();
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Document document0 = new Document("font");
      document0.doSetBaseUri((String) null);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Document document0 = new Document("9|");
      Parser parser0 = Parser.xmlParser();
      Document document1 = document0.parser(parser0);
      document1.wrap("Pattern syntax error: ");
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Document document0 = Parser.parse("vIalue", "vIalue");
      Element element0 = document0.body();
      element0.wrap("oYqOZ$WI;7h`e)?J~");
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Document document0 = new Document("9|");
      document0.wholeText();
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("a?wjw9|d");
      FormElement formElement0 = new FormElement(tag0, "a?wjw9|d", attributes0);
      formElement0.siblingIndex = 9;
      formElement0.val("a?wjw9|d");
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Tag tag0 = Tag.valueOf("lasefont");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "lasefont", attributes0);
      formElement0.siblingIndex = (-132294016);
      formElement0.val("lasefont");
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("|ky&mx|o*&bccr", "&#x");
      Element element0 = document0.head();
      element0.val(":r*%s");
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("br", "br");
      document0.siblingIndex = (-2363);
      document0.toggleClass("version");
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Document document0 = Parser.parse("pPz 4XUQz8xT1", "");
      document0.appendChild(document0);
      document0.text("]&<4n6mP");
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Document document0 = Parser.parse("pPz 4XUQz8xT1", "");
      Element element0 = document0.head();
      element0.text("]&<4n6mP");
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      document0.text("");
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Document document0 = new Document("br");
      document0.text();
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput(" ", " ");
      document0.tagName("address");
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%c3;FOWe6$a5c[E:", "%c3;FOWe6$a5c[E:");
      Element element0 = document0.body();
      element0.tagName("Unexpectedly reached end of file (EOF) in input state [%s]");
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Document document0 = Parser.parse("java.lang.string@0000000015 1\n * ", "java.lang.string@0000000015 1\n * ");
      Element element0 = document0.shallowClone();
      element0.tagName("tag name must not be empty.");
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Document document0 = new Document("%c3;FOWe6$a5c[E:");
      document0.tagName();
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Tag tag0 = Tag.valueOf("textarea");
      Element element0 = new Element(tag0, "textarea");
      element0.tag();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Document document0 = Document.createShell(":%-xB:y{OmW");
      document0.tag();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput(" ", " ");
      Element element0 = document0.prependElement("address");
      element0.tag();
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Element element0 = new Element("br");
      element0.tag();
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Document document0 = Document.createShell("class");
      Element element0 = document0.head();
      element0.shallowClone();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Document document0 = new Document("font");
      document0.selectFirst("xV");
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Element element0 = new Element("br");
      element0.selectFirst("br");
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("T#<j", "T#<j");
      document0.appendElement("Cr");
      document0.selectFirst("Cr");
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Document document0 = new Document("font");
      document0.select("textarea");
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("html", ".");
      document0.select("html");
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Element element0 = new Element("br");
      element0.siblingIndex = (-1620);
      element0.removeClass("dl");
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%c3;FOWe6$a5c[E:", "%c3;FOWe6$a5c[E:");
      Element element0 = document0.body();
      element0.removeClass("%c3;FOWe6$a5c[E:");
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Document document0 = new Document("Pattern syntax error: ");
      Document document1 = document0.normalise();
      document0.appendElement("a` ^EZ?+^t2zYI#0f");
      Element element0 = document1.appendElement("gWodRyVd");
      element0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Document document0 = new Document("Pattern syntax error: ");
      document0.appendElement("a` ^EZ?+^t2zYI#0f");
      Element element0 = document0.appendElement("gWodRyVd");
      element0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%c3;FOWe6$a5c[E:", "%c3;FOWe6$a5c[E:");
      Element element0 = document0.body();
      element0.prependText("uAu>5pg5E1+>XEKV,*");
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Document document0 = Document.createShell("bBY:L");
      Element element0 = document0.appendElement("f-txKi$");
      element0.prependChild(document0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("pPz vXU|z8*T1");
      Document document0 = Parser.parseBodyFragment("#root", "html");
      document0.prependChild(cDataNode0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%c3;FOWe6$a5c[E:", "%c3;FOWe6$a5c[E:");
      Element element0 = document0.body();
      element0.prepend("f%be4:O)@D_P");
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%c3;FOWe6$a5c[E:", "%c3;FOWe6$a5c[E:");
      Element element0 = document0.appendElement("]j");
      element0.prepend("f%be4:O)@D_P");
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Document document0 = new Document("Cr");
      document0.prepend("");
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%c3;FOWe6$a5c[E:", "%c3;FOWe6$a5c[E:");
      document0.parents();
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("%c3;FOWe0a5|<c[Ed:", "%c3;FOWe0a5|<c[Ed:");
      Element element0 = document0.head();
      element0.parents();
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("", "`^zGx^)%0g_74{T3yx");
      document0.parent();
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Document document0 = new Document("font");
      Document document1 = Parser.parseBodyFragment("font", "font");
      document0.appendChild(document1);
      document1.parent();
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput(" ", " ");
      Element element0 = document0.appendElement(" />");
      document0.setParentNode(element0);
      document0.parent();
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("@2)Yy!)x& Ne>%v{<D", "@2)Yy!)x& Ne>%v{<D");
      Element element0 = document0.body();
      element0.parent();
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("@hF;E", "org.jsoup.safety.Cleaner$CleaningVisitor");
      document0.ownText();
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Element element0 = new Element("org.jsoup.nodes.Element");
      element0.nodeName();
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("== )>f+VL", "== )>f+VL");
      document0.setParentNode(document0);
      Parser parser0 = Parser.xmlParser();
      Document document1 = parser0.parseInput("option", "-||dC?%?`2");
      document0.appendChild(document1);
      document0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Pattern syntax error: ", "Pattern syntax error: ");
      Element element0 = document0.body();
      element0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Document document0 = Document.createShell(" > ");
      Element element0 = document0.body();
      element0.isBlock();
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Document document0 = Parser.parse("7", "");
      Evaluator.AttributeWithValueEnding evaluator_AttributeWithValueEnding0 = new Evaluator.AttributeWithValueEnding("`Tyde-G>s~Z<I>r]", "3Nx=dsrh19<iLG");
      document0.is((Evaluator) evaluator_AttributeWithValueEnding0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Document document0 = new Document("font");
      document0.is("font");
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Document document0 = Document.createShell("Y");
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = (Node) document0;
      nodeArray0[1] = (Node) document0;
      document0.insertChildren(0, nodeArray0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Insert position out of bounds.", "Insert position out of bounds.");
      LinkedHashSet<Document> linkedHashSet0 = new LinkedHashSet<Document>();
      linkedHashSet0.add(document0);
      document0.insertChildren(1, (Collection<? extends Node>) linkedHashSet0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("a?wjw9|d");
      FormElement formElement0 = new FormElement(tag0, "a?wjw9|d", attributes0);
      LinkedList<Document> linkedList0 = new LinkedList<Document>();
      formElement0.insertChildren(0, (Collection<? extends Node>) linkedList0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Document document0 = new Document("}nt:xT'A<bC%ZK3zH");
      Element element0 = document0.toggleClass("org.jsoup.nodes.Element$1");
      element0.siblingIndex = (-1436010313);
      element0.html("extended");
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Document document0 = Document.createShell("");
      document0.html("");
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Document document0 = new Document("font");
      MockFileWriter mockFileWriter0 = new MockFileWriter("D@$~]g%vHk0EL&|a-");
      document0.html(mockFileWriter0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Document document0 = new Document("class");
      document0.html();
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Document document0 = Parser.parse("(", "l^6o");
      document0.toggleClass("Md/F");
      document0.toggleClass("]j");
      document0.hasClass("]j");
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Document document0 = Parser.parse("pPz vXU|z8*T1", "pPz vXU|z8*T1");
      document0.getElementsByClass("pPz vXU|z8*T1");
      document0.hasAttributes();
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Document document0 = Document.createShell("~Aav,nzA0Y.[");
      document0.hasAttributes();
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Document document0 = Document.createShell(" > ");
      Pattern pattern0 = Pattern.compile("", (-379));
      document0.getElementsMatchingText(pattern0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Document document0 = Parser.parse("$9", "}b?#'Du!UvsdK");
      Pattern pattern0 = Pattern.compile("org.jsoup.select.StructuralEvaluator");
      document0.getElementsMatchingOwnText(pattern0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("", "`^zGx^)%0g_74{T3yx");
      document0.getElementsContainingOwnText("character outside of valid range");
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%c3;FOWe6$a5c[E:", "%c3;FOWe6$a5c[E:");
      document0.getElementsByTag("ouJ");
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%c3;FOWe6$a5c[E:", "%c3;FOWe6$a5c[E:");
      Element element0 = document0.appendElement("]j");
      element0.getElementsByTag("]j");
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%c3;FOWe6$a5c[E:", "%c3;FOWe6$a5c[E:");
      Element element0 = document0.body();
      element0.getElementsByIndexLessThan(1192721831);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Document document0 = Parser.parse("7", "7");
      document0.getElementsByIndexGreaterThan(20);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%c3;FOWe6$a5c[E:", "%c3;FOWe6$a5c[E:");
      document0.getElementsByIndexEquals((-3911));
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("samp", "samp");
      document0.getElementsByAttributeValueStarting("samp", "E7~| YyR");
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Document document0 = new Document("}nt:xT'A<bC%ZK3zH");
      document0.getElementsByAttributeValueNot("J`M2I^w?", "J`M2I^w?");
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Document document0 = new Document("wEt4~(U%icF4");
      Element element0 = document0.attr("wEt4~(U%icF4", "wEt4~(U%icF4");
      Pattern pattern0 = Pattern.compile("wEt4~(U%icF4", (-841));
      element0.getElementsByAttributeValueMatching("wEt4~(U%icF4", pattern0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%c3;FOWe6$a5c[E:", "%c3;FOWe6$a5c[E:");
      document0.attr("%c3;FOWe6$a5c[E:", "%c3;FOWe6$a5c[E:");
      document0.getElementsByAttributeValue("%c3;FOWe6$a5c[E:", "%c3;FOWe6$a5c[E:");
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Tag tag0 = Tag.valueOf("LN=(nx44SL]");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("body", true);
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "uP@Z-XN C,", attributes1);
      pseudoTextElement0.getElementsByAttributeStarting("body");
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Tag tag0 = Tag.valueOf(":%s(%dn)");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("textarea", true);
      FormElement formElement0 = new FormElement(tag0, ":%s(%dn)", attributes1);
      formElement0.getElementsByAttribute("textarea");
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Document document0 = Parser.parse("7", "");
      document0.prepend("<html>\n <head></head>\n <body>\n  7\n </body>\n</html>");
      Element element0 = document0.appendElement("xVOE(zu|wrgW;2");
      element0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%c3;FOWe6$a5c[E:", "%c3;FOWe6$a5c[E:");
      Element element0 = document0.appendElement("%c3;FOWe6$a5c[E:");
      element0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Document document0 = Document.createShell("");
      document0.appendChild(document0);
      document0.empty();
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Document document0 = Document.createShell("%c3;FOWe6$Ma5c[E:");
      Element element0 = document0.head();
      element0.empty();
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%c3;FOWe6$a5c[E:", "%c3;FOWe6$a5c[E:");
      Element element0 = document0.appendElement("]j");
      element0.elementSiblingIndex();
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%c3;FOWe6$a5c[E:", "%c3;FOWe6$a5c[E:");
      document0.doClone((Node) null);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%c3;FOWe6$a5c[E:", "%c3;FOWe6$a5c[E:");
      Element element0 = document0.head();
      element0.doClone(document0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput(" ", " ");
      Element element0 = document0.prependElement("address");
      element0.clone();
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Document document0 = Parser.parse("7", "");
      Element element0 = document0.body();
      Set<String> set0 = document0.classNames();
      element0.classNames(set0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("pPz vXU|z8*T1", "");
      document0.toggleClass(":nth-child(%d)");
      document0.className();
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput(" ", " ");
      document0.appendElement(" />");
      document0.children();
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%c3;FOWe6$a5c[E:", "%c3;FOWe6$a5c[E:");
      Element element0 = document0.appendElement(".");
      element0.childNodeSize();
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Document document0 = new Document("InSelect");
      Document document1 = document0.normalise();
      document1.childNodeSize();
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Document document0 = Parser.parse("pPz vXU|z8*T1", "pPz vXU|z8*T1");
      document0.reparentChild(document0);
      document0.before((Node) document0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Document document0 = Parser.parse("</", "</");
      Element element0 = document0.head();
      element0.before((Node) document0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(":nth-of-type(", ":nth-of-type(");
      Document document1 = new Document("=\n * ");
      document0.parentNode = (Node) document1;
      document0.before("1");
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Document document0 = Parser.parse("pPz vXU|z8*T1", "");
      document0.baseUri();
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(":prev*%s", ":@");
      document0.attributes();
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Document document0 = Document.createShell("p=9Ys 7pJ1ZV4H2");
      document0.attr("", "big");
      document0.attributes();
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("br", "Cr");
      Element element0 = document0.appendElement("br");
      element0.attr("Insert position out of bounds.", true);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%cC;FOWe6$Ma5c[E:", "%cC;FOWe6$Ma5c[E:");
      Element element0 = document0.head();
      element0.attr("%cC;FOWe6$Ma5c[E:", false);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Document document0 = Document.createShell("");
      Element element0 = document0.body();
      element0.attr("s+", "");
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("?>XP_%;]", "?>XP_%;]");
      Document document1 = new Document("?>XP_%;]");
      document0.appendTo(document1);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.select.CombiningEvaluator$Or");
      Element element0 = document0.prependElement("address");
      element0.appendTo(document0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Document document0 = new Document("u;'5_&\"\u0006a(Fx");
      document0.setSiblingIndex(1349);
      document0.appendText("u;'5_&\"\u0006a(Fx");
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Element element0 = new Element("body");
      element0.appendText("");
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Document document0 = Parser.parse("%c3;FOZe6$a5c[E:", "%c3;FOZe6$a5c[E:");
      document0.setParentNode(document0);
      document0.appendText("%c3;FOZe6$a5c[E:");
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Document document0 = new Document("9|");
      document0.appendElement("hr");
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput(" -f ", "org.j.oup.nodes.DUcumrnt$Qui+sModf");
      Element element0 = document0.prependElement("address");
      element0.appendChild(document0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Element element0 = new Element("br");
      element0.siblingIndex = (-2449);
      element0.append("br");
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("</", "</");
      Element element0 = document0.head();
      element0.append("M'BvA5*'x4@%yL");
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%c3;FOWe6$a5c[E:", "%c3;FOWe6$a5c[E:");
      Element element0 = document0.appendElement(".");
      element0.append(".");
      element0.before((Node) document0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Document document0 = new Document("g4");
      document0.append("");
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Document document0 = Document.createShell("a.TiK[N3");
      Element element0 = document0.body();
      element0.after((Node) document0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Document document0 = Parser.parse("%c3;FOZe6$a5c[E:", "%c3;FOZe6$a5c[E:");
      document0.setParentNode(document0);
      DocumentType documentType0 = new DocumentType("org.jsoup.nodes.PseudoTextElement", (String) null, "teG@UC7", "[%s$=%s]");
      document0.after((Node) documentType0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Document document0 = Parser.parse("pPz vXU|z8*T1", "pPz vXU|z8*T1");
      Document document1 = new Document("");
      document0.reparentChild(document1);
      document1.after("%!H1:#LE*qH<%");
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Document document0 = Document.createShell("-TdDU");
      Element element0 = document0.body();
      element0.after("    ");
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput(", -f ", "/ lNb9MU");
      Element element0 = document0.prependElement("address");
      element0.addClass(", -f");
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("?>XP_%;]", "?>XP_%;]");
      Element element0 = document0.appendTo(document0);
      element0.addClass("|KY&mx|o*&bccR");
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Document document0 = new Document("html");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.wrap("html");
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Document document0 = Document.createShell("");
      // Undeclared exception!
      try { 
        document0.wrap("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("k2MZkyw|", "ru:Ki}k8RwI:1ee");
      Element element0 = document0.createElement("Cr");
      element0.childNodes = null;
      // Undeclared exception!
      try { 
        element0.wholeText();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%c3;FOWe6$a5c[E:", "%c3;FOWe6$a5c[E:");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.val("j)FkTOL\")'s");
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Document document0 = new Document("b!_e3z0jA)07tR");
      Parser parser0 = Parser.xmlParser();
      Parser parser1 = parser0.settings((ParseSettings) null);
      Document document1 = document0.parser(parser1);
      // Undeclared exception!
      try { 
        document1.val((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Tag tag0 = Tag.valueOf("lasefont");
      Attributes attributes0 = new Attributes();
      String[] stringArray0 = new String[8];
      attributes0.keys = stringArray0;
      FormElement formElement0 = new FormElement(tag0, "lasefont", attributes0);
      // Undeclared exception!
      try { 
        formElement0.val("lasefont");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Document document0 = Document.createShell("s");
      // Undeclared exception!
      try { 
        document0.toggleClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Document document0 = new Document("");
      // Undeclared exception!
      try { 
        document0.text("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("== )>f+VL", "T(");
      // Undeclared exception!
      try { 
        document0.text((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Element element0 = new Element("org.jsoup.nodes.Element");
      Element element1 = element0.removeClass("org.jsoup.nodes.Element");
      Element element2 = element0.appendText("org.jsoup.nodes.Element");
      List<Node> list0 = element2.childNodesCopy();
      element1.childNodes = list0;
      // Undeclared exception!
      try { 
        element0.text();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.NodeTraversor", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Document document0 = Document.createShell("%c3;FOWe6$a5c[E:");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.tagName("%c3;FOWe6$a5c[E:");
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Parser parser1 = parser0.settings((ParseSettings) null);
      Document document0 = parser1.parseInput("br", "br");
      // Undeclared exception!
      try { 
        document0.tagName("java.lang.string@0000000085 br");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.Tag", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%c3;FOWe6$a5c[E:", "%c3;FOWe6$a5c[E:");
      // Undeclared exception!
      try { 
        document0.tagName("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Tag name must not be empty.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("*[tv^ZN$", "*[tv^ZN$");
      Element element0 = document0.body();
      document0.setParentNode(element0);
      // Undeclared exception!
      try { 
        document0.siblingElements();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Tag tag0 = Tag.valueOf("lasefont");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "lasefont", attributes0);
      DataNode dataNode0 = new DataNode("lasefont");
      formElement0.setParentNode(dataNode0);
      // Undeclared exception!
      try { 
        formElement0.siblingElements();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(":prev*%s", ":@");
      // Undeclared exception!
      try { 
        document0.selectFirst("~IFs^fg;wR!Ne+9");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query 'IFs^fg;wR!Ne': unexpected token at '^fg;wR!Ne'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Document document0 = Parser.parse("pPz vXU|z8*T1", "");
      // Undeclared exception!
      try { 
        document0.selectFirst("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Document document0 = Document.createShell(":%-xB:y{OmW");
      // Undeclared exception!
      try { 
        document0.select("org.jsoup.select.Evaluator$IsNthChild");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query 'org.jsoup.select.Evaluator$IsNthChild': unexpected token at '$IsNthChild'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Tag tag0 = Tag.valueOf("[7mQz4}%U5M=4");
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "[7mQz4}%U5M=4", attributes0);
      // Undeclared exception!
      try { 
        pseudoTextElement0.select("[7mQz4}%U5M=4");
        fail("Expecting exception: UnknownFormatConversionException");
      
      } catch(UnknownFormatConversionException e) {
         //
         // Conversion = 'U'
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%c3;FOWe6$a5c[E:", "org.jsoup.select.CombiningEvaluator$Or");
      // Undeclared exception!
      try { 
        document0.removeClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("99zcwB~", "org.jsoup.select.Evaluator");
      List<Node> list0 = document0.childNodes();
      document0.childNodes = list0;
      // Undeclared exception!
      try { 
        document0.prependText("99zcwB~");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableList", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Document document0 = new Document("}nt:xT'A<bC%$K3zH");
      // Undeclared exception!
      try { 
        document0.prependText((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%c3;FOWe6$a5c[E:", "%c3;FOWe6$a5c[E:");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.prependElement((String) null);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("%c3;FOWx6$a5c4E:", "textarea");
      parser0.settings((ParseSettings) null);
      // Undeclared exception!
      try { 
        document0.prependElement("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.Tag", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Document document0 = Parser.parse("pPz vXU|z8*T1", "pPz vXU|z8*T1");
      // Undeclared exception!
      try { 
        document0.prependElement((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%c3;FOWe6$a5c[E:", "%c3;FOWe6$a5c[E:");
      Element element0 = document0.appendElement("%c3;FOWe6$a5c[E:");
      document0.setParentNode(element0);
      // Undeclared exception!
      try { 
        element0.prependChild(document0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Document document0 = new Document("9|");
      // Undeclared exception!
      try { 
        document0.prependChild((Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Document document0 = Parser.parse("pPz vXU|z8*T1", "pPz vXU|z8*T1");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.prepend("pPz vXU|z8*T1");
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.parser.XmlTreeBuilder", "org.jsoup.parser.XmlTreeBuilder");
      // Undeclared exception!
      try { 
        document0.prepend((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Tag tag0 = Tag.valueOf("=\n * ");
      Element element0 = new Element(tag0, "RCDATAEndTagName");
      TextNode textNode0 = TextNode.createFromEncoded("br");
      element0.setParentNode(textNode0);
      // Undeclared exception!
      try { 
        element0.prepend("^?Dx^9q");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("rK1s2Eew1~", "rK1s2Eew1~");
      TextNode textNode0 = new TextNode("rK1s2Eew1~");
      document0.setParentNode(textNode0);
      // Undeclared exception!
      try { 
        document0.parents();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("s+", "s+");
      StringBuffer stringBuffer0 = new StringBuffer("cDs");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document_OutputSettings0.indentAmount(352);
      // Undeclared exception!
      document0.outerHtmlTail(stringBuffer0, 352, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Document document0 = Parser.parse("pPz vXU|z8*T1", "pPz vXU|z8*T1");
      char[] charArray0 = new char[4];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlTail(charBuffer0, 17, document_OutputSettings0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Document document0 = Document.createShell(":%-xB:y{OmW");
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        document0.outerHtmlTail(stringWriter0, 873, (Document.OutputSettings) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(" |jy0\",~HHS[\u0005'&X", " |jy0\",~HHS[\u0005'&X");
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0, true);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlTail(mockPrintWriter0, (-964), document_OutputSettings0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // width must be > 0
         //
         verifyException("org.jsoup.internal.StringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Document document0 = Parser.parse("7", "");
      PipedWriter pipedWriter0 = new PipedWriter();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      try { 
        document0.outerHtmlTail(pipedWriter0, 38, document_OutputSettings0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Document document0 = Document.createShell("Q!{q!P'0a)9-.?&7");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      CharBuffer charBuffer0 = CharBuffer.allocate(4);
      // Undeclared exception!
      try { 
        document0.outerHtmlHead(charBuffer0, 4, document_OutputSettings0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("value", "value");
      CharBuffer charBuffer0 = CharBuffer.allocate(4);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document_OutputSettings0.indentAmount(46);
      // Undeclared exception!
      document0.outerHtmlHead(charBuffer0, (-1459956063), document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Document document0 = Parser.parse("pPz vXU|z8*T1", "");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlHead((Appendable) null, (-255), document_OutputSettings0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("samp", "samp");
      MockFileWriter mockFileWriter0 = new MockFileWriter("body");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlHead(mockFileWriter0, (-14), document_OutputSettings0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // width must be > 0
         //
         verifyException("org.jsoup.internal.StringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("samp", "samp");
      MockFileWriter mockFileWriter0 = new MockFileWriter("];");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      mockFileWriter0.close();
      try { 
        document0.outerHtmlHead(mockFileWriter0, 0, document_OutputSettings0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("", "`^zGx^)%0g_74{T3yx");
      // Undeclared exception!
      try { 
        document0.lastElementSibling();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("^^7d", "org.jsoup.safety.Cleaner$CleaningVisitor");
      document0.setParentNode(document0);
      Evaluator.TagEndsWith evaluator_TagEndsWith0 = new Evaluator.TagEndsWith("org.jsoup.safety.Cleaner$CleaningVisitor");
      // Undeclared exception!
      document0.is((Evaluator) evaluator_TagEndsWith0);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Document document0 = Parser.parse("pPz vXU|z8*T1", "textarea");
      // Undeclared exception!
      try { 
        document0.is((Evaluator) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("br", "br");
      // Undeclared exception!
      try { 
        document0.is("!=");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query '!=': unexpected token at '!='
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Document document0 = Parser.parse("%c3;FOZe6$a5c[E:", "%c3;FOZe6$a5c[E:");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.is("TiDiIW");
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Document document0 = Parser.parse("7", "");
      // Undeclared exception!
      try { 
        document0.is("m[xO%kg?;;(?");
        fail("Expecting exception: UnknownFormatConversionException");
      
      } catch(UnknownFormatConversionException e) {
         //
         // Conversion = 'k'
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("%c3;FOWx6$a5c4E:", "%c3;FOWx6$a5c4E:");
      DocumentType documentType0 = new DocumentType("5H", "5H", "cmO]gC=O6gVo#1fWV", "cmO]gC=O6gVo#1fWV", ":nth-child(%d)");
      document0.parentNode = (Node) documentType0;
      // Undeclared exception!
      try { 
        document0.is("org.jsoup.select.Structura4Evaluator");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.nodes.DocumentType cannot be cast to org.jsoup.nodes.Element
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%c3;FOWe6$a5c[E:", "%c3;FOWe6$a5c[E:");
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = (Node) document0;
      CDataNode cDataNode0 = new CDataNode("value");
      nodeArray0[1] = (Node) cDataNode0;
      nodeArray0[2] = (Node) document0;
      nodeArray0[3] = (Node) document0;
      nodeArray0[4] = (Node) document0;
      nodeArray0[5] = (Node) document0;
      nodeArray0[6] = (Node) document0;
      // Undeclared exception!
      try { 
        document0.insertChildren(0, nodeArray0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%c3;FOWe6$a5c[E:", "%c3;FOWe6$a5c[E:");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.html(")(%");
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Document document0 = Parser.parse("pPz vXU|z8*T1", "pPz vXU|z8*T1");
      // Undeclared exception!
      try { 
        document0.html((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%c3;FOWe6$a5c[E:", "%c3;FOWe6$a5c[E:");
      document0.setParentNode(document0);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(1605);
      // Undeclared exception!
      document0.html(charArrayWriter0);
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("c", "ScriptDataEndTagOpen");
      char[] charArray0 = new char[5];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      // Undeclared exception!
      try { 
        document0.html(charBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("samp", "samp");
      // Undeclared exception!
      try { 
        document0.html((Appendable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("Sl", "Sl");
      document0.appendChild(document0);
      // Undeclared exception!
      document0.html();
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Document document0 = new Document("}nt:xT'A<bC%ZK3zH");
      Element element0 = document0.toggleClass("org.jsoup.nodes.Element$1");
      element0.childNodes = null;
      // Undeclared exception!
      try { 
        element0.hasText();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(":", "Wu(");
      // Undeclared exception!
      try { 
        document0.hasClass((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("BxiCN$jXJUb", "BxiCN$jXJUb");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText((Pattern) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$Matches", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Document document0 = Document.createShell("bBY:L");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Document document0 = new Document("9|");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText(":gt(");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pattern syntax error: :gt(
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("%c3;FOWx6$a5c4E:", "%c3;FOWx6$a5c4E:");
      DocumentType documentType0 = new DocumentType("%c3;FOWe60a5c[Ed:", "%c3;FOWx6$a5c4E:", "%c3;FOWx6$a5c4E:", "");
      document0.setParentNode(documentType0);
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText("body");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%c3;FOWe6$a5c[E:", "%c3;FOWe6$a5c[E:");
      Element element0 = document0.appendElement("%c3;FOWe6$a5c[E:");
      element0.setSiblingIndex((-2310));
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText(",C.*81^d9LG");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Document document0 = new Document("%c3;FOWe6$a5c[E:");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingOwnText((Pattern) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$MatchesOwn", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Document document0 = new Document("font");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingOwnText((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Document document0 = Document.createShell("Q!{q!P'0a)9-.?&7");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingOwnText("{)");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pattern syntax error: {)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Document document0 = new Document("Split offset must not be greater than current text length");
      Element element0 = document0.html("Split offset must not be greater than current text length");
      Comment comment0 = new Comment("#root");
      element0.parentNode = (Node) comment0;
      // Undeclared exception!
      try { 
        element0.getElementsMatchingOwnText("org.jsoup.nodes.Element");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Document document0 = Parser.parse("C>", "C>");
      document0.setSiblingIndex((-980));
      document0.setParentNode(document0);
      // Undeclared exception!
      try { 
        document0.getElementsMatchingOwnText("C>");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%c3;FOWe6$a5c[E:", "%c3;FOWe6$a5c[E:");
      DataNode dataNode0 = new DataNode("xhtml");
      document0.setParentNode(dataNode0);
      // Undeclared exception!
      try { 
        document0.getElementsContainingText("xhtml");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("samp", "samp");
      // Undeclared exception!
      try { 
        document0.getElementsByTag((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("6}CkVmCFZV", "6}CkVmCFZV");
      CDataNode cDataNode0 = new CDataNode("r>");
      document0.setParentNode(cDataNode0);
      // Undeclared exception!
      try { 
        document0.getElementsByIndexGreaterThan(1095);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Document document0 = Document.createShell("pubSysKey");
      Document document1 = document0.parser((Parser) null);
      document1.childNodes = null;
      // Undeclared exception!
      try { 
        document1.getElementsByClass("Vmy,r.4wMi");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Document document0 = Parser.parse("pPz vXU|z8*T1", "");
      // Undeclared exception!
      try { 
        document0.getElementsByClass("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Document document0 = Parser.parse("pPz vXU|z8*T1", "");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueNot("", "pPz vXU|z8*T1");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("kbd", "kbd");
      Element element0 = document0.appendElement("Cr");
      element0.siblingIndex = (-1916094443);
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueNot(".G<';_Y_V%j}2|rWg", "Cr");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Document document0 = Parser.parse("7", "<");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueMatching(" ", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Document document0 = new Document("font");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueMatching("", "|Elre{^DWKa18!");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pattern syntax error: |Elre{^DWKa18!
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Document document0 = new Document("%c3;FOWe6$a5c[E:");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueEnding("", ":last-of-type");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Document document0 = new Document("br");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueContaining("br", "\"");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Document document0 = Document.createShell(":%-xB:y{OmW");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueContaining("org.jsoup.select.Evaluator$IsNthChild", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Element element0 = new Element("br");
      Element element1 = element0.html("br");
      List<Node> list0 = element0.childNodesCopy();
      element0.childNodes = list0;
      // Undeclared exception!
      try { 
        element1.getElementsByAttributeValue("Tag name must not be empty.", "nth-of-type");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.NodeTraversor", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Document document0 = new Document("font");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValue((String) null, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("kbd", "kbd");
      Element element0 = document0.appendElement("Cr");
      element0.siblingIndex = (-1916094443);
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValue(">v%\" ?t!zB", "$|");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("@hF;E", "org.jsoup.safety.Cleaner$CleaningVisitor");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeStarting((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Document document0 = Parser.parse("pPz vXU|z8*T1", "");
      Element element0 = document0.appendElement("#");
      element0.siblingIndex = (-255);
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeStarting("replacementChar");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Tag tag0 = Tag.valueOf("LN=(nx44SL]");
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "uP@Z-XN C,", attributes0);
      // Undeclared exception!
      try { 
        pseudoTextElement0.getElementsByAttribute((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      Document document0 = Parser.parse("!%z6-6WDh;-;99}S", "");
      // Undeclared exception!
      try { 
        document0.getElementById("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("92OLD", "8I\"t3\"EV0LiHbNVj");
      Element element0 = document0.head();
      List<Node> list0 = Parser.parseFragment("&:|@~06?VMIA", (Element) document0, "&:|@~06?VMIA");
      element0.childNodes = list0;
      // Undeclared exception!
      try { 
        document0.getAllElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.NodeTraversor", e);
      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      Element element0 = new Element("dyg64~sPA");
      // Undeclared exception!
      try { 
        element0.firstElementSibling();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Document document0 = new Document("<!");
      List<Node> list0 = document0.childNodes();
      document0.childNodes = list0;
      // Undeclared exception!
      try { 
        document0.empty();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Pattern syntax error: ", "Pattern syntax error: ");
      DocumentType documentType0 = new DocumentType("Pattern syntax error: ", "Pattern syntax error: ", "");
      Element element0 = document0.doClone(documentType0);
      // Undeclared exception!
      try { 
        element0.elementSiblingIndex();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Document document0 = Document.createShell("lasefont");
      Element element0 = document0.appendElement("lasefont");
      element0.childNodes = null;
      // Undeclared exception!
      try { 
        document0.data();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Document document0 = Parser.parse("7", "");
      Element element0 = document0.body();
      element0.toggleClass("id");
      // Undeclared exception!
      try { 
        element0.cssSelector();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query 'body.java.lang.String@0000000054': unexpected token at '@0000000054'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("java.lang.string@0000000015 =\n 1 ", "java.lang.string@0000000015 =\n 1 ");
      TextNode textNode0 = TextNode.createFromEncoded("}bc");
      document0.setParentNode(textNode0);
      // Undeclared exception!
      try { 
        document0.cssSelector();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("html", ".");
      // Undeclared exception!
      try { 
        document0.classNames((Set<String>) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("X", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("8X%N3`VuePFB");
      Attributes attributes0 = cDataNode0.attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "ScriptDataDoubleEscapedDash", attributes0);
      // Undeclared exception!
      try { 
        pseudoTextElement0.child(232);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 232, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Document document0 = new Document("body");
      // Undeclared exception!
      try { 
        document0.child((-1843399667));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Document document0 = Document.createShell("K6}C7VOcmCFZ-");
      TextNode textNode0 = TextNode.createFromEncoded("K6}C7VOcmCFZ-");
      document0.setParentNode(textNode0);
      // Undeclared exception!
      try { 
        document0.before((Node) textNode0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractList", e);
      }
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%c3;FOWe6$a5c[E:", "%c3;FOWe6$a5c[E:");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.before("%c3;FOWe6$a5c[E:");
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("#root", "html");
      // Undeclared exception!
      try { 
        document0.attr((String) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      Document document1 = (Document)document0.appendChild(document0);
      // Undeclared exception!
      document1.attr("p:O@5Q!vpldE!e", "{)");
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("@hF;E", "org.jsoup.safety.Cleaner$CleaningVisitor");
      // Undeclared exception!
      try { 
        document0.attr((String) null, "#root");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.ParseSettings", e);
      }
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      Element element0 = document0.body();
      document0.setParentNode(element0);
      // Undeclared exception!
      try { 
        document0.appendTo(element0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Document document0 = Document.createShell("H$T%Dr$");
      // Undeclared exception!
      try { 
        document0.appendTo((Element) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%c3;FOWe6$a5c[E:", "%c3;FOWe6$a5c[E:");
      // Undeclared exception!
      try { 
        document0.appendText((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Document document0 = Parser.parse("kbd", "kbd");
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) document0;
      document0.insertChildren(0, nodeArray0);
      // Undeclared exception!
      document0.appendElement("kbd");
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("=Y1O%", "=Y1O%");
      List<Node> list0 = document0.childNodes();
      document0.childNodes = list0;
      // Undeclared exception!
      try { 
        document0.appendElement("=Y1O%");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(false, true);
      Tag tag0 = Tag.valueOf("tfoot", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "tfoot", (Attributes) null);
      formElement0.childNodes = null;
      // Undeclared exception!
      try { 
        formElement0.appendElement("^k6hvifr~");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Document document0 = new Document("9|");
      // Undeclared exception!
      try { 
        document0.appendElement("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Element element0 = new Element("i4VuU:/*&71]A2$mg3");
      DocumentType documentType0 = new DocumentType("Insert position out of bounds.", "org.jsoup.parser.Tag", "org.jsoup.parser.Tag", "org.jsoup.parser.Tag", "org.jsoup.parser.Tag");
      documentType0.parentNode = (Node) element0;
      // Undeclared exception!
      try { 
        element0.appendChild(documentType0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Document document0 = new Document("9|");
      // Undeclared exception!
      try { 
        document0.appendChild((Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%c3;FOWe6$a5c[E:", "%c3;FOWe6$a5c[E:");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.append("8[D4qtM^4fBl0.G");
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%c3;FOWe6$a5c[E:", "%c3;FOWe6$a5c[E:");
      // Undeclared exception!
      try { 
        document0.append((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("optgroup", "br");
      DataNode dataNode0 = DataNode.createFromEncoded("=MK=TRgQi\"Y}<|r2", "optgroup");
      document0.setParentNode(dataNode0);
      // Undeclared exception!
      try { 
        document0.append("=MK=TRgQi\"Y}<|r2");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("m!LWI/qx{7O+b{", "class");
      Element element0 = document0.appendElement("|KY&mx|o*&bccR");
      // Undeclared exception!
      try { 
        element0.after((Node) element0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%c3;FOWe6$a5c[E:", "%c3;FOWe6$a5c[E:");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.after("`");
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("6}CkVmCFZV", "6}CkVmCFZV");
      Tag tag0 = Tag.valueOf("Y7Ga]A_}k6{D/");
      CDataNode cDataNode0 = new CDataNode("Y7Ga]A_}k6{D/");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "6}CkVmCFZV", attributes0);
      document0.setParentNode(formElement0);
      // Undeclared exception!
      try { 
        document0.after("K~4 3=~',$R");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput(" -f ", "org.j.oup.nodes.DUcumrnt$Qui+sModf");
      // Undeclared exception!
      try { 
        document0.addClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      Tag tag0 = Tag.valueOf("K)#nk<#rAsghQ=Fxw;6", parseSettings0);
      Element element0 = null;
      try {
        element0 = new Element(tag0, (String) null, attributes0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      Element element0 = null;
      try {
        element0 = new Element((Tag) null, "B6E@O@F0*6q?2r");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Element element0 = null;
      try {
        element0 = new Element("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Document document0 = Parser.parse("pPz vXU|z8*T1", "");
      Element element0 = document0.head();
      element0.html((Appendable) null);
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("== )>f+VL", "T(");
      document0.toggleClass("T(");
      Element element0 = document0.toggleClass("== )>f+VL");
      element0.addClass("T(");
      element0.hasClass("6UPCbm");
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Document document0 = new Document("}nt:xT'A<bC%ZK3zH");
      document0.toggleClass("org.jsoup.nodes.Element$1");
      Element element0 = document0.toggleClass("\n * ");
      element0.hasClass("org.jsoup.nodes.Element$1");
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("== )>f+VL", "T(");
      Element element0 = document0.toggleClass("T(");
      element0.hasClass("6UPCbm");
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%c3;FOWe6$a5c[E:", "org.jsoup.select.CombiningEvaluator$Or");
      document0.hasClass("BV]r:Z7'F!v9LVdZ$");
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      Document document0 = new Document("}nt:xT'A<bC%ZK3zH");
      Element element0 = document0.toggleClass("]j");
      element0.hasClass("org.jsoup.select.CombiningEvaluator$Or");
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Document document0 = Parser.parse("prompt", "prompt");
      Element element0 = document0.toggleClass("prompt");
      element0.toggleClass("<0");
      document0.hasClass("Insert position out of bounds.");
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      Charset charset0 = Charset.defaultCharset();
      Set<String> set0 = charset0.aliases();
      document0.classNames(set0);
      document0.classNames();
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      Document document0 = new Document("font");
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      document0.classNames((Set<String>) linkedHashSet0);
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("%c3;FOWe60)a5c[Ed:", "%c3;FOWe60)a5c[Ed:");
      document0.elementSiblingIndex();
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      Element element0 = new Element("br");
      Element element1 = element0.prependElement("G*0k]6=<n=kB0Yw");
      element1.elementSiblingIndex();
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      Document document0 = new Document("%c3;FOWe6$a5c[E:");
      document0.normalise();
      Element element0 = document0.appendElement("]j");
      Element element1 = element0.previousElementSibling();
      element1.prependChild(element0);
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Document document0 = Document.createShell("%c3;FOWe6$Ma5c[E:");
      Element element0 = document0.head();
      element0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%c3;FOWe6$a5c[E:", "%c3;FOWe6$a5c[E:");
      document0.setParentNode(document0);
      document0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%c3;FOWe6$a5c[E:", "%c3;FOWe6$a5c[E:");
      Element element0 = document0.appendElement(".");
      element0.cssSelector();
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%c3;FOWe6$a5c[E:", "%c3;FOWe6$a5c[E:");
      Element element0 = document0.body();
      element0.html("fLOGXF");
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("html", "html");
      document0.className();
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("r}x", "r}x");
      Pattern pattern0 = Pattern.compile("r}x", 1261);
      document0.getElementsMatchingOwnText(pattern0);
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      Document document0 = Document.createShell(":%-xB:y{OmW");
      document0.isBlock();
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      Document document0 = Document.createShell("%c3;FOWe6$Ma5c[E:");
      document0.empty();
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      Document document0 = new Document("wEt4~(U%icF4");
      document0.baseUri();
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("kbd", "kbd");
      Pattern pattern0 = Pattern.compile("{LncKDsXu&Htgd'@e", 3187);
      document0.getElementsMatchingText(pattern0);
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("%c3;FOWe60)a5c[Ed:", "%c3;FOWe60)a5c[Ed:");
      Evaluator.AllElements evaluator_AllElements0 = new Evaluator.AllElements();
      document0.is((Evaluator) evaluator_AllElements0);
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%c3;FOWe6$a5c[E:", "org.jsoup.select.CombiningEvaluator$Or");
      Pattern pattern0 = Pattern.compile("%c3;FOWe6$a5c[E:", 1626);
      document0.getElementsByAttributeValueMatching("%c3;FOWe6$a5c[E:", pattern0);
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%c3;FOWx6$a5c4E:", "%c3;FOWx6$a5c4E:");
      // Undeclared exception!
      try { 
        document0.select("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%c3;FOWe6$a5c[E:", "%c3;FOWe6$a5c[E:");
      document0.text();
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      Document document0 = Document.createShell("");
      document0.id();
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("-TdDU", "-TdDU");
      Element element0 = document0.body();
      element0.doClone(document0);
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("br", "Cr");
      Element element0 = document0.appendElement("br");
      element0.outerHtml();
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      Document document0 = Document.createShell("s");
      PipedWriter pipedWriter0 = new PipedWriter();
      // Undeclared exception!
      try { 
        document0.html(pipedWriter0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Pipe not connected
         //
         verifyException("org.jsoup.nodes.Node$OuterHtmlVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      Element element0 = new Element("br");
      element0.appendElement("br");
      element0.outerHtml();
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%c3;FOWe6$a5c[E:", "%c3;FOWe6$a5c[E:");
      document0.outerHtml();
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      Document document0 = Document.createShell("*_tor)>z}ufsfa$obs");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document_OutputSettings0.prettyPrint(false);
      Document document1 = document0.outputSettings(document_OutputSettings0);
      document1.html();
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(":prev*%s", "H@");
      document0.val("%!H1:#LE*qH<%");
      document0.val();
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("textarea", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("%c3;FOWx6$a5c4E:");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "isindex", attributes0);
      formElement0.val();
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("br", "br");
      Element element0 = document0.toggleClass("br");
      element0.toggleClass("br");
      document0.toggleClass("br");
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("== )>f+]L", "== )>f+]L");
      document0.toggleClass("T(");
      document0.addClass("T(");
      Element element0 = document0.toggleClass("== )>f+]L");
      element0.getElementsByClass("T(");
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput(" -f ", "org.j.oup.nodes.DUcumrnt$Qui+sModf");
      document0.data();
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      Document document0 = Parser.parse("7", "7");
      Element element0 = document0.prepend("<html>\n <head></head>\n <body>\n  7\n </body>\n</html>");
      element0.hasText();
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%c3;FOWe6$a5c[E:", "%c3;FOWe6$a5c[E:");
      document0.hasText();
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      Document document0 = Parser.parse("<!DOCTYPE", "a?wjw9|d");
      document0.hasText();
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      Document document0 = Parser.parse("C>", "C>");
      document0.setParentNode(document0);
      document0.getElementsMatchingOwnText("C>");
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode((String) null);
      Element.preserveWhitespace(cDataNode0);
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      Document document0 = new Document("br");
      document0.appendElement("br");
      document0.appendElement("br");
      document0.getElementsMatchingOwnText("br");
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      Document document0 = Parser.parse("7", "");
      CDataNode cDataNode0 = new CDataNode("ouke0mC3h^&e");
      Element element0 = document0.appendChild(cDataNode0);
      element0.getElementsContainingOwnText("ouke0mC3h^&e");
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("bBY:L", "v:)v38(");
      Element element0 = document0.appendElement("textarea");
      document0.setParentNode(element0);
      document0.getElementsMatchingText(" T^rTn5ltS");
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("X", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("8X%N3`VuePFB");
      Attributes attributes0 = cDataNode0.attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "ScriptDataDoubleEscapedDash", attributes0);
      Comment comment0 = new Comment("8X%N3`VuePFB", "ScriptDataDoubleEscapedDash");
      pseudoTextElement0.appendChild(comment0);
      pseudoTextElement0.ownText();
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%c3;FOWe6$a5c[E:", "%c3;FOWe6$a5c[E:");
      Element element0 = document0.appendElement("Cr");
      element0.before("Cr");
      document0.getElementsMatchingText("Cr");
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      Document document0 = Parser.parse("7", "<");
      Element element0 = document0.prepend("<html>\n <head></head>\n <body>\n  7\n </body>\n</html>");
      element0.getElementsMatchingText("nav");
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("br", "Cr");
      document0.appendElement("br");
      document0.getElementsMatchingText("br");
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%c3;FOWe6$a5c[E:", "%c3;FOWe6$a5c[E:");
      Element element0 = document0.body();
      element0.before("Cr");
      document0.getElementsMatchingText("Cr");
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      Document document0 = Parser.parse("<!DOCTYPE", "a?wjw9|d");
      document0.getElementsMatchingText("a?wjw9|d");
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      Document document0 = Parser.parse("pPz vXU|z8*T1", "");
      document0.getElementById("jc7F;.&*2IK");
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%c3;FOWe6$a5c[E:", "%c3;FOWe6$a5c[E:");
      Element element0 = document0.appendElement("Cr");
      element0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%c3;FOWe6$a5c[E:", "%c3;FOWe6$a5c[E:");
      document0.setParentNode(document0);
      document0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      Element element0 = new Element("br");
      element0.prependElement("G*0k]6=<n=kB0Yw");
      Element element1 = element0.appendElement("br");
      element1.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("@hF;E", "org.jsoup.safety.Cleaner$CleaningVisitor");
      Element element0 = document0.prependElement("html");
      element0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      Document document0 = Document.createShell("lasefont");
      Element element0 = document0.appendElement("lasefont");
      element0.previousElementSiblings();
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      Document document0 = Document.createShell("class");
      document0.setParentNode(document0);
      document0.previousElementSiblings();
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      Document document0 = Parser.parse("pPz vXU|z8*T1", "");
      document0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("%c3;FOWe60)a5c[Ed:", "%c3;FOWe60)a5c[Ed:");
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration("%c3;FOWe60)a5c[Ed:", false);
      document0.setParentNode(xmlDeclaration0);
      // Undeclared exception!
      try { 
        document0.previousElementSiblings();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      Document document0 = Parser.parse("pPz vXU|z8*T1", "");
      Element element0 = document0.head();
      Elements elements0 = element0.nextElementSiblings();
      assertFalse(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("samp", "samp");
      document0.nextElementSibling();
      assertEquals("samp", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      Document document0 = Document.createShell("%_2^l[G_rnxFI");
      Element element0 = document0.head();
      Element element1 = element0.nextElementSibling();
      assertEquals(1, element1.siblingIndex());
      assertEquals("%_2^l[G_rnxFI", element1.baseUri());
      assertNotNull(element1);
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("1<L;ondp,", "1<L;ondp,");
      document0.siblingElements();
      assertEquals(1, document0.childNodeSize());
      assertEquals("1<L;ondp,", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.select.CombiningEvaluator$Or");
      Element element0 = document0.prependElement("address");
      element0.siblingElements();
      assertEquals(2, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      Document document0 = Parser.parse("pr)X>mpt", "pr)X>mpt");
      Element element0 = document0.body();
      element0.after("pr)X>mpt");
      String string0 = element0.cssSelector();
      assertEquals("pr)X>mpt", element0.baseUri());
      assertEquals("html > body:nth-child(2)", string0);
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(":prev*%s", ":@");
      Element element0 = document0.toggleClass("%!H1:#LE*qH<%");
      element0.cssSelector();
      assertEquals(":@", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      Document document0 = Parser.parse("X", ",1V<<[Af");
      Node[] nodeArray0 = new Node[4];
      // Undeclared exception!
      try { 
        document0.insertChildren(32, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      Document document0 = Parser.parse("pPz vXU|z8*T1", "pPz vXU|z8*T1");
      Node[] nodeArray0 = new Node[24];
      // Undeclared exception!
      try { 
        document0.insertChildren((-418), nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("Cr", "Cr");
      Node[] nodeArray0 = new Node[0];
      Element element0 = document0.insertChildren(1, nodeArray0);
      assertEquals("Cr", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%c3;FOWe6$a5c[E:", "%c3;FOWe6$a5c[E:");
      Elements elements0 = document0.getElementsContainingText((String) null);
      // Undeclared exception!
      try { 
        document0.insertChildren(31, (Collection<? extends Node>) elements0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      Document document0 = Parser.parse("7", "");
      LinkedList<Element> linkedList0 = new LinkedList<Element>();
      // Undeclared exception!
      try { 
        document0.insertChildren((-1191), (Collection<? extends Node>) linkedList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("html", "html");
      List<DataNode> list0 = document0.dataNodes();
      assertEquals(1, document0.childNodeSize());
      assertEquals("html", document0.baseUri());
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      Document document0 = Parser.parse("7", "");
      Element element0 = document0.prepend("<html>\n <head></head>\n <body>\n  7\n </body>\n</html>");
      List<TextNode> list0 = element0.textNodes();
      assertEquals(5, document0.childNodeSize());
      assertEquals(4, list0.size());
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput(" ", " ");
      Elements elements0 = document0.children();
      assertEquals(" ", document0.baseUri());
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("k2MZkyw|", "ru:Ki}k8RwI:1ee");
      Elements elements0 = document0.getElementsByIndexGreaterThan((-1570));
      assertEquals("ru:Ki}k8RwI:1ee", document0.baseUri());
      assertEquals(4, elements0.size());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("html", "html");
      Element element0 = document0.selectFirst("html");
      assertEquals("html", element0.baseUri());
      assertEquals(2, element0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      Document document0 = new Document("}nt:xT'A<bC%ZK3zH");
      document0.getAllElements();
      assertEquals("}nt:xT'A<bC%ZK3zH", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%c3;FOWe6$a5c[E:", "%c3;FOWe6$a5c[E:");
      // Undeclared exception!
      try { 
        document0.before("Cr");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      Tag tag0 = Tag.valueOf(":%s(%dn)");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, ":%s(%dn)", attributes0);
      formElement0.getElementsByAttribute("textarea");
      assertEquals(":%s(%dn)", formElement0.baseUri());
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput(" ", " ");
      Elements elements0 = document0.getElementsByAttributeValueNot("h4", " ");
      assertTrue(elements0.isEmpty());
      assertEquals(" ", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput(" ", " ");
      Element element0 = document0.clone();
      assertEquals(" ", element0.baseUri());
      assertNotSame(element0, document0);
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      Document document0 = Document.createShell("a.TiK[N3");
      // Undeclared exception!
      try { 
        document0.after((Node) document0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("pPz vXU|z8*T1", "");
      Elements elements0 = document0.getElementsByAttributeValueContaining(":nth-child(%d)", ":nth-child(%d)");
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%c3;FOWe6$a5c[E:", "%c3;FOWe6$a5c[E:");
      Elements elements0 = document0.getElementsContainingText("xhtml");
      assertEquals("%c3;FOWe6$a5c[E:", document0.baseUri());
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      Document document0 = Document.createShell("-TdDU");
      document0.getElementsByAttributeValueEnding("-TdDU", "java.lang.string@0000000015 br");
      assertEquals("-TdDU", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      Element element0 = new Element("yV");
      boolean boolean0 = element0.is("yV");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.select.CombiningEvaluator$And", "~z7cJ6UZl8,d8g");
      document0.getElementsByAttributeValueMatching("org.jsoup.select.CombiningEvaluator$And", "br");
      assertEquals("~z7cJ6UZl8,d8g", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("1<L;ondp,", "1<L;ondp,");
      Elements elements0 = document0.getElementsByIndexEquals(0);
      assertEquals(3, elements0.size());
      assertEquals("1<L;ondp,", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      Document document0 = new Document("br");
      document0.getElementsByAttributeStarting("br");
      assertEquals("br", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Insert position out of bounds.", "Insert position out of bounds.");
      Elements elements0 = document0.getElementsByIndexLessThan(2863);
      assertEquals(1, document0.childNodeSize());
      assertEquals("Insert position out of bounds.", document0.baseUri());
      assertEquals(3, elements0.size());
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      Document document0 = Document.createShell("-TdDU");
      // Undeclared exception!
      try { 
        document0.after("    ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%c3;FOWe6$a5c[E:", "%c3;FOWe6$a5c[E:");
      Element element0 = document0.body();
      String string0 = element0.cssSelector();
      assertEquals("html > body", string0);
      assertEquals("%c3;FOWe6$a5c[E:", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      Document document0 = Parser.parse("pPz vXU|z8*T1", "pPz vXU|z8*T1");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueStarting("", "};rh:hpIhI.#D");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("kbd", "kbd");
      document0.getElementsByAttributeValue(">v%\" ?t!zB", "$|");
      assertEquals("kbd", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%cC;FOWe6$Ma5c[E:", "%cC;FOWe6$Ma5c[E:");
      Element element0 = document0.attr("%cC;FOWe6$Ma5c[E:", false);
      assertEquals("%cC;FOWe6$Ma5c[E:", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("k2MZkyw|", "ru:Ki}k8RwI:1ee");
      document0.wholeText();
      assertEquals(1, document0.childNodeSize());
      assertEquals("ru:Ki}k8RwI:1ee", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      Document document0 = Document.createShell("K6}C7VOcmCFZ-");
      TextNode textNode0 = TextNode.createFromEncoded("K6}C7VOcmCFZ-");
      // Undeclared exception!
      try { 
        document0.before((Node) textNode0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("br", "br");
      document0.dataset();
      assertEquals(1, document0.childNodeSize());
      assertEquals("br", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      Tag tag0 = Tag.valueOf("textarea");
      FormElement formElement0 = new FormElement(tag0, "[^%s]", (Attributes) null);
      formElement0.val("a?wjw9|d");
      assertEquals(1, formElement0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%c3;FOWe6$a5c[E:", "%c3;FOWe6$a5c[E:");
      Element element0 = document0.prependText("uAu>5pg5E1+>XEKV,*");
      assertEquals("%c3;FOWe6$a5c[E:", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%c3;FOWe6$a5c[E:", "%c3;FOWe6$a5c[E:");
      assertEquals(1, document0.childNodeSize());
      
      Element element0 = document0.child(0);
      assertNotNull(element0);
      assertEquals("%c3;FOWe6$a5c[E:", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test342()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("%c3;FOWe60)a5c[Ed:", "%c3;FOWe60)a5c[Ed:");
      document0.previousElementSiblings();
      assertEquals(1, document0.childNodeSize());
      assertEquals("%c3;FOWe60)a5c[Ed:", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test343()  throws Throwable  {
      Document document0 = Parser.parse("java.lang.string@0000000015 1\n * ", "java.lang.string@0000000015 1\n * ");
      document0.appendText(" > ");
      document0.getElementsMatchingText(" > ");
      assertEquals(2, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test344()  throws Throwable  {
      Document document0 = Parser.parse("vIalue", "vIalue");
      // Undeclared exception!
      try { 
        document0.wrap("oYqOZ$WI;7h`e)?J~");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test345()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%c3;FOWx6$a5c4E:", "%c3;FOWx6$a5c4E:");
      Elements elements0 = document0.nextElementSiblings();
      document0.insertChildren((-1), (Collection<? extends Node>) elements0);
  }
}
