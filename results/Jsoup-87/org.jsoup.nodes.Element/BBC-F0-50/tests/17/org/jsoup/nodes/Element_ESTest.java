/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 18 03:10:14 GMT 2021
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.CharArrayWriter;
import java.io.IOException;
import java.io.PipedWriter;
import java.io.Reader;
import java.io.StringReader;
import java.io.StringWriter;
import java.nio.BufferOverflowException;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.ReadOnlyBufferException;
import java.nio.charset.Charset;
import java.util.Collection;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import java.util.UnknownFormatConversionException;
import java.util.regex.Pattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.Comment;
import org.jsoup.nodes.DataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.DocumentType;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.nodes.PseudoTextElement;
import org.jsoup.nodes.TextNode;
import org.jsoup.nodes.XmlDeclaration;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Parser;
import org.jsoup.parser.Tag;
import org.jsoup.select.Elements;
import org.jsoup.select.Evaluator;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Element_ESTest extends Element_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(".tOOB}", ".tOOB}");
      Element element0 = document0.addClass(".tOOB}");
      Element element1 = document0.addClass(".tOOB}");
      element1.addClass("6,r(2ixBwf.7rR67'%r");
      element0.getElementsByClass("PO4N8q>+Io.");
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueMatching("br", ".)# bC**LGGQfv,VZT");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pattern syntax error: .)# bC**LGGQfv,VZT
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      Document document1 = Parser.parse("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      document0.appendChild(document1);
      document1.after((Node) document0);
      document0.previousElementSiblings();
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      Element element0 = document0.head();
      Element element1 = document0.doClone(element0);
      element1.nextElementSiblings();
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Document document0 = Document.createShell("");
      List<DataNode> list0 = document0.dataNodes();
      document0.insertChildren(0, (Collection<? extends Node>) list0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Element element0 = new Element("value");
      StringWriter stringWriter0 = new StringWriter();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      element0.outerHtmlTail(stringWriter0, (-1021), document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Document document0 = Parser.parse(",]v87zeM3'S", ",]v87zeM3'S");
      document0.nodelistChanged();
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("I<rYuXAv7", "I<rYuXAv7");
      document0.doSetBaseUri("");
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      Element element0 = document0.appendElement("br");
      element0.wrap("obLS$iE^~.eax!Ev");
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      Element element0 = document0.head();
      element0.wrap("q.?rt{;h_'_");
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("CommentStartDash", "T3KDstk2=dJFD?_3Po");
      Element element0 = document0.body();
      element0.wrap("CommentStartDash");
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput(":nth-child(%d)", "M9p ti+`h5BrFp~}'x");
      Element element0 = document0.createElement("m");
      element0.wholeText();
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Document document0 = new Document("");
      document0.setSiblingIndex((-1196));
      document0.val("'E8:>");
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Document document0 = Document.createShell("1f");
      Element element0 = document0.body();
      element0.val("#");
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("5uJ)33tQ)@ 7|M]", "5uJ)33tQ)@ 7|M]");
      Element element0 = document0.text("!^TtZf^3(;u}x;o{{B");
      element0.siblingIndex = (-917);
      document0.toggleClass("!^TtZf^3(;u}x;o{{B");
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Document document0 = Parser.parse("Em]9 #", "1f");
      Element element0 = document0.body();
      element0.toggleClass("1f");
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("m|Ls", "m|Ls");
      CDataNode cDataNode0 = new CDataNode("$MIQVj5NW6sNVKy");
      document0.setParentNode(cDataNode0);
      document0.toggleClass("m|Ls");
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Document document0 = new Document("gYdJj=%EV1&8;W'=uv");
      document0.toggleClass("async");
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Document document0 = Document.createShell("declare");
      Element element0 = document0.body();
      element0.text(")9(");
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Document document0 = new Document("");
      document0.text();
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Document document0 = Document.createShell("AfterBody");
      Document document1 = document0.ownerDocument();
      document1.siblingIndex = (-1010136971);
      document0.tagName("Kh@)YvU2");
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Document document0 = Document.createShell("1f");
      Element element0 = document0.appendElement("1f");
      element0.tagName("[b]");
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      document0.tagName();
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("MarkupDeclarationOpen", "CommentStartDash");
      Element element0 = document0.tagName("textarea");
      element0.tag();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Document document0 = Parser.parse("cR", "cR");
      Element element0 = document0.appendElement("br");
      element0.tag();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Document document0 = Parser.parse("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      Element element0 = document0.body();
      element0.tag();
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Document document0 = Parser.parse("cR", "cR");
      document0.tag();
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Document document0 = Parser.parse("1f", "1f");
      Element element0 = document0.body();
      element0.shallowClone();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("H4", "H4");
      document0.tagName("H4");
      document0.selectFirst("H4");
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Document document0 = Document.createShell("1f");
      document0.appendElement("1f");
      document0.selectFirst("1f");
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Document document0 = Parser.parse("MarkupDeclarationOpen", "MarkupDeclarationOpen");
      document0.select("MarkupDeclarationOpen");
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Document document0 = Document.createShell("1f");
      Element element0 = document0.appendElement("1f");
      element0.select("1f");
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("1f", "1f");
      Element element0 = document0.body();
      element0.removeClass("1f");
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Document document0 = Parser.parse("1f", "1f");
      document0.removeClass("");
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      document0.appendChild(document0);
      document0.previousElementSiblings();
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Document document0 = Parser.parse("~;>5W9^Vpq;.kA3ppw", "~;>5W9^Vpq;.kA3ppw");
      Element element0 = document0.body();
      element0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Document document0 = Document.createShell("~;>5W9^Vpq;.kA3ppw");
      Element element0 = document0.body();
      element0.prependText("TreeBuilder{currentToken=");
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(";I_VZe\"^`DV7nyNu", ";I_VZe\"^`DV7nyNu");
      document0.prependText(";I_VZe\"^`DV7nyNu");
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Document document0 = Document.createShell("blockquote");
      document0.prependElement("blockquote");
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("1f", "1f");
      Element element0 = document0.body();
      element0.prependChild(document0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      StringReader stringReader0 = new StringReader("org.jsoup.parser.Token$Character");
      Document document0 = parser0.parseInput((Reader) stringReader0, "org.jsoup.parser.Token$Character");
      document0.siblingIndex = (-1436010313);
      document0.prepend("52'*,um#5eyxu[(");
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("*T- F$:X", "*T- F$:X");
      Element element0 = document0.body();
      element0.prepend("*T- F$:X");
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Document document0 = new Document("RS");
      document0.prepend("");
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(";I_VZe\"^`DV7nyNu", ";I_VZe\"^`DV7nyNu");
      document0.parents();
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      Element element0 = document0.head();
      element0.parents();
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Document document0 = new Document("CmsWZQWuX@=r");
      Element element0 = document0.appendElement("Lr5('R&'h");
      element0.parent();
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Document document0 = Document.createShell("\"Hw");
      Element element0 = document0.body();
      element0.reparentChild(document0);
      document0.parent();
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJY=%EV1&8;W'uv", "gYdJY=%EV1&8;W'uv");
      document0.html("gYdJY=%EV1&8;W'uv");
      document0.ownText();
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Document document0 = new Document("");
      document0.nodeName();
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      Element element0 = document0.head();
      Element element1 = document0.head();
      element0.after("dt");
      element1.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Document document0 = Document.createShell("m-$i^1>K");
      Element element0 = document0.appendElement("IE0$X");
      element0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      Element element0 = document0.head();
      element0.isBlock();
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Document document0 = Document.createShell("{|?H*nm");
      Evaluator.AllElements evaluator_AllElements0 = new Evaluator.AllElements();
      document0.is((Evaluator) evaluator_AllElements0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("*T- F$:X", "*T- F$:X");
      Evaluator.IsOnlyOfType evaluator_IsOnlyOfType0 = new Evaluator.IsOnlyOfType();
      document0.is((Evaluator) evaluator_IsOnlyOfType0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Document document0 = Document.createShell("1f");
      Element element0 = document0.appendElement("1f");
      element0.is("1f");
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Document document0 = Document.createShell("bdo");
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) document0;
      Document document1 = Parser.parseBodyFragmentRelaxed("org.jsoup.nodes.Element$2", "org.jsoup.select.Evaluator$IsLastChild");
      document1.insertChildren(1, nodeArray0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("SUS%q", "SUS%q");
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) document0;
      document0.insertChildren((-1), nodeArray0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Document document0 = Document.createShell("1f");
      Elements elements0 = document0.getElementsMatchingText("");
      Element element0 = document0.head();
      element0.insertChildren(0, (Collection<? extends Node>) elements0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      Element element0 = document0.head();
      Elements elements0 = document0.getElementsMatchingText("ohLpU='amd");
      element0.insertChildren(0, (Collection<? extends Node>) elements0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      document0.html();
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Document document0 = new Document(" ");
      document0.html();
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      document0.getElementsByAttributeStarting("gYdJj=%EV1&8;W'=uv");
      document0.hasAttributes();
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Document document0 = new Document("");
      document0.hasAttributes();
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("CommentStartDash", "CharacterReferenceInData");
      Pattern pattern0 = Pattern.compile("CZCmath", 27);
      document0.getElementsMatchingText(pattern0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Document document0 = new Document("");
      Pattern pattern0 = Pattern.compile(":containsOwn(%s)", 2172);
      document0.getElementsMatchingOwnText(pattern0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Document document0 = new Document("");
      Pattern pattern0 = Pattern.compile("", 31);
      document0.getElementsMatchingOwnText(pattern0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=@v", "gYdJj=%EV1&8;W'=@v");
      document0.getElementsMatchingOwnText("gYdJj=%EV1&8;W'=@v");
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      Element element0 = document0.appendElement("gYdJj=%EV1&8;W'=uv");
      element0.getElementsContainingText("gYdJj=%EV1&8;W'=uv");
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Document document0 = new Document("RS");
      document0.getElementsByTag("java.lang.string@0000000076");
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Document document0 = Document.createShell("1f");
      document0.appendElement("1f");
      document0.getElementsByTag("1f");
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      document0.getElementsByIndexLessThan((-2255));
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      document0.getElementsByIndexGreaterThan((-1797));
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Document document0 = new Document("");
      document0.getElementsByIndexEquals(0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Document document0 = Parser.parse("f", "f");
      document0.getElementsByAttributeValueNot("f", "f");
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      document0.getElementsByAttributeValue("`Nu1(iG$;x:", "j");
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("naframed", parseSettings0);
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("java.lang.string@0000000077", true);
      FormElement formElement0 = new FormElement(tag0, "H4", attributes1);
      formElement0.getElementsByAttributeStarting("java.lang.string@0000000077");
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Document document0 = Document.createShell("~;>5W9^Vpq;.kA3ppw");
      document0.getElementsByAttribute("1gH';f'QQM");
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Document document0 = new Document("");
      Element element0 = document0.val("'E8:>");
      element0.getElementsByAttribute("value");
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      document0.appendChild(document0);
      document0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Document document0 = Parser.parse("f", "f");
      Element element0 = document0.body();
      element0.empty();
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Document document0 = Document.createShell("AfterBody");
      Document document1 = document0.ownerDocument();
      document1.siblingIndex = (-1010136971);
      document0.doClone(document1);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("?XB[o!", "?XB[o!");
      Element element0 = document0.body();
      element0.doClone(element0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Element element0 = new Element("*T- F$:X");
      element0.doClone((Node) null);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      Element element0 = document0.body();
      element0.clone();
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Tag tag0 = Tag.valueOf("mF L_t6Lm<yiN");
      CDataNode cDataNode0 = new CDataNode("br");
      Attributes attributes0 = cDataNode0.attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "mF L_t6Lm<yiN", attributes0);
      pseudoTextElement0.clone();
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      Element element0 = document0.body();
      Locale locale0 = Locale.FRENCH;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      element0.classNames(set0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Document document0 = new Document("");
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      document0.classNames((Set<String>) linkedHashSet0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("", "W5_r");
      document0.addClass("html");
      document0.classNames();
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("1", "1");
      Element element0 = document0.addClass("1");
      element0.className();
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("", "W5_r");
      document0.children();
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("action", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "!'`3O@W73R18SjD6X.", (Attributes) null);
      formElement0.childNodeSize();
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("CommentStartDash", "T3KDstk2=dJFD?_3Po");
      document0.childNodeSize();
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Document document0 = Document.createShell("cR");
      document0.child(0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Document document0 = Document.createShell("nohref");
      document0.prependChild(document0);
      document0.before((Node) document0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      Element element0 = document0.head();
      element0.before((Node) element0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Document document0 = Parser.parse("Em]9 #", "1f");
      Element element0 = document0.body();
      element0.before((Node) document0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      Document document1 = Parser.parse("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      document1.reparentChild(document0);
      document0.before("");
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Document document0 = Document.createShell("1f");
      document0.baseUri();
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Document document0 = new Document("");
      document0.baseUri();
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Document document0 = Document.createShell("gYdJj=%EV1&8;W)'=uv");
      document0.addClass("gYdJj=%EV1&8;W)'=uv");
      document0.attributes();
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Document document0 = Document.createShell("AfterBody");
      Document document1 = document0.ownerDocument();
      document1.siblingIndex = (-1010136971);
      document1.attr("Kh@)YvU2", false);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Document document0 = Parser.parse("~;>5W9^Vpq;.kA3ppw", "~;>5W9^Vpq;.kA3ppw");
      Element element0 = document0.body();
      element0.attr("F2KUe", true);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Tag tag0 = Tag.valueOf("r.#zIc5fT1.ghg~");
      Element element0 = new Element(tag0, "org.jsoup.nodes.TextNode");
      element0.attr("r.#zIc5fT1.ghg~", false);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Document document0 = Parser.parse("gYdJj=%EV1&8;W'=@v", "gYdJj=%EV1&8;W'=@v");
      Element element0 = document0.body();
      element0.attr(":gt(", "gYdJj=%EV1&8;W'=@v");
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      Document document1 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      document0.appendTo(document1);
      document0.attr("`>D$uC1f", "`>D$uC1f");
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("7pKY*Gd\"4e&R", "&0 7-S,|Z2Ds+)r\"");
      document0.attr("7pKY*Gd\"4e&R", "7pKY*Gd\"4e&R");
      document0.getElementsByAttributeValueStarting("7pKY*Gd\"4e&R", "7pKY*Gd\"4e&R");
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      Element element0 = document0.head();
      document0.appendTo(element0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Element", "org.jsoup.nodes.Element");
      Element element0 = document0.body();
      element0.appendTo(document0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      Element element0 = document0.appendElement("gYdJj=%EV1&8;W'=uv");
      element0.appendTo(document0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("limitedQuirks", "cR");
      document0.siblingIndex = (-594);
      document0.appendText("limitedQuirks");
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Document document0 = Document.createShell("{|?H*nm");
      Element element0 = document0.body();
      element0.appendText("B_SyPvIW");
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      Element element0 = document0.doClone(document0);
      element0.appendText("ohLpU='amd");
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("H4", "H4");
      Element element0 = document0.appendElement("H4");
      element0.before("2-W0nlVTdsL");
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Document document0 = Document.createShell("nohref");
      Element element0 = document0.head();
      element0.append("wxM]>at37d");
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      Element element0 = document0.appendElement("\"4@:J5@)t");
      element0.append("");
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Document document0 = new Document("");
      document0.append("");
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Document document0 = Parser.parse("br", "br");
      Element element0 = document0.body();
      element0.after((Node) document0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Document document0 = Document.createShell("1f");
      Element element0 = document0.appendElement("1f");
      element0.after((Node) document0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      Document document1 = Parser.parse("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      Document document2 = (Document)document1.text("gYdJj=%EV1&8;W'=uv");
      document2.reparentChild(document0);
      document0.after("*T- F$:X");
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=@v", "gYdJj=%EV1&8;W'=@v");
      Element element0 = document0.appendElement("aM");
      element0.after(">{$b`=q+ftgmwtws");
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      document0.setSiblingIndex((-368));
      document0.addClass("textarea");
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Document document0 = Document.createShell("(oR|%lj.w0W|'");
      Element element0 = document0.head();
      element0.addClass("org.jsoup.nodes.BooleanAttribute");
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Document document0 = Parser.parse("j", "1S$eeD>Df^]Ekmv{&n");
      Element element0 = document0.appendElement("ydjj=%ev1&8;w'=uv");
      element0.addClass("KCY/S!/c/OQl");
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Document document0 = Parser.parse("Em]9 #", "1f");
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) document0;
      document0.addChildren(nodeArray0);
      // Undeclared exception!
      document0.wrap("^YeVG_bapR");
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      // Undeclared exception!
      try { 
        document0.wrap("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("j", "j");
      CDataNode cDataNode0 = new CDataNode("I'e\"[w)xPu{5U;5y;X");
      document0.setParentNode(cDataNode0);
      // Undeclared exception!
      try { 
        document0.wrap("O4Y(hN");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Document document0 = new Document("gYdJj=%EV1&8;W'=uv");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.val((String) null);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      String[] stringArray0 = new String[6];
      attributes0.keys = stringArray0;
      Tag tag0 = Tag.valueOf("P");
      FormElement formElement0 = new FormElement(tag0, "#comment", attributes0);
      // Undeclared exception!
      try { 
        formElement0.val("?NXcFP~3L*G-!M");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Document document0 = Document.createShell("1f");
      // Undeclared exception!
      try { 
        document0.toggleClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Document document0 = new Document(" ");
      // Undeclared exception!
      try { 
        document0.text(" ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Document document0 = Parser.parse("gYgJj=%EV1&8;W'=uv", "gYgJj=%EV1&8;W'=uv");
      // Undeclared exception!
      try { 
        document0.text((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("zV<\"VP", "zV<\"VP");
      Comment comment0 = new Comment("jl3&/", "zV<\"VP");
      document0.setParentNode(comment0);
      // Undeclared exception!
      try { 
        document0.text();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("insert position out of bounds.", "insert position out of bounds.");
      document0.siblingIndex = (-920);
      document0.reparentChild(document0);
      // Undeclared exception!
      try { 
        document0.text();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.tagName("gYdJj=%EV1&8;W'=uv");
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Parser parser1 = parser0.settings((ParseSettings) null);
      Document document0 = parser1.parseInput("H4", "|+p'y[;g7=J2vEU");
      // Undeclared exception!
      try { 
        document0.tagName("e|lz");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.Tag", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      // Undeclared exception!
      try { 
        document0.tagName((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Tag name must not be empty.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      Element element0 = document0.body();
      element0.reparentChild(document0);
      // Undeclared exception!
      try { 
        document0.siblingElements();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Document document0 = Document.createShell("1f");
      // Undeclared exception!
      try { 
        document0.selectFirst(".e?d");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query '.e?d': unexpected token at '?d'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Document document0 = Parser.parse("~;>5W9^Vpq;.kA3ppw", "~;>5W9^Vpq;.kA3ppw");
      // Undeclared exception!
      try { 
        document0.selectFirst("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("}Lsp+VrLq3ggp5", parseSettings0);
      Element element0 = new Element(tag0, "O:<h>vGnb,U]0YM(");
      // Undeclared exception!
      try { 
        element0.select("}Lsp+VrLq3ggp5");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query '}Lsp+VrLq3ggp5': unexpected token at '}Lsp+VrLq3ggp5'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      // Undeclared exception!
      try { 
        document0.select((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      // Undeclared exception!
      try { 
        document0.removeClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Document document0 = new Document("Tag name must not be empty.");
      document0.prependChild(document0);
      // Undeclared exception!
      document0.prependElement("E8:>");
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("Gq/&|r9S?o", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "l34SjlC6g$<u)v_j", attributes0);
      // Undeclared exception!
      try { 
        formElement0.prependElement((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Document document0 = Document.createShell("java.lang.string@0000000077");
      Element element0 = document0.addClass("java.lang.string@0000000077");
      List<Node> list0 = Parser.parseXmlFragment("java.lang.string@0000000077", "java.lang.string@0000000077");
      element0.childNodes = list0;
      // Undeclared exception!
      try { 
        element0.prependChild(element0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableList", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Document document0 = Parser.parse("1f", "1f");
      Element element0 = document0.body();
      document0.reparentChild(element0);
      // Undeclared exception!
      try { 
        document0.prependChild(element0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      // Undeclared exception!
      try { 
        document0.prependChild((Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Document document0 = Document.createShell("nohref");
      Document document1 = Parser.parseBodyFragment("nohref", "G;7IMTy'emC");
      document0.prependChild(document1);
      document1.replaceWith(document0);
      // Undeclared exception!
      document0.prepend("~- >Dlde('0y1WNlV5");
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Document document0 = Document.createShell("image");
      List<Node> list0 = document0.childNodes();
      document0.childNodes = list0;
      // Undeclared exception!
      try { 
        document0.prepend("textarea");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableList", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("CommentStartDash", "CharacterReferenceInData");
      // Undeclared exception!
      try { 
        document0.prepend((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("m|Ls", "m|Ls");
      CDataNode cDataNode0 = new CDataNode("$MIQVj5NW6sNVKy");
      document0.setParentNode(cDataNode0);
      // Undeclared exception!
      try { 
        document0.parent();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("H4", "H4");
      MockPrintStream mockPrintStream0 = new MockPrintStream("H4");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      document0.outerHtmlTail(mockPrintStream0, 57343, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("nmxramed");
      FormElement formElement0 = new FormElement(tag0, "nmxramed", attributes0);
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        formElement0.outerHtmlTail(charBuffer0, 2, document_OutputSettings0);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("textarea", "br");
      Charset charset0 = document0.charset();
      ByteBuffer byteBuffer0 = charset0.encode("textarea");
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlTail(charBuffer0, 67, document_OutputSettings0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlTail((Appendable) null, (-1797), document_OutputSettings0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("?XB[o!", "?XB[o!");
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = charset0.encode("class");
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlTail(charBuffer0, (-69), document_OutputSettings0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // width must be > 0
         //
         verifyException("org.jsoup.internal.StringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Document document0 = Parser.parse("-)ywRd3cyYM&p0", "-)ywRd3cyYM&p0");
      PipedWriter pipedWriter0 = new PipedWriter();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      try { 
        document0.outerHtmlTail(pipedWriter0, (-1641235149), document_OutputSettings0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("?vJ(;PpH}wG(9afA", "ascii");
      StringBuilder stringBuilder0 = new StringBuilder(2988);
      StringBuilder stringBuilder1 = stringBuilder0.append(0.0F);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.indentAmount(85);
      // Undeclared exception!
      document0.outerHtmlHead(stringBuilder1, 2194, document_OutputSettings1);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Tag tag0 = Tag.valueOf("naframed");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "naframed", attributes0);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "naframed");
      // Undeclared exception!
      try { 
        formElement0.outerHtmlHead(charBuffer0, 9, document_OutputSettings0);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.StringCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("insert position out of bounds.", "insert position out of bounds.");
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlHead(charBuffer0, 60, document_OutputSettings0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Document document0 = Parser.parse(".fpOB}", ".fpOB}");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlHead((Appendable) null, (-257), document_OutputSettings0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Document document0 = Document.createShell("1f");
      StringBuilder stringBuilder0 = new StringBuilder("1f");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlHead(stringBuilder0, (-1835), document_OutputSettings0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // width must be > 0
         //
         verifyException("org.jsoup.internal.StringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("utf", "utf");
      PipedWriter pipedWriter0 = new PipedWriter();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      try { 
        document0.outerHtmlHead(pipedWriter0, 8249, document_OutputSettings0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("1f", "1f");
      // Undeclared exception!
      try { 
        document0.lastElementSibling();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("WZq6(t]N3o", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "WZq6(t]N3o", attributes0);
      Document document0 = Parser.parse("java.lang.string@0000000069", "WZq6(t]N3o");
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = (Node) formElement0;
      nodeArray0[1] = (Node) document0;
      nodeArray0[2] = (Node) formElement0;
      nodeArray0[3] = (Node) document0;
      nodeArray0[4] = (Node) formElement0;
      nodeArray0[5] = (Node) formElement0;
      nodeArray0[6] = (Node) formElement0;
      nodeArray0[7] = (Node) document0;
      nodeArray0[8] = (Node) document0;
      document0.addChildren(nodeArray0);
      Evaluator.MatchText evaluator_MatchText0 = new Evaluator.MatchText();
      // Undeclared exception!
      document0.is((Evaluator) evaluator_MatchText0);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Document document0 = Parser.parse("wU4g7%O", "wU4g7%O");
      // Undeclared exception!
      try { 
        document0.is("]pG ?&R#bu");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query ']pG ?&R#bu': unexpected token at ']pG ?&R#bu'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.is("ScriptDataEndTagOpen");
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("java.lang.string@0000000077", "9d^y{/< +E]Ne0VCN{");
      // Undeclared exception!
      try { 
        document0.is("hI[%W");
        fail("Expecting exception: UnknownFormatConversionException");
      
      } catch(UnknownFormatConversionException e) {
         //
         // Conversion = 'W'
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Document document0 = Document.createShell("body");
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = (Node) document0;
      nodeArray0[1] = (Node) document0;
      nodeArray0[2] = (Node) document0;
      DocumentType documentType0 = new DocumentType("body", "body", "body", "T");
      documentType0.reparentChild(document0);
      nodeArray0[3] = (Node) documentType0;
      nodeArray0[4] = (Node) document0;
      nodeArray0[5] = (Node) document0;
      // Undeclared exception!
      try { 
        document0.insertChildren((-1), nodeArray0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractList", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Document document0 = Document.createShell("textarea");
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = (Node) document0;
      nodeArray0[1] = (Node) document0;
      nodeArray0[2] = (Node) document0;
      // Undeclared exception!
      try { 
        document0.insertChildren(0, nodeArray0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.html("2umLZ_}2&t");
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Element element0 = new Element("value");
      // Undeclared exception!
      try { 
        element0.html((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Document document0 = Document.createShell("1m");
      PipedWriter pipedWriter0 = new PipedWriter();
      // Undeclared exception!
      try { 
        document0.html(pipedWriter0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Pipe not connected
         //
         verifyException("org.jsoup.nodes.Node$OuterHtmlVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("-eu8);cH", "b12E0M8+=Yr'A");
      document0.appendTo(document0);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      // Undeclared exception!
      document0.html(charArrayWriter0);
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Document document0 = Parser.parse("declare", "jbw~%Hvu;]ADd5O6C'^");
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "declarejbw~%Hvu;]ADd5O6C'^");
      // Undeclared exception!
      try { 
        document0.html(charBuffer0);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.StringCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("_<r5gk?)eUqGixz", "_<r5gk?)eUqGixz");
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      // Undeclared exception!
      try { 
        document0.html(charBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Document document0 = Document.createShell("1f");
      // Undeclared exception!
      try { 
        document0.html((StringWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.html();
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Document document0 = Document.createShell("dvbx\"&[ch%`.|");
      // Undeclared exception!
      try { 
        document0.hasClass((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Document document0 = Parser.parse("_:HgxIvh|\"oJdwAwf1", "GK2*?");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText((Pattern) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$Matches", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Document document0 = new Document("");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Document document0 = new Document("");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText("y[s&WbGa0F&5vB");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pattern syntax error: y[s&WbGa0F&5vB
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("#yoot", "#yoot");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingOwnText((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("bXr", "=0y:W(#@//<G\"j]");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingOwnText("=0y:W(#@//<G\"j]");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pattern syntax error: =0y:W(#@//<G\"j]
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      CDataNode cDataNode0 = new CDataNode("gYdJj=%EV1&8;W'=uv");
      document0.parentNode = (Node) cDataNode0;
      // Undeclared exception!
      try { 
        document0.getElementsMatchingOwnText("Qd");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("H4", "H4");
      Element element0 = document0.appendElement("aM");
      element0.siblingIndex = (-1311);
      // Undeclared exception!
      try { 
        document0.getElementsMatchingOwnText("aM");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Document document0 = Document.createShell("");
      // Undeclared exception!
      try { 
        document0.getElementsByTag((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("5uJ)33tQ)@ 7|M]", "5uJ)33tQ)@ 7|M]");
      Document document1 = (Document)document0.text("!^TtZf^3(;u}x;o{{B");
      document1.siblingIndex = (-917);
      document1.setParentNode(document0);
      // Undeclared exception!
      try { 
        document0.getElementsByIndexLessThan((-1332));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("#root", "textarea");
      Element element0 = document0.body();
      element0.parentNode = (Node) document0;
      // Undeclared exception!
      try { 
        document0.getElementsByIndexGreaterThan(31);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.NodeTraversor", e);
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("class", "8>s]");
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration("8>s]", false);
      Element element0 = document0.doClone(xmlDeclaration0);
      // Undeclared exception!
      try { 
        element0.getElementsByIndexGreaterThan(124);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("E|Lz", "E|Lz");
      CDataNode cDataNode0 = new CDataNode("E|Lz");
      document0.parentNode = (Node) cDataNode0;
      // Undeclared exception!
      try { 
        document0.getElementsByIndexEquals(93);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Document document0 = Document.createShell(".tOOB}");
      document0.childNodes = null;
      // Undeclared exception!
      try { 
        document0.getElementsByClass("p~rqv,:1c 5i");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("#root", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "org.jsoup.select.Evaluator$AllElements", attributes0);
      // Undeclared exception!
      try { 
        formElement0.getElementsByClass("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Document document0 = new Document("");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueStarting((String) null, "body");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Document document0 = Parser.parse("declare", "jbw~%Hvu;]ADd5O6C'^");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueNot("jbw~%Hvu;]ADd5O6C'^", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueMatching("/JYR", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Document document0 = Parser.parse("Em]9 #", "1f");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueEnding("", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Document document0 = Document.createShell("7twH");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueContaining(".sI", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("\"", "\"");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValue("!", "\"");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Document document0 = Document.createShell("nohref");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeStarting("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Document document0 = Parser.parse("iGtY36F9i", "Su2c");
      // Undeclared exception!
      try { 
        document0.getElementById("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Document document0 = Parser.parse("", "z9$T^!*2");
      // Undeclared exception!
      try { 
        document0.firstElementSibling();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("1", "1");
      Element element0 = document0.addClass("1");
      Element element1 = document0.body();
      element1.reparentChild(element0);
      // Undeclared exception!
      try { 
        element0.cssSelector();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query '#root.java.lang.String@0000000052': unexpected token at '@0000000052'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Document document0 = Parser.parse("cR", "cR");
      CDataNode cDataNode0 = new CDataNode("nK!;VtlJTB9u(");
      document0.setParentNode(cDataNode0);
      // Undeclared exception!
      try { 
        document0.cssSelector();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      Document document0 = Document.createShell("\"Hw");
      Element element0 = document0.body();
      element0.reparentChild(document0);
      element0.siblingIndex = (-9);
      // Undeclared exception!
      try { 
        document0.cssSelector();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("*T- F$:X", "*T- F$:X");
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      linkedHashSet0.add((String) null);
      // Undeclared exception!
      try { 
        document0.classNames((Set<String>) linkedHashSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(".tOOB}", ".tOOB}");
      // Undeclared exception!
      try { 
        document0.classNames((Set<String>) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      // Undeclared exception!
      try { 
        document0.child((-677));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Document document0 = new Document("-)ywRd3cyYta1M&p0a");
      document0.reparentChild(document0);
      CDataNode cDataNode0 = new CDataNode("-)ywRd3cyYta1M&p0a");
      Node node0 = cDataNode0.doClone(document0);
      // Undeclared exception!
      try { 
        document0.before(node0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Document document0 = Document.createShell("nohref");
      Document document1 = (Document)document0.prependChild(document0);
      // Undeclared exception!
      document1.before("");
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Tag tag0 = Tag.valueOf("Xc,%0l");
      Attributes attributes0 = new Attributes();
      Element element0 = new Element(tag0, "Xc,%0l", attributes0);
      DataNode dataNode0 = new DataNode("java.lang.string@0000000126");
      element0.setParentNode(dataNode0);
      // Undeclared exception!
      try { 
        element0.before(" ");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      Element element0 = new Element("]YQtJ[2h>&,XE");
      // Undeclared exception!
      try { 
        element0.attr((String) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.attr((String) null, "gYdJj=%EV1&8;W'=uv");
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("3`mK5z\u0002T", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("lv(L{n@47)Z1[7&");
      Attributes attributes0 = cDataNode0.attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, " .%h~#&[", attributes0);
      // Undeclared exception!
      try { 
        pseudoTextElement0.attr((String) null, "lv(L{n@47)Z1[7&");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.ParseSettings", e);
      }
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Tag tag0 = Tag.valueOf("noframed");
      Attributes attributes0 = new Attributes();
      String[] stringArray0 = new String[3];
      attributes0.keys = stringArray0;
      FormElement formElement0 = new FormElement(tag0, " (DO&'fXJg6VP|", attributes0);
      // Undeclared exception!
      try { 
        formElement0.attr("[u-*U f H77ihW;savA", "noframed");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      Element element0 = document0.text("gYdJj=%EV1&8;W'=uv");
      element0.siblingIndex = 29;
      document0.reparentChild(element0);
      // Undeclared exception!
      try { 
        document0.appendTo(element0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 29, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("gydjj=%ev1&8;w'=uv", parseSettings0);
      Attributes attributes0 = new Attributes();
      Element element0 = new Element(tag0, "html", attributes0);
      // Undeclared exception!
      try { 
        element0.appendTo((Element) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Document document0 = Parser.parse("|Tp@#yTp", "nsa0r");
      // Undeclared exception!
      try { 
        document0.appendText((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.select.Evaluator$TagEndsWith", "org.jsoup.select.Evaluator$TagEndsWith");
      document0.appendChild(document0);
      // Undeclared exception!
      document0.appendElement("gydjj=%ev1&8;w'=uv");
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8W'=@v", "gYdJj=%EV1&8W'=@v");
      List<Node> list0 = document0.childNodes();
      document0.childNodes = list0;
      // Undeclared exception!
      try { 
        document0.appendElement("aM");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("nmxramed", "Jh*1Z7j!BGY5/de=");
      Parser parser0 = Parser.xmlParser();
      parser0.settings((ParseSettings) null);
      Document document1 = document0.parser(parser0);
      // Undeclared exception!
      try { 
        document1.appendElement("Jh*1Z7j!BGY5/de=");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.Tag", e);
      }
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Document document0 = new Document("");
      // Undeclared exception!
      try { 
        document0.appendElement((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      Element element0 = document0.head();
      Element element1 = document0.doClone(element0);
      // Undeclared exception!
      try { 
        document0.appendChild(element1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("#yoot", "#yoot");
      // Undeclared exception!
      try { 
        document0.appendChild((Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.append("Could not parse query '%s': unexpected token at '%s'");
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("hgroup", "org.jsoup.select.Evaluator$ContainsData");
      // Undeclared exception!
      try { 
        document0.append((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("*T- F$:X", "*T- F$:X");
      TextNode textNode0 = new TextNode((String) null);
      document0.setParentNode(textNode0);
      // Undeclared exception!
      try { 
        document0.append("*T- F$:X");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      document0.reparentChild(document0);
      // Undeclared exception!
      try { 
        document0.after((Node) document0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.after("*T- F$:X");
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Document document0 = Parser.parse("9", "1S$eeD>Df^]Ekmv{&n");
      // Undeclared exception!
      try { 
        document0.addClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      Tag tag0 = Tag.valueOf("Y.a3");
      Attributes attributes0 = new Attributes();
      Element element0 = null;
      try {
        element0 = new Element(tag0, (String) null, attributes0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      Element element0 = null;
      try {
        element0 = new Element((Tag) null, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Element element0 = null;
      try {
        element0 = new Element((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("-eu8);cH", "b12E0M8+=Yr'A");
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      document0.html(charArrayWriter0);
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      Document document0 = new Document("1f");
      document0.html((StringWriter) null);
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Document document0 = Parser.parse("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      document0.addClass("RqNFf+_blz");
      document0.addClass("}XK(;C>9PLrwZ");
      document0.hasClass("}XK(;C>9PLrwZ");
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("CommentStartDash", "CharacterReferenceInData");
      document0.addClass("gYdJj=%EV1&8;W)'=uv");
      Element element0 = document0.addClass("4hHu");
      element0.hasClass("tafename must not be empty.");
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      document0.hasClass("gYdJj=%EV1&8;W'=uv");
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJY=%EV1&8;W'uv", "gYdJY=%EV1&8;W'uv");
      document0.html("gYdJY=%EV1&8;W'uv");
      document0.data();
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Document document0 = Parser.parse("gX38{3PBdV/\",xIaP", "gX38{3PBdV/\",xIaP");
      Element element0 = document0.html(",VM|+isNQ%NQ");
      element0.hasText();
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Document document0 = Parser.parse("_:HgxIvh|\"oJdwAwf1", "GK2~e*?");
      document0.elementSiblingIndex();
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      document0.appendChild(document0);
      document0.elementSiblingIndex();
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      Element element0 = document0.head();
      element0.appendChild(document0);
      document0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      Element element0 = document0.head();
      element0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      Element element0 = document0.appendChild(document0);
      element0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("?XB[o!", "?XB[o!");
      Element element0 = document0.body();
      element0.html(" .%h~#&[");
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=@v", "gYdJj=%EV1&8;W'=@v");
      document0.attributes();
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("1", "1");
      document0.className();
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("aB&:G", "ih:$rh!!as4");
      document0.parent();
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("H4", "H4");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingOwnText((Pattern) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$MatchesOwn", e);
      }
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJY=%EV1&8;W'uv", "gYdJY=%EV1&8;W'uv");
      document0.ownText();
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Document document0 = new Document("");
      document0.isBlock();
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Document document0 = Parser.parse("f", "f");
      document0.empty();
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      Element element0 = new Element("*T-q;qC]");
      // Undeclared exception!
      try { 
        element0.is((Evaluator) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("Q'T6|=", "Q'T6|=");
      Pattern pattern0 = Pattern.compile("8RKL1t5H7!qKH]4`", 2605);
      document0.getElementsByAttributeValueMatching("Q'T6|=", pattern0);
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(";I_VZe\"^`DV7nyNu", ";I_VZe\"^`DV7nyNu");
      document0.id();
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      Document document0 = Document.createShell("AfterBody");
      document0.classNames();
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      Element element0 = new Element("br");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("br");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings.Syntax document_OutputSettings_Syntax0 = Document.OutputSettings.Syntax.xml;
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.syntax(document_OutputSettings_Syntax0);
      element0.outerHtmlHead(mockPrintWriter0, 2914, document_OutputSettings1);
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("bgsound", "bgsound");
      document0.tagName("bgsound");
      document0.appendElement("bgsound");
      document0.toString();
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("MarkupDeclarationOpen", "CommentStartDash");
      document0.tagName("textarea");
      StringBuffer stringBuffer0 = new StringBuffer();
      document0.outerHtml((Appendable) stringBuffer0);
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      Document document0 = Parser.parse("cR", "cR");
      Element element0 = document0.appendElement("br");
      element0.toString();
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=@v", "gYdJj=%EV1&8;W'=@v");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.prettyPrint(false);
      Document document1 = document0.outputSettings(document_OutputSettings1);
      document1.toString();
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      Tag tag0 = Tag.valueOf("textarea");
      CDataNode cDataNode0 = new CDataNode("tag name must_not be empty. .toob}");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "XK%E{}R}6XwYeC", attributes0);
      formElement0.val("id");
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("gYdJj=%EV1&8}Wp=uv", "gYdJj=%EV1&8}Wp=uv");
      document0.val("<html>\n <head></head>\n <body>\n  gYdJj=%EV1&amp;8}Wp=uv\n </body>\n</html>");
      document0.val();
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      Element element0 = new Element("textarea");
      element0.val();
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      Document document0 = Document.createShell("{|?H*nm");
      Element element0 = document0.addClass("{|?H*nm");
      document0.addClass("{|?H*nm");
      element0.toggleClass("{|?H*nm");
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Document document0 = Parser.parse("CommentStartDash", "CommentStartDash");
      document0.addClass("CommentStartDash");
      document0.addClass("Pattern syntax error: ");
      document0.hasClass("br");
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Document document0 = Document.createShell("java.lang.string@0000000077");
      document0.ensureChildNodes();
      document0.addClass("java.lang.string@0000000077");
      document0.getElementsByClass("java.lang.string@0000000077");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document0.addClass("java.lang.string@0000000077");
      document0.hasClass("java.lang.string@0000000077");
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("CommentStartDash", "CharacterReferenceInData");
      document0.addClass("gYdJj=%EV1&8;W)'=uv");
      document0.addClass("4hHu");
      document0.addClass("gYdJj=%EV1&8;W)'=uv");
      document0.getElementsByClass("html");
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("_9qZ", "_9qZ");
      document0.addClass(" !!WKVs");
      document0.addClass(" !!WKVs");
      document0.hasClass(";nJI2xqlS/yVT]>9fLP");
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("1", "1");
      Element element0 = document0.addClass("1");
      Element element1 = element0.addClass("textarea");
      element1.getElementsByClass("textarea");
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      Document document0 = Document.createShell("gYdJj=%EV1&8;W)'=uv");
      Element element0 = document0.addClass("gYdJj=%EV1&8;W)'=uv");
      element0.hasClass("Inse<t posi^ion ot of bounds.");
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("_<r5gk?)eUqGixz", "_<r5gk?)eUqGixz");
      CDataNode cDataNode0 = new CDataNode("xYa9=gS3kRS*yW+");
      document0.prependChild(cDataNode0);
      document0.data();
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=@v", "gYdJj=%EV1&8;W'=@v");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings.Syntax document_OutputSettings_Syntax0 = Document.OutputSettings.Syntax.xml;
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.syntax(document_OutputSettings_Syntax0);
      Charset charset0 = Charset.defaultCharset();
      Document document1 = document0.outputSettings(document_OutputSettings1);
      document1.charset(charset0);
      document1.hasText();
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(" ", "gYDdJj%%EV1&;W'=v");
      document0.hasText();
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("insert position out of bounds.", "insert position out of bounds.");
      document0.reparentChild(document0);
      document0.text();
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      DataNode dataNode0 = new DataNode((String) null);
      Element.preserveWhitespace(dataNode0);
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      Document document0 = Document.createShell("java.lang.string@0000000077");
      document0.appendText(" > ");
      document0.appendElement("br");
      document0.getElementsMatchingOwnText("java.lang.string@0000000077");
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("H4", "H4");
      document0.appendElement("br");
      document0.getElementsMatchingOwnText("br");
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      CDataNode cDataNode0 = new CDataNode("gYdJj=%EV1&8;W'=uv");
      document0.prependChild(cDataNode0);
      document0.getElementsMatchingOwnText("s+");
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      Document document0 = Parser.parse("[rhyg!weg;", "noframed");
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration("tag name must_not be empty.", "#root", false);
      document0.prependChild(xmlDeclaration0);
      document0.getElementsContainingOwnText("-&L!!`");
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      document0.append("gYdJj=%EV1&8;W'=uv");
      document0.text();
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("Pattern syntax error: ", "org.jsoup.select.StructuralEvaluator$ImmediatePreviousSibling");
      document0.append("Pattern syntax error: ");
      document0.text();
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      Document document1 = Parser.parse("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      document0.appendChild(document1);
      document0.getElementsMatchingText("ohLpU='amd");
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      Document document0 = Parser.parse("1f", "1f");
      document0.appendElement("1f");
      Pattern pattern0 = Pattern.compile("1f");
      document0.getElementsMatchingText(pattern0);
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      document0.appendElement("br");
      document0.text();
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      Document document0 = Parser.parse("~;>5W9^Vpq;.kA3ppw", "~;>5W9^Vpq;.kA3ppw");
      Element element0 = document0.body();
      element0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      document0.reparentChild(document0);
      document0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      Document document0 = new Document("8I@hf# )");
      Element element0 = document0.appendElement("8I@hf# )");
      element0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=+%EV1&8;W'=uv", "gYdJj=+%EV1&8;W'=uv");
      document0.reparentChild(document0);
      document0.previousElementSiblings();
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("1f", "1f");
      document0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      Document document0 = Document.createShell("1f");
      Element element0 = document0.appendElement("1f");
      element0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=+%EV1&8;W'=uv", "gYdJj=+%EV1&8;W'=uv");
      document0.reparentChild(document0);
      Element element0 = document0.head();
      document0.after((Node) element0);
      Elements elements0 = document0.nextElementSiblings();
      assertEquals(1, elements0.size());
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      Document document0 = Parser.parse("declare", "jbw~%Hvu;]ADd5O6C'^");
      document0.nextElementSibling();
      assertEquals("jbw~%Hvu;]ADd5O6C'^", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      Element element0 = document0.head();
      Elements elements0 = element0.siblingElements();
      assertEquals(1, elements0.size());
      assertEquals("gYdJj=%EV1&8;W'=uv", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      Document document0 = new Document("");
      Elements elements0 = document0.siblingElements();
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      Document document0 = Parser.parse("<3_8", "<3_8");
      Element element0 = document0.body();
      element0.after("#root");
      String string0 = element0.cssSelector();
      assertEquals("<3_8", element0.baseUri());
      assertEquals("html > body:nth-child(2)", string0);
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      Document document0 = Parser.parse("1f", "1f");
      Element element0 = document0.body();
      element0.reparentChild(document0);
      String string0 = document0.cssSelector();
      assertEquals("1f", document0.baseUri());
      assertEquals("html > body > #root", string0);
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      Document document0 = Parser.parse("1f", "1f");
      document0.reparentChild(document0);
      String string0 = document0.cssSelector();
      assertEquals("#root", string0);
      assertEquals("1f", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("1", "1");
      Element element0 = document0.addClass("1");
      element0.cssSelector();
      assertEquals("1", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("%Kti", "%Kti");
      Node[] nodeArray0 = new Node[5];
      // Undeclared exception!
      try { 
        document0.insertChildren(4408, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      Document document0 = Document.createShell("bdo");
      Node[] nodeArray0 = new Node[1];
      // Undeclared exception!
      try { 
        document0.insertChildren((-1110026255), nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      Document document0 = Parser.parse("", "Em]9 #");
      LinkedHashSet<FormElement> linkedHashSet0 = new LinkedHashSet<FormElement>();
      // Undeclared exception!
      try { 
        document0.insertChildren((-1685), (Collection<? extends Node>) linkedHashSet0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      Document document0 = Document.createShell("dvbx\"&[ch%`.|");
      List<DataNode> list0 = document0.dataNodes();
      assertEquals(0, list0.size());
      
      Element element0 = document0.insertChildren((-1), (Collection<? extends Node>) list0);
      assertEquals("dvbx\"&[ch%`.|", element0.baseUri());
      assertEquals(1, element0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(" ", "gYDdJj%%EV1&;W'=v");
      LinkedList<CDataNode> linkedList0 = new LinkedList<CDataNode>();
      // Undeclared exception!
      try { 
        document0.insertChildren(1119, (Collection<? extends Node>) linkedList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("H4", "H4");
      DataNode dataNode0 = new DataNode("   ");
      document0.appendChild(dataNode0);
      document0.dataNodes();
      assertEquals(2, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("?XB[o!", "?XB[o!");
      Element element0 = document0.body();
      List<TextNode> list0 = element0.textNodes();
      assertEquals(1, element0.siblingIndex());
      assertFalse(list0.isEmpty());
      assertEquals("?XB[o!", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      Document document0 = Document.createShell("1f");
      List<TextNode> list0 = document0.textNodes();
      assertEquals(0, list0.size());
      assertEquals(1, document0.childNodeSize());
      assertEquals("1f", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("H4", "H4");
      DataNode dataNode0 = new DataNode("   ");
      document0.appendChild(dataNode0);
      document0.getElementsByIndexEquals(67);
      assertEquals(2, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      Document document0 = Parser.parse("<3_8", "<3_8");
      Elements elements0 = document0.getElementsByIndexGreaterThan(43);
      assertEquals("<3_8", document0.baseUri());
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      Document document0 = Document.createShell("1f");
      document0.selectFirst("1f");
      assertEquals(1, document0.childNodeSize());
      assertEquals("1f", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      Document document0 = new Document(" ");
      document0.getAllElements();
      assertEquals(" ", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      Element element0 = new Element("value");
      Element element1 = element0.removeClass("value");
      assertEquals("value", element1.nodeName());
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("H4", "H4");
      // Undeclared exception!
      try { 
        document0.before("2-W0nlVTdsL");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJY=%EV1&8;n'uv", "gYdJY=%EV1&8;n'uv");
      // Undeclared exception!
      try { 
        document0.getElementsByAttribute("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      Element element0 = new Element("c%N(HHC4W== ?j+");
      Elements elements0 = element0.getElementsByAttributeValueNot("gydjj=%ev1&8;w'=uv", " ");
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      Document document0 = Parser.parse("1f", "1f");
      Element element0 = document0.shallowClone();
      assertEquals("1f", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=+%EV1&8;W'=uv", "gYdJj=+%EV1&8;W'=uv");
      // Undeclared exception!
      try { 
        document0.after((Node) document0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      Document document0 = Parser.parse("te", "te");
      assertEquals(1, document0.childNodeSize());
      
      document0.title(":QM`mWrA{mLl");
      String string0 = document0.text();
      assertEquals(":QM`mWrA{mLl te", string0);
      assertEquals("te", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      Document document0 = Parser.parse("value", "value");
      document0.getElementsByAttributeValueContaining("3QotB0?", "ysoHGkyu0");
      assertEquals("value", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      Document document0 = new Document("");
      Elements elements0 = document0.getElementsContainingText("");
      assertEquals(1, elements0.size());
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      Document document0 = Parser.parse("Tq#PjF h3Ixi", "");
      document0.getElementsByAttributeValueEnding(")}V],?Ou:R Kgt{.Q-", "html");
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("#root", "#root");
      document0.is("strike");
      assertEquals("#root", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      Element element0 = new Element("c%N(HHC4W== ?j+");
      Elements elements0 = element0.getElementsByAttributeValueMatching("=gB17Ks9", " ");
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag0 = Tag.valueOf("required", parseSettings0);
      Element element0 = new Element(tag0, "required");
      Element element1 = element0.attr("required", " ");
      assertEquals("required", element1.baseUri());
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      // Undeclared exception!
      try { 
        document0.wrap("obLS$iE^~.eax!Ev");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      Document document0 = Parser.parse("MarkupDeclarationOpen", "MarkupDeclarationOpen");
      Element element0 = document0.prependElement("MarkupDeclarationOpen");
      Element element1 = element0.firstElementSibling();
      assertEquals(2, document0.childNodeSize());
      assertSame(element0, element1);
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("1", "1");
      Elements elements0 = document0.getElementsByIndexLessThan(58);
      assertFalse(elements0.isEmpty());
      assertEquals(1, document0.childNodeSize());
      assertEquals("1", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=@v", "gYdJj=%EV1&8;W'=@v");
      // Undeclared exception!
      try { 
        document0.after(">{$b`=q+ftgmwtws");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      Document document0 = new Document("value");
      document0.prepend("  ");
      boolean boolean0 = document0.hasText();
      assertEquals(1, document0.childNodeSize());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      Element element0 = new Element("te");
      // Undeclared exception!
      try { 
        element0.select("OPA[%Q<");
        fail("Expecting exception: UnknownFormatConversionException");
      
      } catch(UnknownFormatConversionException e) {
         //
         // Conversion = 'Q'
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("7pKY*Gd\"4e&R", "&0 7-S,|Z2Ds+)r\"");
      document0.getElementsByAttributeValueStarting("7pKY*Gd\"4e&R", "7pKY*Gd\"4e&R");
      assertEquals(1, document0.childNodeSize());
      assertEquals("&0 7-S,|Z2Ds+)r\"", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("(B!~`", "");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValue("", "(B!~`");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput(":nth-child(%d)", "M9p ti+`h5BrFp~}'x");
      String string0 = document0.wholeText();
      assertEquals(":nth-child(%d)", string0);
      assertEquals("M9p ti+`h5BrFp~}'x", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      Document document0 = new Document("-)ywRd3cyYta1M&p0a");
      CDataNode cDataNode0 = new CDataNode("-)ywRd3cyYta1M&p0a");
      // Undeclared exception!
      try { 
        document0.before((Node) cDataNode0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("(B!~`", "");
      document0.getElementsContainingOwnText((String) null);
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("5uJ)33tQ)@ 7|M]", "5uJ)33tQ)@ 7|M]");
      document0.dataset();
      assertEquals(1, document0.childNodeSize());
      assertEquals("5uJ)33tQ)@ 7|M]", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      assertEquals(1, document0.childNodeSize());
      
      document0.html("");
      assertEquals("gYdJj=%EV1&8;W'=uv", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("1f", "1f");
      // Undeclared exception!
      try { 
        document0.prependText((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      Element element0 = new Element("c%N(HHC4W== ?j+");
      // Undeclared exception!
      try { 
        element0.child(129);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 129, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gYdJj=%EV1&8;W'=uv", "gYdJj=%EV1&8;W'=uv");
      document0.previousElementSiblings();
      assertEquals("gYdJj=%EV1&8;W'=uv", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("<Z?xW<!%%%}j$@=\",", "<Z?xW<!%%%}j$@=\",");
      Elements elements0 = document0.getElementsMatchingText("<Z?xW<!%%%}j$@=\",");
      assertEquals("<Z?xW<!%%%}j$@=\",", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test342()  throws Throwable  {
      Document document0 = Document.createShell(".tOOB}");
      document0.addClass(".tOOB}");
      document0.getElementsByClass(".tOOB}");
      assertEquals(".tOOB}", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test343()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("Tu[15#", "html");
      Elements elements0 = document0.children();
      assertEquals("html", document0.baseUri());
      assertFalse(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test344()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("limitedQuirks", "cR");
      document0.getElementById("cR");
  }
}
