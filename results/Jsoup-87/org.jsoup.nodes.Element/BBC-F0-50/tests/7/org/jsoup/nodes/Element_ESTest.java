/*
 * This file was automatically generated by EvoSuite
 * Mon Mar 01 22:53:00 GMT 2021
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedWriter;
import java.io.CharArrayWriter;
import java.io.PipedWriter;
import java.io.StringWriter;
import java.nio.BufferOverflowException;
import java.nio.CharBuffer;
import java.nio.ReadOnlyBufferException;
import java.nio.charset.Charset;
import java.util.Collection;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import java.util.regex.Pattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.Comment;
import org.jsoup.nodes.DataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.DocumentType;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.nodes.PseudoTextElement;
import org.jsoup.nodes.TextNode;
import org.jsoup.nodes.XmlDeclaration;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Parser;
import org.jsoup.parser.Tag;
import org.jsoup.select.Elements;
import org.jsoup.select.Evaluator;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Element_ESTest extends Element_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("TagName", "body");
      document0.prependText("-]Lp+zk@zwny?");
      document0.html();
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Document document0 = new Document("");
      document0.toggleClass("y");
      document0.toggleClass("Pattern syntax error: ");
      document0.getElementsByClass("Pattern syntax error: ");
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(",?H$aRI6!Ekb!h.{X^", "i`piBgl|%O*[s+uWepp");
      Tag tag0 = Tag.valueOf(",?H$aRI6!Ekb!h.{X^");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "i`piBgl|%O*[s+uWepp", attributes0);
      document0.setParentNode(formElement0);
      document0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Tag tag0 = Tag.valueOf("menuitem");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "menuitem", attributes0);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      formElement0.outerHtmlTail(charArrayWriter0, (-80052150), document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("TagName", "TagName");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      StringBuilder stringBuilder0 = new StringBuilder(2154);
      document0.outerHtmlHead(stringBuilder0, (-1110026255), document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Document document0 = Document.createShell("p");
      document0.nodelistChanged();
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Do$HsK", "Do$HsK");
      document0.ensureChildNodes();
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Document document0 = new Document("hhffg");
      document0.doSetBaseUri("W#h}Db}'LN7");
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "A~f1o<|k!4j/c^ r");
      Parser parser0 = Parser.xmlParser();
      Document document1 = document0.parser(parser0);
      document1.wrap("A~f1o<|k!4j/c^ r");
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Document document0 = Document.createShell("O4cBrj");
      Element element0 = document0.prependElement("O4cBrj");
      element0.wrap("<o4cbrj></o4cbrj>\n<html>\n <head></head>\n <body></body>\n</html>");
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("#G;cHy0Hee", "#G;cHy0Hee");
      Element element0 = document0.head();
      element0.wrap("e*R");
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Document document0 = Parser.parse(")~mX4", "");
      Element element0 = document0.body();
      element0.wrap(":#");
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Tag tag0 = Tag.valueOf("br");
      Element element0 = new Element(tag0, "br");
      element0.wholeText();
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Document document0 = Parser.parse("MD@ePq<pY>K/1FCRc", "head");
      Element element0 = document0.body();
      element0.val("f");
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("menuitem", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "div", attributes0);
      formElement0.val("org.jsoup.parser.Token$Tag");
      formElement0.val();
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("p", "p");
      Element element0 = document0.toggleClass("H2`");
      element0.siblingIndex = 2644;
      document0.toggleClass(" > ");
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("l", "l");
      document0.siblingIndex = 26;
      document0.text("l");
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Document document0 = new Document("v(6");
      Document document1 = document0.normalise();
      document0.setSiblingIndex((-776));
      document1.text("v(6");
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("W", "W");
      Element element0 = document0.head();
      element0.text("k!zj");
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("[I.B;R2.bv", "39f-G`q4jqk=\"Q~$B6=");
      Element element0 = document0.body();
      element0.tagName("ce$)v@|2");
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Tag tag0 = Tag.valueOf("template");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "template", attributes0);
      formElement0.tagName("template");
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Document document0 = Parser.parse("4+8FoK", "4+8FoK");
      document0.tagName();
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag0 = Tag.valueOf("textarea", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("textarea");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "R,O0N>A0vvu_F$/SO", attributes0);
      formElement0.tag();
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("menuitem", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "org.jsoup&<odes.Element", attributes0);
      formElement0.tag();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Tag tag0 = Tag.valueOf("template");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "template", attributes0);
      formElement0.tag();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      document0.tag();
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Tag tag0 = Tag.valueOf("template");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "template", attributes0);
      formElement0.shallowClone();
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      document0.selectFirst("br");
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Tag tag0 = Tag.valueOf("templatc");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "templatc", attributes0);
      formElement0.selectFirst("templatc");
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("{d-VzEU/(", "3?]e8sKJtb:2pH/XC");
      document0.select("1ioKr0j");
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("3?]e8sKJtb:2pH/XC", "TSb$snvo/_Z_0");
      document0.setSiblingIndex((byte) (-40));
      document0.removeClass("eS&]\"UuCfqChm");
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Document document0 = Document.createShell("p");
      Element element0 = document0.body();
      element0.removeClass("value");
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("p", "p");
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = (Node) document0;
      nodeArray0[1] = (Node) document0;
      nodeArray0[2] = (Node) document0;
      nodeArray0[3] = (Node) document0;
      nodeArray0[4] = (Node) document0;
      nodeArray0[5] = (Node) document0;
      nodeArray0[6] = (Node) document0;
      nodeArray0[7] = (Node) document0;
      document0.addChildren(nodeArray0);
      document0.previousElementSiblings();
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("template", "template");
      Element element0 = document0.body();
      element0.after((Node) document0);
      document0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      Element element0 = document0.createElement("textarea");
      Element.preserveWhitespace(element0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("z 8Be3\"n]~6cMC&", "");
      Element element0 = document0.prependChild(document0);
      element0.prependText("Wm@:v+A_+%An68/[yZw");
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Document document0 = Parser.parse("r|0i;,YW|t;BQC|'s", "r|0i;,YW|t;BQC|'s");
      Element element0 = document0.body();
      element0.prependChild(document0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("template", "template");
      Element element0 = document0.body();
      element0.prepend("template");
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Document document0 = new Document("");
      document0.prepend("");
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Document document0 = new Document("0OcjiK(Arw");
      document0.parents();
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "A~f1o<|k!4j/c^ r");
      Element element0 = document0.head();
      element0.parents();
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      document0.parent();
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Document document0 = Document.createShell("p");
      Element element0 = document0.body();
      element0.parent();
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Document document0 = Parser.parse("^", "^");
      Document document1 = Parser.parse("^", "I");
      document0.setParentNode(document1);
      document0.parent();
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Document document0 = new Document("W");
      document0.setParentNode(document0);
      document0.parent();
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Document document0 = Document.createShell("body");
      document0.prependText("textarea");
      document0.ownText();
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      document0.nodeName();
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      document0.setParentNode(document0);
      Element element0 = document0.head();
      element0.appendTo(document0);
      document0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Document document0 = Document.createShell("body");
      document0.appendTo(document0);
      document0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Document document0 = Parser.parse("MD@ePq<pY>K/1FCRc", "head");
      Element element0 = document0.body();
      element0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(")xVNX6_Tt[`0", ")xVNX6_Tt[`0");
      Element element0 = document0.head();
      element0.isBlock();
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      Pattern pattern0 = Pattern.compile("", (-1992));
      Evaluator.MatchesOwn evaluator_MatchesOwn0 = new Evaluator.MatchesOwn(pattern0);
      document0.is((Evaluator) evaluator_MatchesOwn0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("o.jsoup.nodes.Element", "o.jsoup.nodes.Element");
      Element element0 = document0.head();
      element0.is("html > head");
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Document document0 = Document.createShell("6wb;R");
      Node[] nodeArray0 = new Node[0];
      document0.insertChildren(0, nodeArray0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Tag tag0 = Tag.valueOf("menuitem");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "menuitem", attributes0);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) formElement0;
      formElement0.insertChildren(0, nodeArray0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Document document0 = Parser.parse("MD@ePq<pY>K/1FCRc", "MD@ePq<pY>K/1FCRc");
      document0.siblingIndex = 319;
      LinkedHashSet<DataNode> linkedHashSet0 = new LinkedHashSet<DataNode>();
      document0.insertChildren(0, (Collection<? extends Node>) linkedHashSet0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("/v", "menuitem");
      document0.setSiblingIndex((-189));
      LinkedList<Document> linkedList0 = new LinkedList<Document>();
      document0.insertChildren(1, (Collection<? extends Node>) linkedList0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      Element element0 = document0.head();
      Pattern pattern0 = Pattern.compile("4yFW8KTleV6b4");
      Elements elements0 = document0.getElementsMatchingText(pattern0);
      element0.insertChildren(0, (Collection<? extends Node>) elements0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Document document0 = new Document("YQ/");
      Document document1 = document0.normalise();
      Element element0 = document1.body();
      element0.html("Tag name must not be empty.");
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("l", "l");
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      document0.html(charArrayWriter0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      Element element0 = document0.head();
      element0.html();
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Document document0 = Parser.parse("SXFf|xOG)}&}P6x<n", "3?]e8sKJtb:2pH/XC");
      Document document1 = (Document)document0.toggleClass("");
      document1.hasAttributes();
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("l", "l");
      document0.hasAttributes();
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("");
      Tag tag0 = Tag.valueOf("c$h$#\u0007h&.w");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "v$`0ybnDtH2`,LNB<j", attributes0);
      formElement0.getElementsMatchingText(pattern0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("TagName", "body");
      document0.getElementsMatchingText("-]Lp+zk@zwny?");
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      Pattern pattern0 = Pattern.compile("", (-623));
      document0.getElementsMatchingOwnText(pattern0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("W", "W");
      document0.getElementsMatchingOwnText("");
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Document document0 = new Document("org.jsoup.nodes.Element$2");
      document0.getElementsByTag("Nxy0W*mHir'?b");
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Document document0 = Document.createShell("K}Ds h9PY]>d<");
      document0.getElementsByIndexLessThan(4);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("org.jsoup.nodes.Element$1", "org.jsoup.nodes.Element$1");
      document0.getElementsByIndexGreaterThan(2174);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Tag tag0 = Tag.valueOf("br");
      CDataNode cDataNode0 = new CDataNode("06/}|v$55");
      Attributes attributes0 = cDataNode0.attributes();
      Attributes attributes1 = attributes0.put("br", "s@q][L%");
      FormElement formElement0 = new FormElement(tag0, "06/}|v$55", attributes1);
      formElement0.getElementsByAttributeValueContaining("br", "s@q][L%");
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("Qov_]a3~+K7f", "Unexpected character '%s' in input state [%s]");
      document0.getElementsByAttributeStarting("footer");
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Document document0 = new Document("v(6");
      document0.attr("~ACi4AyXF&T#Y4>", true);
      document0.getElementsByAttributeStarting("~ACi4AyXF&T#Y4>");
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Tag tag0 = Tag.valueOf("java.lang.string@0000000116");
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = Attribute.createFromEncoded("w/q)LcaxB}.vc6pZ", "org.jsoup.nodes.Element$2");
      Attributes attributes1 = attributes0.put(attribute0);
      FormElement formElement0 = new FormElement(tag0, "i~~i~)O8cwK!_", attributes1);
      formElement0.getElementsByAttribute("w/q)LcaxB}.vc6pZ");
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Document document0 = Document.createShell("acronym");
      Element element0 = document0.prependElement("acronym");
      element0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      Element element0 = document0.head();
      element0.prependText("");
      element0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("taD/6{S", "taD/6{S");
      Element element0 = document0.body();
      element0.empty();
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.FormElement", "org.jsoup.Jsoup");
      Element element0 = document0.body();
      element0.doClone(document0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("^", "^");
      Element element0 = document0.head();
      element0.doClone(document0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Document document0 = Parser.parse("Nh0#4:bvRsN9ONs|_", "org.jsoup.select.Evaluator$Id");
      document0.doClone((Node) null);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("s+", "o |Y");
      Element element0 = document0.body();
      element0.clone();
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Document document0 = new Document("4+8FoK");
      document0.clone();
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Document document0 = Parser.parse("MD@egYq<pY>nFCRc", "MD@egYq<pY>nFCRc");
      Element element0 = document0.body();
      Locale locale0 = Locale.ITALY;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      element0.classNames(set0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Document document0 = new Document("head");
      Locale locale0 = Locale.GERMANY;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      document0.classNames(set0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("s+", "o |Y");
      Charset charset0 = Charset.defaultCharset();
      Set<String> set0 = charset0.aliases();
      document0.classNames(set0);
      document0.classNames();
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Document document0 = new Document("hhffg");
      document0.addClass("hhffg");
      document0.className();
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Document document0 = new Document("(sjDmT_GDM1`n*J5q{");
      document0.children();
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Document document0 = Parser.parse("4+8FoK", "4+8FoK");
      document0.children();
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.select.Collector$FirstFinder", "0`;bf0h!_");
      Element element0 = document0.createElement("0`;bf0h!_");
      element0.childNodeSize();
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("s+", "o |Y");
      document0.childNodeSize();
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("#G;cHy0Hee", "#G;cHy0Hee");
      Element element0 = document0.head();
      element0.before((Node) document0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Document document0 = Parser.parse("`H%>", "`H%>");
      Element element0 = document0.appendElement("`H%>");
      element0.before((Node) document0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      document0.setParentNode(document0);
      DataNode dataNode0 = new DataNode("h9\"(x6bl(Ij", "6kH1:GS[.<}!+@HX");
      document0.before((Node) dataNode0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Document document0 = new Document("MD@egq<pY>n/1FCRc");
      Element element0 = document0.doClone(document0);
      element0.before("4:6%L|\"{9!j!gl| _*x");
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Document document0 = Document.createShell("'4_u4'!M5zw");
      Element element0 = document0.head();
      element0.appendElement("'4_u4'!M5zw");
      element0.before("'4_u4'!M5zw");
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Document document0 = Document.createShell("&8=+");
      document0.baseUri();
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      document0.baseUri();
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Document document0 = Parser.parse("MD@ePq<pY>K/1FCRc", "head");
      document0.attributes();
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("xG]p@jSVpxf('w6", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("xG]p@jSVpxf('w6");
      Attributes attributes0 = cDataNode0.attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "xG]p@jSVpxf('w6", attributes0);
      pseudoTextElement0.attributes();
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("s+", "o |Y");
      Element element0 = document0.body();
      element0.attr("", true);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      document0.siblingIndex = (-10);
      document0.attr("", true);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Document document0 = new Document("6'4_u 4'!M5zw");
      document0.siblingIndex = 26;
      document0.attr("6'4_u 4'!M5zw", "lG/Va1*`BN&uO");
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("^", "^");
      Element element0 = document0.head();
      element0.attr("^", "A!T.vU*Ddl");
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("?", ")3#6n!&^S");
      Element element0 = document0.body();
      element0.appendText("{bV*|K}cFJ!i");
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      Element element0 = document0.head();
      element0.appendText("");
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      document0.setParentNode(document0);
      document0.appendText("");
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("template", "org.jsoup.nodes.Node$1");
      document0.appendElement("template");
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Tag tag0 = Tag.valueOf("template");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "template", attributes0);
      formElement0.appendChild(formElement0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      document0.appendChild(document0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      document0.siblingIndex = (-1436010313);
      document0.append("");
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("#s#cSF *xF,Pi4?,", "#s#cSF *xF,Pi4?,");
      Element element0 = document0.body();
      element0.append("#s#cSF *xF,Pi4?,");
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Document document0 = new Document("");
      document0.append("");
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("^", "^");
      document0.setParentNode(document0);
      TextNode textNode0 = new TextNode("uXyo", "uXyo");
      document0.after((Node) textNode0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("]*T>~__", "]*T>~__");
      Element element0 = document0.head();
      element0.after((Node) document0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Document document0 = Document.createShell("D8wS8{dK>I*");
      Element element0 = document0.head();
      element0.after("class");
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(">F>YP^~", "AXp");
      Element element0 = document0.body();
      element0.after("moj>3k{{eJ]'");
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Document document0 = new Document("5()");
      document0.setSiblingIndex((-1265));
      document0.addClass("java.lang.string@0000000013");
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Document document0 = Document.createShell("p");
      Element element0 = document0.body();
      element0.addClass("[Td}}E:c");
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.wrap("c$h$#\u0007h&.w");
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Tag tag0 = Tag.valueOf("menuitem");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "menuitem", attributes0);
      CDataNode cDataNode0 = new CDataNode("m=Z");
      FormElement formElement1 = (FormElement)formElement0.doClone(cDataNode0);
      // Undeclared exception!
      try { 
        formElement1.wrap("m=Z");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("l", "l");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.val("#document");
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Tag tag0 = Tag.valueOf("template");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "template", attributes0);
      attributes0.vals = null;
      // Undeclared exception!
      try { 
        formElement0.val("T");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Tag tag0 = Tag.valueOf("template");
      Attributes attributes0 = new Attributes();
      String[] stringArray0 = new String[6];
      attributes0.keys = stringArray0;
      FormElement formElement0 = new FormElement(tag0, "template", attributes0);
      // Undeclared exception!
      try { 
        formElement0.val("org.jsoup.nodes.Element$2");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Tag tag0 = Tag.valueOf("body");
      CDataNode cDataNode0 = new CDataNode("textarea");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "body", attributes0);
      // Undeclared exception!
      try { 
        formElement0.toggleClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Document document0 = new Document("5ad6Z@c@b");
      // Undeclared exception!
      try { 
        document0.text("body");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Document document0 = Parser.parse("6wb;R", "6wb;R");
      // Undeclared exception!
      try { 
        document0.text((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("aS.ln^.s)ing0000U013", "aS.ln^.s)ing0000U013");
      document0.childNodes = null;
      // Undeclared exception!
      try { 
        document0.text();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("kRr4PKu%<", "kRr4PKu%<");
      DataNode dataNode0 = DataNode.createFromEncoded("", "r%Ud'HJuo:L2yX8Y$XX");
      document0.setParentNode(dataNode0);
      // Undeclared exception!
      try { 
        document0.text();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      document0.siblingIndex = (-1436010313);
      document0.setParentNode(document0);
      // Undeclared exception!
      try { 
        document0.text();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("W", "W");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.tagName("uWJ-K4JiL");
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Document document0 = new Document("(sjDmT_GDM1`n*J5q{");
      // Undeclared exception!
      try { 
        document0.tagName((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Tag name must not be empty.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("W", "W");
      Parser parser0 = Parser.xmlParser();
      Document document1 = parser0.parseInput("W", "W");
      document0.setParentNode(document1);
      // Undeclared exception!
      try { 
        document0.siblingElements();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      TextNode textNode0 = TextNode.createFromEncoded("#root", "     ^ ");
      document0.setParentNode(textNode0);
      // Undeclared exception!
      try { 
        document0.siblingElements();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("W", "W");
      // Undeclared exception!
      try { 
        document0.selectFirst("{F{DKRO!yl@n-Kh+");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query '{F{DKRO!yl@n-Kh+': unexpected token at '{F{DKRO!yl@n-Kh+'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      // Undeclared exception!
      try { 
        document0.selectFirst("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Tag tag0 = Tag.valueOf("s+");
      Element element0 = new Element(tag0, "s+");
      // Undeclared exception!
      try { 
        element0.select("i';A\"F}K@:.9e6c>");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query 'i';A\"F}K@:.9e6c>': unexpected token at '';A\"F}K@:.9e6c>'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Document document0 = Parser.parse("17z$+bl~~7?}", "17z$+bl~~7?}");
      // Undeclared exception!
      try { 
        document0.select((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("caption", " > ");
      // Undeclared exception!
      try { 
        document0.removeClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("]w7|7pT{zh{J)-Wx%$`", "]w7|7pT{zh{J)-Wx%$`");
      DocumentType documentType0 = new DocumentType("]w7|7pT{zh{J)-Wx%$`", "0%?N<l6@h`Sm", "afterdoctypepublickeyword", "W", "]w7|7pT{zh{J)-Wx%$`");
      document0.setParentNode(documentType0);
      // Undeclared exception!
      try { 
        document0.previousElementSiblings();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Document document0 = Parser.parse("K!uep4TDA<+.f.Rb", "K!uep4TDA<+.f.Rb");
      DataNode dataNode0 = new DataNode("3qOkdH2W[UN'", "md@epq<py>k/1fcrc");
      document0.setParentNode(dataNode0);
      // Undeclared exception!
      try { 
        document0.previousElementSibling();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.prependElement("#root");
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("bv", "bv");
      List<Node> list0 = document0.childNodes();
      document0.childNodes = list0;
      // Undeclared exception!
      try { 
        document0.prependElement("bv");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableList", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("bv", "bv");
      document0.childNodes = null;
      // Undeclared exception!
      try { 
        document0.prependElement("bv");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      // Undeclared exception!
      try { 
        document0.prependElement("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Tag tag0 = Tag.valueOf("menuitem");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "menuitem", attributes0);
      CDataNode cDataNode0 = new CDataNode("<menuitem>");
      Node node0 = cDataNode0.doClone(formElement0);
      // Undeclared exception!
      try { 
        formElement0.prependChild(node0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("3?]e8sKJtb:2pH/XC", "7|ea");
      // Undeclared exception!
      try { 
        document0.prependChild((Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("template", "template");
      Element element0 = document0.body();
      element0.after((Node) document0);
      // Undeclared exception!
      element0.prepend("template");
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Document document0 = Document.createShell("Y1");
      List<Node> list0 = Parser.parseFragment(" > ", (Element) document0, "Y1");
      document0.childNodes = list0;
      // Undeclared exception!
      try { 
        document0.prepend("Y1");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableList", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Document document0 = Parser.parse("8:<ce$)v@|2>n&'r", "org.jsoup.nodes.Element");
      StringBuilder stringBuilder0 = new StringBuilder(19);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document_OutputSettings0.indentAmount(124);
      // Undeclared exception!
      document0.outerHtmlTail(stringBuilder0, 124, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Document document0 = new Document("menuitem");
      char[] charArray0 = new char[5];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlTail(charBuffer0, (-4725), document_OutputSettings0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Document document0 = Parser.parse("8:<ce$)v@|2>n&'r", "8:<ce$)v@|2>n&'r");
      MockFile mockFile0 = new MockFile("AfterHead");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      BufferedWriter bufferedWriter0 = new BufferedWriter(mockPrintWriter0);
      // Undeclared exception!
      try { 
        document0.outerHtmlTail(bufferedWriter0, 1403, (Document.OutputSettings) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document document0 = Parser.parseBodyFragment("org.jsoup.select.StucturalEvaluator$Root", "WO80.~2]&8ijd.8");
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        document0.outerHtmlTail(stringWriter0, (-4531), document_OutputSettings0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // width must be > 0
         //
         verifyException("org.jsoup.internal.StringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(",(", ",(");
      StringWriter stringWriter0 = new StringWriter();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document_OutputSettings0.indentAmount(55296);
      // Undeclared exception!
      document0.outerHtmlHead(stringWriter0, 11, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Element element0 = new Element("=i'Fe[ttJ+s}m");
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "K^");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        element0.outerHtmlHead(charBuffer0, (-1253), document_OutputSettings0);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.StringCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Document document0 = Document.createShell("K}Ds h9PY]>d<");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      char[] charArray0 = new char[4];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      // Undeclared exception!
      try { 
        document0.outerHtmlHead(charBuffer0, 8249, document_OutputSettings0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Document document0 = Parser.parse("3?]e8sKJtb:2pH/XC", "3?]e8sKJtb:2pH/XC");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlHead((Appendable) null, 46, document_OutputSettings0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlHead(charArrayWriter0, (-2000), document_OutputSettings0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // width must be > 0
         //
         verifyException("org.jsoup.internal.StringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Tag tag0 = Tag.valueOf("menuitem");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, ")1", attributes0);
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration("\u0001#oEG6zpsYJ8=Td\"}", "-a A", true);
      formElement0.parentNode = (Node) xmlDeclaration0;
      // Undeclared exception!
      try { 
        formElement0.nextElementSiblings();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("W", "W");
      DataNode dataNode0 = DataNode.createFromEncoded("vs:pvY5fv^aL@S#jL", "3?]e8sKJtb:2pH/XC");
      document0.setParentNode(dataNode0);
      // Undeclared exception!
      try { 
        document0.nextElementSibling();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      Tag tag0 = Tag.valueOf("t%XA[ET/46T", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "fvgk0mKpK)?gd\"?", attributes0);
      // Undeclared exception!
      try { 
        formElement0.lastElementSibling();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("Nh0#4:bvRsAmONs|_", "yd9 Py>#/");
      TextNode textNode0 = TextNode.createFromEncoded("org.jsoup.nodes.Element$NodeList");
      document0.setParentNode(textNode0);
      // Undeclared exception!
      try { 
        document0.lastElementSibling();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("^", "^");
      document0.setParentNode(document0);
      Evaluator.IsOnlyOfType evaluator_IsOnlyOfType0 = new Evaluator.IsOnlyOfType();
      // Undeclared exception!
      document0.is((Evaluator) evaluator_IsOnlyOfType0);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      // Undeclared exception!
      try { 
        document0.is((Evaluator) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("head", parseSettings0);
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "#root", attributes0);
      // Undeclared exception!
      try { 
        pseudoTextElement0.is("a'<:");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query 'a'<:': unexpected token at ''<:'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.is("html > head");
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Document document0 = Parser.parse("6wb;R", "6wb;R");
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = (Node) document0;
      nodeArray0[1] = (Node) document0;
      nodeArray0[2] = (Node) document0;
      nodeArray0[3] = (Node) document0;
      Tag tag0 = Tag.valueOf("R!1O1l%IC:");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "<html>\n <head></head>\n <body>\n  6wb;R\n </body>\n</html>", attributes0);
      nodeArray0[4] = (Node) formElement0;
      nodeArray0[5] = (Node) document0;
      nodeArray0[6] = (Node) document0;
      nodeArray0[7] = (Node) document0;
      nodeArray0[8] = (Node) document0;
      // Undeclared exception!
      try { 
        document0.insertChildren((-1), nodeArray0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("br", "br");
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = (Node) document0;
      nodeArray0[1] = (Node) document0;
      nodeArray0[2] = (Node) document0;
      nodeArray0[3] = (Node) document0;
      nodeArray0[4] = (Node) document0;
      nodeArray0[5] = (Node) document0;
      document0.addChildren(nodeArray0);
      // Undeclared exception!
      document0.html("br");
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Document document0 = Document.createShell("");
      // Undeclared exception!
      try { 
        document0.html((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Document document0 = Document.createShell("K}Ds h9PY]>d<");
      PipedWriter pipedWriter0 = new PipedWriter();
      // Undeclared exception!
      try { 
        document0.html(pipedWriter0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Pipe not connected
         //
         verifyException("org.jsoup.nodes.Node$OuterHtmlVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("3?]e8sKJtb:2pH/XC", "7|ea");
      document0.setParentNode(document0);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      // Undeclared exception!
      document0.html(charArrayWriter0);
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      // Undeclared exception!
      try { 
        document0.html(charBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("org.jsoup.nodes.Element$1", "org.jsoup.nodes.Element$1");
      // Undeclared exception!
      try { 
        document0.html((MockFileWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("l", "l");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.html();
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.charset((Charset) null);
      Document document0 = Parser.parseBodyFragment("D_{e", "!?V,.ZE82%G{");
      Document document1 = document0.outputSettings(document_OutputSettings1);
      // Undeclared exception!
      try { 
        document1.html();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Document$OutputSettings", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup&<odes.Element", "org.jsoup&<odes.Element");
      DocumentType documentType0 = new DocumentType(" 5j[0anIm=G", "pee9lvj!Ia8W>P5Q\">", "Q&Zp");
      document0.setParentNode(documentType0);
      // Undeclared exception!
      try { 
        document0.html();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Document document0 = Document.createShell("acronym");
      // Undeclared exception!
      try { 
        document0.hasClass((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("3?]e8sKJtb:pH/XC", "3?]e8sKJtb:pH/XC");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText((Pattern) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$Matches", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("TagName", "body");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Document document0 = new Document("@0iXjGrt7%s5r");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText("%/?y[*^,(&zL4eK?e");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pattern syntax error: %/?y[*^,(&zL4eK?e
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingOwnText((Pattern) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$MatchesOwn", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingOwnText((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Document document0 = Parser.parse("$u6!(", "$u6!(");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingOwnText("$u6!(");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pattern syntax error: $u6!(
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Document document0 = Parser.parse(":containsData(text) query must not be empty", ":containsData(text) query must not be empty");
      DataNode dataNode0 = DataNode.createFromEncoded(":containsData(text) query must not be empty", (String) null);
      document0.setParentNode(dataNode0);
      // Undeclared exception!
      try { 
        document0.getElementsMatchingOwnText(":containsData(text) query must not be empty");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Document document0 = Parser.parse("MD@ePq<pY>K/1FCRc", "MD@ePq<pY>K/1FCRc");
      DocumentType documentType0 = new DocumentType("data", "{", "");
      document0.setParentNode(documentType0);
      // Undeclared exception!
      try { 
        document0.getElementsContainingOwnText("MD@ePq<pY>K/1FCRc");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("5(", "5(");
      document0.setSiblingIndex((-439));
      document0.setParentNode(document0);
      // Undeclared exception!
      try { 
        document0.getElementsContainingOwnText("5(");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Document document0 = Document.createShell("");
      // Undeclared exception!
      try { 
        document0.getElementsByTag("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      // Undeclared exception!
      try { 
        document0.getElementsByClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Document document0 = Parser.parse("SXFf|xOG)}&}P6x<n", "3?]e8sKJtb:2pH/XC");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueStarting("", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("5(", "5(");
      document0.setParentNode(document0);
      document0.siblingIndex = (-2037);
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueStarting("5(", "0$B#S?");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("w2=O", "u");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueNot("object", "'");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Tag tag0 = Tag.valueOf("menuitem");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "menuitem", attributes0);
      // Undeclared exception!
      try { 
        formElement0.getElementsByAttributeValueNot((String) null, "                  ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Document document0 = Document.createShell("acronym");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueMatching((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueEnding("%M", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("p", "p");
      Element element0 = document0.prependElement("p");
      element0.siblingIndex = (-32537631);
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueEnding("p", "#");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Tag tag0 = Tag.valueOf("c(J0dxaJ'xV%kYW&");
      Attributes attributes0 = new Attributes();
      Element element0 = new Element(tag0, "(z,", attributes0);
      // Undeclared exception!
      try { 
        element0.getElementsByAttributeValueContaining("", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("org.jsoup.select.Evaluator$AttributeWithValueStarting", "org.jsoup.select.Evaluator$AttributeWithValueStarting");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValue("", "?");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Document document0 = Parser.parse("SXFf|xOG)}&}P6x<n", "3?]e8sKJtb:2pH/XC");
      // Undeclared exception!
      try { 
        document0.getElementsByAttribute("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      // Undeclared exception!
      try { 
        document0.getElementById("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Document document0 = Document.createShell("TagName");
      // Undeclared exception!
      try { 
        document0.firstElementSibling();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("aS.lan^.s)ing0000U013", "aS.lan^.s)ing0000U013");
      CDataNode cDataNode0 = new CDataNode("XcGN_");
      document0.setParentNode(cDataNode0);
      // Undeclared exception!
      try { 
        document0.firstElementSibling();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Document document0 = Parser.parse("oBb)2F`y0sfF6Tm", "oBb)2F`y0sfF6Tm");
      document0.childNodes = null;
      // Undeclared exception!
      try { 
        document0.dataNodes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("\"lI", "\"lI");
      Element element0 = document0.head();
      element0.toggleClass("\"lI");
      // Undeclared exception!
      try { 
        element0.cssSelector();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query 'head.java.lang.String@0000000052': unexpected token at '@0000000052'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(")~1v:e[u}j) v0E", "!Z$Kg,*'");
      Element element0 = document0.head();
      List<Node> list0 = Parser.parseXmlFragment("!Z$Kg,*'", "4i%~A4*OoIzU");
      element0.childNodes = list0;
      // Undeclared exception!
      try { 
        element0.cssSelector();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.NodeTraversor", e);
      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("TagName", "body");
      CDataNode cDataNode0 = new CDataNode("TagName");
      document0.setParentNode(cDataNode0);
      // Undeclared exception!
      try { 
        document0.cssSelector();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Do$HsK", "Do$HsK");
      Element element0 = document0.head();
      element0.setSiblingIndex((-3571));
      // Undeclared exception!
      try { 
        element0.cssSelector();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      // Undeclared exception!
      try { 
        document0.classNames((Set<String>) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      Document document0 = Document.createShell("p");
      // Undeclared exception!
      try { 
        document0.child(63);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 63, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      // Undeclared exception!
      try { 
        document0.child((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Document document0 = Parser.parse("java.lang.sting@000000113", "java.lang.sting@000000113");
      document0.setParentNode(document0);
      Comment comment0 = new Comment("Pattern syntax error: ", "org.jsoup.nodes.Element$2");
      XmlDeclaration xmlDeclaration0 = comment0.asXmlDeclaration();
      Element element0 = document0.doClone(xmlDeclaration0);
      // Undeclared exception!
      try { 
        document0.before((Node) element0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractList", e);
      }
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Document document0 = new Document("W");
      document0.setParentNode(document0);
      // Undeclared exception!
      try { 
        document0.before((Node) document0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("W", "W");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.before("W");
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("ap", "org.jsoup.nodes.Element$NodeList");
      Parser parser0 = Parser.htmlParser();
      Parser parser1 = parser0.settings((ParseSettings) null);
      Document document1 = document0.parser(parser1);
      Element element0 = document1.body();
      // Undeclared exception!
      try { 
        element0.before("tbody");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("*TY_", "*TY_");
      DocumentType documentType0 = new DocumentType("*TY_", "*TY_", "~", "v.o3-(CR0#", "value");
      document0.setParentNode(documentType0);
      // Undeclared exception!
      try { 
        document0.before("v.o3-(CR0#");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      // Undeclared exception!
      try { 
        document0.attr((String) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("l", "l");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.attr("#document", "l");
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Tag tag0 = Tag.valueOf(")#1;sa");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, ")#1;sa", attributes0);
      // Undeclared exception!
      try { 
        formElement0.attr((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.ParseSettings", e);
      }
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Document document0 = new Document("java.lang.sting@000000113");
      document0.setParentNode(document0);
      // Undeclared exception!
      try { 
        document0.appendTo(document0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("Xmtd", parseSettings0);
      Element element0 = new Element(tag0, "org.jsoup.select.CombiningEvaluator$Or");
      // Undeclared exception!
      try { 
        element0.appendText((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Document document0 = Document.createShell("");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.appendElement("gwc&");
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      Document document0 = Parser.parse("SXFf|xOG)}&}P6x<n", "3?]e8sKJtb:2pH/XC");
      // Undeclared exception!
      try { 
        document0.appendElement("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Document document0 = Parser.parse("It_(?w(z?5RCl%\"&", "");
      Element element0 = document0.createElement(".");
      element0.childNodes = null;
      // Undeclared exception!
      try { 
        element0.appendChild(document0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      Document document1 = document0.clone();
      document0.prependChild(document1);
      document0.html("");
      // Undeclared exception!
      try { 
        document0.appendChild(document1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      Document document0 = Parser.parse("TagName", "TagName");
      document0.appendTo(document0);
      // Undeclared exception!
      document0.append("TagName");
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("W", "W");
      // Undeclared exception!
      try { 
        document0.append((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("menuitem", "menuitem");
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration("menuitem", true);
      document0.setParentNode(xmlDeclaration0);
      // Undeclared exception!
      try { 
        document0.append("menuitem");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      document0.setParentNode(document0);
      // Undeclared exception!
      try { 
        document0.after((Node) document0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.after("Insert position out of bounds.");
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("0LE{r", "0LE{r");
      DataNode dataNode0 = new DataNode("0LE{r");
      Element element0 = document0.doClone(dataNode0);
      // Undeclared exception!
      try { 
        element0.after("0LE{r");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Tag tag0 = Tag.valueOf("value");
      Attributes attributes0 = new Attributes();
      Element element0 = null;
      try {
        element0 = new Element(tag0, (String) null, attributes0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag0 = Tag.valueOf("3?]e8sKJtb:2pH/XC", parseSettings0);
      Element element0 = null;
      try {
        element0 = new Element(tag0, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      Element element0 = document0.head();
      element0.html((CharArrayWriter) null);
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      Document document0 = new Document("");
      Element element0 = document0.toggleClass("");
      Element element1 = element0.addClass("vRh9rXU=Jwz6C^/'");
      element1.hasClass("vRh9rXU=Jwz6C^/'");
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Document document0 = new Document("");
      Element element0 = document0.toggleClass("");
      Element element1 = element0.addClass("              ");
      element1.hasClass("              ");
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Document document0 = new Document("");
      document0.toggleClass("");
      document0.hasClass("vRh9rXU=Jwz6C^/'");
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      Document document0 = Parser.parse("p", "p");
      Element element0 = document0.addClass("g");
      element0.hasClass("java.lang.string@0000000013");
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Document document0 = Document.createShell("^");
      document0.hasClass("B");
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Document document0 = Parser.parse("6wb;R", "6wb;R");
      Element element0 = document0.toggleClass("org.jsoup.select.CombiningEvaluator$Or");
      element0.hasClass("<html>\n <head></head>\n <body>\n  6wb;R\n </body>\n</html>");
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      Document document0 = Document.createShell("K}Ds h9PY]>d<");
      document0.append("A");
      document0.data();
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Document document0 = Document.createShell("**|P");
      Comment comment0 = new Comment("**|P");
      document0.prependChild(comment0);
      document0.data();
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Document document0 = Document.createShell("TagName");
      Element element0 = document0.append("TagName");
      element0.hasText();
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("aS.ln^.s)ing0000U013", "aS.ln^.s)ing0000U013");
      document0.elementSiblingIndex();
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      document0.setParentNode(document0);
      document0.elementSiblingIndex();
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("W", "W");
      document0.setParentNode(document0);
      document0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      document0.setParentNode(document0);
      document0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      document0.setParentNode(document0);
      document0.cssSelector();
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Document document0 = Document.createShell("p");
      document0.className();
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      Document document0 = Document.createShell("p");
      Pattern pattern0 = Pattern.compile("yL&MJy+t?|@E0$_!d", 77);
      document0.getElementsMatchingOwnText(pattern0);
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      Document document0 = Document.createShell("acronym");
      document0.ownText();
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(")xVNX6_Tt[`0", ")xVNX6_Tt[`0");
      document0.isBlock();
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("taD/6{S", "taD/6{S");
      document0.empty();
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("LI}B", "LI}B");
      Evaluator.IsOnlyChild evaluator_IsOnlyChild0 = new Evaluator.IsOnlyChild();
      document0.is((Evaluator) evaluator_IsOnlyChild0);
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("TagName", "body");
      Pattern pattern0 = Pattern.compile("@;l$@3CSC ]##", (-971));
      document0.getElementsByAttributeValueMatching("-]Lp+zk@zwny?", pattern0);
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      document0.select("html > head");
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      document0.id();
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      document0.classNames();
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      Document document0 = Parser.parse("<", "org.jsoup.nodes.Element");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document_OutputSettings0.outline(true);
      Document document1 = document0.outputSettings(document_OutputSettings0);
      document1.title("Mr>");
      document0.html();
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      Tag tag0 = Tag.valueOf("menuitem");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "menuitem", attributes0);
      formElement0.appendElement("menuitem");
      formElement0.outerHtml();
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("MD@#egYq<pY>n/1FCRc", "MD@#egYq<pY>n/1FCRc");
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "MD@#egYq<pY>n/1FCRc");
      // Undeclared exception!
      try { 
        document0.html(charBuffer0);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.StringCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document_OutputSettings0.prettyPrint(false);
      Document document0 = Parser.parseBodyFragmentRelaxed("U;kY#]b\"D", "U;kY#]b\"D");
      Document document1 = document0.outputSettings(document_OutputSettings0);
      document1.html();
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      Tag tag0 = Tag.valueOf("textarea");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "textarea", attributes0);
      formElement0.val("xFRQh");
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("textarea");
      FormElement formElement0 = new FormElement(tag0, "textarea", attributes0);
      formElement0.val();
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      Document document0 = new Document("MD@egPq<pY>K/1FCRc");
      document0.toggleClass("MD@egPq<pY>K/1FCRc");
      document0.toggleClass("MD@egPq<pY>K/1FCRc");
      document0.toggleClass("MD@egPq<pY>K/1FCRc");
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      Document document0 = new Document("MD@egPq<pY>K/1FCRc");
      document0.toggleClass("MD@egPq<pY>K/1FCRc");
      document0.toggleClass("MD@egPq<pY>K/1FCRc");
      document0.getElementsByClass("MD@egPq<pY>K/1FCRc");
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Document document0 = new Document("YQ/");
      document0.toggleClass("YQ/");
      Element element0 = document0.addClass("java.lang.string@0000000013");
      element0.addClass("Tag name must not be empty.");
      element0.hasClass("java.lang.string@0000000013");
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      Document document0 = new Document("org.jsoup.nodes.Element$2");
      document0.toggleClass("nth-chd");
      document0.toggleClass("=jka9vTts&8DBx");
      document0.getElementsByClass("Tag name must not be empty.");
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      Document document0 = Parser.parse("br", "br");
      CDataNode cDataNode0 = new CDataNode("XnnE$lj");
      document0.appendChild(cDataNode0);
      document0.data();
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Document document0 = Parser.parse("`H%>", "`H%>");
      DataNode dataNode0 = DataNode.createFromEncoded("Cookie map must not be null", "Cookie map must not be null");
      document0.appendChild(dataNode0);
      document0.data();
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Element", "org.jsoup.nodes.Element");
      Comment comment0 = new Comment("org.jsoup.nodes.Element");
      XmlDeclaration xmlDeclaration0 = comment0.asXmlDeclaration();
      document0.prependChild(xmlDeclaration0);
      document0.hasText();
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("5(", "5(");
      document0.setParentNode(document0);
      document0.getElementsContainingOwnText("5(");
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      TextNode textNode0 = new TextNode("|");
      Element.preserveWhitespace(textNode0);
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("mecnuitem", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("Ko{d@.-odBe");
      Attributes attributes0 = cDataNode0.attributes();
      Element element0 = new Element(tag0, "Ko{d@.-odBe", attributes0);
      element0.prependElement("br");
      element0.getElementsContainingOwnText("menute[");
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      Document document0 = Document.createShell("K}Ds h9PY]>d<");
      Element element0 = document0.append("zl'P!sa[9oH*m1'i6/B");
      element0.tagName("textarea");
      Pattern pattern0 = Pattern.compile("br");
      element0.getElementsMatchingText(pattern0);
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("org.jsoup.nodes.Element", "org.jsoup.nodes.Element");
      DocumentType documentType0 = new DocumentType("org.jsoup.nodes.Element", "templte", "templte");
      document0.prependChild(documentType0);
      document0.getElementsContainingOwnText("org.jsoup.select.StructuralEvaluator$ImmediatePreviousSibling");
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      Document document0 = Document.createShell("^");
      document0.append("#root");
      document0.prependText("^");
      document0.text();
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      Tag tag0 = Tag.valueOf("mecnuitem");
      CDataNode cDataNode0 = new CDataNode("mecnuitem");
      Attributes attributes0 = cDataNode0.attributes();
      Element element0 = new Element(tag0, "mecnuitem", attributes0);
      element0.prependElement("br");
      element0.prependChild(cDataNode0);
      element0.getElementsContainingText("XL");
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      Document document0 = Parser.parse("8:<ce$)v@|;2>n&'r", "u|o_Ajec$GIbQ");
      document0.text();
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("<!", "SI8G}W(!F:%");
      document0.text();
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      Document document0 = Parser.parse("InCell", "A1r7Ls<");
      document0.getElementById("option");
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      Document document0 = Parser.parse(" ", " ");
      Element element0 = document0.head();
      Element element1 = element0.lastElementSibling();
      element1.elementSiblingIndex();
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      document0.setParentNode(document0);
      document0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      document0.setParentNode(document0);
      document0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      Document document0 = Parser.parse("InCell", "A1r7Ls<");
      Element element0 = document0.body();
      element0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("template", "template");
      document0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("^", "^");
      Element element0 = document0.head();
      Elements elements0 = element0.nextElementSiblings();
      assertEquals(1, elements0.size());
      assertEquals("^", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      Document document0 = Parser.parse("4+8FoK", "4+8FoK");
      document0.nextElementSibling();
      assertEquals("4+8FoK", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("8u '!M8", "8u '!M8");
      Element element0 = document0.head();
      Element element1 = element0.nextElementSibling();
      assertNotNull(element1);
      assertEquals("body", element1.tagName());
      assertEquals("8u '!M8", element1.baseUri());
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Do$HsK", "Do$HsK");
      Element element0 = document0.head();
      Elements elements0 = element0.siblingElements();
      assertEquals("Do$HsK", element0.baseUri());
      assertEquals(1, elements0.size());
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("8;N3uho-Nrv3o4", "8;N3uho-Nrv3o4");
      document0.setParentNode(document0);
      Elements elements0 = document0.siblingElements();
      // Undeclared exception!
      try { 
        document0.insertChildren(1, (Collection<? extends Node>) elements0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("5(W", "5(W");
      Element element0 = document0.head();
      element0.before("5(W");
      String string0 = element0.cssSelector();
      assertEquals("html > head:nth-child(3)", string0);
      assertEquals("5(W", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      Document document0 = new Document("dP\"M>1~X?s=iH");
      document0.toggleClass("#root");
      document0.cssSelector();
      assertEquals("dP\"M>1~X?s=iH", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      Tag tag0 = Tag.valueOf("template");
      Attributes attributes0 = new Attributes();
      attributes0.put("id", "id");
      FormElement formElement0 = new FormElement(tag0, "template", attributes0);
      String string0 = formElement0.cssSelector();
      assertEquals("#id", string0);
      assertEquals("template", formElement0.baseUri());
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      Tag tag0 = Tag.valueOf("menuitem");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "menuitem", attributes0);
      Node[] nodeArray0 = new Node[1];
      // Undeclared exception!
      try { 
        formElement0.insertChildren(0, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array must not contain any null objects
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      Element element0 = new Element("$GN3v59[D");
      Node[] nodeArray0 = new Node[3];
      // Undeclared exception!
      try { 
        element0.insertChildren((-2318), nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      Document document0 = Document.createShell("");
      Node[] nodeArray0 = new Node[0];
      // Undeclared exception!
      try { 
        document0.insertChildren(25, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("W", "W");
      LinkedList<Node> linkedList0 = new LinkedList<Node>();
      // Undeclared exception!
      try { 
        document0.insertChildren(32, (Collection<? extends Node>) linkedList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      Document document0 = Parser.parse("Nh0#4:bvRsN9ONs|_", "org.jsoup.select.Evaluator$Id");
      List<DataNode> list0 = document0.dataNodes();
      // Undeclared exception!
      try { 
        document0.insertChildren((-2366), (Collection<? extends Node>) list0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("8;N3uho-Nrv3o4", "8;N3uho-Nrv3o4");
      Elements elements0 = document0.siblingElements();
      Element element0 = document0.insertChildren(1, (Collection<? extends Node>) elements0);
      assertEquals(1, element0.childNodeSize());
      assertEquals("8;N3uho-Nrv3o4", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("MD@#egYq<pY>n/1FCRc", "MD@#egYq<pY>n/1FCRc");
      DataNode dataNode0 = new DataNode("MD@#egYq<pY>n/1FCRc", "eenui|ea");
      document0.appendChild(dataNode0);
      document0.dataNodes();
      assertEquals(2, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("W", "W");
      Element element0 = document0.append("zl'P!sa[9oH*m1'i6/B");
      element0.textNodes();
      assertEquals(2, document0.childNodeSize());
      assertEquals("W", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      Document document0 = new Document("v(6");
      document0.html("[^-a-zA-Z0-9_:.]");
      document0.setParentNode(document0);
      document0.previousElementSiblings();
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      Document document0 = Document.createShell("v*T*Y_");
      Elements elements0 = document0.getElementsByIndexGreaterThan((-2905));
      assertEquals(4, elements0.size());
      assertEquals(1, document0.childNodeSize());
      assertEquals("v*T*Y_", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("+", "+");
      Element element0 = document0.selectFirst("html");
      assertEquals("+", element0.baseUri());
      assertEquals(2, element0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("nth-child", "nth-child");
      Elements elements0 = document0.getElementsMatchingText("(([+-])?(d+)?)n(s*([+-])?s*d+)?");
      assertEquals("nth-child", document0.baseUri());
      assertEquals(3, elements0.size());
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      Elements elements0 = document0.getAllElements();
      assertFalse(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      Document document1 = (Document)document0.removeClass("");
      assertFalse(document1.updateMetaCharsetElement());
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      Document document0 = Document.createShell("'4_u4'!M5zw");
      // Undeclared exception!
      try { 
        document0.before("'4_u4'!M5zw");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      Document document0 = Parser.parse("MD@ePq<pY>K/1FCRc", "head");
      document0.getElementsByAttribute("#root");
      assertEquals("head", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      Document document0 = new Document("p");
      document0.getElementsByAttributeValueNot("G", "java.lang.string@0000000057");
      assertEquals("p", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      Document document0 = new Document("java.lang.sting@000000113");
      Element element0 = document0.appendTo(document0);
      assertTrue(element0.hasParent());
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("f_T\u0002Y`WcC>>Q^liC", "f_T\u0002Y`WcC>>Q^liC");
      Element element0 = document0.shallowClone();
      assertEquals("f_T\u0002Y`WcC>>Q^liC", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      Document document0 = Parser.parse("\"lI", "\"lI");
      List<Node> list0 = document0.childNodesCopy();
      document0.childNodes = list0;
      // Undeclared exception!
      try { 
        document0.getElementsContainingOwnText("\"lI");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("]*T>~__", "]*T>~__");
      // Undeclared exception!
      try { 
        document0.after((Node) document0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      Tag tag0 = Tag.valueOf("br");
      CDataNode cDataNode0 = new CDataNode("06/}|v$55");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "06/}|v$55", attributes0);
      formElement0.getElementsByAttributeValueContaining("br", "s@q][L%");
      assertEquals("06/}|v$55", formElement0.baseUri());
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      Elements elements0 = document0.getElementsByAttributeValueMatching("T6kVz`nJ]", "body");
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("#s#cSF *xF,Pi4?,", "#s#cSF *xF,Pi4?,");
      Elements elements0 = document0.getElementsContainingText("#s#cSF *xF,Pi4?,");
      assertEquals(3, elements0.size());
      assertEquals("#s#cSF *xF,Pi4?,", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      Document document0 = Document.createShell("p");
      document0.getElementsByAttributeValueEnding("p", "T!y] ufGh!#r");
      assertEquals(1, document0.childNodeSize());
      assertEquals("p", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("o.jsoup.nodes.Element", "o.jsoup.nodes.Element");
      document0.is("html > head");
      assertEquals("o.jsoup.nodes.Element", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      Document document0 = Parser.parse("TagNme", "TagNme");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueMatching("'`77,sE~", "&oT/7(");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pattern syntax error: &oT/7(
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(")xVNX6_Tt[`0", ")xVNX6_Tt[`0");
      Elements elements0 = document0.getElementsByIndexEquals((-1117));
      assertEquals(")xVNX6_Tt[`0", document0.baseUri());
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeStarting("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("org.jsoup.nodes.Element$1", "org.jsoup.nodes.Element$1");
      Elements elements0 = document0.getElementsByIndexLessThan((-693));
      assertEquals("org.jsoup.nodes.Element$1", document0.baseUri());
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      Document document0 = Document.createShell("D8wS8{dK>I*");
      // Undeclared exception!
      try { 
        document0.after("class");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      Document document0 = Parser.parse(":containsData(text) query must not be empty", ":containsData(text) query must not be empty");
      Elements elements0 = document0.getElementsMatchingOwnText(":containsData(text) query must not be empty");
      assertEquals(":containsData(text) query must not be empty", document0.baseUri());
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("v*T*Y_", "v*T*Y_");
      // Undeclared exception!
      try { 
        document0.prepend((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "");
      Element element0 = document0.head();
      String string0 = element0.cssSelector();
      assertEquals("html > head", string0);
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("5(", "5(");
      document0.getElementsByAttributeValueStarting("5(", "0$B#S?");
      assertEquals("5(", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      Document document0 = Document.createShell("");
      document0.getElementsByAttributeValue(".", "\"O`*");
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("template", "template");
      document0.wholeText();
      assertEquals(1, document0.childNodeSize());
      assertEquals("template", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      Document document0 = Parser.parse("`H%>", "`H%>");
      // Undeclared exception!
      try { 
        document0.before((Node) document0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      Element element0 = null;
      try {
        element0 = new Element("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      Document document0 = Parser.parse("v*T*Y_", "v*T*Y_");
      // Undeclared exception!
      try { 
        document0.addClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      Document document0 = Parser.parse("4+8FoK", "4+8FoK");
      document0.dataset();
      assertEquals("4+8FoK", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("\"lI", "\"lI");
      // Undeclared exception!
      try { 
        document0.prependText((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      Document document0 = Parser.parse("p", "p");
      Element element0 = document0.child(0);
      assertEquals(0, element0.siblingIndex());
      assertNotNull(element0);
      assertEquals("p", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      Elements elements0 = document0.previousElementSiblings();
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      Document document0 = Parser.parse("p", "p");
      document0.prependElement("p");
      assertEquals(2, document0.childNodeSize());
      
      document0.child(0);
      assertFalse(document0.hasParent());
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      Document document0 = new Document(" ");
      Element element0 = document0.appendText(" ");
      boolean boolean0 = element0.hasText();
      assertEquals(1, document0.childNodeSize());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("#G;cHy0Hee", "#G;cHy0Hee");
      // Undeclared exception!
      try { 
        document0.wrap("e*R");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("^", "^");
      document0.nextElementSiblings();
  }
}
